{"version":3,"names":["TypePresets","getSampleLoadingStatusName","status","sampleLoadingState","constructor","this","statusTable","urlTable","totalSamples","samplesLoaded","SampleLoadedEvent","Event","super","SampleLoadEvents","EventTarget","sampleLoadEvents","startLoadingSample","url","chipWaveIndex","customSampleRate","sampleLoaderAudioContext","AudioContext","sampleRate","closedSampleLoaderAudioContext","chipWave","Config","chipWaves","rawChipWave","rawChipWaves","rawRawChipWave","rawRawChipWaves","fetch","then","response","ok","arrayBuffer","Promise","reject","Error","decodeAudioData","audioBuffer","samples","centerWave","Array","from","getChannelData","integratedSamples","performIntegral","dispatchEvent","close","catch","error","alert","getLocalStorageItem","key","defaultValue","value","localStorage","getItem","loadScript","resolve","willReloadForCustomSamples","script","document","createElement","src","head","appendChild","addEventListener","event","loadBuiltInSamples","set","defaultIntegratedSamples","defaultSamples","name","expression","isSampled","isPercussion","extraSampleDetune","length","startIndex","index","integratedChipWave","dictionary","chipWaveSamples","kicksample","snaresample","pianosample","WOWsample","overdrivesample","trumpetsample","saxophonesample","orchhitsample","detatchedviolinsample","synthsample","sonic3snaresample","comeonsample","choirsample","overdrivensample","flutesample","legatoviolinsample","tremoloviolinsample","amenbreaksample","pizzicatoviolinsample","timallengruntsample","tubasample","loopingcymbalsample","kickdrumsample","snaredrumsample","closedhihatsample","foothihatsample","openhihatsample","crashsample","pianoC4sample","liverpadsample","marimbasample","susdotwavsample","wackyboxttssample","peppersteak1","peppersteak2","vinyl","slapbass","hdeboverdrive","sunsoftbass","masculinechoir","femininechoir","southtololoche","harp","panflute","krumhorn","timpani","crowdhey","warioland4brass","warioland4organ","warioland4daow","warioland4hourchime","warioland4tick","kirbykick","kirbysnare","kirbybongo","kirbyclick","funkkick","funksnare","funksnareleft","funksnareright","funktomhigh","funktomlow","funkhihatclosed","funkhihathalfopen","funkhihatopen","funkhihatopentip","funkhihatfoot","funkcrash","funkcrashtip","funkride","chipWaveIndexOffset","chipWaveSample","chronoperc1finalsample","synthkickfmsample","woodclicksample","acousticsnaresample","catpaintboxsample","gameboypaintboxsample","mariopaintboxsample","drumpaintboxsample","yoshipaintboxsample","starpaintboxsample","fireflowerpaintboxsample","dogpaintbox","oinkpaintbox","swanpaintboxsample","facepaintboxsample","console","log","wave","sum","i","average","push","Float32Array","centerAndNormalizeWave","magn","Math","abs","magnAvg","cumulative","newWave","getDrumWave","inverseRealFourierTransform","scaleElementsByFactor","chipNoises","chipNoiseLength","drumBuffer","newBuffer","random","drawNoiseSpectrum","sqrt","round","ultraboxnewchipnoiserand","pow","clz32","b3","b4","b5","b6","b0","b1","b2","white","lastOut","waveLength","lowOctave","highOctave","lowPower","highPower","overallSlope","lowIndex","highIndex","min","retroWave","combinedAmplitude","lerped","log2","amplitude","radians","PI","cos","sin","generateSquareWave","phaseWidth","sineWaveLength","centerPoint","generateSawWave","inverse","getArpeggioPitchIndex","pitchCount","useFastTwoNoteArp","arpeggio","arpeggioPattern","arpeggioPatterns","toNameMap","array","result","effectsIncludeTransition","effects","effectsIncludeChord","effectsIncludePitchShift","effectsIncludeDetune","effectsIncludeVibrato","effectsIncludeNoteFilter","effectsIncludeDistortion","effectsIncludeBitcrusher","effectsIncludePanning","effectsIncludeChorus","effectsIncludeEcho","effectsIncludeReverb","thresholdVal","kneeVal","ratioVal","attackVal","releaseVal","scales","realName","flags","keys","isWhiteKey","basePitch","blackKeyNameParents","tempoMin","tempoMax","octaveMin","octaveMax","echoDelayRange","echoDelayStepTicks","echoSustainRange","echoShelfHz","echoShelfGain","reverbShelfHz","reverbShelfGain","reverbRange","reverbDelayBufferSize","reverbDelayBufferMask","beatsPerBarMin","beatsPerBarMax","barCountMin","barCountMax","instrumentCountMin","layeredInstrumentCountMax","patternInstrumentCountMax","partsPerBeat","ticksPerPart","ticksPerArpeggio","rhythms","stepsPerBeat","roundUpThresholds","instrumentTypeNames","instrumentTypeHasSpecialInterval","chipBaseExpression","fmBaseExpression","noiseBaseExpression","spectrumBaseExpression","drumsetBaseExpression","harmonicsBaseExpression","pwmBaseExpression","pickedStringBaseExpression","distortionBaseVolume","bitcrusherBaseVolume","raw","newArray","Object","assign","rawChipToIntegrated","firstIndexForSamplesInChipWaveList","pitchFilterMult","isSoft","filterFreqStep","filterFreqRange","filterFreqReferenceSetting","filterFreqReferenceHz","filterFreqMaxHz","filterFreqMinHz","filterGainRange","filterGainCenter","filterGainStep","filterMaxPoints","filterTypeNames","filterMorphCount","filterSimpleCutRange","filterSimplePeakRange","fadeInRange","fadeOutTicks","fadeOutNeutral","drumsetFadeOutTicks","transitions","isSeamless","continues","slides","slideTicks","includeAdjacentPatterns","vibratos","type","delayTicks","vibratoTypes","periodsSeconds","period","arpSpeedScale","unisons","voices","spread","offset","sign","effectNames","effectOrder","noteSizeMax","volumeRange","volumeLogScale","panCenter","panMax","panDelaySecondsMax","chorusRange","chorusPeriodSeconds","chorusDelayRange","chorusDelayOffsets","chorusPhaseOffsets","chorusMaxDelay","concat","reduce","x","y","max","chords","customInterval","arpeggiates","strumParts","singleTone","maxChordSize","operatorCount","maxPitchOrOperatorCount","algorithms","carrierCount","associatedCarrier","modulatedBy","algorithms6Op","operatorCarrierInterval","operatorAmplitudeMax","operatorFrequencies","mult","hzOffset","amplitudeSign","envelopes","speed","feedbacks","indices","feedbacks6Op","spectrumNoiseLength","spectrumBasePitch","spectrumControlPoints","spectrumControlPointsPerOctave","spectrumControlPointBits","spectrumMax","harmonicsControlPoints","harmonicsRendered","harmonicsRenderedForPickedString","harmonicsControlPointBits","harmonicsMax","harmonicsWavelength","pulseWidthRange","pulseWidthStepPower","pitchChannelCountMin","pitchChannelCountMax","noiseChannelCountMin","noiseChannelCountMax","modChannelCountMin","modChannelCountMax","noiseInterval","drumCount","pitchOctaves","modCount","maxPitch","pitchesPerOctave","maximumTonesPerChannel","justIntonationSemitones","map","pitchShiftRange","pitchShiftCenter","detuneCenter","detuneMax","detuneMin","songDetuneMin","songDetuneMax","sineWaveMask","sineWave","generateSineWave","pickedStringDispersionCenterFreq","pickedStringDispersionFreqScale","pickedStringDispersionFreqMult","pickedStringShelfHz","distortionRange","stringSustainRange","stringDecayRate","bitcrusherFreqRange","bitcrusherOctaveStep","bitcrusherQuantizationRange","maxEnvelopeCount","defaultAutomationRange","instrumentAutomationTargets","computeIndex","displayName","interleave","isFilter","maxCount","effect","compatibleInstruments","operatorWaves","asin","generateTriWave","drive","generateTrapezoidWave","generateRoundedSineWave","pwmOperatorWaves","barEditorHeight","modulators","pianoName","maxRawVol","newNoteVol","forSong","convertRealFactor","associatedEffect","promptName","promptDesc","ceil","undefined","newEDO","isMobile","test","navigator","userAgent","prettyNumber","toFixed","replace","EditorConfig","valueToPreset","presetValue","categoryIndex","presetIndex","presetCategories","presets","midiProgramToPresetValue","program","category","preset","generalMidi","midiProgram","nameToPresetValue","presetName","instrumentToPreset","instrument","_a","version","versionDisplayName","releaseNotesURL","isOnMac","platform","ctrlSymbol","ctrlName","customType","settings","eqFilter","transition","fadeInSeconds","chord","unison","cutoffHz","linearGain","vibrato","isNoise","filterCutoffHz","filterResonance","filterEnvelope","algorithm","feedbackType","feedbackAmplitude","operators","frequency","target","envelope","customChipWave","feedbackEnvelope","noteFilter","reverb","harmonics","stringSustain","midiSubharmonicOctaves","interval","bitcrusherOctave","bitcrusherQuantization","distortion","pulseWidth","chorus","spectrum","pulseEnvelope","drums","pitchShiftSemitones","volume","eqFilterType","eqSimpleCut","eqSimplePeak","eqSubFilters0","clicklessTransition","fastTwoNoteArp","arpeggioSpeed","detuneCents","vibratoDepth","vibratoDelay","vibratoSpeed","vibratoType","pan","panDelay","customChipWaveIntegral","eqSubFilters1","noteFilterType","noteSimpleCut","noteSimplePeak","noteSubFilters0","echoSustain","echoDelayBeats","waveform","noteSubFilters1","applyElementArgs","element","args","args_1","__values","args_1_1","next","done","arg","Node","createTextNode","isArray","Symbol","iterator","__spread","Element","_d","e_2","_e","setAttribute","join","warn","tagName","_f","e_3","_g","styleKey","style","setProperty","removeAttribute","svgNS","HTML","_i","arguments","createRange","createContextualFragment","SVG","fragment","createDocumentFragment","svgParser","DOMParser","parseFromString","documentElement","firstChild","importNode","name_1","_c","split","name_2","createElementNS","snakeCaseName","ColorConfig","resetColors","colorLookup","clear","getArbitaryChannelColor","channel","getComputedStyle","_styleElement","getPropertyValue","trim","base","noiseChannels","modChannels","pitchChannels","regex","secondaryChannel","getComputed","exec","primaryChannel","secondaryNote","primaryNote","noiseSecondaryChannelHue","noiseSecondaryChannelHueScale","noiseSecondaryChannelSat","noiseSecondaryChannelSatScale","noiseSecondaryChannelLum","noiseSecondaryChannelLumScale","noisePrimaryChannelHue","noisePrimaryChannelHueScale","noisePrimaryChannelSat","noisePrimaryChannelSatScale","noisePrimaryChannelLum","noisePrimaryChannelLumScale","noiseSecondaryNoteHue","noiseSecondaryNoteHueScale","noiseSecondaryNoteSat","noiseSecondaryNoteSatScale","noiseSecondaryNoteLum","noiseSecondaryNoteLumScale","noisePrimaryNoteHue","noisePrimaryNoteHueScale","noisePrimaryNoteSat","noisePrimaryNoteSatScale","noisePrimaryNoteLum","noisePrimaryNoteLumScale","newChannelColors","modSecondaryChannelHue","modSecondaryChannelHueScale","modSecondaryChannelSat","modSecondaryChannelSatScale","modSecondaryChannelLum","modSecondaryChannelLumScale","modPrimaryChannelHue","modPrimaryChannelHueScale","modPrimaryChannelSat","modPrimaryChannelSatScale","modPrimaryChannelLum","modPrimaryChannelLumScale","modSecondaryNoteHue","modSecondaryNoteHueScale","modSecondaryNoteSat","modSecondaryNoteSatScale","modSecondaryNoteLum","modSecondaryNoteLumScale","modPrimaryNoteHue","modPrimaryNoteHueScale","modPrimaryNoteSat","modPrimaryNoteSatScale","modPrimaryNoteLum","modPrimaryNoteLumScale","pitchSecondaryChannelHue","pitchSecondaryChannelHueScale","pitchSecondaryChannelSat","pitchSecondaryChannelSatScale","pitchSecondaryChannelLum","pitchSecondaryChannelLumScale","pitchPrimaryChannelHue","pitchPrimaryChannelHueScale","pitchPrimaryChannelSat","pitchPrimaryChannelSatScale","pitchPrimaryChannelLum","pitchPrimaryChannelLumScale","pitchSecondaryNoteHue","pitchSecondaryNoteHueScale","pitchSecondaryNoteSat","pitchSecondaryNoteSatScale","pitchSecondaryNoteLum","pitchSecondaryNoteLumScale","pitchPrimaryNoteHue","pitchPrimaryNoteHueScale","pitchPrimaryNoteSat","pitchPrimaryNoteSatScale","pitchPrimaryNoteLum","pitchPrimaryNoteLumScale","floor","getComputedChannelColor","song","getChannelColor","pitchChannelCount","noiseChannelCount","has","get","setTheme","theme","themes","textContent","themeColor","querySelector","Map","forest","canyon","midnight","beachcombing","roe","moonlight","autumn","fruit","sunset","toxic","portal","fusion","nebula","energized","neapolitan","mono","zefbox","harrybox","brucebox","nerdbox","fogbox","foxbox","wackybox","microbox","slushie","custom","pageMargin","editorBackground","hoverPreview","playhead","primaryText","secondaryText","invertedText","textSelection","boxSelectionFill","loopAccent","linkAccent","uiWidgetBackground","uiWidgetFocus","pitchBackground","tonic","fifthNote","whitePianoKey","blackPianoKey","whitePianoKeyText","blackPianoKeyText","useColorFormula","trackEditorBgPitch","trackEditorBgPitchDim","trackEditorBgNoise","trackEditorBgNoiseDim","trackEditorBgMod","trackEditorBgModDim","multiplicativeModSlider","overwritingModSlider","indicatorPrimary","indicatorSecondary","select2OptGroup","inputBoxOutline","muteButtonNormal","muteButtonMod","modLabelPrimary","modLabelSecondaryText","modLabelPrimaryText","disabledNotePrimary","disabledNoteSecondary","scrollBarTest","body","div","clientWidth","classList","add","removeChild","BarScrollBar","_doc","_trackContainer","_editorWidth","_editorHeight","_playhead","rect","fill","width","height","_notches","svg","_handle","_handleHighlight","stroke","_leftHighlight","path","_rightHighlight","_renderedPlayhead","_svg","container","class","_mouseX","_mouseDown","_mouseOver","_dragging","_renderedNotchCount","_renderedScrollBarPos","animatePlayhead","_notchSpace","synth","_onScroll","barScrollPos","scrollLeft","getBarWidth","_whenMouseOver","_updatePreview","_whenMouseOut","_whenMousePressed","preventDefault","boundingRect","getBoundingClientRect","clientX","pageX","left","trackVisibleBars","_dragStart","_whenTouchPressed","touches","_whenMouseMoved","_whenCursorMoved","_whenTouchMoved","_whenCursorReleased","notifier","changed","barCount","center","capture","passive","changePos","showleftHighlight","showRightHighlight","showHandleHighlight","visibility","render","resized","lineHeight","channelScrollPos","getChannelCount","trackVisibleChannels","String","scrollTop","getChannelHeight","factor","countBits","n","isPowerOf2","fullArrayLength","totalPasses","pass","subStride","midSubStride","stride","radiansIncrement","cosIncrement","sinIncrement","oscillatorMultiplier","startIndexA","midIndexA","startIndexB","midIndexB","stopIndex","realStartA","imagStartB","c","s","cPrev","sPrev","indexA0","indexA1","indexB0","indexB1","real0","real1","imag0","imag1","tempA","tempB","cTemp","sTemp","index1","index2","index3","imag2","imag3","bitCount","finalShift","j","temp","reverseIndexBits","Deque","_capacity","_buffer","_mask","_offset","_count","pushFront","_expandCapacity","pushBack","popFront","popBack","peakFront","peakBack","count","remove","oldBuffer","size","events","activeEvents","listeners","raise","eventType","eventData","extraEventData","pop","listen","callback","unlisten","lisen","indexOf","splice","unlistenAll","FilterCoefficients","a","b","order","linearGain0thOrder","lowPass1stOrderButterworth","cornerRadiansPerSample","g","tan","a0","lowPass1stOrderSimplified","highPass1stOrderButterworth","highShelf1stOrder","shelfLinearGain","sqrtGain","allPass1stOrderInvertPhaseAbove","allPass1stOrderFractionalDelay","delay","lowPass2ndOrderButterworth","peakLinearGain","alpha","lowPass2ndOrderSimplified","feedback","highPass2ndOrderButterworth","peak2ndOrder","bandWidthScale","bandWidth","FrequencyResponse","real","imag","denom","analyze","filter","radiansPerSample","analyzeComplex","realZ1","imagZ1","realNum","imagNum","realDenom","imagDenom","realZ","imagZ","imagTemp","magnitude","angle","atan2","DynamicBiquadFilter","a1","a2","a1Delta","a2Delta","b0Delta","b1Delta","b2Delta","output1","output2","useMultiplicativeInputCoefficients","resetOutput","loadCoefficientsWithGradient","start","end","deltaRate","epsilon","clamp","val","validateRange","encode32BitNumber","buffer","base64IntToCharCode","decode32BitNumber","compressed","charIndex","base64CharCodeToInt","charCodeAt","convertLegacyKeyToKeyAndOctave","rawKeyIndex","octave","BitFieldReader","source","_bits","_readIndex","read","readLongTail","minValue","minBits","numBits","readPartDuration","readLegacyPartDuration","readPinCount","readPitchInterval","BitFieldWriter","_index","write","writeLongTail","writePartDuration","writePinCount","writePitchInterval","other","encodeBase64","lengthBase64","makeNotePin","time","Note","pitch","fadeout","pitches","pins","continuesLastPattern","pickMainInterval","longestFlatIntervalDuration","mainInterval","pinIndex","pinA","pinB","duration","loudestSize","pin","clone","newNote","getEndPinIndex","part","endPinIndex","Pattern","notes","instruments","cloneNotes","note","reset","toJsonObject","isModChannel","noteArray","mod","volumeCap","getVolumeCapForSetting","modFilterTypes","pointArray","useVol","tick","rhythm","pitchBend","forMod","noteObject","points","patternObject","patternInstruments","fromJsonObject","importedPartsPerBeat","isNoiseChannel","instrumentCount","getMaxInstrumentsPerPatternForChannel","maxNoteCount","beatsPerBar","k","startInterval","pointObject","lowestPitch","highestPitch","Operator","copy","CustomAlgorithm","fromPreset","carriers","modulation","CustomFeedBack","inIndices","SpectrumWave","hash","isHarmonic","markCustomWaveDirty","hashMult","Synth","fittingPowerOfTwo","point","SpectrumWaveState","_hash","getCustomWave","lowestOctave","pitchTweak","controlPointToOctave","value1","value2","octave1","octave2","HarmonicsWave","HarmonicsWaveState","instrumentType","_generatedForType","combinedControlPointAmplitude","harmonicIndex","harmonicFreq","controlValue","normalizedValue","performIntegralOld","FilterControlPoint","freq","gain","freqSetting","gainSetting","getHz","getHzFromSettingValue","getSettingValueFromHz","hz","getRoundedSettingValueFromHz","getLinearGain","peakMult","power","neutral","interpolatedPower","getRoundedSettingValueFromLinearGain","toCoefficients","freqMult","getVolumeCompensationMult","gainPow","freqRelativeTo8khz","warpedFreq","warpedOctave","distanceFromCenter","freqLoudness","FilterSettings","controlPoints","controlPointCount","addPoint","controlPoint","filterArray","filterObject","filtersCanMorph","filterA","filterB","lerpFilters","pos","lerpedFilter","convertLegacySettings","legacyCutoffSetting","legacyResonanceSetting","legacyEnv","legacyFilterMaxRadians","legacyFilterMax","resonant","firstOrder","cutoffAtMax","legacyFilterCutoffRange","envDecays","standardSampleRate","legacyHz","legacyRadians","extraOctaves","targetRadians","curvedHz","finalHz","finalRadians","legacyFilter","legacyFilterGainAtNewRadians","logGain","convertedGain","intendedGain","invertedGain","curvedRadians","legacyFilterGain","convertLegacySettingsForSynth","allowFirstOrder","EnvelopeSettings","envelopeObject","Instrument","isUsingAdvancedLoopControls","chipWaveLoopStart","chipWaveLoopEnd","chipWaveLoopMode","chipWavePlayBackwards","chipWaveStartOffset","chipNoise","eqFilterSimpleCut","eqFilterSimplePeak","noteFilterSimpleCut","noteFilterSimplePeak","eqSubFilters","noteSubFilters","fadeIn","fadeOut","envelopeCount","pitchShift","detune","legacyTieOver","aliases","bitcrusherFreq","echoDelay","algorithm6Op","feedbackType6Op","customAlgorithm","customFeedbackType","LFOtime","nextLFOtime","arpTime","harmonicsWave","drumsetEnvelopes","drumsetSpectrumWaves","modInstruments","invalidModulators","spectrumWave","wavePrev","setTypeAndReset","legacySettings","forceSimpleFilter","filterCutoff","legacyFilterEnv","legacyPulseEnv","legacyOperatorEnvelopes","operatorEnvelopes","legacyFeedbackEnv","noCarriersControlledByNoteSize","allCarriersControlledByNoteSize","noteSizeControlsSomethingElse","addEnvelope","instrumentObject","getChord","detuneToCents","fadeInSettingToSeconds","fadeOutSettingToTicks","getDrumsetEnvelope","operatorArray","operator","customFeedback","Float64Array","useSlowerRhythm","legacyGlobalReverb","legacyEffectsNames","transitionProperty","binary","seamless","sudden","hard","smooth","soft","slide","secondsToFadeInSetting","ticksToFadeOutSetting","chordProperty","legacyChordNames","harmony","unisonProperty","legacyChorusNames","union","fifths","octaves","centsToDetune","vibratoProperty","legacyVibratoNames","isNaN","findIndex","legacyEnvelopeNames","steady","getEnvelope","drum","legacyWaveNames","triangle","square","sawtooth","spiky","plateau","modboxWaveNames","sax","guitar","viola","brass","lyre","piccolo","squaretooth","flatline","sandboxWaveNames","euphonium","recorder","contrabass","zefboxWaveNames","squaretal","sawtal","pulse","miscWaveNames","test1","intense","paandorasboxWaveNames","kick","snare","piano1","WOW","overdrive","trumpet","saxophone","orchestrahit","sonic3snare","choir","overdriveguitar","flute","tuba","loopingcymbal","standardkick","standardsnare","closedhihat","foothihat","openhihat","crashcymbal","pianoC4","marimba","susdotwav","wackyboxtts","rawName","table","potentialChipWaveIndex","feedback6Op","operatorObject","filterCutoffMaxHz","filterCutoffRange","filterResonanceRange","LN2","legacyToCutoff","legacyToEnvelope","filterNames","oldFilterNames","envelopeArray","tempEnvelope","frequencyFromPitch","makeEmpty","supportsEnvelopeTarget","envelopeSettings","automationTarget","useControlPointCount","clearInvalidEnvelopeTargets","envelopeIndex","getTransition","getFadeInSeconds","getFadeOutTicks","Channel","patterns","bars","muted","Song","string","scaleCustom","channels","limitDecay","limitRise","compressionThreshold","limitThreshold","compressionRatio","limitRatio","masterGain","inVolumeCap","outVolumeCap","getNewNoteVolume","isMod","modChannel","modInstrument","vol","tempoIndex","tempo","getVolumeCap","modulator","cap","modSetting","filterType","fromBase64String","initToDefault","modChannelCount","getMaxInstrumentsPerChannel","layeredInstruments","getMaxInstrumentsPerPattern","channelIndex","getChannelIsNoise","getChannelIsMod","andResetChannels","scale","loopStart","loopLength","patternsPerChannel","title","pattern","bar","toBase64String","bits","_variant","_latestUltraBoxVersion","encodedSongTitle","encodeURIComponent","encodedChannelName","usingSubFilterBitfield","harmonicsBits","encodedLoopMode","encodedReleaseMode","o","spectrumBits","neededBits","shapeBits","bitsPerNoteSize","getNeededBits","maxInstrumentsPerPattern","neededInstrumentCountBits","neededInstrumentIndexBits","neededModInstrumentIndexBits","instrumentIndex","modFilter","octaveOffset","lastPitch","recentPitches","recentShapes","curPart","shapePart","startPitch","currentPitch","pitchBends","nextPitch","shapeString","fromCharCode","apply","shapeIndex","unshift","allPitches","pitchIndex","pitchIter","stringLength","digits","prototype","maxApplyArgs","customSamplesStr","customSamples","slice","_envelopeFromLegacyIndex","legacyIndex","_clearSamples","JSON","parse","substring","variantTest","fromBeepBox","fromJummBox","fromGoldBox","fromUltraBox","_latestBeepboxVersion","_oldestBeepboxVersion","_latestJummBoxVersion","_oldestJummBoxVersion","_latestGoldBoxVersion","_oldestGoldBoxVersion","_oldestUltraBoxVersion","beforeTwo","beforeThree","beforeFour","beforeFive","beforeSix","beforeSeven","beforeEight","beforeNine","compressed_array","replaceAll","shift","_restoreChipWaveListToDefault","willLoadLegacySamples","willLoadNintariboxSamples","willLoadMarioPaintboxSamples","customSampleUrls","customSamplePresets","toLowerCase","_parseAndConfigureCustomSample","customSamplePresetsMap","legacySettingsCache","command","instrumentChannelIterator","instrumentIndexIterator","useSlowerArpSpeed","songNameLength","decodeURIComponent","channelCount","instrumentsPerChannel","instrumentsFlagBits","newRhythm","legacyWaves","chipWaveReal","chipWaveCounter","chipWaveForCompat","URL","location","href","reload","typeCheck","originalControlPointCount","originalSubfilterControlPointCount","sampleLoopInfoEncodedLength","sampleLoopInfoEncoded","sampleLoopInfo","atob","entry","info","Boolean","pregoldToEnvelope","aa","legacyEffects","legacyEnvelopes","originalValue","nextValue","restoreLimiterDefaults","channelNameLength","carrierCountTemp","tempModArray","freqToGold3","freqToUltraBox","pre3To3g","old","jummToG","byteCount","subStringLength","bitStringLength","largerChords","recentPitchBitLength","recentPitchLength","bitStringLengthLength","songReverbChannel","songReverbInstrument","songReverbIndex","jumfive","forNoteFilter","detuneScaleNotes","newPattern","newNotes","noteCount","useOldShape","shape","pinCount","initialSize","bendCount","pinObj","intervalIter","isBackwards","restLength","patternIndex","lowestPart","chn","_isProperUrl","customSampleUrlIndex","urlSliced","isCustomPercussive","customRootKey","presetIsUsingAdvancedLoopControls","presetChipWaveLoopStart","presetChipWaveLoopEnd","presetChipWaveStartOffset","presetChipWaveLoopMode","presetChipWavePlayBackwards","parsedSampleOptions","optionsStartIndex","optionsEndIndex","rawOptions","rawOption","optionCode","charAt","optionData","parseFloat","parseInt","parsedUrl","sliceForSampleRate","sliceForRootKey","urlWithNamedOptions","namedOptions","pathname","isCustomSampled","rootKey","customSamplePresetSettings","enableIntro","loopCount","enableOutro","channelArray","instrumentArray","patternArray","sequenceArray","l","channelObject","sequence","format","_format","customScale","keyOctave","introBars","loopBars","ticksPerBeat","beatsPerMinute","jsonObject","shouldLoadLegacySamples","instrumentObjects","waveName","names","oldNames","veryOldNames","includes","oldScaleNames","enigma","scaleName","letter","toUpperCase","symbol","C","D","E","F","G","A","B","maxInstruments","maxPatterns","maxBars","newPitchChannels","newNoiseChannels","newModChannels","window","setTimeout","getPattern","getBeatsPerMinute","maxValue","PickedString","delayLine","allPassG","allPassGDelta","shelfA1","shelfA1Delta","shelfB0","shelfB0Delta","shelfB1","shelfB1Delta","delayIndex","allPassSample","allPassPrevInput","shelfSample","shelfPrevInput","fractionalDelaySample","prevDelayLength","delayResetOffset","update","instrumentState","tone","stringIndex","roundedSamplesPerTick","stringDecayStart","stringDecayEnd","allPassCenter","samplesPerSecond","shelfRadians","decayCurveStart","decayCurveEnd","phaseDeltaStart","phaseDeltas","phaseDeltaScale","phaseDeltaScales","phaseDeltaEnd","radiansPerSampleStart","radiansPerSampleEnd","centerHarmonicStart","centerHarmonicEnd","allPassRadiansStart","allPassRadiansEnd","decayRateStart","decayRateEnd","shelfGainStart","shelfGainEnd","expressionDecayStart","expressionDecayEnd","tempFilterStartCoefficients","tempFrequencyResponse","allPassGStart","allPassPhaseDelayStart","tempFilterEndCoefficients","allPassGEnd","allPassPhaseDelayEnd","shelfA1Start","shelfB0Start","shelfB1Start","shelfPhaseDelayStart","shelfA1End","shelfB0End","shelfB1End","shelfPhaseDelayEnd","periodLengthStart","periodLengthEnd","minBufferLength","delayLength","delayLengthEnd","delayLengthDelta","pitchChanged","reinitializeImpulse","likelyMaximumLength","newDelayLine","oldDelayBufferMask","startCopyingFromIndex","delayBufferMask","startImpulseFrom","startZerosFrom","stopZerosAt","impulseWave","impulseWaveLength","impulsePhaseDelta","fadeDuration","startImpulseFromSample","stopImpulseAt","stopImpulseAtSample","impulsePhase","prevWaveIntegral","impulsePhaseInt","nextWaveIntegral","phaseRatio","sample","combinedFade","curvedFade","EnvelopeComputer","noteSecondsStart","noteSecondsEnd","noteTicksStart","noteTicksEnd","noteSizeStart","noteSizeEnd","prevNoteSize","nextNoteSize","_noteSizeFinal","prevNoteSecondsStart","prevNoteSecondsEnd","prevNoteTicksStart","prevNoteTicksEnd","_prevNoteSizeFinal","prevSlideStart","prevSlideEnd","nextSlideStart","nextSlideEnd","prevSlideRatioStart","prevSlideRatioEnd","nextSlideRatioStart","nextSlideRatioEnd","envelopeStarts","envelopeEnds","_modifiedEnvelopeIndices","_modifiedEnvelopeCount","lowpassCutoffDecayVolumeCompensation","computeEnvelopes","currentPart","tickTimeStart","secondsPerTick","atNoteStart","forceContinueAtStart","tickTimeEnd","beatsPerTick","beatTimeStart","beatTimeEnd","passedEndOfNote","startPin","endPin","startPinTick","endPinTick","ratioStart","ratioEnd","noteStartTick","noteStartPart","noteEndTick","noteEndPart","maximumSlideTicks","prevNote","nextNote","forceContinueAtEnd","usedNoteSize","targetIndex","envelopeStart","computeEnvelope","envelopeEnd","filterSettings","tmpNoteFilterStart","getLowpassCutoffDecayVolumeCompensation","clearEnvelopes","beats","noteSize","noteSizeToVolumeMult","attack","lin","Tone","chordSize","drumsetPitch","prevNotePitchIndex","nextNotePitchIndex","freshlyAllocated","isOnLastTick","ticksSinceReleased","liveInputSamplesHeld","lastInterval","noiseSample","stringSustainStart","stringSustainEnd","phases","directions","chipWaveCompletions","chipWavePrevWaves","chipWaveCompletionsLastWave","expressionDelta","operatorExpressions","operatorExpressionDeltas","prevPitchExpressions","prevVibrato","prevStringDecay","pulseWidthDelta","pickedStrings","noteFilters","noteFilterCount","initialNoteFilterInput1","initialNoteFilterInput2","specialIntervalExpressionMult","feedbackOutputs","feedbackMult","feedbackDelta","stereoVolumeLStart","stereoVolumeRStart","stereoVolumeLDelta","stereoVolumeRDelta","stereoDelayStart","stereoDelayEnd","stereoDelayDelta","customVolumeStart","customVolumeEnd","filterResonanceStart","filterResonanceDelta","isFirstOrder","envelopeComputer","pickedString","InstrumentState","awake","computed","tonesAddedInThisTick","flushingDelayLines","deactivateAfterThisTick","attentuationProgress","flushedSamples","activeTones","activeModTones","releasedTones","liveInputTones","synthesizer","noisePitchFilterMult","volumeScale","eqFilterVolume","eqFilterVolumeDelta","mixVolume","mixVolumeDelta","delayInputMult","delayInputMultDelta","distortionDelta","distortionDrive","distortionDriveDelta","distortionFractionalInput1","distortionFractionalInput2","distortionFractionalInput3","distortionPrevInput","distortionNextOutput","bitcrusherPrevInput","bitcrusherCurrentOutput","bitcrusherPhase","bitcrusherPhaseDelta","bitcrusherPhaseDeltaScale","bitcrusherScale","bitcrusherScaleScale","bitcrusherFoldLevel","bitcrusherFoldLevelScale","eqFilters","eqFilterCount","initialEqFilterInput1","initialEqFilterInput2","panningDelayLine","panningDelayPos","panningVolumeL","panningVolumeR","panningVolumeDeltaL","panningVolumeDeltaR","panningOffsetL","panningOffsetR","panningOffsetDeltaL","panningOffsetDeltaR","chorusDelayLineL","chorusDelayLineR","chorusDelayLineDirty","chorusDelayPos","chorusPhase","chorusVoiceMult","chorusVoiceMultDelta","chorusCombinedMult","chorusCombinedMultDelta","echoDelayLineL","echoDelayLineR","echoDelayLineDirty","echoDelayPos","echoDelayOffsetStart","echoDelayOffsetEnd","echoDelayOffsetRatio","echoDelayOffsetRatioDelta","echoMult","echoMultDelta","echoShelfA1","echoShelfB0","echoShelfB1","echoShelfSampleL","echoShelfSampleR","echoShelfPrevInputL","echoShelfPrevInputR","reverbDelayLine","reverbDelayLineDirty","reverbDelayPos","reverbMult","reverbMultDelta","reverbShelfA1","reverbShelfB0","reverbShelfB1","reverbShelfSample0","reverbShelfSample1","reverbShelfSample2","reverbShelfSample3","reverbShelfPrevInput0","reverbShelfPrevInput1","reverbShelfPrevInput2","reverbShelfPrevInput3","allocateNecessaryBuffers","samplesPerTick","panningDelayBufferSize","chorusDelayBufferSize","safeEchoDelaySteps","safeEchoDelayBufferSize","newDelayLineL","newDelayLineR","oldMask","deactivate","resetAllEffects","compute","getInstrumentSynthFunction","updateWaves","usesDistortion","usesBitcrusher","usesPanning","usesChorus","usesEcho","usesReverb","useDistortionStart","useDistortionEnd","isModActive","getModValue","distortionSliderStart","distortionSliderEnd","distortionStart","distortionEnd","distortionDriveStart","distortionDriveEnd","freqSettingStart","freqSettingEnd","quantizationSettingStart","quantizationSettingEnd","freqStart","freqEnd","scaleStart","scaleEnd","foldLevelStart","foldLevelEnd","eqFilterSettingsStart","eqFilterSettingsEnd","startPoint","startSimpleFreq","startSimpleGain","endSimpleFreq","endSimpleGain","filterChanges","endPoint","eqFilterSettings","tmpEqFilterStart","tmpEqFilterEnd","mainInstrumentVolume","instrumentVolumeToVolumeMult","mixVolumeEnd","startVal","endVal","eqFilterVolumeStart","eqFilterVolumeEnd","delayInputMultStart","delayInputMultEnd","usePanStart","usePanEnd","panStart","panEnd","volumeStartL","volumeStartR","volumeEndL","volumeEndR","maxDelaySamples","usePanDelayStart","usePanDelayEnd","delayStart","delayEnd","delayStartL","delayStartR","delayEndL","delayEndR","useChorusStart","useChorusEnd","chorusStart","chorusEnd","chorusCombinedMultStart","chorusCombinedMultEnd","maxEchoMult","averageEchoDelaySeconds","useEchoSustainStart","useEchoSustainEnd","echoMultStart","echoMultEnd","useEchoDelayStart","useEchoDelayEnd","ignoreTicks","tmpEchoDelayOffsetStart","tmpEchoDelayOffsetEnd","maxReverbMult","useReverbStart","useReverbEnd","reverbStart","reverbEnd","totalDelaySamples","attenuationThreshold","halfLifeMult","delayDuration","attenuationPerSecond","averageMult","averageReverbDelaySeconds","progressInTick","progressAtEndOfTick","_drumsetIndexToSpectrumOctave","getDrumsetWave","drumsetIndexReferenceDelta","ChannelState","singleSeamlessInstrument","syncSongState","channelState","warmUpSynthesizer","getSamplesPerTick","tmpNoteFilterEnd","dummyArray","isPlayingSong","synthesize","computeLatestModValues","latestModTimes","latestModInsTimes","modValues","nextModValues","modInsValues","nextModInsValues","beat","currentBar","instrumentIdx","latestPinParts","latestPinValues","partsInBar","findPartsInBar","pinIdx","transitionLength","toNextBarLength","deltaVolume","setModValue","usedInstruments","tgtPattern","eqFilterParam","noteFilterParam","modulatorAdjust","tgtInstrument","determineInvalidModulators","tgtInstrumentList","str","operatorAmplitudeCurve","playing","recording","isRecording","playheadInternal","remainder","tickSampleCountdown","isAtStartOfTick","prevBar","getSamplesPerBar","getTicksIntoBar","getCurrentPart","getTotalSamples","loop","startBar","endBar","hasTempoMods","hasNextBarMods","prevTempo","latestTempoPin","latestTempoValue","ended","foundMod","find","sort","getSamplesPerTickSpecificBPM","tickLength","prevPinTempo","currPinTempo","bpmScalar","getTotalBars","useLoopCount","loopRepeatCount","preferLowerLatency","anticipatePoorPerformance","liveInputDuration","liveInputStarted","liveInputPitches","liveInputChannel","liveInputInstruments","oscRefreshEventTimer","oscEnabled","enableMetronome","countInMetronome","renderingSong","wantToSkip","nextBar","isAtEndOfTick","liveInputEndTime","browserAutomaticallyClearsAudioBuffer","tempDrumSetControlPoint","tonePool","tempMatchedPitchTones","startedMetronome","metronomeSamplesRemaining","metronomeAmplitude","metronomePrevAmplitude","metronomeFilter","limit","tempMonoInstrumentSampleBuffer","audioCtx","scriptNode","audioProcessCallback","audioProcessingEvent","outputBuffer","outputDataL","outputDataR","performance","now","deactivateAudio","computeDelayBufferSizes","setSong","panningDelayBufferMask","chorusDelayBufferMask","activateAudio","bufferSize","latencyHint","webkitAudioContext","createScriptProcessor","createJavaScriptNode","onaudioprocess","channelCountMode","channelInterpretation","connect","destination","resume","disconnect","maintainLiveInput","play","pause","startRecording","resetEffects","freeAllTones","volumeStart","volumeEnd","setting","nextVal","isAnyModActive","unsetMod","isFilterModActive","channelIdx","snapToStart","snapToBar","goToBar","jumpIntoLoop","oldBar","goToNextBar","goToPrevBar","getNextBar","skipBar","outputBufferLength","playSong","skippedBars","firstSkippedBufferIndex","bufferIndex","samplesLeftInBuffer","samplesLeftInTick","runLength","runEnd","determineCurrentActiveTones","playModTone","barVisited","determineLiveInputTones","tonesPlayedInThisInstrument","freeReleasedTone","shouldFadeOutFast","computeTone","playTone","effectsSynth","startRatio","endRatio","ticksIntoBar","partTimeTickStart","partTimeTickEnd","partTimeStart","partTimeEnd","useVibratoSpeed","midBeat","periods","samplesPerPeriod","tempAmplitude","sampleL","sampleR","absL","absR","limitRange","limitTarget","limitedVolume","useArpeggioSpeed","Number","isInteger","isFinite","freeTone","newTone","releaseTone","toneIndex","toneList","toneCount","moveTonesIntoOrderedTempMatchedList","clearTempMatchedPitchTones","adjacentPatternHasCompatibleInstrumentTransition","otherPattern","otherNote","forceContinue","otherInstrument","otherTransition","adjacentNotesHaveMatchingPitches","firstNote","secondNote","firstNoteInterval","notePitches","currentTick","prevNotes","nextNotes","fillCount","modToneCount","newInstrumentIndex","sourceInstrumentState","destInstrumentState","prevNoteForThisInstrument","nextNoteForThisInstrument","oldTone","partsPerBar","tonesInPrevNote","tonesInNextNote","prevPattern","lastNote","patternForcesContinueAtStart","chordOfCompatibleInstrument","nextPattern","nextPatternForcesContinueAtStart","strumOffsetParts","prevNoteForThisTone","noteForThisTone","nextNoteForThisTone","released","modSynth","computeChordExpression","chordExpression","intervalScale","secondsPerPart","sampleTime","beatsPerPart","specialIntervalMult","toneIsOnLastTick","intervalStart","intervalEnd","fadeExpressionStart","fadeExpressionEnd","chordExpressionStart","chordExpressionEnd","expressionReferencePitch","baseExpression","pitchDamping","chipWaveLength","firstOffset","lastOffset","getOperatorWave","startTicksSinceReleased","endTicksSinceReleased","pinStart","pinEnd","noteTicksPassedTickStart","noteTicksPassedTickEnd","pinRatioStart","pinRatioEnd","noteLengthTicks","tmpNoteFilter","noteFilterSettingsStart","noteFilterSettingsEnd","intervalDiff","chordSizeDiff","pitchShiftScalarStart","pitchShiftScalarEnd","modDetuneStart","modDetuneEnd","vibratoAmplitudeStart","vibratoAmplitudeEnd","vibratoStart","POSITIVE_INFINITY","getLFOAmplitude","ticksUntilVibratoStart","lfoEnd","vibratoDepthEnvelopeEnd","vibratoEnd","ticksUntilVibratoEnd","noteFilterExpression","noteAllFreqsEnvelopeStart","noteAllFreqsEnvelopeEnd","noteFreqEnvelopeStart","noteFreqEnvelopeEnd","notePeakEnvelopeStart","notePeakEnvelopeEnd","noteFilterSettings","drumsetFilterEnvelope","drumsetFilterEnvelopeStart","drumsetFilterEnvelopeEnd","sineExpressionBoost","totalCarrierExpression","arpeggioInterval","associatedCarrierIndex","pitchStart","pitchEnd","baseFreqStart","baseFreqEnd","targetFreqStart","targetFreqEnd","freqEnvelopeStart","freqEnvelopeEnd","amplitudeStart","amplitudeEnd","amplitudeCurveStart","amplitudeCurveEnd","expressionStart","expressionEnd","pitchExpressionStart","pitchExpressionEnd","useFeedbackAmplitudeStart","useFeedbackAmplitudeEnd","feedbackAmplitudeStart","feedbackAmplitudeEnd","feedbackStart","feedbackEnd","basePhaseDeltaScale","intervalOffset","endPitch","settingsExpressionMult","basePulseWidth","pulseWidthModStart","pulseWidthModEnd","pulseWidthStart","pulseWidthEnd","useSustainStart","useSustainEnd","startFreq","voiceCountExpression","unisonEnvelopeStart","unisonEnvelopeEnd","unisonAStart","unisonAEnd","unisonBStart","unisonBEnd","sustainEnvelopeStart","sustainEnvelopeEnd","secondsIntoBar","vibratoPeriodSeconds","fingerprint","fmSynthFunctionCache","synthSource","line","fmSourceTemplate","outputs","operatorLine","operatorSourceTemplate","modulatorNumber","feedbackIndices","Function","loopableChipSynth","chipSynth","harmonicsSynth","pulseWidthSynth","pickedStringSynth","noiseSynth","spectrumSynth","drumsetSynth","fm6SynthFunctionCache","wrap","data","chipWaveLoopLength","unisonSign","phaseDeltaA","phaseDeltaB","directionA","directionB","chipWaveCompletionA","chipWaveCompletionB","lastWaveA","lastWaveB","chipWaveCompletionFadeLength","phaseDeltaScaleA","phaseDeltaScaleB","phaseA","phaseB","prevWaveIntegralA","prevWaveIntegralB","phaseAInt","phaseBInt","indexA","indexB","phaseRatioA","phaseRatioB","filters","filterCount","initialFilterInput1","initialFilterInput2","applyFilters","prevWaveA","prevWaveB","sampleIndex","wrapped","waveA","waveB","inputSample","completionFadeA","completionFadeB","nextWaveIntegralA","nextWaveIntegralB","pwia","pwib","phaseA_","phaseB_","output","sanitizeFilters","voiceCount","pickedStringFunction","pickedStringFunctionCache","pickedStringSource","sampleList","voice","lines","usesEqFilter","signature","effectsFunction","effectsFunctionCache","effectsSource","usesDelays","phaseDelta","phase","sawPhaseA","sawPhaseB","pulseWave","t","phaseMask","pitchRelativefilter","findRandomZeroCrossing","phaseInt","waveSample","referenceDelta","stereoBufferIndex","dotTarget","lerpEndRatio","indexPrev","attemptsRemaining","indexNext","waveNext","innerIndexNext","innerWaveNext","slope","instrumentVolume","volumeMultToInstrumentVolume","volumeMult","volumeMultToNoteSize","seconds","ticks","lower","upper","cents","beatsPerSecond","partsPerSecond","tickPerSecond","sanitizeDelayLine","lastIndex","mask","input1","input2","Change","_noop","_didSomething","isNoop","commit","UndoableChange","reversed","_reversed","_doneForwards","undo","_doForwards","_doBackwards","redo","_isDoneForwards","ChangeGroup","append","change","ChangeSequence","changes","_changes","patternsContainSameInstruments","pattern1Instruments","pattern2Instruments","pattern2Has1Instruments","every","pattern1Has2Instruments","discardInvalidPatternInstruments","uniqueInstruments","Set","unionOfUsedNotes","removeRedundantPins","projectNoteIntoBar","oldNote","timeOffset","newNoteLength","newPinTime","nextPin","nextPinTime","ratio","prevPin","prevPinTime","offsetInterval","pitchIdx","joinedWithPrevNote","newIntervalOffset","newTimeOffset","tempPin","transformedPin","ChangeMoveAndOverflowNotes","doc","newBeatsPerBar","partsToMove","oldChannel","newChannel","oldPartsPerBar","newPartsPerBar","oldPattern","oldBarStart","absoluteNoteStart","absoluteNoteEnd","barStartPart","removeDuplicatePatterns","ChangeReplacePatterns","ChangePins","_note","_oldStart","_oldEnd","_newStart","_newEnd","_oldPins","_newPins","_oldPitches","_newPitches","_oldContinuesLastPattern","_newContinuesLastPattern","_finishSetup","firstInterval","firstTime","ChangeCustomWave","oldArray","getCurrentInstrument","comparisonResult","ChangeCustomAlgorythmorFeedback","carry","mode","ChangePreset","newValue","preset1","tempVolume","tempPan","tempPanDelay","ChangeRandomGeneratedInstrument","selectWeightedRandom","entries","total","weight","item","selectCurvedDistribution","peak","PotentialFilterPoint","chance","minFreq","maxFreq","centerHz","centerGain","applyFilterPoints","potentialPoints","usedFreqs","potentialPoint","midFreq","normalize","spectrumGenerators","current","generator","harmonicGenerators","ChangeTransition","ChangeToggleEffects","toggleFlag","useInstrument","oldValue","wasSelected","ChangePatternNumbers","startChannel","getCurrentPattern","viewedInstrument","ChangeEdo","ChangeBarCount","atBeginning","diff","ChangeInsertBars","newLength","ChangeDeleteBars","ChangeLimiterSettings","ChangeChannelOrder","selectionMin","selectionMax","ChangeCustomScale","ChangeChannelCount","newPitchChannelCount","newNoiseChannelCount","newModChannelCount","newChannels","changeGroup","newCount","oldCount","newStart","oldStart","pickRandomPresetValue","oldPitchCount","ChangeAddChannel","addedChannelIndex","recalcChannelNames","ChangeRemoveChannel","minIndex","maxIndex","oldMax","ChangeModChannel","ChangeChannelBar","newBar","silently","selection","scrollToSelectedPattern","ChangeUnison","ChangeChord","ChangeVibrato","ChangeVibratoDepth","ChangeVibratoSpeed","ChangeVibratoDelay","ChangeVibratoType","ChangeArpeggioSpeed","ChangeFastTwoNoteArp","ChangeClicklessTransition","ChangeAliasing","ChangeSpectrum","ChangeHarmonics","ChangeDrumsetEnvelope","drumIndex","ChangeInstrumentSlider","_instrument","ChangePulseWidth","ChangePitchShift","ChangeDetune","ChangeDistortion","ChangeBitcrusherFreq","ChangeBitcrusherQuantization","ChangeStringSustain","ChangeEQFilterType","ChangeNoteFilterType","ChangeEQFilterSimpleCut","ChangeEQFilterSimplePeak","ChangeNoteFilterSimpleCut","ChangeNoteFilterSimplePeak","ChangeFilterAddPoint","isNoteFilter","deletion","_envelopeTargetsAdd","_envelopeIndicesAdd","_envelopeTargetsRemove","_envelopeIndicesRemove","_instrumentNextPreset","_instrumentPrevPreset","_filterSettings","_point","ChangeFilterMovePoint","oldFreq","newFreq","oldGain","newGain","_oldFreq","_newFreq","_oldGain","_newGain","ChangeFilterSettings","oldSettings","useNoteFilter","subFilters","oldSubFilters","_oldSettings","_useNoteFilter","_subFilters","_oldSubFilters","ChangeFadeInOut","_oldFadeIn","_oldFadeOut","_newFadeIn","_newFadeOut","ChangeAlgorithm","ChangeFeedbackType","Change6OpAlgorithm","Change6OpFeedbackType","ChangeOperatorWaveform","operatorIndex","ChangeOperatorPulseWidth","ChangeOperatorFrequency","ChangeOperatorAmplitude","ChangeFeedbackAmplitude","ChangeAddChannelInstrument","ChangeRemoveChannelInstrument","removedIndex","ChangeViewInstrument","ChangeInstrumentsFlags","newLayeredInstruments","newPatternInstruments","oldLayeredInstruments","oldPatternInstruments","ChangeKey","ChangeLoop","oldLength","ChangePitchAdded","_pitch","ChangeOctave","ChangeRhythm","ChangePaste","selectionStart","selectionEnd","oldPartDuration","ChangeNoteTruncate","noteInsertionIndex","noteStart","noteEnd","ChangeNoteLength","ChangePasteInstrument","instrumentCopy","ChangeSetPatternInstruments","ChangeModInstrument","ChangeModSetting","text","tgtChannel","startsWith","substr","record","ChangeModFilter","ChangePatternsPerChannel","channelBars","channelPatterns","ChangeEnsurePatternExists","_patternOldNotes","_oldPatternInstruments","_bar","_channelIndex","_oldPatternCount","_newPatternCount","_newPatternInstruments","recentPatternInstruments","firstEmptyUnusedIndex","firstUnusedIndex","used","barIndex","_patternIndex","ChangePinTime","shiftedTime","originalTime","skipStart","skipEnd","setPin","oldPin","ChangePitchBend","bendStart","bendEnd","bendTo","direction","stop","setStart","setEnd","prevInterval","prevSize","persist","ChangePatternRhythm","minDivision","changeRhythm","oldTime","thresholds","beatStart","newTime","threshold","ChangeNoteAdded","ChangeRhythmNote","ChangeMoveNotesSideways","beatsToMove","strategy","originalBarCount","originalLoopStart","originalLoopLength","firstBarIsEmpty","ChangeBeatsPerBar","noteIndex","ChangeTempo","ChangeScale","ChangeDetectKey","keyWeights","bestKey","bestKeyWeight","keyWeight","absoluteDiff","ChangeTranspose","eligiblePresetValues","setDefaultInstruments","ChangeSong","newHash","ChangePatternSelection","resetBoxSelection","prefs","defaultScale","ChangeValidateTrackSelection","removeExtraSparseChannels","maxLength","sparsestIndex","mostZeroes","zeroes","combinedChannels","comparePatternNotes","newPatterns","foundMatchingPattern","newPatternIndex","ChangeKeyOctave","ChangeEchoDelay","ChangeEchoSustain","ChangeChorus","ChangeReverb","_pattern","truncStart","truncEnd","pushLastPin","skipNote","force","ChangeSplitNotesAtSelection","patternSelectionStart","patternSelectionEnd","ChangeTransposeNote","upward","ignoreScale","foundMatch","patternSelectionActive","ChangeTrackSelection","newX0","newX1","newY0","newY1","boxSelectionX0","boxSelectionX1","boxSelectionY0","boxSelectionY1","newEnd","_oldActive","_newActive","ChangeDragSelectedNotes","parts","transpose","oldEnd","draggedNotes","notesOutsideScale","ChangeDuplicateSelectedReusedPatterns","barStart","barWidth","channelStart","channelHeight","reusablePatterns","currentPatternIndex","isUsedElsewhere","bar2","copiedPattern","ChangePatternScale","scaleMap","newPitches","newPins","transformedPitch","transformedInterval","ChangeVolume","ChangeSongTitle","ChangeChannelName","muteEditorChannel","ChangePan","ChangePanDelay","ChangeSizeBend","bendPart","bendSize","bendInterval","uniformSize","inserted","ChangeChipWave","ChangeChipWaveUseAdvancedLoopControls","ChangeChipWaveLoopMode","ChangeChipWaveLoopStart","ChangeChipWaveLoopEnd","ChangeChipWaveStartOffset","ChangeChipWavePlayBackwards","ChangeNoiseWave","ChangeAddEnvelope","ChangeRemoveEnvelope","ChangeSetEnvelopeTarget","oldTarget","oldIndex","ChangeSetEnvelopeType","button","span","h2","input","br","select","option","BeatsPerBarPrompt","_beatsStepper","step","_conversionStrategySelect","_cancelButton","_okayButton","_close","cleanUp","removeEventListener","_saveChanges","_validateKey","_validateNumber","_whenKeyPressed","keyCode","setItem","prompt","_validate","lastStrategy","focus","charCode","which","label","ChannelSettingsPrompt","_patternsStepper","_pitchChannelStepper","_drumChannelStepper","_modChannelStepper","_layeredInstrumentsBox","_patternInstrumentsBox","_edoStepper","group","checked","CustomChipPromptCanvas","_mouseY","_lastIndex","_lastAmp","chipData","startingChipData","_undoHistoryState","_changeQueue","_fill","_ticks","_subticks","_blocks","viewBox","preserveAspectRatio","_storeChange","sameCheck","stopPropagation","right","clientY","pageY","top","bottom","offsetParent","col","amp","lowest","highest","startingAmp","endingAmp","medAmp","children","CustomChipPrompt","_songEditor","customChipCanvas","_playButton","_togglePlay","togglePlay","updatePlayButton","whenKeyPressed","innerText","FilterEditor","larger","_responsePath","_indicators","_controlPointPath","_dottedLinePath","_highlight","circle","r","selfUndoSettings","selfUndoHistoryPos","_label","coordText","_pointRadius","_larger","_touchMode","_mouseDragging","_addingPoint","_deletingPoint","_addedType","_selectedIndex","_freqStart","_gainStart","_dragChange","_subfilterIndex","_renderedSelectedIndex","_renderedPointCount","_renderedPointTypes","_renderedPointFreqs","_renderedPointGains","_updatePath","_whenCursorPressed","_updateCursor","lastChangeWas","stringify","subFilter","parsedFilter","_xToFreq","_freqToX","_yToGain","_gainToY","setProspectiveChange","nearestDistance","distance","_findNearestFreqSlot","freqDelta","gainDelta","targetFreq","ignoreIndex","roundedFreq","lowerFreq","upperFreq","tryingLower","foundConflict","currentFreq","_circlePath","cx","cy","radius","reverse","display","controlPointPath","dottedLinePath","pointX","pointY","responsePath","swapToSettings","useHistory","saveSettings","firstFilter","jumpIndex","swapToSubfilter","savedFilter","resetToInitial","swapSubfilterIndices","newIndex","tmp","currFilter","activeMods","displayMods","targetSettings","pointTypes","pointFreqs","pointGains","p","CustomFilterPrompt","filterData","startingFilterData","_filterButtons","_filterButtonContainer","_filterContainer","_editorTitle","_filterCopyButton","d","_filterPasteButton","_filterCopyPasteContainer","_filterCoordinateText","_setSubfilter","doSwap","filterEditor","_copyFilterSettings","filterCopy","_pasteFilterSettings","newIdx","shiftKey","colors","insertBefore","innerHTML","newButton","newSubButton","gcd","z","fraction","fractionLCM","an","ad","bn","bd","lcm","EuclideanRhythmPrompt","_minSteps","_maxSteps","_maxSequences","_maxChannel","_localStorageKey","_sequenceIndex","_renderedSequenceCount","_highlightedSequenceIndex","_startBar","_barAmount","_barsAvailable","_barPreviewBarIndex","_barPreviewWidth","_barPreviewHeight","_clockWidth","_clockHeight","_clockPointMinRadius","_clockPointMaxRadius","_clockPadding","_clockRadius","_sequenceButtons","_sequenceRemoveButton","_sequenceAddButton","_sequenceButtonContainer","_barPreviewBackground","_barPreviewSteps","_barPreviewLabel","_barPreviewGoToFirstButton","_barPreviewGoBackButton","_barPreviewGoForwardButton","_barPreviewGoToLastButton","_clockWire","_clockPoints","_stepsStepper","_pulsesStepper","_rotationStepper","_stepSizeNumeratorStepper","_stepSizeDenominatorStepper","_channelStepper","_pitchStepper","_barAmountStepper","_extendUntilLoopButton","_generateFadingNotesBox","_invertBox","_whenSelectSequence","_whenBarPreviewGoToFirstClicked","_whenBarPreviewGoBackClicked","_whenBarPreviewGoForwardClicked","_whenBarPreviewGoToLastClicked","_whenStepsChanges","_whenPulsesChanges","_whenRotationChanges","_whenStepSizeChanges","_whenChannelChanges","_whenPitchChanges","_whenBarAmountChanges","_whenInvertChanges","_whenGenerateFadingNotesChanges","_whenExtendUntilLoopClicked","firstBar","lastBar","existing","remaining","allNewNotesByChannel","pitchesToBeGenerated","relativeBar","partOffset","sequenceIndex","_sequences","generatedSequence","_generatedSequences","steps","stepSize","stepSizeNumerator","stepSizeDenominator","on","invert","generateFadingNotes","resultingChannel","newResultingBar","newResultingSequence","resultingSequence","firstStep","lastStep","needToAdjustPins","rawStepPartStart","rawStepPartEnd","stepPartStart","stepPartEnd","startPinSize","endPinSize","resultingBarIndex","resultingBar","oldNotes","merged","oldNoteIndex","oldPitch","timeline","noteType","eventGroups","currentEventGroup","heldNotes","mergedStartPart","mergedEndPart","notesToDrop","notesToAdd","setOfPitchesToCommit","eventGroup","mergedNote","theNewNote","theOldNote","mergeableNote","candidatePitch","pitchesToCommit","theNewNoteStartPart","theNewNoteEndPart","startSize","endSize","mergedNoteLength","mergedStartRelativeToOldStart","mergedEndRelativeToOldStart","firstVisibleOldPinIndex","lastVisibleOldPinIndex","leftAdjacentOldPinIndex","rightAdjacentOldPinIndex","oldPinIndex","visibleOldPinIndex","visibleOldPin","correctedTime","firstNewPin","lastNewPin","leftAdjacentOldPin","lineMiddleTime","newSize","rightAdjacentOldPin","lineFirstIntersectionTime","lineLastIntersectionTime","lineLength","firstRatio","lastRatio","firstNewSize","lastNewSize","heldNoteIndex","sequences","barAmount","_generateAllSequences","_generateSequence","pulses","columns","amountToMove","moved","v","generateEuclideanRhythm","rotation","_generateCurrentSequence","currentSequence","_refreshSequenceWidgets","_reconfigurePulsesStepper","_reconfigurePitchStepper","_render","_renderBarPreview","_renderLabel","_renderClock","beatsPerBarFraction","barAmountFraction","fractionDiv","acc","seq","fractionMul","numerator","denominator","_initialRender","color","beatWidth","beatHeight","w","padding","h","beatElement","_renderSequenceButtons","sequenceButton","oldButton","sequencePitch","pitchNameIndex","shiftDir","hasGeneratedSequence","backgroundColor","centerX","centerY","clockRadius","clockPointRadius","clockPoint","channelColors","secondaryColor","toPushAtTheEnd","partWidth","stepBackgroundElement","x0","y0","x1","y1","x2","y2","x3","y3","stepElement","indicatorOffset","arrowHeight","arrowY","arrowPath","arrow","defaultSteps","defaultPulses","boxSelectionActive","boxSelectionBar","boxSelectionWidth","boxSelectionChannel","boxSelectionHeight","savedData","rawSequences","parsedSequences","rawSequence","_b","_h","_j","transfer","dest","ArrayBuffer","nextOffset","leftBytes","byteLength","wordSizes","wordSize","transferWith","ViewClass","Uint8Array","Uint16Array","view_source","view_dest","byteOffset","ArrayBufferWriter","initialCapacity","_writeIndex","_fileSize","_arrayBuffer","_data","DataView","_addBytes","numBytes","getWriteIndex","rewriteUint32","setUint32","writeUint32","writeUint24","setUint8","writeUint16","setUint16","writeUint8","writeInt8","setInt8","writeMidi7Bits","writeMidiVariableLength","startWriting","writeMidiAscii","toCompactArrayBuffer","defaultMidiPitchBend","analogousDrumMap","midiVolumeToVolumeMult","lerp","low","high","save","blob","msSaveOrOpenBlob","anchor","download","createObjectURL","revokeObjectURL","MouseEvent","open","ExportPrompt","outputStarted","_fileName","maxlength","autofocus","_computedSamplesLabel","Text","_enableIntro","_loopDropDown","_enableOutro","_formatSelect","_exportButton","_outputProgressBar","_outputProgressLabel","_outputProgressContainer","_validateFileName","_export","_exportTo","_exportToMidi","_exportToJson","_exportToHtml","disabled","lastExportFormat","samplesToTime","rawSeconds","changeFileName","use","deleteChars","cursorPos","setSelectionRange","_synthesize","samplesPerChunk","currentFrame","currentChunk","samplesInChunk","sampleFrames","tempSamplesL","tempSamplesR","recordedSamplesL","recordedSamplesR","totalChunks","thenExportTo","_exportToWavFinish","_exportToMp3Finish","introIter","sampleCount","bytesPerSample","range","valL","valR","setInt16","Blob","whenEncoderIsAvailable","sampleBlockSize","mp3encoder","Mp3Encoder","mp3Data","Int16Array","leftChunk","subarray","rightChunk","mp3buf","encodeBuffer","flush","onload","midiTicksPerBeat","midiTicksPerPart","microsecondsPerBeat","secondsPerMinute","midiTicksPerBar","pitchBendRange","unrolledBars","loopIndex","tracks","isMeta","midiChannel","isDrumset","midiChannelCounter","foundADrumset","writer","track","trackStartIndex","prevTime","barStartTime","writeEventTime","writeControlEvent","message","tempScale","isMinor","numSharps","channelName","prevInstrumentIndex","writeInstrumentSettings","instrumentProgram","midiChipInstruments","instrumentPan","prevPitchBend","prevExpression","shouldResetExpressionAndPitchBend","channelRoot","usesArpeggio","polyphony","noteStartTime","pinTime","pinSize","pinInterval","prevPitches","nextPitches","velocity","pitchOffset","maxPitchOffset","minPitchOffset","nextPinSize","nextPinInterval","midiTick","midiTickTime","linearSize","noteStarting","drumsetMap","midiTicksSinceBeat","midiTicksPerArpeggio","noteEndTime","jsonString","fileContents","Layout","setLayout","layout","_layoutMap","small","long","tall","wide","HarmonicsEditor","_octaves","_fifths","_curve","_lastControlPoints","_lastControlPointContainer","_freqPrev","_ampPrev","_change","_renderedPath","_renderedFifths","_yToAmp","controlPointToHeight","xPos","lastHeight","showFifth","InputBox","_getChange","_value","_oldValue","_whenInput","_whenChange","updateValue","Slider","midTick","ArrayBufferReader","getReadIndex","readUint32","getUint32","readUint24","readUint8","readUint16","getUint16","getUint8","readInt8","getInt8","peakUint8","readMidi7Bits","readMidiVariableLength","nextByte","skipBytes","hasMore","getReaderForNextBytes","ImportPrompt","_fileInput","accept","_whenFileSelected","file","files","extension","lastIndexOf","reader","FileReader","goBackToStart","readAsText","_parseMidiFile","readAsArrayBuffer","headerReader","chunkType","chunkLength","trackReader","nextEventMidiTick","runningStatus","fileFormat","currentIndependentTrackIndex","currentTrackIndices","independentTracks","trackIndex","channelRPNMSB","channelRPNLSB","pitchBendRangeMSB","pitchBendRangeLSB","currentInstrumentProgram","currentInstrumentVolumes","currentInstrumentPans","noteEvents","pitchBendEvents","noteSizeEvents","tempoChanges","currentMidiTick","MAX_VALUE","anyTrackHasMore","eventStatus","eventChannel","foundTrackEndEvent","lsb","denominatorExponent","microsecondsPerMinute","songTotalBars","quantizeMidiTickToPart","channelPresetValue","channelPreset","isDrumsetChannel","channelBasePitch","midiIntervalScale","channelMaxPitch","currentVelocity","currentProgram","currentInstrumentVolume","currentInstrumentPan","heldPitches","prevEventPart","setInstrumentVolume","noteEventIndex","noteEvent","nextEventPart","MAX_SAFE_INTEGER","drumFreqs","minDuration","maxDuration","heldPitch","currentMidiInterval","currentMidiNoteSize","pitchBendEventIndex","noteSizeEventIndex","updateCurrentMidiInterval","updateCurrentMidiNoteSize","instrumentByProgram","prevEventMidiTick","pitchSum","createdNote","barStartMidiTick","barEndMidiTick","noteStartMidiTick","noteEndMidiTick","shiftedHeldPitch","initialBeepBoxPitch","heldPitchOffset","firstPin","potentialPins","keyPitch","keySize","prevPinIndex","prevPartPitch","prevPartSize","noteRelativePart","lastPart","partPitch","partSize","nearestPitch","pitchIsNearInteger","pitchCrossedInteger","nearestSize","sizeIsNearInteger","sizeCrossedInteger","currentPin","addPin","addPinAtIndex","furthestIntervalDistance","addIntervalPin","addIntervalPinAtIndex","potentialIndex","potentialPin","interpolatedInterval","furthestSizeDistance","addSizePin","addSizePinAtIndex","interpolatedSize","toBePinned","lastToBePinned","minPitch","notePin","shiftedPitch","averagePitch","tempoModChannel","tempoModInstrument","tempoModPitch","prevChangeEndPart","changeIndex","changeStartMidiTick","changeStartPart","changeEndMidiTick","changeEndPart","newBPM","compactChannels","bestChannelIndexA","bestChannelIndexB","fewestConflicts","fewestGaps","channelIndexA","channelIndexB","channelA","channelB","conflicts","gaps","channelAInstrumentCount","channelAPatternCount","some","form","LayoutPrompt","_form","_confirm","elements","EnvelopeEditor","_rows","_targetSelects","_envelopeSelects","_deleteButtons","_renderedEnvelopeCount","_renderedEqFilterCount","_renderedNoteFilterCount","_renderedEffects","_onChange","targetSelectIndex","envelopeSelectIndex","combinedValue","selectedIndex","_onClick","_makeOption","_updateTargetOptionVisibility","menu","optionIndex","childElementCount","hidden","targetSelect","interleaved","envelopeSelect","deleteButton","row","_renderedInstrumentType","FadeInOutEditor","_fadeCurve","_controlCurve","_mouseXStart","_draggingFadeIn","_renderedFadeIn","_renderedFadeOut","_xToFadeIn","_xToFadeOut","dottedLineX","_fadeOutToX","_fadeInToX","fadeInX","fadeOutX","fadePath","LimiterCanvas","lim","_boostCurve","_boostDot","_midCurve","_limitCurve","_limitDot","_label0","_label1","_label2","_inLabel","_outLabel","_xAxisLabel","_yAxisLabel","transform","_inVolumeBg","_outVolumeBg","_inVolumeBar","_inVolumeCap","_outVolumeBar","_outVolumeCap","_stop1","_stop2","_stop3","_gradient","linearGradient","id","gradientUnits","_defs","defs","_limiterPrompt","animateVolume","historicInCap","historicOutCap","lastValue","currentSubpathIdx","lastSubpathIdx","subPaths","limiterRatio","limitRatioSlider","compressorRatio","compressionRatioSlider","limiterThreshold","limitThresholdSlider","compressorThreshold","compressionThresholdSlider","LimiterPrompt","limiterCanvas","limitDecaySlider","limitRiseSlider","masterGainSlider","inVolumeHistoricTimer","inVolumeHistoricCap","outVolumeHistoricTimer","outVolumeHistoricCap","_resetButton","_volumeUpdate","requestAnimationFrame","_whenInputFavorLimitThreshold","_updateLimiter","startingLimitRatio","startingCompressionRatio","startingLimitThreshold","startingCompressionThreshold","startingLimitDecay","startingLimitRise","startingMasterGain","_resetDefaults","CustomScalePrompt","_flags","_scaleFlags","_scaleRows","scaleHolder","LoopEditor","_startMode","_endMode","_bothMode","_loop","_barWidth","_cursor","_clientStartX","_clientStartY","_startedScrolling","_draggingHorizontally","_renderedLoopStart","_renderedLoopStop","_renderedBarCount","_renderedBarWidth","_updateCursorStatus","_whenTouchReleased","_documentChanged","watch","_findEndPoints","middle","endPoints","autoFollow","showHighlight","highlightStart","highlightStop","loopStop","editorWidth","MoveNotesSidewaysPrompt","MuteEditor","_editor","_cornerFiller","_buttons","_channelCounts","_channelNameDisplay","_channelNameInput","_channelDropDown","_renderedChannelCount","_renderedPitchChannels","_renderedNoiseChannels","_renderedModChannels","_renderedChannelHeight","_channelDropDownChannel","_channelDropDownOpen","_channelDropDownLastState","_channelNameInputWhenInput","_channelNameInputClicked","_channelNameInputHide","_channelDropDownClick","_channelDropDownGetOpenedPosition","_channelDropDownBlur","options","_channelDropDownHandler","shouldSolo","insertChannel","refocusStage","_onMouseMove","_onMouseLeave","onKeyUp","enableChannelMuting","channelCountText","muteButton","muteContainer","marginTop","marginBottom","fontSize","OctaveScrollBar","_piano","_notchHeight","_octaveCount","_octaveHeight","_upHighlight","_downHighlight","_renderedBarBottom","_renderedVisibleOctaveCount","_barBottom","_barHeight","visibleOctaveCount","getVisibleOctaveCount","scrollableOctaves","canReplaceLastChange","currentOctave","getBaseVisibleOctave","forceRender","showUpHighlight","showDownHighlight","toString","MidiInputHandler","_takeMidiHandlerFocus","_handleStateChange","port","state","_registerMidiInput","_unregisterMidiInput","midiInput","_onMidiMessage","clearAllPitches","enableMidi","isDrum","addPerformedPitch","removePerformedPitch","registerMidiAccessHandler","requestMIDIAccess","midiAccess","inputs","forEach","e","KeyboardLayout","keyPosToPitch","keyboardLayout","forcedKey","scaleIndices","flag","_pianoAtC","_pianoAtA","keyOffset","_possiblyPlayingPitchesFromKeyboard","_onWindowBlur","handleKeyEvent","pressed","code","handleKey","PatternCursor","valid","curNote","curIndex","exactPart","nearPinIndex","PatternEditor","_interactive","_barOffset","controlMode","shiftMode","_svgNoteBackground","patternUnits","_svgDrumBackground","_svgModBackground","_svgBackground","_svgNoteContainer","_svgPlayhead","_selectionRect","_svgPreview","modDragValueLabel","contenteditable","_defaultModBorder","_backgroundPitchRows","_backgroundDrumRow","_backgroundModRow","_modDragValueLabelLeft","_modDragValueLabelTop","_modDragValueLabelWidth","editingModLabel","_modDragStartValue","_modDragLowerBound","_modDragUpperBound","_pitchHeight","_mouseHorizontal","_usingTouch","_copiedPinChannels","_mouseYStart","_touchTime","_shiftHeld","_dragConfirmed","_draggingStartOfSelection","_draggingEndOfSelection","_draggingSelectionContents","_dragTime","_dragPitch","_dragSize","_dragVisible","_changePatternSelection","_lastChangeWasPatternSelection","_stashCursorPinVols","_playheadX","_octaveOffset","_renderedWidth","_renderedHeight","_renderedBeatWidth","_renderedPitchHeight","_renderedDrums","_renderedMod","_renderedRhythm","_renderedPitchChannelCount","_renderedNoiseChannelCount","_renderedModChannelCount","_followPlayheadBar","_validateModDragLabelInput","converted","presValue","xOffset","_partWidth","_modDragNote","_modDragPin","_modDragSetting","resetCopiedPins","maxDivision","_getMaxDivision","_animatePlayhead","timestamp","notifyWatchers","playheadBar","modPlayhead","currentPatternIsDirty","_redrawNotePatterns","ctrlKey","continuousState","_setPatternSelection","_copyPins","enableNotePreview","setTemporaryPitches","rectangle","rhythmStepsPerBeat","_getMinDivision","_snapToMinDivision","foundNote","_findMousePitch","_pitchToPixelHeight","_pitchBorder","mousePitch","leftSide","rightSide","intervalRatio","arc","bendHeight","minInterval","maxInterval","bestDistance","pinDistance","_snapToPitch","nearest","defaultLength","_copiedPins","fullBeats","modMouse","division","forceStart","forceEnd","maxHeight","maxFoundHeight","_cursorIsInSelection","_cursorAtStartOfSelection","_cursorAtEndOfSelection","pixelY","_pitchCount","guess","topPitch","bottomPitch","topRange","bottomRange","movePlayheadToMouse","stopEditingModLabel","discardChanges","getSelection","sel","removeAllRanges","selectAllChildren","_updateSelection","dx","dy","notesInScale","pitchRatio","draggedParts","draggedTranspose","backwards","directLength","blessedLength","theNote","shiftedPin","dragFactorSlow","dragFactorFast","dragSign","dragCounts","sizeRatio","alwaysFineNoteVol","pathString","_drawNote","clientHeight","getVisiblePitchCount","node","cloneNode","parentNode","replaceChild","makeEmptyReplacementElement","showChannels","pattern2","notePath","displayNumberedChords","colorPrimary","colorSecondary","oscillatorLabel","svgElement","showSize","totalWidth","endOffset","prevSide","nextSide","prevHeight","nextHeight","nextSize","Piano","_renderedScale","_pianoContainer","_drumContainer","_modContainer","_preview","_pianoKeys","_pianoLabels","_modFirstLabels","_modSecondLabels","_modCountLabels","_modCountRects","_playedPitch","_renderedKey","_renderedPitchCount","_renderedLiveInputPitches","_updateCursorPitch","_playLiveInput","_whenMouseReleased","_releaseLiveInput","_onAnimationFrame","liveInputChanged","liveInputPitchCount","pitchesAreTemporary","showLetters","firstRow","secondRow","useFirstColor","useSecondColor","usingSecondRow","usingMod","instrumentVal","channelVal","instrumentsLength","insText","filterVal","firstLabel","secondLabel","modCountLabel","modCountRect","scaleFactor","parentElement","getComputedTextLength","squeeze","pianoLabel","pianoKey","background","getPitchName","firstRowText","secondRowText","countText","countRect","firstRowSVG","countSVG","secondRowSVG","flexRow1","flexRow2","flexContainer","modKey","_cursorPitch","pitchHeight","child","scaleIndex","baseVisibleOctave","SongDurationPrompt","_barsStepper","_positionSelect","lastPosition","versionPrefix","keyToVersion","versionToKey","generateUid","compareSongs","versions","compareVersions","SongRecovery","_song","getAllRecoveredSongs","songs","songsByUid","itemKey","uid","saveVersion","songData","newName","Date","clearTimeout","_saveVersionTimeoutHandle","currentSong","newWork","mostRecentTime","work","newVersion","newKey","minSpan","spanMult","indexToDiscard","currentTime","newerTime","removeItem","leastImportantSong","leastImportance","maximumSongCount","timeScale","iframe","SongRecoveryPrompt","_songContainer","versionMenu","toLocaleString","player","contentWindow","RecordingSetupPrompt","_keyboardMode","_keyboardLayout","_keyboardLayoutPreview","_enableMidi","_showRecordButton","_snapRecordedNotesToRhythm","_ignorePerformedNotesNotInScale","_metronomeCountIn","_metronomeWhileRecording","pressControlForShortcuts","showRecordButton","snapRecordedNotesToRhythm","ignorePerformedNotesNotInScale","metronomeCountIn","metronomeWhileRecording","_renderKeyboardLayoutPreview","rowLengths","rowIndex","spacer","colIndex","scalePitch","border","SpectrumEditor","_spectrumIndex","_arrow","doReload","CustomPrompt","_pattern2","_pattern3","_fileInput2","_colorInput","_reset","backgroundImage","secondImage","getElementById","_whenColorsChanged","colorTheme","base64","readAsDataURL","_whenFileSelected2","ThemePrompt","_themeSelect","lastTheme","_previewTheme","h3","TipPrompt","_closeButton","modNum","pList","Box","_x","_y","_text","_rect","_renderedIndex","_renderedDim","_renderedSelected","_renderedColor","setSize","setIndex","dim","selected","TrackEditor","_barDropDown","_boxContainer","_barNumberContainer","_boxHighlight","_barEditorPath","_select","_grid","_barNumbers","_mouseStartBar","_mouseStartChannel","_mouseBar","_mouseChannel","_mousePressed","_channelHeight","_renderedPatternCount","_barDropDownBar","_lastScrollTime","_barDropDownGetOpenedPosition","_barDropDownHandler","moveBarOffset","insertBars","_barScrollBar","deleteBars","_whenSelectChanged","setPattern","_whenSelectPressed","_updateSelectPos","_whenSelectMoved","_dragBoxSelection","_whenSelectReleased","_updateMousePos","setTrackSelection","selectionUpdated","setChannelBar","up","patternCount","determinedCursorType","overTrackEditor","changeBarScrollPos","tip","lastChild","selectedPattern","box","pathLeft","editorHeight","oscilascopeCanvas","canvas","_EventUpdateCanvas","directlinkL","directlinkR","ctx","getContext","fillStyle","fillRect","yl","yr","defaultShapeFunction","cnv","VisualLoopControlsHandle","canvasWidth","canvasHeight","viewportX0","viewportX1","validator","whenValueChanges","whenMouseUpHappens","shapeFunction","_handleWidth","_handleDragOffset","_context","_validator","vx0","_viewportX0","vx1","_viewportX1","clearRect","bw","bh","bx","_shapeFunction","updateViewport","_whenMouseMoves","_canvasWidth","bounds","canvasXScale","wmx","_whenValueChanges","_whenMouseIsDown","mx","bx0","_whenMouseIsUp","_whenMouseUpHappens","_whenTouchMoves","_whenTouchIsDown","_whenTouchIsUp","_canvasHeight","VisualLoopControlsPrompt","_waveformCanvasWidth","_waveformCanvasHeight","_handleCanvasHeight","_waveformData","_waveformDataLength","_initialChipWaveLoopMode","_initialChipWaveStartOffset","_initialChipWaveLoopStart","_initialChipWaveLoopEnd","_initialChipWavePlayBackwards","_chipWaveLoopMode","_chipWaveStartOffset","_chipWaveLoopStart","_chipWaveLoopEnd","_chipWavePlayBackwards","_waveformViewportX0","_waveformViewportX1","_waveformViewportY0","_waveformViewportY1","_waveformViewportWidth","_waveformViewportOffset","_waveformViewportMaxOffset","_overlayIsMouseDown","_overlaySelectionX0","_overlaySelectionX1","_startOffsetValidator","_loopStartValidator","_loopEndValidator","_startOffsetHandle","_renderOverlay","_reconfigureLoopControls","gotMouseUp","th","beginPath","moveTo","lineTo","_loopStartHandle","tw","_loopEndHandle","_chipWaveIsUnavailable","_waveformCanvas","_waveformContext","_overlayCanvas","_overlayContext","_waveformContainer","_viewportOffsetSlider","_zoomInButton","_zoomOutButton","_zoom100Button","_loopModeSelect","_startOffsetStepper","_loopStartStepper","_loopEndStepper","_playBackwardsBox","_playSongButton","_sampleIsLoadingMessage","_loopControlsContainer","_waveformSampleLookup","_waveformSamplesLookup","_whenViewportOffsetSliderChanges","_whenZoomInClicked","_whenZoomOutClicked","_whenZoom100Clicked","_whenLoopModeSelectChanges","_whenStartOffsetStepperChanges","_whenLoopStartStepperChanges","_whenLoopEndStepperChanges","_whenPlayBackwardsBoxChanges","_togglePlaySong","_whenOverlayMouseMoves","_whenOverlayMouseIsDown","_whenOverlayMouseIsUp","_whenOverlayTouchIsDown","_whenOverlayTouchMoves","_whenOverlayTouchIsUp","_updatePlaySongButton","_renderWaveform","vy0","vy1","sampleWidth","waveformColor","strokeStyle","lineWidth","firstMove","wx","pcy0","pcy1","wy0","wy1","cy0","cy1","cy0i","cy1i","ocy0","ocy1","so","ls","le","obx","obh","globalAlpha","lbx0","lbx","lbw","lbh","rawOffset","newViewportOffset","_propagateViewportUpdate","newViewportWidth","zoomAreaIsTooSmall","wosx0","wosx1","verticalBounds","maxVerticalBound","SampleLoadingStatusPrompt","_intervalDuration","_interval","_renderedWhenAllHaveStoppedChanging","_statusesContainer","_noSamplesMessage","clearInterval","hasNoCustomSamples","allHaveStoppedChanging","sampleName","loadingStatus","urlDisplay","loadingStatusColor","loadingStatusDisplay","chipWaveElement","setInterval","textarea","details","summary","ul","li","AddSamplesPrompt","_maxSamples","_entries","_entryOptionsDisplayStates","_addSampleButton","_entryContainer","_addMultipleSamplesButton","_addSamplesAreaBottom","_instructionsLink","_description","_closeInstructionsButton","_instructionsArea","_addSamplesArea","_bulkAddTextarea","_bulkAddConfirmButton","_bulkAddArea","_whenAddSampleClicked","_whenAddMultipleSamplesClicked","_whenBulkAddConfirmClicked","_whenInstructionsLinkClicked","_whenCloseInstructionsButtonClicked","urlData","_generateURLData","entryIndex","percussion","_reconfigureAddSampleButton","parsed","_parseURLs","seen","_whenOptionsAreToggled","dataset","_whenURLChanges","sampleNameElement","_getSampleName","_whenSampleRateChanges","_whenRootKeyChanges","rootKeyDisplay","noteName","_noteNameFromPitchNumber","_whenPercussionChanges","_whenChipWaveLoopStartChanges","_whenChipWaveLoopEndChanges","_whenChipWaveStartOffsetChanges","_whenChipWaveLoopModeChanges","_whenChipWavePlayBackwardsChanges","_whenCopyLinkPresetClicked","_copyTextToClipboard","_generateURLDataForEntry","_whenRemoveSampleClicked","_whenMoveSampleUpClicked","upEntryIndex","upEntry","upEntryOptionsVisibility","entryOptionsVisibility","_whenMoveSampleDownClicked","downEntryIndex","downEntry","downEntryOptionsVisibility","urls","useLegacySamples","useNintariboxSamples","useMarioPaintboxSamples","parsedEntries","urlInLowerCase","isBundledSamplePack","scrollToBottom","canMoveUp","canMoveDown","optionsVisible","urlInput","sampleRateStepper","rootKeyStepper","percussionBox","chipWaveLoopStartStepper","chipWaveLoopEndStepper","chipWaveStartOffsetStepper","chipWaveLoopModeSelect","chipWavePlayBackwardsBox","copyLinkPresetButton","removeButton","moveUpButton","moveDownButton","optionsContainer","bottomButtons","entryElement","thisIsTheLastElement","scrollIntoView","block","inline","nav","clipboard","writeText","textField","succeeded","execCommand","preventScroll","optgroup","buildOptions","items","buildPresetOptions","idSet","randomGroup","firstCategoryGroup","customSampleCategoryGroup","foundAny","moveViolin2","moveFlute2","moveGrandPiano2","parent","setSelectedValue","stringValue","$","trigger","CustomChipCanvas","mouseDown","continuousEdit","lastX","lowerBound","upperBound","progress","lastY","_onMouseDown","_onMouseUp","redrawCanvas","CustomAlgorythmCanvas","yindex","xindex","drawArray","fillText","newmod","check","newMods","lookUpArray","inverseModulation","inverseFeedback","fillDrawArray","noReset","oldMods","oldfeed","testPos","drawLines","off","tar","srtpos","tarpos","side","SongEditor","_patternEditorPrev","_patternEditor","_patternEditorNext","_trackEditor","_muteEditor","_loopEditor","_octaveScrollBar","_pauseButton","_recordButton","_stopButton","_prevBarButton","_nextBarButton","_volumeSlider","_outVolumeBarBg","_volumeBarContainer","_volumeBarBox","_fileMenu","_editMenu","_optionsMenu","_scaleSelect","_keySelect","_octaveStepper","_tempoSlider","_tempoStepper","_chorusSlider","_chorusRow","onclick","_openPrompt","_reverbSlider","_reverbRow","_echoSustainSlider","_echoSustainRow","_echoDelaySlider","_echoDelayRow","_rhythmSelect","_pitchedPresetSelect","_drumPresetSelect","_algorithmSelect","_algorithmSelectRow","_instrumentButtons","_instrumentAddButton","_instrumentRemoveButton","_instrumentsButtonBar","_instrumentsButtonRow","_instrumentVolumeSlider","_instrumentVolumeSliderInputBox","_instrumentVolumeSliderTip","_instrumentVolumeSliderRow","_panSlider","_panDropdown","_toggleDropdownMenu","_panSliderInputBox","_panSliderRow","tabindex","_panDelaySlider","_panDelayRow","_panDropdownGroup","_chipWaveSelect","_chipNoiseSelect","_useChipWaveAdvancedLoopControlsBox","_chipWaveLoopModeSelect","_chipWaveLoopStartStepper","_chipWaveLoopEndStepper","_setChipWaveLoopEndToEndButton","_chipWaveStartOffsetStepper","_chipWavePlayBackwardsBox","_chipWaveSelectRow","_chipNoiseSelectRow","_visualLoopControlsButton","_useChipWaveAdvancedLoopControlsRow","_chipWaveLoopModeSelectRow","_chipWaveLoopStartRow","_chipWaveLoopEndRow","_chipWaveStartOffsetRow","_chipWavePlayBackwardsRow","_fadeInOutEditor","_fadeInOutRow","_transitionSelect","_transitionDropdown","_transitionRow","_clicklessTransitionBox","_clicklessTransitionRow","_transitionDropdownGroup","_effectsSelect","_eqFilterSimpleButton","_switchEQFilterType","_eqFilterAdvancedButton","_eqFilterTypeRow","_eqFilterEditor","_eqFilterZoom","_eqFilterRow","_eqFilterSimpleCutSlider","_eqFilterSimpleCutRow","_eqFilterSimplePeakSlider","_eqFilterSimplePeakRow","_noteFilterSimpleButton","_switchNoteFilterType","_noteFilterAdvancedButton","_noteFilterTypeRow","_noteFilterEditor","_noteFilterZoom","_noteFilterRow","_noteFilterSimpleCutSlider","_noteFilterSimpleCutRow","_noteFilterSimplePeakSlider","_noteFilterSimplePeakRow","_pulseWidthSlider","_pulseWidthRow","_pitchShiftSlider","_pitchShiftTonicMarkers","_pitchShiftFifthMarkers","_pitchShiftMarkerContainer","_pitchShiftRow","_detuneSlider","_detuneSliderInputBox","_detuneSliderRow","_distortionSlider","_distortionRow","_aliasingBox","_aliasingRow","_bitcrusherQuantizationSlider","_bitcrusherQuantizationRow","_bitcrusherFreqSlider","_bitcrusherFreqRow","_stringSustainSlider","_stringSustainRow","_unisonSelect","_unisonSelectRow","_chordSelect","_chordDropdown","_chordSelectRow","_arpeggioSpeedSlider","_arpeggioSpeedRow","_twoNoteArpBox","_twoNoteArpRow","_chordDropdownGroup","_vibratoSelect","_vibratoDropdown","_vibratoSelectRow","_vibratoDepthSlider","_vibratoDepthRow","_vibratoSpeedSlider","_vibratoSpeedRow","_vibratoDelaySlider","_vibratoDelayRow","_vibratoTypeSelect","_vibratoTypeSelectRow","_vibratoDropdownGroup","_phaseModGroup","_feedbackTypeSelect","_feedbackRow1","_spectrumEditor","_spectrumRow","_harmonicsEditor","_harmonicsRow","_envelopeEditor","_drumsetGroup","_modulatorGroup","_feedback6OpTypeSelect","_feedback6OpRow1","_algorithmCanvasSwitch","_toggleAlgorithmCanvas","_customAlgorithmCanvas","_algorithm6OpSelect","_algorithm6OpSelectRow","_instrumentCopyButton","_instrumentPasteButton","_globalOscscope","_globalOscscopeContainer","_customWaveDrawCanvas","_customWavePresetDrop","header","buildHeaderedOptions","_customWaveZoom","_customWaveDraw","_songTitleInputBox","_feedbackAmplitudeSlider","_feedbackRow2","_addEnvelopeButton","_customInstrumentSettingsGroup","_instrumentCopyGroup","_instrumentSettingsTextRow","_instrumentTypeSelectRow","_instrumentSettingsGroup","_usedPatternIndicator","_usedInstrumentIndicator","_jumpToModIndicator","_promptContainer","_patternEditorRow","_patternArea","_trackVisibleArea","_trackAndMuteContainer","_trackArea","_menuArea","_sampleLoadingBar","_sampleLoadingBarContainer","_sampleLoadingStatusContainer","_songSettingsArea","_instrumentSettingsArea","_settingsArea","mainLayer","tabIndex","_wasPlaying","_currentPromptName","_highlightedInstrumentIndex","_renderedInstrumentCount","_renderedIsPlaying","_renderedIsRecording","_renderedShowRecordButton","_renderedCtrlHeld","_ctrlHeld","_deactivatedInstruments","_operatorRows","_operatorAmplitudeSliders","_operatorFrequencySelects","_operatorDropdowns","_operatorWaveformSelects","_operatorWaveformHints","_operatorWaveformPulsewidthSliders","_operatorDropdownRows","_operatorDropdownGroups","_drumsetSpectrumEditors","_drumsetEnvelopeSelects","_showModSliders","_newShowModSliders","_modSliderValues","_hasActiveModSliders","_openPanDropdown","_openVibratoDropdown","_openChordDropdown","_openTransitionDropdown","_openOperatorDropdowns","lastOutVolumeCap","_whenSampleLoadingBarClicked","_onFocusIn","_refocusStageNotEditing","whenUpdated","trackBounds","activeElement","showScrollBar","displayVolumeBar","showOscilloscope","showSampleLoadingStatus","getFullScreen","targetBeatWidth","minBeatWidth","maxBeatWidth","patternEditorWidth","flexShrink","optionCommands","autoPlay","displayBrowserUrl","wasActive","contains","effectFlag","_usageCheck","hide","_modChannelBoxes","channelList","_modInstrumentBoxes","instrumentList","_modSetBoxes","settingList","unusedSettingList","tgtInstrumentTypes","anyInstrumentAdvancedEQ","anyInstrumentSimpleEQ","anyInstrumentAdvancedNote","anyInstrumentSimpleNote","anyInstrumentArps","anyInstrumentPitchShifts","anyInstrumentDetunes","anyInstrumentVibratos","anyInstrumentNoteFilters","anyInstrumentDistorts","anyInstrumentBitcrushes","anyInstrumentPans","anyInstrumentChorus","anyInstrumentEchoes","anyInstrumentReverbs","allInstrumentNoteFilters","allInstrumentDetunes","allInstrumentVibratos","allInstrumentDistorts","allInstrumentBitcrushes","allInstrumentPans","allInstrumentChorus","allInstrumentEchoes","allInstrumentReverbs","instrumentCandidates","_whenSetModSetting","_modTargetIndicators","tmpCount","dotCount","isSimple","_modFilterBoxes","dotList","useName","chordIndex","hasAttribute","_renderInstrumentBar","show","isCarrier","operatorName","marker","_setPrompt","addedEffect","envButtonRect","instSettingsRect","settingsRect","addedEnvelope","scrollHeight","pointerEvents","opacity","_disableCtrlContextMenu","_tempoStepperCaptureNumberKeys","metaKey","_toggleRecord","needControlForShortcuts","getModifierState","canPlayNotes","_copyInstrument","deleteChannel","selectChannel","selectAll","duplicatePatterns","altKey","visibleOctaves","muteChannels","nextEmpty","nextUnused","soloChannels","pasteNumbers","_pasteInstrument","pasteNotes","panningEffectIndex","_randomGenerated","_randomPreset","swapChannels","scrollToEndOfSelection","nextDigit","instrumentDigits","_whenKeyReleased","_whenPrevBarPressed","_whenNextBarPressed","_animate","_modSliderUpdate","_animateVolume","_setVolumeSlider","setVolume","_whenSetTempo","_whenSetOctave","_whenSetScale","forceScale","_whenSetKey","_whenSetRhythm","forceRhythm","_refocus","selfRef","_whenSetPitchedPreset","_setPreset","_whenSetDrumPreset","_whenSetFeedbackType","_whenSetAlgorithm","_whenSet6OpFeedbackType","_whenSet6OpAlgorithm","_whenSelectInstrument","selectInstrument","_whenSetModChannel","previouslyUnset","setModChannel","setModInstrument","_whenSetModInstrument","invalidIndex","selectedOptions","setModSetting","_whenClickModTarget","_whenClickJumpToModTarget","modChannelIdx","patternIdx","modInstrumentIdx","_whenSetModFilter","setModFilter","_whenSetChipWave","_whenSetUseChipWaveAdvancedLoopControls","_whenSetChipWaveLoopMode","_whenSetChipWaveLoopStart","_whenSetChipWaveLoopEnd","_whenSetChipWaveLoopEndToEnd","_whenSetChipWaveStartOffset","_whenSetChipWavePlayBackwards","_whenSetNoiseWave","_whenSetTransition","_whenSetEffects","_whenSetVibrato","_whenSetVibratoType","_whenSetUnison","_whenSetChord","_addNewEnvelope","_zoomIn","_zoomOut","_fileMenuHandler","share","_editMenuHandler","_optionsMenuHandler","toggleDisplayBrowserUrl","_customWavePresetHandler","customWaveArray","MIN_VALUE","arrayPoint","arrayStep","operatorNumber","frequencySelect","amplitudeSlider","waveformSelect","waveformDropdown","waveformDropdownHint","waveformPulsewidthSlider","waveformDropdownRow","waveformDropdownGroup","spectrumEditor","_modNameRows","_modSetRows","_modFilterRows","modChannelBox","modInstrumentBox","modNameRow","modSetBox","modFilterBox","modSetRow","modFilterRow","modTarget","thisRef","bind","_updateSampleLoadingBar","autoPlayOption","screen","availWidth","layoutOption","percent","dropdown","submenu","anyModActive","updateModSlider","editor","slider","currentVal","_getSliderForModSetting","anySliderActive","openPrompt","maxInstrumentsPerChannel","instrumentButton","instrumentUsed","patternUsed","modUsed","lowestSelX","highestSelX","lowestSelY","highestSelY","toSimple","SongPerformance","_channelIsDrum","_channelOctave","_songKey","_pitchesAreTemporary","_recentlyAddedPitches","_songLengthWhenRecordingStarted","_playheadPart","_playheadPattern","_pitchesChanged","_lastNote","_recordingChange","_updateRecordedNotes","_lastBarHasPatterns","_getCurrentPlayheadPart","abortRecording","oldPart","oldPlayheadPart","newPart","dirty","startPart","endPart","addedAlreadyReleasedPitch","erasePatternInBar","recentPitch","recentIndex","Selection","_changeTranspose","_changeTrack","_changeInstrument","_changeReorder","toJSON","fromJSON","json","hasRedoHistory","digit","forInstrument","forRhythms","insertIndex","_eachSelectedChannel","_eachSelectedPattern","_eachSelectedBar","handledPatterns","_parseCopiedInstrumentArray","patternCopy","_patternIndexIsUnused","patternNumber","channelCopy","selectionCopy","partDuration","_remapToNoisePitches","oldPitches","notePitchIndex","_convertCopiedPitchNotesToNoiseNotes","newNotePitches","oldNotePins","newNotePins","notePinIndex","newNoteStart","newNoteEnd","newNoteContinuesLastPattern","channelCopies","copiedPartDuration","fillSelection","pasteHeight","pasteChannel","channelIsNoise","isPitch","patternCopies","copiedBars","pasteWidth","usedPatterns","pasteBar","copiedPatternIndex","reusedIndex","instrumentsCopy","pastedNotes","existingPattern","removedPattern","allChannels","anyMuted","anyUnmuted","alreadySoloed","currentChannel","soloPattern","matchesSoloPattern","shouldBeMuted","scaleFlags","oldScaleFlags","newScaleValue","customScaleFlags","newScaleFlags","oldScale","newScale","largerToSmaller","smallerScale","largerScale","roles","bestScore","bestIndexMap","stack","indexMap","score","sparsePitchMap","smallerScalePitch","largerScalePitch","sparseIndex","fullPitchMap","oldLow","newLow","oldHigh","newHigh","nearestPitchDistance","newPitch","generateScaleMap","possibleSectionBoundaries","channelSectionMin","channelSectionMax","nextBoundary","newSelectionMin","newSelectionMax","maxLayers","Preferences","defaultVisibleOctaves","instrumentCopyPaste","customTheme","customTheme2","ChangeNotifier","_watchers","_dirty","watcher","unwatch","SongDocument","_recovery","_recentChange","_sequenceNumber","_lastSequenceNumber","_stateShouldBePushed","_recordedNewSong","_waitingToUpdateState","_whenHistoryStateChanged","history","_resetSongRecoveryUid","canUndo","sequenceNumber","recoveryUid","_recoveryUid","_replaceState","_pushState","forgetLastChange","_getHistoryState","_getHash","_cleanDocument","_validateDocState","highlightedPattern","_updateHistoryState","sessionStorage","songString","_calcVolume","eventName","replaceState","pushState","currentIndex","oldestIndex","_maximumUndoHistory","_forward","forward","_back","back","newSong","barOffset","getMobileLayout","innerWidth","squashed","className","getElementsByClassName","select2","dropdownAutoWidth","siblings","toggle","css","groups","each","autoplay","scrollRestoration","serviceWorker","register","updateViaCache","scope"],"sources":["../synth/SynthConfig.ts","../editor/EditorConfig.ts","../node_modules/imperative-html/src/elements-base.ts","../node_modules/imperative-html/src/elements-strict.ts","../editor/ColorConfig.ts","../editor/style.ts","../editor/BarScrollBar.ts","../synth/FFT.ts","../synth/Deque.ts","../global/Events.ts","../synth/filtering.ts","../synth/synth.ts","../editor/Change.ts","../editor/changes.ts","../editor/BeatsPerBarPrompt.ts","../editor/ChannelSettingsPrompt.ts","../editor/CustomChipPrompt.ts","../editor/FilterEditor.ts","../editor/CustomFilterPrompt.ts","../editor/EuclidgenRhythmPrompt.ts","../editor/ArrayBufferWriter.ts","../editor/Midi.ts","../editor/ExportPrompt.ts","../editor/Layout.ts","../editor/HarmonicsEditor.ts","../editor/HTMLWrapper.ts","../editor/ArrayBufferReader.ts","../editor/ImportPrompt.ts","../editor/LayoutPrompt.ts","../editor/EnvelopeEditor.ts","../editor/FadeInOutEditor.ts","../editor/LimiterPrompt.ts","../editor/CustomScalePrompt.ts","../editor/LoopEditor.ts","../editor/MoveNotesSidewaysPrompt.ts","../editor/MuteEditor.ts","../editor/OctaveScrollBar.ts","../editor/MidiInput.ts","../editor/KeyboardLayout.ts","../editor/PatternEditor.ts","../editor/Piano.ts","../editor/SongDurationPrompt.ts","../editor/SongRecovery.ts","../editor/SongRecoveryPrompt.ts","../editor/RecordingSetupPrompt.ts","../editor/SpectrumEditor.ts","../editor/CustomPrompt.ts","../editor/ThemePrompt.ts","../editor/TipPrompt.ts","../editor/TrackEditor.ts","../global/Oscilascope.ts","../editor/VisualLoopControlsPrompt.ts","../editor/SampleLoadingStatusPrompt.ts","../editor/AddSamplesPrompt.ts","../editor/SongEditor.ts","../editor/SongPerformance.ts","../editor/Selection.ts","../editor/Preferences.ts","../editor/ChangeNotifier.ts","../editor/SongDocument.ts","../editor/main.ts"],"sourcesContent":["/*!\r\nCopyright (c) 2012-2022 John Nesky and contributing authors\r\n\r\nPermission is hereby granted, free of charge, to any person obtaining a copy of \r\nthis software and associated documentation files (the \"Software\"), to deal in \r\nthe Software without restriction, including without limitation the rights to \r\nuse, copy, modify, merge, publish, distribute, sublicense, and/or sell copies \r\nof the Software, and to permit persons to whom the Software is furnished to do \r\nso, subject to the following conditions:\r\n\r\nThe above copyright notice and this permission notice shall be included in all \r\ncopies or substantial portions of the Software.\r\n\r\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR \r\nIMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, \r\nFITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE \r\nAUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER \r\nLIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, \r\nOUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE \r\nSOFTWARE.\r\n*/\r\n\r\nexport interface Dictionary<T> {\r\n    [K: string]: T;\r\n}\r\n\r\n// @TODO: Not ideal to make this writable like this.\r\n// export interface DictionaryArray<T> extends ReadonlyArray<T> {\r\nexport interface DictionaryArray<T> extends Array<T> {\r\n    dictionary: Dictionary<T>;\r\n}\r\n\r\nexport const enum FilterType {\r\n    lowPass,\r\n    highPass,\r\n    peak,\r\n    length,\r\n}\r\n\r\nexport const enum EnvelopeType {\r\n\tnoteSize,\r\n    none,\r\n\tpunch,\r\n\tflare,\r\n\ttwang,\r\n\tswell,\r\n\ttremolo,\r\n\ttremolo2,\r\n    decay,\r\n    wibble,\r\n    hard,\r\n    linear,\r\n    rise,\r\n}\r\n\r\nexport const enum InstrumentType {\r\n    chip,\r\n    fm,\r\n    noise,\r\n    spectrum,\r\n    drumset,\r\n    harmonics,\r\n    pwm,\r\n    pickedString,\r\n    customChipWave,\r\n    mod,\r\n\tfm6op,\r\n    length,\r\n}\r\n\r\nexport const TypePresets: ReadonlyArray<string> = [\"chip wave\", \"FM\", \"basic noise\", \"spectrum\", \"drumset\", \"harmonics\", \"pulse width\", \"picked string\", \"custom chip\", \"mod\", \"advanced FM\"];\r\n\r\nexport const enum DropdownID {\r\n    Vibrato = 0,\r\n    Pan = 1,\r\n    Chord = 2,\r\n    Transition = 3,\r\n    FM = 4,\r\n\r\n}\r\n\r\nexport const enum EffectType {\r\n    reverb,\r\n    chorus,\r\n    panning,\r\n    distortion,\r\n    bitcrusher,\r\n    noteFilter,\r\n    echo,\r\n    pitchShift,\r\n    detune,\r\n    vibrato,\r\n    transition,\r\n    chord,\r\n    // If you add more, you'll also have to extend the bitfield used in Base64 which currently uses two six-bit characters.\r\n    length,\r\n}\r\n\r\nexport const enum EnvelopeComputeIndex {\r\n    noteVolume,\r\n    noteFilterAllFreqs,\r\n    pulseWidth,\r\n    stringSustain,\r\n    unison,\r\n    operatorFrequency0, operatorFrequency1, operatorFrequency2, operatorFrequency3, operatorFrequency4, operatorFrequency5,\r\n    operatorAmplitude0, operatorAmplitude1, operatorAmplitude2, operatorAmplitude3, operatorAmplitude4, operatorAmplitude5,\r\n    feedbackAmplitude,\r\n    pitchShift,\r\n    detune,\r\n    vibratoDepth,\r\n    noteFilterFreq0, noteFilterFreq1, noteFilterFreq2, noteFilterFreq3, noteFilterFreq4, noteFilterFreq5, noteFilterFreq6, noteFilterFreq7,\r\n    noteFilterGain0, noteFilterGain1, noteFilterGain2, noteFilterGain3, noteFilterGain4, noteFilterGain5, noteFilterGain6, noteFilterGain7,\r\n    length,\r\n}\r\n\r\n/*\r\nexport const enum InstrumentAutomationIndex {\r\n    mixVolume,\r\n    eqFilterAllFreqs,\r\n    eqFilterFreq0, eqFilterFreq1, eqFilterFreq2, eqFilterFreq3, eqFilterFreq4, eqFilterFreq5, eqFilterFreq6, eqFilterFreq7,\r\n    eqFilterGain0, eqFilterGain1, eqFilterGain2, eqFilterGain3, eqFilterGain4, eqFilterGain5, eqFilterGain6, eqFilterGain7,\r\n    distortion,\r\n    bitcrusherQuantization,\r\n    bitcrusherFrequency,\r\n    panning,\r\n    chorus,\r\n    echoSustain,\r\n    //echoDelay, // Wait until tick settings can be computed once for multiple run lengths.\r\n    reverb,\r\n    length,\r\n}\r\n*/\r\n\r\nexport interface BeepBoxOption {\r\n    readonly index: number;\r\n    readonly name: string;\r\n}\r\n\r\nexport interface Scale extends BeepBoxOption {\r\n    readonly flags: ReadonlyArray<boolean>;\r\n    readonly realName: string;\r\n}\r\n\r\nexport interface Key extends BeepBoxOption {\r\n    readonly isWhiteKey: boolean;\r\n    readonly basePitch: number;\r\n}\r\n\r\nexport interface Rhythm extends BeepBoxOption {\r\n    readonly stepsPerBeat: number;\r\n    readonly roundUpThresholds: number[] | null;\r\n}\r\n\r\nexport interface ChipWave extends BeepBoxOption {\r\n    readonly expression: number;\r\n    samples: Float32Array;\r\n    isPercussion?: boolean;\r\n    isCustomSampled?: boolean;\r\n    isSampled?: boolean;\r\n    extraSampleDetune?: number;\r\n    rootKey?: number;\r\n    sampleRate?: number;\r\n}\r\n\r\nexport interface OperatorWave extends BeepBoxOption {\r\n    samples: Float32Array;\r\n}\r\n\r\nexport interface ChipNoise extends BeepBoxOption {\r\n    readonly expression: number;\r\n    readonly basePitch: number;\r\n    readonly pitchFilterMult: number;\r\n    readonly isSoft: boolean;\r\n    samples: Float32Array | null;\r\n}\r\n\r\nexport interface Transition extends BeepBoxOption {\r\n    readonly isSeamless: boolean;\r\n    readonly continues: boolean;\r\n    readonly slides: boolean;\r\n    readonly slideTicks: number;\r\n    readonly includeAdjacentPatterns: boolean;\r\n}\r\n\r\nexport interface Vibrato extends BeepBoxOption {\r\n    readonly amplitude: number;\r\n    readonly type: number;\r\n    readonly delayTicks: number;\r\n}\r\n\r\nexport interface VibratoType extends BeepBoxOption {\r\n    readonly periodsSeconds: number[];\r\n    readonly period: number;\r\n}\r\n\r\nexport interface Unison extends BeepBoxOption {\r\n    readonly voices: number;\r\n    readonly spread: number;\r\n    readonly offset: number;\r\n    readonly expression: number;\r\n    readonly sign: number;\r\n}\r\n\r\nexport interface Modulator extends BeepBoxOption {\r\n    readonly name: string; // name that shows up in song editor UI\r\n    readonly pianoName: string; // short name that shows up in mod piano UI\r\n    readonly maxRawVol: number; // raw\r\n    readonly newNoteVol: number; // raw\r\n    readonly forSong: boolean; // true - setting is song scope\r\n    convertRealFactor: number; // offset that needs to be applied to get a \"real\" number display of value, for UI purposes\r\n    readonly associatedEffect: EffectType; // effect that should be enabled for this modulator to work properly. If unused, set to EffectType.length.\r\n    readonly promptName: string; // long-as-needed name that shows up in tip prompt\r\n    readonly promptDesc: string[]; // paragraph(s) describing how to use this mod\r\n\r\n}\r\n\r\nexport interface Chord extends BeepBoxOption {\r\n    readonly customInterval: boolean;\r\n    readonly arpeggiates: boolean;\r\n    readonly strumParts: number;\r\n    readonly singleTone: boolean;\r\n}\r\n\r\nexport interface Algorithm extends BeepBoxOption {\r\n    readonly carrierCount: number;\r\n    readonly associatedCarrier: ReadonlyArray<number>;\r\n    readonly modulatedBy: ReadonlyArray<ReadonlyArray<number>>;\r\n}\r\n\r\nexport interface OperatorFrequency extends BeepBoxOption {\r\n    readonly mult: number;\r\n    readonly hzOffset: number;\r\n    readonly amplitudeSign: number;\r\n}\r\n\r\nexport interface Feedback extends BeepBoxOption {\r\n    readonly indices: ReadonlyArray<ReadonlyArray<number>>;\r\n}\r\n\r\nexport interface Envelope extends BeepBoxOption {\r\n    readonly type: EnvelopeType;\r\n    readonly speed: number;\r\n}\r\n\r\nexport interface AutomationTarget extends BeepBoxOption {\r\n    readonly computeIndex: EnvelopeComputeIndex /*| InstrumentAutomationIndex*/ | null;\r\n    readonly displayName: string;\r\n    //readonly perNote: boolean; // Whether to compute envelopes on a per-note basis.\r\n    readonly interleave: boolean; // Whether to interleave this target with the next one in the menu.\r\n    readonly isFilter: boolean; // Filters have a variable maxCount in practice.\r\n    //readonly range: number | null; // set if automation is allowed.\r\n    readonly maxCount: number;\r\n    readonly effect: EffectType | null;\r\n    readonly compatibleInstruments: InstrumentType[] | null;\r\n}\r\n\r\nexport const enum SampleLoadingStatus {\r\n    loading,\r\n    loaded,\r\n    error,\r\n}\r\n\r\nexport function getSampleLoadingStatusName(status: SampleLoadingStatus): string {\r\n    switch (status) {\r\n\tcase SampleLoadingStatus.loading: return \"loading\";\r\n\tcase SampleLoadingStatus.loaded: return \"loaded\";\r\n\tcase SampleLoadingStatus.error: return \"error\";\r\n    }\r\n}\r\n\r\nexport class SampleLoadingState {\r\n    public statusTable: Dictionary<SampleLoadingStatus>;\r\n    public urlTable: Dictionary<string>;\r\n    public totalSamples: number;\r\n    public samplesLoaded: number;\r\n\r\n    constructor() {\r\n\tthis.statusTable = {};\r\n\tthis.urlTable = {};\r\n\tthis.totalSamples = 0;\r\n\tthis.samplesLoaded = 0;\r\n    }\r\n}\r\n\r\nexport const sampleLoadingState: SampleLoadingState = new SampleLoadingState();\r\n\r\nexport class SampleLoadedEvent extends Event {\r\n    public readonly totalSamples: number;\r\n    public readonly samplesLoaded: number;\r\n\r\n    constructor(totalSamples: number, samplesLoaded: number) {\r\n\tsuper(\"sampleloaded\");\r\n\tthis.totalSamples = totalSamples;\r\n\tthis.samplesLoaded = samplesLoaded;\r\n    }\r\n}\r\n\r\nexport interface SampleLoadEventMap {\r\n    \"sampleloaded\": SampleLoadedEvent;\r\n}\r\n\r\nexport class SampleLoadEvents extends EventTarget {\r\n    constructor() {\r\n\tsuper();\r\n    }\r\n}\r\n\r\nexport const sampleLoadEvents: SampleLoadEvents = new SampleLoadEvents();\r\n\r\nexport function startLoadingSample(url: string, chipWaveIndex: number, customSampleRate: number): void {\r\n    // @TODO: Make parts of the code that expect everything to already be\r\n    // in memory work correctly.\r\n    // It would be easy to only instantiate `SongEditor` and company after\r\n    // everything is loaded, but if dynamic sample loading without a reload\r\n    // is deemed necessary, anything that involves chip waves has to be\r\n    // revisited so as to be able to work with a changing list of chip\r\n    // waves that may or may not be ready to be used.\r\n    const sampleLoaderAudioContext = new AudioContext({ sampleRate: customSampleRate });\r\n    let closedSampleLoaderAudioContext: boolean = false;\r\n    const chipWave = Config.chipWaves[chipWaveIndex];\r\n    const rawChipWave = Config.rawChipWaves[chipWaveIndex];\r\n    const rawRawChipWave = Config.rawRawChipWaves[chipWaveIndex];\r\n    fetch(url).then((response) => {\r\n\tif (!response.ok) {\r\n\t    // @TODO: Be specific with the error handling.\r\n\t    sampleLoadingState.statusTable[chipWaveIndex] = SampleLoadingStatus.error;\r\n\t    return Promise.reject(new Error(\"Couldn't load sample\"));\r\n\t}\r\n\treturn response.arrayBuffer();\r\n    }).then((arrayBuffer) => {\r\n\treturn sampleLoaderAudioContext.decodeAudioData(arrayBuffer);\r\n    }).then((audioBuffer) => {\r\n\t// @TODO: Downmix.\r\n\tconst samples = centerWave(Array.from(audioBuffer.getChannelData(0)));\r\n\tconst integratedSamples = performIntegral(samples);\r\n\tchipWave.samples = integratedSamples;\r\n\trawChipWave.samples = samples;\r\n\trawRawChipWave.samples = samples;\r\n\tsampleLoadingState.samplesLoaded++;\r\n\tsampleLoadingState.statusTable[chipWaveIndex] = SampleLoadingStatus.loaded;\r\n\tsampleLoadEvents.dispatchEvent(new SampleLoadedEvent(\r\n\t    sampleLoadingState.totalSamples,\r\n\t    sampleLoadingState.samplesLoaded\r\n\t));\r\n\tif (!closedSampleLoaderAudioContext) {\r\n\t    closedSampleLoaderAudioContext = true;\r\n\t    sampleLoaderAudioContext.close();\r\n\t}\r\n    }).catch((error) => {\r\n\t//console.error(error);\r\n\tsampleLoadingState.statusTable[chipWaveIndex] = SampleLoadingStatus.error;\r\n\talert(\"Failed to load \" + url + \":\\n\" + error);\r\n\tif (!closedSampleLoaderAudioContext) {\r\n\t    closedSampleLoaderAudioContext = true;\r\n\t    sampleLoaderAudioContext.close();\r\n\t}\r\n    });\r\n}\r\n\r\nexport function getLocalStorageItem<T>(key: string, defaultValue: T): T | string {\r\n    let value: T | string | null = localStorage.getItem(key);\r\n    if (value == null || value === \"null\" || value === \"undefined\") {\r\n        value = defaultValue;\r\n    }\r\n    return value;\r\n}\r\n\r\n// @HACK: This just assumes these exist, regardless of whether they actually do\r\n// or not.\r\ndeclare global {\r\n    const kicksample: number[];\r\n    const snaresample: number[];\r\n    const pianosample: number[];\r\n    const WOWsample: number[];\r\n    const overdrivesample: number[];\r\n    const trumpetsample: number[];\r\n    const saxophonesample: number[];\r\n    const orchhitsample: number[];\r\n    const detatchedviolinsample: number[];\r\n    const synthsample: number[];\r\n    const sonic3snaresample: number[];\r\n    const comeonsample: number[];\r\n    const choirsample: number[];\r\n    const overdrivensample: number[];\r\n    const flutesample: number[];\r\n    const legatoviolinsample: number[];\r\n    const tremoloviolinsample: number[];\r\n    const amenbreaksample: number[];\r\n    const pizzicatoviolinsample: number[];\r\n    const timallengruntsample: number[];\r\n    const tubasample: number[];\r\n    const loopingcymbalsample: number[];\r\n    const kickdrumsample: number[];\r\n    const snaredrumsample: number[];\r\n    const closedhihatsample: number[];\r\n    const foothihatsample: number[];\r\n    const openhihatsample: number[];\r\n    const crashsample: number[];\r\n    const pianoC4sample: number[];\r\n    const liverpadsample: number[];\r\n    const marimbasample: number[];\r\n    const susdotwavsample: number[];\r\n    const wackyboxttssample: number[];\r\n    const peppersteak1: number[];\r\n    const peppersteak2: number[];\r\n    const vinyl: number[];\r\n    const slapbass: number[];\r\n    const hdeboverdrive: number[];\r\n    const sunsoftbass: number[];\r\n    const masculinechoir: number[];\r\n    const femininechoir: number[];\r\n    const southtololoche: number[];\r\n    const harp: number[];\r\n    const panflute: number[];\r\n    const krumhorn: number[];\r\n    const timpani: number[];\r\n    const crowdhey: number[];\r\n    const warioland4brass: number[];\r\n    const warioland4organ: number[];\r\n    const warioland4daow: number[];\r\n    const warioland4hourchime: number[];\r\n    const warioland4tick: number[];\r\n    const kirbykick: number[];\r\n    const kirbysnare: number[];\r\n    const kirbybongo: number[];\r\n    const kirbyclick: number[];\r\n    const funkkick: number[];\r\n    const funksnare: number[];\r\n    const funksnareleft: number[];\r\n    const funksnareright: number[];\r\n    const funktomhigh: number[];\r\n    const funktomlow: number[];\r\n    const funkhihatclosed: number[];\r\n    const funkhihathalfopen: number[];\r\n    const funkhihatopen: number[];\r\n    const funkhihatopentip: number[];\r\n    const funkhihatfoot: number[];\r\n    const funkcrash: number[];\r\n    const funkcrashtip: number[];\r\n    const funkride: number[];\r\n    const chronoperc1finalsample: number[];\r\n    const synthkickfmsample: number[];\r\n    const woodclicksample: number[];\r\n    const acousticsnaresample: number[];\r\n    const catpaintboxsample: number[];\r\n    const gameboypaintboxsample: number[];\r\n    const mariopaintboxsample: number[];\r\n    const drumpaintboxsample: number[];\r\n    const yoshipaintboxsample: number[];\r\n    const starpaintboxsample: number[];\r\n    const fireflowerpaintboxsample: number[];\r\n    const dogpaintbox: number[];\r\n    const oinkpaintbox: number[];\r\n    const swanpaintboxsample: number[];\r\n    const facepaintboxsample: number[];\r\n}\r\n\r\nfunction loadScript(url: string): Promise<void> {\r\n    const result: Promise<void> = new Promise((resolve, reject) => {\r\n\tif (!Config.willReloadForCustomSamples) {\r\n\t    const script = document.createElement(\"script\");\r\n\t    script.src = url;\r\n\t    document.head.appendChild(script);\r\n\t    script.addEventListener(\"load\", (event) => {\r\n\t\tresolve();\r\n\t    });\r\n\t} else {\r\n\t    // There's not really any errors that show up if the loading for\r\n\t    // this script is stopped early, but it won't really do anything\r\n\t    // particularly useful either in that case.\r\n\t}\r\n    });\r\n    return result;\r\n}\r\n\r\nexport function loadBuiltInSamples(set: number): void {\r\n    const defaultIndex: number = 0;\r\n    const defaultIntegratedSamples: Float32Array = Config.chipWaves[defaultIndex].samples;\r\n    const defaultSamples: Float32Array = Config.rawRawChipWaves[defaultIndex].samples;\r\n\r\n    if (set == 0) {\r\n\t// Create chip waves with the wrong sound.\r\n\tconst chipWaves = [\r\n\t    { name: \"paandorasbox kick\", expression: 4.0, isSampled: true, isPercussion: true, extraSampleDetune: 0 },\r\n\t    { name: \"paandorasbox snare\", expression: 3.0, isSampled: true, isPercussion: true, extraSampleDetune: 0 },\r\n\t    { name: \"paandorasbox piano1\", expression: 3.0, isSampled: true, isPercussion: false, extraSampleDetune: 2 },\r\n\t    { name: \"paandorasbox WOW\", expression: 1.0, isSampled: true, isPercussion: false, extraSampleDetune: 0 },\r\n\t    { name: \"paandorasbox overdrive\", expression: 1.0, isSampled: true, isPercussion: false, extraSampleDetune: -2 },\r\n\t    { name: \"paandorasbox trumpet\", expression: 3.0, isSampled: true, isPercussion: false, extraSampleDetune: 1.2 },\r\n\t    { name: \"paandorasbox saxophone\", expression: 2.0, isSampled: true, isPercussion: false, extraSampleDetune: -5 },\r\n\t    { name: \"paandorasbox orchestrahit\", expression: 2.0, isSampled: true, isPercussion: false, extraSampleDetune: 4.2 },\r\n\t    { name: \"paandorasbox detatched violin\", expression: 2.0, isSampled: true, isPercussion: false, extraSampleDetune: 4.2 },\r\n\t    { name: \"paandorasbox synth\", expression: 2.0, isSampled: true, isPercussion: false, extraSampleDetune: -0.8 },\r\n\t    { name: \"paandorasbox sonic3snare\", expression: 2.0, isSampled: true, isPercussion: true, extraSampleDetune: 0 },\r\n\t    { name: \"paandorasbox come on\", expression: 2.0, isSampled: true, isPercussion: false, extraSampleDetune: 0 },\r\n\t    { name: \"paandorasbox choir\", expression: 2.0, isSampled: true, isPercussion: false, extraSampleDetune: -3 },\r\n\t    { name: \"paandorasbox overdriveguitar\", expression: 2.0, isSampled: true, isPercussion: false, extraSampleDetune: -6.2 },\r\n\t    { name: \"paandorasbox flute\", expression: 2.0, isSampled: true, isPercussion: false, extraSampleDetune: -6 },\r\n\t    { name: \"paandorasbox legato violin\", expression: 2.0, isSampled: true, isPercussion: false, extraSampleDetune: -28 },\r\n\t    { name: \"paandorasbox tremolo violin\", expression: 2.0, isSampled: true, isPercussion: false, extraSampleDetune: -33 },\r\n\t    { name: \"paandorasbox amen break\", expression: 1.0, isSampled: true, isPercussion: true, extraSampleDetune: -55 },\r\n\t    { name: \"paandorasbox pizzicato violin\", expression: 2.0, isSampled: true, isPercussion: true, extraSampleDetune: -11 },\r\n\t    { name: \"paandorasbox tim allen grunt\", expression: 2.0, isSampled: true, isPercussion: false, extraSampleDetune: -20 },\r\n\t    { name: \"paandorasbox tuba\", expression: 2.0, isSampled: true, isPercussion: false, extraSampleDetune: 44 },\r\n\t    { name: \"paandorasbox loopingcymbal\", expression: 2.0, isSampled: true, isPercussion: false, extraSampleDetune: -17 },\r\n\t    { name: \"paandorasbox standardkick\", expression: 2.0, isSampled: true, isPercussion: true, extraSampleDetune: -7 },\r\n\t    { name: \"paandorasbox standardsnare\", expression: 2.0, isSampled: true, isPercussion: true, extraSampleDetune: 0 },\r\n\t    { name: \"paandorasbox closedhihat\", expression: 2.0, isSampled: true, isPercussion: true, extraSampleDetune: 5 },\r\n\t    { name: \"paandorasbox foothihat\", expression: 2.0, isSampled: true, isPercussion: true, extraSampleDetune: 4 },\r\n\t    { name: \"paandorasbox openhihat\", expression: 2.0, isSampled: true, isPercussion: true, extraSampleDetune: -31 },\r\n\t    { name: \"paandorasbox crashcymbal\", expression: 2.0, isSampled: true, isPercussion: true, extraSampleDetune: -43 },\r\n\t    { name: \"paandorasbox pianoC4\", expression: 2.0, isSampled: true, isPercussion: false, extraSampleDetune: -42.5 },\r\n\t    { name: \"paandorasbox liver pad\", expression: 2.0, isSampled: true, isPercussion: false, extraSampleDetune: -22.5 },\r\n\t    { name: \"paandorasbox marimba\", expression: 2.0, isSampled: true, isPercussion: false, extraSampleDetune: -15.5 },\r\n\t    { name: \"paandorasbox susdotwav\", expression: 2.0, isSampled: true, isPercussion: false, extraSampleDetune: -24.5 },\r\n\t    { name: \"paandorasbox wackyboxtts\", expression: 2.0, isSampled: true, isPercussion: false, extraSampleDetune: -17.5 },\r\n\t    { name: \"paandorasbox peppersteak_1\", expression: 2.0, isSampled: true, isPercussion: false, extraSampleDetune: -42.2 },\r\n\t    { name: \"paandorasbox peppersteak_2\", expression: 2.0, isSampled: true, isPercussion: false, extraSampleDetune: -47 },\r\n\t    { name: \"paandorasbox vinyl_noise\", expression: 2.0, isSampled: true, isPercussion: true, extraSampleDetune: -50 },\r\n\t    { name: \"paandorasbeta slap bass\", expression: 1.0, isSampled: true, isPercussion: false, extraSampleDetune: -56 },\r\n\t    { name: \"paandorasbeta HD EB overdrive guitar\", expression: 1.0, isSampled: true, isPercussion: false, extraSampleDetune: -60 },\r\n\t    { name: \"paandorasbeta sunsoft bass\", expression: 1.0, isSampled: true, isPercussion: false, extraSampleDetune: -18.5 },\r\n\t    { name: \"paandorasbeta masculine choir\", expression: 1.0, isSampled: true, isPercussion: false, extraSampleDetune: -50 },\r\n\t    { name: \"paandorasbeta feminine choir\", expression: 1.0, isSampled: true, isPercussion: false, extraSampleDetune: -60.5 },\r\n\t    { name: \"paandorasbeta tololoche\", expression: 1.0, isSampled: true, isPercussion: false, extraSampleDetune: -29.5 },\r\n\t    { name: \"paandorasbeta harp\", expression: 1.0, isSampled: true, isPercussion: false, extraSampleDetune: -54 },\r\n\t    { name: \"paandorasbeta pan flute\", expression: 1.0, isSampled: true, isPercussion: false, extraSampleDetune: -58 },\r\n\t    { name: \"paandorasbeta krumhorn\", expression: 1.0, isSampled: true, isPercussion: false, extraSampleDetune: -46 },\r\n\t    { name: \"paandorasbeta timpani\", expression: 1.0, isSampled: true, isPercussion: false, extraSampleDetune: -50 },\r\n\t    { name: \"paandorasbeta crowd hey\", expression: 1.0, isSampled: true, isPercussion: true, extraSampleDetune: -29 },\r\n\t    { name: \"paandorasbeta wario land 4 brass\", expression: 1.0, isSampled: true, isPercussion: false, extraSampleDetune: -68 },\r\n\t    { name: \"paandorasbeta wario land 4 rock organ\", expression: 1.0, isSampled: true, isPercussion: false, extraSampleDetune: -63 },\r\n\t    { name: \"paandorasbeta wario land 4 DAOW\", expression: 1.0, isSampled: true, isPercussion: false, extraSampleDetune: -35 },\r\n\t    { name: \"paandorasbeta wario land 4 hour chime\", expression: 1.0, isSampled: true, isPercussion: false, extraSampleDetune: -47.5 },\r\n\t    { name: \"paandorasbeta wario land 4 tick\", expression: 1.0, isSampled: true, isPercussion: true, extraSampleDetune: -12.5 },\r\n\t    { name: \"paandorasbeta kirby kick\", expression: 1.0, isSampled: true, isPercussion: true, extraSampleDetune: -46.5 },\r\n\t    { name: \"paandorasbeta kirby snare\", expression: 1.0, isSampled: true, isPercussion: true, extraSampleDetune: -46.5 },\r\n\t    { name: \"paandorasbeta kirby bongo\", expression: 1.0, isSampled: true, isPercussion: true, extraSampleDetune: -46.5 },\r\n\t    { name: \"paandorasbeta kirby click\", expression: 1.0, isSampled: true, isPercussion: true, extraSampleDetune: -46.5 },\r\n\t    { name: \"paandorasbeta sonor kick\", expression: 1.0, isSampled: true, isPercussion: true, extraSampleDetune: -28.5 },\r\n\t    { name: \"paandorasbeta sonor snare\", expression: 1.0, isSampled: true, isPercussion: true, extraSampleDetune: -28.5 },\r\n\t    { name: \"paandorasbeta sonor snare (left hand)\", expression: 1.0, isSampled: true, isPercussion: true, extraSampleDetune: -22.5 },\r\n\t    { name: \"paandorasbeta sonor snare (right hand)\", expression: 1.0, isSampled: true, isPercussion: true, extraSampleDetune: -22.5 },\r\n\t    { name: \"paandorasbeta sonor high tom\", expression: 1.0, isSampled: true, isPercussion: true, extraSampleDetune: -41.5 },\r\n\t    { name: \"paandorasbeta sonor low tom\", expression: 1.0, isSampled: true, isPercussion: true, extraSampleDetune: -41.5 },\r\n\t    { name: \"paandorasbeta sonor hihat (closed)\", expression: 1.0, isSampled: true, isPercussion: true, extraSampleDetune: -17 },\r\n\t    { name: \"paandorasbeta sonor hihat (half opened)\", expression: 1.0, isSampled: true, isPercussion: true, extraSampleDetune: -21 },\r\n\t    { name: \"paandorasbeta sonor hihat (open)\", expression: 1.0, isSampled: true, isPercussion: true, extraSampleDetune: -54.5 },\r\n\t    { name: \"paandorasbeta sonor hihat (open tip)\", expression: 1.0, isSampled: true, isPercussion: true, extraSampleDetune: -43.5 },\r\n\t    { name: \"paandorasbeta sonor hihat (pedal)\", expression: 1.0, isSampled: true, isPercussion: true, extraSampleDetune: -28 },\r\n\t    { name: \"paandorasbeta sonor crash\", expression: 1.0, isSampled: true, isPercussion: true, extraSampleDetune: -51 },\r\n\t    { name: \"paandorasbeta sonor crash (tip)\", expression: 1.0, isSampled: true, isPercussion: true, extraSampleDetune: -50.5 },\r\n\t    { name: \"paandorasbeta sonor ride\", expression: 1.0, isSampled: true, isPercussion: true, extraSampleDetune: -46 }\r\n\t];\r\n\r\n\tsampleLoadingState.totalSamples += chipWaves.length;\r\n\r\n\t// This assumes that Config.rawRawChipWaves and Config.chipWaves have\r\n\t// the same number of elements.\r\n\tconst startIndex: number = Config.rawRawChipWaves.length;\r\n\tfor (const chipWave of chipWaves) {\r\n\t    const chipWaveIndex: number = Config.rawRawChipWaves.length;\r\n\t    const rawChipWave = { index: chipWaveIndex, name: chipWave.name, expression: chipWave.expression, isSampled: chipWave.isSampled, isPercussion: chipWave.isPercussion, extraSampleDetune: chipWave.extraSampleDetune, samples: defaultSamples };\r\n\t    const rawRawChipWave = { index: chipWaveIndex, name: chipWave.name, expression: chipWave.expression, isSampled: chipWave.isSampled, isPercussion: chipWave.isPercussion, extraSampleDetune: chipWave.extraSampleDetune, samples: defaultSamples };\r\n\t    const integratedChipWave = { index: chipWaveIndex, name: chipWave.name, expression: chipWave.expression, isSampled: chipWave.isSampled, isPercussion: chipWave.isPercussion, extraSampleDetune: chipWave.extraSampleDetune, samples: defaultIntegratedSamples };\r\n\t    Config.rawRawChipWaves[chipWaveIndex] = rawRawChipWave;\r\n\t    Config.rawRawChipWaves.dictionary[chipWave.name] = rawRawChipWave;\r\n\t    Config.rawChipWaves[chipWaveIndex] = rawChipWave;\r\n\t    Config.rawChipWaves.dictionary[chipWave.name] = rawChipWave;\r\n\t    Config.chipWaves[chipWaveIndex] = integratedChipWave;\r\n\t    Config.chipWaves.dictionary[chipWave.name] = rawChipWave;\r\n\t    sampleLoadingState.statusTable[chipWaveIndex] = SampleLoadingStatus.loading;\r\n\t    sampleLoadingState.urlTable[chipWaveIndex] = \"legacySamples\";\r\n\t}\r\n\r\n\tloadScript(\"samples.js\")\r\n\t.then(() => loadScript(\"samples2.js\"))\r\n\t.then(() => loadScript(\"samples3.js\"))\r\n\t.then(() => loadScript(\"drumsamples.js\"))\r\n\t.then(() => loadScript(\"wario_samples.js\"))\r\n\t.then(() => loadScript(\"kirby_samples.js\"))\r\n\t.then(() => {\r\n\t    // Now put the right sounds in there after everything\r\n\t    // got loaded.\r\n\t    const chipWaveSamples: Float32Array[] = [\r\n\t\tcenterWave(kicksample),\r\n\t\tcenterWave(snaresample),\r\n\t\tcenterWave(pianosample),\r\n\t\tcenterWave(WOWsample),\r\n\t\tcenterWave(overdrivesample),\r\n\t\tcenterWave(trumpetsample),\r\n\t\tcenterWave(saxophonesample),\r\n\t\tcenterWave(orchhitsample),\r\n\t\tcenterWave(detatchedviolinsample),\r\n\t\tcenterWave(synthsample),\r\n\t\tcenterWave(sonic3snaresample),\r\n\t\tcenterWave(comeonsample),\r\n\t\tcenterWave(choirsample),\r\n\t\tcenterWave(overdrivensample),\r\n\t\tcenterWave(flutesample),\r\n\t\tcenterWave(legatoviolinsample),\r\n\t\tcenterWave(tremoloviolinsample),\r\n\t\tcenterWave(amenbreaksample),\r\n\t\tcenterWave(pizzicatoviolinsample),\r\n\t\tcenterWave(timallengruntsample),\r\n\t\tcenterWave(tubasample),\r\n\t\tcenterWave(loopingcymbalsample),\r\n\t\tcenterWave(kickdrumsample),\r\n\t\tcenterWave(snaredrumsample),\r\n\t\tcenterWave(closedhihatsample),\r\n\t\tcenterWave(foothihatsample),\r\n\t\tcenterWave(openhihatsample),\r\n\t\tcenterWave(crashsample),\r\n\t\tcenterWave(pianoC4sample),\r\n\t\tcenterWave(liverpadsample),\r\n\t\tcenterWave(marimbasample),\r\n\t\tcenterWave(susdotwavsample),\r\n\t\tcenterWave(wackyboxttssample),\r\n\t\tcenterWave(peppersteak1),\r\n\t\tcenterWave(peppersteak2),\r\n\t\tcenterWave(vinyl),\r\n\t\tcenterWave(slapbass),\r\n\t\tcenterWave(hdeboverdrive),\r\n\t\tcenterWave(sunsoftbass),\r\n\t\tcenterWave(masculinechoir),\r\n\t\tcenterWave(femininechoir),\r\n\t\tcenterWave(southtololoche),\r\n\t\tcenterWave(harp),\r\n\t\tcenterWave(panflute),\r\n\t\tcenterWave(krumhorn),\r\n\t\tcenterWave(timpani),\r\n\t\tcenterWave(crowdhey),\r\n\t\tcenterWave(warioland4brass),\r\n\t\tcenterWave(warioland4organ),\r\n\t\tcenterWave(warioland4daow),\r\n\t\tcenterWave(warioland4hourchime),\r\n\t\tcenterWave(warioland4tick),\r\n\t\tcenterWave(kirbykick),\r\n\t\tcenterWave(kirbysnare),\r\n\t\tcenterWave(kirbybongo),\r\n\t\tcenterWave(kirbyclick),\r\n\t\tcenterWave(funkkick),\r\n\t\tcenterWave(funksnare),\r\n\t\tcenterWave(funksnareleft),\r\n\t\tcenterWave(funksnareright),\r\n\t\tcenterWave(funktomhigh),\r\n\t\tcenterWave(funktomlow),\r\n\t\tcenterWave(funkhihatclosed),\r\n\t\tcenterWave(funkhihathalfopen),\r\n\t\tcenterWave(funkhihatopen),\r\n\t\tcenterWave(funkhihatopentip),\r\n\t\tcenterWave(funkhihatfoot),\r\n\t\tcenterWave(funkcrash),\r\n\t\tcenterWave(funkcrashtip),\r\n\t\tcenterWave(funkride)\r\n\t    ];\r\n\t    let chipWaveIndexOffset: number = 0;\r\n\t    for (const chipWaveSample of chipWaveSamples) {\r\n\t\tconst chipWaveIndex: number = startIndex + chipWaveIndexOffset;\r\n\t\tConfig.rawChipWaves[chipWaveIndex].samples = chipWaveSample;\r\n\t\tConfig.rawRawChipWaves[chipWaveIndex].samples = chipWaveSample;\r\n\t\tConfig.chipWaves[chipWaveIndex].samples = performIntegral(chipWaveSample);\r\n\t\tsampleLoadingState.statusTable[chipWaveIndex] = SampleLoadingStatus.loaded;\r\n\t\tsampleLoadingState.samplesLoaded++;\r\n\t\tsampleLoadEvents.dispatchEvent(new SampleLoadedEvent(\r\n\t\t    sampleLoadingState.totalSamples,\r\n\t\t    sampleLoadingState.samplesLoaded\r\n\t\t));\r\n\t\tchipWaveIndexOffset++;\r\n\t    }\r\n\t});\r\n\t//EditorConfig.presetCategories[EditorConfig.presetCategories.length] = {name: \"Legacy Sample Presets\", presets:  { name: \"Earthbound O. Guitar\", midiProgram: 80, settings: { \"type\": \"chip\", \"eqFilter\": [], \"effects\": [], \"transition\": \"normal\", \"fadeInSeconds\": 0, \"fadeOutTicks\": -1, \"chord\": \"arpeggio\", \"wave\": \"paandorasbox overdrive\", \"unison\": \"none\", \"envelopes\": [] } }, index: EditorConfig.presetCategories.length,};\r\n    }\r\n    else if (set == 1) {\r\n\t// Create chip waves with the wrong sound.\r\n\tconst chipWaves = [\r\n\t    { name: \"chronoperc1final\", expression: 4.0, isSampled: true, isPercussion: true, extraSampleDetune: 0 },\r\n\t    { name: \"synthkickfm\", expression: 4.0, isSampled: true, isPercussion: true, extraSampleDetune: 0 },\r\n\t    { name: \"mcwoodclick1\", expression: 4.0, isSampled: true, isPercussion: true, extraSampleDetune: 0 },\r\n\t    { name: \"acoustic snare\", expression: 4.0, isSampled: true, isPercussion: true, extraSampleDetune: 0 }\r\n\t];\r\n\r\n\tsampleLoadingState.totalSamples += chipWaves.length;\r\n\r\n\t// This assumes that Config.rawRawChipWaves and Config.chipWaves have\r\n\t// the same number of elements.\r\n\tconst startIndex: number = Config.rawRawChipWaves.length;\r\n\tfor (const chipWave of chipWaves) {\r\n\t    const chipWaveIndex: number = Config.rawRawChipWaves.length;\r\n\t    const rawChipWave = { index: chipWaveIndex, name: chipWave.name, expression: chipWave.expression, isSampled: chipWave.isSampled, isPercussion: chipWave.isPercussion, extraSampleDetune: chipWave.extraSampleDetune, samples: defaultSamples };\r\n\t    const rawRawChipWave = { index: chipWaveIndex, name: chipWave.name, expression: chipWave.expression, isSampled: chipWave.isSampled, isPercussion: chipWave.isPercussion, extraSampleDetune: chipWave.extraSampleDetune, samples: defaultSamples };\r\n\t    const integratedChipWave = { index: chipWaveIndex, name: chipWave.name, expression: chipWave.expression, isSampled: chipWave.isSampled, isPercussion: chipWave.isPercussion, extraSampleDetune: chipWave.extraSampleDetune, samples: defaultIntegratedSamples };\r\n\t    Config.rawRawChipWaves[chipWaveIndex] = rawRawChipWave;\r\n\t    Config.rawRawChipWaves.dictionary[chipWave.name] = rawRawChipWave;\r\n\t    Config.rawChipWaves[chipWaveIndex] = rawChipWave;\r\n\t    Config.rawChipWaves.dictionary[chipWave.name] = rawChipWave;\r\n\t    Config.chipWaves[chipWaveIndex] = integratedChipWave;\r\n\t    Config.chipWaves.dictionary[chipWave.name] = rawChipWave;\r\n\t    sampleLoadingState.statusTable[chipWaveIndex] = SampleLoadingStatus.loading;\r\n\t    sampleLoadingState.urlTable[chipWaveIndex] = \"nintariboxSamples\";\r\n\t}\r\n\r\n\tloadScript(\"nintaribox_samples.js\")\r\n\t.then(() => {\r\n\t    // Now put the right sounds in there after everything\r\n\t    // got loaded.\r\n\t    const chipWaveSamples: Float32Array[] = [\r\n\t\tcenterWave(chronoperc1finalsample),\r\n\t\tcenterWave(synthkickfmsample),\r\n\t\tcenterWave(woodclicksample),\r\n\t\tcenterWave(acousticsnaresample)\r\n\t    ];\r\n\t    let chipWaveIndexOffset: number = 0;\r\n\t    for (const chipWaveSample of chipWaveSamples) {\r\n\t\tconst chipWaveIndex: number = startIndex + chipWaveIndexOffset;\r\n\t\tConfig.rawChipWaves[chipWaveIndex].samples = chipWaveSample;\r\n\t\tConfig.rawRawChipWaves[chipWaveIndex].samples = chipWaveSample;\r\n\t\tConfig.chipWaves[chipWaveIndex].samples = performIntegral(chipWaveSample);\r\n\t\tsampleLoadingState.statusTable[chipWaveIndex] = SampleLoadingStatus.loaded;\r\n\t\tsampleLoadingState.samplesLoaded++;\r\n\t\tsampleLoadEvents.dispatchEvent(new SampleLoadedEvent(\r\n\t\t    sampleLoadingState.totalSamples,\r\n\t\t    sampleLoadingState.samplesLoaded\r\n\t\t));\r\n\t\tchipWaveIndexOffset++;\r\n\t    }\r\n\t});\r\n    }\r\n    else if (set == 2) {\r\n\t// Create chip waves with the wrong sound.\r\n\tconst chipWaves = [\r\n\t    { name: \"cat\", expression: 1, isSampled: true, isPercussion: false, extraSampleDetune: -3 },\r\n\t    { name: \"gameboy\", expression: 1, isSampled: true, isPercussion: false, extraSampleDetune: 7 },\r\n\t    { name: \"mario\", expression: 1, isSampled: true, isPercussion: false, extraSampleDetune: 0 },\r\n\t    { name: \"drum\", expression: 1, isSampled: true, isPercussion: false, extraSampleDetune: 4 },\r\n\t    { name: \"yoshi\", expression: 1, isSampled: true, isPercussion: false, extraSampleDetune: -16 },\r\n\t    { name: \"star\", expression: 1, isSampled: true, isPercussion: false, extraSampleDetune: -16 },\r\n\t    { name: \"fire flower\", expression: 1, isSampled: true, isPercussion: false, extraSampleDetune: -1 },\r\n\t    { name: \"dog\", expression: 1, isSampled: true, isPercussion: false, extraSampleDetune: -1 },\r\n\t    { name: \"oink\", expression: 1, isSampled: true, isPercussion: false, extraSampleDetune: 3 },\r\n\t    { name: \"swan\", expression: 1, isSampled: true, isPercussion: false, extraSampleDetune: 1 },\r\n\t    { name: \"face\", expression: 1, isSampled: true, isPercussion: false, extraSampleDetune: -12 }\r\n\t];\r\n\r\n\tsampleLoadingState.totalSamples += chipWaves.length;\r\n\r\n\t// This assumes that Config.rawRawChipWaves and Config.chipWaves have\r\n\t// the same number of elements.\r\n\tconst startIndex: number = Config.rawRawChipWaves.length;\r\n\tfor (const chipWave of chipWaves) {\r\n\t    const chipWaveIndex: number = Config.rawRawChipWaves.length;\r\n\t    const rawChipWave = { index: chipWaveIndex, name: chipWave.name, expression: chipWave.expression, isSampled: chipWave.isSampled, isPercussion: chipWave.isPercussion, extraSampleDetune: chipWave.extraSampleDetune, samples: defaultSamples };\r\n\t    const rawRawChipWave = { index: chipWaveIndex, name: chipWave.name, expression: chipWave.expression, isSampled: chipWave.isSampled, isPercussion: chipWave.isPercussion, extraSampleDetune: chipWave.extraSampleDetune, samples: defaultSamples };\r\n\t    const integratedChipWave = { index: chipWaveIndex, name: chipWave.name, expression: chipWave.expression, isSampled: chipWave.isSampled, isPercussion: chipWave.isPercussion, extraSampleDetune: chipWave.extraSampleDetune, samples: defaultIntegratedSamples };\r\n\t    Config.rawRawChipWaves[chipWaveIndex] = rawRawChipWave;\r\n\t    Config.rawRawChipWaves.dictionary[chipWave.name] = rawRawChipWave;\r\n\t    Config.rawChipWaves[chipWaveIndex] = rawChipWave;\r\n\t    Config.rawChipWaves.dictionary[chipWave.name] = rawChipWave;\r\n\t    Config.chipWaves[chipWaveIndex] = integratedChipWave;\r\n\t    Config.chipWaves.dictionary[chipWave.name] = rawChipWave;\r\n\t    sampleLoadingState.statusTable[chipWaveIndex] = SampleLoadingStatus.loading;\r\n\t    sampleLoadingState.urlTable[chipWaveIndex] = \"marioPaintboxSamples\";\r\n\t}\r\n\r\n\tloadScript(\"mario_paintbox_samples.js\")\r\n\t.then(() => {\r\n\t    // Now put the right sounds in there after everything\r\n\t    // got loaded.\r\n\t    const chipWaveSamples: Float32Array[] = [\r\n\t\tcenterWave(catpaintboxsample),\r\n\t\tcenterWave(gameboypaintboxsample),\r\n\t\tcenterWave(mariopaintboxsample),\r\n\t\tcenterWave(drumpaintboxsample),\r\n\t\tcenterWave(yoshipaintboxsample),\r\n\t\tcenterWave(starpaintboxsample),\r\n\t\tcenterWave(fireflowerpaintboxsample),\r\n\t\tcenterWave(dogpaintbox),\r\n\t\tcenterWave(oinkpaintbox),\r\n\t\tcenterWave(swanpaintboxsample),\r\n\t\tcenterWave(facepaintboxsample)\r\n\t    ];\r\n\t    let chipWaveIndexOffset: number = 0;\r\n\t    for (const chipWaveSample of chipWaveSamples) {\r\n\t\tconst chipWaveIndex: number = startIndex + chipWaveIndexOffset;\r\n\t\tConfig.rawChipWaves[chipWaveIndex].samples = chipWaveSample;\r\n\t\tConfig.rawRawChipWaves[chipWaveIndex].samples = chipWaveSample;\r\n\t\tConfig.chipWaves[chipWaveIndex].samples = performIntegral(chipWaveSample);\r\n\t\tsampleLoadingState.statusTable[chipWaveIndex] = SampleLoadingStatus.loaded;\r\n\t\tsampleLoadingState.samplesLoaded++;\r\n\t\tsampleLoadEvents.dispatchEvent(new SampleLoadedEvent(\r\n\t\t    sampleLoadingState.totalSamples,\r\n\t\t    sampleLoadingState.samplesLoaded\r\n\t\t));\r\n\t\tchipWaveIndexOffset++;\r\n\t    }\r\n\t});\r\n    }\r\n    else {\r\n        console.log(\"invalid set of built-in samples\");\r\n    }\r\n}\r\n\r\nexport class Config {\r\n    // Params for post-processing compressor\r\n    public static thresholdVal: number = -10;\r\n    public static kneeVal: number = 40;\r\n    public static ratioVal: number = 12;\r\n    public static attackVal: number = 0;\r\n    public static releaseVal: number = 0.25;\r\n\r\n    public static willReloadForCustomSamples: boolean = false;\r\n\r\n    public static readonly scales: DictionaryArray<Scale> = toNameMap([\r\n\r\n\t\t//   C     Db      D     Eb      E      F     F#      G     Ab      A     Bb      B      C\r\n\t\t//{ name: \"Free\", realName: \"chromatic\", flags: [true, true, true, true, true, true, true, true, true, true, true, true] }, // Free\r\n        { name: \"Free\", realName: \"chromatic\", flags: [true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true] }, // Free\r\n        { name: \"Major\", realName: \"ionian\", flags: [true, false, true, false, true, true, false, true, false, true, false, true] }, // Major\r\n        { name: \"Minor\", realName: \"aeolian\", flags: [true, false, true, true, false, true, false, true, true, false, true, false] }, // Minor\r\n        { name: \"Mixolydian\", realName: \"mixolydian\", flags: [true, false, true, false, true, true, false, true, false, true, true, false] }, // Mixolydian\r\n        { name: \"Lydian\", realName: \"lydian\", flags: [true, false, true, false, true, false, true, true, false, true, false, true] }, // Lydian\r\n        { name: \"Dorian\", realName: \"dorian\", flags: [true, false, true, true, false, true, false, true, false, true, true, false] }, // Dorian\r\n        { name: \"Phrygian\", realName: \"phrygian\", flags: [true, true, false, true, false, true, false, true, true, false, true, false] }, // Phrygian\r\n        { name: \"Locrian\", realName: \"locrian\", flags: [true, true, false, true, false, true, true, false, true, false, true, false] }, // Locrian\r\n        { name: \"Lydian Dominant\", realName: \"lydian dominant\", flags: [true, false, true, false, true, false, true, true, false, true, true, false] }, // Lydian Dominant\r\n        { name: \"Phrygian Dominant\", realName: \"phrygian dominant\", flags: [true, true, false, false, true, true, false, true, true, false, true, false] }, // Phrygian Dominant\r\n        { name: \"Harmonic Major\", realName: \"harmonic major\", flags: [true, false, true, false, true, true, false, true, true, false, false, true] }, // Harmonic Major\r\n        { name: \"Harmonic Minor\", realName: \"harmonic minor\", flags: [true, false, true, true, false, true, false, true, true, false, false, true] }, // Harmonic Minor\r\n        { name: \"Melodic Minor\", realName: \"melodic minor\", flags: [true, false, true, true, false, true, false, true, false, true, false, true] }, // Melodic Minor\r\n        { name: \"Blues\", realName: \"blues\", flags: [true, false, false, true, false, true, true, true, false, false, true, false] }, // Blues\r\n        { name: \"Altered\", realName: \"altered\", flags: [true, true, false, true, true, false, true, false, true, false, true, false] }, // Altered\r\n        { name: \"Major Pentatonic\", realName: \"major pentatonic\", flags: [true, false, true, false, true, false, false, true, false, true, false, false] }, // Major Pentatonic\r\n        { name: \"Minor Pentatonic\", realName: \"minor pentatonic\", flags: [true, false, false, true, false, true, false, true, false, false, true, false] }, // Minor Pentatonic\r\n        { name: \"Whole Tone\", realName: \"whole tone\", flags: [true, false, true, false, true, false, true, false, true, false, true, false] }, // Whole Tone\r\n        { name: \"Octatonic\", realName: \"octatonic\", flags: [true, false, true, true, false, true, true, false, true, true, false, true] }, // Octatonic\r\n        { name: \"Hexatonic\", realName: \"hexatonic\", flags: [true, false, false, true, true, false, false, true, true, false, false, true] }, // Hexatonic\r\n        { name: \"No Dabbing\", realName: \"no dabbing\", flags:[true, true, false, true, true, true, true, true, true, false, true, false] },\r\n\t//modbox\r\n\t{ name: \"Jacked Toad\", realName: \"jacked toad\", flags: [true, false, true, true, false, true, true, true, true, false, true, true] },\r\n\t{ name: \"Dumb\", realName: \"Originally named, currently named, and will always be named 'dumb.'\", flags: [true, false, false, false, false, true, true, true, true, false, false, true] },\r\n        { name: \"Test Scale\", realName: \"**t\", flags: [true, true, false, false, false, true, true, false, false, true, true, false] },\r\n\t// todbox\r\n\t{ name: \"die\", realName: \"death\", flags: [true, false, false, false, false, false, false, false, true, false, false, false] },\r\n\t//wackybox\r\n        // { name: \"Rythmic\", realName: \"Pretty straightforward.\", flags: [true, false, false, false, false, false, false, false, false, false, false, false] },\r\n        //todbox\r\n\t{ name: \"Custom\", realName: \"custom\", flags: [true, false, true, true, false, false, false, true, true, false, true, true] }, // Custom? considering allowing this one to be be completely configurable\r\n\t]);\r\n    //scales should have their values looped five times to support microtuning\r\n\tpublic static readonly keys: DictionaryArray<Key> = toNameMap([\r\n\t\t{ name: \"C\", isWhiteKey: true, basePitch: 12 }, // C0 has index 12 on the MIDI scale. C7 is 96, and C9 is 120. C10 is barely in the audible range.\r\n\t\t{ name: \"C♯\", isWhiteKey: false, basePitch: 13 },\r\n\t\t{ name: \"D\", isWhiteKey: true, basePitch: 14 },\r\n\t\t{ name: \"D♯\", isWhiteKey: false, basePitch: 15 },\r\n\t\t{ name: \"E\", isWhiteKey: true, basePitch: 16 },\r\n\t\t{ name: \"F\", isWhiteKey: true, basePitch: 17 },\r\n\t\t{ name: \"F♯\", isWhiteKey: false, basePitch: 18 },\r\n\t\t{ name: \"G\", isWhiteKey: true, basePitch: 19 },\r\n\t\t{ name: \"G♯\", isWhiteKey: false, basePitch: 20 },\r\n\t\t{ name: \"A\", isWhiteKey: true, basePitch: 21 },\r\n\t\t{ name: \"A♯\", isWhiteKey: false, basePitch: 22 },\r\n        { name: \"B\", isWhiteKey: true, basePitch: 23 },\r\n\t\t\t\t// { name: \"C+\", isWhiteKey: false, basePitch: 24 },\r\n\t\t//taken from todbox, called \"B#\" for some reason lol\r\n\t\t// { name: \"G- (actually F#-)\", isWhiteKey: false, basePitch: 6 },\r\n        // { name: \"C-\", isWhiteKey: true, basePitch: 0 },\r\n\t    //brucebox\r\n\t\t//g- isn't actually g-???\r\n\t\t// { name: \"oh no (F-)\", isWhiteKey: true, basePitch: 5 },\r\n\t\t//shitbox\r\n        { name: \"(DO NOT SELECT ANY OF THE KEYS ABOVE)\", isWhiteKey: true, basePitch: 5 },\r\n        { name: \"super cool temporary key yeah\", isWhiteKey: true, basePitch: 5 },\r\n        { name: \"super cool temporary key yeah\", isWhiteKey: true, basePitch: 5 },\r\n        { name: \"super cool temporary key yeah\", isWhiteKey: true, basePitch: 5 },\r\n        { name: \"super cool temporary key yeah\", isWhiteKey: true, basePitch: 5 },\r\n        { name: \"super cool temporary key yeah\", isWhiteKey: true, basePitch: 5 },\r\n        { name: \"super cool temporary key yeah\", isWhiteKey: true, basePitch: 5 },\r\n        { name: \"super cool temporary key yeah\", isWhiteKey: true, basePitch: 5 },\r\n        { name: \"super cool temporary key yeah\", isWhiteKey: true, basePitch: 5 },\r\n        { name: \"super cool temporary key yeah\", isWhiteKey: true, basePitch: 5 },\r\n        { name: \"super cool temporary key yeah\", isWhiteKey: true, basePitch: 5 },\r\n        { name: \"super cool temporary key yeah\", isWhiteKey: true, basePitch: 5 },\r\n        { name: \"super cool temporary key yeah\", isWhiteKey: true, basePitch: 5 },\r\n        { name: \"super cool temporary key yeah\", isWhiteKey: true, basePitch: 5 },\r\n        { name: \"super cool temporary key yeah\", isWhiteKey: true, basePitch: 5 },\r\n        { name: \"super cool temporary key yeah\", isWhiteKey: true, basePitch: 5 },\r\n        { name: \"super cool temporary key yeah\", isWhiteKey: true, basePitch: 5 },\r\n        { name: \"super cool temporary key yeah\", isWhiteKey: true, basePitch: 5 },\r\n        { name: \"super cool temporary key yeah\", isWhiteKey: true, basePitch: 5 },\r\n        { name: \"super cool temporary key yeah\", isWhiteKey: true, basePitch: 5 },\r\n        { name: \"super cool temporary key yeah\", isWhiteKey: true, basePitch: 5 },\r\n        { name: \"super cool temporary key yeah\", isWhiteKey: true, basePitch: 5 },\r\n        { name: \"super cool temporary key yeah\", isWhiteKey: true, basePitch: 5 },\r\n        { name: \"super cool temporary key yeah\", isWhiteKey: true, basePitch: 5 },\r\n        { name: \"super cool temporary key yeah\", isWhiteKey: true, basePitch: 5 },\r\n        { name: \"super cool temporary key yeah\", isWhiteKey: true, basePitch: 5 },\r\n        { name: \"super cool temporary key yeah\", isWhiteKey: true, basePitch: 5 },\r\n        { name: \"super cool temporary key yeah\", isWhiteKey: true, basePitch: 5 },\r\n        { name: \"super cool temporary key yeah\", isWhiteKey: true, basePitch: 5 },\r\n        { name: \"super cool temporary key yeah\", isWhiteKey: true, basePitch: 5 },\r\n        { name: \"super cool temporary key yeah\", isWhiteKey: true, basePitch: 5 },\r\n        { name: \"super cool temporary key yeah\", isWhiteKey: true, basePitch: 5 },\r\n        { name: \"super cool temporary key yeah\", isWhiteKey: true, basePitch: 5 },\r\n        { name: \"super cool temporary key yeah\", isWhiteKey: true, basePitch: 5 },\r\n        { name: \"super cool temporary key yeah\", isWhiteKey: true, basePitch: 5 },\r\n        { name: \"super cool temporary key yeah\", isWhiteKey: true, basePitch: 5 },\r\n        { name: \"super cool temporary key yeah\", isWhiteKey: true, basePitch: 5 },\r\n        { name: \"super cool temporary key yeah\", isWhiteKey: true, basePitch: 5 },\r\n        { name: \"super cool temporary key yeah\", isWhiteKey: true, basePitch: 5 },\r\n        { name: \"super cool temporary key yeah\", isWhiteKey: true, basePitch: 5 },\r\n        { name: \"super cool temporary key yeah\", isWhiteKey: true, basePitch: 5 },\r\n        { name: \"super cool temporary key yeah\", isWhiteKey: true, basePitch: 5 },\r\n        { name: \"super cool temporary key yeah\", isWhiteKey: true, basePitch: 5 },\r\n        { name: \"super cool temporary key yeah\", isWhiteKey: true, basePitch: 5 },\r\n        { name: \"super cool temporary key yeah\", isWhiteKey: true, basePitch: 5 },\r\n        //these are here so piano.ts doesn't bug out\r\n\t]);\r\n\t//public static readonly blackKeyNameParents: ReadonlyArray<number> = [-1, 1, -1, 1, -1, 1, -1, -1, 1, -1, 1, -1];\r\n    public static readonly blackKeyNameParents: ReadonlyArray<number> = [-1, 1, -1, 1, -1, 1, -1, -1, 1, -1, 1, -1,  1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1];\r\n    //this is also a temporary solution (is this even neccessary?)\r\n\tpublic static readonly tempoMin: number = 1;\r\n\tpublic static readonly tempoMax: number = 500;\r\n\tpublic static readonly octaveMin: number = -2;\r\n\tpublic static readonly octaveMax: number = 2;\r\n    public static readonly echoDelayRange: number = 24;\r\n    public static readonly echoDelayStepTicks: number = 4;\r\n    public static readonly echoSustainRange: number = 8;\r\n    public static readonly echoShelfHz: number = 4000.0; // The cutoff freq of the shelf filter that is used to decay echoes.\r\n    public static readonly echoShelfGain: number = Math.pow(2.0, -0.5);\r\n    public static readonly reverbShelfHz: number = 8000.0; // The cutoff freq of the shelf filter that is used to decay reverb.\r\n    public static readonly reverbShelfGain: number = Math.pow(2.0, -1.5);\r\n\tpublic static readonly reverbRange: number = 32;\r\n    public static readonly reverbDelayBufferSize: number = 16384; // TODO: Compute a buffer size based on sample rate.\r\n    public static readonly reverbDelayBufferMask: number = Config.reverbDelayBufferSize - 1; // TODO: Compute a buffer size based on sample rate.\r\n    public static readonly beatsPerBarMin: number = 1;\r\n\tpublic static readonly beatsPerBarMax: number = 64;\r\n\tpublic static readonly barCountMin: number = 1;\r\n\tpublic static readonly barCountMax: number = 1024;\r\n    public static readonly instrumentCountMin: number = 1;\r\n    public static readonly layeredInstrumentCountMax: number = 10;\r\n\t//this still hasn't been properly tested...\r\n    public static readonly patternInstrumentCountMax: number = 10;\r\n\tpublic static readonly partsPerBeat: number = 24;\r\n\tpublic static readonly ticksPerPart: number = 2;\r\n\tpublic static readonly ticksPerArpeggio: number = 3;\r\n\tpublic static readonly arpeggioPatterns: ReadonlyArray<ReadonlyArray<number>> = [[0], [0, 1], [0, 1, 2, 1], [0, 1, 2, 3], [0, 1, 2, 3, 4], [0, 1, 2, 3, 4, 5], [0, 1, 2, 3, 4, 5, 6], [0, 1, 2, 3, 4, 5, 6, 7] ];\r\n\tpublic static readonly rhythms: DictionaryArray<Rhythm> = toNameMap([\r\n\t\t//{ name: \"÷0 (song corrupter)\", stepsPerBeat: 0, ticksPerArpeggio: 7, arpeggioPatterns: [[0], [0, 0, 1, 1], [0, 1, 2, 1]], roundUpThresholds: [] },\r\n\t\t{ name: \"÷1 (whole notes)\", stepsPerBeat: 1, /*ticksPerArpeggio: 6, arpeggioPatterns: [[0], [0, 0, 1, 1], [0, 1, 2, 1]],*/ roundUpThresholds: [3] },\r\n\t\t{ name: \"÷2 (half notes)\", stepsPerBeat: 2, /*ticksPerArpeggio: 5, arpeggioPatterns: [[0], [0, 0, 1, 1], [0, 1, 2, 1]],*/ roundUpThresholds: [3, 9] },\r\n\t\t// these ones are from dogebox - names are from todbox\r\n\t\t{ name: \"÷3 (triplets)\", stepsPerBeat: 3, /*ticksPerArpeggio: 4, arpeggioPatterns: [[0], [0, 0, 1, 1], [0, 1, 2, 1], [0, 1, 2, 3]]*/ roundUpThresholds: [/*0*/ 5, /*8*/ 12, /*16*/ 18 /*24*/] },\r\n\t\t{ name: \"÷4 (standard)\", stepsPerBeat: 4, /*ticksPerArpeggio: 3, arpeggioPatterns: [[0], [0, 0, 1, 1], [0, 1, 2, 1], [0, 1, 2, 3]]*/ roundUpThresholds: [/*0*/ 3, /*6*/ 9, /*12*/ 17, /*18*/ 21 /*24*/] },\r\n\t\t{ name: \"÷6 (sextuplets)\", stepsPerBeat: 6, /*ticksPerArpeggio: 4, arpeggioPatterns: [[0], [0, 1], [0, 1, 2, 1], [0, 1, 2, 3]]*/ roundUpThresholds: null },\r\n\t\t{ name: \"÷8 (eighth notes)\", stepsPerBeat: 8, /*ticksPerArpeggio: 3, arpeggioPatterns: [[0], [0, 1], [0, 1, 2, 1], [0, 1, 2, 3]]*/ roundUpThresholds: null },\r\n\t\t{ name: \"÷12 (twelfth notes)\", stepsPerBeat: 12, /*ticksPerArpeggio: 3, arpeggioPatterns: [[0], [0, 1], [0, 1, 2, 1]]*/ roundUpThresholds: null },\r\n\t\t{ name: \"freehand\", stepsPerBeat: 24, /*ticksPerArpeggio: 3, arpeggioPatterns: [[0], [0, 1], [0, 1, 2, 1], [0, 1, 2, 3]]*/ roundUpThresholds: null },\r\n\t]);\r\n\r\n    public static readonly instrumentTypeNames: ReadonlyArray<string> = [\"chip\", \"FM\", \"noise\", \"spectrum\", \"drumset\", \"harmonics\", \"PWM\", \"Picked String\", \"custom chip\", \"mod\", \"FM6op\"];\r\n\tpublic static readonly instrumentTypeHasSpecialInterval: ReadonlyArray<boolean> = [true, true, false, false, false, true, false, false, false, false];\r\n    public static readonly chipBaseExpression: number = 0.03375; // Doubled by unison feature, but affected by expression adjustments per unison setting and wave shape.\r\n    public static readonly fmBaseExpression: number = 0.03;\r\n    public static readonly noiseBaseExpression: number = 0.19;\r\n    public static readonly spectrumBaseExpression: number = 0.3; // Spectrum can be in pitch or noise channels, the expression is doubled for noise.\r\n    public static readonly drumsetBaseExpression: number = 0.45; // Drums tend to be loud but brief!\r\n    public static readonly harmonicsBaseExpression: number = 0.025;\r\n    public static readonly pwmBaseExpression: number = 0.04725; // It's actually closer to half of this, the synthesized pulse amplitude range is only .5 to -.5, but also note that the fundamental sine partial amplitude of a square wave is 4/π times the measured square wave amplitude.\r\n    public static readonly pickedStringBaseExpression: number = 0.025; // Same as harmonics.\r\n    public static readonly distortionBaseVolume: number = 0.011; // Distortion is not affected by pitchDamping, which otherwise approximately halves expression for notes around the middle of the range.\r\n    public static readonly bitcrusherBaseVolume: number = 0.010; // Also not affected by pitchDamping, used when bit crushing is maxed out (aka \"1-bit\" output).\r\n\tpublic static rawChipWaves: DictionaryArray<ChipWave> = toNameMap([\r\n        { name: \"rounded\", expression: 0.94, samples: centerWave([0.0, 0.2, 0.4, 0.5, 0.6, 0.7, 0.8, 0.85, 0.9, 0.95, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 0.95, 0.9, 0.85, 0.8, 0.7, 0.6, 0.5, 0.4, 0.2, 0.0, -0.2, -0.4, -0.5, -0.6, -0.7, -0.8, -0.85, -0.9, -0.95, -1.0, -1.0, -1.0, -1.0, -1.0, -1.0, -1.0, -1.0, -1.0, -1.0, -1.0, -0.95, -0.9, -0.85, -0.8, -0.7, -0.6, -0.5, -0.4, -0.2]) },\r\n        { name: \"triangle\", expression: 1.0, samples: centerWave([1.0 / 15.0, 3.0 / 15.0, 5.0 / 15.0, 7.0 / 15.0, 9.0 / 15.0, 11.0 / 15.0, 13.0 / 15.0, 15.0 / 15.0, 15.0 / 15.0, 13.0 / 15.0, 11.0 / 15.0, 9.0 / 15.0, 7.0 / 15.0, 5.0 / 15.0, 3.0 / 15.0, 1.0 / 15.0, -1.0 / 15.0, -3.0 / 15.0, -5.0 / 15.0, -7.0 / 15.0, -9.0 / 15.0, -11.0 / 15.0, -13.0 / 15.0, -15.0 / 15.0, -15.0 / 15.0, -13.0 / 15.0, -11.0 / 15.0, -9.0 / 15.0, -7.0 / 15.0, -5.0 / 15.0, -3.0 / 15.0, -1.0 / 15.0]) },\r\n        { name: \"square\", expression: 0.5, samples: centerWave([1.0, -1.0]) },\r\n        { name: \"1/4 pulse\", expression: 0.5, samples: centerWave([1.0, -1.0, -1.0, -1.0]) },\r\n        { name: \"1/8 pulse\", expression: 0.5, samples: centerWave([1.0, -1.0, -1.0, -1.0, -1.0, -1.0, -1.0, -1.0]) },\r\n        { name: \"sawtooth\", expression: 0.65, samples: centerWave([1.0 / 31.0, 3.0 / 31.0, 5.0 / 31.0, 7.0 / 31.0, 9.0 / 31.0, 11.0 / 31.0, 13.0 / 31.0, 15.0 / 31.0, 17.0 / 31.0, 19.0 / 31.0, 21.0 / 31.0, 23.0 / 31.0, 25.0 / 31.0, 27.0 / 31.0, 29.0 / 31.0, 31.0 / 31.0, -31.0 / 31.0, -29.0 / 31.0, -27.0 / 31.0, -25.0 / 31.0, -23.0 / 31.0, -21.0 / 31.0, -19.0 / 31.0, -17.0 / 31.0, -15.0 / 31.0, -13.0 / 31.0, -11.0 / 31.0, -9.0 / 31.0, -7.0 / 31.0, -5.0 / 31.0, -3.0 / 31.0, -1.0 / 31.0]) },\r\n        { name: \"double saw\", expression: 0.5, samples: centerWave([0.0, -0.2, -0.4, -0.6, -0.8, -1.0, 1.0, -0.8, -0.6, -0.4, -0.2, 1.0, 0.8, 0.6, 0.4, 0.2]) },\r\n        { name: \"double pulse\", expression: 0.4, samples: centerWave([1.0, 1.0, 1.0, 1.0, 1.0, -1.0, -1.0, -1.0, 1.0, 1.0, 1.0, 1.0, -1.0, -1.0, -1.0, -1.0]) },\r\n        { name: \"spiky\", expression: 0.4, samples: centerWave([1.0, -1.0, 1.0, -1.0, 1.0, 0.0]) },\r\n        { name: \"sine\", expression: 0.88, samples: centerAndNormalizeWave([8.0, 9.0, 11.0, 12.0, 13.0, 14.0, 15.0, 15.0, 15.0, 15.0, 14.0, 14.0, 13.0, 11.0, 10.0, 9.0, 7.0, 6.0, 4.0, 3.0, 2.0, 1.0, 0.0, 0.0, 0.0, 0.0, 1.0, 1.0, 2.0, 4.0, 5.0, 6.0]) },\r\n        { name: \"flute\", expression: 0.8, samples: centerAndNormalizeWave([3.0, 4.0, 6.0, 8.0, 10.0, 11.0, 13.0, 14.0, 15.0, 15.0, 14.0, 13.0, 11.0, 8.0, 5.0, 3.0]) },\r\n        { name: \"harp\", expression: 0.8, samples: centerAndNormalizeWave([0.0, 3.0, 3.0, 3.0, 4.0, 5.0, 5.0, 6.0, 7.0, 8.0, 9.0, 11.0, 11.0, 13.0, 13.0, 15.0, 15.0, 14.0, 12.0, 11.0, 10.0, 9.0, 8.0, 7.0, 7.0, 5.0, 4.0, 3.0, 2.0, 1.0, 0.0, 0.0]) },\r\n        { name: \"sharp clarinet\", expression: 0.38, samples: centerAndNormalizeWave([0.0, 0.0, 0.0, 1.0, 1.0, 8.0, 8.0, 9.0, 9.0, 9.0, 8.0, 8.0, 8.0, 8.0, 8.0, 9.0, 9.0, 7.0, 9.0, 9.0, 10.0, 4.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0]) },\r\n        { name: \"soft clarinet\", expression: 0.45, samples: centerAndNormalizeWave([0.0, 1.0, 5.0, 8.0, 9.0, 9.0, 9.0, 9.0, 9.0, 9.0, 9.0, 11.0, 11.0, 12.0, 13.0, 12.0, 10.0, 9.0, 7.0, 6.0, 4.0, 3.0, 3.0, 3.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0]) },\r\n        { name: \"alto sax\", expression: 0.3, samples: centerAndNormalizeWave([5.0, 5.0, 6.0, 4.0, 3.0, 6.0, 8.0, 7.0, 2.0, 1.0, 5.0, 6.0, 5.0, 4.0, 5.0, 7.0, 9.0, 11.0, 13.0, 14.0, 14.0, 14.0, 14.0, 13.0, 10.0, 8.0, 7.0, 7.0, 4.0, 3.0, 4.0, 2.0]) },\r\n        { name: \"bassoon\", expression: 0.35, samples: centerAndNormalizeWave([9.0, 9.0, 7.0, 6.0, 5.0, 4.0, 4.0, 4.0, 4.0, 5.0, 7.0, 8.0, 9.0, 10.0, 11.0, 13.0, 13.0, 11.0, 10.0, 9.0, 7.0, 6.0, 4.0, 2.0, 1.0, 1.0, 1.0, 2.0, 2.0, 5.0, 11.0, 14.0]) },\r\n        { name: \"trumpet\", expression: 0.22, samples: centerAndNormalizeWave([10.0, 11.0, 8.0, 6.0, 5.0, 5.0, 5.0, 6.0, 7.0, 7.0, 7.0, 7.0, 6.0, 6.0, 7.0, 7.0, 7.0, 7.0, 7.0, 6.0, 6.0, 6.0, 6.0, 6.0, 6.0, 6.0, 6.0, 7.0, 8.0, 9.0, 11.0, 14.0]) },\r\n        { name: \"electric guitar\", expression: 0.2, samples: centerAndNormalizeWave([11.0, 12.0, 12.0, 10.0, 6.0, 6.0, 8.0, 0.0, 2.0, 4.0, 8.0, 10.0, 9.0, 10.0, 1.0, 7.0, 11.0, 3.0, 6.0, 6.0, 8.0, 13.0, 14.0, 2.0, 0.0, 12.0, 8.0, 4.0, 13.0, 11.0, 10.0, 13.0]) },\r\n        { name: \"organ\", expression: 0.2, samples: centerAndNormalizeWave([11.0, 10.0, 12.0, 11.0, 14.0, 7.0, 5.0, 5.0, 12.0, 10.0, 10.0, 9.0, 12.0, 6.0, 4.0, 5.0, 13.0, 12.0, 12.0, 10.0, 12.0, 5.0, 2.0, 2.0, 8.0, 6.0, 6.0, 5.0, 8.0, 3.0, 2.0, 1.0]) },\r\n        { name: \"pan flute\", expression: 0.35, samples: centerAndNormalizeWave([1.0, 4.0, 7.0, 6.0, 7.0, 9.0, 7.0, 7.0, 11.0, 12.0, 13.0, 15.0, 13.0, 11.0, 11.0, 12.0, 13.0, 10.0, 7.0, 5.0, 3.0, 6.0, 10.0, 7.0, 3.0, 3.0, 1.0, 0.0, 1.0, 0.0, 1.0, 0.0]) },\r\n        { name: \"glitch\", expression: 0.5, samples: centerWave([1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, -1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, -1.0, -1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, -1.0, -1.0, -1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, -1.0, -1.0, -1.0, -1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, -1.0, -1.0, -1.0, -1.0, -1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, -1.0, -1.0, -1.0, -1.0, -1.0, -1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, -1.0, -1.0, -1.0, -1.0, -1.0, -1.0, -1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, -1.0, -1.0, -1.0, -1.0, -1.0, -1.0, -1.0, -1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, -1.0, -1.0, -1.0, -1.0, -1.0, -1.0, -1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, -1.0, -1.0, -1.0, -1.0, -1.0, -1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, -1.0, -1.0, -1.0, -1.0, -1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, -1.0, -1.0, -1.0, -1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, -1.0, -1.0, -1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, -1.0, -1.0]) },\r\n        { name: \"trapezoid\", expression: 1.0, samples: centerWave([1.0 / 15.0, 6.0 / 15.0, 10.0 / 15.0, 14.0 / 15.0, 15.0 / 15.0, 15.0 / 15.0, 15.0 / 15.0, 15.0 / 15.0, 15.0 / 15.0, 15.0 / 15.0, 15.0 / 15.0, 15.0 / 15.0, 14.0 / 15.0, 10.0 / 15.0, 6.0 / 15.0, 1.0 / 15.0, -1.0 / 15.0, -6.0 / 15.0, -10.0 / 15.0, -14.0 / 15.0, -15.0 / 15.0, -15.0 / 15.0, -15.0 / 15.0, -15.0 / 15.0, -15.0 / 15.0, -15.0 / 15.0, -15.0 / 15.0, -15.0 / 15.0, -14.0 / 15.0, -10.0 / 15.0, -6.0 / 15.0, -1.0 / 15.0,])},\r\n   \t//normal\r\n{ name: \"modbox 10% pulse\", expression: 0.5, samples: centerAndNormalizeWave([1.0, -1.0, -1.0, -1.0, -1.0, -1.0, -1.0, -1.0, -1.0, -1.0]) },\r\n\t{ name: \"modbox sunsoft bass\", expression: 1.0, samples: centerAndNormalizeWave([0.0, 0.1875, 0.3125, 0.5625, 0.5, 0.75, 0.875, 1.0, 1.0, 0.6875, 0.5, 0.625, 0.625, 0.5, 0.375, 0.5625, 0.4375, 0.5625, 0.4375, 0.4375, 0.3125, 0.1875, 0.1875, 0.375, 0.5625, 0.5625, 0.5625, 0.5625, 0.5625, 0.4375, 0.25, 0.0]) },\r\n\t{ name: \"modbox loud pulse\", expression: 0.5, samples: centerAndNormalizeWave([1.0, 0.7, 0.1, 0.1, 0, 0, 0, 0, 0, 0.1, 0.2, 0.15, 0.25, 0.125, 0.215, 0.345, 4.0]) },\r\n\t   { name: \"modbox sax\", expression: 0.5, samples: centerAndNormalizeWave([1.0 / 15.0, 3.0 / 15.0, 5.0 / 15.0, 9.0, 0.06]) },\r\n\t    { name: \"modbox guitar\", expression: 0.5, samples: centerAndNormalizeWave([-0.5, 3.5, 3.0, -0.5, -0.25, -1.0]) },\r\n\t  { name: \"modbox sine\", expression: 0.5, samples: centerAndNormalizeWave([0.0, 0.05, 0.125, 0.2, 0.25, 0.3, 0.425, 0.475, 0.525, 0.625, 0.675, 0.725, 0.775, 0.8, 0.825, 0.875, 0.9, 0.925, 0.95, 0.975, 0.98, 0.99, 0.995, 1, 0.995, 0.99, 0.98, 0.975, 0.95, 0.925, 0.9, 0.875, 0.825, 0.8, 0.775, 0.725, 0.675, 0.625, 0.525, 0.475, 0.425, 0.3, 0.25, 0.2, 0.125, 0.05, 0.0, -0.05, -0.125, -0.2, -0.25, -0.3, -0.425, -0.475, -0.525, -0.625, -0.675, -0.725, -0.775, -0.8, -0.825, -0.875, -0.9, -0.925, -0.95, -0.975, -0.98, -0.99, -0.995, -1, -0.995, -0.99, -0.98, -0.975, -0.95, -0.925, -0.9, -0.875, -0.825, -0.8, -0.775, -0.725, -0.675, -0.625, -0.525, -0.475, -0.425, -0.3, -0.25, -0.2, -0.125, -0.05]) },\r\n\t   { name: \"modbox atari bass\", expression: 0.5, samples: centerAndNormalizeWave([1.0, 1.0, 1.0, 1.0, 0.0, 1.0, 0.0, 1.0, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0]) },\r\n\t    { name: \"modbox atari pulse\", expression: 0.5, samples: centerAndNormalizeWave([1.0, 0.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0]) },\r\n\t  { name: \"modbox 1% pulse\", expression: 0.5, samples: centerAndNormalizeWave},\r\n\t   { name: \"modbox curved sawtooth\", expression: 0.5, samples: centerAndNormalizeWave([1.0, 1.0 / 2.0, 1.0 / 3.0, 1.0 / 4.0]) },\r\n\t { name: \"modbox viola\", expression: 0.45, samples: centerAndNormalizeWave([-0.9, -1.0, -0.85, -0.775, -0.7, -0.6, -0.5, -0.4, -0.325, -0.225, -0.2, -0.125, -0.1, -0.11, -0.125, -0.15, -0.175, -0.18, -0.2, -0.21, -0.22, -0.21, -0.2, -0.175, -0.15, -0.1, -0.5, 0.75, 0.11, 0.175, 0.2, 0.25, 0.26, 0.275, 0.26, 0.25, 0.225, 0.2, 0.19, 0.18, 0.19, 0.2, 0.21, 0.22, 0.23, 0.24, 0.25, 0.26, 0.275, 0.28, 0.29, 0.3, 0.29, 0.28, 0.27, 0.26, 0.25, 0.225, 0.2, 0.175, 0.15, 0.1, 0.075, 0.0, -0.01, -0.025, 0.025, 0.075, 0.2, 0.3, 0.475, 0.6, 0.75, 0.85, 0.85, 1.0, 0.99, 0.95, 0.8, 0.675, 0.475, 0.275, 0.01, -0.15, -0.3, -0.475, -0.5, -0.6, -0.71, -0.81, -0.9, -1.0, -0.9]) },\r\n        { name: \"modbox brass\", expression: 0.45, samples: centerAndNormalizeWave([-1.0, -0.95, -0.975, -0.9, -0.85, -0.8, -0.775, -0.65, -0.6, -0.5, -0.475, -0.35, -0.275, -0.2, -0.125, -0.05, 0.0, 0.075, 0.125, 0.15, 0.20, 0.21, 0.225, 0.25, 0.225, 0.21, 0.20, 0.19, 0.175, 0.125, 0.10, 0.075, 0.06, 0.05, 0.04, 0.025, 0.04, 0.05, 0.10, 0.15, 0.225, 0.325, 0.425, 0.575, 0.70, 0.85, 0.95, 1.0, 0.9, 0.675, 0.375, 0.2, 0.275, 0.4, 0.5, 0.55, 0.6, 0.625, 0.65, 0.65, 0.65, 0.65, 0.64, 0.6, 0.55, 0.5, 0.4, 0.325, 0.25, 0.15, 0.05, -0.05, -0.15, -0.275, -0.35, -0.45, -0.55, -0.65, -0.7, -0.78, -0.825, -0.9, -0.925, -0.95, -0.975]) },\r\n      { name: \"modbox acoustic bass\", expression: 0.5, samples: centerAndNormalizeWave([1.0, 0.0, 0.1, -0.1, -0.2, -0.4, -0.3, -1.0]) },\r\n\t   { name: \"modbox lyre\", expression: 0.45, samples: centerAndNormalizeWave([1.0, -1.0, 4.0, 2.15, 4.13, 5.15, 0.0, -0.05, 1.0]) },\r\n\t { name: \"modbox ramp pulse\", expression: 0.5, samples: centerAndNormalizeWave([6.1, -2.9, 1.4, -2.9]) },  \r\n\t  { name: \"modbox piccolo\", expression: 0.5, samples: centerAndNormalizeWave([1, 4, 2, 1, -0.1, -1, -0.12]) },\r\n     { name: \"modbox squaretooth\", expression: 0.5, samples: centerAndNormalizeWave([0.2, 1.0, 2.6, 1.0, 0.0, -2.4]) },\r\n\t  { name: \"modbox flatline\", expression: 1.0, samples: centerAndNormalizeWave([1.0, 0.9, 0.8, 0.7, 0.6, 0.5, 0.4, 0.3, 0.2, 0.1, 0.0, 0.1, 0.2, 0.3, 0.4, 0.5, 0.6, 0.7, 0.8, 0.9]) },\r\n\t  { name: \"modbox pnryshk a (u5)\", expression: 0.4, samples: centerAndNormalizeWave([1.0, 0.9, 0.8, 0.7, 0.6, 0.5, 0.4, 0.3, 0.2, 0.1, 0.0]) },\r\n\t  { name: \"modbox pnryshk b (riff)\", expression: 0.5, samples: centerAndNormalizeWave([1.0, -0.9, 0.8, -0.7, 0.6, -0.5, 0.4, -0.3, 0.2, -0.1, 0.0, -0.1, 0.2, -0.3, 0.4, -0.5, 0.6, -0.7, 0.8, -0.9, 1.0]) },\r\n\t//modbox\r\n\t{ name: \"sandbox shrill lute\", expression: 0.94, samples: centerAndNormalizeWave([1.0, 1.5, 1.25, 1.2, 1.3, 1.5]) },\r\n        { name: \"sandbox bassoon\", expression: 0.5, samples: centerAndNormalizeWave([1.0, -1.0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0]) },\r\n        { name: \"sandbox shrill bass\", expression: 0.5, samples: centerAndNormalizeWave([0, 1, 0, 0, 1, 0, 1, 0, 0, 0]) },\r\n      { name: \"sandbox nes pulse\", expression: 0.4, samples: centerAndNormalizeWave([2.1, -2.2, 1.2, 3]) },\r\n     { name: \"sandbox saw bass\", expression: 0.25, samples: centerAndNormalizeWave([1, 1, 1, 1, 0, 2, 1, 2, 3, 1, -2, 1, 4, 1, 4, 2, 1, 6, -3, 4, 2, 1, 5, 1, 4, 1, 5, 6, 7, 1, 6, 1, 4, 1, 9]) },\r\n        { name: \"sandbox euphonium\", expression: 0.3, samples: centerAndNormalizeWave([0, 1, 2, 1, 2, 1, 4, 2, 5, 0, -2, 1, 5, 1, 2, 1, 2, 4, 5, 1, 5, -2, 5, 10, 1]) },\r\n      { name: \"sandbox shrill pulse\", expression: 0.3, samples: centerAndNormalizeWave([4 -2, 0, 4, 1, 4, 6, 7, 3]) },\r\n      { name: \"sandbox r-sawtooth\", expression: 0.2, samples: centerAndNormalizeWave([6.1, -2.9, 1.4, -2.9]) },\r\n        { name: \"sandbox recorder\", expression: 0.2, samples: centerAndNormalizeWave([5.0, -5.1, 4.0, -4.1, 3.0, -3.1, 2.0, -2.1, 1.0, -1.1, 6.0]) },\r\n        { name: \"sandbox narrow saw\", expression: 1.2, samples: centerAndNormalizeWave([0.1, 0.13 / -0.1 ,0.13 / -0.3 ,0.13 / -0.5 ,0.13 / -0.7 ,0.13 / -0.9 ,0.13 / -0.11 ,0.13 / -0.31 ,0.13 / -0.51 ,0.13 / -0.71 ,0.13 / -0.91 ,0.13 / -0.12 ,0.13 / -0.32 ,0.13 / -0.52 ,0.13 / -0.72 ,0.13 / -0.92 ,0.13 / -0.13 ,0.13 / 0.13 ,0.13 / 0.92 ,0.13 / 0.72 ,0.13 / 0.52 ,0.13 / 0.32 ,0.13 / 0.12 ,0.13 / 0.91 ,0.13 / 0.71 ,0.13 / 0.51 ,0.13 / 0.31 ,0.13 / 0.11 ,0.13 / 0.9 ,0.13 / 0.7 ,0.13 / 0.5 ,0.13 / 0.3 ,0.13]) },\r\n        { name: \"sandbox deep square\", expression: 1.0, samples: centerAndNormalizeWave([1.0, 2.25, 1.0, -1.0, -2.25, -1.0]) },\r\n      //cut\r\n\t  { name: \"sandbox ring pulse\", expression: 1.0, samples: centerAndNormalizeWave([1.0, -1.0, -1.0, -1.0, -1.0, -1.0, -1.0, -1.0, 1.0, -1.0, -1.0, -1.0, -1.0, -1.0, -1.0, -1.0, 1.0, -1.0, -1.0, -1.0, -1.0, -1.0, -1.0, -1.0, 1.0, -1.0, -1.0, -1.0, -1.0, -1.0, -1.0, -1.0, 1.0, -1.0, -1.0, -1.0, -1.0, -1.0, -1.0, -1.0, 1.0, -1.0, -1.0, -1.0, -1.0, -1.0, -1.0, -1.0, 1.0, -1.0, -1.0, -1.0, -1.0, -1.0, -1.0, -1.0, 1.0, -1.0, -1.0, -1.0, -1.0, -1.0, -1.0, -1.0, 1.0, -1.0, -1.0, -1.0, -1.0, -1.0, -1.0, -1.0]) },\r\n      { name: \"sandbox double sine\", expression: 1.0, samples: centerAndNormalizeWave([1.0, 1.1, 1.2, 1.3, 1.4, 1.5, 1.6, 1.7, 1.8, 1.9, 1.8, 1.7, 1.6, 1.5, 1.4, 1.3, 1.2, 1.1, 1.0, 0.0, -1.0, -1.1, -1.2, -1.3, -1.4, -1.5, -1.6, -1.7, -1.8, -1.9, -1.8, -1.7, -1.6, -1.5, -1.4, -1.3, -1.2, -1.1, -1.0]) },\r\n        { name: \"sandbox contrabass\", expression: 0.5, samples: centerAndNormalizeWave([4.20, 6.9, 1.337, 6.66]) },\r\n       { name: \"sandbox double bass\", expression: 0.4, samples: centerAndNormalizeWave([0.0, 0.1875, 0.3125, 0.5625, 0.5, 0.75, 0.875, 1.0, -1.0, -0.6875, -0.5, -0.625, -0.625, -0.5, -0.375, -0.5625, -0.4375, -0.5625, -0.4375, -0.4375, -0.3125, -0.1875, 0.1875, 0.375, 0.5625, -0.5625, 0.5625, 0.5625, 0.5625, 0.4375, 0.25, 0.0]) },\r\n     //   { name: \"sandbox triple pulse\", expression: 0.4, samples: centerAndNormalizeWave([1.0, 1.0, 1.0, 1.0, 1.0, -1.0, -1.0, 1.5, 1.0, 1.0, 1.0, 1.0, -1.0, -1.0, -1.0, 1.5]) },     \r\n\t//from sandbox, are these correct????\r\n\t  { name: \"haileybox test1\", expression: 0.5, samples: centerAndNormalizeWave([1.0, 0.5, -1.0]) },\r\n\t  { name: \"brucebox pokey 4bit lfsr\", expression: 0.5, samples: centerAndNormalizeWave([1.0, -1.0, -1.0, -1.0, 1.0, 1.0, 1.0, 1.0, -1.0, 1.0, -1.0, 1.0, 1.0, -1.0, -1.0]) },\r\n\t{ name: \"brucebox pokey 5step bass\", expression: 0.5,samples: centerAndNormalizeWave([1.0, -1.0, 1.0, -1.0, 1.0]) },\r\n\t{ name: \"brucebox isolated spiky\", expression: 0.5, samples: centerAndNormalizeWave([1.0, -1.0, 1.0, -1.0, 1.0, -1.0]) },\r\n\t//brucebox\r\n\t{ name: \"nerdbox unnamed 1\", expression: 0.5, samples: centerAndNormalizeWave([0.2 , 0.8 / 0.2, 0.7, -0.4, -1.0, 0.5, -0.5 / 0.6]) },\r\n\t{ name: \"nerdbox unnamed 2\", expression: 0.5, samples: centerAndNormalizeWave([2.0 , 5.0 / 55.0 , -9.0 , 6.5 / 6.5 , -55.0, 18.5 / -26.0]) },\r\n//nerdbox\r\n\t { name: \"zefbox semi-square\", expression: 1.0, samples: centerAndNormalizeWave([1.0, 1.5, 2.0, 2.5, 2.5, 2.5, 2.0, 1.5, 1.0]) },\r\n\t{ name: \"zefbox deep square\", expression: 1.0, samples: centerAndNormalizeWave([1.0, 2.25, 1.0, -1.0, -2.25, -1.0]) },\r\n { name: \"zefbox squaretal\", expression: 0.7, samples: centerAndNormalizeWave([1.5, 1.0, 1.5, -1.5, -1.0, -1.5]) },\r\n//\t{ name: \"zefbox sawtooth\", expression: 0.65, samples: centerAndNormalizeWave([1.0 / 31.0, 3.0 / 31.0, 5.0 / 31.0, 7.0 / 31.0, 9.0 / 31.0, 11.0 / 31.0, 13.0 / 31.0, 15.0 / 31.0, 17.0 / 31.0, 19.0 / 31.0, 21.0 / 31.0, 23.0 / 31.0, 25.0 / 31.0, 27.0 / 31.0, 29.0 / 31.0, 31.0 / 31.0, -31.0 / 31.0, -29.0 / 31.0, -27.0 / 31.0, -25.0 / 31.0, -23.0 / 31.0, -21.0 / 31.0, -19.0 / 31.0, -17.0 / 31.0, -15.0 / 31.0, -13.0 / 31.0, -11.0 / 31.0, -9.0 / 31.0, -7.0 / 31.0, -5.0 / 31.0, -3.0 / 31.0, -1.0 / 31.0]) },\r\n\t { name: \"zefbox saw wide\", expression: 0.65, samples: centerAndNormalizeWave([0.0, -0.4, -0.8, -1.2, -1.6 , -2.0, 0.0, -0.4, -0.8, -1.2, -1.6]) },\r\n\t{ name: \"zefbox saw narrow\", expression: 0.65,samples: centerAndNormalizeWave([1, 0.5, 1, 0.5, 1, 0.5, 1, 2, 1, 2 ,1]) },\r\n\t { name: \"zefbox deep sawtooth\", expression: 0.5, samples: centerAndNormalizeWave([0, 2, 3, 4, 4.5, 5, 5.5, 6, 6.25, 6.5, 6.75, 7, 6.75, 6.5, 6.25, 6, 5.5, 5, 4.5, 4, 3, 2, 1]) },\r\n\t//{ name: \"zefbox double saw\", expression: 0.5, samples: centerAndNormalizeWave([0.0, -0.2, -0.4, -0.6, -0.8, -1.0, 1.0, -0.8, -0.6, -0.4, -0.2, 1.0, 0.8, 0.6, 0.4, 0.2]) },\r\n\t { name: \"zefbox sawtal\", expression: 0.3, samples: centerAndNormalizeWave([1.5, 1.0, 1.25, -0.5, 1.5, -0.5, 0.0, -1.5, 1.5, 0.0, 0.5, -1.5, 0.5, 1.25, -1.0, -1.5]) },\r\n\t{ name: \"zefbox deep sawtal\", expression: 0.7, samples: centerAndNormalizeWave([0.75, 0.25, 0.5, -0.5, 0.5, -0.5, -0.25, -0.75]) },\r\n//\t { name: \"zefbox squaretooth\", expression: 0.25, samples: centerAndNormalizeWave([0.2, 1.0, 2.6, 1.0, 0.0, -2.4]) },\r\n\t//identical to the modbox squaretooth, just louder - this was pre-2.0 ultrabox, but I've added backwards compatibility stuff related to it so yeah\r\n\t{ name: \"zefbox pulse\", expression: 0.5, samples: centerAndNormalizeWave([1.0, -2.0, -2.0, -1.5, -1.5, -1.25, -1.25, -1.0, -1.0]) },\r\n//{ name: \"zefbox double pulse\", expression: 0.4, samples: centerAndNormalizeWave([1.0, 1.0, 1.0, 1.0, 1.0, -1.0, -1.0, -1.0, 1.0, 1.0, 1.0, 1.0, -1.0, -1.0, -1.0, -1.0]) },\r\n{ name: \"zefbox triple pulse\", expression: 0.4, samples: centerAndNormalizeWave([1.0, 1.0, 1.0, 1.0, 1.0, -1.0, -1.0, 1.5, 1.0, 1.0, 1.0, 1.0, -1.0, -1.0, -1.0, 1.5]) },\r\n{ name: \"zefbox high pulse\", expression: 0.2, samples: centerAndNormalizeWave([1, -2, 2, -3, 3, -4, 5, -4, 3, -3, 2, -2, 1]) },\r\n{ name: \"zefbox deep pulse\", expression: 0.2, samples: centerAndNormalizeWave([1, 2, 2, -2, -2, -3, -4, -4, -5, -5, -5, -5, 0, -1, -2]) },\r\n//from zefbox, are these correct????\r\n\t //\"triangle\", \"square\", \"semi-square\", \"deep square\", \"squaretal\", \"sawtooth\", \"saw wide\", \"saw narrow\",  \"deep sawtooth\", \"double saw\", \"sawtal\", \"deep sawtal\", \"squaretooth\", \"pulse\", \"pulse wide\", \"pulse narrow\", \"double pulse\", \"triple pulse\", \"high pulse\", \"deep pulse\",  \"nes pulse\", \"spiky\", \"plateau\", \"sinusoid\"\r\n\t { name: \"wackybox guitar string\", expression: 0.6, samples: centerAndNormalizeWave([0, 63, 63, 63, 63, 19, 63, 63, 63, 63, 63, 63, 63, 63, 63, 63, 11, 63, 63, 63, 63, 63, 63, 63, 63, 63, 63, 63, 63, 63, 63, 63, 63, 63, 63, 63, 63, 63, 63, 63, 63, 27, 63, 63, 63, 63, 63, 63, 63, 63, 63, 63, 63, 63, 63, 63, 63, 63, 63, 34, 63, 63, 63, 63]) },\r\n\t\t{ name: \"wackybox intense\", expression: 0.6, samples: centerAndNormalizeWave([36, 25, 33, 35, 18, 51, 22, 40, 27, 37, 31, 33, 25, 29, 41, 23, 31, 31, 45, 20, 37, 23, 29, 26, 42, 29, 33, 26, 31, 27, 40, 25, 40, 26, 37, 24, 41, 32, 0, 32, 33, 29, 32, 31, 31, 31, 31, 31, 31, 31, 31, 31, 31, 31, 31, 31, 31, 31, 31, 31, 31, 31, 31, 31]) },\r\n\t\t{ name: \"wackybox buzz wave\", expression: 0.6, samples: centerAndNormalizeWave([0, 1, 1, 2, 4, 4, 4, 4, 5, 5, 6, 6, 6, 7, 8, 8, 8, 9, 9, 9, 9, 9, 9, 8, 8, 8, 11, 15, 23, 62, 61, 60, 58, 56, 56, 54, 53, 52, 50, 49, 48, 47, 47, 45, 45, 45, 44, 44, 43, 43, 42, 42, 42, 42, 42, 42, 42, 42, 42, 42, 42, 43, 43, 53]) },\r\n        //wackybox\r\n\t\t        { name: \"todbox 1/3 pulse\", expression: 0.5, samples: centerWave([1.0, -1.0, -1.0]) },\r\n        { name: \"todbox 1/5 pulse\", expression: 0.5, samples: centerWave([1.0, -1.0, -1.0, -1.0, -1.0]) },\r\n\t\t//these WEREN'T in pre-2.0 ultrabox, but I've added backwards compatibility stuff related to it so yeah\r\n\t\t{ name: \"todbox slap bass\", expression: 0.5, samples: centerAndNormalizeWave([1, 0.5, 0, 0.5, 1.25, 0.5, -0.25, 0.1, -0.1, 0.1, 1.1, 2.1, 3, 3.5, 2.9, 3.3, 2.7, 2.9, 2.3, 2, 1.9, 1.8, 1, 0.7, 0.9, 0.8, 0.4, 0.1, 0.0, 0.2, 0.4, 0.6, 0.5, 0.8]) },\r\n\t{ name: \"todbox harsh wave\", expression: 0.45, samples: centerAndNormalizeWave([1.0, -1.0, -1.0, -1.0, 0.5, 0.5, 0.5, 0.7, 0.39, 1.3, 0, -1.0, -1.0, -1.0, -1.0, -1.0, -1.0, -1.0, -1.0, -1.0, -1.0, -1.0, -1.0, -1.0, -1.0, -1.0, -1.0, -1.0, -1.0, -1.0, -1.0, -1.0, -1.0, -1.0, -1.0, -1.0, -1.0, -1.0, -1.0, -1.0, -1.0, -1.0, -1.0, -1.0, -1.0, -1.0, -1.0, -1.0, -1.0, -1.0, -1.0, -1.0, -1.0, -1.0, -1.0, -1.0, -1.0, -1.0, -1.0, -1.0, -1.0, -1.0, -1.0, -1.0, -1.0]) },\r\n\t{ name: \"todbox accordian\", expression: 0.5, samples: centerAndNormalizeWave([0, 1, 1, 2, 2, 1.5, 1.5, 0.8, 0, -2, -3.25, -4, -4.5, -5.5, -6, -5.75, -5.5, -5, -5, -5, -6, -6, -6, -5, -4, -3, -2, -1, 0.75, 1, 2, 3, 4, 5, 6, 6.5, 7.5, 8, 7.75, 6, 5.25, 5, 5, 5, 5, 5, 4.25, 3.75, 3.25, 2.75, 1.25, -0.75, -2, -0.75, 1.25, 1.25, 2, 2, 2, 2, 1.5, -1, -2, -1, 1.5, 2,  2.75, 2.75, 2.75, 3, 2.75, -1, -2, -2.5, -2, -1, -2.25, -2.75, -2, -3, -1.75, 1, 2, 3.5, 4, 5.25, 6, 8, 9.75, 10, 9.5, 9, 8.5, 7.5, 6.5, 5.25, 5, 4.5, 4, 4, 4, 3.25, 2.5, 2, 1, -0.5, -2, -3.5, -4, -4, -4, -3.75, -3, -2, -1]) },\r\n    //from todbox\r\n\t{ name: \"todbox beta banana wave\", expression: 0.8, samples: centerAndNormalizeWave([0.0, 0.2, 0.4, 0.5, 0.6, 0.7, 0.8, 0.85, 0.9, 0.95, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 0.95, 0.9, 0.85, 0.8, 0.7, 0.6, 0.5, 0.4, 0.2, 0.0]) },\r\n\t{ name: \"todbox beta test wave\", expression: 0.5, samples: centerAndNormalizeWave([56, 0, -52, 16, 3, 3, 2, -35, 20, 147, -53, 0, 0, 5, -6]) },\r\n\t//I don't like this one.\r\n\t{ name: \"todbox beta real snare\", expression: 1.0, samples: centerAndNormalizeWave([0.00000,-0.01208,-0.02997,-0.04382,-0.06042,-0.07529,-0.09116,-0.10654,-0.12189,-0.13751,-0.15289,-0.16849,-0.18387,-0.19974,-0.21484,-0.23071,-0.24557,-0.26144,-0.27731,-0.29141,-0.30350,-0.32416,-0.34406,-0.32947,-0.31158,-0.33725,-0.37579,-0.39746,-0.40201,-0.40906,-0.44180,-0.47229,-0.47379,-0.47733,-0.45239,-0.33954,-0.22894,-0.22443,-0.32138,-0.46371,-0.57178,-0.61081,-0.59998,-0.61459,-0.62189,-0.43979,-0.19217,-0.12643,-0.17252,-0.20956,-0.20981,-0.19217,-0.22845,-0.34332,-0.50629,-0.64307,-0.72922,-0.81384,-0.87857,-0.90149,-0.88687,-0.86169,-0.87781,-0.80478,-0.52493,-0.31308,-0.33249,-0.39395,-0.39017,-0.30301,-0.19949,-0.13071,-0.02493,0.14307,0.34961,0.52542,0.63223,0.68613,0.74710,0.87305,0.98184,0.98889,0.97052,0.99066,0.99747,0.99344,0.99469,0.99393,0.99570,0.99393,0.99521,0.99469,0.99420,0.99521,0.99420,0.99521,0.99469,0.99469,0.99521,0.99420,0.99545,0.99445,0.99469,0.99493,0.99420,0.99521,0.99393,0.99493,0.99469,0.99445,0.99570,0.99445,0.99521,0.99469,0.99469,0.99521,0.99420,0.99545,0.99445,0.99445,0.99493,0.99420,0.99545,0.99420,0.99493,0.99493,0.99420,0.99545,0.99445,0.99521,0.99469,0.99445,0.99545,0.99368,0.99393,0.99445,0.99268,0.97983,0.97229,0.95944,0.88486,0.76773,0.64481,0.53098,0.39847,0.19318,-0.03827,-0.20325,-0.39319,-0.68765,-0.88461,-0.93448,-0.96069,-0.97681,-0.98715,-0.99042,-0.99142,-0.99091,-0.99142,-0.99219,-0.99091,-0.99219,-0.99066,-0.99142,-0.99142,-0.99118,-0.99191,-0.99066,-0.99191,-0.99142,-0.99142,-0.99191,-0.99091,-0.99219,-0.99118,-0.99142,-0.99167,-0.99091,-0.99219,-0.99091,-0.99167,-0.99142,-0.99091,-0.99191,-0.99091,-0.99191,-0.99142,-0.99118,-0.99191,-0.99066,-0.99191,-0.99118,-0.99142,-0.99191,-0.99066,-0.99191,-0.99091,-0.99167,-0.99191,-0.99118,-0.99219,-0.99091,-0.99191,-0.99142,-0.99142,-0.99243,-0.98865,-0.98764,-0.99219,-0.98083,-0.92517,-0.92770,-0.91486,-0.59042,-0.15189,0.02945,0.05667,0.06195,0.00629,-0.18008,-0.56497,-0.88010,-0.92770,-0.92871,-0.97705,-0.99167,-0.98663,-0.99118,-0.99042,-0.99219,-0.99142,-0.99118,-0.98941,-0.99219,-1.00000,-0.97580,-0.95993,-0.99948,-0.98236,-0.84659,-0.74860,-0.70679,-0.59747,-0.48035,-0.41687,-0.36826,-0.29745,-0.18185,-0.06219,0.02164,0.07907,0.13123,0.18033,0.19620,0.15692,0.14053,0.20251,0.27530,0.30905,0.29092,0.27252,0.30402,0.32416,0.32214,0.35239,0.39670,0.43198,0.49420,0.58487,0.64154,0.65967,0.67050,0.67026,0.66522,0.65540,0.66119,0.70627,0.75842,0.78738,0.78940,0.78763,0.80402,0.85944,0.94559,0.98990,0.98160,0.98007,0.99368,0.99393,0.98538,0.97580,0.97101,0.93802,0.81812,0.64633,0.46649,0.28613,0.14685,0.08966,0.12543,0.20325,0.24557,0.18866,0.02795,-0.20175,-0.44205,-0.58713,-0.57629,-0.41385,-0.14255,0.18033,0.47882,0.68311,0.72314,0.62064,0.48309,0.43073,0.53577,0.72794,0.90250,0.97354,0.97000,0.98083,0.99191,0.99319,0.99493,0.99393,0.99521,0.99393,0.99545,0.99420,0.99493,0.99493,0.99445,0.99545,0.99420,0.99545,0.99243,0.98917,0.98386,0.97781,0.95844,0.89066,0.81561,0.78134,0.77277,0.75995,0.73022,0.67126,0.57178,0.47000,0.38361,0.29419,0.20703,0.14734,0.15866,0.25162,0.35818,0.45062,0.56750,0.69748,0.81232,0.89697,0.95062,0.97656,0.98615,0.99191,0.99219,0.99243,0.99368,0.99368,0.97028,0.95566,0.94559,0.82617,0.59973,0.38361,0.23901,0.15338,0.12921,0.11206,0.04382,-0.12946,-0.43552,-0.72644,-0.89847,-0.95465,-0.95541,-0.97229,-0.99268,-0.99319,-0.98840,-0.99142,-0.99167,-0.99091,-0.98840,-0.98965,-0.99368,-0.97455,-0.95010,-0.94684,-0.96219,-0.98514,-0.99243,-0.98889,-0.98917,-0.99142,-0.99219,-0.99091,-0.99191,-0.99142,-0.99142,-0.99191,-0.99066,-0.99167,-0.99091,-0.99142,-0.99191,-0.99091,-0.99191,-0.99091,-0.99167,-0.99167,-0.99091,-0.99219,-0.99091,-0.99191,-0.99142,-0.99118,-0.99191,-0.99066,-0.99191,-0.99091,-0.99118,-0.99243,-0.98941,-0.98462,-0.96976,-0.96320,-0.96194,-0.87305,-0.66196,-0.44809,-0.29495,-0.18085,-0.11813,-0.11334,-0.18564,-0.34885,-0.58237,-0.80450,-0.93726,-0.97806,-0.97354,-0.97531,-0.98990,-0.99368,-0.98941,-0.99219,-0.99091,-0.99142,-0.99167,-0.99091,-0.99191,-0.99118,-0.99219,-0.98236,-0.97781,-0.97656,-0.95135,-0.87204,-0.71335,-0.52139,-0.34232,-0.17783,-0.00906,0.14886,0.30450,0.48889,0.67404,0.84030,0.94128,0.97681,0.98462,0.98337,0.99142,0.99521,0.99493,0.99420,0.99445,0.99521,0.99393,0.99545,0.99445,0.99521,0.99521,0.99445,0.99570,0.99445,0.99521,0.99469,0.99445,0.99521,0.99420,0.99521,0.99445,0.99445,0.99521,0.99445,0.99545,0.99445,0.99469,0.99493,0.99393,0.99493,0.99445,0.99393,0.98285,0.97781,0.97479,0.92844,0.82114,0.66095,0.52417,0.46826,0.46722,0.47934,0.47379,0.47076,0.48209,0.42014,0.25439,0.10074,-0.00302,-0.08966,-0.16068,-0.21436,-0.22040,-0.15137,-0.00476,0.18536,0.37631,0.52292,0.62164,0.70425,0.74835,0.72366,0.63928,0.52567,0.40805,0.35666,0.42896,0.60175,0.80200,0.92743,0.96548,0.97632,0.98337,0.99066,0.99521,0.99420,0.99368,0.99292,0.98840,0.98083,0.96774,0.93323,0.85440,0.69470,0.47202,0.20425,-0.08890,-0.36423,-0.60025,-0.77481,-0.90173,-0.96017,-0.97028,-0.98108,-0.98840,-0.99219,-0.98990,-0.99219,-0.99142,-0.99142,-0.99219,-0.99091,-0.99243,-0.99066,-0.99142,-0.99142,-0.99118,-0.99191,-0.99066,-0.99167,-0.99142,-0.99142,-0.99219,-0.99091,-0.99191,-0.99118,-0.99142,-0.99191,-0.99091,-0.99191,-0.99091,-0.99167,-0.99191,-0.99118,-0.99219,-0.99091,-0.99167,-0.99142,-0.99142,-0.99219,-0.99091,-0.99191,-0.99142,-0.99118,-0.98917,-0.99042,-0.99445,-0.97330,-0.95590,-0.96219,-0.89670,-0.72241,-0.55112,-0.44809,-0.39319,-0.37833,-0.35641,-0.26270,-0.14230,-0.11282,-0.13525,-0.11536,-0.09671,-0.11511,-0.18060,-0.26874,-0.33374,-0.42215,-0.51358,-0.44785,-0.30450,-0.28613,-0.30527,-0.25037,-0.15390,-0.08286,-0.11157,-0.12592,-0.00327,0.13803,0.19141,0.12820,0.01788,-0.03952,-0.12592,-0.26773,-0.34634,-0.31384,-0.18060,-0.01080,0.13574,0.26120,0.36975,0.46573,0.55087,0.63626,0.73022,0.83072,0.92014,0.97177,0.98587,0.98413,0.99167,0.99445,0.99292,0.99219,0.98740,0.98007,0.96472,0.92239,0.82166,0.69067,0.57959,0.54962,0.59695,0.64255,0.64633,0.60629,0.55942,0.54910,0.58966,0.61887,0.56952,0.54181,0.59518,0.63248,0.63876,0.65463,0.73398,0.88312,0.96927,0.97101,0.97958,0.99344,0.99420,0.99268,0.99493,0.99469,0.99445,0.99521,0.99445,0.99545,0.99420,0.99493,0.99493,0.99420,0.99545,0.99420,0.99493,0.99420,0.99393,0.99420,0.98840,0.98309,0.98309,0.96069,0.88461,0.79370,0.72064,0.65765,0.59998,0.53247,0.49268,0.48615,0.44205,0.38034,0.36447,0.38715,0.39294,0.32645,0.19595,0.07782,-0.05893,-0.27832,-0.48309,-0.62619,-0.72995,-0.79999,-0.84583,-0.82166,-0.73575,-0.67227,-0.65491,-0.64960,-0.66397,-0.70175,-0.72894,-0.74658,-0.76724,-0.79520,-0.82846,-0.86523,-0.90527,-0.94382,-0.89948,-0.69849,-0.47479,-0.31662,-0.15414,-0.00729,0.07077,0.08237,0.04431,-0.02292,-0.11761,-0.24307,-0.36926,-0.45087,-0.46170,-0.40250,-0.30679,-0.17529,0.00000,0.14331,0.24179,0.36774,0.49545,0.56522,0.57907,0.56775,0.53851,0.51132,0.48688,0.41913,0.26044,0.00955,-0.26297,-0.46396,-0.62341,-0.82214,-0.94684,-0.96774,-0.97531,-0.98413,-0.99017,-0.98990,-0.99219,-0.99066,-0.99142,-0.99167,-0.99118,-0.99219,-0.98990,-0.99118,-0.99368,-0.99142,-0.97757,-0.97403,-0.98007,-0.96170,-0.86826,-0.67783,-0.52719,-0.48788,-0.45490,-0.43146,-0.47681,-0.54105,-0.57983,-0.60904,-0.62317,-0.59949,-0.55566,-0.52063,-0.52115,-0.55112,-0.56244,-0.58337,-0.65540,-0.73373,-0.77228,-0.74759,-0.68890,-0.64609,-0.61887,-0.58060,-0.50351,-0.40729,-0.33929,-0.35110,-0.42944,-0.47028,-0.42267,-0.32718,-0.20224,-0.05640,0.04556,0.10529,0.17630,0.26169,0.33197,0.32138,0.23776,0.20956,0.23148,0.20352,0.23325,0.39267,0.52719,0.58438,0.62289,0.66345,0.70023,0.66296,0.54330,0.42618,0.33475,0.24533,0.14105,0.03851,0.01358,0.09143,0.22845,0.34961,0.41711,0.48740,0.58914,0.69519,0.78186,0.84357,0.89822,0.95389,0.98135,0.98615,0.99167,0.99243,0.99445,0.99420,0.99469,0.99493,0.99393,0.99545,0.99445,0.99521,0.99469,0.99445,0.99521,0.99420,0.99469,0.98965,0.98715,0.98563,0.96295,0.91736,0.86624,0.82367,0.77554,0.68411,0.53549,0.38916,0.26120,0.11435,-0.04053,-0.18161,-0.23172,-0.19394,-0.15237,-0.10730,-0.02997,0.08588,0.22620,0.34305,0.44104,0.55740,0.65765,0.71259,0.69217,0.65363,0.69748,0.79572,0.89368,0.95514,0.97733,0.98413,0.98816,0.99243,0.99445,0.99243,0.97302,0.96674,0.97983,0.90378,0.71005,0.51056,0.40451,0.40982,0.41559,0.32996,0.24356,0.18866,0.11411,0.05365,0.01157,-0.03247,-0.09216,-0.16095,-0.23248,-0.31662,-0.39771,-0.48663,-0.59647,-0.71536,-0.82013,-0.85287,-0.82947,-0.84937,-0.92215,-0.97177,-0.98663,-0.98816,-0.98438,-0.99091,-0.99219,-0.99091,-0.99191,-0.99042,-0.99191,-0.99091,-0.99142,-0.99191,-0.99091,-0.99191,-0.99091,-0.99167,-0.99142]) },\r\n\t//from todbox beta (obviously)\r\n\t\r\n\t//{ name: \"ultrabox nes 12.5%\", expression: 0.5, isSampled: false, samples: centerAndNormalizeWave([0, 1, 0, 0, 0, 0, 0, 0]) },\r\n\t//{ name: \"ultrabox nes 25%\", expression: 0.5, isSampled: false, samples: centerAndNormalizeWave([0, 1, 1, 0, 0, 0, 0, 0]) },\r\n//\t{ name: \"ultrabox nes 50%\", expression: 0.5, isSampled: false, samples: centerAndNormalizeWave([0, 1, 1, 1, 1, 0, 0, 0]) },\r\n//\t{ name: \"ultrabox nes 25% negated\", expression: 0.5, isSampled: false, samples: centerAndNormalizeWave([1, 0, 0, 1, 1, 1, 1, 1]) },\r\n\t//{ name: \"ultrabox nes triangle\", expression: 0.5, isSampled: true, isPercussion: false, extraSampleDetune: 63.28, samples: centerAndNormalizeWave([0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 15, 14, 13, 12, 11, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0]) },\r\n\t//{ name: \"ultrabox gameboy kirby triangle\", expression: 1.0, isSampled: false, samples: centerAndNormalizeWave([2,5,7,1,0,2,2,3,2,5,5,9,3,4,8,9,5,4,8,1,3,1,3,5,9,8,9,2,1,6,9,0,7,9,6,8,1,6]) },\r\n\t//{ name: \"ultrabox gameboy kirby bass\", expression: 1.0, isSampled: false, samples: centerAndNormalizeWave([4,5,7,2,6,8,3,3,0,8,1,4,2,1,1,4,8,6,7,3,7,8,3,8,7,7,7,5,7,4,3,9,8,7,8,7,0,7]) },\r\n\t\r\n\t\r\n\t{ name: \"ultrabox shortened od guitar\", expression: 0.5, samples: centerAndNormalizeWave([-0.82785,-0.67621,-0.40268,-0.43817,-0.45468,-0.22531,-0.18329,0.24750,0.71246,0.52155,0.56082,0.48395,0.33990,0.46957,0.27744,0.42313,0.47104,0.18796,0.12930,-0.13901,-0.07431,-0.16348,-0.74857,-0.73206,-0.35181,-0.26227,-0.41882,-0.27786,-0.19806,-0.19867,0.18643,0.24808,0.08847,-0.06964,0.06912,0.20474,-0.05304,0.29416,0.31967,0.14243,0.27521,-0.23932,-0.14752,0.12360,-0.26123,-0.26111,0.06616,0.26520,0.08090,0.15240,0.16254,-0.12061,0.04562,0.00131,0.04050,0.08182,-0.21729,-0.17041,-0.16312,-0.08563,0.06390,0.05099,0.05627,0.02728,0.00726,-0.13028,-0.05673,-0.14969,-0.17645,0.35492,0.16766,-0.00897,0.24326,-0.00461,-0.04456,0.01776,-0.04950,-0.01221,0.02039,0.07684,0.13397,0.39850,0.35962,0.13754,0.42310,0.27161,-0.17609,0.03659,0.10635,-0.21909,-0.22046,-0.20258,-0.40973,-0.40280,-0.40521,-0.66284]) },\r\n\t//based off an old mp3 in #modded-beepbox where someone tried to shorten the overdrive guitar into the size of other chip waves \r\n\t//search \"normie alert\" in beepcord\r\n\r\n//{ name: \"super epic test wave\", expression: 0.5, samples: centerAndNormalizeWave([2, 6.9, 3.9, 4.20, 5, 2, 6.9420, 3, 4.2069]) },\r\n\t//{ name: \"ultrabox doom rng\", expression: 0.5, samples: centerAndNormalizeWave([0, 8, 109, 220, 222, 241, 149, 107, 75, 248, 254, 140, 16, 66 , 74, 21, 211, 47, 80, 242, 154, 27, 205, 128, 161, 89, 77, 36 , 95, 110, 85, 48, 212, 140, 211, 249, 22, 79, 200, 50, 28, 188 , 52, 140, 202, 120, 68, 145, 62, 70, 184, 190, 91, 197, 152, 224 , 149, 104, 25, 178, 252, 182, 202, 182, 141, 197, 4, 81, 181, 242 , 145, 42, 39, 227, 156, 198, 225, 193, 219, 93, 122, 175, 249, 0 , 175, 143, 70, 239, 46, 246, 163, 53, 163, 109, 168, 135, 2, 235 , 25, 92, 20, 145, 138, 77, 69, 166, 78, 176, 173, 212, 166, 113 , 94, 161, 41, 50, 239, 49, 111, 164, 70, 60, 2, 37, 171, 75 , 136, 156, 11, 56, 42, 146, 138, 229, 73, 146, 77, 61, 98, 196 , 135, 106, 63, 197, 195, 86, 96, 203, 113, 101, 170, 247, 181, 113 , 80, 250, 108, 7, 255, 237, 129, 226, 79, 107, 112, 166, 103, 241 , 24, 223, 239, 120, 198, 58, 60, 82, 128, 3, 184, 66, 143, 224 , 145, 224, 81, 206, 163, 45, 63, 90, 168, 114, 59, 33, 159, 95 , 28, 139, 123, 98, 125, 196, 15, 70, 194, 253, 54, 14, 109, 226 , 71, 17, 161, 93, 186, 87, 244, 138, 20, 52, 123, 251, 26, 36 , 17, 46, 52, 231, 232, 76, 31, 221, 84, 37, 216, 165, 212, 106 , 197, 242, 98, 43, 39, 175, 254, 145, 190, 84, 118, 222, 187, 136 , 120, 163, 236, 249]) },\t\r\n\r\n]); \r\n\t//public static readonly chipWaves: DictionaryArray<ChipWave> = rawChipToIntegrated(Config.rawChipWaves);\r\n\tpublic static chipWaves: DictionaryArray<ChipWave> = rawChipToIntegrated(Config.rawChipWaves);\r\n\tpublic static rawRawChipWaves: DictionaryArray<ChipWave> = Config.rawChipWaves;\r\n\r\n\tpublic static firstIndexForSamplesInChipWaveList: number = Config.chipWaves.length;\r\n  \r\n\t// Noise waves have too many samples to write by hand, they're generated on-demand by getDrumWave instead.\r\n\tpublic static readonly chipNoises: DictionaryArray<ChipNoise> = toNameMap([\r\n\t\t{ name: \"retro\", expression: 0.25, basePitch: 69, pitchFilterMult: 1024.0, isSoft: false, samples: null },\r\n\t\t{ name: \"white\", expression: 1.0, basePitch: 69, pitchFilterMult: 8.0, isSoft: true, samples: null },\r\n\t\t// The \"clang\" and \"buzz\" noises are based on similar noises in the modded beepbox! :D\r\n\t\t{ name: \"clang\", expression: 0.4, basePitch: 69, pitchFilterMult: 1024.0, isSoft: false, samples: null },\r\n\t\t{ name: \"buzz\", expression: 0.3, basePitch: 69, pitchFilterMult: 1024.0, isSoft: false, samples: null },\r\n\t\t{ name: \"hollow\", expression: 1.5, basePitch: 96, pitchFilterMult: 1.0, isSoft: true, samples: null },\r\n\t\t{ name: \"shine\", expression: 1.0, basePitch: 69, pitchFilterMult: 1024.0, isSoft: false, samples: null },\r\n\t\t{ name: \"deep\", expression: 1.5, basePitch: 120, pitchFilterMult: 1024.0, isSoft: true, samples: null },\r\n\t\t{ name: \"cutter\", expression: 0.005, basePitch: 96, pitchFilterMult: 1024.0, isSoft: false, samples: null },\r\n        { name: \"metallic\", expression: 1.0, basePitch: 96, pitchFilterMult: 1024.0, isSoft: false, samples: null },\r\n        { name: \"static\", expression: 1.0, basePitch: 96, pitchFilterMult: 1024.0, isSoft: false, samples: null },\r\n\t\t //sandbox\r\n\t\t{ name: \"1-bit white\", expression: 0.5, basePitch: 74.41, pitchFilterMult: 1024.0, isSoft: false, samples: null },\r\n\t\t{ name: \"1-bit metallic\", expression: 0.5, basePitch: 86.41, pitchFilterMult: 1024.0, isSoft: false, samples: null },\r\n\t\t//technically these are from the pandorasbox beta but whatever\r\n\t\t{ name: \"crackling\", expression: 0.9, basePitch: 69, pitchFilterMult: 1024.0, isSoft: false, samples: null },\r\n\t\t{ name: \"pink noise\", expression: 1.0, basePitch: 69, pitchFilterMult: 8.0, isSoft: true, samples: null },\r\n\t\t{ name: \"brownian noise\", expression: 1.0, basePitch: 69, pitchFilterMult: 8.0, isSoft: true, samples: null },\r\n\t\t//{ name: \"doom random\", expression: 1.0, basePitch: 84, pitchFilterMult: 1024.0, isSoft: false, samples: null },\r\n\t]);\r\n\t\r\n    public static readonly filterFreqStep: number = 1.0 / 4.0;\r\n    public static readonly filterFreqRange: number = 34;\r\n    public static readonly filterFreqReferenceSetting: number = 28;\r\n    public static readonly filterFreqReferenceHz: number = 8000.0;\r\n    public static readonly filterFreqMaxHz: number = Config.filterFreqReferenceHz * Math.pow(2.0, Config.filterFreqStep * (Config.filterFreqRange - 1 - Config.filterFreqReferenceSetting)); // ~19khz\r\n    public static readonly filterFreqMinHz: number = 8.0;\r\n    public static readonly filterGainRange: number = 15;\r\n    public static readonly filterGainCenter: number = 7;\r\n    public static readonly filterGainStep: number = 1.0 / 2.0;\r\n    public static readonly filterMaxPoints: number = 8;\r\n    public static readonly filterTypeNames: ReadonlyArray<string> = [\"low-pass\", \"high-pass\", \"peak\"]; // See FilterType enum above.\r\n    public static readonly filterMorphCount: number = 10; // Number of filter shapes allowed for modulating between. Counts the 0/default position.\r\n\r\n    public static readonly filterSimpleCutRange: number = 11;\r\n    public static readonly filterSimplePeakRange: number = 8;\r\n\r\n    public static readonly fadeInRange: number = 10;\r\n    public static readonly fadeOutTicks: ReadonlyArray<number> = [-24, -12, -6, -3, -1, 6, 12, 24, 48, 72, 96];\r\n    public static readonly fadeOutNeutral: number = 4;\r\n    public static readonly drumsetFadeOutTicks: number = 48;\r\n\tpublic static readonly transitions: DictionaryArray<Transition> = toNameMap([\r\n        { name: \"normal\", isSeamless: false, continues: false, slides: false, slideTicks: 3, includeAdjacentPatterns: false },\r\n        { name: \"interrupt\", isSeamless: true, continues: false, slides: false, slideTicks: 3, includeAdjacentPatterns: true },\r\n        { name: \"continue\", isSeamless: true, continues: true, slides: false, slideTicks: 3, includeAdjacentPatterns: true },\r\n        { name: \"slide\", isSeamless: true, continues: false, slides: true, slideTicks: 3, includeAdjacentPatterns: true },\r\n        { name: \"slide in pattern\", isSeamless: true, continues: false, slides: true, slideTicks: 3, includeAdjacentPatterns: false }\r\n\t]);\r\n\tpublic static readonly vibratos: DictionaryArray<Vibrato> = toNameMap([\r\n        { name: \"none\", amplitude: 0.0, type: 0, delayTicks: 0 },\r\n        { name: \"light\", amplitude: 0.15, type: 0, delayTicks: 0 },\r\n        { name: \"delayed\", amplitude: 0.3, type: 0, delayTicks: 37 }, // It will fade in over the previous two ticks.\r\n        { name: \"heavy\", amplitude: 0.45, type: 0, delayTicks: 0 },\r\n        { name: \"shaky\", amplitude: 0.1, type: 1, delayTicks: 0 },\r\n\t\t\t//    { name: \"very shaky\", amplitude: 1, type: 0, delayTicks: 0 },\r\n\t//{ name: \"insane\", amplitude: 10, type: 1, delayTicks: 0 },\r\n\t    //todbox vibratos\r\n\t//\t{ name: \"super insane\", amplitude: 30, type: 1, delayTicks: 1 },\r\n\t\t//wackybox\r\n\t//\t { name: \"quiver\", amplitude: 0.001, type: 0, delayTicks: 0 },\r\n      //  { name: \"wub-wub\", amplitude: 10.0, type: 0, delayTicks: 0 },\r\n   //     { name: \"quiver delayed\", amplitude: 0.001, type: 0, delayTicks: 18 },\r\n      //  { name: \"vibrate\", amplitude: 0.08, type: 0, delayTicks: 0 },\r\n    //    { name: \"too much wub\", amplitude: 30.0, type: 0, delayTicks: 18 },\r\n\t //too much wub breaks things just a little bit at it's original amplitude\r\n\t\t//sandbox\r\n\t]);\r\n\tpublic static readonly vibratoTypes: DictionaryArray<VibratoType> = toNameMap([\r\n\t\t{ name: \"normal\", periodsSeconds: [0.14], period: 0.14 },\r\n\t\t{ name: \"shaky\", periodsSeconds: [0.11, 1.618 * 0.11, 3 * 0.11], period: 266.97 }, // LCM of all periods\r\n\t]);\r\n\t// This array is more or less a linear step by 0.1 but there's a bit of range added at the start to hit specific ratios, and the end starts to grow faster.\r\n\t//                                                             0       1      2    3     4      5    6    7      8     9   10   11 12   13   14   15   16   17   18   19   20   21 22   23   24   25   26   27   28   29   30   31 32   33   34   35   36   37   38    39  40   41 42    43   44   45   46 47   48 49 50\r\n\tpublic static readonly arpSpeedScale: ReadonlyArray<number> = [0, 0.0625, 0.125, 0.2, 0.25, 1 / 3, 0.4, 0.5, 2 / 3, 0.75, 0.8, 0.9, 1, 1.1, 1.2, 1.3, 1.4, 1.5, 1.6, 1.7, 1.8, 1.9, 2, 2.1, 2.2, 2.3, 2.4, 2.5, 2.6, 2.7, 2.8, 2.9, 3, 3.1, 3.2, 3.3, 3.4, 3.5, 3.6, 3.7, 3.8, 3.9, 4, 4.15, 4.3, 4.5, 4.8, 5, 5.5, 6, 8];\r\n\tpublic static readonly unisons: DictionaryArray<Unison> = toNameMap([\r\n        { name: \"none\", voices: 1, spread: 0.0, offset: 0.0, expression: 1.4, sign: 1.0 },\r\n        { name: \"shimmer\", voices: 2, spread: 0.018, offset: 0.0, expression: 0.8, sign: 1.0 },\r\n        { name: \"hum\", voices: 2, spread: 0.045, offset: 0.0, expression: 1.0, sign: 1.0 },\r\n        { name: \"honky tonk\", voices: 2, spread: 0.09, offset: 0.0, expression: 1.0, sign: 1.0 },\r\n        { name: \"dissonant\", voices: 2, spread: 0.25, offset: 0.0, expression: 0.9, sign: 1.0 },\r\n        { name: \"fifth\", voices: 2, spread: 3.5, offset: 3.5, expression: 0.9, sign: 1.0 },\r\n        { name: \"octave\", voices: 2, spread: 6.0, offset: 6.0, expression: 0.8, sign: 1.0 },\r\n        { name: \"bowed\", voices: 2, spread: 0.02, offset: 0.0, expression: 1.0, sign: -1.0 },\r\n        { name: \"piano\", voices: 2, spread: 0.01, offset: 0.0, expression: 1.0, sign: 0.7 },\r\n        { name: \"warbled\", voices: 2, spread: 0.25, offset: 0.05, expression: 0.9, sign: -0.8 },\r\n        { name: \"hecking gosh\", voices: 2, spread: 6.25, offset: -6.0, expression: 0.8, sign: -0.7 },\r\n\t\t\t\t//jummbox/goldbox\r\n\t\t{ name: \"spinner\", voices: 2, spread: 0.02, offset: 0.0, expression: 1.0, sign: 1.0 },\r\n\t\t{ name: \"detune\", voices: 1, spread: 0.0, offset: 0.25, expression: 1.0, sign: 1.0 },\r\n\t\t//{ name: \"bowed\", voices: 2, spread: 9.5, offset: 0.0, expression: 1.0, sign: 1.3 },\r\n\t\t//already in beepbox\r\n\t\t{ name: \"rising\", voices: 2, spread: 1.0, offset: 0.7, expression: 0.95, sign: 1.0 },\r\n\t\t{ name: \"vibrate\", voices: 2, spread: 3.5, offset: 7, expression: 0.975, sign: 1.0 },\r\n\t\t{ name: \"fourths\", voices: 2, spread: 4, offset: 4, expression: 0.95, sign: 1.0 },\r\n\t\t{ name: \"bass\", voices: 1, spread: 0, offset: -7, expression: 1.0, sign: 1.0 },\r\n\t\t{ name: \"dirty\", voices: 2, spread: 0, offset: 0.1, expression: 0.975, sign: 1.0 },\r\n\t\t{ name: \"stationary\", voices: 2, spread: 3.5, offset: 0.0, expression: 0.9, sign: 1.0 },\r\n\t\t//{ name: \"harmonic (legacy)\", voices: 2, spread: 9.5, offset: 0.0, expression: 1.0, sign: 1.3 },\r\n\t\t//I presume this isn't needed?\r\n\t\t{ name: \"recurve\", voices: 2, spread: 0.005, offset: 0.0, expression: 1.0, sign: 1.0 },\r\n\t\t{ name: \"voiced\", voices: 2, spread: 9.5, offset: 0.0, expression: 1.0, sign: 1.0 },\r\n\t\t{ name: \"fluctuate\", voices: 2, spread: 12, offset: 0.0, expression: 1.0, sign: 1.0 },\r\n\t\t//modbox\r\n\t\t{ name: \"thin\", voices: 1, spread: 0.0, offset: 50.0, expression: 1.0, sign: 1.0 },\r\n\t\t { name: \"inject\", voices: 2, spread: 6.0, offset: 0.4, expression: 1.0, sign: 1.0 },\r\n\t\t  { name: \"askewed\", voices: 2, spread: 0.0, offset: 0.42, expression: 0.7, sign: 1.0 },\r\n        { name: \"resonance\", voices: 2, spread: 0.0025, offset: 0.1, expression: 0.8, sign: -1.5 },\r\n\t\t//sandbox\r\n\t   //{ name: \"error\", voices: 2, spread: 9.5, offset: 0.0, expression: 1.0, sign: 1.3 },\r\n\t    //todbox\r\n\t\t//APPARENTLY  THE TODBOX ERROR IS THE SAME AS THE MODBOX VOICED ENTIRELY ON ACCIDENT???? HOW???\r\n\t\t{ name: \"FART\", voices: 2, spread: 13, offset: -5, expression: 1.0, sign: -3 },\r\n\t\t//wackybox\r\n\t\t\r\n\t //for modbox; voices = riffapp, spread = intervals, offsets = offset, expression = volume, and sign = signs\r\n\t]);\r\n    public static readonly effectNames: ReadonlyArray<string> = [\"reverb\", \"chorus\", \"panning\", \"distortion\", \"bitcrusher\", \"note filter\", \"echo\", \"pitch shift\", \"detune\", \"vibrato\", \"transition type\", \"chord type\"];\r\n    public static readonly effectOrder: ReadonlyArray<EffectType> = [EffectType.panning, EffectType.transition, EffectType.chord, EffectType.pitchShift, EffectType.detune, EffectType.vibrato, EffectType.noteFilter, EffectType.distortion, EffectType.bitcrusher, EffectType.chorus, EffectType.echo, EffectType.reverb];\r\n    public static readonly noteSizeMax: number = 6;\r\n\tpublic static readonly volumeRange: number = 50;\r\n\t// Beepbox's old volume scale used factor -0.5 and was [0~7] had roughly value 6 = 0.125 power. This new value is chosen to have -21 be the same,\r\n\t// given that the new scale is [-25~25]. This is such that conversion between the scales is roughly equivalent by satisfying (0.5*6 = 0.1428*21)\r\n\tpublic static readonly volumeLogScale: number = 0.1428;\r\n\tpublic static readonly panCenter: number = 50;\r\n\tpublic static readonly panMax: number = Config.panCenter * 2;\r\n\tpublic static readonly panDelaySecondsMax: number = 0.001;\r\n    public static readonly chorusRange: number = 8;\r\n    public static readonly chorusPeriodSeconds: number = 2.0;\r\n    public static readonly chorusDelayRange: number = 0.0034;\r\n    public static readonly chorusDelayOffsets: ReadonlyArray<ReadonlyArray<number>> = [[1.51, 2.10, 3.35], [1.47, 2.15, 3.25]];\r\n    public static readonly chorusPhaseOffsets: ReadonlyArray<ReadonlyArray<number>> = [[0.0, 2.1, 4.2], [3.2, 5.3, 1.0]];\r\n    public static readonly chorusMaxDelay: number = Config.chorusDelayRange * (1.0 + Config.chorusDelayOffsets[0].concat(Config.chorusDelayOffsets[1]).reduce((x, y) => Math.max(x, y)));\r\n\tpublic static readonly chords: DictionaryArray<Chord> = toNameMap([\r\n        { name: \"simultaneous\", customInterval: false, arpeggiates: false, strumParts: 0, singleTone: false },\r\n        { name: \"strum\", customInterval: false, arpeggiates: false, strumParts: 1, singleTone: false },\r\n        { name: \"arpeggio\", customInterval: false, arpeggiates: true, strumParts: 0, singleTone: true },\r\n        { name: \"custom interval\", customInterval: true, arpeggiates: false, strumParts: 0, singleTone: true },\r\n    ]);\r\n    public static readonly maxChordSize: number = 9;\r\n    public static readonly operatorCount: number = 4;\r\n\tpublic static readonly maxPitchOrOperatorCount: number = Math.max(Config.maxChordSize, Config.operatorCount+2);\r\n    public static readonly algorithms: DictionaryArray<Algorithm> = toNameMap([\r\n        { name: \"1←(2 3 4)\", carrierCount: 1, associatedCarrier: [1, 1, 1, 1], modulatedBy: [[2, 3, 4], [], [], []] },\r\n        { name: \"1←(2 3←4)\", carrierCount: 1, associatedCarrier: [1, 1, 1, 1], modulatedBy: [[2, 3], [], [4], []] },\r\n        { name: \"1←2←(3 4)\", carrierCount: 1, associatedCarrier: [1, 1, 1, 1], modulatedBy: [[2], [3, 4], [], []] },\r\n        { name: \"1←(2 3)←4\", carrierCount: 1, associatedCarrier: [1, 1, 1, 1], modulatedBy: [[2, 3], [4], [4], []] },\r\n        { name: \"1←2←3←4\", carrierCount: 1, associatedCarrier: [1, 1, 1, 1], modulatedBy: [[2], [3], [4], []] },\r\n        { name: \"1←3 2←4\", carrierCount: 2, associatedCarrier: [1, 2, 1, 2], modulatedBy: [[3], [4], [], []] },\r\n        { name: \"1 2←(3 4)\", carrierCount: 2, associatedCarrier: [1, 2, 2, 2], modulatedBy: [[], [3, 4], [], []] },\r\n        { name: \"1 2←3←4\", carrierCount: 2, associatedCarrier: [1, 2, 2, 2], modulatedBy: [[], [3], [4], []] },\r\n        { name: \"(1 2)←3←4\", carrierCount: 2, associatedCarrier: [1, 2, 2, 2], modulatedBy: [[3], [3], [4], []] },\r\n        { name: \"(1 2)←(3 4)\", carrierCount: 2, associatedCarrier: [1, 2, 2, 2], modulatedBy: [[3, 4], [3, 4], [], []] },\r\n        { name: \"1 2 3←4\", carrierCount: 3, associatedCarrier: [1, 2, 3, 3], modulatedBy: [[], [], [4], []] },\r\n        { name: \"(1 2 3)←4\", carrierCount: 3, associatedCarrier: [1, 2, 3, 3], modulatedBy: [[4], [4], [4], []] },\r\n        { name: \"1 2 3 4\", carrierCount: 4, associatedCarrier: [1, 2, 3, 4], modulatedBy: [[], [], [], []] },\r\n        { name: \"1←(2 3) 2←4\", carrierCount: 2, associatedCarrier: [1, 2, 1, 2], modulatedBy: [[2, 3], [4], [], []] },\r\n        { name: \"1←(2 (3 (4\", carrierCount: 3, associatedCarrier: [1, 2, 3, 3], modulatedBy: [[2, 3, 4], [3, 4], [4], []] },\r\n    ]);\r\n    public static readonly algorithms6Op: DictionaryArray<Algorithm> = toNameMap([\r\n        //placeholder makes life easier for later\r\n        { name: \"Custom\", carrierCount: 1, associatedCarrier: [1, 1, 1, 1, 1, 1], modulatedBy: [[2, 3, 4, 5, 6], [], [], [], [], []] },\r\n        //yoinked from SynthBox\r\n        //algortihm Section 1\r\n        { name: \"1←2←3←4←5←6\", carrierCount: 1, associatedCarrier: [1, 1, 1, 1, 1, 1], modulatedBy: [[2], [3], [4], [5], [6], []] },\r\n        { name: \"1←3 2←4←5←6\", carrierCount: 2, associatedCarrier: [1, 2, 2, 2, 2, 2], modulatedBy: [[3], [4], [], [5], [6], []] },\r\n        { name: \"1←3←4 2←5←6\", carrierCount: 2, associatedCarrier: [1, 1, 1, 2, 2, 2], modulatedBy: [[3], [5], [4], [], [6], []] },\r\n        { name: \"1←4 2←5 3←6\", carrierCount: 3, associatedCarrier: [1, 2, 3, 1, 2, 3], modulatedBy: [[4], [5], [6], [], [], []] },\r\n        //Algorithm Section 2\r\n        { name: \"1←3 2←(4 5←6)\", carrierCount: 2, associatedCarrier: [1, 2, 2, 2, 2, 2], modulatedBy: [[3], [4, 5], [], [], [6], []] },\r\n        { name: \"1←(3 4) 2←5←6\", carrierCount: 2, associatedCarrier: [1, 2, 2, 2, 2, 2], modulatedBy: [[3, 4], [5], [], [], [6], []] },\r\n        { name: \"1←3 2←(4 5 6)\", carrierCount: 2, associatedCarrier: [1, 2, 2, 2, 2, 2], modulatedBy: [[3], [4, 5, 6], [], [], [], []] },\r\n        { name: \"1←3 2←(4 5)←6\", carrierCount: 2, associatedCarrier: [1, 2, 2, 2, 2, 2], modulatedBy: [[3], [4, 5], [], [6], [6], []] },\r\n        { name: \"1←3 2←4←(5 6)\", carrierCount: 2, associatedCarrier: [1, 2, 2, 2, 2, 2], modulatedBy: [[3], [4], [], [5, 6], [], []] },\r\n        { name: \"1←(2 3 4 5 6)\", carrierCount: 1, associatedCarrier: [1, 1, 1, 1, 1, 1], modulatedBy: [[2, 3, 4, 5, 6], [], [], [], [], []] },\r\n        { name: \"1←(2 3←5 4←6)\", carrierCount: 1, associatedCarrier: [1, 1, 1, 1, 1, 1], modulatedBy: [[2, 3, 4], [], [5], [6], [], []] },\r\n        { name: \"1←(2 3 4←5←6)\", carrierCount: 1, associatedCarrier: [1, 1, 1, 1, 1, 1], modulatedBy: [[2, 3, 4], [], [], [5], [6], []] },\r\n        //Algorithm Section 3\r\n        { name: \"1←4←5 (2 3)←6\", carrierCount: 3, associatedCarrier: [1, 2, 3, 1, 2, 3], modulatedBy: [[4], [6], [6], [5], [], []] },\r\n        { name: \"1←(3 4)←5 2←6\", carrierCount: 2, associatedCarrier: [1, 2, 2, 2, 2, 2], modulatedBy: [[3, 4], [6], [5], [5], [], []] },\r\n        { name: \"(1 2)←4 3←(5 6)\", carrierCount: 3, associatedCarrier: [1, 2, 3, 1, 2, 3], modulatedBy: [[4], [4], [5, 6], [], [], []] },\r\n        { name: \"(1 2)←5 (3 4)←6\", carrierCount: 4, associatedCarrier: [1, 2, 3, 4, 4, 4], modulatedBy: [[5], [5], [6], [6], [], []] },\r\n        { name: \"(1 2 3)←(4 5 6)\", carrierCount: 3, associatedCarrier: [1, 2, 3, 1, 2, 3], modulatedBy: [[4, 5, 6], [4, 5, 6], [4, 5, 6], [], [], []] },\r\n        { name: \"1←5 (2 3 4)←6\", carrierCount: 4, associatedCarrier: [1, 2, 3, 4, 4, 4], modulatedBy: [[5], [6], [6], [6], [], []] },\r\n        { name: \"1 2←5 (3 4)←6\", carrierCount: 4, associatedCarrier: [1, 2, 3, 4, 4, 4], modulatedBy: [[], [5], [6], [6], [], []] },\r\n        { name: \"1 2 (3 4 5)←6\", carrierCount: 5, associatedCarrier: [1, 2, 3, 4, 5, 5], modulatedBy: [[], [], [6], [6], [6], []] },\r\n        { name: \"1 2 3 (4 5)←6\", carrierCount: 5, associatedCarrier: [1, 2, 3, 4, 5, 5], modulatedBy: [[], [], [], [6], [6], []] },\r\n        //Algorithm Section 3\r\n        { name: \"1 2←4 3←(5 6)\", carrierCount: 3, associatedCarrier: [1, 2, 3, 3, 3, 3], modulatedBy: [[], [4], [5, 6], [], [], []] },\r\n        { name: \"1←4 2←(5 6) 3\", carrierCount: 3, associatedCarrier: [1, 2, 3, 3, 3, 3,], modulatedBy: [[4], [5, 6], [], [], [], []] },\r\n        { name: \"1 2 3←5 4←6\", carrierCount: 4, associatedCarrier: [1, 2, 3, 4, 4, 4], modulatedBy: [[], [], [5], [6], [], []] },\r\n        { name: \"1 (2 3)←5←6 4\", carrierCount: 4, associatedCarrier: [1, 2, 3, 4, 4, 4,], modulatedBy: [[], [5], [5], [], [6], []] },\r\n        { name: \"1 2 3←5←6 4\", carrierCount: 4, associatedCarrier: [1, 2, 3, 4, 4, 4], modulatedBy: [[], [], [5, 6], [], [], []] },\r\n        { name: \"(1 2 3 4 5)←6\", carrierCount: 5, associatedCarrier: [1, 2, 3, 4, 5, 5], modulatedBy: [[6], [6], [6], [6], [6], []] },\r\n        { name: \"1 2 3 4 5←6\", carrierCount: 5, associatedCarrier: [1, 2, 3, 4, 5, 5], modulatedBy: [[], [], [], [], [6], []] },\r\n        { name: \"1 2 3 4 5 6\", carrierCount: 6, associatedCarrier: [1, 2, 3, 4, 5, 6], modulatedBy: [[], [], [], [], [], []] },\r\n        //Section 4 where we take our own previous ones for 4op and it gets weird\r\n        { name: \"1←(2 (3 (4 (5 (6\", carrierCount: 5, associatedCarrier: [1, 2, 3, 4, 5, 5], modulatedBy: [[2, 3, 4, 5, 6], [3, 4, 5, 6], [4, 5, 6], [5, 6], [6], []] },\r\n        { name: \"1←(2(3(4(5(6\", carrierCount: 1, associatedCarrier: [1, 1, 1, 1, 1, 1], modulatedBy: [[2, 3, 4, 5, 6], [3, 4, 5, 6], [4, 5, 6], [5, 6], [6], []] },\r\n        { name: \"1←4(2←5(3←6\", carrierCount: 3, associatedCarrier: [1, 2, 3, 1, 2, 3], modulatedBy: [[2, 3, 4], [3, 5], [6], [], [], []] },\r\n        { name: \"1←4(2←5 3←6\", carrierCount: 3, associatedCarrier: [1, 2, 3, 1, 2, 3], modulatedBy: [[2, 3, 4], [5], [6], [], [], []] },\r\n    ]);\r\n    public static readonly operatorCarrierInterval: ReadonlyArray<number> = [0.0, 0.04, -0.073, 0.091, 0.061, 0.024];\r\n\tpublic static readonly operatorAmplitudeMax: number = 15;\r\n    public static readonly operatorFrequencies: DictionaryArray<OperatorFrequency> = toNameMap([\r\n        { name: \"0.12×\", mult: 0.125, hzOffset: 0.0, amplitudeSign: 1.0 },\r\n        { name: \"0.25×\", mult: 0.25, hzOffset: 0.0, amplitudeSign: 1.0 },\r\n        { name: \"0.5×\", mult: 0.5, hzOffset: 0.0, amplitudeSign: 1.0 },\r\n        { name: \"0.75×\", mult: 0.75, hzOffset: 0.0, amplitudeSign: 1.0 },\r\n        { name: \"1×\", mult: 1.0, hzOffset: 0.0, amplitudeSign: 1.0 },\r\n        { name: \"~1×\", mult: 1.0, hzOffset: 1.5, amplitudeSign: -1.0 },\r\n        { name: \"2×\", mult: 2.0, hzOffset: 0.0, amplitudeSign: 1.0 },\r\n        { name: \"~2×\", mult: 2.0, hzOffset: -1.3, amplitudeSign: -1.0 },\r\n        { name: \"3×\", mult: 3.0, hzOffset: 0.0, amplitudeSign: 1.0 },\r\n        { name: \"3.5×\", mult: 3.5, hzOffset: -0.05, amplitudeSign: 1.0 },\r\n        { name: \"4×\", mult: 4.0, hzOffset: 0.0, amplitudeSign: 1.0 },\r\n        { name: \"~4×\", mult: 4.0, hzOffset: -2.4, amplitudeSign: -1.0 },\r\n        { name: \"5×\", mult: 5.0, hzOffset: 0.0, amplitudeSign: 1.0 },\r\n        { name: \"6×\", mult: 6.0, hzOffset: 0.0, amplitudeSign: 1.0 },\r\n        { name: \"7×\", mult: 7.0, hzOffset: 0.0, amplitudeSign: 1.0 },\r\n        { name: \"8×\", mult: 8.0, hzOffset: 0.0, amplitudeSign: 1.0 },\r\n        { name: \"9×\", mult: 9.0, hzOffset: 0.0, amplitudeSign: 1.0 },\r\n        { name: \"10×\", mult: 10.0, hzOffset: 0.0, amplitudeSign: 1.0 },\r\n        { name: \"11×\", mult: 11.0, hzOffset: 0.0, amplitudeSign: 1.0 },\r\n        { name: \"12×\", mult: 12.0, hzOffset: 0.0, amplitudeSign: 1.0 },\r\n        { name: \"13×\", mult: 13.0, hzOffset: 0.0, amplitudeSign: 1.0 },\r\n        { name: \"14×\", mult: 14.0, hzOffset: 0.0, amplitudeSign: 1.0 },\r\n\t    \t\t{ name: \"15×\", mult: 15.0, hzOffset: 0.0, amplitudeSign: 1.0 },\r\n\t\t//ultrabox\r\n        { name: \"16×\", mult: 16.0, hzOffset: 0.0, amplitudeSign: 1.0 },\r\n\t    \t\t{ name: \"17×\", mult: 17.0, hzOffset: 0.0, amplitudeSign: 1.0 },\r\n\t\t//ultrabox\r\n        { name: \"18×\", mult: 18.0, hzOffset: 0.0, amplitudeSign: 1.0 },\r\n\t    \t\t{ name: \"19×\", mult: 19.0, hzOffset: 0.0, amplitudeSign: 1.0 },\r\n\t\t//ultrabox\r\n        { name: \"20×\", mult: 20.0, hzOffset: 0.0, amplitudeSign: 1.0 },\r\n\t    \t{ name: \"~20×\", mult: 20.0, hzOffset: -5.0, amplitudeSign: -1.0 },\r\n\t    // dogebox (maybe another mod also adds this? I got it from dogebox)\r\n\t\t{ name: \"25×\", mult: 25.0, hzOffset: 0.0, amplitudeSign: 1.0 },\r\n\t{ name: \"50×\", mult: 50.0, hzOffset: 0.0, amplitudeSign: 1.0 },\r\n\t{ name: \"75×\", mult: 75.0, hzOffset: 0.0, amplitudeSign: 1.0 },\r\n\t{ name: \"100×\", mult: 100.0, hzOffset: 0.0, amplitudeSign: 1.0 }\r\n\t    //50 and 100 are from dogebox\r\n    ]);\r\n\r\n    public static readonly envelopes: DictionaryArray<Envelope> = toNameMap([\r\n        { name: \"none\", type: EnvelopeType.none, speed: 0.0 },\r\n        { name: \"note size\", type: EnvelopeType.noteSize, speed: 0.0 },\r\n        { name: \"punch\", type: EnvelopeType.punch, speed: 0.0 },\r\n        { name: \"flare -1\", type: EnvelopeType.flare, speed: 128.0 },\r\n        { name: \"flare 1\", type: EnvelopeType.flare, speed: 32.0 },\r\n        { name: \"flare 2\", type: EnvelopeType.flare, speed: 8.0 },\r\n        { name: \"flare 3\", type: EnvelopeType.flare, speed: 2.0 },\r\n        { name: \"twang -1\", type: EnvelopeType.twang, speed: 128.0 },\r\n        { name: \"twang 1\", type: EnvelopeType.twang, speed: 32.0 },\r\n        { name: \"twang 2\", type: EnvelopeType.twang, speed: 8.0 },\r\n        { name: \"twang 3\", type: EnvelopeType.twang, speed: 2.0 },\r\n        { name: \"swell -1\", type: EnvelopeType.swell, speed: 128.0 },\r\n        { name: \"swell 1\", type: EnvelopeType.swell, speed: 32.0 },\r\n        { name: \"swell 2\", type: EnvelopeType.swell, speed: 8.0 },\r\n        { name: \"swell 3\", type: EnvelopeType.swell, speed: 2.0 },\r\n        { name: \"tremolo0\", type: EnvelopeType.tremolo, speed: 8.0 },\r\n        { name: \"tremolo1\", type: EnvelopeType.tremolo, speed: 4.0 },\r\n        { name: \"tremolo2\", type: EnvelopeType.tremolo, speed: 2.0 },\r\n        { name: \"tremolo3\", type: EnvelopeType.tremolo, speed: 1.0 },\r\n        { name: \"tremolo4\", type: EnvelopeType.tremolo2, speed: 4.0 },\r\n        { name: \"tremolo5\", type: EnvelopeType.tremolo2, speed: 2.0 },\r\n        { name: \"tremolo6\", type: EnvelopeType.tremolo2, speed: 1.0 },\r\n        { name: \"decay -1\", type: EnvelopeType.decay, speed: 40.0 },\r\n        { name: \"decay 1\", type: EnvelopeType.decay, speed: 10.0 },\r\n        { name: \"decay 2\", type: EnvelopeType.decay, speed: 7.0 },\r\n        { name: \"decay 3\", type: EnvelopeType.decay, speed: 4.0 },\r\n        { name: \"wibble-1\", type: EnvelopeType.wibble, speed: 96.0 },\r\n        { name: \"wibble 1\", type: EnvelopeType.wibble, speed: 24.0 },\r\n        { name: \"wibble 2\", type: EnvelopeType.wibble, speed: 12.0 },\r\n        { name: \"wibble 3\", type: EnvelopeType.wibble, speed: 4.0 },\r\n        { name: \"linear-2\", type: EnvelopeType.linear, speed: 256.0 },\r\n        { name: \"linear-1\", type: EnvelopeType.linear, speed: 128.0 },\r\n        { name: \"linear 1\", type: EnvelopeType.linear, speed: 32.0 },\r\n        { name: \"linear 2\", type: EnvelopeType.linear, speed: 8.0 },\r\n        { name: \"linear 3\", type: EnvelopeType.linear, speed: 2.0 },\r\n        { name: \"rise -2\", type: EnvelopeType.rise, speed: 256.0 },\r\n        { name: \"rise -1\", type: EnvelopeType.rise, speed: 128.0 },\r\n        { name: \"rise 1\", type: EnvelopeType.rise, speed: 32.0 },\r\n        { name: \"rise 2\", type: EnvelopeType.rise, speed: 8.0 },\r\n        { name: \"rise 3\", type: EnvelopeType.rise, speed: 2.0 },\r\n\t    \t\t{ name: \"flute 1\", type: 9, speed: 16.0 },\r\n\t\t{ name: \"flute 2\", type: 9, speed: 8.0 },\r\n\t\t{ name: \"flute 3\", type: 9, speed: 4.0 },\r\n\t\t//modbox\r\n\t\t{ name: \"tripolo1\", type: 6, speed: 9.0 },\r\n        { name: \"tripolo2\", type: 6, speed: 6.0 },\r\n        { name: \"tripolo3\", type: 6, speed: 3.0 },\r\n        { name: \"tripolo4\", type: 7, speed: 9.0 },\r\n        { name: \"tripolo5\", type: 7, speed: 6.0 },\r\n        { name: \"tripolo6\", type: 7, speed: 3.0 },\r\n        { name: \"pentolo1\", type: 6, speed: 10.0 },\r\n        { name: \"pentolo2\", type: 6, speed: 5.0 },\r\n        { name: \"pentolo3\", type: 6, speed: 2.5 },\r\n        { name: \"pentolo4\", type: 7, speed: 10.0 },\r\n        { name: \"pentolo5\", type: 7, speed: 5.0 },\r\n        { name: \"pentolo6\", type: 7, speed: 2.5 },\t\r\n\t\t//sandbox\r\n\t    { name: \"flutter 1\", type: 6, speed: 14.0 },\r\n        { name: \"flutter 2\", type: 7, speed: 11.0 },\r\n        { name: \"water-y flutter\", type: 6, speed: 9.0 },\r\n\t    //todbox\r\n    ]);\r\n\tpublic static readonly feedbacks: DictionaryArray<Feedback> = toNameMap([\r\n\t\t{ name: \"1⟲\", indices: [[1], [], [], []] },\r\n\t\t{ name: \"2⟲\", indices: [[], [2], [], []] },\r\n\t\t{ name: \"3⟲\", indices: [[], [], [3], []] },\r\n\t\t{ name: \"4⟲\", indices: [[], [], [], [4]] },\r\n\t\t{ name: \"1⟲ 2⟲\", indices: [[1], [2], [], []] },\r\n\t\t{ name: \"3⟲ 4⟲\", indices: [[], [], [3], [4]] },\r\n\t\t{ name: \"1⟲ 2⟲ 3⟲\", indices: [[1], [2], [3], []] },\r\n\t\t{ name: \"2⟲ 3⟲ 4⟲\", indices: [[], [2], [3], [4]] },\r\n\t\t{ name: \"1⟲ 2⟲ 3⟲ 4⟲\", indices: [[1], [2], [3], [4]] },\r\n\t\t{ name: \"1→2\", indices: [[], [1], [], []] },\r\n\t\t{ name: \"1→3\", indices: [[], [], [1], []] },\r\n\t\t{ name: \"1→4\", indices: [[], [], [], [1]] },\r\n\t\t{ name: \"2→3\", indices: [[], [], [2], []] },\r\n\t\t{ name: \"2→4\", indices: [[], [], [], [2]] },\r\n\t\t{ name: \"3→4\", indices: [[], [], [], [3]] },\r\n\t\t{ name: \"1→3 2→4\", indices: [[], [], [1], [2]] },\r\n\t\t{ name: \"1→4 2→3\", indices: [[], [], [2], [1]] },\r\n        { name: \"1→2→3→4\", indices: [[], [1], [2], [3]] },\r\n        { name: \"1↔2 3↔4\", indices: [[2], [1], [4], [3]] },\r\n        { name: \"1↔4 2↔3\", indices: [[4], [3], [2], [1]] },\r\n        { name: \"2→1→4→3→2\", indices: [[2], [3], [4], [1]] },\r\n        { name: \"1→2→3→4→1\", indices: [[4], [1], [2], [3]] },\r\n        { name: \"(1 2 3)→4\", indices: [[], [], [], [1, 2, 3]] },\r\n        { name: \"ALL\", indices: [[1,2,3,4], [1,2,3,4], [1,2,3,4], [1, 2, 3,4]] },\r\n    ]);\r\n    public static readonly feedbacks6Op: DictionaryArray<Feedback> = toNameMap([\r\n        //placeholder makes life easier for later\r\n        { name: \"Custom\", indices: [[2, 3, 4, 5, 6], [], [], [], [], []] },\r\n\r\n        { name: \"1⟲\", indices: [[1], [], [], [], [], []] },\r\n        { name: \"2⟲\", indices: [[], [2], [], [], [], []] },\r\n        { name: \"3⟲\", indices: [[], [], [3], [], [], []] },\r\n        { name: \"4⟲\", indices: [[], [], [], [4], [], []] },\r\n        { name: \"4⟲\", indices: [[], [], [], [], [5], []] },\r\n        { name: \"4⟲\", indices: [[], [], [], [], [], [6]] },\r\n        { name: \"1⟲ 2⟲\", indices: [[1], [2], [], [], [], []] },\r\n        { name: \"3⟲ 4⟲\", indices: [[], [], [3], [4], [], []] },\r\n        { name: \"1⟲ 2⟲ 3⟲\", indices: [[1], [2], [3], [], [], []] },\r\n        { name: \"2⟲ 3⟲ 4⟲\", indices: [[], [2], [3], [4], [], []] },\r\n        { name: \"1⟲ 2⟲ 3⟲ 4⟲\", indices: [[1], [2], [3], [4], [], []] },\r\n        { name: \"1⟲ 2⟲ 3⟲ 4⟲ 5⟲\", indices: [[1], [2], [3], [4], [5], []] },\r\n        { name: \"1⟲ 2⟲ 3⟲ 4⟲ 5⟲ 6⟲\", indices: [[1], [2], [3], [4], [5], [6]] },\r\n        { name: \"1→2\", indices: [[], [1], [], [], [], []] },\r\n        { name: \"1→3\", indices: [[], [], [1], [], [], []] },\r\n        { name: \"1→4\", indices: [[], [], [], [1], [], []] },\r\n        { name: \"1→5\", indices: [[], [], [], [], [1], []] },\r\n        { name: \"1→6\", indices: [[], [], [], [], [], [1]] },\r\n        { name: \"2→3\", indices: [[], [], [2], [], [], []] },\r\n        { name: \"2→4\", indices: [[], [], [], [2], [], []] },\r\n        { name: \"3→4\", indices: [[], [], [], [3], [], []] },\r\n        { name: \"4→5\", indices: [[], [], [], [], [4], []] },\r\n        { name: \"1→4 2→5 3→6\", indices: [[], [], [], [1], [2], [3]] },\r\n        { name: \"1→5 2→6 3→4\", indices: [[], [], [], [3], [1], [2]] },\r\n        { name: \"1→2→3→4→5→6\", indices: [[], [1], [2], [3], [4], [5]] },\r\n        { name: \"2→1→6→5→4→3→2\", indices: [[2], [3], [4], [5], [6], [1]] },\r\n        { name: \"1→2→3→4→5→6→1\", indices: [[6], [1], [2], [3], [4], [5]] },\r\n        { name: \"1↔2 3↔4 5↔6\", indices: [[2], [1], [4], [3], [6], [5]] },\r\n        { name: \"1↔4 2↔5 3↔6\", indices: [[4], [5], [6], [1], [2], [3]] },\r\n        { name: \"(1,2,3,4,5)→6\", indices: [[], [], [], [], [], [1, 2, 3, 4, 5]] },\r\n        { name: \"ALL\", indices: [[1, 2, 3, 4, 5, 6], [1, 2, 3, 4, 5, 6], [1, 2, 3, 4, 5, 6], [1, 2, 3, 4, 5, 6], [1, 2, 3, 4, 5, 6], [1, 2, 3, 4, 5, 6]] },\r\n    ]);\r\n    public static readonly chipNoiseLength: number = 1 << 15; // 32768\r\n    public static readonly spectrumNoiseLength: number = 1 << 15; // 32768\r\n    public static readonly spectrumBasePitch: number = 24;\r\n    public static readonly spectrumControlPoints: number = 30;\r\n    public static readonly spectrumControlPointsPerOctave: number = 7;\r\n    public static readonly spectrumControlPointBits: number = 3;\r\n    public static readonly spectrumMax: number = (1 << Config.spectrumControlPointBits) - 1;\r\n    public static readonly harmonicsControlPoints: number = 28;\r\n    public static readonly harmonicsRendered: number = 64;\r\n    public static readonly harmonicsRenderedForPickedString: number = 1 << 8; // 256\r\n    public static readonly harmonicsControlPointBits: number = 3;\r\n    public static readonly harmonicsMax: number = (1 << Config.harmonicsControlPointBits) - 1;\r\n    public static readonly harmonicsWavelength: number = 1 << 11; // 2048\r\n    public static readonly pulseWidthRange: number = 50;\r\n    public static readonly pulseWidthStepPower: number = 0.5;\r\n    public static readonly pitchChannelCountMin: number = 1;\r\n    public static readonly pitchChannelCountMax: number = 60;\r\n    public static readonly noiseChannelCountMin: number = 0;\r\n    public static readonly noiseChannelCountMax: number = 32;\r\n    public static readonly modChannelCountMin: number = 0;\r\n    public static readonly modChannelCountMax: number = 24;\r\n    public static readonly noiseInterval: number = 6;\r\n    //public static pitchesPerOctave: number = 12; \r\n    public static pitchesPerOctave: number;\r\n    //public static newEDO: number = Config.pitchesPerOctave;\r\n    public static newEDO: number;\r\n    //changes for microtuning\r\n    public static readonly drumCount: number = 12;\r\n    public static readonly pitchOctaves: number = 8;\r\n    public static readonly modCount: number = 6;\r\n    public static maxPitch: number = Config.pitchOctaves * Config.pitchesPerOctave;\r\n    //changes for microtuning\r\n    public static readonly maximumTonesPerChannel: number = Config.maxChordSize * 2;\r\n    //public static readonly justIntonationSemitones: number[] = [1.0 / 2.0, 8.0 / 15.0, 9.0 / 16.0, 3.0 / 5.0, 5.0 / 8.0, 2.0 / 3.0, 32.0 / 45.0, 3.0 / 4.0, 4.0 / 5.0, 5.0 / 6.0, 8.0 / 9.0, 15.0 / 16.0, 1.0, 16.0 / 15.0, 9.0 / 8.0, 6.0 / 5.0, 5.0 / 4.0, 4.0 / 3.0, 45.0 / 32.0, 3.0 / 2.0, 8.0 / 5.0, 5.0 / 3.0, 16.0 / 9.0, 15.0 / 8.0, 2.0].map(x => Math.log2(x) * Config.pitchesPerOctave);\r\n    public static readonly justIntonationSemitones: number[] = [1.0 / 2.0, 8.0 / 15.0, 9.0 / 16.0, 3.0 / 5.0, 5.0 / 8.0, 2.0 / 3.0, 32.0 / 45.0, 3.0 / 4.0, 4.0 / 5.0, 5.0 / 6.0, 8.0 / 9.0, 15.0 / 16.0, 1.0, 16.0 / 15.0, 9.0 / 8.0, 6.0 / 5.0, 5.0 / 4.0, 4.0 / 3.0, 45.0 / 32.0, 3.0 / 2.0, 8.0 / 5.0, 5.0 / 3.0, 16.0 / 9.0, 15.0 / 8.0, 2.0].map(x => Math.log2(x) * 12);\r\n    //unisons and harmonics and such shouldn't be affected by edo (I think that's what this variable is for???)\r\n    public static readonly pitchShiftRange: number = Config.justIntonationSemitones.length;\r\n    public static readonly pitchShiftCenter: number = Config.pitchShiftRange >> 1;\r\n    public static readonly detuneCenter: number = 200;\r\n    public static readonly detuneMax: number = 400;\r\n    public static readonly detuneMin: number = 0;\r\n    public static readonly songDetuneMin: number = 0;\r\n    public static readonly songDetuneMax: number = 500;\r\n    public static readonly sineWaveLength: number = 1 << 8; // 256\r\n    public static readonly sineWaveMask: number = Config.sineWaveLength - 1;\r\n    public static readonly sineWave: Float32Array = generateSineWave();\r\n\r\n    // Picked strings have an all-pass filter with a corner frequency based on the tone fundamental frequency, in order to add a slight inharmonicity. (Which is important for distortion.)\r\n    public static readonly pickedStringDispersionCenterFreq: number = 6000.0; // The tone fundamental freq is pulled toward this freq for computing the all-pass corner freq.\r\n    public static readonly pickedStringDispersionFreqScale: number = 0.3; // The tone fundamental freq freq moves this much toward the center freq for computing the all-pass corner freq.\r\n    public static readonly pickedStringDispersionFreqMult: number = 4.0; // The all-pass corner freq is based on this times the adjusted tone fundamental freq.\r\n    public static readonly pickedStringShelfHz: number = 4000.0; // The cutoff freq of the shelf filter that is used to decay the high frequency energy in the picked string.\r\n\r\n    public static readonly distortionRange: number = 8;\r\n    public static readonly stringSustainRange: number = 15;\r\n    public static readonly stringDecayRate: number = 0.12;\r\n    public static readonly bitcrusherFreqRange: number = 14;\r\n    public static readonly bitcrusherOctaveStep: number = 0.5;\r\n    public static readonly bitcrusherQuantizationRange: number = 8;\r\n\r\n    public static readonly maxEnvelopeCount: number = 12;\r\n    public static readonly defaultAutomationRange: number = 13;\r\n    public static readonly instrumentAutomationTargets: DictionaryArray<AutomationTarget> = toNameMap([\r\n        { name: \"none\", computeIndex: null, displayName: \"none\",             /*perNote: false,*/ interleave: false, isFilter: false, /*range: 0,                              */    maxCount: 1, effect: null, compatibleInstruments: null },\r\n        { name: \"noteVolume\", computeIndex: EnvelopeComputeIndex.noteVolume, displayName: \"note volume\",      /*perNote:  true,*/ interleave: false, isFilter: false, /*range: Config.volumeRange,             */    maxCount: 1, effect: null, compatibleInstruments: null },\r\n        { name: \"pulseWidth\", computeIndex: EnvelopeComputeIndex.pulseWidth, displayName: \"pulse width\",      /*perNote:  true,*/ interleave: false, isFilter: false, /*range: Config.pulseWidthRange,         */    maxCount: 1, effect: null, compatibleInstruments: [InstrumentType.pwm] },\r\n        { name: \"stringSustain\", computeIndex: EnvelopeComputeIndex.stringSustain, displayName: \"sustain\",          /*perNote:  true,*/ interleave: false, isFilter: false, /*range: Config.stringSustainRange,      */    maxCount: 1, effect: null, compatibleInstruments: [InstrumentType.pickedString] },\r\n        { name: \"unison\", computeIndex: EnvelopeComputeIndex.unison, displayName: \"unison\",           /*perNote:  true,*/ interleave: false, isFilter: false, /*range: Config.defaultAutomationRange,  */    maxCount: 1, effect: null, compatibleInstruments: [InstrumentType.chip, InstrumentType.harmonics, InstrumentType.pickedString] },\r\n        { name: \"operatorFrequency\", computeIndex: EnvelopeComputeIndex.operatorFrequency0, displayName: \"fm# freq\",         /*perNote:  true,*/ interleave: true, isFilter: false, /*range: Config.defaultAutomationRange,  */    maxCount: Config.operatorCount+2, effect: null, compatibleInstruments: [InstrumentType.fm, InstrumentType.fm6op] },\r\n        { name: \"operatorAmplitude\", computeIndex: EnvelopeComputeIndex.operatorAmplitude0, displayName: \"fm# volume\",       /*perNote:  true,*/ interleave: false, isFilter: false, /*range: Config.operatorAmplitudeMax + 1,*/    maxCount: Config.operatorCount+2, effect: null, compatibleInstruments: [InstrumentType.fm, InstrumentType.fm6op] },\r\n        { name: \"feedbackAmplitude\", computeIndex: EnvelopeComputeIndex.feedbackAmplitude, displayName: \"fm feedback\",      /*perNote:  true,*/ interleave: false, isFilter: false, /*range: Config.operatorAmplitudeMax + 1,*/    maxCount: 1, effect: null, compatibleInstruments: [InstrumentType.fm, InstrumentType.fm6op] },\r\n        { name: \"pitchShift\", computeIndex: EnvelopeComputeIndex.pitchShift, displayName: \"pitch shift\",      /*perNote:  true,*/ interleave: false, isFilter: false, /*range: Config.pitchShiftRange,         */    maxCount: 1, effect: EffectType.pitchShift, compatibleInstruments: null },\r\n        { name: \"detune\", computeIndex: EnvelopeComputeIndex.detune, displayName: \"detune\",           /*perNote:  true,*/ interleave: false, isFilter: false, /*range: Config.detuneMax + 1,           */    maxCount: 1, effect: EffectType.detune, compatibleInstruments: null },\r\n        { name: \"vibratoDepth\", computeIndex: EnvelopeComputeIndex.vibratoDepth, displayName: \"vibrato range\",    /*perNote:  true,*/ interleave: false, isFilter: false, /*range: Config.defaultAutomationRange,  */    maxCount: 1, effect: EffectType.vibrato, compatibleInstruments: null },\r\n        { name: \"noteFilterAllFreqs\", computeIndex: EnvelopeComputeIndex.noteFilterAllFreqs, displayName: \"n. filter freqs\",  /*perNote:  true,*/ interleave: false, isFilter: true, /*range: null,                           */    maxCount: 1, effect: EffectType.noteFilter, compatibleInstruments: null },\r\n        { name: \"noteFilterFreq\", computeIndex: EnvelopeComputeIndex.noteFilterFreq0, displayName: \"n. filter # freq\", /*perNote:  true,*/ interleave: false/*true*/, isFilter: true, /*range: Config.filterFreqRange,     */        maxCount: Config.filterMaxPoints, effect: EffectType.noteFilter, compatibleInstruments: null },\r\n        // Controlling filter gain is less obvious and intuitive than controlling filter freq, so to avoid confusion I've disabled it for now...\r\n        //{name: \"noteFilterGain\",         computeIndex:       EnvelopeComputeIndex.noteFilterGain0,        displayName: \"n. filter # vol\",  /*perNote:  true,*/ interleave: false, isFilter:  true, range: Config.filterGainRange,             maxCount: Config.filterMaxPoints, effect: EffectType.noteFilter, compatibleInstruments: null},\r\n        /*\r\n        {name: \"distortion\",             computeIndex: InstrumentAutomationIndex.distortion,             displayName: \"distortion\",       perNote: false, interleave: false, isFilter: false, range: Config.distortionRange,             maxCount: 1,    effect: EffectType.distortion,   compatibleInstruments: null},\r\n        {name: \"bitcrusherQuantization\", computeIndex: InstrumentAutomationIndex.bitcrusherQuantization, displayName: \"bit crush\",        perNote: false, interleave: false, isFilter: false, range: Config.bitcrusherQuantizationRange, maxCount: 1,    effect: EffectType.bitcrusher,   compatibleInstruments: null},\r\n        {name: \"bitcrusherFrequency\",    computeIndex: InstrumentAutomationIndex.bitcrusherFrequency,    displayName: \"freq crush\",       perNote: false, interleave: false, isFilter: false, range: Config.bitcrusherFreqRange,         maxCount: 1,    effect: EffectType.bitcrusher,   compatibleInstruments: null},\r\n        {name: \"eqFilterAllFreqs\",       computeIndex: InstrumentAutomationIndex.eqFilterAllFreqs,       displayName: \"eq filter freqs\",  perNote: false, interleave: false, isFilter:  true, range: null,                               maxCount: 1,    effect: null,                    compatibleInstruments: null},\r\n        {name: \"eqFilterFreq\",           computeIndex: InstrumentAutomationIndex.eqFilterFreq0,          displayName: \"eq filter # freq\", perNote: false, interleave:  true, isFilter:  true, range: Config.filterFreqRange,             maxCount: Config.filterMaxPoints, effect: null,  compatibleInstruments: null},\r\n        {name: \"eqFilterGain\",           computeIndex: InstrumentAutomationIndex.eqFilterGain0,          displayName: \"eq filter # vol\",  perNote: false, interleave: false, isFilter:  true, range: Config.filterGainRange,             maxCount: Config.filterMaxPoints, effect: null,  compatibleInstruments: null},\r\n        {name: \"panning\",                computeIndex: InstrumentAutomationIndex.panning,                displayName: \"panning\",          perNote: false, interleave: false, isFilter: false, range: Config.panMax + 1,                  maxCount: 1,    effect: EffectType.panning,      compatibleInstruments: null},\r\n        {name: \"chorus\",                 computeIndex: InstrumentAutomationIndex.chorus,                 displayName: \"chorus\",           perNote: false, interleave: false, isFilter: false, range: Config.chorusRange,                 maxCount: 1,    effect: EffectType.chorus,       compatibleInstruments: null},\r\n        {name: \"echoSustain\",            computeIndex: InstrumentAutomationIndex.echoSustain,            displayName: \"echo\",             perNote: false, interleave: false, isFilter: false, range: Config.echoSustainRange,            maxCount: 1,    effect: EffectType.echo,         compatibleInstruments: null},\r\n        {name: \"echoDelay\",              computeIndex: InstrumentAutomationIndex.echoDelay,              displayName: \"echo delay\",       perNote: false, interleave: false, isFilter: false, range: Config.echoDelayRange,              maxCount: 1,    effect: EffectType.echo,         compatibleInstruments: null}, // wait until after we're computing a tick's settings for multiple run lengths.\r\n        {name: \"reverb\",                 computeIndex: InstrumentAutomationIndex.reverb,                 displayName: \"reverb\",           perNote: false, interleave: false, isFilter: false, range: Config.reverbRange,                 maxCount: 1,    effect: EffectType.reverb,       compatibleInstruments: null},\r\n        {name: \"mixVolume\",              computeIndex: InstrumentAutomationIndex.mixVolume,              displayName: \"mix volume\",       perNote: false, interleave: false, isFilter: false, range: Config.volumeRange,                 maxCount: 1,    effect: null,                    compatibleInstruments: null},\r\n        {name: \"envelope#\",              computeIndex: null,                                             displayName: \"envelope\",         perNote: false, interleave: false, isFilter: false, range: Config.defaultAutomationRange,      maxCount: Config.maxEnvelopeCount, effect: null, compatibleInstruments: null}, // maxCount special case for envelopes to be allowed to target earlier ones.\r\n        */\r\n    ]);\r\n    public static readonly operatorWaves: DictionaryArray<OperatorWave> = toNameMap([\r\n\t\t{ name: \"sine\", samples: Config.sineWave },\r\n\t\t{ name: \"triangle\", samples: generateTriWave() },\r\n\t\t{ name: \"pulse width\", samples: generateSquareWave() },\r\n\t\t{ name: \"sawtooth\", samples: generateSawWave() },\r\n\t\t{ name: \"ramp\", samples: generateSawWave(true) },\r\n\t\t{ name: \"trapezoid\", samples: generateTrapezoidWave(2) },\r\n\t    \t\t{ name: \"rounded\", samples: generateRoundedSineWave() },\r\n\t\t//{ name: \"white noise\", samples: generateWhiteNoiseFmWave() },\r\n\t\t//{ name: \"1-bit white noise\", samples: generateOneBitWhiteNoiseFmWave() },\r\n    ]);\r\n    public static readonly pwmOperatorWaves: DictionaryArray<OperatorWave> = toNameMap([\r\n        { name: \"1%\", samples: generateSquareWave(0.01) },\r\n        { name: \"5%\", samples: generateSquareWave(0.05) },\r\n        { name: \"12.5%\", samples: generateSquareWave(0.125) },\r\n        { name: \"25%\", samples: generateSquareWave(0.25) },\r\n        { name: \"33%\", samples: generateSquareWave(1 / 3) },\r\n        { name: \"50%\", samples: generateSquareWave(0.5) },\r\n        { name: \"66%\", samples: generateSquareWave(2 / 3) },\r\n        { name: \"75%\", samples: generateSquareWave(0.75) },\r\n        { name: \"87.5%\", samples: generateSquareWave(0.875) },\r\n        { name: \"95%\", samples: generateSquareWave(0.95) },\r\n        { name: \"99%\", samples: generateSquareWave(0.99) },\r\n    ]);\r\n\r\n\r\n    // Height of the small editor column for inserting/deleting rows, in pixels.\r\n    public static readonly barEditorHeight: number = 10;\r\n\r\n    // Careful about changing index ordering for this. Index is stored in URL/JSON etc.\r\n    public static readonly modulators: DictionaryArray<Modulator> = toNameMap([\r\n        { name: \"none\", pianoName: \"None\", maxRawVol: 6, newNoteVol: 6, forSong: true, convertRealFactor: 0, associatedEffect: EffectType.length,\r\n            promptName: \"No Mod Setting\", promptDesc: [ \"No setting has been chosen yet, so this modulator will have no effect. Try choosing a setting with the dropdown, then click this '?' again for more info.\", \"[$LO - $HI]\" ] },\r\n        { name: \"song volume\", pianoName: \"Volume\", maxRawVol: 100, newNoteVol: 100, forSong: true, convertRealFactor: 0, associatedEffect: EffectType.length,\r\n            promptName: \"Song Volume\", promptDesc: [ \"This setting affects the overall volume of the song, just like the main volume slider.\", \"At $HI, the volume will be unchanged from default, and it will get gradually quieter down to $LO.\", \"[MULTIPLICATIVE] [$LO - $HI] [%]\" ] },\r\n        { name: \"tempo\", pianoName: \"Tempo\", maxRawVol: Config.tempoMax - Config.tempoMin, newNoteVol: Math.ceil((Config.tempoMax - Config.tempoMin) / 2), forSong: true, convertRealFactor: Config.tempoMin, associatedEffect: EffectType.length,\r\n            promptName: \"Song Tempo\", promptDesc: [ \"This setting controls the speed your song plays at, just like the tempo slider.\", \"When you first make a note for this setting, it will default to your current tempo. Raising it speeds up the song, up to $HI BPM, and lowering it slows it down, to a minimum of $LO BPM.\", \"Note that you can make a 'swing' effect by rapidly changing between two tempo values.\", \"[OVERWRITING] [$LO - $HI] [BPM]\" ] },\r\n        { name: \"song reverb\", pianoName: \"Reverb\", maxRawVol: Config.reverbRange * 2, newNoteVol: Config.reverbRange, forSong: true, convertRealFactor: -Config.reverbRange, associatedEffect: EffectType.length,\r\n            promptName: \"Song Reverb\", promptDesc: [ \"This setting affects the overall reverb of your song. It works by multiplying existing reverb for instruments, so those with no reverb set will be unaffected.\", \"At $MID, all instruments' reverb will be unchanged from default. This increases up to double the reverb value at $HI, or down to no reverb at $LO.\", \"[MULTIPLICATIVE] [$LO - $HI]\" ] },\r\n        { name: \"next bar\", pianoName: \"Next Bar\", maxRawVol: 1, newNoteVol: 1, forSong: true, convertRealFactor: 0, associatedEffect: EffectType.length,\r\n            promptName: \"Go To Next Bar\", promptDesc: [ \"This setting functions a little different from most. Wherever a note is placed, the song will jump immediately to the next bar when it is encountered.\", \"This jump happens at the very start of the note, so the length of a next-bar note is irrelevant. Also, the note can be value 0 or 1, but the value is also irrelevant - wherever you place a note, the song will jump.\", \"You can make mixed-meter songs or intro sections by cutting off unneeded beats with a next-bar modulator.\", \"[$LO - $HI]\" ] },\r\n        { name: \"note volume\", pianoName: \"Note Vol.\", maxRawVol: Config.volumeRange, newNoteVol: Math.ceil(Config.volumeRange / 2), forSong: false, convertRealFactor: Math.ceil(-Config.volumeRange / 2.0), associatedEffect: EffectType.length,\r\n            promptName: \"Note Volume\", promptDesc: [ \"This setting affects the volume of your instrument as if its note size had been scaled.\", \"At $MID, an instrument's volume will be unchanged from default. This means you can still use the volume sliders to mix the base volume of instruments. The volume gradually increases up to $HI, or decreases down to mute at $LO.\", \"This setting was the default for volume modulation in JummBox for a long time. Due to some new effects like distortion and bitcrush, note volume doesn't always allow fine volume control. Also, this modulator affects the value of FM modulator waves instead of just carriers. This can distort the sound which may be useful, but also may be undesirable. In those cases, use the 'mix volume' modulator instead, which will always just scale the volume with no added effects.\", \"For display purposes, this mod will show up on the instrument volume slider, as long as there is not also an active 'mix volume' modulator anyhow. However, as mentioned, it works more like changing note volume.\", \"[MULTIPLICATIVE] [$LO - $HI]\" ] },\r\n        { name: \"pan\", pianoName: \"Pan\", maxRawVol: Config.panMax, newNoteVol: Math.ceil(Config.panMax / 2), forSong: false, convertRealFactor: 0, associatedEffect: EffectType.panning,\r\n            promptName: \"Instrument Panning\", promptDesc: [ \"This setting controls the panning of your instrument, just like the panning slider.\", \"At $LO, your instrument will sound like it is coming fully from the left-ear side. At $MID it will be right in the middle, and at $HI, it will sound like it's on the right.\", \"[OVERWRITING] [$LO - $HI] [L-R]\" ] },\r\n        { name: \"reverb\", pianoName: \"Reverb\", maxRawVol: Config.reverbRange, newNoteVol: 0, forSong: false, convertRealFactor: 0, associatedEffect: EffectType.reverb,\r\n            promptName: \"Instrument Reverb\", promptDesc: [ \"This setting controls the reverb of your insturment, just like the reverb slider.\", \"At $LO, your instrument will have no reverb. At $HI, it will be at maximum.\", \"[OVERWRITING] [$LO - $HI]\"] },\r\n        { name: \"distortion\", pianoName: \"Distortion\", maxRawVol: Config.distortionRange-1, newNoteVol: 0, forSong: false, convertRealFactor: 0, associatedEffect: EffectType.distortion,\r\n            promptName: \"Instrument Distortion\", promptDesc: [ \"This setting controls the amount of distortion for your instrument, just like the distortion slider.\", \"At $LO, your instrument will have no distortion. At $HI, it will be at maximum.\", \"[OVERWRITING] [$LO - $HI]\" ] },\r\n        { name: \"fm slider 1\", pianoName: \"FM 1\", maxRawVol: 15, newNoteVol: 15, forSong: false, convertRealFactor: 0, associatedEffect: EffectType.length,\r\n            promptName: \"FM Slider 1\", promptDesc: [ \"This setting affects the strength of the first FM slider, just like the corresponding slider on your instrument.\", \"It works in a multiplicative way, so at $HI your slider will sound the same is its default value, and at $LO it will sound like it has been moved all the way to the left.\", \"For the full range of control with this mod, move your underlying slider all the way to the right.\", \"[MULTIPLICATIVE] [$LO - $HI] [%]\"] },\r\n        { name: \"fm slider 2\", pianoName: \"FM 2\", maxRawVol: 15, newNoteVol: 15, forSong: false, convertRealFactor: 0, associatedEffect: EffectType.length,\r\n            promptName: \"FM Slider 2\", promptDesc: [\"This setting affects the strength of the second FM slider, just like the corresponding slider on your instrument.\", \"It works in a multiplicative way, so at $HI your slider will sound the same is its default value, and at $LO it will sound like it has been moved all the way to the left.\", \"For the full range of control with this mod, move your underlying slider all the way to the right.\", \"[MULTIPLICATIVE] [$LO - $HI] [%]\" ] },\r\n        { name: \"fm slider 3\", pianoName: \"FM 3\", maxRawVol: 15, newNoteVol: 15, forSong: false, convertRealFactor: 0, associatedEffect: EffectType.length,\r\n            promptName: \"FM Slider 3\", promptDesc: [\"This setting affects the strength of the third FM slider, just like the corresponding slider on your instrument.\", \"It works in a multiplicative way, so at $HI your slider will sound the same is its default value, and at $LO it will sound like it has been moved all the way to the left.\", \"For the full range of control with this mod, move your underlying slider all the way to the right.\", \"[MULTIPLICATIVE] [$LO - $HI] [%]\" ] },\r\n        { name: \"fm slider 4\", pianoName: \"FM 4\", maxRawVol: 15, newNoteVol: 15, forSong: false, convertRealFactor: 0, associatedEffect: EffectType.length,\r\n            promptName: \"FM Slider 4\", promptDesc: [\"This setting affects the strength of the fourth FM slider, just like the corresponding slider on your instrument.\", \"It works in a multiplicative way, so at $HI your slider will sound the same is its default value, and at $LO it will sound like it has been moved all the way to the left.\", \"For the full range of control with this mod, move your underlying slider all the way to the right.\", \"[MULTIPLICATIVE] [$LO - $HI] [%]\"] },\r\n        { name: \"fm feedback\", pianoName: \"FM Feedback\", maxRawVol: 15, newNoteVol: 15, forSong: false, convertRealFactor: 0, associatedEffect: EffectType.length,\r\n            promptName: \"FM Feedback\", promptDesc: [\"This setting affects the strength of the FM feedback slider, just like the corresponding slider on your instrument.\", \"It works in a multiplicative way, so at $HI your slider will sound the same is its default value, and at $LO it will sound like it has been moved all the way to the left.\", \"For the full range of control with this mod, move your underlying slider all the way to the right.\", \"[MULTIPLICATIVE] [$LO - $HI] [%]\"] },\r\n        { name: \"pulse width\", pianoName: \"Pulse Width\", maxRawVol: Config.pulseWidthRange, newNoteVol: Config.pulseWidthRange, forSong: false, convertRealFactor: 0, associatedEffect: EffectType.length,\r\n            promptName: \"Pulse Width\", promptDesc: [\"This setting controls the width of this instrument's pulse wave, just like the pulse width slider.\", \"At $HI, your instrument will sound like a pure square wave (on 50% of the time). It will gradually sound narrower down to $LO, where it will be inaudible (as it is on 0% of the time).\", \"Changing pulse width randomly between a few values is a common strategy in chiptune music to lend some personality to a lead instrument.\", \"[OVERWRITING] [$LO - $HI] [%Duty]\"] },\r\n        { name: \"detune\", pianoName: \"Detune\", maxRawVol: Config.detuneMax - Config.detuneMin, newNoteVol: Config.detuneCenter, forSong: false, convertRealFactor: -Config.detuneCenter, associatedEffect: EffectType.detune,\r\n            promptName: \"Instrument Detune\", promptDesc: [\"This setting controls the detune for this instrument, just like the detune slider.\", \"At $MID, your instrument will have no detune applied. Each tick corresponds to one cent, or one-hundredth of a pitch. Thus, each change of 100 ticks corresponds to one half-step of detune, up to two half-steps up at $HI, or two half-steps down at $LO.\", \"[OVERWRITING] [$LO - $HI] [cents]\"] },\r\n        { name: \"vibrato depth\", pianoName: \"Vibrato Depth\", maxRawVol: 50, newNoteVol: 0, forSong: false, convertRealFactor: 0, associatedEffect: EffectType.vibrato,\r\n            promptName: \"Vibrato Depth\", promptDesc: [\"This setting controls the amount that your pitch moves up and down by during vibrato, just like the vibrato depth slider.\", \"At $LO, your instrument will have no vibrato depth so its vibrato would be inaudible. This increases up to $HI, where an extreme pitch change will be noticeable.\", \"[OVERWRITING] [$LO - $HI] [pitch ÷25]\"] },\r\n        { name: \"song detune\", pianoName: \"Detune\", maxRawVol: Config.songDetuneMax - Config.songDetuneMin, newNoteVol: Math.ceil((Config.songDetuneMax - Config.songDetuneMin) / 2), forSong: true, convertRealFactor: -250, associatedEffect: EffectType.length,\r\n            promptName: \"Song Detune\", promptDesc: [\"This setting controls the overall detune of the entire song. There is no associated slider.\", \"At $MID, your song will have no extra detune applied and sound unchanged from default. Each tick corresponds to four cents, or four hundredths of a pitch. Thus, each change of 25 ticks corresponds to one half-step of detune, up to 10 half-steps up at $HI, or 10 half-steps down at $LO.\", \"[MULTIPLICATIVE] [$LO - $HI] [cents x4]\"] },\r\n        { name: \"vibrato speed\", pianoName: \"Vibrato Speed\", maxRawVol: 30, newNoteVol: 0, forSong: false, convertRealFactor: 0, associatedEffect: EffectType.vibrato,\r\n            promptName: \"Vibrato Speed\", promptDesc: [\"This setting controls the speed your instrument will vibrato at, just like the slider.\", \"A setting of $LO means there will be no oscillation, and vibrato will be disabled. Higher settings will increase the speed, up to a dramatic trill at the max value, $HI.\", \"[OVERWRITING] [$LO - $HI]\"] },\r\n        { name: \"vibrato delay\", pianoName: \"Vibrato Delay\", maxRawVol: 50, newNoteVol: 0, forSong: false, convertRealFactor: 0, associatedEffect: EffectType.vibrato,\r\n            promptName: \"Vibrato Delay\", promptDesc: [\"This setting controls the amount of time vibrato will be held off for before triggering for every new note, just like the slider.\", \"A setting of $LO means there will be no delay. A setting of 24 corresponds to one full beat of delay. As a sole exception to this scale, setting delay to $HI will completely disable vibrato (as if it had infinite delay).\", \"[OVERWRITING] [$LO - $HI] [beats ÷24]\"] },\r\n        { name: \"arp speed\", pianoName: \"Arp Speed\", maxRawVol: 50, newNoteVol: 10, forSong: false, convertRealFactor: 0, associatedEffect: EffectType.chord,\r\n            promptName: \"Arpeggio Speed\", promptDesc: [\"This setting controls the speed at which your instrument's chords arpeggiate, just like the arpeggio speed slider.\", \"Each setting corresponds to a different speed, from the slowest to the fastest. The speeds are listed below.\",\r\n                \"[0-4]: x0, x1/16, x⅛, x⅕, x¼,\", \"[5-9]: x⅓, x⅖, x½, x⅔, x¾,\", \"[10-14]: x⅘, x0.9, x1, x1.1, x1.2,\", \"[15-19]: x1.3, x1.4, x1.5, x1.6, x1.7,\", \"[20-24]: x1.8, x1.9, x2, x2.1, x2.2,\", \"[25-29]: x2.3, x2.4, x2.5, x2.6, x2.7,\", \"[30-34]: x2.8, x2.9, x3, x3.1, x3.2,\", \"[35-39]: x3.3, x3.4, x3.5, x3.6, x3.7,\" ,\"[40-44]: x3.8, x3.9, x4, x4.15, x4.3,\", \"[45-50]: x4.5, x4.8, x5, x5.5, x6, x8\", \"[OVERWRITING] [$LO - $HI]\"] },\r\n        { name: \"pan delay\", pianoName: \"Pan Delay\", maxRawVol: 20, newNoteVol: 10, forSong: false, convertRealFactor: 0, associatedEffect: EffectType.panning,\r\n            promptName: \"Panning Delay\", promptDesc: [\"This setting controls the delay applied to panning for your instrument, just like the pan delay slider.\", \"With more delay, the panning effect will generally be more pronounced. $MID is the default value, whereas $LO will remove any delay at all. No delay can be desirable for chiptune songs.\", \"[OVERWRITING] [$LO - $HI]\"] },\r\n        { name: \"reset arp\", pianoName: \"Reset Arp\", maxRawVol: 1, newNoteVol: 1, forSong: false, convertRealFactor: 0, associatedEffect: EffectType.chord,\r\n            promptName: \"Reset Arpeggio\", promptDesc: [\"This setting functions a little different from most. Wherever a note is placed, the arpeggio of this instrument will reset at the very start of that note. This is most noticeable with lower arpeggio speeds. The lengths and values of notes for this setting don't matter, just the note start times.\", \"This mod can be used to sync up your apreggios so that they always sound the same, even if you are using an odd-ratio arpeggio speed or modulating arpeggio speed.\", \"[$LO - $HI]\"] },\r\n        { name: \"eq filter\", pianoName: \"EQFlt\", maxRawVol: 10, newNoteVol: 0, forSong: false, convertRealFactor: 0, associatedEffect: EffectType.length,\r\n            promptName: \"EQ Filter\", promptDesc: [\"This setting controls a few separate things for your instrument's EQ filter.\", \"When the option 'morph' is selected, your modulator values will indicate a sub-filter index of your EQ filter to 'morph' to over time. For example, a change from 0 to 1 means your main filter (default) will morph to sub-filter 1 over the specified duration. You can shape the main filter and sub-filters in the large filter editor ('+' button). If your two filters' number, type, and order of filter dots all match up, the morph will happen smoothly and you'll be able to hear them changing. If they do not match up, the filters will simply jump between each other.\", \"Note that filters will morph based on endpoints in the pattern editor. So, if you specify a morph from sub-filter 1 to 4 but do not specifically drag in new endpoints for 2 and 3, it will morph directly between 1 and 4 without going through the others.\", \"If you target Dot X or Dot Y, you can finely tune the coordinates of a single dot for your filter. The number of available dots to choose is dependent on your main filter's dot count.\", \"[OVERWRITING] [$LO - $HI]\"] },\r\n        { name: \"note filter\", pianoName: \"N.Flt\", maxRawVol: 10, newNoteVol: 0, forSong: false, convertRealFactor: 0, associatedEffect: EffectType.noteFilter,\r\n            promptName: \"Note Filter\", promptDesc: [\"This setting controls a few separate things for your instrument's note filter.\", \"When the option 'morph' is selected, your modulator values will indicate a sub-filter index of your note filter to 'morph' to over time. For example, a change from 0 to 1 means your main filter (default) will morph to sub-filter 1 over the specified duration. You can shape the main filter and sub-filters in the large filter editor ('+' button). If your two filters' number, type, and order of filter dots all match up, the morph will happen smoothly and you'll be able to hear them changing. If they do not match up, the filters will simply jump between each other.\", \"Note that filters will morph based on endpoints in the pattern editor. So, if you specify a morph from sub-filter 1 to 4 but do not specifically drag in new endpoints for 2 and 3, it will morph directly between 1 and 4 without going through the others.\", \"If you target Dot X or Dot Y, you can finely tune the coordinates of a single dot for your filter. The number of available dots to choose is dependent on your main filter's dot count.\", \"[OVERWRITING] [$LO - $HI]\"] },\r\n        { name: \"bit crush\", pianoName: \"Bitcrush\", maxRawVol: Config.bitcrusherQuantizationRange-1, newNoteVol: Math.round(Config.bitcrusherQuantizationRange / 2), forSong: false, convertRealFactor: 0, associatedEffect: EffectType.bitcrusher,\r\n            promptName: \"Instrument Bit Crush\", promptDesc: [\"This setting controls the bit crush of your instrument, just like the bit crush slider.\", \"At a value of $LO, no bit crush will be applied. This increases and the bit crush effect gets more noticeable up to the max value, $HI.\", \"[OVERWRITING] [$LO - $HI]\"] },\r\n        { name: \"freq crush\", pianoName: \"Freq Crush\", maxRawVol: Config.bitcrusherFreqRange-1, newNoteVol: Math.round(Config.bitcrusherFreqRange / 2), forSong: false, convertRealFactor: 0, associatedEffect: EffectType.bitcrusher,\r\n            promptName: \"Instrument Frequency Crush\", promptDesc: [\"This setting controls the frequency crush of your instrument, just like the freq crush slider.\", \"At a value of $LO, no frequency crush will be applied. This increases and the frequency crush effect gets more noticeable up to the max value, $HI.\", \"[OVERWRITING] [$LO - $HI]\"] },\r\n        { name: \"echo\", pianoName: \"Echo\", maxRawVol: Config.echoSustainRange-1, newNoteVol: 0, forSong: false, convertRealFactor: 0, associatedEffect: EffectType.echo,\r\n            promptName: \"Instrument Echo Sustain\", promptDesc: [\"This setting controls the echo sustain (echo loudness) of your instrument, just like the echo slider.\", \"At $LO, your instrument will have no echo sustain and echo will not be audible. Echo sustain increases and the echo effect gets more noticeable up to the max value, $HI.\", \"[OVERWRITING] [$LO - $HI]\"] },\r\n        { name: \"echo delay\", pianoName: \"Echo Delay\", maxRawVol: Config.echoDelayRange, newNoteVol: 0, forSong: false, convertRealFactor: 0, associatedEffect: EffectType.length,\r\n            promptName: \"Instrument Echo Delay\", promptDesc: [\"This setting controls the echo delay of your instrument, just like the echo delay slider.\", \"At $LO, your instrument will have very little echo delay, and this increases up to 2 beats of delay at $HI.\", \"[OVERWRITING] [$LO - $HI] [~beats ÷12]\" ]\r\n        }, // Disabled via associatedEffect and manually in list build in SongEditor, enable and set back to echo after fixing bugginess!\r\n        { name: \"chorus\", pianoName: \"Chorus\", maxRawVol: Config.chorusRange, newNoteVol: 0, forSong: false, convertRealFactor: 0, associatedEffect: EffectType.chorus,\r\n            promptName: \"Instrument Chorus\", promptDesc: [\"This setting controls the chorus strength of your instrument, just like the chorus slider.\", \"At $LO, the chorus effect will be disabled. The strength of the chorus effect increases up to the max value, $HI.\", \"[OVERWRITING] [$LO - $HI]\"] },\r\n        { name: \"eq filt cut\", pianoName: \"EQFlt Cut\", maxRawVol: Config.filterSimpleCutRange - 1, newNoteVol: Config.filterSimpleCutRange - 1, forSong: false, convertRealFactor: 0, associatedEffect: EffectType.length,\r\n            promptName: \"EQ Filter Cutoff Frequency\", promptDesc: [\"This setting controls the filter cut position of your instrument, just like the filter cut slider.\", \"This setting is roughly analagous to the horizontal position of a single low-pass dot on the advanced filter editor. At lower values, a wider range of frequencies is cut off.\", \"[OVERWRITING] [$LO - $HI]\"] },\r\n        { name: \"eq filt peak\", pianoName: \"EQFlt Peak\", maxRawVol: Config.filterSimplePeakRange - 1, newNoteVol: 0, forSong: false, convertRealFactor: 0, associatedEffect: EffectType.length,\r\n            promptName: \"EQ Filter Peak Gain\", promptDesc: [\"This setting controls the filter peak position of your instrument, just like the filter peak slider.\", \"This setting is roughly analagous to the vertical position of a single low-pass dot on the advanced filter editor. At lower values, the cutoff frequency will not be emphasized, and at higher values you will hear emphasis on the cutoff frequency.\", \"[OVERWRITING] [$LO - $HI]\"] },\r\n        { name: \"note filt cut\", pianoName: \"N.Flt Cut\", maxRawVol: Config.filterSimpleCutRange - 1, newNoteVol: Config.filterSimpleCutRange - 1, forSong: false, convertRealFactor: 0, associatedEffect: EffectType.noteFilter,\r\n            promptName: \"Note Filter Cutoff Frequency\", promptDesc: [\"This setting controls the filter cut position of your instrument, just like the filter cut slider.\", \"This setting is roughly analagous to the horizontal position of a single low-pass dot on the advanced filter editor. At lower values, a wider range of frequencies is cut off.\", \"[OVERWRITING] [$LO - $HI]\"] },\r\n        { name: \"note filt peak\", pianoName: \"N.Flt Peak\", maxRawVol: Config.filterSimplePeakRange - 1, newNoteVol: 0, forSong: false, convertRealFactor: 0, associatedEffect: EffectType.noteFilter,\r\n            promptName: \"Note Filter Peak Gain\", promptDesc: [\"This setting controls the filter peak position of your instrument, just like the filter peak slider.\", \"This setting is roughly analagous to the vertical position of a single low-pass dot on the advanced filter editor. At lower values, the cutoff frequency will not be emphasized, and at higher values you will hear emphasis on the cutoff frequency.\", \"[OVERWRITING] [$LO - $HI]\"] },\r\n        { name: \"pitch shift\", pianoName: \"Pitch Shift\", maxRawVol: Config.pitchShiftRange - 1, newNoteVol: Config.pitchShiftCenter, forSong: false, convertRealFactor: -Config.pitchShiftCenter, associatedEffect: EffectType.pitchShift,\r\n            promptName: \"Pitch Shift\", promptDesc: [\"This setting controls the pitch offset of your instrument, just like the pitch shift slider.\", \"At $MID your instrument will have no pitch shift. This increases as you decrease toward $LO pitches (half-steps) at the low end, or increases towards +$HI pitches at the high end.\", \"[OVERWRITING] [$LO - $HI] [pitch]\"] },\r\n        { name: \"sustain\", pianoName: \"Sustain\", maxRawVol: Config.stringSustainRange - 1, newNoteVol: 0, forSong: false, convertRealFactor: 0, associatedEffect: EffectType.length,\r\n            promptName: \"Picked String Sustain\", promptDesc: [\"This setting controls the sustain of your picked string instrument, just like the sustain slider.\", \"At $LO, your instrument will have minimum sustain and sound 'plucky'. This increases to a more held sound as your modulator approaches the maximum, $HI.\", \"[OVERWRITING] [$LO - $HI]\"] },\r\n        { name: \"mix volume\", pianoName: \"Mix Vol.\", maxRawVol: Config.volumeRange, newNoteVol: Math.ceil(Config.volumeRange / 2), forSong: false, convertRealFactor: Math.ceil(-Config.volumeRange / 2.0), associatedEffect: EffectType.length,\r\n            promptName: \"Mix Volume\", promptDesc: [\"This setting affects the volume of your instrument as if its volume slider had been moved.\", \"At $MID, an instrument's volume will be unchanged from default. This means you can still use the volume sliders to mix the base volume of instruments, since this setting and the default value work multiplicatively. The volume gradually increases up to $HI, or decreases down to mute at $LO.\", \"Unlike the 'note volume' setting, mix volume is very straightforward and simply affects the resultant instrument volume after all effects are applied.\", \"[MULTIPLICATIVE] [$LO - $HI]\"] },\r\n        { name: \"fm slider 5\", pianoName: \"FM 5\", maxRawVol: 15, newNoteVol: 15, forSong: false, convertRealFactor: 0, associatedEffect: EffectType.length,\r\n            promptName: \"FM Slider 5\", promptDesc: [\"This setting affects the strength of the fifth FM slider, just like the corresponding slider on your instrument.\", \"It works in a multiplicative way, so at $HI your slider will sound the same is its default value, and at $LO it will sound like it has been moved all the way to the left.\", \"For the full range of control with this mod, move your underlying slider all the way to the right.\", \"[MULTIPLICATIVE] [$LO - $HI] [%]\"] },\r\n        { name: \"fm slider 6\", pianoName: \"FM 6\", maxRawVol: 15, newNoteVol: 15, forSong: false, convertRealFactor: 0, associatedEffect: EffectType.length,\r\n            promptName: \"FM Slider 6\", promptDesc: [\"This setting affects the strength of the sixth FM slider, just like the corresponding slider on your instrument.\", \"It works in a multiplicative way, so at $HI your slider will sound the same is its default value, and at $LO it will sound like it has been moved all the way to the left.\", \"For the full range of control with this mod, move your underlying slider all the way to the right.\", \"[MULTIPLICATIVE] [$LO - $HI] [%]\"] },\r\n    ]);\r\n}\r\n\r\nfunction centerWave(wave: Array<number>): Float32Array {\r\n    let sum: number = 0.0;\r\n    for (let i: number = 0; i < wave.length; i++) sum += wave[i];\r\n    const average: number = sum / wave.length;\r\n    for (let i: number = 0; i < wave.length; i++) wave[i] -= average;\r\n    performIntegral(wave);\r\n    // The first sample should be zero, and we'll duplicate it at the end for easier interpolation.\r\n    wave.push(0);\r\n    return new Float32Array(wave);\r\n}\r\nfunction centerAndNormalizeWave(wave: Array<number>): Float32Array {\r\n    let magn: number = 0.0;\r\n\r\n    centerWave(wave);\r\n\r\n    // Going to length-1 because an extra 0 sample is added on the end as part of centerWave, which shouldn't impact magnitude calculation.\r\n    for (let i: number = 0; i < wave.length - 1; i++) {\r\n        magn += Math.abs(wave[i]);\r\n    }\r\n    const magnAvg: number = magn / (wave.length - 1);\r\n\r\n    for (let i: number = 0; i < wave.length - 1; i++) {\r\n        wave[i] = wave[i] / magnAvg;\r\n    }\r\n\r\n    return new Float32Array(wave);\r\n\r\n}\r\nexport function performIntegral(wave: { length: number, [index: number]: number }): Float32Array {\r\n    // Perform the integral on the wave. The synth function will perform the derivative to get the original wave back but with antialiasing.\r\n    let cumulative: number = 0.0;\r\n    let newWave: Float32Array = new Float32Array(wave.length);\r\n    for (let i: number = 0; i < wave.length; i++) {\r\n        newWave[i] = cumulative;\r\n        cumulative += wave[i];\r\n    }\r\n\r\n    return newWave;\r\n}\r\nexport function performIntegralOld(wave: { length: number, [index: number]: number }): void {\r\n\t// Old ver used in harmonics/picked string instruments, manipulates wave in place.\r\n\tlet cumulative: number = 0.0;\r\n\tfor (let i: number = 0; i < wave.length; i++) {\r\n\t\tconst temp = wave[i];\r\n\t\twave[i] = cumulative;\r\n\t\tcumulative += temp;\r\n\t}\r\n}\r\n\r\nexport function getPulseWidthRatio(pulseWidth: number): number {\r\n    // BeepBox formula for reference\r\n    //return Math.pow(0.5, (Config.pulseWidthRange - 1 - pulseWidth) * Config.pulseWidthStepPower) * 0.5;\r\n\r\n    return pulseWidth / (Config.pulseWidthRange * 2);\r\n}\r\n\r\n\r\n// The function arguments will be defined in FFT.ts, but I want\r\n// SynthConfig.ts to be at the top of the compiled JS so I won't directly\r\n// depend on FFT here. synth.ts will take care of importing FFT.ts.\r\n//function inverseRealFourierTransform(array: {length: number, [index: number]: number}, fullArrayLength: number): void;\r\n//function scaleElementsByFactor(array: {length: number, [index: number]: number}, factor: number): void;\r\nexport function getDrumWave(index: number, inverseRealFourierTransform: Function | null, scaleElementsByFactor: Function | null): Float32Array {\r\n    let wave: Float32Array | null = Config.chipNoises[index].samples;\r\n    if (wave == null) {\r\n        wave = new Float32Array(Config.chipNoiseLength + 1);\r\n        Config.chipNoises[index].samples = wave;\r\n\r\n\t\tif (index == 0) {\r\n\t\t\t// The \"retro\" drum uses a \"Linear Feedback Shift Register\" similar to the NES noise channel.\r\n\t\t\tlet drumBuffer: number = 1;\r\n\t\t\tfor (let i: number = 0; i < Config.chipNoiseLength; i++) {\r\n\t\t\t\twave[i] = (drumBuffer & 1) * 2.0 - 1.0;\r\n\t\t\t\tlet newBuffer: number = drumBuffer >> 1;\r\n\t\t\t\tif (((drumBuffer + newBuffer) & 1) == 1) {\r\n\t\t\t\t\tnewBuffer += 1 << 14;\r\n\t\t\t\t}\r\n\t\t\t\tdrumBuffer = newBuffer;\r\n\t\t\t}\r\n\t\t} else if (index == 1) {\r\n\t\t\t// White noise is just random values for each sample.\r\n\t\t\tfor (let i: number = 0; i < Config.chipNoiseLength; i++) {\r\n\t\t\t\twave[i] = Math.random() * 2.0 - 1.0;\r\n\t\t\t}\r\n\t\t} else if (index == 2) {\r\n\t\t\t// The \"clang\" noise wave is based on a similar noise wave in the modded beepbox made by DAzombieRE.\r\n\t\t\tlet drumBuffer: number = 1;\r\n\t\t\tfor (let i: number = 0; i < Config.chipNoiseLength; i++) {\r\n\t\t\t\twave[i] = (drumBuffer & 1) * 2.0 - 1.0;\r\n\t\t\t\tlet newBuffer: number = drumBuffer >> 1;\r\n\t\t\t\tif (((drumBuffer + newBuffer) & 1) == 1) {\r\n\t\t\t\t\tnewBuffer += 2 << 14;\r\n\t\t\t\t}\r\n\t\t\t\tdrumBuffer = newBuffer;\r\n\t\t\t}\r\n\t\t} else if (index == 3) {\r\n\t\t\t// The \"buzz\" noise wave is based on a similar noise wave in the modded beepbox made by DAzombieRE.\r\n\t\t\tlet drumBuffer: number = 1;\r\n\t\t\tfor (let i: number = 0; i < Config.chipNoiseLength; i++) {\r\n\t\t\t\twave[i] = (drumBuffer & 1) * 2.0 - 1.0;\r\n\t\t\t\tlet newBuffer: number = drumBuffer >> 1;\r\n\t\t\t\tif (((drumBuffer + newBuffer) & 1) == 1) {\r\n\t\t\t\t\tnewBuffer += 10 << 2;\r\n\t\t\t\t}\r\n\t\t\t\tdrumBuffer = newBuffer;\r\n\t\t\t}\r\n\t\t} else if (index == 4) {\r\n\t\t\t// \"hollow\" drums, designed in frequency space and then converted via FFT:\r\n\t\t\tdrawNoiseSpectrum(wave, Config.chipNoiseLength, 10, 11, 1, 1, 0);\r\n\t\t\tdrawNoiseSpectrum(wave, Config.chipNoiseLength, 11, 14, .6578, .6578, 0);\r\n\t\t\tinverseRealFourierTransform!(wave, Config.chipNoiseLength);\r\n\t\t\tscaleElementsByFactor!(wave, 1.0 / Math.sqrt(Config.chipNoiseLength));\r\n\t\t} else if (index == 5) {\r\n\t\t\t// \"Shine\" drums from modbox!\r\n\t\t\tvar drumBuffer = 1;\r\n\t\t\tfor (var i = 0; i < Config.chipNoiseLength; i++) {\r\n\t\t\t\twave[i] = (drumBuffer & 1) * 2.0 - 1.0;\r\n\t\t\t\tvar newBuffer = drumBuffer >> 1;\r\n\t\t\t\tif (((drumBuffer + newBuffer) & 1) == 1) {\r\n\t\t\t\t\tnewBuffer += 10 << 2;\r\n\t\t\t\t}\r\n\t\t\t\tdrumBuffer = newBuffer;\r\n\t\t\t}\r\n\t\t} else if (index == 6) {\r\n\t\t\t// \"Deep\" drums from modbox!\r\n\t\t\tdrawNoiseSpectrum(wave, Config.chipNoiseLength, 1, 10, 1, 1, 0);\r\n\t\t\tdrawNoiseSpectrum(wave, Config.chipNoiseLength, 20, 14, -2, -2, 0);\r\n\t\t\tinverseRealFourierTransform!(wave, Config.chipNoiseLength);\r\n\t\t\tscaleElementsByFactor!(wave, 1.0 / Math.sqrt(Config.chipNoiseLength));\r\n\t\t} else if (index == 7) {\r\n\t\t\t// \"Cutter\" drums from modbox!\r\n\t\t\tvar drumBuffer = 1;\r\n\t\t\tfor (var i = 0; i < Config.chipNoiseLength; i++) {\r\n\t\t\t\twave[i] = (drumBuffer & 1) * 4.0 * (Math.random() * 14 + 1);\r\n\t\t\t\tvar newBuffer = drumBuffer >> 1;\r\n\t\t\t\tif (((drumBuffer + newBuffer) & 1) == 1) {\r\n\t\t\t\t\tnewBuffer += 15 << 2;\r\n\t\t\t\t}\r\n\t\t\t\tdrumBuffer = newBuffer;\r\n\t\t\t}\r\n\t\t} else if (index == 8) {\r\n\t\t\t// \"Metallic\" drums from modbox!\r\n\t\t\tvar drumBuffer = 1;\r\n\t\t\tfor (var i = 0; i < 32768; i++) {\r\n\t\t\t\twave[i] = (drumBuffer & 1) / 2.0 + 0.5;\r\n\t\t\t\tvar newBuffer = drumBuffer >> 1;\r\n\t\t\t\tif (((drumBuffer + newBuffer) & 1) == 1) {\r\n\t\t\t\t\tnewBuffer -= 10 << 2;\r\n\t\t\t\t}\r\n\t\t\t\tdrumBuffer = newBuffer;\r\n            }\r\n        } else if (index == 9) {\r\n            // a noise more like old static than white noise\r\n            let drumBuffer: number = 1;\r\n            for (let i: number = 0; i < Config.chipNoiseLength; i++) {\r\n                wave[i] = (drumBuffer & 1) * 2.0 - 1.1;\r\n                let newBuffer: number = drumBuffer >> 1;\r\n                if (((drumBuffer + newBuffer) & 1) == 1) {\r\n                    newBuffer += 8 ^ 2 << 16;\r\n                }\r\n                drumBuffer = newBuffer;\r\n            }\r\n\t\t}\r\n\t\t\t\t\telse if (index == 10) {\r\n                for (let i = 0; i < Config.chipNoiseLength; i++) {\r\n                    wave[i] = Math.round(Math.random());\r\n                }\r\n            }\r\n\t\t\t else if (index == 11) {\r\n                var drumBuffer = 1;\r\n                for (var i = 0; i < 32768; i++) {\r\n                    wave[i] = Math.round((drumBuffer & 1));\r\n                    var newBuffer = drumBuffer >> 1;\r\n                    if (((drumBuffer + newBuffer) & 1) == 1) {\r\n                        newBuffer -= 10 << 2;\r\n                    }\r\n                    drumBuffer = newBuffer;\r\n                }\r\n            }\r\n\t\t\telse if (index == 12) {\r\n                for (let i = 0; i < Config.chipNoiseLength; i++) {\r\n                   var ultraboxnewchipnoiserand = Math.random();\r\n\t\t\t\t   wave[i] = Math.pow(ultraboxnewchipnoiserand, Math.clz32(ultraboxnewchipnoiserand));\r\n                }\r\n            }\r\n\t\t\telse if (index == 13) {\r\n\t\t\t\tvar b0 = 0, b1 = 0, b2 = 0, b3, b4, b5, b6;\r\n\t\t\t\tb0 = b1 = b2 = b3 = b4 = b5 = b6 = 0.0;\r\n\t\t\t\t\r\n\t\t\t\tfor (let i = 0; i < Config.chipNoiseLength; i++) {\r\n\t\t\t\t\tvar white = Math.random() * 2 - 1;\r\n\t\t\t\t\tb0 = 0.99886 * b0 + white * 0.0555179;\r\n\t\t\t\t\tb1 = 0.99332 * b1 + white * 0.0750759;\r\n\t\t\t\t\tb2 = 0.96900 * b2 + white * 0.1538520;\r\n\t\t\t\t\tb3 = 0.86650 * b3 + white * 0.3104856;\r\n\t\t\t\t\tb4 = 0.55000 * b4 + white * 0.5329522;\r\n\t\t\t\t\tb5 = -0.7616 * b5 - white * 0.0168980;\r\n\t\t\t\t\twave[i] = b0 + b1 + b2 + b3 + b4 + b5 + b6 + white * 0.5362;\r\n\t\t\t\t\twave[i] *= 0.44;\r\n\t\t\t\t\tb6 = white * 0.115926;\r\n\t\t\t\t\t//https://noisehack.com/generate-noise-web-audio-api/ ?\r\n                }\r\n            }\r\n\t\t\telse if (index == 14) {\r\n\t\t\t\tvar lastOut = 0.0;\r\n\t\t\t\t\r\n                for (let i = 0; i < Config.chipNoiseLength; i++) {\r\n\t\t\t\t\tvar white = Math.random() * 2 - 1;\r\n\t\t\t\t\twave[i] = (lastOut + (0.02 * white)) / 1.02;\r\n\t\t\t\t\tlastOut = wave[i];\r\n\t\t\t\t\twave[i] *= 14;\r\n\t\t\t\t\t//^^^^\r\n                }\r\n            }\r\n\t\t//\telse if (index == 15) {\r\n\t\t//\t\tconst doomRandArray = [0, 8, 109, 220, 222, 241, 149, 107, 75, 248, 254, 140, 16, 66 , 74, 21, 211, 47, 80, 242, 154, 27, 205, 128, 161, 89, 77, 36 , 95, 110, 85, 48, 212, 140, 211, 249, 22, 79, 200, 50, 28, 188 , 52, 140, 202, 120, 68, 145, 62, 70, 184, 190, 91, 197, 152, 224 , 149, 104, 25, 178, 252, 182, 202, 182, 141, 197, 4, 81, 181, 242 , 145, 42, 39, 227, 156, 198, 225, 193, 219, 93, 122, 175, 249, 0 , 175, 143, 70, 239, 46, 246, 163, 53, 163, 109, 168, 135, 2, 235 , 25, 92, 20, 145, 138, 77, 69, 166, 78, 176, 173, 212, 166, 113 , 94, 161, 41, 50, 239, 49, 111, 164, 70, 60, 2, 37, 171, 75 , 136, 156, 11, 56, 42, 146, 138, 229, 73, 146, 77, 61, 98, 196 , 135, 106, 63, 197, 195, 86, 96, 203, 113, 101, 170, 247, 181, 113 , 80, 250, 108, 7, 255, 237, 129, 226, 79, 107, 112, 166, 103, 241 , 24, 223, 239, 120, 198, 58, 60, 82, 128, 3, 184, 66, 143, 224 , 145, 224, 81, 206, 163, 45, 63, 90, 168, 114, 59, 33, 159, 95 , 28, 139, 123, 98, 125, 196, 15, 70, 194, 253, 54, 14, 109, 226 , 71, 17, 161, 93, 186, 87, 244, 138, 20, 52, 123, 251, 26, 36 , 17, 46, 52, 231, 232, 76, 31, 221, 84, 37, 216, 165, 212, 106 , 197, 242, 98, 43, 39, 175, 254, 145, 190, 84, 118, 222, 187, 136 , 120, 163, 236, 249];\r\n\t\t//\t\tconst randomSeed = Math.floor(Math.random() * 256);\r\n\t\t//\t\tvar amountOfLoops = 0;\r\n\t\t//\t\tvar newWaveValue = 0;\r\n       //         for (let i = 0; i < Config.chipNoiseLength; i++) {\r\n\t\t//\t\t\tif (i / 256 > amountOfLoops) {amountOfLoops++;}\r\n\t\t//\t\t\tnewWaveValue = doomRandArray.at(i - amountOfLoops * 256 + randomSeed);\r\n\t\t//\t\t\tif (newWaveValue > 256) {newWaveValue += - 256;}\r\n\t\t//\t\t\twave[i] = newWaveValue * 0.0025;\r\n\t\t\t\t\t//this sucks\r\n\t\t\t\t\t//also the randomized starting point code I spent 5 minutes on does nothing (auditorily)\r\n        //        }\r\n            //}\r\n\t\t\r\n\t\telse {\r\n\t\t\tthrow new Error(\"Unrecognized drum index: \" + index);\r\n\t\t}\r\n\r\n        wave[Config.chipNoiseLength] = wave[0];\r\n    }\r\n\r\n    return wave;\r\n}\r\n\r\nexport function drawNoiseSpectrum(wave: Float32Array, waveLength: number, lowOctave: number, highOctave: number, lowPower: number, highPower: number, overallSlope: number): number {\r\n    const referenceOctave: number = 11;\r\n    const referenceIndex: number = 1 << referenceOctave;\r\n    const lowIndex: number = Math.pow(2, lowOctave) | 0;\r\n    const highIndex: number = Math.min(waveLength >> 1, Math.pow(2, highOctave) | 0);\r\n    const retroWave: Float32Array = getDrumWave(0, null, null);\r\n    let combinedAmplitude: number = 0.0;\r\n    for (let i: number = lowIndex; i < highIndex; i++) {\r\n\r\n        let lerped: number = lowPower + (highPower - lowPower) * (Math.log2(i) - lowOctave) / (highOctave - lowOctave);\r\n        let amplitude: number = Math.pow(2, (lerped - 1) * 7 + 1) * lerped;\r\n\r\n        amplitude *= Math.pow(i / referenceIndex, overallSlope);\r\n\r\n        combinedAmplitude += amplitude;\r\n\r\n        // Add two different sources of psuedo-randomness to the noise\r\n        // (individually they aren't random enough) but in a deterministic\r\n        // way so that live spectrum editing doesn't result in audible pops.\r\n        // Multiply all the sine wave amplitudes by 1 or -1 based on the\r\n        // LFSR retro wave (effectively random), and also rotate the phase\r\n        // of each sine wave based on the golden angle to disrupt the symmetry.\r\n        amplitude *= retroWave[i];\r\n        const radians: number = 0.61803398875 * i * i * Math.PI * 2.0;\r\n\r\n        wave[i] = Math.cos(radians) * amplitude;\r\n        wave[waveLength - i] = Math.sin(radians) * amplitude;\r\n    }\r\n\r\n    return combinedAmplitude;\r\n}\r\n\r\nfunction generateSineWave(): Float32Array {\r\n    const wave: Float32Array = new Float32Array(Config.sineWaveLength + 1);\r\n    for (let i: number = 0; i < Config.sineWaveLength + 1; i++) {\r\n        wave[i] = Math.sin(i * Math.PI * 2.0 / Config.sineWaveLength);\r\n    }\r\n    return wave;\r\n}\r\n\r\nfunction generateTriWave(): Float32Array {\r\n    const wave: Float32Array = new Float32Array(Config.sineWaveLength + 1);\r\n    for (let i: number = 0; i < Config.sineWaveLength + 1; i++) {\r\n        wave[i] = Math.asin(Math.sin(i * Math.PI * 2.0 / Config.sineWaveLength)) / (Math.PI / 2);\r\n    }\r\n    return wave;\r\n}\r\n\r\nfunction generateTrapezoidWave(drive: number = 2): Float32Array {\r\n    const wave: Float32Array = new Float32Array(Config.sineWaveLength + 1);\r\n    for (let i: number = 0; i < Config.sineWaveLength + 1; i++) {\r\n        wave[i] = Math.max(-1.0, Math.min(1.0, Math.asin(Math.sin(i * Math.PI * 2.0 / Config.sineWaveLength)) * drive));\r\n    }\r\n    return wave;\r\n}\r\n\r\nfunction generateSquareWave(phaseWidth: number = 0): Float32Array {\r\n    const wave: Float32Array = new Float32Array(Config.sineWaveLength + 1);\r\n    const centerPoint: number = Config.sineWaveLength / 4;\r\n    for (let i: number = 0; i < Config.sineWaveLength + 1; i++) {\r\n        wave[i] = +((Math.abs(i - centerPoint) < phaseWidth * Config.sineWaveLength / 2)\r\n            || ((Math.abs(i - Config.sineWaveLength - centerPoint) < phaseWidth * Config.sineWaveLength / 2))) * 2 - 1;\r\n    }\r\n    return wave;\r\n}\r\n\r\nfunction generateSawWave(inverse: boolean = false): Float32Array {\r\n    const wave: Float32Array = new Float32Array(Config.sineWaveLength + 1);\r\n    for (let i: number = 0; i < Config.sineWaveLength + 1; i++) {\r\n        wave[i] = ((i + (Config.sineWaveLength / 4.0)) * 2.0 / Config.sineWaveLength) % 2 - 1;\r\n        wave[i] = inverse ? -wave[i] : wave[i];\r\n    }\r\n    return wave;\r\n}\r\n\r\n\t// function generateWhiteNoiseFmWave() {\r\n        // const wave = new Float32Array(Config.sineWaveLength + 1);\r\n        // for (let i = 0; i < Config.sineWaveLength + 1; i++) {\r\n            // wave[i] = Math.random() * 2.0 - 1.0;\r\n        // }\r\n        // return wave;\r\n    // }\r\n\t// function generateOneBitWhiteNoiseFmWave() {\r\n        // const wave = new Float32Array(Config.sineWaveLength + 1);\r\n        // for (let i = 0; i < Config.sineWaveLength + 1; i++) {\r\n            // wave[i] = Math.round(Math.random());\r\n        // }\r\n        // return wave;\r\n    // }\r\n\tfunction generateRoundedSineWave() {\r\n        const wave = new Float32Array(Config.sineWaveLength + 1);\r\n        for (let i = 0; i < Config.sineWaveLength + 1; i++) {\r\n            wave[i] = Math.round(Math.sin(i * Math.PI * 2.0 / Config.sineWaveLength));\r\n        }\r\n        return wave;\r\n\t}\r\n\r\nexport function getArpeggioPitchIndex(pitchCount: number, useFastTwoNoteArp: boolean, arpeggio: number): number {\r\n    let arpeggioPattern: ReadonlyArray<number> = Config.arpeggioPatterns[pitchCount - 1];\r\n    if (arpeggioPattern != null) {\r\n        if (pitchCount == 2 && useFastTwoNoteArp == false) {\r\n            arpeggioPattern = [0, 0, 1, 1];\r\n        }\r\n        return arpeggioPattern[arpeggio % arpeggioPattern.length];\r\n    } else {\r\n        return arpeggio % pitchCount;\r\n    }\r\n}\r\n\r\n// Pardon the messy type casting. This allows accessing array members by numerical index or string name.\r\nexport function toNameMap<T extends BeepBoxOption>(array: Array<Pick<T, Exclude<keyof T, \"index\">>>): DictionaryArray<T> {\r\n    const dictionary: Dictionary<T> = {};\r\n    for (let i: number = 0; i < array.length; i++) {\r\n        const value: any = array[i];\r\n        value.index = i;\r\n        dictionary[value.name] = <T>value;\r\n    }\r\n    const result: DictionaryArray<T> = <DictionaryArray<T>><any>array;\r\n    result.dictionary = dictionary;\r\n    return result;\r\n}\r\n\r\nexport function effectsIncludeTransition(effects: number): boolean {\r\n    return (effects & (1 << EffectType.transition)) != 0;\r\n}\r\nexport function effectsIncludeChord(effects: number): boolean {\r\n    return (effects & (1 << EffectType.chord)) != 0;\r\n}\r\nexport function effectsIncludePitchShift(effects: number): boolean {\r\n    return (effects & (1 << EffectType.pitchShift)) != 0;\r\n}\r\nexport function effectsIncludeDetune(effects: number): boolean {\r\n    return (effects & (1 << EffectType.detune)) != 0;\r\n}\r\nexport function effectsIncludeVibrato(effects: number): boolean {\r\n    return (effects & (1 << EffectType.vibrato)) != 0;\r\n}\r\nexport function effectsIncludeNoteFilter(effects: number): boolean {\r\n    return (effects & (1 << EffectType.noteFilter)) != 0;\r\n}\r\nexport function effectsIncludeDistortion(effects: number): boolean {\r\n    return (effects & (1 << EffectType.distortion)) != 0;\r\n}\r\nexport function effectsIncludeBitcrusher(effects: number): boolean {\r\n    return (effects & (1 << EffectType.bitcrusher)) != 0;\r\n}\r\nexport function effectsIncludePanning(effects: number): boolean {\r\n    return (effects & (1 << EffectType.panning)) != 0;\r\n}\r\nexport function effectsIncludeChorus(effects: number): boolean {\r\n    return (effects & (1 << EffectType.chorus)) != 0;\r\n}\r\nexport function effectsIncludeEcho(effects: number): boolean {\r\n    return (effects & (1 << EffectType.echo)) != 0;\r\n}\r\nexport function effectsIncludeReverb(effects: number): boolean {\r\n    return (effects & (1 << EffectType.reverb)) != 0;\r\n}\r\nexport function rawChipToIntegrated(raw: DictionaryArray<ChipWave>): DictionaryArray<ChipWave> {\r\n    const newArray: Array<ChipWave> = new Array<ChipWave>(raw.length);\r\n    const dictionary: Dictionary<ChipWave> = {};\r\n    for (let i: number = 0; i < newArray.length; i++) {\r\n        newArray[i] = Object.assign([], raw[i]);\r\n        const value: any = newArray[i];\r\n        value.index = i;\r\n        dictionary[value.name] = <ChipWave>value;\r\n    }\r\n    for (let key in dictionary) {\r\n        dictionary[key].samples = performIntegral(dictionary[key].samples);\r\n    }\r\n    const result: DictionaryArray<ChipWave> = <DictionaryArray<ChipWave>><any>newArray;\r\n    result.dictionary = dictionary;\r\n    return result;\r\n}\r\n\r\nif (Config.pitchesPerOctave == undefined) {\r\n    if (Config.newEDO != undefined) {\r\n        Config.pitchesPerOctave = Config.newEDO;\r\n    } else {\r\n        Config.pitchesPerOctave = 12;\r\n    }\r\n    Config.maxPitch = Config.pitchOctaves * Config.pitchesPerOctave;\r\n}","// Copyright (c) 2012-2022 John Nesky and contributing authors, distributed under the MIT license, see accompanying the LICENSE.md file.\r\n\r\nimport { DictionaryArray, BeepBoxOption, InstrumentType, toNameMap, TypePresets } from \"../synth/SynthConfig\";\r\n\r\nexport interface PresetCategory extends BeepBoxOption {\r\n    readonly presets: DictionaryArray<Preset>;\r\n}\r\n\r\nexport interface Preset extends BeepBoxOption {\r\n    readonly isNoise?: boolean;\r\n    readonly isMod?: boolean;\r\n    readonly generalMidi?: boolean;\r\n    readonly midiProgram?: number;\r\n    readonly midiSubharmonicOctaves?: number;\r\n    readonly customType?: InstrumentType;\r\n    readonly settings?: any;\r\n}\r\n\r\nexport const isMobile: boolean = /Android|webOS|iPhone|iPad|iPod|BlackBerry|IEMobile|Opera Mini|android|ipad|playbook|silk/i.test(navigator.userAgent);\r\n\r\nexport function prettyNumber(value: number): string {\r\n    return value.toFixed(2).replace(/\\.?0*$/, \"\");\r\n}\r\n\r\nexport class EditorConfig {\r\n    public static readonly version: string = \"2.1.0\"; // Using patch versions in display right now, maybe TODAY.\r\n    public static readonly versionDisplayName: string = \"UltraBox \" + EditorConfig.version;\r\n\r\n    public static readonly releaseNotesURL: string = \"./patch_notes.html\";\r\n\r\n    public static readonly isOnMac: boolean = /^Mac/i.test(navigator.platform) || /Mac OS X/i.test(navigator.userAgent) || /^(iPhone|iPad|iPod)/i.test(navigator.platform) || /(iPhone|iPad|iPod)/i.test(navigator.userAgent);\r\n    public static readonly ctrlSymbol: string = EditorConfig.isOnMac ? \"⌘\" : \"Ctrl+\";\r\n    public static readonly ctrlName: string = EditorConfig.isOnMac ? \"command\" : \"control\";\r\n\r\n    public static customSamples: string[] | null;\r\n\t//is this how you do it????\r\n\t\r\n    public static readonly presetCategories: DictionaryArray<PresetCategory> = toNameMap([\r\n        {\r\n            name: \"Custom Instruments\", presets: <DictionaryArray<Preset>>toNameMap([\r\n                { name: TypePresets[InstrumentType.chip], customType: InstrumentType.chip },\r\n                { name: TypePresets[InstrumentType.fm], customType: InstrumentType.fm },\r\n                { name: TypePresets[InstrumentType.noise], customType: InstrumentType.noise },\r\n                { name: TypePresets[InstrumentType.spectrum], customType: InstrumentType.spectrum },\r\n                { name: TypePresets[InstrumentType.drumset], customType: InstrumentType.drumset },\r\n                { name: TypePresets[InstrumentType.harmonics], customType: InstrumentType.harmonics },\r\n                { name: TypePresets[InstrumentType.pwm], customType: InstrumentType.pwm },\r\n                { name: TypePresets[InstrumentType.pickedString], customType: InstrumentType.pickedString },\r\n                { name: TypePresets[InstrumentType.customChipWave], customType: InstrumentType.customChipWave },\r\n                { name: TypePresets[InstrumentType.fm6op], customType: InstrumentType.fm6op },\r\n            ])\r\n        },\r\n        {\r\n            name: \"Retro Presets\", presets: <DictionaryArray<Preset>>toNameMap([\r\n                { name: \"square wave\", midiProgram: 80, settings: { \"type\": \"chip\", \"eqFilter\": [], \"effects\": [\"aliasing\"], \"transition\": \"interrupt\", \"fadeInSeconds\": 0, \"fadeOutTicks\": -1, \"chord\": \"arpeggio\", \"wave\": \"square\", \"unison\": \"none\", \"envelopes\": [] } },\r\n                { name: \"triangle wave\", midiProgram: 71, settings: { \"type\": \"chip\", \"eqFilter\": [], \"effects\": [\"aliasing\"], \"transition\": \"interrupt\", \"fadeInSeconds\": 0, \"fadeOutTicks\": -1, \"chord\": \"arpeggio\", \"wave\": \"triangle\", \"unison\": \"none\", \"envelopes\": [] } },\r\n                { name: \"square lead\", midiProgram: 80, generalMidi: true, settings: { \"type\": \"chip\", \"eqFilter\": [{ \"type\": \"low-pass\", \"cutoffHz\": 8000, \"linearGain\": 0.3536 }], \"effects\": [\"aliasing\"], \"transition\": \"normal\", \"fadeInSeconds\": 0, \"fadeOutTicks\": -3, \"chord\": \"simultaneous\", \"wave\": \"square\", \"unison\": \"hum\", \"envelopes\": [] } },\r\n                { name: \"sawtooth lead 1\", midiProgram: 81, generalMidi: true, settings: { \"type\": \"chip\", \"eqFilter\": [{ \"type\": \"low-pass\", \"cutoffHz\": 4000, \"linearGain\": 0.5 }], \"effects\": [\"aliasing\"], \"transition\": \"normal\", \"fadeInSeconds\": 0, \"fadeOutTicks\": -3, \"chord\": \"simultaneous\", \"wave\": \"sawtooth\", \"unison\": \"shimmer\", \"envelopes\": [] } },\r\n                { name: \"sawtooth lead 2\", midiProgram: 81, settings: { \"type\": \"chip\", \"eqFilter\": [{ \"type\": \"low-pass\", \"cutoffHz\": 6727.17, \"linearGain\": 1 }], \"effects\": [\"vibrato\", \"aliasing\"], \"vibrato\": \"light\", \"transition\": \"normal\", \"fadeInSeconds\": 0.0125, \"fadeOutTicks\": 72, \"chord\": \"simultaneous\", \"wave\": \"sawtooth\", \"unison\": \"hum\", \"envelopes\": [] } },\r\n                { name: \"chip noise\", midiProgram: 116, isNoise: true, settings: { \"type\": \"noise\", \"transition\": \"hard\", \"effects\": [\"aliasing\"], \"chord\": \"arpeggio\", \"filterCutoffHz\": 4000, \"filterResonance\": 0, \"filterEnvelope\": \"steady\", \"wave\": \"retro\" } },\r\n                { name: \"FM twang\", midiProgram: 32, settings: { \"type\": \"FM\", \"eqFilter\": [], \"effects\": [], \"transition\": \"normal\", \"fadeInSeconds\": 0, \"fadeOutTicks\": -3, \"chord\": \"simultaneous\", \"algorithm\": \"1←(2 3 4)\", \"feedbackType\": \"1⟲\", \"feedbackAmplitude\": 0, \"operators\": [{ \"frequency\": \"1×\", \"amplitude\": 15 }, { \"frequency\": \"1×\", \"amplitude\": 15 }, { \"frequency\": \"1×\", \"amplitude\": 0 }, { \"frequency\": \"1×\", \"amplitude\": 0 }], \"envelopes\": [{ \"target\": \"operatorAmplitude\", \"envelope\": \"twang 2\", \"index\": 1 }] } },\r\n                { name: \"FM bass\", midiProgram: 36, settings: { \"type\": \"FM\", \"eqFilter\": [], \"effects\": [], \"transition\": \"normal\", \"fadeInSeconds\": 0, \"fadeOutTicks\": -3, \"chord\": \"custom interval\", \"algorithm\": \"1←(2 3←4)\", \"feedbackType\": \"1⟲\", \"feedbackAmplitude\": 0, \"operators\": [{ \"frequency\": \"2×\", \"amplitude\": 11 }, { \"frequency\": \"1×\", \"amplitude\": 7 }, { \"frequency\": \"1×\", \"amplitude\": 9 }, { \"frequency\": \"20×\", \"amplitude\": 3 }], \"envelopes\": [{ \"target\": \"operatorAmplitude\", \"envelope\": \"twang 2\", \"index\": 1 }, { \"target\": \"operatorAmplitude\", \"envelope\": \"twang 3\", \"index\": 2 }, { \"target\": \"operatorAmplitude\", \"envelope\": \"twang 2\", \"index\": 3 }] } },\r\n                { name: \"FM flute\", midiProgram: 73, settings: { \"type\": \"FM\", \"eqFilter\": [], \"effects\": [], \"transition\": \"normal\", \"fadeInSeconds\": 0.0263, \"fadeOutTicks\": -3, \"chord\": \"simultaneous\", \"algorithm\": \"1←(2 3 4)\", \"feedbackType\": \"1⟲\", \"feedbackAmplitude\": 0, \"operators\": [{ \"frequency\": \"1×\", \"amplitude\": 15 }, { \"frequency\": \"1×\", \"amplitude\": 6 }, { \"frequency\": \"1×\", \"amplitude\": 0 }, { \"frequency\": \"1×\", \"amplitude\": 0 }], \"envelopes\": [{ \"target\": \"operatorAmplitude\", \"envelope\": \"twang 2\", \"index\": 1 }] } },\r\n                { name: \"FM organ\", midiProgram: 16, settings: { \"type\": \"FM\", \"eqFilter\": [], \"effects\": [\"vibrato\"], \"vibrato\": \"delayed\", \"transition\": \"normal\", \"fadeInSeconds\": 0.0263, \"fadeOutTicks\": -3, \"chord\": \"custom interval\", \"algorithm\": \"1←3 2←4\", \"feedbackType\": \"1⟲ 2⟲\", \"feedbackAmplitude\": 0, \"operators\": [{ \"frequency\": \"1×\", \"amplitude\": 14 }, { \"frequency\": \"2×\", \"amplitude\": 14 }, { \"frequency\": \"1×\", \"amplitude\": 11 }, { \"frequency\": \"2×\", \"amplitude\": 11 }], \"envelopes\": [] } },\r\n                { name: \"NES Pulse\", midiProgram: 80, settings: { \"type\": \"custom chip\", \"effects\": [\"aliasing\"], \"transition\": \"normal\", \"fadeInSeconds\": 0, \"fadeOutTicks\": -3, \"chord\": \"arpeggio\", \"eqFilter\": [{ \"type\": \"low-pass\", \"cutoffHz\": 8000, \"linearGain\": 0.5 }], \"unison\": \"none\", \"vibrato\": \"none\", \"envelopes\": [], \"customChipWave\": [-24, -24, -24, -24, -23, -23, -23, -23, -22, -22, -22, -22, -21, -21, -21, -21, -20, -20, -20, -20, -19, -19, -19, -19, -18, -18, -18, -18, -17, -17, -17, -17, 24, 24, 24, 24, 23, 23, 23, 23, 22, 22, 22, 22, 21, 21, 21, 21, 20, 20, 20, 20, 19, 19, 19, 19, 18, 18, 18, 18, 17, 17, 17, 17] } },\r\n                { name: \"Gameboy Pulse\", midiProgram: 80, settings: { \"type\": \"custom chip\", \"effects\": [\"aliasing\"], \"transition\": \"normal\", \"fadeInSeconds\": 0, \"fadeOutTicks\": -3, \"chord\": \"arpeggio\", \"eqFilter\": [{ \"type\": \"low-pass\", \"cutoffHz\": 8000, \"linearGain\": 0.5 }], \"unison\": \"none\", \"envelopes\": [], \"customChipWave\": [-24, -20, -17, -15, -13, -13, -11, -11, -11, -9, -9, -9, -9, -7, -7, -7, -7, -7, -5, -5, -5, -5, -5, -5, -3, -3, -3, -3, -3, -3, -3, -3, 24, 20, 17, 15, 13, 13, 11, 11, 11, 9, 9, 9, 9, 7, 7, 7, 7, 7, 5, 5, 5, 5, 5, 5, 3, 3, 3, 3, 3, 3, 3, 3] } },\r\n                { name: \"VRC6 Sawtooth\", midiProgram: 81, settings: { \"type\": \"custom chip\", \"effects\": [\"aliasing\"], \"transition\": \"normal\", \"fadeInSeconds\": 0, \"fadeOutTicks\": -3, \"chord\": \"arpeggio\", \"eqFilter\": [{ \"type\": \"low-pass\", \"cutoffHz\": 8000, \"linearGain\": 0.5 }], \"unison\": \"none\", \"envelopes\": [], \"customChipWave\": [-24, -20, -16, -13, -10, -8, -6, -5, -4, -4, 0, 0, 0, 0, 4, 4, 4, 4, 4, 4, 8, 8, 8, 8, 8, 8, 8, 8, 12, 12, 12, 12, 12, 12, 12, 12, 16, 16, 16, 16, 16, 16, 16, 16, 20, 20, 20, 20, 20, 20, 20, 20, 24, 24, 24, 24, 24, 24, 24, 24, 24, 24, 24, 24] } },\r\n                { name: \"Atari Square\", midiProgram: 80, settings: { \"type\": \"custom chip\", \"effects\": [\"aliasing\"], \"transition\": \"normal\", \"fadeInSeconds\": 0, \"fadeOutTicks\": -3, \"chord\": \"arpeggio\", \"eqFilter\": [{ \"type\": \"low-pass\", \"cutoffHz\": 4000, \"linearGain\": 0.5 }], \"unison\": \"none\", \"envelopes\": [], \"customChipWave\": [-24, -24, -24, -23, -23, -23, -22, -22, -22, -21, -21, -21, -20, -20, -20, -19, -19, -19, -18, -18, -18, -17, -17, -17, -16, -16, -16, -15, -15, -15, -14, -14, -14, -13, -13, -13, 24, 24, 24, 23, 23, 23, 22, 22, 22, 21, 21, 21, 20, 20, 20, 19, 19, 19, 18, 18, 18, 17, 17, 17, 16, 16, 15, 15] } },\r\n                { name: \"Atari Bass\", midiProgram: 36, settings: { \"type\": \"custom chip\", \"effects\": [\"aliasing\"], \"transition\": \"interrupt\", \"fadeInSeconds\": 0, \"fadeOutTicks\": -3, \"chord\": \"arpeggio\", \"eqFilter\": [{ \"type\": \"low-pass\", \"cutoffHz\": 4000, \"linearGain\": 0.5 }], \"unison\": \"none\", \"envelopes\": [], \"customChipWave\": [-24, -24, -24, -24, -24, -24, -24, -24, -24, 24, 24, 24, 24, 24, 24, -24, -24, -24, 24, 24, 24, -24, -24, -24, 24, 24, 24, -24, -24, -24, 24, 24, -24, -24, -24, -24, -24, -24, -24, -24, -24, 24, 24, 24, 24, 24, 24, -24, -24, 24, 24, 24, 24, 24, -24, -24, -24, -24, 24, 24, -24, -24, 24, 24] } },\r\n                { name: \"Sunsoft Bass\", midiProgram: 36, settings: { \"type\": \"custom chip\", \"effects\": [\"aliasing\"], \"transition\": \"normal\", \"fadeInSeconds\": 0, \"fadeOutTicks\": -3, \"chord\": \"arpeggio\", \"eqFilter\": [{ \"type\": \"low-pass\", \"cutoffHz\": 4000, \"linearGain\": 0.5 }], \"unison\": \"none\", \"envelopes\": [], \"customChipWave\": [24, 24, 15, 15, 9, 9, -4, -4, 0, 0, -13, -13, -19, -19, -24, -24, -24, -24, -10, -10, 0, 0, -7, -7, -7, -7, 0, 0, 6, 6, -4, -4, 3, 3, -4, -4, 3, 3, 3, 3, 9, 9, 15, 15, 15, 15, 6, 6, -4, -4, -4, -4, -4, -4, -4, -4, -4, -4, 3, 3, 12, 12, 24, 24] } },\r\n                { name: \"FM sine\", midiProgram: 55, settings: { \"type\": \"FM\", \"transition\": \"seemless\", \"effects\": \"none\", \"chord\": \"harmony\", \"filterCutoffHz\": 8000, \"filterResonance\": 0, \"filterEnvelope\": \"steady\", \"vibrato\": \"none\", \"algorithm\": \"1←(2 3 4)\", \"feedbackType\": \"1⟲\", \"feedbackAmplitude\": 0, \"feedbackEnvelope\": \"steady\", \"operators\": [{ \"frequency\": \"1×\", \"amplitude\": 15, \"envelope\": \"steady\" }, { \"frequency\": \"1×\", \"amplitude\": 0, \"envelope\": \"steady\" }, { \"frequency\": \"1×\", \"amplitude\": 0, \"envelope\": \"steady\" }, { \"frequency\": \"1×\", \"amplitude\": 0, \"envelope\": \"steady\" }] } },\r\n\r\n            ])\r\n        },\r\n        {\r\n            name: \"Keyboard Presets\", presets: <DictionaryArray<Preset>>toNameMap([\r\n                { name: \"grand piano 1\", midiProgram: 0, generalMidi: true, settings: { \"type\": \"Picked String\", \"eqFilter\": [{ \"type\": \"high-pass\", \"cutoffHz\": 148.65, \"linearGain\": 0.7071 }, { \"type\": \"peak\", \"cutoffHz\": 2000, \"linearGain\": 2.8284 }], \"effects\": [\"note filter\", \"reverb\"], \"noteFilter\": [{ \"type\": \"low-pass\", \"cutoffHz\": 8000, \"linearGain\": 0.125 }], \"reverb\": 67, \"transition\": \"normal\", \"fadeInSeconds\": 0, \"fadeOutTicks\": 48, \"chord\": \"simultaneous\", \"harmonics\": [100, 100, 86, 86, 86, 71, 71, 71, 0, 86, 71, 71, 71, 57, 57, 71, 57, 14, 57, 57, 57, 57, 57, 57, 57, 57, 29, 57], \"unison\": \"piano\", \"stringSustain\": 79, \"envelopes\": [{ \"target\": \"noteFilterAllFreqs\", \"envelope\": \"note size\" }] } },\r\n                { name: \"bright piano\", midiProgram: 1, generalMidi: true, settings: { \"type\": \"Picked String\", \"eqFilter\": [{ \"type\": \"low-pass\", \"cutoffHz\": 1681.79, \"linearGain\": 0.7071 }, { \"type\": \"high-pass\", \"cutoffHz\": 148.65, \"linearGain\": 0.5 }, { \"type\": \"peak\", \"cutoffHz\": 3363.59, \"linearGain\": 1.4142 }], \"effects\": [\"reverb\"], \"reverb\": 33, \"transition\": \"normal\", \"fadeInSeconds\": 0, \"fadeOutTicks\": 24, \"chord\": \"simultaneous\", \"harmonics\": [100, 100, 86, 86, 71, 71, 0, 71, 71, 71, 71, 71, 71, 14, 57, 57, 57, 57, 57, 57, 29, 57, 57, 57, 57, 57, 57, 57], \"unison\": \"piano\", \"stringSustain\": 86, \"envelopes\": [] } },\r\n                { name: \"electric grand\", midiProgram: 2, generalMidi: true, settings: { \"type\": \"chip\", \"eqFilter\": [], \"effects\": [\"note filter\"], \"noteFilter\": [{ \"type\": \"low-pass\", \"cutoffHz\": 2378.41, \"linearGain\": 0.5 }], \"transition\": \"normal\", \"fadeInSeconds\": 0, \"fadeOutTicks\": 48, \"chord\": \"simultaneous\", \"wave\": \"1/8 pulse\", \"unison\": \"shimmer\", \"envelopes\": [{ \"target\": \"noteFilterAllFreqs\", \"envelope\": \"twang 3\" }] } },\r\n                { name: \"honky-tonk piano\", midiProgram: 3, generalMidi: true, settings: { \"type\": \"Picked String\", \"eqFilter\": [{ \"type\": \"low-pass\", \"cutoffHz\": 5656.85, \"linearGain\": 0.3536 }], \"effects\": [\"reverb\"], \"reverb\": 33, \"transition\": \"normal\", \"fadeInSeconds\": 0, \"fadeOutTicks\": 48, \"chord\": \"simultaneous\", \"harmonics\": [100, 100, 86, 71, 86, 71, 43, 71, 43, 43, 57, 57, 57, 29, 57, 57, 57, 57, 57, 57, 43, 57, 57, 57, 43, 43, 43, 43], \"unison\": \"honky tonk\", \"stringSustain\": 71, \"envelopes\": [] } },\r\n                { name: \"electric piano 1\", midiProgram: 4, generalMidi: true, settings: { \"type\": \"harmonics\", \"eqFilter\": [], \"effects\": [\"note filter\"], \"noteFilter\": [{ \"type\": \"low-pass\", \"cutoffHz\": 3363.59, \"linearGain\": 0.5 }], \"transition\": \"normal\", \"fadeInSeconds\": 0, \"fadeOutTicks\": -3, \"chord\": \"simultaneous\", \"harmonics\": [86, 100, 100, 71, 71, 57, 57, 43, 43, 43, 29, 29, 29, 14, 14, 14, 0, 0, 0, 0, 0, 57, 0, 0, 0, 0, 0, 0], \"unison\": \"none\", \"envelopes\": [{ \"target\": \"noteFilterAllFreqs\", \"envelope\": \"twang 2\" }] } },\r\n                { name: \"electric piano 2\", midiProgram: 5, generalMidi: true, settings: { \"type\": \"FM\", \"eqFilter\": [], \"effects\": [\"note filter\"], \"noteFilter\": [{ \"type\": \"low-pass\", \"cutoffHz\": 13454.34, \"linearGain\": 0.25 }], \"transition\": \"normal\", \"fadeInSeconds\": 0, \"fadeOutTicks\": 48, \"chord\": \"simultaneous\", \"algorithm\": \"1←3 2←4\", \"feedbackType\": \"1⟲ 2⟲\", \"feedbackAmplitude\": 0, \"operators\": [{ \"frequency\": \"1×\", \"amplitude\": 12 }, { \"frequency\": \"1×\", \"amplitude\": 6 }, { \"frequency\": \"1×\", \"amplitude\": 9 }, { \"frequency\": \"16×\", \"amplitude\": 6 }], \"envelopes\": [{ \"target\": \"noteFilterAllFreqs\", \"envelope\": \"twang 3\" }, { \"target\": \"operatorAmplitude\", \"envelope\": \"twang 3\", \"index\": 3 }] } },\r\n                { name: \"harpsichord\", midiProgram: 6, generalMidi: true, settings: { \"type\": \"Picked String\", \"eqFilter\": [{ \"type\": \"high-pass\", \"cutoffHz\": 250, \"linearGain\": 0.3536 }, { \"type\": \"peak\", \"cutoffHz\": 11313.71, \"linearGain\": 2.8284 }], \"effects\": [\"reverb\"], \"reverb\": 33, \"transition\": \"normal\", \"fadeInSeconds\": 0, \"fadeOutTicks\": 24, \"chord\": \"simultaneous\", \"harmonics\": [100, 100, 100, 86, 57, 86, 86, 86, 86, 57, 57, 71, 71, 86, 86, 71, 71, 86, 86, 71, 71, 71, 71, 71, 71, 71, 71, 71], \"unison\": \"none\", \"stringSustain\": 79, \"envelopes\": [] } },\r\n                { name: \"clavinet\", midiProgram: 7, generalMidi: true, settings: { \"type\": \"FM\", \"eqFilter\": [], \"effects\": [\"note filter\"], \"noteFilter\": [{ \"type\": \"low-pass\", \"cutoffHz\": 19027.31, \"linearGain\": 0.3536 }], \"transition\": \"normal\", \"fadeInSeconds\": 0, \"fadeOutTicks\": -3, \"chord\": \"simultaneous\", \"algorithm\": \"1←(2 3 4)\", \"feedbackType\": \"3⟲\", \"feedbackAmplitude\": 6, \"operators\": [{ \"frequency\": \"3×\", \"amplitude\": 15 }, { \"frequency\": \"~1×\", \"amplitude\": 6 }, { \"frequency\": \"8×\", \"amplitude\": 4 }, { \"frequency\": \"1×\", \"amplitude\": 0 }], \"envelopes\": [{ \"target\": \"noteFilterAllFreqs\", \"envelope\": \"twang 2\" }, { \"target\": \"feedbackAmplitude\", \"envelope\": \"twang 2\" }] } },\r\n                { name: \"dulcimer\", midiProgram: 15, generalMidi: true, settings: { \"type\": \"Picked String\", \"eqFilter\": [{ \"type\": \"low-pass\", \"cutoffHz\": 8000, \"linearGain\": 0.3536 }], \"effects\": [\"reverb\"], \"reverb\": 33, \"transition\": \"normal\", \"fadeInSeconds\": 0, \"fadeOutTicks\": 48, \"chord\": \"strum\", \"harmonics\": [100, 100, 100, 86, 100, 86, 57, 100, 100, 86, 100, 86, 100, 86, 100, 71, 57, 71, 71, 100, 86, 71, 86, 86, 100, 86, 86, 86], \"unison\": \"piano\", \"stringSustain\": 79, \"envelopes\": [] } },\r\n                { name: \"grand piano 2\", midiProgram: 0, generalMidi: true, settings: { \"type\": \"harmonics\", \"eqFilter\": [{ \"type\": \"high-pass\", \"cutoffHz\": 148.65, \"linearGain\": 0.7071 }, { \"type\": \"peak\", \"cutoffHz\": 2000, \"linearGain\": 2.8284 }], \"effects\": [\"note filter\", \"reverb\"], \"noteFilter\": [{ \"type\": \"low-pass\", \"cutoffHz\": 8000, \"linearGain\": 0.125 }], \"reverb\": 67, \"transition\": \"normal\", \"fadeInSeconds\": 0, \"fadeOutTicks\": 48, \"chord\": \"simultaneous\", \"harmonics\": [100, 86, 86, 86, 86, 71, 71, 57, 0, 57, 29, 43, 57, 57, 57, 43, 43, 0, 29, 43, 43, 43, 43, 43, 43, 29, 0, 29], \"unison\": \"piano\", \"stringSustain\": 79, \"envelopes\": [{ \"target\": \"noteFilterAllFreqs\", \"envelope\": \"note size\" }] } },\r\n\r\n            ])\r\n        },\r\n        {\r\n            name: \"Idiophone Presets\", presets: <DictionaryArray<Preset>>toNameMap([\r\n                { name: \"celesta\", midiProgram: 8, generalMidi: true, settings: { \"type\": \"FM\", \"effects\": \"reverb\", \"transition\": \"hard fade\", \"chord\": \"strum\", \"filterCutoffHz\": 5657, \"filterResonance\": 14, \"filterEnvelope\": \"twang 2\", \"vibrato\": \"none\", \"algorithm\": \"(1 2)←(3 4)\", \"feedbackType\": \"1⟲ 2⟲\", \"feedbackAmplitude\": 0, \"feedbackEnvelope\": \"steady\", \"operators\": [{ \"frequency\": \"~1×\", \"amplitude\": 11, \"envelope\": \"custom\" }, { \"frequency\": \"8×\", \"amplitude\": 6, \"envelope\": \"custom\" }, { \"frequency\": \"20×\", \"amplitude\": 3, \"envelope\": \"twang 1\" }, { \"frequency\": \"3×\", \"amplitude\": 1, \"envelope\": \"twang 2\" }] } },\r\n                { name: \"glockenspiel\", midiProgram: 9, generalMidi: true, settings: { \"type\": \"FM\", \"effects\": \"reverb\", \"transition\": \"hard fade\", \"chord\": \"strum\", \"filterCutoffHz\": 5657, \"filterResonance\": 14, \"filterEnvelope\": \"twang 2\", \"vibrato\": \"none\", \"algorithm\": \"(1 2 3)←4\", \"feedbackType\": \"1⟲ 2⟲ 3⟲\", \"feedbackAmplitude\": 2, \"feedbackEnvelope\": \"decay 1\", \"operators\": [{ \"frequency\": \"1×\", \"amplitude\": 7, \"envelope\": \"custom\" }, { \"frequency\": \"5×\", \"amplitude\": 11, \"envelope\": \"custom\" }, { \"frequency\": \"8×\", \"amplitude\": 7, \"envelope\": \"custom\" }, { \"frequency\": \"20×\", \"amplitude\": 2, \"envelope\": \"twang 1\" }] } },\r\n                { name: \"music box 1\", midiProgram: 10, generalMidi: true, settings: { \"type\": \"Picked String\", \"eqFilter\": [{ \"type\": \"low-pass\", \"cutoffHz\": 4756.83, \"linearGain\": 0.5 }], \"effects\": [\"reverb\"], \"reverb\": 33, \"transition\": \"normal\", \"fadeInSeconds\": 0, \"fadeOutTicks\": 48, \"chord\": \"strum\", \"harmonics\": [100, 0, 0, 100, 0, 0, 0, 0, 0, 0, 100, 0, 0, 0, 0, 0, 0, 0, 0, 86, 0, 0, 0, 0, 0, 0, 71, 0], \"unison\": \"none\", \"stringSustain\": 64, \"envelopes\": [] } },\r\n                { name: \"music box 2\", midiProgram: 10, settings: { \"type\": \"Picked String\", \"eqFilter\": [{ \"type\": \"low-pass\", \"cutoffHz\": 2828.43, \"linearGain\": 0.7071 }], \"effects\": [\"reverb\"], \"reverb\": 33, \"transition\": \"normal\", \"fadeInSeconds\": 0, \"fadeOutTicks\": 48, \"chord\": \"strum\", \"harmonics\": [100, 57, 57, 0, 0, 0, 0, 0, 0, 57, 0, 0, 0, 0, 0, 0, 0, 0, 0, 43, 0, 0, 0, 0, 0, 0, 0, 0], \"unison\": \"none\", \"stringSustain\": 29, \"envelopes\": [] } },\r\n                { name: \"vibraphone\", midiProgram: 11, generalMidi: true, settings: { \"type\": \"FM\", \"effects\": \"reverb\", \"transition\": \"hard fade\", \"chord\": \"harmony\", \"filterCutoffHz\": 2828, \"filterResonance\": 14, \"filterEnvelope\": \"twang 2\", \"vibrato\": \"none\", \"algorithm\": \"1 2 3 4\", \"feedbackType\": \"1→2→3→4\", \"feedbackAmplitude\": 3, \"feedbackEnvelope\": \"twang 1\", \"operators\": [{ \"frequency\": \"1×\", \"amplitude\": 9, \"envelope\": \"custom\" }, { \"frequency\": \"~1×\", \"amplitude\": 9, \"envelope\": \"custom\" }, { \"frequency\": \"9×\", \"amplitude\": 3, \"envelope\": \"custom\" }, { \"frequency\": \"4×\", \"amplitude\": 9, \"envelope\": \"custom\" }] } },\r\n                { name: \"marimba\", midiProgram: 12, generalMidi: true, settings: { \"type\": \"FM\", \"effects\": \"reverb\", \"transition\": \"hard fade\", \"chord\": \"strum\", \"filterCutoffHz\": 2000, \"filterResonance\": 29, \"filterEnvelope\": \"decay 1\", \"vibrato\": \"none\", \"algorithm\": \"1 2←(3 4)\", \"feedbackType\": \"1⟲\", \"feedbackAmplitude\": 0, \"feedbackEnvelope\": \"steady\", \"operators\": [{ \"frequency\": \"1×\", \"amplitude\": 10, \"envelope\": \"custom\" }, { \"frequency\": \"4×\", \"amplitude\": 6, \"envelope\": \"custom\" }, { \"frequency\": \"13×\", \"amplitude\": 6, \"envelope\": \"twang 1\" }, { \"frequency\": \"1×\", \"amplitude\": 0, \"envelope\": \"steady\" }] } },\r\n                { name: \"kalimba\", midiProgram: 108, generalMidi: true, settings: { \"type\": \"FM\", \"effects\": \"reverb\", \"transition\": \"hard fade\", \"chord\": \"strum\", \"filterCutoffHz\": 2828, \"filterResonance\": 14, \"filterEnvelope\": \"decay 1\", \"vibrato\": \"none\", \"algorithm\": \"1←(2 3 4)\", \"feedbackType\": \"1⟲\", \"feedbackAmplitude\": 0, \"feedbackEnvelope\": \"steady\", \"operators\": [{ \"frequency\": \"1×\", \"amplitude\": 11, \"envelope\": \"custom\" }, { \"frequency\": \"5×\", \"amplitude\": 3, \"envelope\": \"twang 2\" }, { \"frequency\": \"20×\", \"amplitude\": 3, \"envelope\": \"twang 1\" }, { \"frequency\": \"1×\", \"amplitude\": 0, \"envelope\": \"steady\" }] } },\r\n                { name: \"xylophone\", midiProgram: 13, generalMidi: true, settings: { \"type\": \"FM\", \"effects\": \"reverb\", \"transition\": \"hard\", \"chord\": \"strum\", \"filterCutoffHz\": 2000, \"filterResonance\": 14, \"filterEnvelope\": \"twang 1\", \"vibrato\": \"none\", \"algorithm\": \"(1 2 3)←4\", \"feedbackType\": \"1⟲ 2⟲ 3⟲\", \"feedbackAmplitude\": 0, \"feedbackEnvelope\": \"steady\", \"operators\": [{ \"frequency\": \"1×\", \"amplitude\": 9, \"envelope\": \"custom\" }, { \"frequency\": \"6×\", \"amplitude\": 9, \"envelope\": \"custom\" }, { \"frequency\": \"11×\", \"amplitude\": 9, \"envelope\": \"custom\" }, { \"frequency\": \"20×\", \"amplitude\": 6, \"envelope\": \"twang 1\" }] } },\r\n                { name: \"tubular bell\", midiProgram: 14, generalMidi: true, midiSubharmonicOctaves: 1, settings: { \"type\": \"Picked String\", \"eqFilter\": [{ \"type\": \"low-pass\", \"cutoffHz\": 4000, \"linearGain\": 0.5 }, { \"type\": \"high-pass\", \"cutoffHz\": 105.11, \"linearGain\": 0.3536 }], \"effects\": [\"reverb\"], \"reverb\": 33, \"transition\": \"normal\", \"fadeInSeconds\": 0, \"fadeOutTicks\": 96, \"chord\": \"strum\", \"harmonics\": [43, 71, 0, 100, 0, 100, 0, 86, 0, 0, 86, 0, 14, 71, 14, 14, 57, 14, 14, 43, 14, 14, 43, 14, 14, 43, 14, 14], \"unison\": \"shimmer\", \"stringSustain\": 86, \"envelopes\": [] } },\r\n                { name: \"bell synth\", midiProgram: 14, settings: { \"type\": \"FM\", \"effects\": \"reverb\", \"transition\": \"hard fade\", \"chord\": \"strum\", \"filterCutoffHz\": 2000, \"filterResonance\": 29, \"filterEnvelope\": \"twang 3\", \"vibrato\": \"none\", \"algorithm\": \"1←(2 3 4)\", \"feedbackType\": \"1⟲\", \"feedbackAmplitude\": 0, \"feedbackEnvelope\": \"steady\", \"operators\": [{ \"frequency\": \"~2×\", \"amplitude\": 10, \"envelope\": \"custom\" }, { \"frequency\": \"7×\", \"amplitude\": 6, \"envelope\": \"twang 3\" }, { \"frequency\": \"20×\", \"amplitude\": 1, \"envelope\": \"twang 1\" }, { \"frequency\": \"1×\", \"amplitude\": 0, \"envelope\": \"steady\" }] } },\r\n                { name: \"rain drop\", midiProgram: 96, generalMidi: true, settings: { \"type\": \"FM\", \"effects\": \"reverb\", \"transition\": \"hard fade\", \"chord\": \"strum\", \"filterCutoffHz\": 4000, \"filterResonance\": 14, \"filterEnvelope\": \"twang 1\", \"vibrato\": \"none\", \"algorithm\": \"(1 2)←(3 4)\", \"feedbackType\": \"1⟲ 2⟲\", \"feedbackAmplitude\": 0, \"feedbackEnvelope\": \"steady\", \"operators\": [{ \"frequency\": \"1×\", \"amplitude\": 12, \"envelope\": \"custom\" }, { \"frequency\": \"6×\", \"amplitude\": 4, \"envelope\": \"custom\" }, { \"frequency\": \"20×\", \"amplitude\": 3, \"envelope\": \"twang 1\" }, { \"frequency\": \"1×\", \"amplitude\": 6, \"envelope\": \"tremolo1\" }] } },\r\n                { name: \"crystal\", midiProgram: 98, generalMidi: true, settings: { \"type\": \"FM\", \"effects\": \"reverb\", \"transition\": \"hard fade\", \"chord\": \"harmony\", \"filterCutoffHz\": 2828, \"filterResonance\": 14, \"filterEnvelope\": \"twang 2\", \"vibrato\": \"delayed\", \"algorithm\": \"1 2 3 4\", \"feedbackType\": \"1⟲ 2⟲ 3⟲ 4⟲\", \"feedbackAmplitude\": 4, \"feedbackEnvelope\": \"twang 1\", \"operators\": [{ \"frequency\": \"1×\", \"amplitude\": 10, \"envelope\": \"custom\" }, { \"frequency\": \"3×\", \"amplitude\": 7, \"envelope\": \"custom\" }, { \"frequency\": \"6×\", \"amplitude\": 4, \"envelope\": \"custom\" }, { \"frequency\": \"13×\", \"amplitude\": 4, \"envelope\": \"custom\" }] } },\r\n                { name: \"tinkle bell\", midiProgram: 112, generalMidi: true, settings: { \"type\": \"FM\", \"effects\": \"reverb\", \"transition\": \"hard\", \"chord\": \"strum\", \"filterCutoffHz\": 2828, \"filterResonance\": 14, \"filterEnvelope\": \"twang 2\", \"vibrato\": \"none\", \"algorithm\": \"1 2 3 4\", \"feedbackType\": \"1→2→3→4\", \"feedbackAmplitude\": 5, \"feedbackEnvelope\": \"twang 3\", \"operators\": [{ \"frequency\": \"~2×\", \"amplitude\": 7, \"envelope\": \"custom\" }, { \"frequency\": \"5×\", \"amplitude\": 7, \"envelope\": \"custom\" }, { \"frequency\": \"7×\", \"amplitude\": 7, \"envelope\": \"custom\" }, { \"frequency\": \"16×\", \"amplitude\": 7, \"envelope\": \"custom\" }] } },\r\n                { name: \"agogo\", midiProgram: 113, generalMidi: true, settings: { \"type\": \"FM\", \"effects\": \"reverb\", \"transition\": \"hard fade\", \"chord\": \"strum\", \"filterCutoffHz\": 4000, \"filterResonance\": 14, \"filterEnvelope\": \"decay 1\", \"vibrato\": \"none\", \"algorithm\": \"1 2 3 4\", \"feedbackType\": \"1→4\", \"feedbackAmplitude\": 15, \"feedbackEnvelope\": \"decay 1\", \"operators\": [{ \"frequency\": \"2×\", \"amplitude\": 9, \"envelope\": \"custom\" }, { \"frequency\": \"5×\", \"amplitude\": 6, \"envelope\": \"custom\" }, { \"frequency\": \"8×\", \"amplitude\": 9, \"envelope\": \"custom\" }, { \"frequency\": \"13×\", \"amplitude\": 11, \"envelope\": \"custom\" }] } },\r\n            ])\r\n        },\r\n        {\r\n            name: \"Guitar Presets\", presets: <DictionaryArray<Preset>>toNameMap([\r\n                { name: \"nylon guitar\", midiProgram: 24, generalMidi: true, settings: { \"type\": \"FM\", \"effects\": \"reverb\", \"transition\": \"hard fade\", \"chord\": \"strum\", \"filterCutoffHz\": 5657, \"filterResonance\": 14, \"filterEnvelope\": \"twang 1\", \"vibrato\": \"none\", \"algorithm\": \"1←2←3←4\", \"feedbackType\": \"3⟲\", \"feedbackAmplitude\": 6, \"feedbackEnvelope\": \"twang 1\", \"operators\": [{ \"frequency\": \"1×\", \"amplitude\": 15, \"envelope\": \"custom\" }, { \"frequency\": \"1×\", \"amplitude\": 6, \"envelope\": \"steady\" }, { \"frequency\": \"5×\", \"amplitude\": 2, \"envelope\": \"steady\" }, { \"frequency\": \"7×\", \"amplitude\": 4, \"envelope\": \"steady\" }] } },\r\n                { name: \"steel guitar\", midiProgram: 25, generalMidi: true, settings: { \"type\": \"Picked String\", \"eqFilter\": [], \"effects\": [\"reverb\"], \"reverb\": 33, \"transition\": \"normal\", \"fadeInSeconds\": 0, \"fadeOutTicks\": 48, \"chord\": \"strum\", \"harmonics\": [100, 100, 86, 71, 71, 71, 86, 86, 71, 57, 43, 43, 43, 57, 57, 57, 57, 57, 43, 43, 43, 43, 43, 43, 43, 43, 43, 43], \"unison\": \"none\", \"stringSustain\": 71, \"envelopes\": [] } },\r\n                { name: \"jazz guitar\", midiProgram: 26, generalMidi: true, settings: { \"type\": \"harmonics\", \"effects\": \"reverb\", \"transition\": \"hard\", \"chord\": \"strum\", \"filterCutoffHz\": 2000, \"filterResonance\": 14, \"filterEnvelope\": \"twang 2\", \"interval\": \"union\", \"vibrato\": \"none\", \"harmonics\": [100, 100, 86, 71, 57, 71, 71, 43, 57, 71, 57, 43, 29, 29, 29, 29, 29, 29, 29, 29, 14, 14, 14, 14, 14, 14, 14, 0] } },\r\n                { name: \"clean guitar\", midiProgram: 27, generalMidi: true, settings: { \"type\": \"harmonics\", \"effects\": \"reverb\", \"transition\": \"hard\", \"chord\": \"strum\", \"filterCutoffHz\": 2828, \"filterResonance\": 14, \"filterEnvelope\": \"twang 2\", \"interval\": \"union\", \"vibrato\": \"none\", \"harmonics\": [86, 100, 100, 100, 86, 57, 86, 100, 100, 100, 71, 57, 43, 71, 86, 71, 57, 57, 71, 71, 71, 71, 57, 57, 57, 57, 57, 43] } },\r\n                { name: \"muted guitar\", midiProgram: 28, generalMidi: true, settings: { \"type\": \"FM\", \"effects\": \"reverb\", \"transition\": \"hard\", \"chord\": \"strum\", \"filterCutoffHz\": 2000, \"filterResonance\": 14, \"filterEnvelope\": \"twang 1\", \"vibrato\": \"none\", \"algorithm\": \"1←(2 3←4)\", \"feedbackType\": \"1⟲\", \"feedbackAmplitude\": 7, \"feedbackEnvelope\": \"twang 2\", \"operators\": [{ \"frequency\": \"1×\", \"amplitude\": 13, \"envelope\": \"custom\" }, { \"frequency\": \"1×\", \"amplitude\": 4, \"envelope\": \"twang 3\" }, { \"frequency\": \"4×\", \"amplitude\": 4, \"envelope\": \"twang 2\" }, { \"frequency\": \"16×\", \"amplitude\": 4, \"envelope\": \"twang 1\" }] } },\r\n            ])\r\n        },\r\n        {\r\n            name: \"Picked Bass Presets\", presets: <DictionaryArray<Preset>>toNameMap([\r\n                { name: \"acoustic bass\", midiProgram: 32, generalMidi: true, settings: { \"type\": \"harmonics\", \"effects\": \"reverb\", \"transition\": \"hard fade\", \"chord\": \"strum\", \"filterCutoffHz\": 4000, \"filterResonance\": 14, \"filterEnvelope\": \"twang 1\", \"interval\": \"union\", \"vibrato\": \"none\", \"harmonics\": [100, 86, 71, 71, 71, 71, 57, 57, 57, 57, 43, 43, 43, 43, 43, 29, 29, 29, 29, 29, 29, 14, 14, 14, 14, 14, 14, 14] } },\r\n                { name: \"fingered bass\", midiProgram: 33, generalMidi: true, settings: { \"type\": \"harmonics\", \"effects\": \"reverb\", \"transition\": \"hard fade\", \"chord\": \"strum\", \"filterCutoffHz\": 2828, \"filterResonance\": 14, \"filterEnvelope\": \"twang 1\", \"interval\": \"union\", \"vibrato\": \"none\", \"harmonics\": [100, 86, 71, 57, 71, 43, 57, 29, 29, 29, 29, 29, 29, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 0] } },\r\n                { name: \"picked bass\", midiProgram: 34, generalMidi: true, settings: { \"type\": \"FM\", \"effects\": \"reverb\", \"transition\": \"hard fade\", \"chord\": \"strum\", \"filterCutoffHz\": 2828, \"filterResonance\": 0, \"filterEnvelope\": \"twang 1\", \"vibrato\": \"none\", \"algorithm\": \"1←(2 3←4)\", \"feedbackType\": \"3⟲\", \"feedbackAmplitude\": 4, \"feedbackEnvelope\": \"twang 1\", \"operators\": [{ \"frequency\": \"1×\", \"amplitude\": 15, \"envelope\": \"custom\" }, { \"frequency\": \"1×\", \"amplitude\": 5, \"envelope\": \"steady\" }, { \"frequency\": \"11×\", \"amplitude\": 1, \"envelope\": \"twang 3\" }, { \"frequency\": \"1×\", \"amplitude\": 9, \"envelope\": \"steady\" }] } },\r\n                { name: \"fretless bass\", midiProgram: 35, generalMidi: true, settings: { \"type\": \"harmonics\", \"effects\": \"reverb\", \"transition\": \"hard\", \"chord\": \"strum\", \"filterCutoffHz\": 1000, \"filterResonance\": 14, \"filterEnvelope\": \"flare 2\", \"interval\": \"union\", \"vibrato\": \"none\", \"harmonics\": [100, 100, 86, 71, 71, 57, 57, 71, 71, 71, 57, 57, 57, 57, 57, 57, 57, 43, 43, 43, 43, 43, 43, 43, 43, 29, 29, 14] } },\r\n                { name: \"slap bass 1\", midiProgram: 36, generalMidi: true, settings: { \"type\": \"harmonics\", \"effects\": \"reverb\", \"transition\": \"hard\", \"chord\": \"strum\", \"filterCutoffHz\": 4000, \"filterResonance\": 0, \"filterEnvelope\": \"twang 1\", \"interval\": \"union\", \"vibrato\": \"none\", \"harmonics\": [100, 100, 100, 100, 86, 71, 57, 29, 29, 43, 43, 57, 71, 57, 29, 29, 43, 57, 57, 57, 43, 43, 43, 57, 71, 71, 71, 71] } },\r\n                { name: \"slap bass 2\", midiProgram: 37, generalMidi: true, settings: { \"type\": \"FM\", \"effects\": \"reverb\", \"transition\": \"hard\", \"chord\": \"strum\", \"filterCutoffHz\": 5657, \"filterResonance\": 0, \"filterEnvelope\": \"twang 1\", \"vibrato\": \"none\", \"algorithm\": \"1←2←3←4\", \"feedbackType\": \"3⟲\", \"feedbackAmplitude\": 4, \"feedbackEnvelope\": \"steady\", \"operators\": [{ \"frequency\": \"3×\", \"amplitude\": 13, \"envelope\": \"custom\" }, { \"frequency\": \"1×\", \"amplitude\": 7, \"envelope\": \"steady\" }, { \"frequency\": \"13×\", \"amplitude\": 3, \"envelope\": \"steady\" }, { \"frequency\": \"1×\", \"amplitude\": 11, \"envelope\": \"steady\" }] } },\r\n                { name: \"bass synth 1\", midiProgram: 38, generalMidi: true, settings: { \"type\": \"FM\", \"effects\": \"reverb\", \"transition\": \"hard\", \"chord\": \"strum\", \"filterCutoffHz\": 4000, \"filterResonance\": 43, \"filterEnvelope\": \"twang 2\", \"vibrato\": \"none\", \"algorithm\": \"1←3 2←4\", \"feedbackType\": \"3⟲ 4⟲\", \"feedbackAmplitude\": 9, \"feedbackEnvelope\": \"twang 2\", \"operators\": [{ \"frequency\": \"1×\", \"amplitude\": 15, \"envelope\": \"custom\" }, { \"frequency\": \"1×\", \"amplitude\": 10, \"envelope\": \"custom\" }, { \"frequency\": \"1×\", \"amplitude\": 14, \"envelope\": \"twang 1\" }, { \"frequency\": \"~1×\", \"amplitude\": 13, \"envelope\": \"twang 2\" }] } },\r\n                { name: \"bass synth 2\", midiProgram: 39, generalMidi: true, settings: { \"type\": \"FM\", \"effects\": \"reverb\", \"transition\": \"hard fade\", \"chord\": \"strum\", \"filterCutoffHz\": 1000, \"filterResonance\": 57, \"filterEnvelope\": \"punch\", \"vibrato\": \"none\", \"algorithm\": \"1←(2 3 4)\", \"feedbackType\": \"1→2\", \"feedbackAmplitude\": 4, \"feedbackEnvelope\": \"twang 3\", \"operators\": [{ \"frequency\": \"1×\", \"amplitude\": 9, \"envelope\": \"custom\" }, { \"frequency\": \"1×\", \"amplitude\": 9, \"envelope\": \"steady\" }, { \"frequency\": \"3×\", \"amplitude\": 0, \"envelope\": \"steady\" }, { \"frequency\": \"1×\", \"amplitude\": 0, \"envelope\": \"steady\" }] } },\r\n                { name: \"bass & lead\", midiProgram: 87, generalMidi: true, settings: { \"type\": \"chip\", \"transition\": \"hard\", \"effects\": \"reverb\", \"chord\": \"harmony\", \"filterCutoffHz\": 4000, \"filterResonance\": 86, \"filterEnvelope\": \"twang 2\", \"wave\": \"sawtooth\", \"interval\": \"shimmer\", \"vibrato\": \"none\" } },\r\n                { name: \"dubstep yoi yoi\", midiProgram: 87, settings: { \"type\": \"chip\", \"eqFilter\": [{ \"type\": \"low-pass\", \"cutoffHz\": 6727.17, \"linearGain\": 0.7071 }], \"effects\": [\"note filter\", \"bitcrusher\"], \"noteFilter\": [{ \"type\": \"low-pass\", \"cutoffHz\": 594.6, \"linearGain\": 11.3137 }], \"bitcrusherOctave\": 1.5, \"bitcrusherQuantization\": 0, \"transition\": \"slide\", \"fadeInSeconds\": 0.0263, \"fadeOutTicks\": -3, \"chord\": \"arpeggio\", \"wave\": \"sawtooth\", \"unison\": \"none\", \"envelopes\": [{ \"target\": \"noteFilterFreq\", \"envelope\": \"flare 2\", \"index\": 0 }] } },\r\n            ])\r\n        },\r\n        {\r\n            name: \"Picked String Presets\", presets: <DictionaryArray<Preset>>toNameMap([\r\n                { name: \"pizzicato strings\", midiProgram: 45, generalMidi: true, settings: { \"type\": \"FM\", \"effects\": \"reverb\", \"transition\": \"medium fade\", \"chord\": \"harmony\", \"filterCutoffHz\": 1000, \"filterResonance\": 14, \"filterEnvelope\": \"twang 1\", \"vibrato\": \"none\", \"algorithm\": \"(1 2 3)←4\", \"feedbackType\": \"1⟲ 2⟲ 3⟲ 4⟲\", \"feedbackAmplitude\": 7, \"feedbackEnvelope\": \"twang 1\", \"operators\": [{ \"frequency\": \"1×\", \"amplitude\": 14, \"envelope\": \"custom\" }, { \"frequency\": \"3×\", \"amplitude\": 11, \"envelope\": \"custom\" }, { \"frequency\": \"6×\", \"amplitude\": 9, \"envelope\": \"custom\" }, { \"frequency\": \"~1×\", \"amplitude\": 10, \"envelope\": \"steady\" }] } },\r\n                { name: \"harp\", midiProgram: 46, generalMidi: true, settings: { \"type\": \"FM\", \"transition\": \"hard fade\", \"effects\": \"reverb\", \"chord\": \"strum\", \"filterCutoffHz\": 2828, \"filterResonance\": 0, \"filterEnvelope\": \"twang 1\", \"vibrato\": \"none\", \"algorithm\": \"1←3 2←4\", \"feedbackType\": \"3⟲\", \"feedbackAmplitude\": 6, \"feedbackEnvelope\": \"twang 2\", \"operators\": [{ \"frequency\": \"1×\", \"amplitude\": 15, \"envelope\": \"custom\" }, { \"frequency\": \"4×\", \"amplitude\": 6, \"envelope\": \"custom\" }, { \"frequency\": \"~2×\", \"amplitude\": 3, \"envelope\": \"steady\" }, { \"frequency\": \"1×\", \"amplitude\": 6, \"envelope\": \"steady\" }] } },\r\n                { name: \"sitar\", midiProgram: 104, generalMidi: true, settings: { \"type\": \"FM\", \"transition\": \"hard fade\", \"effects\": \"reverb\", \"chord\": \"strum\", \"filterCutoffHz\": 8000, \"filterResonance\": 57, \"filterEnvelope\": \"twang 2\", \"vibrato\": \"none\", \"algorithm\": \"1←(2 3 4)\", \"feedbackType\": \"1⟲\", \"feedbackAmplitude\": 0, \"feedbackEnvelope\": \"steady\", \"operators\": [{ \"frequency\": \"1×\", \"amplitude\": 15, \"envelope\": \"custom\" }, { \"frequency\": \"1×\", \"amplitude\": 14, \"envelope\": \"twang 3\" }, { \"frequency\": \"9×\", \"amplitude\": 3, \"envelope\": \"twang 3\" }, { \"frequency\": \"16×\", \"amplitude\": 9, \"envelope\": \"swell 3\" }] } },\r\n                { name: \"banjo\", midiProgram: 105, generalMidi: true, settings: { \"type\": \"FM\", \"effects\": \"reverb\", \"transition\": \"hard fade\", \"chord\": \"strum\", \"filterCutoffHz\": 2828, \"filterResonance\": 14, \"filterEnvelope\": \"twang 2\", \"vibrato\": \"none\", \"algorithm\": \"1←(2 3←4)\", \"feedbackType\": \"2⟲\", \"feedbackAmplitude\": 4, \"feedbackEnvelope\": \"steady\", \"operators\": [{ \"frequency\": \"4×\", \"amplitude\": 14, \"envelope\": \"custom\" }, { \"frequency\": \"1×\", \"amplitude\": 10, \"envelope\": \"steady\" }, { \"frequency\": \"11×\", \"amplitude\": 3, \"envelope\": \"twang 3\" }, { \"frequency\": \"1×\", \"amplitude\": 11, \"envelope\": \"steady\" }] } },\r\n                { name: \"ukulele\", midiProgram: 105, settings: { \"type\": \"FM\", \"effects\": \"reverb\", \"transition\": \"hard fade\", \"chord\": \"strum\", \"filterCutoffHz\": 2000, \"filterResonance\": 0, \"filterEnvelope\": \"twang 1\", \"vibrato\": \"none\", \"algorithm\": \"1←(2 3←4)\", \"feedbackType\": \"3⟲\", \"feedbackAmplitude\": 5, \"feedbackEnvelope\": \"twang 1\", \"operators\": [{ \"frequency\": \"2×\", \"amplitude\": 14, \"envelope\": \"custom\" }, { \"frequency\": \"1×\", \"amplitude\": 6, \"envelope\": \"steady\" }, { \"frequency\": \"9×\", \"amplitude\": 4, \"envelope\": \"twang 2\" }, { \"frequency\": \"1×\", \"amplitude\": 11, \"envelope\": \"steady\" }] } },\r\n                { name: \"shamisen\", midiProgram: 106, generalMidi: true, settings: { \"type\": \"FM\", \"effects\": \"reverb\", \"transition\": \"hard fade\", \"chord\": \"harmony\", \"filterCutoffHz\": 8000, \"filterResonance\": 14, \"filterEnvelope\": \"twang 1\", \"vibrato\": \"none\", \"algorithm\": \"1←(2 3←4)\", \"feedbackType\": \"3⟲\", \"feedbackAmplitude\": 9, \"feedbackEnvelope\": \"twang 3\", \"operators\": [{ \"frequency\": \"1×\", \"amplitude\": 15, \"envelope\": \"custom\" }, { \"frequency\": \"1×\", \"amplitude\": 12, \"envelope\": \"steady\" }, { \"frequency\": \"16×\", \"amplitude\": 4, \"envelope\": \"twang 3\" }, { \"frequency\": \"1×\", \"amplitude\": 7, \"envelope\": \"steady\" }] } },\r\n                { name: \"koto\", midiProgram: 107, generalMidi: true, settings: { \"type\": \"FM\", \"effects\": \"reverb\", \"transition\": \"hard fade\", \"chord\": \"harmony\", \"filterCutoffHz\": 4000, \"filterResonance\": 14, \"filterEnvelope\": \"twang 2\", \"vibrato\": \"none\", \"algorithm\": \"1←3 2←4\", \"feedbackType\": \"1⟲ 2⟲\", \"feedbackAmplitude\": 5, \"feedbackEnvelope\": \"twang 2\", \"operators\": [{ \"frequency\": \"~1×\", \"amplitude\": 12, \"envelope\": \"custom\" }, { \"frequency\": \"6×\", \"amplitude\": 10, \"envelope\": \"custom\" }, { \"frequency\": \"4×\", \"amplitude\": 8, \"envelope\": \"twang 3\" }, { \"frequency\": \"~2×\", \"amplitude\": 8, \"envelope\": \"twang 3\" }] } },\r\n            ])\r\n        },\r\n        {\r\n            name: \"Distortion Presets\", presets: <DictionaryArray<Preset>>toNameMap([\r\n                { name: \"overdrive guitar\", midiProgram: 29, generalMidi: true, settings: { \"type\": \"Picked String\", \"eqFilter\": [{ \"type\": \"low-pass\", \"cutoffHz\": 4756.83, \"linearGain\": 0.7071 }, { \"type\": \"high-pass\", \"cutoffHz\": 210.22, \"linearGain\": 1 }, { \"type\": \"low-pass\", \"cutoffHz\": 5656.85, \"linearGain\": 1 }, { \"type\": \"peak\", \"cutoffHz\": 840.9, \"linearGain\": 0.5 }], \"effects\": [\"note filter\", \"distortion\"], \"noteFilter\": [{ \"type\": \"high-pass\", \"cutoffHz\": 297.3, \"linearGain\": 2 }, { \"type\": \"low-pass\", \"cutoffHz\": 2378.41, \"linearGain\": 0.7071 }], \"distortion\": 71, \"transition\": \"normal\", \"fadeInSeconds\": 0, \"fadeOutTicks\": 12, \"chord\": \"strum\", \"harmonics\": [86, 100, 100, 86, 86, 86, 86, 71, 71, 71, 71, 71, 71, 71, 71, 71, 71, 57, 57, 57, 57, 57, 57, 57, 57, 57, 57, 57], \"unison\": \"none\", \"stringSustain\": 71, \"envelopes\": [{ \"target\": \"noteFilterFreq\", \"envelope\": \"note size\", \"index\": 1 }] } },\r\n                { name: \"distortion guitar\", midiProgram: 30, generalMidi: true, settings: { \"type\": \"Picked String\", \"eqFilter\": [{ \"type\": \"low-pass\", \"cutoffHz\": 4756.83, \"linearGain\": 0.7071 }, { \"type\": \"high-pass\", \"cutoffHz\": 210.22, \"linearGain\": 1 }, { \"type\": \"low-pass\", \"cutoffHz\": 5656.85, \"linearGain\": 1 }, { \"type\": \"peak\", \"cutoffHz\": 594.6, \"linearGain\": 0.3536 }, { \"type\": \"peak\", \"cutoffHz\": 1000, \"linearGain\": 0.25 }], \"effects\": [\"note filter\", \"distortion\", \"reverb\"], \"noteFilter\": [{ \"type\": \"high-pass\", \"cutoffHz\": 353.55, \"linearGain\": 2 }, { \"type\": \"low-pass\", \"cutoffHz\": 2000, \"linearGain\": 1 }], \"distortion\": 86, \"reverb\": 67, \"transition\": \"normal\", \"fadeInSeconds\": 0, \"fadeOutTicks\": 12, \"chord\": \"strum\", \"harmonics\": [86, 100, 100, 86, 86, 86, 86, 71, 71, 71, 71, 71, 71, 71, 71, 71, 71, 57, 57, 57, 57, 57, 57, 57, 57, 57, 57, 57], \"unison\": \"none\", \"stringSustain\": 71, \"envelopes\": [{ \"target\": \"noteFilterFreq\", \"envelope\": \"note size\", \"index\": 1 }] } },\r\n                { name: \"charango synth\", midiProgram: 84, generalMidi: true, settings: { \"type\": \"FM\", \"eqFilter\": [{ \"type\": \"low-pass\", \"cutoffHz\": 11313.71, \"linearGain\": 1 }], \"effects\": [], \"transition\": \"normal\", \"fadeInSeconds\": 0, \"fadeOutTicks\": -3, \"chord\": \"strum\", \"algorithm\": \"1←(2 3←4)\", \"feedbackType\": \"1→2→3→4\", \"feedbackAmplitude\": 8, \"operators\": [{ \"frequency\": \"3×\", \"amplitude\": 13 }, { \"frequency\": \"~1×\", \"amplitude\": 5 }, { \"frequency\": \"4×\", \"amplitude\": 6 }, { \"frequency\": \"3×\", \"amplitude\": 7 }], \"envelopes\": [{ \"target\": \"feedbackAmplitude\", \"envelope\": \"twang 3\" }] } },\r\n                { name: \"guitar harmonics\", midiProgram: 31, generalMidi: true, settings: { \"type\": \"FM\", \"eqFilter\": [{ \"type\": \"low-pass\", \"cutoffHz\": 4000, \"linearGain\": 2 }], \"effects\": [\"reverb\"], \"reverb\": 33, \"transition\": \"normal\", \"fadeInSeconds\": 0, \"fadeOutTicks\": -3, \"chord\": \"strum\", \"algorithm\": \"1←(2 3)←4\", \"feedbackType\": \"1⟲\", \"feedbackAmplitude\": 2, \"operators\": [{ \"frequency\": \"4×\", \"amplitude\": 12 }, { \"frequency\": \"16×\", \"amplitude\": 5 }, { \"frequency\": \"1×\", \"amplitude\": 2 }, { \"frequency\": \"~1×\", \"amplitude\": 12 }], \"envelopes\": [{ \"target\": \"operatorAmplitude\", \"envelope\": \"swell 1\", \"index\": 1 }, { \"target\": \"operatorAmplitude\", \"envelope\": \"punch\", \"index\": 2 }, { \"target\": \"operatorAmplitude\", \"envelope\": \"twang 1\", \"index\": 3 }] } },\r\n                { name: \"PWM overdrive\", midiProgram: 29, settings: { \"type\": \"PWM\", \"eqFilter\": [{ \"type\": \"low-pass\", \"cutoffHz\": 5656.85, \"linearGain\": 1.4142 }], \"effects\": [], \"transition\": \"normal\", \"fadeInSeconds\": 0, \"fadeOutTicks\": -3, \"chord\": \"strum\", \"pulseWidth\": 17.67767, \"envelopes\": [{ \"target\": \"pulseWidth\", \"envelope\": \"punch\" }] } },\r\n                { name: \"PWM distortion\", midiProgram: 30, settings: { \"type\": \"PWM\", \"eqFilter\": [{ \"type\": \"low-pass\", \"cutoffHz\": 3363.59, \"linearGain\": 2 }], \"effects\": [\"vibrato\"], \"vibrato\": \"delayed\", \"transition\": \"normal\", \"fadeInSeconds\": 0, \"fadeOutTicks\": -3, \"chord\": \"strum\", \"pulseWidth\": 50, \"envelopes\": [{ \"target\": \"pulseWidth\", \"envelope\": \"swell 1\" }] } },\r\n                { name: \"FM overdrive\", midiProgram: 29, settings: { \"type\": \"FM\", \"eqFilter\": [{ \"type\": \"low-pass\", \"cutoffHz\": 4756.83, \"linearGain\": 1 }], \"effects\": [\"reverb\"], \"reverb\": 33, \"transition\": \"normal\", \"fadeInSeconds\": 0, \"fadeOutTicks\": -3, \"chord\": \"strum\", \"algorithm\": \"1←(2 3←4)\", \"feedbackType\": \"1→2\", \"feedbackAmplitude\": 2, \"operators\": [{ \"frequency\": \"~1×\", \"amplitude\": 15 }, { \"frequency\": \"1×\", \"amplitude\": 12 }, { \"frequency\": \"~2×\", \"amplitude\": 6 }, { \"frequency\": \"1×\", \"amplitude\": 12 }], \"envelopes\": [{ \"target\": \"operatorAmplitude\", \"envelope\": \"twang 1\", \"index\": 2 }, { \"target\": \"operatorAmplitude\", \"envelope\": \"swell 3\", \"index\": 3 }, { \"target\": \"feedbackAmplitude\", \"envelope\": \"punch\" }] } },\r\n                { name: \"FM distortion\", midiProgram: 30, settings: { \"type\": \"FM\", \"eqFilter\": [{ \"type\": \"low-pass\", \"cutoffHz\": 4000, \"linearGain\": 2 }], \"effects\": [\"reverb\"], \"reverb\": 33, \"transition\": \"normal\", \"fadeInSeconds\": 0, \"fadeOutTicks\": -3, \"chord\": \"strum\", \"algorithm\": \"1←(2 3←4)\", \"feedbackType\": \"1→2\", \"feedbackAmplitude\": 4, \"operators\": [{ \"frequency\": \"~1×\", \"amplitude\": 15 }, { \"frequency\": \"1×\", \"amplitude\": 11 }, { \"frequency\": \"1×\", \"amplitude\": 9 }, { \"frequency\": \"~2×\", \"amplitude\": 4 }], \"envelopes\": [{ \"target\": \"operatorAmplitude\", \"envelope\": \"swell 1\", \"index\": 2 }, { \"target\": \"operatorAmplitude\", \"envelope\": \"swell 3\", \"index\": 3 }] } },\r\n            ])\r\n        },\r\n        {\r\n            name: \"Bellows Presets\", presets: <DictionaryArray<Preset>>toNameMap([\r\n                { name: \"drawbar organ 1\", midiProgram: 16, generalMidi: true, midiSubharmonicOctaves: 1, settings: { \"type\": \"harmonics\", \"effects\": \"reverb\", \"transition\": \"hard\", \"chord\": \"harmony\", \"filterCutoffHz\": 2828, \"filterResonance\": 14, \"filterEnvelope\": \"steady\", \"interval\": \"union\", \"vibrato\": \"none\", \"harmonics\": [86, 86, 0, 86, 0, 0, 0, 86, 0, 0, 0, 0, 0, 0, 0, 86, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0] } },\r\n                { name: \"drawbar organ 2\", midiProgram: 16, midiSubharmonicOctaves: 1, settings: { \"type\": \"harmonics\", \"effects\": \"reverb\", \"transition\": \"hard\", \"chord\": \"harmony\", \"filterCutoffHz\": 2828, \"filterResonance\": 14, \"filterEnvelope\": \"steady\", \"interval\": \"union\", \"vibrato\": \"none\", \"harmonics\": [86, 29, 71, 86, 71, 14, 0, 100, 0, 0, 0, 86, 0, 0, 0, 71, 0, 0, 0, 57, 0, 0, 0, 29, 0, 0, 0, 0] } },\r\n                { name: \"percussive organ\", midiProgram: 17, generalMidi: true, midiSubharmonicOctaves: 1, settings: { \"type\": \"FM\", \"transition\": \"hard\", \"effects\": \"reverb\", \"chord\": \"harmony\", \"filterCutoffHz\": 2000, \"filterResonance\": 14, \"filterEnvelope\": \"punch\", \"vibrato\": \"light\", \"algorithm\": \"1 2 3 4\", \"feedbackType\": \"1→3 2→4\", \"feedbackAmplitude\": 7, \"feedbackEnvelope\": \"decay 1\", \"operators\": [{ \"frequency\": \"1×\", \"amplitude\": 7, \"envelope\": \"custom\" }, { \"frequency\": \"2×\", \"amplitude\": 7, \"envelope\": \"custom\" }, { \"frequency\": \"3×\", \"amplitude\": 8, \"envelope\": \"custom\" }, { \"frequency\": \"4×\", \"amplitude\": 8, \"envelope\": \"custom\" }] } },\r\n                { name: \"rock organ\", midiProgram: 18, generalMidi: true, midiSubharmonicOctaves: 1, settings: { \"type\": \"FM\", \"effects\": \"chorus & reverb\", \"transition\": \"hard\", \"chord\": \"harmony\", \"filterCutoffHz\": 4000, \"filterResonance\": 14, \"filterEnvelope\": \"punch\", \"vibrato\": \"delayed\", \"algorithm\": \"(1 2 3)←4\", \"feedbackType\": \"1⟲ 2⟲ 3⟲\", \"feedbackAmplitude\": 2, \"feedbackEnvelope\": \"flare 1\", \"operators\": [{ \"frequency\": \"1×\", \"amplitude\": 9, \"envelope\": \"custom\" }, { \"frequency\": \"4×\", \"amplitude\": 9, \"envelope\": \"custom\" }, { \"frequency\": \"6×\", \"amplitude\": 9, \"envelope\": \"custom\" }, { \"frequency\": \"2×\", \"amplitude\": 5, \"envelope\": \"steady\" }] } },\r\n                { name: \"pipe organ\", midiProgram: 19, generalMidi: true, midiSubharmonicOctaves: 1, settings: { \"type\": \"FM\", \"transition\": \"cross fade\", \"effects\": \"reverb\", \"chord\": \"harmony\", \"filterCutoffHz\": 5657, \"filterResonance\": 43, \"filterEnvelope\": \"steady\", \"vibrato\": \"none\", \"algorithm\": \"1 2 3 4\", \"feedbackType\": \"1⟲ 2⟲ 3⟲ 4⟲\", \"feedbackAmplitude\": 5, \"feedbackEnvelope\": \"steady\", \"operators\": [{ \"frequency\": \"1×\", \"amplitude\": 8, \"envelope\": \"custom\" }, { \"frequency\": \"2×\", \"amplitude\": 9, \"envelope\": \"custom\" }, { \"frequency\": \"4×\", \"amplitude\": 9, \"envelope\": \"custom\" }, { \"frequency\": \"8×\", \"amplitude\": 8, \"envelope\": \"custom\" }] } },\r\n                { name: \"reed organ\", midiProgram: 20, generalMidi: true, settings: { \"type\": \"harmonics\", \"effects\": \"reverb\", \"transition\": \"soft\", \"chord\": \"harmony\", \"filterCutoffHz\": 2000, \"filterResonance\": 29, \"filterEnvelope\": \"steady\", \"interval\": \"union\", \"vibrato\": \"none\", \"harmonics\": [71, 86, 100, 86, 71, 100, 57, 71, 71, 71, 43, 43, 43, 71, 43, 71, 57, 57, 57, 57, 57, 57, 57, 29, 43, 29, 29, 14] } },\r\n                { name: \"accordion\", midiProgram: 21, generalMidi: true, settings: { \"type\": \"chip\", \"effects\": \"reverb\", \"transition\": \"cross fade\", \"chord\": \"harmony\", \"filterCutoffHz\": 5657, \"filterResonance\": 0, \"filterEnvelope\": \"swell 1\", \"wave\": \"double saw\", \"interval\": \"honky tonk\", \"vibrato\": \"none\" } },\r\n                { name: \"bandoneon\", midiProgram: 23, generalMidi: true, settings: { \"type\": \"harmonics\", \"effects\": \"reverb\", \"transition\": \"soft\", \"chord\": \"harmony\", \"filterCutoffHz\": 4000, \"filterResonance\": 29, \"filterEnvelope\": \"swell 1\", \"interval\": \"hum\", \"vibrato\": \"none\", \"harmonics\": [86, 86, 86, 57, 71, 86, 57, 71, 71, 71, 57, 43, 57, 43, 71, 43, 71, 57, 57, 43, 43, 43, 57, 43, 43, 29, 29, 29] } },\r\n                { name: \"bagpipe\", midiProgram: 109, generalMidi: true, settings: { \"type\": \"harmonics\", \"effects\": \"reverb\", \"transition\": \"cross fade\", \"chord\": \"harmony\", \"filterCutoffHz\": 5657, \"filterResonance\": 43, \"filterEnvelope\": \"punch\", \"interval\": \"hum\", \"vibrato\": \"none\", \"harmonics\": [71, 86, 86, 100, 100, 86, 57, 100, 86, 71, 71, 71, 57, 57, 57, 71, 57, 71, 57, 71, 43, 57, 57, 43, 43, 43, 43, 43] } },\r\n            ])\r\n        },\r\n        {\r\n            name: \"String Presets\", presets: <DictionaryArray<Preset>>toNameMap([\r\n                { name: \"violin 1\", midiProgram: 40, generalMidi: true, settings: { \"type\": \"FM\", \"eqFilter\": [{ \"type\": \"low-pass\", \"cutoffHz\": 4000, \"linearGain\": 1.4142 }, { \"type\": \"high-pass\", \"cutoffHz\": 105.11, \"linearGain\": 0.3536 }], \"effects\": [\"vibrato\", \"reverb\"], \"vibrato\": \"delayed\", \"reverb\": 67, \"transition\": \"normal\", \"fadeInSeconds\": 0.0413, \"fadeOutTicks\": 6, \"chord\": \"simultaneous\", \"algorithm\": \"(1 2)←(3 4)\", \"feedbackType\": \"1→2\", \"feedbackAmplitude\": 5, \"operators\": [{ \"frequency\": \"4×\", \"amplitude\": 9 }, { \"frequency\": \"3×\", \"amplitude\": 9 }, { \"frequency\": \"2×\", \"amplitude\": 7 }, { \"frequency\": \"7×\", \"amplitude\": 5 }], \"envelopes\": [{ \"target\": \"operatorAmplitude\", \"envelope\": \"swell 1\", \"index\": 3 }, { \"target\": \"feedbackAmplitude\", \"envelope\": \"twang 3\" }] } },\r\n                { name: \"viola\", midiProgram: 41, generalMidi: true, settings: { \"type\": \"FM\", \"effects\": \"reverb\", \"transition\": \"cross fade\", \"chord\": \"harmony\", \"filterCutoffHz\": 2000, \"filterResonance\": 29, \"filterEnvelope\": \"steady\", \"vibrato\": \"delayed\", \"algorithm\": \"(1 2 3)←4\", \"feedbackType\": \"1⟲ 2⟲ 3⟲\", \"feedbackAmplitude\": 8, \"feedbackEnvelope\": \"swell 1\", \"operators\": [{ \"frequency\": \"2×\", \"amplitude\": 11, \"envelope\": \"custom\" }, { \"frequency\": \"7×\", \"amplitude\": 7, \"envelope\": \"custom\" }, { \"frequency\": \"13×\", \"amplitude\": 4, \"envelope\": \"custom\" }, { \"frequency\": \"1×\", \"amplitude\": 5, \"envelope\": \"steady\" }] } },\r\n                { name: \"cello\", midiProgram: 42, generalMidi: true, settings: { \"type\": \"FM\", \"eqFilter\": [{ \"type\": \"low-pass\", \"cutoffHz\": 4000, \"linearGain\": 0.1768 }, { \"type\": \"high-pass\", \"cutoffHz\": 297.3, \"linearGain\": 0.7071 }, { \"type\": \"peak\", \"cutoffHz\": 4756.83, \"linearGain\": 5.6569 }], \"effects\": [\"note filter\", \"reverb\"], \"noteFilter\": [{ \"type\": \"low-pass\", \"cutoffHz\": 16000, \"linearGain\": 0.0884 }], \"reverb\": 67, \"transition\": \"normal\", \"fadeInSeconds\": 0.0125, \"fadeOutTicks\": 12, \"chord\": \"simultaneous\", \"algorithm\": \"(1 2)←3←4\", \"feedbackType\": \"1⟲ 2⟲\", \"feedbackAmplitude\": 3, \"operators\": [{ \"frequency\": \"16×\", \"amplitude\": 5 }, { \"frequency\": \"~1×\", \"amplitude\": 10 }, { \"frequency\": \"1×\", \"amplitude\": 9 }, { \"frequency\": \"6×\", \"amplitude\": 3 }], \"envelopes\": [{ \"target\": \"noteFilterAllFreqs\", \"envelope\": \"swell 1\" }, { \"target\": \"operatorAmplitude\", \"envelope\": \"swell 1\", \"index\": 3 }] } },\r\n                { name: \"contrabass\", midiProgram: 43, generalMidi: true, settings: { \"type\": \"FM\", \"effects\": \"reverb\", \"transition\": \"cross fade\", \"chord\": \"harmony\", \"filterCutoffHz\": 2000, \"filterResonance\": 29, \"filterEnvelope\": \"steady\", \"vibrato\": \"delayed\", \"algorithm\": \"(1 2)←3←4\", \"feedbackType\": \"1⟲ 2⟲\", \"feedbackAmplitude\": 0, \"feedbackEnvelope\": \"steady\", \"operators\": [{ \"frequency\": \"16×\", \"amplitude\": 5, \"envelope\": \"custom\" }, { \"frequency\": \"1×\", \"amplitude\": 10, \"envelope\": \"custom\" }, { \"frequency\": \"1×\", \"amplitude\": 10, \"envelope\": \"steady\" }, { \"frequency\": \"6×\", \"amplitude\": 3, \"envelope\": \"swell 1\" }] } },\r\n                { name: \"fiddle\", midiProgram: 110, generalMidi: true, settings: { \"type\": \"FM\", \"effects\": \"reverb\", \"transition\": \"soft\", \"chord\": \"harmony\", \"filterCutoffHz\": 2828, \"filterResonance\": 29, \"filterEnvelope\": \"steady\", \"vibrato\": \"delayed\", \"algorithm\": \"(1 2)←(3 4)\", \"feedbackType\": \"3⟲ 4⟲\", \"feedbackAmplitude\": 5, \"feedbackEnvelope\": \"twang 1\", \"operators\": [{ \"frequency\": \"2×\", \"amplitude\": 10, \"envelope\": \"custom\" }, { \"frequency\": \"8×\", \"amplitude\": 8, \"envelope\": \"custom\" }, { \"frequency\": \"1×\", \"amplitude\": 8, \"envelope\": \"steady\" }, { \"frequency\": \"16×\", \"amplitude\": 3, \"envelope\": \"steady\" }] } },\r\n                { name: \"tremolo strings\", midiProgram: 44, generalMidi: true, settings: { \"type\": \"FM\", \"effects\": \"chorus & reverb\", \"transition\": \"medium fade\", \"chord\": \"harmony\", \"filterCutoffHz\": 2000, \"filterResonance\": 0, \"filterEnvelope\": \"tremolo4\", \"vibrato\": \"none\", \"algorithm\": \"1 2 3 4\", \"feedbackType\": \"1→2→3→4\", \"feedbackAmplitude\": 12, \"feedbackEnvelope\": \"steady\", \"operators\": [{ \"frequency\": \"1×\", \"amplitude\": 8, \"envelope\": \"custom\" }, { \"frequency\": \"~2×\", \"amplitude\": 8, \"envelope\": \"custom\" }, { \"frequency\": \"4×\", \"amplitude\": 8, \"envelope\": \"custom\" }, { \"frequency\": \"7×\", \"amplitude\": 8, \"envelope\": \"custom\" }] } },\r\n                { name: \"strings\", midiProgram: 48, generalMidi: true, settings: { \"type\": \"FM\", \"effects\": \"chorus & reverb\", \"transition\": \"cross fade\", \"chord\": \"harmony\", \"filterCutoffHz\": 2828, \"filterResonance\": 43, \"filterEnvelope\": \"steady\", \"vibrato\": \"none\", \"algorithm\": \"(1 2)←(3 4)\", \"feedbackType\": \"4⟲\", \"feedbackAmplitude\": 5, \"feedbackEnvelope\": \"twang 3\", \"operators\": [{ \"frequency\": \"4×\", \"amplitude\": 9, \"envelope\": \"custom\" }, { \"frequency\": \"3×\", \"amplitude\": 9, \"envelope\": \"custom\" }, { \"frequency\": \"2×\", \"amplitude\": 7, \"envelope\": \"steady\" }, { \"frequency\": \"7×\", \"amplitude\": 3, \"envelope\": \"swell 1\" }] } },\r\n                { name: \"slow strings\", midiProgram: 49, generalMidi: true, settings: { \"type\": \"FM\", \"effects\": \"chorus & reverb\", \"transition\": \"soft fade\", \"chord\": \"harmony\", \"filterCutoffHz\": 1414, \"filterResonance\": 0, \"filterEnvelope\": \"swell 2\", \"vibrato\": \"none\", \"algorithm\": \"(1 2)←(3 4)\", \"feedbackType\": \"4⟲\", \"feedbackAmplitude\": 6, \"feedbackEnvelope\": \"flare 3\", \"operators\": [{ \"frequency\": \"4×\", \"amplitude\": 10, \"envelope\": \"custom\" }, { \"frequency\": \"3×\", \"amplitude\": 10, \"envelope\": \"custom\" }, { \"frequency\": \"2×\", \"amplitude\": 7, \"envelope\": \"steady\" }, { \"frequency\": \"7×\", \"amplitude\": 4, \"envelope\": \"swell 1\" }] } },\r\n                { name: \"strings synth 1\", midiProgram: 50, generalMidi: true, settings: { \"type\": \"chip\", \"transition\": \"soft fade\", \"effects\": \"chorus & reverb\", \"chord\": \"harmony\", \"filterCutoffHz\": 1414, \"filterResonance\": 43, \"filterEnvelope\": \"steady\", \"wave\": \"sawtooth\", \"interval\": \"hum\", \"vibrato\": \"delayed\" } },\r\n                { name: \"strings synth 2\", midiProgram: 51, generalMidi: true, settings: { \"type\": \"FM\", \"effects\": \"chorus & reverb\", \"transition\": \"soft fade\", \"chord\": \"harmony\", \"filterCutoffHz\": 2000, \"filterResonance\": 43, \"filterEnvelope\": \"steady\", \"vibrato\": \"none\", \"algorithm\": \"1 2 3 4\", \"feedbackType\": \"1⟲ 2⟲ 3⟲ 4⟲\", \"feedbackAmplitude\": 12, \"feedbackEnvelope\": \"swell 1\", \"operators\": [{ \"frequency\": \"3×\", \"amplitude\": 6, \"envelope\": \"custom\" }, { \"frequency\": \"2×\", \"amplitude\": 7, \"envelope\": \"custom\" }, { \"frequency\": \"1×\", \"amplitude\": 8, \"envelope\": \"custom\" }, { \"frequency\": \"1×\", \"amplitude\": 9, \"envelope\": \"custom\" }] } },\r\n                { name: \"orchestra hit 1\", midiProgram: 55, generalMidi: true, midiSubharmonicOctaves: 1, settings: { \"type\": \"FM\", \"effects\": \"chorus & reverb\", \"transition\": \"hard fade\", \"chord\": \"harmony\", \"filterCutoffHz\": 8000, \"filterResonance\": 14, \"filterEnvelope\": \"custom\", \"vibrato\": \"none\", \"algorithm\": \"1 2 3 4\", \"feedbackType\": \"1⟲ 2⟲ 3⟲ 4⟲\", \"feedbackAmplitude\": 14, \"feedbackEnvelope\": \"twang 3\", \"operators\": [{ \"frequency\": \"1×\", \"amplitude\": 15, \"envelope\": \"twang 3\" }, { \"frequency\": \"2×\", \"amplitude\": 15, \"envelope\": \"flare 3\" }, { \"frequency\": \"4×\", \"amplitude\": 15, \"envelope\": \"flare 2\" }, { \"frequency\": \"8×\", \"amplitude\": 15, \"envelope\": \"flare 1\" }] } },\r\n                { name: \"violin 2\", midiProgram: 40, generalMidi: true, settings: { \"type\": \"FM\", \"eqFilter\": [{ \"type\": \"low-pass\", \"cutoffHz\": 2828, \"linearGain\": 1.4142 }, { \"type\": \"high-pass\", \"cutoffHz\": 105.11, \"linearGain\": 0.3536 }], \"effects\": [\"vibrato\", \"reverb\"], \"vibrato\": \"light\", \"reverb\": 67, \"transition\": \"normal\", \"fadeInSeconds\": 0.0413, \"fadeOutTicks\": 6, \"chord\": \"simultaneous\", \"algorithm\": \"(1 2)←(3 4)\", \"feedbackType\": \"4⟲\", \"feedbackAmplitude\": 5, \"feedbackEnvelope\": \"twang 3\", \"operators\": [{ \"frequency\": \"4×\", \"amplitude\": 15, \"envelope\": \"custom\" }, { \"frequency\": \"3×\", \"amplitude\": 13, \"envelope\": \"custom\" }, { \"frequency\": \"2×\", \"amplitude\": 7, \"envelope\": \"steady\" }, { \"frequency\": \"7×\", \"amplitude\": 8, \"envelope\": \"swell 1\" }] } },\r\n                { name: \"orchestra hit 2\", midiProgram: 55, midiSubharmonicOctaves: 1, settings: { \"type\": \"FM\", \"effects\": \"chorus & reverb\", \"transition\": \"medium fade\", \"chord\": \"harmony\", \"filterCutoffHz\": 8000, \"filterResonance\": 0, \"filterEnvelope\": \"decay 1\", \"vibrato\": \"delayed\", \"algorithm\": \"1 2 3 4\", \"feedbackType\": \"1⟲ 2⟲ 3⟲ 4⟲\", \"feedbackAmplitude\": 14, \"feedbackEnvelope\": \"steady\", \"operators\": [{ \"frequency\": \"1×\", \"amplitude\": 12, \"envelope\": \"custom\" }, { \"frequency\": \"2×\", \"amplitude\": 14, \"envelope\": \"custom\" }, { \"frequency\": \"3×\", \"amplitude\": 12, \"envelope\": \"custom\" }, { \"frequency\": \"4×\", \"amplitude\": 14, \"envelope\": \"custom\" }] } },\r\n            ])\r\n        },\r\n        {\r\n            name: \"Vocal Presets\", presets: <DictionaryArray<Preset>>toNameMap([\r\n                { name: \"choir soprano\", midiProgram: 94, generalMidi: true, settings: { \"type\": \"harmonics\", \"eqFilter\": [{ \"type\": \"low-pass\", \"cutoffHz\": 2828.43, \"linearGain\": 2 }, { \"type\": \"peak\", \"cutoffHz\": 1189.21, \"linearGain\": 5.6569 }, { \"type\": \"high-pass\", \"cutoffHz\": 707.11, \"linearGain\": 2.8284 }, { \"type\": \"peak\", \"cutoffHz\": 2000, \"linearGain\": 0.0884 }, { \"type\": \"peak\", \"cutoffHz\": 840.9, \"linearGain\": 0.25 }, { \"type\": \"low-pass\", \"cutoffHz\": 6727.17, \"linearGain\": 11.3137 }], \"effects\": [\"vibrato\", \"chorus\", \"reverb\"], \"vibrato\": \"shaky\", \"chorus\": 100, \"reverb\": 33, \"fadeInSeconds\": 0.0413, \"fadeOutTicks\": 24, \"harmonics\": [100, 100, 86, 57, 29, 29, 57, 71, 57, 29, 14, 14, 14, 29, 43, 57, 43, 29, 14, 14, 14, 14, 14, 14, 0, 0, 0, 0], \"unison\": \"none\", \"envelopes\": [] } },\r\n                { name: \"choir tenor\", midiProgram: 52, generalMidi: true, settings: { \"type\": \"harmonics\", \"eqFilter\": [{ \"type\": \"peak\", \"cutoffHz\": 1000, \"linearGain\": 11.3137 }, { \"type\": \"peak\", \"cutoffHz\": 707.11, \"linearGain\": 5.6569 }, { \"type\": \"peak\", \"cutoffHz\": 840.9, \"linearGain\": 0.0884 }, { \"type\": \"peak\", \"cutoffHz\": 1681.79, \"linearGain\": 0.0884 }, { \"type\": \"high-pass\", \"cutoffHz\": 297.3, \"linearGain\": 0.7071 }, { \"type\": \"low-pass\", \"cutoffHz\": 2828.43, \"linearGain\": 11.3137 }], \"effects\": [\"vibrato\", \"chorus\", \"reverb\"], \"vibrato\": \"shaky\", \"chorus\": 100, \"reverb\": 67, \"transition\": \"normal\", \"fadeInSeconds\": 0.0413, \"fadeOutTicks\": 48, \"chord\": \"simultaneous\", \"harmonics\": [86, 100, 100, 86, 71, 57, 43, 29, 29, 29, 29, 43, 43, 43, 29, 29, 29, 29, 29, 29, 29, 29, 29, 14, 14, 14, 14, 14], \"unison\": \"none\", \"envelopes\": [] } },\r\n                { name: \"choir bass\", midiProgram: 52, settings: { \"type\": \"harmonics\", \"eqFilter\": [{ \"type\": \"low-pass\", \"cutoffHz\": 2378.41, \"linearGain\": 11.3137 }, { \"type\": \"peak\", \"cutoffHz\": 594.6, \"linearGain\": 5.6569 }, { \"type\": \"peak\", \"cutoffHz\": 1681.79, \"linearGain\": 0.0884 }, { \"type\": \"peak\", \"cutoffHz\": 707.11, \"linearGain\": 0.0884 }, { \"type\": \"peak\", \"cutoffHz\": 840.9, \"linearGain\": 11.3137 }], \"effects\": [\"vibrato\", \"chorus\", \"reverb\"], \"vibrato\": \"shaky\", \"chorus\": 100, \"reverb\": 67, \"transition\": \"normal\", \"fadeInSeconds\": 0.0413, \"fadeOutTicks\": 48, \"chord\": \"simultaneous\", \"harmonics\": [71, 86, 100, 100, 86, 86, 57, 43, 29, 29, 29, 29, 29, 29, 43, 43, 43, 43, 43, 29, 29, 29, 29, 14, 14, 14, 14, 14], \"unison\": \"none\", \"envelopes\": [] } },\r\n                { name: \"solo soprano\", midiProgram: 85, settings: { \"type\": \"harmonics\", \"eqFilter\": [{ \"type\": \"low-pass\", \"cutoffHz\": 2828.43, \"linearGain\": 2 }, { \"type\": \"peak\", \"cutoffHz\": 1189.21, \"linearGain\": 5.6569 }, { \"type\": \"high-pass\", \"cutoffHz\": 707.11, \"linearGain\": 2.8284 }, { \"type\": \"peak\", \"cutoffHz\": 2000, \"linearGain\": 0.0884 }, { \"type\": \"peak\", \"cutoffHz\": 840.9, \"linearGain\": 0.25 }], \"effects\": [\"vibrato\", \"reverb\"], \"vibrato\": \"shaky\", \"reverb\": 33, \"fadeInSeconds\": 0.0413, \"fadeOutTicks\": 12, \"harmonics\": [86, 100, 86, 43, 14, 14, 57, 71, 57, 14, 14, 14, 14, 14, 43, 57, 43, 14, 14, 14, 14, 14, 14, 14, 0, 0, 0, 0], \"unison\": \"none\", \"envelopes\": [] } },\r\n                { name: \"solo tenor\", midiProgram: 85, settings: { \"type\": \"harmonics\", \"eqFilter\": [{ \"type\": \"peak\", \"cutoffHz\": 1000, \"linearGain\": 11.3137 }, { \"type\": \"peak\", \"cutoffHz\": 707.11, \"linearGain\": 5.6569 }, { \"type\": \"peak\", \"cutoffHz\": 840.9, \"linearGain\": 0.0884 }, { \"type\": \"peak\", \"cutoffHz\": 1681.79, \"linearGain\": 0.0884 }, { \"type\": \"high-pass\", \"cutoffHz\": 297.3, \"linearGain\": 0.7071 }, { \"type\": \"low-pass\", \"cutoffHz\": 2828.43, \"linearGain\": 11.3137 }], \"effects\": [\"vibrato\", \"reverb\"], \"vibrato\": \"shaky\", \"reverb\": 33, \"fadeInSeconds\": 0.0413, \"fadeOutTicks\": 12, \"harmonics\": [86, 100, 100, 86, 71, 57, 43, 29, 29, 29, 29, 43, 43, 43, 29, 29, 29, 29, 29, 29, 29, 29, 29, 14, 14, 14, 14, 14], \"unison\": \"none\", \"envelopes\": [] } },\r\n                { name: \"solo bass\", midiProgram: 85, settings: { \"type\": \"harmonics\", \"eqFilter\": [{ \"type\": \"low-pass\", \"cutoffHz\": 2378.41, \"linearGain\": 5.6569 }, { \"type\": \"peak\", \"cutoffHz\": 594.6, \"linearGain\": 8 }, { \"type\": \"peak\", \"cutoffHz\": 1681.79, \"linearGain\": 0.0884 }, { \"type\": \"peak\", \"cutoffHz\": 707.11, \"linearGain\": 0.0884 }, { \"type\": \"peak\", \"cutoffHz\": 840.9, \"linearGain\": 8 }, { \"type\": \"high-pass\", \"cutoffHz\": 210.22, \"linearGain\": 1.4142 }], \"effects\": [\"vibrato\", \"reverb\"], \"vibrato\": \"shaky\", \"reverb\": 33, \"transition\": \"normal\", \"fadeInSeconds\": 0.0263, \"fadeOutTicks\": 12, \"chord\": \"simultaneous\", \"harmonics\": [71, 86, 100, 100, 86, 86, 57, 43, 29, 29, 29, 29, 29, 29, 43, 43, 43, 43, 43, 29, 29, 29, 29, 14, 14, 14, 14, 14], \"unison\": \"none\", \"envelopes\": [] } },\r\n                { name: \"voice ooh\", midiProgram: 53, generalMidi: true, settings: { \"type\": \"harmonics\", \"effects\": \"reverb\", \"transition\": \"soft\", \"chord\": \"harmony\", \"filterCutoffHz\": 1414, \"filterResonance\": 57, \"filterEnvelope\": \"steady\", \"interval\": \"union\", \"vibrato\": \"shaky\", \"harmonics\": [100, 57, 43, 43, 14, 14, 0, 0, 0, 14, 29, 29, 14, 0, 14, 29, 29, 14, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0] } },\r\n                { name: \"voice synth\", midiProgram: 54, generalMidi: true, settings: { \"type\": \"chip\", \"transition\": \"medium fade\", \"effects\": \"chorus & reverb\", \"chord\": \"harmony\", \"filterCutoffHz\": 4000, \"filterResonance\": 57, \"filterEnvelope\": \"steady\", \"wave\": \"rounded\", \"interval\": \"union\", \"vibrato\": \"light\" } },\r\n                { name: \"vox synth lead\", midiProgram: 85, generalMidi: true, settings: { \"type\": \"FM\", \"effects\": \"chorus & reverb\", \"transition\": \"cross fade\", \"chord\": \"harmony\", \"filterCutoffHz\": 2828, \"filterResonance\": 14, \"filterEnvelope\": \"steady\", \"vibrato\": \"light\", \"algorithm\": \"(1 2 3)←4\", \"feedbackType\": \"1→2→3→4\", \"feedbackAmplitude\": 2, \"feedbackEnvelope\": \"punch\", \"operators\": [{ \"frequency\": \"2×\", \"amplitude\": 10, \"envelope\": \"custom\" }, { \"frequency\": \"9×\", \"amplitude\": 5, \"envelope\": \"custom\" }, { \"frequency\": \"20×\", \"amplitude\": 1, \"envelope\": \"custom\" }, { \"frequency\": \"~1×\", \"amplitude\": 4, \"envelope\": \"steady\" }] } },\r\n                { name: \"tiny robot\", midiProgram: 85, settings: { \"type\": \"FM\", \"eqFilter\": [], \"effects\": [\"vibrato\", \"reverb\"], \"vibrato\": \"delayed\", \"reverb\": 33, \"transition\": \"slide\", \"fadeInSeconds\": 0.0263, \"fadeOutTicks\": -3, \"chord\": \"simultaneous\", \"algorithm\": \"1←(2 3 4)\", \"feedbackType\": \"1⟲\", \"feedbackAmplitude\": 2, \"operators\": [{ \"frequency\": \"2×\", \"amplitude\": 15 }, { \"frequency\": \"1×\", \"amplitude\": 7 }, { \"frequency\": \"~1×\", \"amplitude\": 7 }, { \"frequency\": \"1×\", \"amplitude\": 0 }], \"envelopes\": [{ \"target\": \"operatorAmplitude\", \"envelope\": \"punch\", \"index\": 1 }, { \"target\": \"feedbackAmplitude\", \"envelope\": \"twang 3\" }] } },\r\n                { name: \"yowie\", midiProgram: 85, settings: { \"type\": \"FM\", \"effects\": \"reverb\", \"transition\": \"cross fade\", \"chord\": \"harmony\", \"filterCutoffHz\": 2000, \"filterResonance\": 86, \"filterEnvelope\": \"tremolo5\", \"vibrato\": \"none\", \"algorithm\": \"1←2←(3 4)\", \"feedbackType\": \"1⟲\", \"feedbackAmplitude\": 12, \"feedbackEnvelope\": \"tremolo3\", \"operators\": [{ \"frequency\": \"2×\", \"amplitude\": 12, \"envelope\": \"custom\" }, { \"frequency\": \"16×\", \"amplitude\": 5, \"envelope\": \"steady\" }, { \"frequency\": \"1×\", \"amplitude\": 5, \"envelope\": \"steady\" }, { \"frequency\": \"1×\", \"amplitude\": 0, \"envelope\": \"steady\" }] } },\r\n                { name: \"mouse\", midiProgram: 85, settings: { \"type\": \"FM\", \"eqFilter\": [], \"effects\": [\"vibrato\", \"reverb\"], \"vibrato\": \"light\", \"reverb\": 33, \"transition\": \"slide in pattern\", \"fadeInSeconds\": 0.0263, \"fadeOutTicks\": -3, \"chord\": \"simultaneous\", \"algorithm\": \"1 2 3 4\", \"feedbackType\": \"1⟲ 2⟲\", \"feedbackAmplitude\": 5, \"operators\": [{ \"frequency\": \"2×\", \"amplitude\": 13 }, { \"frequency\": \"5×\", \"amplitude\": 12 }, { \"frequency\": \"1×\", \"amplitude\": 0 }, { \"frequency\": \"1×\", \"amplitude\": 0 }], \"envelopes\": [{ \"target\": \"noteVolume\", \"envelope\": \"note size\" }, { \"target\": \"feedbackAmplitude\", \"envelope\": \"flare 2\" }] } },\r\n                { name: \"gumdrop\", midiProgram: 85, settings: { \"type\": \"FM\", \"effects\": \"reverb\", \"transition\": \"hard\", \"chord\": \"harmony\", \"filterCutoffHz\": 8000, \"filterResonance\": 0, \"filterEnvelope\": \"steady\", \"vibrato\": \"none\", \"algorithm\": \"(1 2 3)←4\", \"feedbackType\": \"1⟲ 2⟲ 3⟲\", \"feedbackAmplitude\": 0, \"feedbackEnvelope\": \"steady\", \"operators\": [{ \"frequency\": \"2×\", \"amplitude\": 15, \"envelope\": \"punch\" }, { \"frequency\": \"4×\", \"amplitude\": 15, \"envelope\": \"punch\" }, { \"frequency\": \"7×\", \"amplitude\": 15, \"envelope\": \"punch\" }, { \"frequency\": \"1×\", \"amplitude\": 10, \"envelope\": \"twang 1\" }] } },\r\n                { name: \"echo drop\", midiProgram: 102, generalMidi: true, settings: { \"type\": \"FM\", \"effects\": \"chorus & reverb\", \"transition\": \"hard\", \"chord\": \"harmony\", \"filterCutoffHz\": 2828, \"filterResonance\": 14, \"filterEnvelope\": \"punch\", \"vibrato\": \"none\", \"algorithm\": \"1←(2 3←4)\", \"feedbackType\": \"1⟲\", \"feedbackAmplitude\": 2, \"feedbackEnvelope\": \"steady\", \"operators\": [{ \"frequency\": \"~2×\", \"amplitude\": 11, \"envelope\": \"custom\" }, { \"frequency\": \"~1×\", \"amplitude\": 5, \"envelope\": \"steady\" }, { \"frequency\": \"11×\", \"amplitude\": 2, \"envelope\": \"steady\" }, { \"frequency\": \"16×\", \"amplitude\": 5, \"envelope\": \"swell 3\" }] } },\r\n                { name: \"dark choir\", midiProgram: 85, settings: { \"type\": \"spectrum\", \"effects\": \"reverb\", \"transition\": \"soft\", \"chord\": \"harmony\", \"filterCutoffHz\": 4000, \"filterResonance\": 29, \"filterEnvelope\": \"swell 1\", \"spectrum\": [43, 14, 14, 14, 14, 14, 14, 100, 14, 14, 14, 57, 14, 14, 100, 14, 43, 14, 43, 14, 14, 43, 14, 29, 14, 29, 14, 14, 29, 0] } },\r\n            ])\r\n        },\r\n        {\r\n            name: \"Brass Presets\", presets: <DictionaryArray<Preset>>toNameMap([\r\n                { name: \"trumpet\", midiProgram: 56, generalMidi: true, settings: { \"type\": \"FM\", \"effects\": \"reverb\", \"transition\": \"soft\", \"chord\": \"harmony\", \"filterCutoffHz\": 2828, \"filterResonance\": 43, \"filterEnvelope\": \"steady\", \"vibrato\": \"none\", \"algorithm\": \"1←(2 3 4)\", \"feedbackType\": \"1⟲\", \"feedbackAmplitude\": 9, \"feedbackEnvelope\": \"swell 1\", \"operators\": [{ \"frequency\": \"1×\", \"amplitude\": 14, \"envelope\": \"custom\" }, { \"frequency\": \"1×\", \"amplitude\": 8, \"envelope\": \"steady\" }, { \"frequency\": \"1×\", \"amplitude\": 5, \"envelope\": \"flare 2\" }, { \"frequency\": \"1×\", \"amplitude\": 0, \"envelope\": \"steady\" }] } },\r\n                { name: \"trombone\", midiProgram: 57, generalMidi: true, settings: { \"type\": \"FM\", \"effects\": \"reverb\", \"transition\": \"soft\", \"chord\": \"harmony\", \"filterCutoffHz\": 2000, \"filterResonance\": 43, \"filterEnvelope\": \"steady\", \"vibrato\": \"none\", \"algorithm\": \"1←(2 3 4)\", \"feedbackType\": \"2⟲\", \"feedbackAmplitude\": 7, \"feedbackEnvelope\": \"swell 1\", \"operators\": [{ \"frequency\": \"1×\", \"amplitude\": 14, \"envelope\": \"custom\" }, { \"frequency\": \"1×\", \"amplitude\": 8, \"envelope\": \"steady\" }, { \"frequency\": \"1×\", \"amplitude\": 0, \"envelope\": \"steady\" }, { \"frequency\": \"1×\", \"amplitude\": 0, \"envelope\": \"steady\" }] } },\r\n                { name: \"tuba\", midiProgram: 58, generalMidi: true, settings: { \"type\": \"FM\", \"effects\": \"reverb\", \"transition\": \"soft\", \"chord\": \"harmony\", \"filterCutoffHz\": 2000, \"filterResonance\": 43, \"filterEnvelope\": \"steady\", \"vibrato\": \"none\", \"algorithm\": \"1←(2 3 4)\", \"feedbackType\": \"2⟲\", \"feedbackAmplitude\": 8, \"feedbackEnvelope\": \"swell 1\", \"operators\": [{ \"frequency\": \"1×\", \"amplitude\": 14, \"envelope\": \"custom\" }, { \"frequency\": \"1×\", \"amplitude\": 6, \"envelope\": \"steady\" }, { \"frequency\": \"1×\", \"amplitude\": 0, \"envelope\": \"steady\" }, { \"frequency\": \"1×\", \"amplitude\": 0, \"envelope\": \"steady\" }] } },\r\n                { name: \"muted trumpet\", midiProgram: 59, generalMidi: true, settings: { \"type\": \"FM\", \"eqFilter\": [{ \"type\": \"low-pass\", \"cutoffHz\": 8000, \"linearGain\": 2.8284 }, { \"type\": \"peak\", \"cutoffHz\": 4000, \"linearGain\": 2.8284 }], \"effects\": [\"note filter\", \"reverb\"], \"noteFilter\": [{ \"type\": \"low-pass\", \"cutoffHz\": 3363.59, \"linearGain\": 1 }], \"reverb\": 33, \"fadeInSeconds\": 0.0263, \"fadeOutTicks\": -3, \"algorithm\": \"1←(2 3←4)\", \"feedbackType\": \"1⟲\", \"feedbackAmplitude\": 5, \"operators\": [{ \"frequency\": \"1×\", \"amplitude\": 13 }, { \"frequency\": \"1×\", \"amplitude\": 5 }, { \"frequency\": \"9×\", \"amplitude\": 5 }, { \"frequency\": \"13×\", \"amplitude\": 7 }], \"envelopes\": [{ \"target\": \"noteFilterAllFreqs\", \"envelope\": \"swell 1\" }, { \"target\": \"operatorAmplitude\", \"envelope\": \"swell 1\", \"index\": 3 }, { \"target\": \"feedbackAmplitude\", \"envelope\": \"flare 2\" }] } },\r\n                { name: \"french horn\", midiProgram: 60, generalMidi: true, settings: { \"type\": \"FM\", \"eqFilter\": [{ \"type\": \"low-pass\", \"cutoffHz\": 4000, \"linearGain\": 1 }, { \"type\": \"peak\", \"cutoffHz\": 2378.41, \"linearGain\": 2.8284 }], \"effects\": [\"reverb\"], \"reverb\": 33, \"fadeInSeconds\": 0.0263, \"fadeOutTicks\": -3, \"algorithm\": \"1←3 2←4\", \"feedbackType\": \"1⟲ 2⟲\", \"feedbackAmplitude\": 3, \"operators\": [{ \"frequency\": \"1×\", \"amplitude\": 15 }, { \"frequency\": \"1×\", \"amplitude\": 12 }, { \"frequency\": \"1×\", \"amplitude\": 10 }, { \"frequency\": \"~1×\", \"amplitude\": 8 }], \"envelopes\": [{ \"target\": \"operatorAmplitude\", \"envelope\": \"swell 1\", \"index\": 2 }, { \"target\": \"operatorAmplitude\", \"envelope\": \"flare 2\", \"index\": 3 }, { \"target\": \"feedbackAmplitude\", \"envelope\": \"swell 1\" }] } },\r\n                { name: \"brass section\", midiProgram: 61, generalMidi: true, settings: { \"type\": \"FM\", \"effects\": \"reverb\", \"transition\": \"soft\", \"chord\": \"harmony\", \"filterCutoffHz\": 2828, \"filterResonance\": 14, \"filterEnvelope\": \"punch\", \"vibrato\": \"none\", \"algorithm\": \"1←3 2←4\", \"feedbackType\": \"1⟲ 2⟲\", \"feedbackAmplitude\": 6, \"feedbackEnvelope\": \"swell 1\", \"operators\": [{ \"frequency\": \"1×\", \"amplitude\": 14, \"envelope\": \"custom\" }, { \"frequency\": \"1×\", \"amplitude\": 12, \"envelope\": \"custom\" }, { \"frequency\": \"1×\", \"amplitude\": 10, \"envelope\": \"swell 1\" }, { \"frequency\": \"~1×\", \"amplitude\": 10, \"envelope\": \"swell 1\" }] } },\r\n                { name: \"brass synth 1\", midiProgram: 62, generalMidi: true, settings: { \"type\": \"FM\", \"effects\": \"reverb\", \"transition\": \"soft\", \"chord\": \"harmony\", \"filterCutoffHz\": 4000, \"filterResonance\": 29, \"filterEnvelope\": \"steady\", \"vibrato\": \"none\", \"algorithm\": \"1←3 2←4\", \"feedbackType\": \"1⟲ 2⟲\", \"feedbackAmplitude\": 11, \"feedbackEnvelope\": \"swell 1\", \"operators\": [{ \"frequency\": \"1×\", \"amplitude\": 14, \"envelope\": \"custom\" }, { \"frequency\": \"1×\", \"amplitude\": 14, \"envelope\": \"custom\" }, { \"frequency\": \"1×\", \"amplitude\": 12, \"envelope\": \"flare 1\" }, { \"frequency\": \"~1×\", \"amplitude\": 8, \"envelope\": \"flare 2\" }] } },\r\n                { name: \"brass synth 2\", midiProgram: 63, generalMidi: true, settings: { \"type\": \"FM\", \"transition\": \"soft\", \"effects\": \"reverb\", \"chord\": \"harmony\", \"filterCutoffHz\": 4000, \"filterResonance\": 43, \"filterEnvelope\": \"twang 3\", \"vibrato\": \"none\", \"algorithm\": \"1←3 2←4\", \"feedbackType\": \"1⟲ 2⟲\", \"feedbackAmplitude\": 9, \"feedbackEnvelope\": \"swell 1\", \"operators\": [{ \"frequency\": \"1×\", \"amplitude\": 15, \"envelope\": \"custom\" }, { \"frequency\": \"1×\", \"amplitude\": 15, \"envelope\": \"custom\" }, { \"frequency\": \"1×\", \"amplitude\": 10, \"envelope\": \"flare 1\" }, { \"frequency\": \"~1×\", \"amplitude\": 7, \"envelope\": \"flare 1\" }] } },\r\n                { name: \"pulse brass\", midiProgram: 62, settings: { \"type\": \"PWM\", \"effects\": \"reverb\", \"transition\": \"soft\", \"chord\": \"harmony\", \"filterCutoffHz\": 4000, \"filterResonance\": 29, \"filterEnvelope\": \"swell 1\", \"pulseWidth\": 50, \"pulseEnvelope\": \"flare 3\", \"vibrato\": \"none\" } },\r\n            ])\r\n        },\r\n        {\r\n            name: \"Reed Presets\", presets: <DictionaryArray<Preset>>toNameMap([\r\n                { name: \"soprano sax\", midiProgram: 64, generalMidi: true, settings: { \"type\": \"FM\", \"effects\": \"reverb\", \"transition\": \"soft\", \"chord\": \"harmony\", \"filterCutoffHz\": 2000, \"filterResonance\": 29, \"filterEnvelope\": \"steady\", \"vibrato\": \"none\", \"algorithm\": \"1←2←3←4\", \"feedbackType\": \"4⟲\", \"feedbackAmplitude\": 5, \"feedbackEnvelope\": \"swell 1\", \"operators\": [{ \"frequency\": \"1×\", \"amplitude\": 13, \"envelope\": \"custom\" }, { \"frequency\": \"4×\", \"amplitude\": 4, \"envelope\": \"swell 1\" }, { \"frequency\": \"1×\", \"amplitude\": 7, \"envelope\": \"steady\" }, { \"frequency\": \"5×\", \"amplitude\": 4, \"envelope\": \"punch\" }] } },\r\n                { name: \"alto sax\", midiProgram: 65, generalMidi: true, settings: { \"type\": \"FM\", \"effects\": \"reverb\", \"transition\": \"soft\", \"chord\": \"harmony\", \"filterCutoffHz\": 2000, \"filterResonance\": 43, \"filterEnvelope\": \"steady\", \"vibrato\": \"none\", \"algorithm\": \"1←(2 3←4)\", \"feedbackType\": \"1⟲\", \"feedbackAmplitude\": 4, \"feedbackEnvelope\": \"punch\", \"operators\": [{ \"frequency\": \"1×\", \"amplitude\": 13, \"envelope\": \"custom\" }, { \"frequency\": \"1×\", \"amplitude\": 6, \"envelope\": \"steady\" }, { \"frequency\": \"4×\", \"amplitude\": 6, \"envelope\": \"swell 1\" }, { \"frequency\": \"1×\", \"amplitude\": 12, \"envelope\": \"steady\" }] } },\r\n                { name: \"tenor sax\", midiProgram: 66, generalMidi: true, settings: { \"type\": \"FM\", \"effects\": \"reverb\", \"transition\": \"soft\", \"chord\": \"harmony\", \"filterCutoffHz\": 2828, \"filterResonance\": 29, \"filterEnvelope\": \"steady\", \"vibrato\": \"none\", \"algorithm\": \"1←2←3←4\", \"feedbackType\": \"1⟲\", \"feedbackAmplitude\": 6, \"feedbackEnvelope\": \"swell 1\", \"operators\": [{ \"frequency\": \"2×\", \"amplitude\": 12, \"envelope\": \"custom\" }, { \"frequency\": \"3×\", \"amplitude\": 7, \"envelope\": \"steady\" }, { \"frequency\": \"1×\", \"amplitude\": 3, \"envelope\": \"steady\" }, { \"frequency\": \"8×\", \"amplitude\": 3, \"envelope\": \"steady\" }] } },\r\n                { name: \"baritone sax\", midiProgram: 67, generalMidi: true, settings: { \"type\": \"FM\", \"effects\": \"reverb\", \"transition\": \"soft\", \"chord\": \"harmony\", \"filterCutoffHz\": 2828, \"filterResonance\": 0, \"filterEnvelope\": \"steady\", \"vibrato\": \"none\", \"algorithm\": \"1←(2 3←4)\", \"feedbackType\": \"1⟲\", \"feedbackAmplitude\": 2, \"feedbackEnvelope\": \"swell 2\", \"operators\": [{ \"frequency\": \"1×\", \"amplitude\": 12, \"envelope\": \"custom\" }, { \"frequency\": \"8×\", \"amplitude\": 4, \"envelope\": \"steady\" }, { \"frequency\": \"4×\", \"amplitude\": 5, \"envelope\": \"steady\" }, { \"frequency\": \"1×\", \"amplitude\": 4, \"envelope\": \"punch\" }] } },\r\n                { name: \"sax synth\", midiProgram: 64, settings: { \"type\": \"FM\", \"effects\": \"reverb\", \"transition\": \"soft\", \"chord\": \"harmony\", \"filterCutoffHz\": 8000, \"filterResonance\": 0, \"filterEnvelope\": \"steady\", \"vibrato\": \"light\", \"algorithm\": \"1←(2 3 4)\", \"feedbackType\": \"1⟲ 2⟲\", \"feedbackAmplitude\": 4, \"feedbackEnvelope\": \"steady\", \"operators\": [{ \"frequency\": \"4×\", \"amplitude\": 15, \"envelope\": \"custom\" }, { \"frequency\": \"1×\", \"amplitude\": 15, \"envelope\": \"steady\" }, { \"frequency\": \"1×\", \"amplitude\": 0, \"envelope\": \"steady\" }, { \"frequency\": \"1×\", \"amplitude\": 0, \"envelope\": \"steady\" }] } },\r\n                { name: \"shehnai\", midiProgram: 111, generalMidi: true, settings: { \"type\": \"FM\", \"effects\": \"reverb\", \"transition\": \"soft\", \"chord\": \"harmony\", \"filterCutoffHz\": 8000, \"filterResonance\": 0, \"filterEnvelope\": \"steady\", \"vibrato\": \"light\", \"algorithm\": \"1←(2 3 4)\", \"feedbackType\": \"1⟲\", \"feedbackAmplitude\": 3, \"feedbackEnvelope\": \"steady\", \"operators\": [{ \"frequency\": \"4×\", \"amplitude\": 15, \"envelope\": \"custom\" }, { \"frequency\": \"1×\", \"amplitude\": 8, \"envelope\": \"steady\" }, { \"frequency\": \"1×\", \"amplitude\": 0, \"envelope\": \"steady\" }, { \"frequency\": \"1×\", \"amplitude\": 0, \"envelope\": \"steady\" }] } },\r\n                { name: \"oboe\", midiProgram: 68, generalMidi: true, settings: { \"type\": \"FM\", \"effects\": \"reverb\", \"transition\": \"cross fade\", \"chord\": \"harmony\", \"filterCutoffHz\": 4000, \"filterResonance\": 14, \"filterEnvelope\": \"swell 1\", \"vibrato\": \"none\", \"algorithm\": \"1 2←(3 4)\", \"feedbackType\": \"2⟲\", \"feedbackAmplitude\": 2, \"feedbackEnvelope\": \"tremolo5\", \"operators\": [{ \"frequency\": \"1×\", \"amplitude\": 7, \"envelope\": \"custom\" }, { \"frequency\": \"4×\", \"amplitude\": 12, \"envelope\": \"custom\" }, { \"frequency\": \"1×\", \"amplitude\": 6, \"envelope\": \"steady\" }, { \"frequency\": \"6×\", \"amplitude\": 2, \"envelope\": \"steady\" }] } },\r\n                { name: \"english horn\", midiProgram: 69, generalMidi: true, settings: { \"type\": \"FM\", \"effects\": \"reverb\", \"transition\": \"cross fade\", \"chord\": \"harmony\", \"filterCutoffHz\": 2000, \"filterResonance\": 14, \"filterEnvelope\": \"steady\", \"vibrato\": \"none\", \"algorithm\": \"1 2←(3 4)\", \"feedbackType\": \"2⟲\", \"feedbackAmplitude\": 2, \"feedbackEnvelope\": \"steady\", \"operators\": [{ \"frequency\": \"4×\", \"amplitude\": 12, \"envelope\": \"custom\" }, { \"frequency\": \"2×\", \"amplitude\": 10, \"envelope\": \"custom\" }, { \"frequency\": \"1×\", \"amplitude\": 8, \"envelope\": \"punch\" }, { \"frequency\": \"8×\", \"amplitude\": 4, \"envelope\": \"steady\" }] } },\r\n                { name: \"bassoon\", midiProgram: 70, generalMidi: true, settings: { \"type\": \"FM\", \"effects\": \"reverb\", \"transition\": \"soft\", \"chord\": \"harmony\", \"filterCutoffHz\": 707, \"filterResonance\": 57, \"filterEnvelope\": \"steady\", \"vibrato\": \"none\", \"algorithm\": \"1←(2 3←4)\", \"feedbackType\": \"1⟲\", \"feedbackAmplitude\": 2, \"feedbackEnvelope\": \"steady\", \"operators\": [{ \"frequency\": \"2×\", \"amplitude\": 11, \"envelope\": \"custom\" }, { \"frequency\": \"1×\", \"amplitude\": 6, \"envelope\": \"steady\" }, { \"frequency\": \"6×\", \"amplitude\": 6, \"envelope\": \"swell 1\" }, { \"frequency\": \"1×\", \"amplitude\": 0, \"envelope\": \"steady\" }] } },\r\n                { name: \"clarinet\", midiProgram: 71, generalMidi: true, settings: { \"type\": \"harmonics\", \"effects\": \"reverb\", \"transition\": \"soft\", \"chord\": \"harmony\", \"filterCutoffHz\": 1414, \"filterResonance\": 14, \"filterEnvelope\": \"steady\", \"interval\": \"union\", \"vibrato\": \"none\", \"harmonics\": [100, 43, 86, 57, 86, 71, 86, 71, 71, 71, 71, 71, 71, 43, 71, 71, 57, 57, 57, 57, 57, 57, 43, 43, 43, 29, 14, 0] } },\r\n                { name: \"harmonica\", midiProgram: 22, generalMidi: true, settings: { \"type\": \"FM\", \"effects\": \"reverb\", \"transition\": \"soft\", \"chord\": \"harmony\", \"filterCutoffHz\": 5657, \"filterResonance\": 29, \"filterEnvelope\": \"swell 1\", \"vibrato\": \"none\", \"algorithm\": \"1←(2 3←4)\", \"feedbackType\": \"1⟲\", \"feedbackAmplitude\": 9, \"feedbackEnvelope\": \"tremolo5\", \"operators\": [{ \"frequency\": \"2×\", \"amplitude\": 14, \"envelope\": \"custom\" }, { \"frequency\": \"1×\", \"amplitude\": 15, \"envelope\": \"steady\" }, { \"frequency\": \"~2×\", \"amplitude\": 2, \"envelope\": \"twang 3\" }, { \"frequency\": \"1×\", \"amplitude\": 0, \"envelope\": \"steady\" }] } },\r\n            ])\r\n        },\r\n        {\r\n            name: \"Flute Presets\", presets: <DictionaryArray<Preset>>toNameMap([\r\n                { name: \"flute 1\", midiProgram: 73, generalMidi: true, settings: { \"type\": \"FM\", \"effects\": \"reverb\", \"transition\": \"soft\", \"chord\": \"harmony\", \"filterCutoffHz\": 5657, \"filterResonance\": 14, \"filterEnvelope\": \"steady\", \"vibrato\": \"none\", \"algorithm\": \"1←(2 3 4)\", \"feedbackType\": \"4⟲\", \"feedbackAmplitude\": 7, \"feedbackEnvelope\": \"decay 2\", \"operators\": [{ \"frequency\": \"1×\", \"amplitude\": 15, \"envelope\": \"custom\" }, { \"frequency\": \"2×\", \"amplitude\": 4, \"envelope\": \"steady\" }, { \"frequency\": \"1×\", \"amplitude\": 3, \"envelope\": \"steady\" }, { \"frequency\": \"~1×\", \"amplitude\": 1, \"envelope\": \"punch\" }] } },\r\n                { name: \"recorder\", midiProgram: 74, generalMidi: true, settings: { \"type\": \"harmonics\", \"effects\": \"reverb\", \"transition\": \"soft\", \"chord\": \"harmony\", \"filterCutoffHz\": 4000, \"filterResonance\": 29, \"filterEnvelope\": \"swell 2\", \"interval\": \"union\", \"vibrato\": \"none\", \"harmonics\": [100, 43, 57, 43, 57, 43, 43, 43, 43, 43, 43, 43, 43, 29, 29, 29, 29, 29, 29, 29, 14, 14, 14, 14, 14, 14, 14, 0] } },\r\n                { name: \"whistle\", midiProgram: 78, generalMidi: true, settings: { \"type\": \"harmonics\", \"effects\": \"chorus & reverb\", \"transition\": \"soft\", \"chord\": \"harmony\", \"filterCutoffHz\": 2000, \"filterResonance\": 43, \"filterEnvelope\": \"steady\", \"interval\": \"union\", \"vibrato\": \"delayed\", \"harmonics\": [100, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0] } },\r\n                { name: \"ocarina\", midiProgram: 79, generalMidi: true, settings: { \"type\": \"harmonics\", \"effects\": \"reverb\", \"transition\": \"soft\", \"chord\": \"harmony\", \"filterCutoffHz\": 2828, \"filterResonance\": 43, \"filterEnvelope\": \"steady\", \"interval\": \"union\", \"vibrato\": \"none\", \"harmonics\": [100, 14, 57, 14, 29, 14, 14, 14, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0] } },\r\n                { name: \"piccolo\", midiProgram: 72, generalMidi: true, settings: { \"type\": \"FM\", \"effects\": \"reverb\", \"transition\": \"soft\", \"chord\": \"harmony\", \"filterCutoffHz\": 5657, \"filterResonance\": 43, \"filterEnvelope\": \"steady\", \"vibrato\": \"none\", \"algorithm\": \"1←3 2←4\", \"feedbackType\": \"4⟲\", \"feedbackAmplitude\": 15, \"feedbackEnvelope\": \"twang 1\", \"operators\": [{ \"frequency\": \"1×\", \"amplitude\": 15, \"envelope\": \"custom\" }, { \"frequency\": \"1×\", \"amplitude\": 10, \"envelope\": \"custom\" }, { \"frequency\": \"~2×\", \"amplitude\": 3, \"envelope\": \"punch\" }, { \"frequency\": \"~1×\", \"amplitude\": 5, \"envelope\": \"punch\" }] } },\r\n                { name: \"shakuhachi\", midiProgram: 77, generalMidi: true, settings: { \"type\": \"FM\", \"effects\": \"chorus & reverb\", \"transition\": \"soft\", \"chord\": \"harmony\", \"filterCutoffHz\": 4000, \"filterResonance\": 14, \"filterEnvelope\": \"steady\", \"vibrato\": \"delayed\", \"algorithm\": \"1←(2 3←4)\", \"feedbackType\": \"3→4\", \"feedbackAmplitude\": 15, \"feedbackEnvelope\": \"steady\", \"operators\": [{ \"frequency\": \"1×\", \"amplitude\": 15, \"envelope\": \"custom\" }, { \"frequency\": \"2×\", \"amplitude\": 3, \"envelope\": \"punch\" }, { \"frequency\": \"~1×\", \"amplitude\": 4, \"envelope\": \"twang 1\" }, { \"frequency\": \"20×\", \"amplitude\": 15, \"envelope\": \"steady\" }] } },\r\n                { name: \"pan flute\", midiProgram: 75, generalMidi: true, settings: { \"type\": \"spectrum\", \"eqFilter\": [{ \"type\": \"low-pass\", \"cutoffHz\": 9513.66, \"linearGain\": 5.6569 }], \"effects\": [\"note filter\", \"reverb\"], \"noteFilter\": [{ \"type\": \"high-pass\", \"cutoffHz\": 4756.83, \"linearGain\": 0.7071 }], \"reverb\": 33, \"fadeInSeconds\": 0.0125, \"fadeOutTicks\": -3, \"spectrum\": [100, 0, 0, 0, 0, 0, 0, 14, 0, 0, 0, 71, 0, 0, 14, 0, 57, 0, 29, 14, 29, 14, 14, 29, 14, 29, 14, 14, 29, 14], \"envelopes\": [{ \"target\": \"noteFilterFreq\", \"envelope\": \"twang 1\", \"index\": 0 }, { \"target\": \"noteVolume\", \"envelope\": \"punch\" }] } },\r\n                { name: \"blown bottle\", midiProgram: 76, generalMidi: true, settings: { \"type\": \"FM\", \"effects\": \"chorus & reverb\", \"transition\": \"cross fade\", \"chord\": \"harmony\", \"filterCutoffHz\": 5657, \"filterResonance\": 57, \"filterEnvelope\": \"steady\", \"vibrato\": \"none\", \"algorithm\": \"1 2 3 4\", \"feedbackType\": \"1⟲ 2⟲ 3⟲ 4⟲\", \"feedbackAmplitude\": 7, \"feedbackEnvelope\": \"twang 1\", \"operators\": [{ \"frequency\": \"1×\", \"amplitude\": 15, \"envelope\": \"custom\" }, { \"frequency\": \"3×\", \"amplitude\": 4, \"envelope\": \"custom\" }, { \"frequency\": \"6×\", \"amplitude\": 2, \"envelope\": \"custom\" }, { \"frequency\": \"11×\", \"amplitude\": 2, \"envelope\": \"custom\" }] } },\r\n                { name: \"calliope\", midiProgram: 82, generalMidi: true, settings: { \"type\": \"spectrum\", \"transition\": \"cross fade\", \"effects\": \"reverb\", \"chord\": \"harmony\", \"filterCutoffHz\": 5657, \"filterResonance\": 14, \"filterEnvelope\": \"steady\", \"spectrum\": [100, 0, 0, 0, 0, 0, 0, 86, 0, 0, 0, 71, 0, 0, 57, 0, 43, 0, 29, 14, 14, 29, 14, 14, 14, 14, 14, 14, 14, 14] } },\r\n                { name: \"chiffer\", midiProgram: 83, generalMidi: true, settings: { \"type\": \"spectrum\", \"effects\": \"reverb\", \"transition\": \"hard\", \"chord\": \"harmony\", \"filterCutoffHz\": 2000, \"filterResonance\": 14, \"filterEnvelope\": \"punch\", \"spectrum\": [86, 0, 0, 0, 0, 0, 0, 71, 0, 0, 0, 71, 0, 0, 57, 0, 57, 0, 43, 14, 14, 43, 14, 29, 14, 29, 29, 29, 29, 14] } },\r\n                { name: \"breath noise\", midiProgram: 121, generalMidi: true, settings: { \"type\": \"spectrum\", \"eqFilter\": [], \"effects\": [\"chord type\", \"note filter\", \"reverb\"], \"chord\": \"strum\", \"noteFilter\": [{ \"type\": \"high-pass\", \"cutoffHz\": 840.9, \"linearGain\": 0.3536 }, { \"type\": \"low-pass\", \"cutoffHz\": 16000, \"linearGain\": 0.3536 }], \"reverb\": 33, \"fadeInSeconds\": 0.0413, \"fadeOutTicks\": 12, \"spectrum\": [71, 0, 0, 0, 0, 0, 0, 29, 0, 0, 0, 71, 0, 0, 29, 0, 100, 29, 14, 29, 100, 29, 100, 14, 14, 71, 0, 29, 0, 0], \"envelopes\": [{ \"target\": \"noteFilterAllFreqs\", \"envelope\": \"twang 1\" }] } },\r\n                { name: \"flute 2\", midiProgram: 73, generalMidi: true, settings: { \"type\": \"harmonics\", \"effects\": \"reverb\", \"transition\": \"seamless\", \"chord\": \"harmony\", \"filterCutoffHz\": 1414, \"filterResonance\": 14, \"filterEnvelope\": \"steady\", \"interval\": \"union\", \"vibrato\": \"delayed\", \"harmonics\": [100, 43, 86, 57, 86, 71, 86, 71, 71, 71, 71, 71, 71, 43, 71, 71, 57, 57, 57, 57, 57, 57, 43, 43, 43, 29, 14, 0] } },\r\n            ])\r\n        },\r\n        {\r\n            name: \"Pad Presets\", presets: <DictionaryArray<Preset>>toNameMap([\r\n                { name: \"new age pad\", midiProgram: 88, generalMidi: true, settings: { \"type\": \"FM\", \"eqFilter\": [], \"effects\": [\"chorus\"], \"chorus\": 100, \"transition\": \"normal\", \"fadeInSeconds\": 0, \"fadeOutTicks\": 48, \"chord\": \"simultaneous\", \"algorithm\": \"1←(2 3←4)\", \"feedbackType\": \"1⟲ 2⟲\", \"feedbackAmplitude\": 3, \"operators\": [{ \"frequency\": \"2×\", \"amplitude\": 14 }, { \"frequency\": \"~1×\", \"amplitude\": 4 }, { \"frequency\": \"6×\", \"amplitude\": 3 }, { \"frequency\": \"13×\", \"amplitude\": 3 }], \"envelopes\": [{ \"target\": \"operatorAmplitude\", \"envelope\": \"swell 2\", \"index\": 1 }, { \"target\": \"operatorAmplitude\", \"envelope\": \"twang 3\", \"index\": 2 }, { \"target\": \"feedbackAmplitude\", \"envelope\": \"swell 3\" }] } },\r\n                { name: \"warm pad\", midiProgram: 89, generalMidi: true, settings: { \"type\": \"FM\", \"eqFilter\": [], \"effects\": [\"note filter\", \"chorus\"], \"noteFilter\": [{ \"type\": \"low-pass\", \"cutoffHz\": 3363.59, \"linearGain\": 1 }], \"chorus\": 100, \"transition\": \"normal\", \"fadeInSeconds\": 0.0575, \"fadeOutTicks\": 96, \"chord\": \"simultaneous\", \"algorithm\": \"1←(2 3 4)\", \"feedbackType\": \"1⟲\", \"feedbackAmplitude\": 7, \"operators\": [{ \"frequency\": \"1×\", \"amplitude\": 14 }, { \"frequency\": \"1×\", \"amplitude\": 6 }, { \"frequency\": \"1×\", \"amplitude\": 0 }, { \"frequency\": \"1×\", \"amplitude\": 0 }], \"envelopes\": [{ \"target\": \"noteFilterAllFreqs\", \"envelope\": \"swell 3\" }, { \"target\": \"operatorAmplitude\", \"envelope\": \"swell 1\", \"index\": 1 }] } },\r\n                { name: \"polysynth pad\", midiProgram: 90, generalMidi: true, settings: { \"type\": \"chip\", \"eqFilter\": [], \"effects\": [\"vibrato\", \"note filter\", \"chorus\"], \"vibrato\": \"delayed\", \"noteFilter\": [{ \"type\": \"low-pass\", \"cutoffHz\": 2828.43, \"linearGain\": 1 }], \"chorus\": 100, \"transition\": \"normal\", \"fadeInSeconds\": 0, \"fadeOutTicks\": 48, \"chord\": \"simultaneous\", \"wave\": \"sawtooth\", \"unison\": \"honky tonk\", \"envelopes\": [{ \"target\": \"noteFilterAllFreqs\", \"envelope\": \"twang 3\" }] } },\r\n                { name: \"space voice pad\", midiProgram: 91, generalMidi: true, settings: { \"type\": \"FM\", \"eqFilter\": [{ \"type\": \"low-pass\", \"cutoffHz\": 6727.17, \"linearGain\": 5.6569 }, { \"type\": \"peak\", \"cutoffHz\": 2828.43, \"linearGain\": 5.6569 }, { \"type\": \"peak\", \"cutoffHz\": 1414.21, \"linearGain\": 0.1768 }], \"effects\": [\"chorus\"], \"chorus\": 100, \"transition\": \"normal\", \"fadeInSeconds\": 0.0125, \"fadeOutTicks\": 72, \"chord\": \"simultaneous\", \"algorithm\": \"(1 2 3)←4\", \"feedbackType\": \"1⟲ 2⟲ 3⟲ 4⟲\", \"feedbackAmplitude\": 5, \"operators\": [{ \"frequency\": \"1×\", \"amplitude\": 10 }, { \"frequency\": \"2×\", \"amplitude\": 8 }, { \"frequency\": \"3×\", \"amplitude\": 7 }, { \"frequency\": \"11×\", \"amplitude\": 2 }], \"envelopes\": [{ \"target\": \"operatorAmplitude\", \"envelope\": \"punch\", \"index\": 3 }, { \"target\": \"feedbackAmplitude\", \"envelope\": \"swell 2\" }] } },\r\n                { name: \"bowed glass pad\", midiProgram: 92, generalMidi: true, settings: { \"type\": \"FM\", \"eqFilter\": [], \"effects\": [\"note filter\"], \"noteFilter\": [{ \"type\": \"low-pass\", \"cutoffHz\": 4756.83, \"linearGain\": 0.5 }], \"transition\": \"normal\", \"fadeInSeconds\": 0.0575, \"fadeOutTicks\": 96, \"chord\": \"simultaneous\", \"algorithm\": \"1←3 2←4\", \"feedbackType\": \"1⟲ 2⟲\", \"feedbackAmplitude\": 0, \"operators\": [{ \"frequency\": \"1×\", \"amplitude\": 10 }, { \"frequency\": \"2×\", \"amplitude\": 12 }, { \"frequency\": \"3×\", \"amplitude\": 7 }, { \"frequency\": \"7×\", \"amplitude\": 4 }], \"envelopes\": [{ \"target\": \"noteFilterAllFreqs\", \"envelope\": \"twang 3\" }, { \"target\": \"operatorAmplitude\", \"envelope\": \"twang 3\", \"index\": 2 }, { \"target\": \"operatorAmplitude\", \"envelope\": \"flare 3\", \"index\": 3 }] } },\r\n                { name: \"metallic pad\", midiProgram: 93, generalMidi: true, settings: { \"type\": \"FM\", \"eqFilter\": [], \"effects\": [\"note filter\"], \"noteFilter\": [{ \"type\": \"low-pass\", \"cutoffHz\": 6727.17, \"linearGain\": 0.5 }], \"transition\": \"normal\", \"fadeInSeconds\": 0.0125, \"fadeOutTicks\": 72, \"chord\": \"simultaneous\", \"algorithm\": \"1←3 2←4\", \"feedbackType\": \"1⟲ 2⟲\", \"feedbackAmplitude\": 13, \"operators\": [{ \"frequency\": \"1×\", \"amplitude\": 15 }, { \"frequency\": \"~1×\", \"amplitude\": 9 }, { \"frequency\": \"1×\", \"amplitude\": 7 }, { \"frequency\": \"11×\", \"amplitude\": 7 }], \"envelopes\": [{ \"target\": \"noteFilterAllFreqs\", \"envelope\": \"twang 3\" }, { \"target\": \"operatorAmplitude\", \"envelope\": \"swell 2\", \"index\": 2 }, { \"target\": \"feedbackAmplitude\", \"envelope\": \"twang 3\" }] } },\r\n                { name: \"sweep pad\", midiProgram: 95, generalMidi: true, settings: { \"type\": \"chip\", \"eqFilter\": [], \"effects\": [\"note filter\", \"chorus\"], \"noteFilter\": [{ \"type\": \"low-pass\", \"cutoffHz\": 4000, \"linearGain\": 4 }], \"chorus\": 100, \"transition\": \"normal\", \"fadeInSeconds\": 0.0575, \"fadeOutTicks\": 96, \"chord\": \"simultaneous\", \"wave\": \"sawtooth\", \"unison\": \"hum\", \"envelopes\": [{ \"target\": \"noteFilterAllFreqs\", \"envelope\": \"flare 3\" }] } },\r\n                { name: \"atmosphere\", midiProgram: 99, generalMidi: true, settings: { \"type\": \"FM\", \"eqFilter\": [{ \"type\": \"low-pass\", \"cutoffHz\": 4756.83, \"linearGain\": 1 }], \"effects\": [\"chorus\", \"reverb\"], \"chorus\": 100, \"reverb\": 33, \"transition\": \"normal\", \"fadeInSeconds\": 0, \"fadeOutTicks\": 48, \"chord\": \"strum\", \"algorithm\": \"1←(2 3 4)\", \"feedbackType\": \"3⟲ 4⟲\", \"feedbackAmplitude\": 3, \"operators\": [{ \"frequency\": \"1×\", \"amplitude\": 14 }, { \"frequency\": \"~1×\", \"amplitude\": 10 }, { \"frequency\": \"3×\", \"amplitude\": 7 }, { \"frequency\": \"1×\", \"amplitude\": 7 }], \"envelopes\": [{ \"target\": \"operatorAmplitude\", \"envelope\": \"swell 3\", \"index\": 1 }, { \"target\": \"operatorAmplitude\", \"envelope\": \"twang 2\", \"index\": 2 }, { \"target\": \"operatorAmplitude\", \"envelope\": \"twang 3\", \"index\": 3 }] } },\r\n                { name: \"brightness\", midiProgram: 100, generalMidi: true, settings: { \"type\": \"Picked String\", \"eqFilter\": [{ \"type\": \"low-pass\", \"cutoffHz\": 4756.83, \"linearGain\": 2 }], \"effects\": [\"chorus\"], \"chorus\": 100, \"transition\": \"normal\", \"fadeInSeconds\": 0.0125, \"fadeOutTicks\": 72, \"chord\": \"simultaneous\", \"harmonics\": [100, 86, 86, 86, 43, 57, 43, 71, 43, 43, 43, 57, 43, 43, 57, 71, 57, 43, 29, 43, 57, 57, 43, 29, 29, 29, 29, 14], \"unison\": \"octave\", \"stringSustain\": 86, \"envelopes\": [] } },\r\n                { name: \"goblins\", midiProgram: 101, generalMidi: true, settings: { \"type\": \"FM\", \"eqFilter\": [{ \"type\": \"peak\", \"cutoffHz\": 2828.43, \"linearGain\": 11.3137 }], \"effects\": [\"note filter\", \"chorus\"], \"noteFilter\": [{ \"type\": \"low-pass\", \"cutoffHz\": 1681.79, \"linearGain\": 0.5 }], \"chorus\": 100, \"transition\": \"normal\", \"fadeInSeconds\": 0.0575, \"fadeOutTicks\": 96, \"chord\": \"simultaneous\", \"algorithm\": \"1←2←3←4\", \"feedbackType\": \"1⟲\", \"feedbackAmplitude\": 10, \"operators\": [{ \"frequency\": \"1×\", \"amplitude\": 15 }, { \"frequency\": \"4×\", \"amplitude\": 5 }, { \"frequency\": \"1×\", \"amplitude\": 10 }, { \"frequency\": \"1×\", \"amplitude\": 0 }], \"envelopes\": [{ \"target\": \"noteFilterAllFreqs\", \"envelope\": \"swell 2\" }, { \"target\": \"operatorAmplitude\", \"envelope\": \"swell 3\", \"index\": 1 }, { \"target\": \"operatorAmplitude\", \"envelope\": \"tremolo1\", \"index\": 2 }, { \"target\": \"feedbackAmplitude\", \"envelope\": \"flare 3\" }] } },\r\n                { name: \"sci-fi\", midiProgram: 103, generalMidi: true, settings: { \"type\": \"FM\", \"eqFilter\": [{ \"type\": \"peak\", \"cutoffHz\": 9513.66, \"linearGain\": 2.8284 }], \"effects\": [\"note filter\", \"chorus\"], \"noteFilter\": [{ \"type\": \"low-pass\", \"cutoffHz\": 6727.17, \"linearGain\": 0.5 }], \"chorus\": 100, \"transition\": \"normal\", \"fadeInSeconds\": 0.0125, \"fadeOutTicks\": 48, \"chord\": \"simultaneous\", \"algorithm\": \"(1 2)←3←4\", \"feedbackType\": \"1⟲ 2⟲ 3⟲ 4⟲\", \"feedbackAmplitude\": 8, \"operators\": [{ \"frequency\": \"~1×\", \"amplitude\": 13 }, { \"frequency\": \"2×\", \"amplitude\": 10 }, { \"frequency\": \"5×\", \"amplitude\": 5 }, { \"frequency\": \"11×\", \"amplitude\": 8 }], \"envelopes\": [{ \"target\": \"noteFilterAllFreqs\", \"envelope\": \"twang 3\" }, { \"target\": \"operatorAmplitude\", \"envelope\": \"twang 3\", \"index\": 2 }, { \"target\": \"operatorAmplitude\", \"envelope\": \"tremolo5\", \"index\": 3 }, { \"target\": \"feedbackAmplitude\", \"envelope\": \"twang 3\" }] } },\r\n                { name: \"flutter pad\", midiProgram: 90, settings: { \"type\": \"FM\", \"eqFilter\": [], \"effects\": [\"vibrato\", \"note filter\", \"chorus\"], \"vibrato\": \"delayed\", \"noteFilter\": [{ \"type\": \"low-pass\", \"cutoffHz\": 4000, \"linearGain\": 4 }], \"chorus\": 100, \"transition\": \"normal\", \"fadeInSeconds\": 0, \"fadeOutTicks\": 48, \"chord\": \"simultaneous\", \"algorithm\": \"(1 2)←(3 4)\", \"feedbackType\": \"1⟲ 2⟲ 3⟲\", \"feedbackAmplitude\": 9, \"operators\": [{ \"frequency\": \"1×\", \"amplitude\": 13 }, { \"frequency\": \"5×\", \"amplitude\": 7 }, { \"frequency\": \"7×\", \"amplitude\": 5 }, { \"frequency\": \"~1×\", \"amplitude\": 6 }], \"envelopes\": [{ \"target\": \"noteFilterAllFreqs\", \"envelope\": \"twang 3\" }, { \"target\": \"operatorAmplitude\", \"envelope\": \"tremolo1\", \"index\": 2 }, { \"target\": \"operatorAmplitude\", \"envelope\": \"punch\", \"index\": 3 }] } },\r\n                { name: \"feedback pad\", midiProgram: 89, settings: { \"type\": \"FM\", \"eqFilter\": [{ \"type\": \"peak\", \"cutoffHz\": 2378.41, \"linearGain\": 8 }], \"effects\": [], \"transition\": \"normal\", \"fadeInSeconds\": 0.0575, \"fadeOutTicks\": 96, \"chord\": \"custom interval\", \"algorithm\": \"1 2 3 4\", \"feedbackType\": \"1⟲ 2⟲ 3⟲ 4⟲\", \"feedbackAmplitude\": 8, \"operators\": [{ \"frequency\": \"1×\", \"amplitude\": 15 }, { \"frequency\": \"1×\", \"amplitude\": 15 }, { \"frequency\": \"1×\", \"amplitude\": 15 }, { \"frequency\": \"~1×\", \"amplitude\": 15 }], \"envelopes\": [{ \"target\": \"feedbackAmplitude\", \"envelope\": \"swell 2\" }] } },\r\n            ])\r\n        },\r\n        {\r\n            name: \"Drum Presets\", presets: <DictionaryArray<Preset>>toNameMap([\r\n                { name: \"standard drumset\", midiProgram: 116, isNoise: true, settings: { \"type\": \"drumset\", \"effects\": \"reverb\", \"drums\": [{ \"filterEnvelope\": \"twang 1\", \"spectrum\": [57, 71, 71, 86, 86, 86, 71, 71, 71, 71, 57, 57, 57, 57, 43, 43, 43, 43, 29, 29, 29, 29, 29, 29, 29, 29, 29, 29, 29, 29] }, { \"filterEnvelope\": \"twang 1\", \"spectrum\": [0, 0, 0, 100, 71, 71, 57, 86, 57, 57, 57, 71, 43, 43, 57, 43, 43, 43, 43, 43, 43, 43, 43, 43, 43, 43, 43, 43, 43, 43] }, { \"filterEnvelope\": \"twang 1\", \"spectrum\": [0, 0, 0, 0, 100, 57, 43, 43, 29, 57, 43, 29, 71, 43, 43, 43, 43, 57, 43, 43, 43, 43, 43, 43, 43, 43, 29, 43, 43, 43] }, { \"filterEnvelope\": \"twang 1\", \"spectrum\": [0, 0, 0, 0, 0, 71, 57, 43, 43, 43, 57, 57, 43, 29, 57, 43, 43, 43, 29, 43, 57, 43, 43, 43, 43, 43, 43, 29, 43, 43] }, { \"filterEnvelope\": \"decay 2\", \"spectrum\": [0, 14, 29, 43, 86, 71, 29, 43, 43, 43, 43, 29, 71, 29, 71, 29, 43, 43, 43, 43, 57, 43, 43, 57, 43, 43, 43, 57, 57, 57] }, { \"filterEnvelope\": \"decay 1\", \"spectrum\": [0, 0, 14, 14, 14, 14, 29, 29, 29, 43, 43, 43, 57, 57, 57, 71, 71, 71, 71, 71, 71, 71, 71, 57, 57, 57, 57, 43, 43, 43] }, { \"filterEnvelope\": \"twang 3\", \"spectrum\": [43, 43, 43, 71, 29, 29, 43, 43, 43, 29, 43, 43, 43, 29, 29, 43, 43, 29, 29, 29, 57, 14, 57, 43, 43, 57, 43, 43, 57, 57] }, { \"filterEnvelope\": \"decay 3\", \"spectrum\": [29, 43, 43, 43, 43, 29, 29, 43, 29, 29, 43, 29, 14, 29, 43, 29, 43, 29, 57, 29, 43, 57, 43, 71, 43, 71, 57, 57, 71, 71] }, { \"filterEnvelope\": \"twang 3\", \"spectrum\": [43, 29, 29, 43, 29, 29, 29, 57, 29, 29, 29, 57, 43, 43, 29, 29, 57, 43, 43, 43, 71, 43, 43, 71, 57, 71, 71, 71, 71, 71] }, { \"filterEnvelope\": \"decay 3\", \"spectrum\": [57, 57, 57, 43, 57, 57, 43, 43, 57, 43, 43, 43, 71, 57, 43, 57, 86, 71, 57, 86, 71, 57, 86, 100, 71, 86, 86, 86, 86, 86] }, { \"filterEnvelope\": \"flare 1\", \"spectrum\": [0, 0, 14, 14, 14, 14, 29, 29, 29, 43, 43, 43, 57, 57, 71, 71, 86, 86, 100, 100, 100, 100, 100, 100, 100, 100, 86, 57, 29, 0] }, { \"filterEnvelope\": \"decay 2\", \"spectrum\": [14, 14, 14, 14, 29, 14, 14, 29, 14, 43, 14, 43, 57, 86, 57, 57, 100, 57, 43, 43, 57, 100, 57, 43, 29, 14, 0, 0, 0, 0] }] } },\r\n                { name: \"steel pan\", midiProgram: 114, generalMidi: true, settings: { \"type\": \"FM\", \"eqFilter\": [{ \"type\": \"high-pass\", \"cutoffHz\": 62.5, \"linearGain\": 0.1768 }], \"effects\": [\"note filter\", \"chorus\", \"reverb\"], \"noteFilter\": [{ \"type\": \"low-pass\", \"cutoffHz\": 13454.34, \"linearGain\": 0.25 }], \"chorus\": 67, \"reverb\": 33, \"transition\": \"normal\", \"fadeInSeconds\": 0, \"fadeOutTicks\": 24, \"chord\": \"simultaneous\", \"algorithm\": \"1←(2 3←4)\", \"feedbackType\": \"1⟲\", \"feedbackAmplitude\": 0, \"operators\": [{ \"frequency\": \"~1×\", \"amplitude\": 14 }, { \"frequency\": \"7×\", \"amplitude\": 3 }, { \"frequency\": \"3×\", \"amplitude\": 5 }, { \"frequency\": \"4×\", \"amplitude\": 4 }], \"envelopes\": [{ \"target\": \"noteFilterAllFreqs\", \"envelope\": \"decay 2\" }, { \"target\": \"operatorAmplitude\", \"envelope\": \"flare 1\", \"index\": 1 }, { \"target\": \"operatorAmplitude\", \"envelope\": \"flare 2\", \"index\": 2 }, { \"target\": \"operatorAmplitude\", \"envelope\": \"swell 2\", \"index\": 3 }] } },\r\n                { name: \"steel pan synth\", midiProgram: 114, settings: { \"type\": \"FM\", \"eqFilter\": [], \"effects\": [\"note filter\"], \"noteFilter\": [{ \"type\": \"low-pass\", \"cutoffHz\": 13454.34, \"linearGain\": 0.25 }], \"transition\": \"normal\", \"fadeInSeconds\": 0, \"fadeOutTicks\": -3, \"chord\": \"simultaneous\", \"algorithm\": \"1 2 3←4\", \"feedbackType\": \"1⟲\", \"feedbackAmplitude\": 5, \"operators\": [{ \"frequency\": \"~1×\", \"amplitude\": 12 }, { \"frequency\": \"2×\", \"amplitude\": 15 }, { \"frequency\": \"4×\", \"amplitude\": 14 }, { \"frequency\": \"~1×\", \"amplitude\": 3 }], \"envelopes\": [{ \"target\": \"noteFilterAllFreqs\", \"envelope\": \"twang 1\" }, { \"target\": \"operatorAmplitude\", \"envelope\": \"note size\", \"index\": 0 }, { \"target\": \"operatorAmplitude\", \"envelope\": \"note size\", \"index\": 1 }, { \"target\": \"operatorAmplitude\", \"envelope\": \"flare 1\", \"index\": 2 }, { \"target\": \"operatorAmplitude\", \"envelope\": \"flare 2\", \"index\": 3 }, { \"target\": \"feedbackAmplitude\", \"envelope\": \"flare 1\" }] } },\r\n                { name: \"timpani\", midiProgram: 47, generalMidi: true, settings: { \"type\": \"spectrum\", \"eqFilter\": [{ \"type\": \"peak\", \"cutoffHz\": 6727.17, \"linearGain\": 5.6569 }], \"effects\": [\"pitch shift\", \"note filter\", \"reverb\"], \"pitchShiftSemitones\": 15, \"noteFilter\": [{ \"type\": \"low-pass\", \"cutoffHz\": 19027.31, \"linearGain\": 0.5 }], \"reverb\": 33, \"transition\": \"normal\", \"fadeInSeconds\": 0, \"fadeOutTicks\": 48, \"chord\": \"simultaneous\", \"spectrum\": [100, 0, 0, 0, 86, 0, 0, 71, 0, 14, 43, 14, 43, 43, 0, 29, 43, 29, 29, 29, 43, 29, 43, 29, 43, 43, 43, 43, 43, 43], \"envelopes\": [{ \"target\": \"noteFilterAllFreqs\", \"envelope\": \"twang 1\" }, { \"target\": \"pitchShift\", \"envelope\": \"twang 1\" }] } },\r\n                { name: \"dark strike\", midiProgram: 47, settings: { \"type\": \"spectrum\", \"eqFilter\": [], \"effects\": [\"note filter\", \"reverb\"], \"noteFilter\": [{ \"type\": \"low-pass\", \"cutoffHz\": 4756.83, \"linearGain\": 0.7071 }], \"reverb\": 33, \"transition\": \"normal\", \"fadeInSeconds\": 0, \"fadeOutTicks\": 48, \"chord\": \"simultaneous\", \"spectrum\": [0, 0, 14, 14, 14, 29, 29, 43, 43, 86, 43, 43, 43, 29, 86, 29, 29, 29, 86, 29, 14, 14, 14, 14, 0, 0, 0, 0, 0, 0], \"envelopes\": [{ \"target\": \"noteFilterAllFreqs\", \"envelope\": \"twang 2\" }] } },\r\n                { name: \"woodblock\", midiProgram: 115, generalMidi: true, isNoise: true, midiSubharmonicOctaves: -2.5, settings: { \"type\": \"spectrum\", \"effects\": \"reverb\", \"transition\": \"hard fade\", \"chord\": \"strum\", \"filterCutoffHz\": 2828, \"filterResonance\": 14, \"filterEnvelope\": \"twang 1\", \"spectrum\": [0, 14, 29, 43, 43, 57, 86, 86, 71, 57, 57, 43, 43, 57, 86, 86, 43, 43, 71, 57, 57, 57, 57, 57, 86, 86, 71, 71, 71, 71] } },\r\n                { name: \"taiko drum\", midiProgram: 116, generalMidi: true, isNoise: true, midiSubharmonicOctaves: -0.5, settings: { \"type\": \"spectrum\", \"effects\": \"reverb\", \"transition\": \"hard fade\", \"chord\": \"strum\", \"filterCutoffHz\": 2828, \"filterResonance\": 29, \"filterEnvelope\": \"twang 1\", \"spectrum\": [71, 100, 100, 43, 43, 71, 71, 43, 43, 43, 43, 43, 43, 57, 29, 57, 43, 57, 43, 43, 57, 43, 43, 43, 43, 43, 43, 43, 43, 43] } },\r\n                { name: \"melodic drum\", midiProgram: 117, generalMidi: true, isNoise: true, midiSubharmonicOctaves: -1.5, settings: { \"type\": \"spectrum\", \"effects\": \"reverb\", \"transition\": \"hard fade\", \"chord\": \"strum\", \"filterCutoffHz\": 2828, \"filterResonance\": 43, \"filterEnvelope\": \"twang 1\", \"spectrum\": [100, 71, 71, 57, 57, 43, 43, 71, 43, 43, 43, 57, 43, 43, 57, 43, 43, 43, 43, 29, 29, 29, 29, 29, 29, 29, 29, 29, 29, 29] } },\r\n                { name: \"drum synth\", midiProgram: 118, generalMidi: true, isNoise: true, midiSubharmonicOctaves: -2, settings: { \"type\": \"spectrum\", \"effects\": \"reverb\", \"transition\": \"hard fade\", \"chord\": \"harmony\", \"filterCutoffHz\": 4000, \"filterResonance\": 43, \"filterEnvelope\": \"decay 1\", \"spectrum\": [100, 86, 71, 57, 43, 29, 29, 29, 29, 29, 29, 29, 29, 29, 29, 29, 29, 29, 29, 29, 29, 29, 29, 29, 29, 29, 29, 29, 29, 29] } },\r\n                { name: \"tom-tom\", midiProgram: 116, isNoise: true, midiSubharmonicOctaves: -1, settings: { \"type\": \"spectrum\", \"effects\": \"reverb\", \"transition\": \"hard fade\", \"chord\": \"strum\", \"filterCutoffHz\": 2000, \"filterResonance\": 14, \"filterEnvelope\": \"twang 1\", \"spectrum\": [100, 29, 14, 0, 0, 86, 14, 43, 29, 86, 29, 14, 29, 57, 43, 43, 43, 43, 57, 43, 43, 43, 29, 57, 43, 43, 43, 43, 43, 43] } },\r\n                { name: \"metal pipe\", midiProgram: 117, isNoise: true, midiSubharmonicOctaves: -1.5, settings: { \"type\": \"spectrum\", \"effects\": \"reverb\", \"transition\": \"hard fade\", \"chord\": \"strum\", \"filterCutoffHz\": 8000, \"filterResonance\": 14, \"filterEnvelope\": \"twang 2\", \"spectrum\": [29, 43, 86, 43, 43, 43, 43, 43, 100, 29, 14, 14, 100, 14, 14, 0, 0, 0, 0, 0, 14, 29, 29, 14, 0, 0, 14, 29, 0, 0] } },\r\n                { name: \"synth kick\", midiProgram: 47, settings: { \"type\": \"FM\", \"eqFilter\": [], \"effects\": [], \"transition\": \"normal\", \"fadeInSeconds\": 0, \"fadeOutTicks\": -6, \"chord\": \"simultaneous\", \"algorithm\": \"1←(2 3 4)\", \"feedbackType\": \"1⟲\", \"feedbackAmplitude\": 0, \"operators\": [{ \"frequency\": \"8×\", \"amplitude\": 15 }, { \"frequency\": \"1×\", \"amplitude\": 0 }, { \"frequency\": \"1×\", \"amplitude\": 0 }, { \"frequency\": \"1×\", \"amplitude\": 0 }], \"envelopes\": [{ \"target\": \"operatorFrequency\", \"envelope\": \"twang 1\", \"index\": 0 }, { \"target\": \"noteVolume\", \"envelope\": \"twang 2\" }] } },\r\n            ])\r\n        },\r\n        {\r\n            name: \"Novelty Presets\", presets: <DictionaryArray<Preset>>toNameMap([\r\n                { name: \"guitar fret noise\", midiProgram: 120, generalMidi: true, settings: { \"type\": \"spectrum\", \"eqFilter\": [{ \"type\": \"high-pass\", \"cutoffHz\": 1000, \"linearGain\": 0.1768 }], \"effects\": [\"note filter\"], \"noteFilter\": [{ \"type\": \"low-pass\", \"cutoffHz\": 6727.17, \"linearGain\": 5.6569 }], \"transition\": \"normal\", \"fadeInSeconds\": 0.0125, \"fadeOutTicks\": -3, \"chord\": \"simultaneous\", \"spectrum\": [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 14, 0, 0, 0, 29, 14, 0, 0, 43, 0, 43, 0, 71, 43, 0, 57, 0], \"envelopes\": [{ \"target\": \"noteFilterAllFreqs\", \"envelope\": \"flare 1\" }, { \"target\": \"noteVolume\", \"envelope\": \"twang 2\" }] } },\r\n                { name: \"fifth saw lead\", midiProgram: 86, generalMidi: true, midiSubharmonicOctaves: 1, settings: { \"type\": \"chip\", \"eqFilter\": [], \"effects\": [\"note filter\", \"chorus\"], \"noteFilter\": [{ \"type\": \"low-pass\", \"cutoffHz\": 2828.43, \"linearGain\": 1.4142 }], \"chorus\": 67, \"transition\": \"normal\", \"fadeInSeconds\": 0, \"fadeOutTicks\": 48, \"chord\": \"simultaneous\", \"wave\": \"sawtooth\", \"unison\": \"fifth\", \"envelopes\": [{ \"target\": \"noteFilterAllFreqs\", \"envelope\": \"twang 3\" }] } },\r\n                { name: \"fifth swell\", midiProgram: 86, midiSubharmonicOctaves: 1, settings: { \"type\": \"chip\", \"eqFilter\": [], \"effects\": [\"note filter\", \"chorus\"], \"noteFilter\": [{ \"type\": \"low-pass\", \"cutoffHz\": 2000, \"linearGain\": 2 }], \"chorus\": 100, \"transition\": \"normal\", \"fadeInSeconds\": 0.0125, \"fadeOutTicks\": 72, \"chord\": \"simultaneous\", \"wave\": \"sawtooth\", \"unison\": \"fifth\", \"envelopes\": [{ \"target\": \"noteFilterAllFreqs\", \"envelope\": \"swell 3\" }] } },\r\n                { name: \"soundtrack\", midiProgram: 97, generalMidi: true, settings: { \"type\": \"chip\", \"eqFilter\": [], \"effects\": [\"note filter\", \"chorus\"], \"noteFilter\": [{ \"type\": \"low-pass\", \"cutoffHz\": 2378.41, \"linearGain\": 0.5 }], \"chorus\": 67, \"transition\": \"normal\", \"fadeInSeconds\": 0.0413, \"fadeOutTicks\": 72, \"chord\": \"simultaneous\", \"wave\": \"sawtooth\", \"unison\": \"fifth\", \"envelopes\": [{ \"target\": \"noteFilterAllFreqs\", \"envelope\": \"flare 3\" }] } },\r\n                { name: \"reverse cymbal\", midiProgram: 119, generalMidi: true, isNoise: true, midiSubharmonicOctaves: -3, settings: { \"type\": \"spectrum\", \"effects\": \"none\", \"transition\": \"soft\", \"chord\": \"harmony\", \"filterCutoffHz\": 4000, \"filterResonance\": 14, \"filterEnvelope\": \"swell 3\", \"spectrum\": [29, 57, 57, 29, 57, 57, 29, 29, 43, 29, 29, 43, 29, 29, 57, 57, 14, 57, 14, 57, 71, 71, 57, 86, 57, 100, 86, 86, 86, 86] } },\r\n                { name: \"seashore\", midiProgram: 122, generalMidi: true, isNoise: true, midiSubharmonicOctaves: -3, settings: { \"type\": \"spectrum\", \"transition\": \"soft fade\", \"effects\": \"reverb\", \"chord\": \"harmony\", \"filterCutoffHz\": 2828, \"filterResonance\": 0, \"filterEnvelope\": \"swell 3\", \"spectrum\": [14, 14, 29, 29, 43, 43, 43, 57, 57, 57, 57, 57, 57, 71, 71, 71, 71, 71, 71, 71, 71, 71, 71, 71, 71, 71, 71, 71, 71, 57] } },\r\n                { name: \"bird tweet\", midiProgram: 123, generalMidi: true, settings: { \"type\": \"harmonics\", \"eqFilter\": [], \"effects\": [\"chord type\", \"vibrato\", \"reverb\"], \"chord\": \"strum\", \"vibrato\": \"heavy\", \"reverb\": 67, \"fadeInSeconds\": 0.0575, \"fadeOutTicks\": -6, \"harmonics\": [0, 0, 0, 100, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], \"unison\": \"hum\", \"envelopes\": [{ \"target\": \"noteVolume\", \"envelope\": \"decay 1\" }] } },\r\n                { name: \"telephone ring\", midiProgram: 124, generalMidi: true, settings: { \"type\": \"FM\", \"eqFilter\": [], \"effects\": [\"note filter\"], \"noteFilter\": [{ \"type\": \"low-pass\", \"cutoffHz\": 5656.85, \"linearGain\": 1 }], \"transition\": \"normal\", \"fadeInSeconds\": 0.0125, \"fadeOutTicks\": -3, \"chord\": \"arpeggio\", \"algorithm\": \"1←(2 3 4)\", \"feedbackType\": \"1⟲\", \"feedbackAmplitude\": 0, \"operators\": [{ \"frequency\": \"2×\", \"amplitude\": 12 }, { \"frequency\": \"1×\", \"amplitude\": 4 }, { \"frequency\": \"20×\", \"amplitude\": 1 }, { \"frequency\": \"1×\", \"amplitude\": 0 }], \"envelopes\": [{ \"target\": \"noteFilterAllFreqs\", \"envelope\": \"tremolo4\" }, { \"target\": \"operatorAmplitude\", \"envelope\": \"tremolo1\", \"index\": 1 }] } },\r\n                { name: \"helicopter\", midiProgram: 125, generalMidi: true, isNoise: true, midiSubharmonicOctaves: -0.5, settings: { \"type\": \"spectrum\", \"effects\": \"reverb\", \"transition\": \"seamless\", \"chord\": \"arpeggio\", \"filterCutoffHz\": 1414, \"filterResonance\": 14, \"filterEnvelope\": \"tremolo4\", \"spectrum\": [14, 43, 43, 57, 57, 57, 71, 71, 71, 71, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 71, 71, 71, 71, 71, 71, 71, 57, 57] } },\r\n                { name: \"applause\", midiProgram: 126, generalMidi: true, isNoise: true, midiSubharmonicOctaves: -3, settings: { \"type\": \"spectrum\", \"effects\": \"reverb\", \"transition\": \"soft fade\", \"chord\": \"harmony\", \"filterCutoffHz\": 2000, \"filterResonance\": 14, \"filterEnvelope\": \"swell 3\", \"spectrum\": [14, 14, 29, 29, 29, 43, 43, 57, 71, 71, 86, 86, 86, 71, 71, 57, 57, 57, 71, 86, 86, 86, 86, 86, 71, 71, 57, 57, 57, 57] } },\r\n                { name: \"gunshot\", midiProgram: 127, generalMidi: true, isNoise: true, midiSubharmonicOctaves: -2, settings: { \"type\": \"spectrum\", \"effects\": \"reverb\", \"transition\": \"hard fade\", \"chord\": \"strum\", \"filterCutoffHz\": 1414, \"filterResonance\": 29, \"filterEnvelope\": \"twang 1\", \"spectrum\": [14, 29, 43, 43, 57, 57, 57, 71, 71, 71, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 71, 71, 71, 71, 57, 57, 57, 57, 43] } },\r\n                { name: \"scoot\", midiProgram: 92, settings: { \"type\": \"chip\", \"eqFilter\": [], \"effects\": [\"note filter\"], \"noteFilter\": [{ \"type\": \"low-pass\", \"cutoffHz\": 707.11, \"linearGain\": 4 }], \"transition\": \"normal\", \"fadeInSeconds\": 0.0125, \"fadeOutTicks\": -3, \"chord\": \"simultaneous\", \"wave\": \"double saw\", \"unison\": \"shimmer\", \"envelopes\": [{ \"target\": \"noteFilterAllFreqs\", \"envelope\": \"flare 1\" }] } },\r\n                { name: \"buzz saw\", midiProgram: 30, settings: { \"type\": \"FM\", \"eqFilter\": [{ \"type\": \"low-pass\", \"cutoffHz\": 9513.66, \"linearGain\": 0.5 }], \"effects\": [], \"transition\": \"normal\", \"fadeInSeconds\": 0.0263, \"fadeOutTicks\": -3, \"chord\": \"custom interval\", \"algorithm\": \"1←2←3←4\", \"feedbackType\": \"1⟲\", \"feedbackAmplitude\": 4, \"operators\": [{ \"frequency\": \"5×\", \"amplitude\": 13 }, { \"frequency\": \"1×\", \"amplitude\": 10 }, { \"frequency\": \"~1×\", \"amplitude\": 6 }, { \"frequency\": \"11×\", \"amplitude\": 12 }], \"envelopes\": [] } },\r\n                { name: \"mosquito\", midiProgram: 93, settings: { \"type\": \"PWM\", \"eqFilter\": [{ \"type\": \"low-pass\", \"cutoffHz\": 2828.43, \"linearGain\": 2 }], \"effects\": [\"vibrato\"], \"vibrato\": \"shaky\", \"transition\": \"normal\", \"fadeInSeconds\": 0.0575, \"fadeOutTicks\": -6, \"chord\": \"simultaneous\", \"pulseWidth\": 4.41942, \"envelopes\": [{ \"target\": \"pulseWidth\", \"envelope\": \"tremolo6\" }] } },\r\n                { name: \"breathing\", midiProgram: 126, isNoise: true, midiSubharmonicOctaves: -1, settings: { \"type\": \"spectrum\", \"effects\": \"reverb\", \"transition\": \"hard fade\", \"chord\": \"harmony\", \"filterCutoffHz\": 2000, \"filterResonance\": 14, \"filterEnvelope\": \"swell 2\", \"spectrum\": [14, 14, 14, 29, 29, 29, 29, 29, 43, 29, 29, 43, 43, 43, 29, 29, 71, 43, 86, 86, 57, 100, 86, 86, 86, 86, 71, 86, 71, 57] } },\r\n                { name: \"klaxon synth\", midiProgram: 125, isNoise: true, midiSubharmonicOctaves: -1, settings: { \"type\": \"noise\", \"effects\": \"reverb\", \"transition\": \"slide\", \"chord\": \"harmony\", \"filterCutoffHz\": 2000, \"filterResonance\": 86, \"filterEnvelope\": \"steady\", \"wave\": \"buzz\" } },\r\n                { name: \"theremin\", midiProgram: 40, settings: { \"type\": \"harmonics\", \"eqFilter\": [{ \"type\": \"low-pass\", \"cutoffHz\": 8000, \"linearGain\": 0.7071 }], \"effects\": [\"vibrato\", \"reverb\"], \"vibrato\": \"heavy\", \"reverb\": 33, \"transition\": \"slide in pattern\", \"fadeInSeconds\": 0.0263, \"fadeOutTicks\": -6, \"chord\": \"simultaneous\", \"harmonics\": [100, 71, 57, 43, 29, 29, 14, 14, 14, 14, 14, 14, 14, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], \"unison\": \"none\", \"envelopes\": [] } },\r\n                { name: \"sonar ping\", midiProgram: 121, settings: { \"type\": \"spectrum\", \"eqFilter\": [], \"effects\": [\"note filter\", \"reverb\"], \"noteFilter\": [{ \"type\": \"low-pass\", \"cutoffHz\": 1681.79, \"linearGain\": 0.5 }], \"reverb\": 33, \"transition\": \"normal\", \"fadeInSeconds\": 0.0125, \"fadeOutTicks\": 72, \"chord\": \"simultaneous\", \"spectrum\": [100, 43, 29, 29, 14, 14, 14, 14, 14, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], \"envelopes\": [{ \"target\": \"noteFilterAllFreqs\", \"envelope\": \"twang 2\" }] } },\r\n            ])\r\n        },\r\n         { name: \"Modbox Presets\", presets: <DictionaryArray<Preset>>toNameMap([\r\n\t\t\t{ name: \"modbox theepsynth\", settings: { \"type\": \"FM\", \"effects\": \"none\", \"transition\": \"hard\", \"chord\": \"arpeggio\", \"filterCutoffHz\": 4000, \"filterResonance\": 14, \"filterEnvelope\": \"custom\", \"vibrato\": \"none\", \"algorithm\": \"1←3 2←4\", \"feedbackType\": \"1⟲ 2⟲\", \"feedbackAmplitude\": 11, \"feedbackEnvelope\": \"steady\", \"operators\": [{ \"frequency\": \"1×\", \"amplitude\": 15, \"envelope\": \"custom\" }, { \"frequency\": \"1×\", \"amplitude\": 15, \"envelope\": \"custom\" }, { \"frequency\": \"2×\", \"amplitude\": 7, \"envelope\": \"steady\" }, { \"frequency\": \"1×\", \"amplitude\": 11, \"envelope\": \"steady\" }] } },\r\n               ]) },\r\n\t\t\t   { name: \"Sandbox Presets\", presets: toNameMap([\r\n                { name: \"sandbox netsky hollow\", generalMidi: false, isNoise: true, midiSubharmonicOctaves: -1, settings: { \"type\": \"spectrum\", \"effects\": \"reverb\", \"transition\": \"hard\", \"chord\": \"arpeggio\", \"filterCutoffHz\": 8000, \"filterResonance\": 0, \"filterEnvelope\": \"steady\", \"spectrum\": [100, 100, 100, 100, 100, 100, 100, 100, 100, 100, 100, 45, 45, 45, 45, 45, 45, 45, 45, 45, 45, 45, 45, 45, 45, 45, 45, 45, 45, 45] } },\r\n                { name: \"sandbox abnormality\", generalMidi: false, midiSubharmonicOctaves: 1, settings: { \"type\": \"chip\", \"effects\": \"none\", \"transition\": \"seamless\", \"chord\": \"arpeggio\", \"filterCutoffHz\": 8000, \"filterResonance\": 0, \"filterEnvelope\": \"steady\", \"wave\": \"spiky\", \"interval\": \"fifth\", \"vibrato\": \"none\" } },\r\n                { name: \"sandbox playstation\", generalMidi: false, midiSubharmonicOctaves: 1, settings: { \"type\": \"chip\", \"effects\": \"chorus\", \"transition\": \"seamless\", \"chord\": \"harmony\", \"filterCutoffHz\": 1414, \"filterResonance\": 29, \"filterEnvelope\": \"steady\", \"wave\": \"glitch\", \"interval\": \"shimmer\", \"vibrato\": \"none\" } },\r\n                { name: \"sandbox harmony pulse\", generalMidi: false, midiSubharmonicOctaves: 1, settings: { \"type\": \"chip\", \"effects\": \"chorus\", \"transition\": \"soft\", \"chord\": \"harmony\", \"filterCutoffHz\": 4000, \"filterResonance\": 29, \"filterEnvelope\": \"punch\", \"wave\": \"double pulse\", \"interval\": \"union\", \"vibrato\": \"none\" } },\r\n                { name: \"sandbox pink ping\", generalMidi: false, midiSubharmonicOctaves: -1, settings: { \"type\": \"spectrum\", \"effects\": \"reverb\", \"transition\": \"soft\", \"chord\": \"harmony\", \"filterCutoffHz\": 3000, \"filterResonance\": 0, \"filterEnvelope\": \"tripolo6\", \"spectrum\": [0, 0, 0, 0, 0, 0, 0, 100, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0] } },\r\n                { name: \"sandbox tv static\", generalMidi: false, isNoise: true, midiSubharmonicOctaves: 1, settings: { \"type\": \"noise\", \"effects\": \"reverb\", \"transition\": \"medium fade\", \"chord\": \"harmony\", \"filterCutoffHz\": 8000, \"filterResonance\": 40, \"filterEnvelope\": \"steady\", \"wave\": \"static\" } },\r\n                { name: \"sandbox clean pulse\", generalMidi: false, settings: { \"type\": \"custom chip\", \"transition\": \"hard\", \"effects\": \"none\", \"chord\": \"arpeggio\", \"filterCutoffHz\": 4000, \"filterResonance\": 0, \"filterEnvelope\": \"steady\", \"interval\": \"union\", \"vibrato\": \"none\", \"customChipWave\": [-24, -24, -24, -24, -24, -24, -24, -24, 24, 24, 24, 24, 24, 24, 24, 24, 24, 24, 24, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -24, -24, -24, -24, -24, -24, -24, -24, 24, 24, 24, 24, 24, 24, 24, 24, 24, 24, 24, 24, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1] } },\r\n\t\t\t\t{ name: \"sandbox snp chorus\", generalMidi: false, settings: { \"type\": \"FM\", \"transition\": \"hard\", \"effects\": \"chorus & reverb\", \"chord\": \"strum\", \"filterCutoffHz\": 2000, \"filterResonance\": 0, \"filterEnvelope\": \"twang 2\", \"vibrato\": \"none\", \"algorithm\": \"1←(2 3 4)\", \"feedbackType\": \"1→2→3→4\", \"feedbackAmplitude\": 1, \"feedbackEnvelope\": \"flare 1\", \"operators\": [{ \"frequency\": \"1×\", \"amplitude\": 15, \"envelope\": \"custom\" }, { \"frequency\": \"2×\", \"amplitude\": 15, \"envelope\": \"custom\" }, { \"frequency\": \"4×\", \"amplitude\": 10, \"envelope\": \"custom\" }, { \"frequency\": \"3×\", \"amplitude\": 6, \"envelope\": \"custom\" }] } },\r\n\t\t\t\t{ name: \"sandbox snp echo\", generalMidi: false, settings: { \"type\": \"FM\", \"transition\": \"hard fade\", \"effects\": \"chorus\", \"chord\": \"strum\", \"filterCutoffHz\": 8000, \"filterResonance\": 0, \"filterEnvelope\": \"steady\", \"vibrato\": \"none\", \"algorithm\": \"1←(2 3←4)\", \"feedbackType\": \"3⟲ 4⟲\", \"feedbackAmplitude\": 5, \"feedbackEnvelope\": \"decay 2\", \"operators\": [{ \"frequency\": \"1×\", \"amplitude\": 15, \"envelope\": \"custom\" }, { \"frequency\": \"2×\", \"amplitude\": 15, \"envelope\": \"custom\" }, { \"frequency\": \"20×\", \"amplitude\": 9, \"envelope\": \"twang 1\" }, { \"frequency\": \"20×\", \"amplitude\": 5, \"envelope\": \"twang 2\" }] } },\r\n                { name: \"sandbox tori synth lead\", generalMidi: false, settings: { \"type\": \"harmonics\", \"effects\": \"chorus\", \"transition\": \"seamless\", \"chord\": \"harmony\", \"filterCutoffHz\": 2000, \"filterResonance\": 0, \"filterEnvelope\": \"steady\", \"interval\": \"union\", \"vibrato\": \"none\", \"harmonics\": [100, 100, 100, 100, 71, 71, 43, 43, 43, 29, 29, 43, 43, 43, 43, 43, 43, 43, 43, 43, 43, 43, 29, 14, 0, 0, 0, 86] } },\r\n                { name: \"sandbox glorious piano 1\", generalMidi: false, settings: { \"type\": \"custom chip\", \"transition\": \"hard fade\", \"effects\": \"chorus & reverb\", \"chord\": \"harmony\", \"filterCutoffHz\": 2828, \"filterResonance\": 14, \"filterEnvelope\": \"steady\", \"interval\": \"union\", \"vibrato\": \"none\", \"customChipWave\": [24, 24, -16, -15, -15, -14, -13, -13, -12, -11, -11, -10, -9, -8, -8, -7, -6, -5, -5, -4, -3, -2, -2, 23, 22, 22, 21, 20, 20, 19, 19, 18, 18, 17, 16, 15, 15, 14, 13, 12, 12, 11, 0, -1, -1, -2, -3, -3, -4, -5, -5, -6, -20, -19, -17, -17, -14, -11, -8, -5, -2, -23, -24, -24] } },\r\n                { name: \"sandbox glorious piano 2\", generalMidi: false, settings: { \"type\": \"custom chip\", \"transition\": \"hard fade\", \"effects\": \"chorus & reverb\", \"chord\": \"harmony\", \"filterCutoffHz\": 2828, \"filterResonance\": 14, \"filterEnvelope\": \"punch\", \"interval\": \"shimmer\", \"vibrato\": \"light\", \"customChipWave\": [24, 24, -16, -15, -15, -14, -13, -13, -12, 12, 9, 5, 2, -3, -7, -10, -6, -5, -5, -4, -3, -2, -2, 23, 22, 22, 21, 20, 20, 19, 19, 18, 18, 17, 16, 15, 15, 0, 4, 8, 15, 21, 0, -1, -1, -2, -3, -3, -4, -5, -5, -6, -20, -19, -17, -17, -2, -2, -8, 2, -2, -5, -24, -24] } },\r\n                { name: \"sandbox muffled katrumpet\", generalMidi: false, settings: { \"type\": \"custom chip\", \"transition\": \"cross fade\", \"effects\": \"reverb\", \"chord\": \"strum\", \"filterCutoffHz\": 5657, \"filterResonance\": 29, \"filterEnvelope\": \"steady\", \"interval\": \"union\", \"vibrato\": \"light\", \"customChipWave\": [24, 23, 22, 22, 22, 22, 22, 21, 21, 19, 19, 15, 11, 7, 5, -2, -5, -11, -13, -14, -16, -17, -17, -17, -17, -17, -17, -17, -17, -13, -10, -1, 4, 6, 8, 10, 11, 14, 15, 15, 16, 16, 16, 16, 16, 16, 16, 16, 15, 15, 14, 11, 8, 4, 2, -4, -7, -11, -12, -13, -14, -15, -15, -15] } },\r\n                { name: \"sandbox ehruthing\", generalMidi: false, settings: { \"type\": \"custom chip\", \"hard fade\": \"seamless\", \"effects\": \"reverb\", \"chord\": \"strum\", \"filterCutoffHz\": 5657, \"filterResonance\": 14, \"filterEnvelope\": \"twang 2\", \"interval\": \"union\", \"vibrato\": \"none\", \"customChipWave\": [24, 24, 23, 22, 21, 21, 20, 19, 18, 18, 17, 16, 15, -22, -20, -18, -16, -14, -13, -11, -10, -7, -6, -4, -3, -2, 0, 2, 4, 17, 16, 15, 13, 12, 11, 9, 8, 6, 5, 4, 3, 2, 1, -1, -1, -2, -3, -4, -6, -6, -7, -8, -8, -9, -10, -10, -11, -13, -15, -16, -17, -3, -4, -5] } },\r\n\t\t\t\t{ name: \"sandbox wurtz organ\", generalMidi: false, settings: { \"type\": \"FM\", \"transition\": \"seamless\", \"effects\": \"chorus\", \"chord\": \"harmony\", \"filterCutoffHz\": 1414, \"filterResonance\": 0, \"filterEnvelope\": \"punch\", \"vibrato\": \"none\", \"algorithm\": \"1 2 3 4\", \"feedbackType\": \"1⟲ 2⟲ 3⟲ 4⟲\", \"feedbackAmplitude\": 3, \"feedbackEnvelope\": \"decay 2\", \"operators\": [{ \"frequency\": \"1×\", \"amplitude\": 14, \"envelope\": \"tremolo6\" }, { \"frequency\": \"2×\", \"amplitude\": 9, \"envelope\": \"tripolo3\" }, { \"frequency\": \"4×\", \"amplitude\": 5, \"envelope\": \"pentolo3\" }, { \"frequency\": \"8×\", \"amplitude\": 2, \"envelope\": \"pentolo6\" }] } },\r\n            //some of these dont load, I need to fix them\r\n\t\t\t]) },\r\n     { name: \"Blackbox Presets\", presets: <DictionaryArray<Preset>>toNameMap([\r\n               \t{ name: \"blackbox deep key\", midiProgram: 9, generalMidi: true, settings: { \"type\": \"harmonics\", \"effects\": \"reverb\", \"transition\": \"hard fade\", \"chord\": \"harmony\", \"filterCutoffHz\": 8000, \"filterResonance\": 32, \"filterEnvelope\": \"twang 1\", \"interval\": \"shimmer\", \"vibrato\": \"light\", \"harmonics\": [100, 86, 86, 86, 86, 71, 71, 57, 0, 57, 29, 43, 57, 57, 57, 43, 43, 0, 29, 43, 43, 43, 43, 43, 43, 29, 0, 30] } },\r\n\t\t\t\t{ name: \"blackbox ring ding\", midiProgram: 78, generalMidi: true, settings: { \"type\": \"FM\", \"effects\": \"reverb\", \"transition\": \"hard\", \"chord\": \"strum\", \"filterCutoffHz\": 1500, \"filterResonance\": 16, \"filterEnvelope\": \"twang 2\", \"vibrato\": \"none\", \"algorithm\": \"1 2 3 4\", \"feedbackType\": \"1⟲ 2⟲\", \"feedbackAmplitude\": 0, \"feedbackEnvelope\": \"steady\", \"operators\": [{ \"frequency\": \"1×\", \"amplitude\": 9, \"envelope\": \"custom\" }, { \"frequency\": \"4×\", \"amplitude\": 8, \"envelope\": \"custom\" }, { \"frequency\": \"12×\", \"amplitude\": 9, \"envelope\": \"custom\" }, { \"frequency\": \"22×\", \"amplitude\": 4, \"envelope\": \"twang 2\" }] } },\r\n\t\t\t\t//blackbox adds LITERALLY TWO presets. that's it.\r\n\t\t\t  ]) },\r\n\t\t\t  { name: \"Todbox Presets\", presets: <DictionaryArray<Preset>>toNameMap([\r\n        { name: \"todbox accordion\", midiProgram: 21, generalMidi: true, settings: { \"type\": \"chip\", \"effects\": \"reverb\", \"transition\": \"cross fade\", \"chord\": \"harmony\", \"filterCutoffHz\": 5657, \"filterResonance\": 0, \"filterEnvelope\": \"swell 1\", \"wave\": \"todbox accordian\", \"interval\": \"honky tonk\", \"vibrato\": \"none\" } },\r\n\t\t\t{ name: \"todbox wind\", generalMidi: false, settings: { \"type\": \"FM\", \"effects\": \"reverb\", \"transition\": \"seamless\", \"chord\": \"harmony\", \"filterCutoffHz\": 200, \"filterResonance\": 2950, \"filterEnvelope\": \"steady\", \"vibrato\": \"none\", \"algorithm\": \"1→3 2→4\", \"feedbackType\": \"1→3 2→4\", \"feedbackAmplitude\": 15, \"feedbackEnvelope\": \"steady\", \"operators\": [{ \"frequency\": \"16×\", \"amplitude\": 15, \"envelope\": \"steady\" }, { \"frequency\": \"16×\", \"amplitude\": 0, \"envelope\": \"custom\" }, { \"frequency\": \"16×\", \"amplitude\": 15, \"envelope\": \"steady\" }, { \"frequency\": \"16×\", \"amplitude\": 0, \"envelope\": \"flare 2\" }] } },\r\n\t\t\t ]) },\r\n\t\t\t { name: \"Old Beepbox Presets\", presets: <DictionaryArray<Preset>>toNameMap([\r\n                { name: \"old grand piano\", midiProgram: 0, generalMidi: true, settings: { \"type\": \"harmonics\", \"effects\": \"reverb\", \"transition\": \"hard fade\", \"chord\": \"harmony\", \"filterCutoffHz\": 1414, \"filterResonance\": 14, \"filterEnvelope\": \"twang 3\", \"interval\": \"piano\", \"vibrato\": \"none\", \"harmonics\": [100, 100, 86, 86, 86, 71, 71, 71, 0, 86, 71, 71, 71, 57, 57, 71, 57, 14, 57, 57, 57, 57, 57, 57, 57, 57, 29, 57] } },\r\n\t\t\t\t{ name: \"old bright piano\", midiProgram: 1, generalMidi: true, settings: { \"type\": \"harmonics\", \"effects\": \"reverb\", \"transition\": \"hard fade\", \"chord\": \"harmony\", \"filterCutoffHz\": 2000, \"filterResonance\": 14, \"filterEnvelope\": \"twang 3\", \"interval\": \"piano\", \"vibrato\": \"none\", \"harmonics\": [100, 100, 86, 86, 71, 71, 0, 71, 86, 86, 71, 71, 71, 14, 57, 57, 57, 57, 57, 57, 29, 57, 57, 57, 57, 57, 57, 57] } },\r\n              { name: \"old honky-tonk piano\", midiProgram: 3, generalMidi: true, settings: { \"type\": \"harmonics\", \"effects\": \"reverb\", \"transition\": \"hard fade\", \"chord\": \"harmony\", \"filterCutoffHz\": 5657, \"filterResonance\": 29, \"filterEnvelope\": \"twang 2\", \"interval\": \"honky tonk\", \"vibrato\": \"none\", \"harmonics\": [100, 100, 86, 71, 86, 71, 43, 71, 43, 43, 57, 57, 57, 29, 57, 43, 43, 43, 43, 43, 29, 43, 43, 43, 29, 29, 29, 29] } },\r\n              //  { name: \"old electric piano 1\", midiProgram: 4, generalMidi: true, settings: { \"type\": \"harmonics\", \"effects\": \"reverb\", \"transition\": \"hard\", \"chord\": \"harmony\", \"filterCutoffHz\": 2828, \"filterResonance\": 14, \"filterEnvelope\": \"twang 2\", \"interval\": \"union\", \"vibrato\": \"none\", \"harmonics\": [86, 100, 100, 71, 71, 57, 57, 43, 43, 43, 29, 29, 29, 14, 14, 14, 0, 0, 0, 0, 0, 57, 0, 0, 0, 0, 0, 0] } },\r\n              //  { name: \"old electric piano 2\", midiProgram: 5, generalMidi: true, settings: { \"type\": \"FM\", \"effects\": \"reverb\", \"transition\": \"hard fade\", \"chord\": \"harmony\", \"filterCutoffHz\": 2828, \"filterResonance\": 0, \"filterEnvelope\": \"twang 3\", \"vibrato\": \"none\", \"algorithm\": \"1←3 2←4\", \"feedbackType\": \"1⟲ 2⟲\", \"feedbackAmplitude\": 0, \"feedbackEnvelope\": \"steady\", \"operators\": [{ \"frequency\": \"1×\", \"amplitude\": 12, \"envelope\": \"custom\" }, { \"frequency\": \"1×\", \"amplitude\": 6, \"envelope\": \"custom\" }, { \"frequency\": \"1×\", \"amplitude\": 9, \"envelope\": \"steady\" }, { \"frequency\": \"16×\", \"amplitude\": 6, \"envelope\": \"twang 3\" }] } },\r\n                { name: \"old harpsichord\", midiProgram: 6, generalMidi: true, settings: { \"type\": \"FM\", \"effects\": \"reverb\", \"transition\": \"hard fade\", \"chord\": \"harmony\", \"filterCutoffHz\": 8000, \"filterResonance\": 0, \"filterEnvelope\": \"twang 2\", \"vibrato\": \"none\", \"algorithm\": \"1←(2 3←4)\", \"feedbackType\": \"4⟲\", \"feedbackAmplitude\": 9, \"feedbackEnvelope\": \"twang 2\", \"operators\": [{ \"frequency\": \"1×\", \"amplitude\": 15, \"envelope\": \"custom\" }, { \"frequency\": \"4×\", \"amplitude\": 8, \"envelope\": \"steady\" }, { \"frequency\": \"3×\", \"amplitude\": 6, \"envelope\": \"steady\" }, { \"frequency\": \"5×\", \"amplitude\": 7, \"envelope\": \"steady\" }] } },\r\n                { name: \"old dulcimer\", midiProgram: 15, generalMidi: true, settings: { \"type\": \"harmonics\", \"effects\": \"reverb\", \"transition\": \"hard fade\", \"chord\": \"strum\", \"filterCutoffHz\": 5657, \"filterResonance\": 14, \"filterEnvelope\": \"twang 2\", \"interval\": \"piano\", \"vibrato\": \"none\", \"harmonics\": [100, 100, 100, 86, 100, 86, 57, 100, 100, 86, 100, 86, 100, 86, 100, 71, 57, 71, 71, 100, 86, 71, 86, 86, 100, 86, 86, 86] } },\r\n\t\t\t                { name: \"old music box 1\", midiProgram: 10, generalMidi: true, settings: { \"type\": \"harmonics\", \"effects\": \"reverb\", \"transition\": \"hard fade\", \"chord\": \"strum\", \"filterCutoffHz\": 4000, \"filterResonance\": 14, \"filterEnvelope\": \"twang 2\", \"interval\": \"union\", \"vibrato\": \"none\", \"harmonics\": [100, 0, 0, 100, 0, 0, 0, 0, 0, 0, 100, 0, 0, 0, 0, 0, 0, 0, 0, 86, 0, 0, 0, 0, 0, 0, 71, 0] } },\r\n                { name: \"old music box 2\", midiProgram: 10, settings: { \"type\": \"harmonics\", \"effects\": \"reverb\", \"transition\": \"hard fade\", \"chord\": \"strum\", \"filterCutoffHz\": 2828, \"filterResonance\": 14, \"filterEnvelope\": \"twang 1\", \"interval\": \"union\", \"vibrato\": \"none\", \"harmonics\": [100, 57, 57, 0, 0, 0, 0, 0, 0, 57, 0, 0, 0, 14, 14, 14, 14, 14, 14, 43, 14, 14, 14, 14, 14, 14, 14, 14] } },\r\n\t\t\t { name: \"old tubular bell\", midiProgram: 14, generalMidi: true, midiSubharmonicOctaves: 1, settings: { \"type\": \"harmonics\", \"effects\": \"reverb\", \"transition\": \"hard fade\", \"chord\": \"strum\", \"filterCutoffHz\": 4000, \"filterResonance\": 14, \"filterEnvelope\": \"twang 3\", \"interval\": \"hum\", \"vibrato\": \"none\", \"harmonics\": [43, 71, 0, 100, 0, 100, 0, 86, 0, 0, 86, 0, 14, 71, 14, 14, 57, 14, 14, 43, 14, 14, 43, 14, 14, 43, 14, 14] } },\r\n\t\t\t { name: \"old steel guitar\", midiProgram: 25, generalMidi: true, settings: { \"type\": \"harmonics\", \"effects\": \"reverb\", \"transition\": \"hard fade\", \"chord\": \"strum\", \"filterCutoffHz\": 5657, \"filterResonance\": 14, \"filterEnvelope\": \"twang 2\", \"interval\": \"union\", \"vibrato\": \"none\", \"harmonics\": [100, 100, 86, 71, 71, 71, 86, 86, 71, 57, 43, 43, 43, 57, 57, 57, 57, 57, 43, 43, 43, 43, 43, 43, 43, 43, 43, 43] } },\r\n\t\t\t     { name: \"old cello\", midiProgram: 42, generalMidi: true, settings: { \"type\": \"FM\", \"effects\": \"reverb\", \"transition\": \"cross fade\", \"chord\": \"harmony\", \"filterCutoffHz\": 2828, \"filterResonance\": 29, \"filterEnvelope\": \"steady\", \"vibrato\": \"delayed\", \"algorithm\": \"(1 2 3)←4\", \"feedbackType\": \"1⟲ 2⟲ 3⟲\", \"feedbackAmplitude\": 6, \"feedbackEnvelope\": \"swell 1\", \"operators\": [{ \"frequency\": \"1×\", \"amplitude\": 11, \"envelope\": \"custom\" }, { \"frequency\": \"3×\", \"amplitude\": 9, \"envelope\": \"custom\" }, { \"frequency\": \"8×\", \"amplitude\": 7, \"envelope\": \"custom\" }, { \"frequency\": \"1×\", \"amplitude\": 6, \"envelope\": \"steady\" }] } },\r\n\t\t\t                { name: \"old choir soprano\", midiProgram: 94, generalMidi: true, settings: { \"type\": \"harmonics\", \"effects\": \"chorus & reverb\", \"transition\": \"soft fade\", \"chord\": \"harmony\", \"filterCutoffHz\": 2828, \"filterResonance\": 57, \"filterEnvelope\": \"steady\", \"interval\": \"union\", \"vibrato\": \"shaky\", \"harmonics\": [86, 100, 86, 43, 14, 14, 57, 71, 57, 14, 14, 14, 14, 14, 43, 57, 43, 14, 14, 14, 14, 14, 14, 14, 0, 0, 0, 0] } },\r\n                { name: \"old choir tenor\", midiProgram: 52, generalMidi: true, settings: { \"type\": \"harmonics\", \"effects\": \"chorus & reverb\", \"transition\": \"soft fade\", \"chord\": \"harmony\", \"filterCutoffHz\": 2828, \"filterResonance\": 86, \"filterEnvelope\": \"steady\", \"interval\": \"union\", \"vibrato\": \"shaky\", \"harmonics\": [86, 100, 100, 86, 71, 57, 29, 14, 14, 14, 29, 43, 43, 43, 29, 14, 14, 14, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0] } },\r\n                { name: \"old choir bass\", midiProgram: 52, settings: { \"type\": \"harmonics\", \"effects\": \"chorus & reverb\", \"transition\": \"soft fade\", \"chord\": \"harmony\", \"filterCutoffHz\": 2828, \"filterResonance\": 86, \"filterEnvelope\": \"steady\", \"interval\": \"union\", \"vibrato\": \"shaky\", \"harmonics\": [71, 86, 86, 100, 86, 100, 57, 43, 14, 14, 14, 14, 29, 29, 43, 43, 43, 43, 43, 29, 29, 29, 29, 14, 14, 14, 0, 0] } },\r\n                { name: \"old solo soprano\", midiProgram: 85, settings: { \"type\": \"harmonics\", \"effects\": \"reverb\", \"transition\": \"cross fade\", \"chord\": \"harmony\", \"filterCutoffHz\": 2828, \"filterResonance\": 71, \"filterEnvelope\": \"steady\", \"interval\": \"union\", \"vibrato\": \"shaky\", \"harmonics\": [86, 100, 86, 43, 14, 14, 57, 71, 57, 14, 14, 14, 14, 14, 43, 57, 43, 14, 14, 14, 14, 14, 14, 14, 0, 0, 0, 0] } },\r\n                { name: \"old solo tenor\", midiProgram: 85, settings: { \"type\": \"harmonics\", \"effects\": \"reverb\", \"transition\": \"cross fade\", \"chord\": \"harmony\", \"filterCutoffHz\": 2828, \"filterResonance\": 86, \"filterEnvelope\": \"steady\", \"interval\": \"union\", \"vibrato\": \"shaky\", \"harmonics\": [86, 100, 100, 86, 71, 57, 29, 14, 14, 14, 29, 43, 43, 43, 29, 14, 14, 14, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0] } },\r\n                { name: \"old solo bass\", midiProgram: 85, settings: { \"type\": \"harmonics\", \"effects\": \"reverb\", \"transition\": \"cross fade\", \"chord\": \"harmony\", \"filterCutoffHz\": 2828, \"filterResonance\": 86, \"filterEnvelope\": \"steady\", \"interval\": \"union\", \"vibrato\": \"shaky\", \"harmonics\": [71, 86, 86, 100, 86, 100, 57, 43, 14, 14, 14, 14, 29, 29, 43, 43, 43, 43, 43, 29, 29, 29, 29, 14, 14, 14, 0, 0] } },\r\n\t\t\t { name: \"old pan flute\", midiProgram: 75, generalMidi: true, settings: { \"type\": \"spectrum\", \"effects\": \"reverb\", \"transition\": \"soft\", \"chord\": \"harmony\", \"filterCutoffHz\": 8000, \"filterResonance\": 43, \"filterEnvelope\": \"steady\", \"spectrum\": [100, 0, 0, 0, 0, 0, 0, 14, 0, 0, 0, 71, 0, 0, 14, 0, 57, 0, 29, 14, 29, 14, 14, 29, 14, 29, 14, 14, 29, 14] } },\r\n\t\t\t  { name: \"old timpani\", midiProgram: 47, generalMidi: true, settings: { \"type\": \"spectrum\", \"effects\": \"reverb\", \"transition\": \"hard fade\", \"chord\": \"harmony\", \"filterCutoffHz\": 4000, \"filterResonance\": 29, \"filterEnvelope\": \"twang 2\", \"spectrum\": [100, 0, 0, 0, 86, 0, 0, 71, 0, 14, 43, 14, 43, 43, 0, 29, 43, 29, 29, 29, 43, 29, 43, 29, 43, 43, 43, 43, 43, 43] } },\r\n\t\t\t\t\t\t\t\t//meant for old beepbox presets that changed in the latest beepbox version to be more 'realistic'\r\n\t\t\t\t\t\t\t\t//probably need to add more\r\n\t\t\t\t\t\t\t\t//timpani and pan flute act strangely...?\r\n\t\t\t]) },\r\n\t\t\t{ name: \"UltraBox Presets\", presets: <DictionaryArray<Preset>>toNameMap([\r\n              \t\t\t{ name: \"vrc6 sawtooth\", generalMidi: false, settings: { \"type\": \"custom chip\", \"volume\": 0, \"eqFilter\": [ { \"type\": \"high-pass\", \"cutoffHz\": 62.5, \"linearGain\": 0.5 } ], \"eqFilterType\": false, \"eqSimpleCut\": 10, \"eqSimplePeak\": 0, \"eqSubFilters0\": [ { \"type\": \"high-pass\", \"cutoffHz\": 62.5, \"linearGain\": 0.5 } ], \"effects\": [ \"panning\", \"transition type\", \"chord type\", \"detune\", \"vibrato\" ], \"transition\": \"normal\", \"clicklessTransition\": true, \"chord\": \"arpeggio\", \"fastTwoNoteArp\": true, \"arpeggioSpeed\": 12, \"detuneCents\": 0, \"vibrato\": \"none\", \"vibratoDepth\": 0, \"vibratoDelay\": 0, \"vibratoSpeed\": 10, \"vibratoType\": 0, \"pan\": 0, \"panDelay\": 10, \"fadeInSeconds\": 0, \"fadeOutTicks\": -1, \"wave\": \"square\", \"unison\": \"none\", \"customChipWave\": { \"0\": -1, \"1\": -1, \"2\": -1, \"3\": -1, \"4\": -1, \"5\": -1, \"6\": -1, \"7\": -1, \"8\": -1, \"9\": -5, \"10\": -5, \"11\": -5, \"12\": -4, \"13\": -4, \"14\": -4, \"15\": -3, \"16\": -3, \"17\": -3, \"18\": -7, \"19\": -7, \"20\": -6, \"21\": -6, \"22\": -5, \"23\": -5, \"24\": -4, \"25\": -4, \"26\": -4, \"27\": -7, \"28\": -7, \"29\": -6, \"30\": -6, \"31\": -5, \"32\": -5, \"33\": -4, \"34\": -4, \"35\": -4, \"36\": -8, \"37\": -8, \"38\": -7, \"39\": -7, \"40\": -6, \"41\": -6, \"42\": -5, \"43\": -5, \"44\": -4, \"45\": -4, \"46\": 21, \"47\": 20, \"48\": 18, \"49\": 17, \"50\": 16, \"51\": 14, \"52\": 13, \"53\": 12, \"54\": 11, \"55\": 7, \"56\": 6, \"57\": 6, \"58\": 5, \"59\": 5, \"60\": 5, \"61\": 4, \"62\": 4, \"63\": 4 }, \"customChipWaveIntegral\": { \"0\": 0, \"1\": 0, \"2\": 0, \"3\": 0, \"4\": 0, \"5\": 0, \"6\": 0, \"7\": 0, \"8\": 0, \"9\": 0, \"10\": 0, \"11\": 0, \"12\": 0, \"13\": 0, \"14\": 0, \"15\": 0, \"16\": 0, \"17\": 0, \"18\": 0, \"19\": 0, \"20\": 0, \"21\": 0, \"22\": 0, \"23\": 0, \"24\": 0, \"25\": 0, \"26\": 0, \"27\": 0, \"28\": 0, \"29\": 0, \"30\": 0, \"31\": 0, \"32\": 0, \"33\": 0, \"34\": 0, \"35\": 0, \"36\": 0, \"37\": 0, \"38\": 0, \"39\": 0, \"40\": 0, \"41\": 0, \"42\": 0, \"43\": 0, \"44\": 0, \"45\": 0, \"46\": 0, \"47\": 0, \"48\": 0, \"49\": 0, \"50\": 0, \"51\": 0, \"52\": 0, \"53\": 0, \"54\": 0, \"55\": 0, \"56\": 0, \"57\": 0, \"58\": 0, \"59\": 0, \"60\": 0, \"61\": 0, \"62\": 0, \"63\": 0, \"64\": 0 }, \"envelopes\": [] } },\r\n               { name: \"nes white\", midiProgram: 116, generalMidi: true, isNoise: true, settings: { \"type\": \"noise\", \"volume\": 0, \"eqFilter\": [], \"eqFilterType\": false, \"eqSimpleCut\": 8, \"eqSimplePeak\": 0, \"eqSubFilters1\": [], \"effects\": [ \"panning\" ], \"pan\": 0, \"panDelay\": 10, \"fadeInSeconds\": 0, \"fadeOutTicks\": 0, \"wave\": \"1-bit white\", \"envelopes\": [] } }, \r\n\t\t\t\t { name: \"nes ping\", midiProgram: 116, generalMidi: true, isNoise: true, settings: { \"type\": \"noise\", \"volume\": 0, \"eqFilter\": [], \"eqFilterType\": false, \"eqSimpleCut\": 8, \"eqSimplePeak\": 0, \"eqSubFilters1\": [], \"effects\": [ \"panning\" ], \"pan\": 0, \"panDelay\": 10, \"fadeInSeconds\": 0, \"fadeOutTicks\": 0, \"wave\": \"1-bit metallic\", \"envelopes\": [] } }, \r\n\t\t\t\t{ name: \"distorted pulse vocal\", generalMidi: false, settings: { \"type\": \"chip\", \"volume\": 0, \"eqFilter\": [ { \"type\": \"low-pass\", \"cutoffHz\": 19027.31, \"linearGain\": 0.0884 } ], \"eqFilterType\": false, \"eqSimpleCut\": 10, \"eqSimplePeak\": 0, \"eqSubFilters0\": [ { \"type\": \"low-pass\", \"cutoffHz\": 19027.31, \"linearGain\": 0.0884 } ], \"effects\": [ \"panning\", \"transition type\", \"pitch shift\", \"vibrato\", \"note filter\", \"bitcrusher\", \"echo\", \"reverb\" ], \"transition\": \"normal\", \"clicklessTransition\": false, \"pitchShiftSemitones\": 0, \"vibrato\": \"delayed\", \"vibratoDepth\": 0.3, \"vibratoDelay\": 18.5, \"vibratoSpeed\": 10, \"vibratoType\": 0, \"noteFilterType\": false, \"noteSimpleCut\": 10, \"noteSimplePeak\": 0, \"noteFilter\": [ { \"type\": \"high-pass\", \"cutoffHz\": 840.9, \"linearGain\": 11.3137 }, { \"type\": \"low-pass\", \"cutoffHz\": 297.3, \"linearGain\": 8 }, { \"type\": \"peak\", \"cutoffHz\": 500, \"linearGain\": 11.3137 }, { \"type\": \"high-pass\", \"cutoffHz\": 62.5, \"linearGain\": 1.4142 }, { \"type\": \"peak\", \"cutoffHz\": 176.78, \"linearGain\": 11.3137 }, { \"type\": \"high-pass\", \"cutoffHz\": 250, \"linearGain\": 11.3137 } ], \"noteSubFilters0\": [ { \"type\": \"high-pass\", \"cutoffHz\": 840.9, \"linearGain\": 11.3137 }, { \"type\": \"low-pass\", \"cutoffHz\": 297.3, \"linearGain\": 8 }, { \"type\": \"peak\", \"cutoffHz\": 500, \"linearGain\": 11.3137 }, { \"type\": \"high-pass\", \"cutoffHz\": 62.5, \"linearGain\": 1.4142 }, { \"type\": \"peak\", \"cutoffHz\": 176.78, \"linearGain\": 11.3137 }, { \"type\": \"high-pass\", \"cutoffHz\": 250, \"linearGain\": 11.3137 } ], \"bitcrusherOctave\": 6.5, \"bitcrusherQuantization\": 71, \"pan\": 0, \"panDelay\": 10, \"echoSustain\": 14, \"echoDelayBeats\": 0.167, \"reverb\": 0, \"fadeInSeconds\": 0, \"fadeOutTicks\": -3, \"wave\": \"1/8 pulse\", \"unison\": \"none\", \"envelopes\": [] } },\r\n              { name: \"dubsteb bwah\", generalMidi: false, settings: { \"type\": \"FM\", \"volume\": 0, \"eqFilter\": [ { \"type\": \"low-pass\", \"cutoffHz\": 19027.31, \"linearGain\": 0.7071 } ], \"eqFilterType\": true, \"eqSimpleCut\": 10, \"eqSimplePeak\": 0, \"eqSubFilters1\": [], \"effects\": [ \"panning\", \"transition type\", \"chord type\" ], \"transition\": \"interrupt\", \"clicklessTransition\": false, \"chord\": \"custom interval\", \"fastTwoNoteArp\": false, \"arpeggioSpeed\": 12, \"pan\": 0, \"panDelay\": 10, \"fadeInSeconds\": 0, \"fadeOutTicks\": -1, \"algorithm\": \"1←(2 3 4)\", \"feedbackType\": \"1⟲\", \"feedbackAmplitude\": 10, \"operators\": [ { \"frequency\": \"2×\", \"amplitude\": 15, \"waveform\": \"sine\", \"pulseWidth\": 5 }, { \"frequency\": \"4×\", \"amplitude\": 15, \"waveform\": \"sine\", \"pulseWidth\": 5 }, { \"frequency\": \"1×\", \"amplitude\": 11, \"waveform\": \"sine\", \"pulseWidth\": 5 }, { \"frequency\": \"1×\", \"amplitude\": 13, \"waveform\": \"sine\", \"pulseWidth\": 5 } ], \"envelopes\": [ { \"target\": \"noteVolume\", \"envelope\": \"note size\" }, { \"target\": \"operatorAmplitude\", \"envelope\": \"swell 2\", \"index\": 1 }, { \"target\": \"operatorAmplitude\", \"envelope\": \"punch\", \"index\": 2 }, { \"target\": \"operatorAmplitude\", \"envelope\": \"note size\", \"index\": 3 } ] } },\r\n { name: \"FM cool bass\", generalMidi: false, settings: { \"type\": \"FM\", \"volume\": 0, \"eqFilter\": [ { \"type\": \"low-pass\", \"cutoffHz\": 6727.17, \"linearGain\": 1 }, { \"type\": \"high-pass\", \"cutoffHz\": 88.39, \"linearGain\": 1 }, { \"type\": \"peak\", \"cutoffHz\": 1000, \"linearGain\": 0.7071 } ], \"eqFilterType\": false, \"eqSimpleCut\": 10, \"eqSimplePeak\": 0, \"eqSubFilters0\": [ { \"type\": \"low-pass\", \"cutoffHz\": 6727.17, \"linearGain\": 1 }, { \"type\": \"high-pass\", \"cutoffHz\": 88.39, \"linearGain\": 1 }, { \"type\": \"peak\", \"cutoffHz\": 1000, \"linearGain\": 0.7071 } ], \"effects\": [ \"panning\", \"transition type\", \"note filter\", \"reverb\" ], \"transition\": \"interrupt\", \"clicklessTransition\": false, \"noteFilterType\": true, \"noteSimpleCut\": 9, \"noteSimplePeak\": 2, \"noteFilter\": [ { \"type\": \"low-pass\", \"cutoffHz\": 7231.23, \"linearGain\": 1 } ], \"noteSubFilters1\": [ { \"type\": \"low-pass\", \"cutoffHz\": 7231.23, \"linearGain\": 1 } ], \"pan\": 0, \"panDelay\": 10, \"reverb\": 0, \"fadeInSeconds\": 0, \"fadeOutTicks\": -1, \"algorithm\": \"1←(2 3←4)\", \"feedbackType\": \"1⟲\", \"feedbackAmplitude\": 0, \"operators\": [ { \"frequency\": \"2×\", \"amplitude\": 15, \"waveform\": \"sine\", \"pulseWidth\": 5 }, { \"frequency\": \"1×\", \"amplitude\": 8, \"waveform\": \"sine\", \"pulseWidth\": 5 }, { \"frequency\": \"1×\", \"amplitude\": 7, \"waveform\": \"sine\", \"pulseWidth\": 5 }, { \"frequency\": \"13×\", \"amplitude\": 11, \"waveform\": \"sine\", \"pulseWidth\": 5 } ], \"envelopes\": [ { \"target\": \"noteFilterAllFreqs\", \"envelope\": \"punch\" }, { \"target\": \"operatorAmplitude\", \"envelope\": \"twang 2\", \"index\": 1 }, { \"target\": \"operatorAmplitude\", \"envelope\": \"twang 3\", \"index\": 2 }, { \"target\": \"operatorAmplitude\", \"envelope\": \"twang 2\", \"index\": 3 } ] } },\r\n                { name: \"FM funky bass\", generalMidi: false, settings: { \"type\": \"FM\", \"volume\": 0, \"eqFilter\": [ { \"type\": \"low-pass\", \"cutoffHz\": 9513.66, \"linearGain\": 0.1768 } ], \"eqFilterType\": true, \"eqSimpleCut\": 5, \"eqSimplePeak\": 0, \"eqSubFilters1\": [], \"effects\": [ \"panning\", \"transition type\", \"reverb\" ], \"transition\": \"normal\", \"clicklessTransition\": false, \"pan\": 0, \"panDelay\": 10, \"reverb\": 0, \"fadeInSeconds\": 0, \"fadeOutTicks\": -3, \"algorithm\": \"1←(2 3 4)\", \"feedbackType\": \"1⟲\", \"feedbackAmplitude\": 0, \"operators\": [ { \"frequency\": \"1×\", \"amplitude\": 15, \"waveform\": \"sine\", \"pulseWidth\": 5 }, { \"frequency\": \"~1×\", \"amplitude\": 8, \"waveform\": \"sine\", \"pulseWidth\": 5 }, { \"frequency\": \"1×\", \"amplitude\": 0, \"waveform\": \"sine\", \"pulseWidth\": 5 }, { \"frequency\": \"1×\", \"amplitude\": 0, \"waveform\": \"sine\", \"pulseWidth\": 5 } ], \"envelopes\": [ { \"target\": \"noteVolume\", \"envelope\": \"punch\" }, { \"target\": \"noteVolume\", \"envelope\": \"note size\" } ] } },\r\n                { name: \"mrow\", generalMidi: false, settings: { \"type\": \"FM\", \"volume\": 0, \"eqFilter\": [], \"eqFilterType\": false, \"eqSimpleCut\": 10, \"eqSimplePeak\": 0, \"eqSubFilters0\": [], \"effects\": [ \"panning\", \"chord type\", \"reverb\" ], \"chord\": \"custom interval\", \"fastTwoNoteArp\": false, \"arpeggioSpeed\": 12, \"pan\": 0, \"panDelay\": 10, \"reverb\": 35, \"fadeInSeconds\": 0.0263, \"fadeOutTicks\": -3, \"algorithm\": \"1←3 2←4\", \"feedbackType\": \"1⟲ 2⟲ 3⟲ 4⟲\", \"feedbackAmplitude\": 5, \"operators\": [ { \"frequency\": \"4×\", \"amplitude\": 15, \"waveform\": \"sine\", \"pulseWidth\": 5 }, { \"frequency\": \"~2×\", \"amplitude\": 13, \"waveform\": \"sine\", \"pulseWidth\": 5 }, { \"frequency\": \"~2×\", \"amplitude\": 8, \"waveform\": \"sine\", \"pulseWidth\": 5 }, { \"frequency\": \"~2×\", \"amplitude\": 9, \"waveform\": \"sine\", \"pulseWidth\": 5 } ], \"envelopes\": [ { \"target\": \"operatorAmplitude\", \"envelope\": \"flare 1\", \"index\": 0 }, { \"target\": \"operatorAmplitude\", \"envelope\": \"note size\", \"index\": 1 }, { \"target\": \"operatorAmplitude\", \"envelope\": \"note size\", \"index\": 2 }, { \"target\": \"operatorAmplitude\", \"envelope\": \"flare 3\", \"index\": 3 }, { \"target\": \"feedbackAmplitude\", \"envelope\": \"flare 1\" } ] } },\r\n                { name: \"talking bass\", generalMidi: false, settings: { \"type\": \"FM\", \"volume\": 0, \"eqFilter\": [], \"effects\": [ \"chord type\" ], \"chord\": \"custom interval\", \"fadeInSeconds\": 0, \"fadeOutTicks\": -3, \"algorithm\": \"1←(2 3)←4\", \"feedbackType\": \"1⟲\", \"feedbackAmplitude\": 15, \"operators\": [ { \"frequency\": \"1×\", \"amplitude\": 15 }, { \"frequency\": \"2×\", \"amplitude\": 8 }, { \"frequency\": \"2×\", \"amplitude\": 5 }, { \"frequency\": \"1×\", \"amplitude\": 12 } ], \"envelopes\": [ { \"target\": \"operatorAmplitude\", \"envelope\": \"note size\", \"index\": 2 }, { \"target\": \"operatorAmplitude\", \"envelope\": \"note size\", \"index\": 3 }, { \"target\": \"feedbackAmplitude\", \"envelope\": \"note size\" } ] } },\r\n                { name: \"synth marimba\", generalMidi: false, settings: { \"type\": \"Picked String\", \"volume\": 0, \"eqFilter\": [ { \"type\": \"high-pass\", \"cutoffHz\": 176.78, \"linearGain\": 1 }, { \"type\": \"peak\", \"cutoffHz\": 4000, \"linearGain\": 0.5 } ], \"effects\": [ \"note filter\", \"echo\" ], \"noteFilter\": [ { \"type\": \"low-pass\", \"cutoffHz\": 6727.17, \"linearGain\": 1.4142 } ], \"echoSustain\": 71, \"echoDelayBeats\": 0.5, \"fadeInSeconds\": 0, \"fadeOutTicks\": -1, \"harmonics\": [ 86, 100, 29, 29, 0, 0, 0, 100, 0, 0, 0, 86, 29, 0, 14, 100, 0, 0, 0, 0, 0, 14, 0, 0, 14, 0, 0, 86 ], \"unison\": \"fifth\", \"stringSustain\": 7, \"envelopes\": [ { \"target\": \"noteFilterAllFreqs\", \"envelope\": \"punch\" } ] } }, \r\n\t\t\t{ name: \"italian accordian\", generalMidi: false, settings: { \"type\": \"custom chip\", \"volume\": 0, \"eqFilter\": [ { \"type\": \"low-pass\", \"cutoffHz\": 6000, \"linearGain\": 0.5 } ], \"eqFilterType\": true, \"eqSimpleCut\": 8, \"eqSimplePeak\": 1, \"eqSubFilters1\": [], \"effects\": [ \"panning\", \"chorus\", \"reverb\" ], \"pan\": 0, \"panDelay\": 10, \"chorus\": 71, \"reverb\": 45, \"fadeInSeconds\": 0.0263, \"fadeOutTicks\": -3, \"wave\": \"square\", \"unison\": \"honky tonk\", \"customChipWave\": { \"0\": -24, \"1\": -24, \"2\": -24, \"3\": -24, \"4\": -24, \"5\": -24, \"6\": -24, \"7\": -24, \"8\": -24, \"9\": -24, \"10\": -24, \"11\": -24, \"12\": -24, \"13\": -24, \"14\": -24, \"15\": -24, \"16\": 24, \"17\": 24, \"18\": 24, \"19\": 24, \"20\": 24, \"21\": 24, \"22\": 24, \"23\": 24, \"24\": -24, \"25\": -24, \"26\": -24, \"27\": -24, \"28\": -24, \"29\": -24, \"30\": -24, \"31\": -24, \"32\": -24, \"33\": -24, \"34\": -24, \"35\": -24, \"36\": -24, \"37\": -24, \"38\": -24, \"39\": -24, \"40\": 24, \"41\": 24, \"42\": 24, \"43\": 24, \"44\": 24, \"45\": 24, \"46\": 24, \"47\": 24, \"48\": -24, \"49\": -24, \"50\": -24, \"51\": -24, \"52\": -24, \"53\": -24, \"54\": -24, \"55\": -24, \"56\": -24, \"57\": -24, \"58\": -24, \"59\": -24, \"60\": -24, \"61\": -24, \"62\": -24, \"63\": -24 }, \"customChipWaveIntegral\": { \"0\": 0, \"1\": 0, \"2\": 0, \"3\": 0, \"4\": 0, \"5\": 0, \"6\": 0, \"7\": 0, \"8\": 0, \"9\": 0, \"10\": 0, \"11\": 0, \"12\": 0, \"13\": 0, \"14\": 0, \"15\": 0, \"16\": 0, \"17\": 0, \"18\": 0, \"19\": 0, \"20\": 0, \"21\": 0, \"22\": 0, \"23\": 0, \"24\": 0, \"25\": 0, \"26\": 0, \"27\": 0, \"28\": 0, \"29\": 0, \"30\": 0, \"31\": 0, \"32\": 0, \"33\": 0, \"34\": 0, \"35\": 0, \"36\": 0, \"37\": 0, \"38\": 0, \"39\": 0, \"40\": 0, \"41\": 0, \"42\": 0, \"43\": 0, \"44\": 0, \"45\": 0, \"46\": 0, \"47\": 0, \"48\": 0, \"49\": 0, \"50\": 0, \"51\": 0, \"52\": 0, \"53\": 0, \"54\": 0, \"55\": 0, \"56\": 0, \"57\": 0, \"58\": 0, \"59\": 0, \"60\": 0, \"61\": 0, \"62\": 0, \"63\": 0, \"64\": 0 }, \"envelopes\": [] } },\r\n              { name: \"custom chip supersaw\", generalMidi: false, settings: { \"type\": \"custom chip\", \"volume\": 0, \"eqFilter\": [ { \"type\": \"low-pass\", \"cutoffHz\": 19027.31, \"linearGain\": 0.7071 } ], \"eqFilterType\": true, \"eqSimpleCut\": 10, \"eqSimplePeak\": 0, \"eqSubFilters1\": [], \"effects\": [ \"panning\", \"transition type\", \"vibrato\", \"chorus\", \"reverb\" ], \"transition\": \"interrupt\", \"clicklessTransition\": false, \"vibrato\": \"delayed\", \"vibratoDepth\": 0.3, \"vibratoDelay\": 18.5, \"vibratoSpeed\": 10, \"vibratoType\": 0, \"pan\": 0, \"panDelay\": 10, \"chorus\": 29, \"reverb\": 29, \"fadeInSeconds\": 0, \"fadeOutTicks\": -1, \"wave\": \"square\", \"unison\": \"dissonant\", \"customChipWave\": { \"0\": 22, \"1\": 22, \"2\": 16, \"3\": 6, \"4\": 0, \"5\": -3, \"6\": -8, \"7\": -10, \"8\": -13, \"9\": -16, \"10\": -19, \"11\": -19, \"12\": -20, \"13\": -22, \"14\": -22, \"15\": -24, \"16\": -24, \"17\": -24, \"18\": -24, \"19\": -24, \"20\": -24, \"21\": -24, \"22\": -24, \"23\": -24, \"24\": -24, \"25\": -24, \"26\": -24, \"27\": -24, \"28\": -24, \"29\": -24, \"30\": -24, \"31\": 24, \"32\": 24, \"33\": 16, \"34\": 9, \"35\": 6, \"36\": 4, \"37\": 2, \"38\": 0, \"39\": -1, \"40\": -3, \"41\": -4, \"42\": -4, \"43\": -6, \"44\": -6, \"45\": -6, \"46\": -6, \"47\": -5, \"48\": -5, \"49\": -4, \"50\": -2, \"51\": -2, \"52\": 1, \"53\": 4, \"54\": 6, \"55\": 8, \"56\": 10, \"57\": 12, \"58\": 14, \"59\": 16, \"60\": 18, \"61\": 19, \"62\": 22, \"63\": 24 }, \"customChipWaveIntegral\": { \"0\": 0, \"1\": 0, \"2\": 0, \"3\": 0, \"4\": 0, \"5\": 0, \"6\": 0, \"7\": 0, \"8\": 0, \"9\": 0, \"10\": 0, \"11\": 0, \"12\": 0, \"13\": 0, \"14\": 0, \"15\": 0, \"16\": 0, \"17\": 0, \"18\": 0, \"19\": 0, \"20\": 0, \"21\": 0, \"22\": 0, \"23\": 0, \"24\": 0, \"25\": 0, \"26\": 0, \"27\": 0, \"28\": 0, \"29\": 0, \"30\": 0, \"31\": 0, \"32\": 0, \"33\": 0, \"34\": 0, \"35\": 0, \"36\": 0, \"37\": 0, \"38\": 0, \"39\": 0, \"40\": 0, \"41\": 0, \"42\": 0, \"43\": 0, \"44\": 0, \"45\": 0, \"46\": 0, \"47\": 0, \"48\": 0, \"49\": 0, \"50\": 0, \"51\": 0, \"52\": 0, \"53\": 0, \"54\": 0, \"55\": 0, \"56\": 0, \"57\": 0, \"58\": 0, \"59\": 0, \"60\": 0, \"61\": 0, \"62\": 0, \"63\": 0, \"64\": 0 }, \"envelopes\": [] } },\r\n               { name: \"fm supersaw\", generalMidi: false, settings: { \"type\": \"FM6op\", \"volume\": 0, \"eqFilter\": [ { \"type\": \"low-pass\", \"cutoffHz\": 19027.31, \"linearGain\": 1.4142 }, { \"type\": \"high-pass\", \"cutoffHz\": 148.65, \"linearGain\": 0.7071 } ], \"eqFilterType\": false, \"eqSimpleCut\": 10, \"eqSimplePeak\": 0, \"eqSubFilters0\": [ { \"type\": \"low-pass\", \"cutoffHz\": 19027.31, \"linearGain\": 1.4142 }, { \"type\": \"high-pass\", \"cutoffHz\": 148.65, \"linearGain\": 0.7071 } ], \"effects\": [ \"panning\", \"transition type\", \"pitch shift\", \"note filter\", \"chorus\", \"reverb\" ], \"transition\": \"continue\", \"clicklessTransition\": false, \"pitchShiftSemitones\": 0, \"noteFilterType\": false, \"noteSimpleCut\": 10, \"noteSimplePeak\": 0, \"noteFilter\": [], \"noteSubFilters0\": [], \"noteSubFilters1\": [ { \"type\": \"low-pass\", \"cutoffHz\": 4756.83, \"linearGain\": 1 } ], \"pan\": 0, \"panDelay\": 10, \"chorus\": 71, \"reverb\": 0, \"fadeInSeconds\": 0, \"fadeOutTicks\": -1, \"algorithm\": \"1 2 3 4 5 6\", \"feedbackType\": \"1⟲\", \"feedbackAmplitude\": 0, \"operators\": [ { \"frequency\": \"1×\", \"amplitude\": 13, \"waveform\": \"sawtooth\", \"pulseWidth\": 5 }, { \"frequency\": \"~1×\", \"amplitude\": 15, \"waveform\": \"sawtooth\", \"pulseWidth\": 5 }, { \"frequency\": \"2×\", \"amplitude\": 10, \"waveform\": \"sawtooth\", \"pulseWidth\": 5 }, { \"frequency\": \"3×\", \"amplitude\": 7, \"waveform\": \"sawtooth\", \"pulseWidth\": 5 }, { \"frequency\": \"4×\", \"amplitude\": 9, \"waveform\": \"sawtooth\", \"pulseWidth\": 5 }, { \"frequency\": \"8×\", \"amplitude\": 6, \"waveform\": \"sawtooth\", \"pulseWidth\": 5 } ], \"envelopes\": [] } },\r\n\t\t\t //THANKS ANSWEARING MACHINE\r\n\t\t\t { name: \"obama why\", generalMidi: false, settings:{ \"type\": \"harmonics\", \"volume\": 80, \"eqFilter\": [], \"effects\": [ \"note filter\", \"panning\", \"reverb\" ], \"noteFilter\": [ { \"type\": \"low-pass\", \"cutoffHz\": 840.9, \"linearGain\": 11.3137 } ], \"pan\": 0, \"reverb\": 0, \"fadeInSeconds\": 0.0263, \"fadeOutTicks\": -3, \"harmonics\": [ 100, 86, 29, 29, 14, 14, 0, 14, 14, 43, 71, 100, 100, 86, 71, 71, 57, 57, 43, 43, 43, 43, 43, 0, 0, 0, 0, 0 ], \"unison\": \"octave\", \"envelopes\": [ { \"target\": \"noteFilterAllFreqs\", \"envelope\": \"note size\" } ] } },\r\n\t\t\t //thanks to nobo ig? (this is from a beepcord inside joke)\r\n\t\t\t\r\n\t\t\t\r\n\t\t\t\t //custom presets from this mod\t\t \r\n\t\t\t]) },\r\n    ]);\r\n\r\n    public static valueToPreset(presetValue: number): Preset | null {\r\n        const categoryIndex: number = presetValue >> 6;\r\n        const presetIndex: number = presetValue & 0x3F;\r\n        return EditorConfig.presetCategories[categoryIndex].presets[presetIndex];\r\n    }\r\n\r\n    public static midiProgramToPresetValue(program: number): number | null {\r\n        for (let categoryIndex: number = 0; categoryIndex < EditorConfig.presetCategories.length; categoryIndex++) {\r\n            const category: PresetCategory = EditorConfig.presetCategories[categoryIndex];\r\n            for (let presetIndex: number = 0; presetIndex < category.presets.length; presetIndex++) {\r\n                const preset: Preset = category.presets[presetIndex];\r\n                if (preset.generalMidi && preset.midiProgram == program) return (categoryIndex << 6) + presetIndex;\r\n            }\r\n        }\r\n        return null;\r\n    }\r\n\r\n    public static nameToPresetValue(presetName: string): number | null {\r\n        for (let categoryIndex: number = 0; categoryIndex < EditorConfig.presetCategories.length; categoryIndex++) {\r\n            const category: PresetCategory = EditorConfig.presetCategories[categoryIndex];\r\n            for (let presetIndex: number = 0; presetIndex < category.presets.length; presetIndex++) {\r\n                const preset: Preset = category.presets[presetIndex];\r\n                if (preset.name == presetName) return (categoryIndex << 6) + presetIndex;\r\n            }\r\n        }\r\n        return null;\r\n    }\r\n\r\n    public static instrumentToPreset(instrument: InstrumentType): Preset | null {\r\n        return EditorConfig.presetCategories[0].presets.dictionary?.[TypePresets?.[instrument]];\r\n    }\r\n}\r\n","// Copyright (C) 2020 John Nesky, distributed under the MIT license.\n\nexport function applyElementArgs<T extends HTMLElement | SVGElement | DocumentFragment>(element: T, args: Array<any>): T {\n\tfor (const arg of args) {\n\t\tif (arg instanceof Node) {\n\t\t\telement.appendChild(arg);\n\t\t} else if (typeof arg === \"string\") {\n\t\t\telement.appendChild(document.createTextNode(arg));\n\t\t} else if (typeof arg === \"function\") {\n\t\t\tapplyElementArgs(element, [arg()]);\n\t\t} else if (Array.isArray(arg)) {\n\t\t\tapplyElementArgs(element, arg);\n\t\t} else if (arg && typeof Symbol !== \"undefined\" && typeof arg[Symbol.iterator] === \"function\") {\n\t\t\tapplyElementArgs(element, [...arg]);\n\t\t} else if (arg && arg.constructor === Object && element instanceof Element) {\n\t\t\t// If the argument is a literal {} Object\n\t\t\tfor (const key of Object.keys(arg)) {\n\t\t\t\tconst value = arg[key];\n\t\t\t\t/*if (key === \"classList\") {\n\t\t\t\t\tif (typeof value === \"string\") {\n\t\t\t\t\t\telement.classList.add(...value.split(\" \"));\n\t\t\t\t\t} else if (Array.isArray(arg) || (value && typeof Symbol !== \"undefined\" && typeof value[Symbol.iterator] === \"function\")) {\n\t\t\t\t\t\telement.classList.add(...value);\n\t\t\t\t\t} else {\n\t\t\t\t\t\tconsole.warn(\"Invalid classList value \\\"\" + value + \"\\\" on \" + element.tagName + \" element.\");\n\t\t\t\t\t}\n\t\t\t\t} else*/ if (key === \"class\" /* || key === \"className\" */) {\n\t\t\t\t\tif (typeof value === \"string\") {\n\t\t\t\t\t\telement.setAttribute(\"class\", value);\n\t\t\t\t\t} else if (Array.isArray(arg) || (value && typeof Symbol !== \"undefined\" && typeof value[Symbol.iterator] === \"function\")) {\n\t\t\t\t\t\telement.setAttribute(\"class\", [...value].join(\" \"));\n\t\t\t\t\t} else {\n\t\t\t\t\t\tconsole.warn(\"Invalid \" + key + \" value \\\"\" + value + \"\\\" on \" + element.tagName + \" element.\");\n\t\t\t\t\t}\n\t\t\t\t} else if (key === \"style\") {\n\t\t\t\t\tif (value && value.constructor === Object) {\n\t\t\t\t\t\tfor (const styleKey of Object.keys(value)) {\n\t\t\t\t\t\t\tif (styleKey in (<HTMLElement | SVGElement>element).style) {\n\t\t\t\t\t\t\t\t// In practice, camelCase and kebab-case properties both work as properties on CSSStyleDeclaration objects.\n\t\t\t\t\t\t\t\t(<any> element).style[styleKey] = value[styleKey];\n\t\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t\t// CSS variables start with -- and must be set with setProperty.\n\t\t\t\t\t\t\t\t(<HTMLElement | SVGElement>element).style.setProperty(styleKey, value[styleKey]);\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t} else {\n\t\t\t\t\t\telement.setAttribute(key, value);\n\t\t\t\t\t}\n\t\t\t\t} else if (typeof(value) === \"function\") {\n\t\t\t\t\t// If value is a callback, set as a property instead trying to coerce to string.\n\t\t\t\t\t(<any>element)[key] = value;\n\t\t\t\t} else if (typeof(value) === \"boolean\") {\n\t\t\t\t\t// If value is boolean, set attribute if true, remove if false.\n\t\t\t\t\tif (value) element.setAttribute(key, \"\");\n\t\t\t\t\telse element.removeAttribute(key);\n\t\t\t\t} else {\n\t\t\t\t\t// Default to setting attribute, as if writing html directly.\n\t\t\t\t\telement.setAttribute(key, value);\n\t\t\t\t}\n\t\t\t}\n\t\t} else {\n\t\t\t// Just convert unrecognized objects to text and append them.\n\t\t\telement.appendChild(document.createTextNode(arg));\n\t\t}\n\t}\n\treturn element;\n}\n\nexport const svgNS: string = \"http://www.w3.org/2000/svg\";\n\nexport function parseHTML(...args: Array<any>): DocumentFragment {\n\treturn document.createRange().createContextualFragment(args.join());\n}\n\n//let svgParser: SVGSVGElement | null = null;\nexport function parseSVG(...args: Array<any>): DocumentFragment {\n\tconst fragment: DocumentFragment = document.createDocumentFragment();\n\t\n\t// Internet Explorer doesn't support the first method here, so I commented it out and used a slightly more complex one involving DOMParser below.\n\t/*\n\tif (svgParser === null) svgParser = <SVGSVGElement>document.createElementNS(svgNS, \"svg\");\n\tsvgParser.innerHTML = args.join();\n\twhile (svgParser.firstChild !== null) fragment.appendChild(svgParser.firstChild);\n\t*/\n\tconst svgParser: Element = new DOMParser().parseFromString(\"<svg xmlns=\\\"http://www.w3.org/2000/svg\\\">\" + args.join() + \"</svg>\", \"image/svg+xml\").documentElement;\n\twhile (svgParser.firstChild !== null) {\n\t\tdocument.importNode(svgParser.firstChild, true);\n\t\tfragment.appendChild(svgParser.firstChild);\n\t}\n\t\n\treturn fragment;\n}\n\nexport function replaceScriptWith(...args: Array<any>): void {\n\tlet currentScript: HTMLScriptElement | SVGScriptElement | null = document.currentScript;\n\tif (currentScript == null) { // double-equals to intentionally include undefined in Internet Explorer.\n\t\t\n\t\t// Internet Explorer doens't support currentScript, try this method instead:\n\t\tif (document.readyState === \"loading\") {\n\t\t\tconst scripts: HTMLCollectionOf<HTMLScriptElement> = document.getElementsByTagName(\"script\");\n\t\t\tcurrentScript = scripts[scripts.length - 1];\n\t\t}\n\t\t\n\t\tif (currentScript == null) {\n\t\t\tconsole.warn(\"Couldn't replace script because no script is currently being parsed and executed, maybe this is happening in a callback function or event handler instead?\");\n\t\t\treturn;\n\t\t}\n\t}\n\tif (currentScript.parentNode === null) {\n\t\tconsole.warn(\"Couldn't replace script element because it is not attached to a parent anymore, did you try to replace the same script more than once?\");\n\t\treturn;\n\t}\n\tcurrentScript.parentNode.replaceChild(applyElementArgs(document.createDocumentFragment(), args), currentScript);\n}\n\nexport function applyToElement<T extends HTMLElement | SVGElement | DocumentFragment>(element: T, ...args: Array<any>): T {\n\tif (!(element instanceof Element || element instanceof DocumentFragment)) {\n\t\tconsole.warn(\"Couldn't apply to provided argument because it's not an element or DocumentFragment.\");\n\t\treturn element;\n\t}\n\treturn applyElementArgs(element, args);\n}\n","// Copyright (C) 2020 John Nesky, distributed under the MIT license.\n\nimport {applyElementArgs, svgNS, parseHTML, parseSVG, replaceScriptWith, applyToElement} from \"./elements-base\";\nexport {replaceScriptWith, applyToElement};\n\ninterface HTMLElementFactory {\n\t(...args: Array<string>): DocumentFragment;\n\t//readonly [key: string]: (...args: Array<any>) => HTMLElement;\n\ta(...args: Array<any>): HTMLAnchorElement;\n\tabbr(...args: Array<any>): HTMLElement;\n\taddress(...args: Array<any>): HTMLElement;\n\tarea(...args: Array<any>): HTMLAreaElement;\n\tarticle(...args: Array<any>): HTMLElement;\n\taside(...args: Array<any>): HTMLElement;\n\taudio(...args: Array<any>): HTMLAudioElement;\n\tb(...args: Array<any>): HTMLElement;\n\tbase(...args: Array<any>): HTMLBaseElement;\n\tbdi(...args: Array<any>): HTMLElement;\n\tbdo(...args: Array<any>): HTMLElement;\n\tblockquote(...args: Array<any>): HTMLQuoteElement;\n\tbr(...args: Array<any>): HTMLBRElement;\n\tbutton(...args: Array<any>): HTMLButtonElement;\n\tcanvas(...args: Array<any>): HTMLCanvasElement;\n\tcaption(...args: Array<any>): HTMLTableCaptionElement;\n\tcite(...args: Array<any>): HTMLElement;\n\tcode(...args: Array<any>): HTMLElement;\n\tcol(...args: Array<any>): HTMLTableColElement;\n\tcolgroup(...args: Array<any>): HTMLTableColElement;\n\tdatalist(...args: Array<any>): HTMLDataListElement;\n\tdd(...args: Array<any>): HTMLElement;\n\tdel(...args: Array<any>): HTMLModElement;\n\tdetails(...args: Array<any>): HTMLDetailsElement;\n\tdfn(...args: Array<any>): HTMLElement;\n\tdialog(...args: Array<any>): HTMLDialogElement;\n\tdiv(...args: Array<any>): HTMLDivElement;\n\tdl(...args: Array<any>): HTMLDListElement;\n\tdt(...args: Array<any>): HTMLElement;\n\tem(...args: Array<any>): HTMLElement;\n\tembed(...args: Array<any>): HTMLEmbedElement;\n\tfieldset(...args: Array<any>): HTMLFieldSetElement;\n\tfigcaption(...args: Array<any>): HTMLElement;\n\tfigure(...args: Array<any>): HTMLElement;\n\tfooter(...args: Array<any>): HTMLElement;\n\tform(...args: Array<any>): HTMLFormElement;\n\th1(...args: Array<any>): HTMLHeadingElement;\n\th2(...args: Array<any>): HTMLHeadingElement;\n\th3(...args: Array<any>): HTMLHeadingElement;\n\th4(...args: Array<any>): HTMLHeadingElement;\n\th5(...args: Array<any>): HTMLHeadingElement;\n\th6(...args: Array<any>): HTMLHeadingElement;\n\theader(...args: Array<any>): HTMLElement;\n\thr(...args: Array<any>): HTMLHRElement;\n\ti(...args: Array<any>): HTMLElement;\n\tiframe(...args: Array<any>): HTMLIFrameElement;\n\timg(...args: Array<any>): HTMLImageElement;\n\tinput(...args: Array<any>): HTMLInputElement;\n\tins(...args: Array<any>): HTMLModElement;\n\tkbd(...args: Array<any>): HTMLElement;\n\tlabel(...args: Array<any>): HTMLLabelElement;\n\tlegend(...args: Array<any>): HTMLLegendElement;\n\tli(...args: Array<any>): HTMLLIElement;\n\tlink(...args: Array<any>): HTMLLinkElement;\n\tmain(...args: Array<any>): HTMLElement;\n\tmap(...args: Array<any>): HTMLMapElement;\n\tmark(...args: Array<any>): HTMLElement;\n\tmenu(...args: Array<any>): HTMLMenuElement;\n\tmenuitem(...args: Array<any>): HTMLUnknownElement;\n\tmeta(...args: Array<any>): HTMLMetaElement;\n\tmeter(...args: Array<any>): HTMLMeterElement;\n\tnav(...args: Array<any>): HTMLElement;\n\tnoscript(...args: Array<any>): HTMLElement;\n\tobject(...args: Array<any>): HTMLObjectElement;\n\tol(...args: Array<any>): HTMLOListElement;\n\toptgroup(...args: Array<any>): HTMLOptGroupElement;\n\toption(...args: Array<any>): HTMLOptionElement;\n\toutput(...args: Array<any>): HTMLOutputElement;\n\tp(...args: Array<any>): HTMLParagraphElement;\n\tparam(...args: Array<any>): HTMLParamElement;\n\tpicture(...args: Array<any>): HTMLPictureElement;\n\tpre(...args: Array<any>): HTMLPreElement;\n\tprogress(...args: Array<any>): HTMLProgressElement;\n\tq(...args: Array<any>): HTMLQuoteElement;\n\trp(...args: Array<any>): HTMLElement;\n\trt(...args: Array<any>): HTMLElement;\n\truby(...args: Array<any>): HTMLElement;\n\ts(...args: Array<any>): HTMLElement;\n\tsamp(...args: Array<any>): HTMLElement;\n\tscript(...args: Array<any>): HTMLScriptElement;\n\tsection(...args: Array<any>): HTMLElement;\n\tselect(...args: Array<any>): HTMLSelectElement;\n\tsmall(...args: Array<any>): HTMLElement;\n\tsource(...args: Array<any>): HTMLSourceElement;\n\tspan(...args: Array<any>): HTMLSpanElement;\n\tstrong(...args: Array<any>): HTMLElement;\n\tstyle(...args: Array<any>): HTMLStyleElement;\n\tsub(...args: Array<any>): HTMLElement;\n\tsummary(...args: Array<any>): HTMLElement;\n\tsup(...args: Array<any>): HTMLElement;\n\ttable(...args: Array<any>): HTMLTableElement;\n\ttbody(...args: Array<any>): HTMLTableSectionElement;\n\ttd(...args: Array<any>): HTMLTableCellElement;\n\ttemplate(...args: Array<any>): HTMLTemplateElement;\n\ttextarea(...args: Array<any>): HTMLTextAreaElement;\n\ttfoot(...args: Array<any>): HTMLTableSectionElement;\n\tth(...args: Array<any>): HTMLTableCellElement;\n\tthead(...args: Array<any>): HTMLTableSectionElement;\n\ttime(...args: Array<any>): HTMLTimeElement;\n\ttitle(...args: Array<any>): HTMLTitleElement;\n\ttr(...args: Array<any>): HTMLTableRowElement;\n\ttrack(...args: Array<any>): HTMLTrackElement;\n\tu(...args: Array<any>): HTMLElement;\n\tul(...args: Array<any>): HTMLUListElement;\n\tvar(...args: Array<any>): HTMLElement;\n\tvideo(...args: Array<any>): HTMLVideoElement;\n\twbr(...args: Array<any>): HTMLElement;\n}\n\ninterface SVGElementFactory {\n\t(...args: Array<string>): DocumentFragment;\n\t//readonly [key: string]: (...args: Array<any>) => SVGElement;\n\ta(...args: Array<any>): SVGAElement;\n\taltGlyph(...args: Array<any>): SVGElement;\n\taltGlyphDef(...args: Array<any>): SVGElement;\n\taltGlyphItem(...args: Array<any>): SVGElement;\n\tanimate(...args: Array<any>): SVGAnimateElement;\n\tanimateMotion(...args: Array<any>): SVGAnimateMotionElement;\n\tanimateTransform(...args: Array<any>): SVGAnimateTransformElement;\n\tcircle(...args: Array<any>): SVGCircleElement;\n\tclipPath(...args: Array<any>): SVGClipPathElement;\n\t\"color-profile\"(...args: Array<any>): SVGElement;\n\tcolor_profile(...args: Array<any>): SVGElement;\n\tcursor(...args: Array<any>): SVGElement;\n\tdefs(...args: Array<any>): SVGDefsElement;\n\tdesc(...args: Array<any>): SVGDescElement;\n\tdiscard(...args: Array<any>): SVGElement;\n\tellipse(...args: Array<any>): SVGEllipseElement;\n\tfeBlend(...args: Array<any>): SVGFEBlendElement;\n\tfeColorMatrix(...args: Array<any>): SVGFEColorMatrixElement;\n\tfeComponentTransfer(...args: Array<any>): SVGFEComponentTransferElement;\n\tfeComposite(...args: Array<any>): SVGFECompositeElement;\n\tfeConvolveMatrix(...args: Array<any>): SVGFEConvolveMatrixElement;\n\tfeDiffuseLighting(...args: Array<any>): SVGFEDiffuseLightingElement;\n\tfeDisplacementMap(...args: Array<any>): SVGFEDisplacementMapElement;\n\tfeDistantLight(...args: Array<any>): SVGFEDistantLightElement;\n\tfeDropShadow(...args: Array<any>): SVGElement;\n\tfeFlood(...args: Array<any>): SVGFEFloodElement;\n\tfeFuncA(...args: Array<any>): SVGFEFuncAElement;\n\tfeFuncB(...args: Array<any>): SVGFEFuncBElement;\n\tfeFuncG(...args: Array<any>): SVGFEFuncGElement;\n\tfeFuncR(...args: Array<any>): SVGFEFuncRElement;\n\tfeGaussianBlur(...args: Array<any>): SVGFEGaussianBlurElement;\n\tfeImage(...args: Array<any>): SVGFEImageElement;\n\tfeMerge(...args: Array<any>): SVGFEMergeElement;\n\tfeMergeNode(...args: Array<any>): SVGFEMergeNodeElement;\n\tfeMorphology(...args: Array<any>): SVGFEMorphologyElement;\n\tfeOffset(...args: Array<any>): SVGFEOffsetElement;\n\tfePointLight(...args: Array<any>): SVGFEPointLightElement;\n\tfeSpecularLighting(...args: Array<any>): SVGFESpecularLightingElement;\n\tfeSpotLight(...args: Array<any>): SVGFESpotLightElement;\n\tfeTile(...args: Array<any>): SVGFETileElement;\n\tfeTurbulence(...args: Array<any>): SVGFETurbulenceElement;\n\tfilter(...args: Array<any>): SVGFilterElement;\n\tfont(...args: Array<any>): SVGElement;\n\t\"font-face\"(...args: Array<any>): SVGElement;\n\tfont_face(...args: Array<any>): SVGElement;\n\t\"font-face-format\"(...args: Array<any>): SVGElement;\n\tfont_face_format(...args: Array<any>): SVGElement;\n\t\"font-face-name\"(...args: Array<any>): SVGElement;\n\tfont_face_name(...args: Array<any>): SVGElement;\n\t\"font-face-src\"(...args: Array<any>): SVGElement;\n\tfont_face_src(...args: Array<any>): SVGElement;\n\t\"font-face-uri\"(...args: Array<any>): SVGElement;\n\tfont_face_uri(...args: Array<any>): SVGElement;\n\tforeignObject(...args: Array<any>): SVGForeignObjectElement;\n\tg(...args: Array<any>): SVGGElement;\n\tglyph(...args: Array<any>): SVGElement;\n\tglyphRef(...args: Array<any>): SVGElement;\n\thkern(...args: Array<any>): SVGElement;\n\timage(...args: Array<any>): SVGImageElement;\n\tline(...args: Array<any>): SVGLineElement;\n\tlinearGradient(...args: Array<any>): SVGLinearGradientElement;\n\tmarker(...args: Array<any>): SVGMarkerElement;\n\tmask(...args: Array<any>): SVGMaskElement;\n\tmetadata(...args: Array<any>): SVGMetadataElement;\n\t\"missing-glyph\"(...args: Array<any>): SVGElement;\n\tmissing_glyph(...args: Array<any>): SVGElement;\n\tmpath(...args: Array<any>): SVGElement;\n\tpath(...args: Array<any>): SVGPathElement;\n\tpattern(...args: Array<any>): SVGPatternElement;\n\tpolygon(...args: Array<any>): SVGPolygonElement;\n\tpolyline(...args: Array<any>): SVGPolylineElement;\n\tradialGradient(...args: Array<any>): SVGRadialGradientElement;\n\trect(...args: Array<any>): SVGRectElement;\n\tscript(...args: Array<any>): SVGScriptElement;\n\tset(...args: Array<any>): SVGElement;\n\tstop(...args: Array<any>): SVGStopElement;\n\tstyle(...args: Array<any>): SVGStyleElement;\n\tsvg(...args: Array<any>): SVGSVGElement;\n\tswitch(...args: Array<any>): SVGSwitchElement;\n\tsymbol(...args: Array<any>): SVGSymbolElement;\n\ttext(...args: Array<any>): SVGTextElement;\n\ttextPath(...args: Array<any>): SVGTextPathElement;\n\ttitle(...args: Array<any>): SVGTitleElement;\n\ttref(...args: Array<any>): SVGElement;\n\ttspan(...args: Array<any>): SVGTSpanElement;\n\tuse(...args: Array<any>): SVGUseElement;\n\tview(...args: Array<any>): SVGViewElement;\n\tvkern(...args: Array<any>): SVGElement;\n}\n\nexport const HTML: HTMLElementFactory = <HTMLElementFactory> <unknown> parseHTML;\nexport const SVG: SVGElementFactory = <SVGElementFactory> <unknown> parseSVG;\n\nfor (const name of \"a abbr address area article aside audio b base bdi bdo blockquote br button canvas caption cite code col colgroup datalist dd del details dfn dialog div dl dt em embed fieldset figcaption figure footer form h1 h2 h3 h4 h5 h6 header hr i iframe img input ins kbd label legend li link main map mark menu menuitem meta meter nav noscript object ol optgroup option output p param picture pre progress q rp rt ruby s samp script section select small source span strong style sub summary sup table tbody td template textarea tfoot th thead time title tr track u ul var video wbr\".split(\" \")) {\n\t(<any>HTML)[name] = (...args: Array<any>) => applyElementArgs(document.createElement(name), args);\n}\nfor (const name of \"a altGlyph altGlyphDef altGlyphItem animate animateMotion animateTransform circle clipPath color-profile cursor defs desc discard ellipse feBlend feColorMatrix feComponentTransfer feComposite feConvolveMatrix feDiffuseLighting feDisplacementMap feDistantLight feDropShadow feFlood feFuncA feFuncB feFuncG feFuncR feGaussianBlur feImage feMerge feMergeNode feMorphology feOffset fePointLight feSpecularLighting feSpotLight feTile feTurbulence filter font font-face font-face-format font-face-name font-face-src font-face-uri foreignObject g glyph glyphRef hkern image line linearGradient marker mask metadata missing-glyph mpath path pattern polygon polyline radialGradient rect script set stop style svg switch symbol text textPath title tref tspan use view vkern\".split(\" \")) {\n\t(<any>SVG)[name] = (...args: Array<any>) => applyElementArgs(<SVGElement> document.createElementNS(svgNS, name), args);\n\tif (/-/.test(name)) {\n\t\tconst snakeCaseName = name.replace(/-/g, \"_\");\n\t\t(<any>SVG)[snakeCaseName] = (...args: Array<any>) => applyElementArgs(<SVGElement> document.createElementNS(svgNS, name), args);\n\t}\n}\n","// Copyright (c) 2012-2022 John Nesky and contributing authors, distributed under the MIT license, see accompanying the LICENSE.md file.\r\n\r\nimport { BeepBoxOption, DictionaryArray, toNameMap, Config } from \"../synth/SynthConfig\";\r\nimport { Song } from \"../synth/synth\";\r\nimport { HTML } from \"imperative-html/dist/esm/elements-strict\";\r\n\r\nexport interface ChannelColors extends BeepBoxOption {\r\n    readonly secondaryChannel: string;\r\n    readonly primaryChannel: string;\r\n    readonly secondaryNote: string;\r\n    readonly primaryNote: string;\r\n}\r\n\r\nexport class ColorConfig {\r\n    public static colorLookup: Map<number, ChannelColors> = new Map<number, ChannelColors>();\r\n\r\n    public static readonly themes: { [name: string]: string } = {\r\n      \"dark classic\": `\r\n\t\t\t:root {\r\n\t\t\t\t--page-margin: black;\r\n\t\t\t\t--editor-background: black;\r\n\t\t\t\t--hover-preview: white;\r\n\t\t\t\t--playhead: white;\r\n\t\t\t\t--primary-text: white;\r\n\t\t\t\t--secondary-text: #999;\r\n\t\t\t\t--inverted-text: black;\r\n\t\t\t\t--text-selection: rgba(119,68,255,0.99);\r\n\t\t\t\t--box-selection-fill: rgba(255,255,255,0.2);\r\n\t\t\t\t--loop-accent: #74f;\r\n\t\t\t\t--link-accent: #98f;\r\n\t\t\t\t--ui-widget-background: #444;\r\n\t\t\t\t--ui-widget-focus: #777;\r\n\t\t\t\t--pitch-background: #444;\r\n\t\t\t\t--tonic: #864;\r\n\t\t\t\t--fifth-note: #468;\r\n\t\t\t\t--white-piano-key: #bbb;\r\n\t\t\t\t--black-piano-key: #444;\r\n\t\t\t\t--white-piano-key-text: #131200;\r\n\t\t\t\t--black-piano-key-text: #fff;\r\n\t\t\t\t\t--use-color-formula: false;\r\n\t\t\t\t\t--track-editor-bg-pitch: #444;\r\n\t\t\t\t\t--track-editor-bg-pitch-dim: #333;\r\n\t\t\t\t\t--track-editor-bg-noise: #444;\r\n\t\t\t\t\t--track-editor-bg-noise-dim: #333;\r\n\t\t\t\t\t--track-editor-bg-mod: #234;\r\n\t\t\t\t\t--track-editor-bg-mod-dim: #123;\r\n\t\t\t\t\t--multiplicative-mod-slider: #456;\r\n\t\t\t\t\t--overwriting-mod-slider: #654;\r\n\t\t\t\t\t--indicator-primary: #74f;\r\n\t\t\t\t\t--indicator-secondary: #444;\r\n\t\t\t\t\t--select2-opt-group: #585858;\r\n\t\t\t\t\t--input-box-outline: #333;\r\n\t\t\t\t\t--mute-button-normal: #ffa033;\r\n\t\t\t\t\t--mute-button-mod: #9a6bff;\r\n\t\t\t\t--pitch1-secondary-channel: #0099A1;\r\n\t\t\t\t--pitch1-primary-channel:   #25F3FF;\r\n\t\t\t\t--pitch1-secondary-note:    #00BDC7;\r\n\t\t\t\t--pitch1-primary-note:      #92F9FF;\r\n\t\t\t\t--pitch2-secondary-channel: #A1A100;\r\n\t\t\t\t--pitch2-primary-channel:   #FFFF25;\r\n\t\t\t\t--pitch2-secondary-note:    #C7C700;\r\n\t\t\t\t--pitch2-primary-note:      #FFFF92;\r\n\t\t\t\t--pitch3-secondary-channel: #C75000;\r\n\t\t\t\t--pitch3-primary-channel:   #FF9752;\r\n\t\t\t\t--pitch3-secondary-note:    #FF771C;\r\n\t\t\t\t--pitch3-primary-note:      #FFCDAB;\r\n\t\t\t\t--pitch4-secondary-channel: #00A100;\r\n\t\t\t\t--pitch4-primary-channel:   #50FF50;\r\n\t\t\t\t--pitch4-secondary-note:    #00C700;\r\n\t\t\t\t--pitch4-primary-note:      #A0FFA0;\r\n\t\t\t\t--pitch5-secondary-channel: #D020D0;\r\n\t\t\t\t--pitch5-primary-channel:   #FF90FF;\r\n\t\t\t\t--pitch5-secondary-note:    #E040E0;\r\n\t\t\t\t--pitch5-primary-note:      #FFC0FF;\r\n\t\t\t\t--pitch6-secondary-channel: #7777B0;\r\n\t\t\t\t--pitch6-primary-channel:   #A0A0FF;\r\n\t\t\t\t--pitch6-secondary-note:    #8888D0;\r\n\t\t\t\t--pitch6-primary-note:      #D0D0FF;\r\n\t\t\t\t--pitch7-secondary-channel: #8AA100;\r\n\t\t\t\t--pitch7-primary-channel:   #DEFF25;\r\n\t\t\t\t--pitch7-secondary-note:    #AAC700;\r\n\t\t\t\t--pitch7-primary-note:      #E6FF92;\r\n\t\t\t\t--pitch8-secondary-channel: #DF0019;\r\n\t\t\t\t--pitch8-primary-channel:   #FF98A4;\r\n\t\t\t\t--pitch8-secondary-note:    #FF4E63;\r\n\t\t\t\t--pitch8-primary-note:      #FFB2BB;\r\n\t\t\t\t--pitch9-secondary-channel: #00A170;\r\n\t\t\t\t--pitch9-primary-channel:   #50FFC9;\r\n\t\t\t\t--pitch9-secondary-note:    #00C78A;\r\n\t\t\t\t--pitch9-primary-note:      #83FFD9;\r\n\t\t\t\t--pitch10-secondary-channel:#A11FFF;\r\n\t\t\t\t--pitch10-primary-channel:  #CE8BFF;\r\n\t\t\t\t--pitch10-secondary-note:   #B757FF;\r\n\t\t\t\t--pitch10-primary-note:     #DFACFF;\r\n\t\t\t\t--noise1-secondary-channel: #6F6F6F;\r\n\t\t\t\t--noise1-primary-channel:   #AAAAAA;\r\n\t\t\t\t--noise1-secondary-note:    #A7A7A7;\r\n\t\t\t\t--noise1-primary-note:      #E0E0E0;\r\n\t\t\t\t--noise2-secondary-channel: #996633;\r\n\t\t\t\t--noise2-primary-channel:   #DDAA77;\r\n\t\t\t\t--noise2-secondary-note:    #CC9966;\r\n\t\t\t\t--noise2-primary-note:      #F0D0BB;\r\n\t\t\t\t--noise3-secondary-channel: #4A6D8F;\r\n\t\t\t\t--noise3-primary-channel:   #77AADD;\r\n\t\t\t\t--noise3-secondary-note:    #6F9FCF;\r\n\t\t\t\t--noise3-primary-note:      #BBD7FF;\r\n\t\t\t\t--noise4-secondary-channel: #7A4F9A;\r\n\t\t\t\t--noise4-primary-channel:   #AF82D2;\r\n\t\t\t\t--noise4-secondary-note:    #9E71C1;\r\n\t\t\t\t--noise4-primary-note:      #D4C1EA;\r\n\t\t\t\t--noise5-secondary-channel: #607837;\r\n\t\t\t\t--noise5-primary-channel:   #A2BB77;\r\n\t\t\t\t--noise5-secondary-note:    #91AA66;\r\n\t\t\t\t--noise5-primary-note:      #C5E2B2;\r\n          --mod1-secondary-channel:   #339955;\r\n\t\t\t\t\t--mod1-primary-channel:     #77fc55;\r\n\t\t\t\t\t--mod1-secondary-note:      #77ff8a;\r\n\t\t\t\t\t--mod1-primary-note:        #cdffee;\r\n\t\t\t\t\t--mod2-secondary-channel:   #993355;\r\n\t\t\t\t\t--mod2-primary-channel:     #f04960;\r\n\t\t\t\t\t--mod2-secondary-note:      #f057a0;\r\n\t\t\t\t\t--mod2-primary-note:        #ffb8de;\r\n\t\t\t\t\t--mod3-secondary-channel:   #553399;\r\n\t\t\t\t\t--mod3-primary-channel:     #8855fc;\r\n\t\t\t\t\t--mod3-secondary-note:      #aa64ff;\r\n\t\t\t\t\t--mod3-primary-note:\t    #f8ddff;\r\n\t\t\t\t\t--mod4-secondary-channel:   #a86436;\r\n\t\t\t\t\t--mod4-primary-channel:     #c8a825;\r\n\t\t\t\t\t--mod4-secondary-note:      #e8ba46;\r\n\t\t\t\t\t--mod4-primary-note:        #fff6d3;\r\n\t\t\t\t\t--mod-label-primary:        #999;\r\n\t\t\t\t\t--mod-label-secondary-text: #333;\r\n\t\t\t\t\t--mod-label-primary-text:   black;\r\n\t\t\t\t\t--disabled-note-primary:    #999;\r\n\t\t\t\t\t--disabled-note-secondary:  #666;\r\n\t\t\t\t}\r\n\t\t\t`,\r\n        \"dark competition\": `\r\n\t\t\t\t:root {\r\n\t\t\t\t\t--page-margin: black;\r\n\t\t\t\t\t--editor-background: black;\r\n\t\t\t\t\t--hover-preview: #ddd;\r\n\t\t\t\t\t--playhead: #ddd;\r\n\t\t\t\t\t--primary-text: #ddd;\r\n\t\t\t\t\t--secondary-text: #8e695b;\r\n\t\t\t\t\t--inverted-text: black;\r\n\t\t\t\t\t--text-selection: rgba(169,0,255,0.99);\r\n\t\t\t\t\t--box-selection-fill: rgba(221,221,221,0.2);\r\n\t\t\t\t\t--loop-accent: #bf15ba;\r\n\t\t\t\t\t--link-accent: #f888ff;\r\n\t\t\t\t\t--ui-widget-background: #443a3a;\r\n\t\t\t\t\t--ui-widget-focus: #777;\r\n\t\t\t\t\t--pitch-background: #353333;\r\n\t\t\t\t\t--tonic: #884a44;\r\n\t\t\t\t\t--fifth-note: #415498;\r\n\t\t\t\t\t--white-piano-key: #bbb;\r\n\t\t\t\t\t--black-piano-key: #444;\r\n                    --white-piano-key-text: #131200;\r\n                    --black-piano-key-text: #fff;\r\n\t\t\t\t\t--use-color-formula: false;\r\n\t\t\t\t\t--track-editor-bg-pitch: #444;\r\n\t\t\t\t\t--track-editor-bg-pitch-dim: #333;\r\n\t\t\t\t\t--track-editor-bg-noise: #444;\r\n\t\t\t\t\t--track-editor-bg-noise-dim: #333;\r\n\t\t\t\t\t--track-editor-bg-mod: #234;\r\n\t\t\t\t\t--track-editor-bg-mod-dim: #123;\r\n\t\t\t\t\t--multiplicative-mod-slider: #456;\r\n\t\t\t\t\t--overwriting-mod-slider: #654;\r\n\t\t\t\t\t--indicator-primary: #74f;\r\n\t\t\t\t\t--indicator-secondary: #444;\r\n\t\t\t\t\t--select2-opt-group: #585858;\r\n\t\t\t\t\t--input-box-outline: #333;\r\n\t\t\t\t\t--mute-button-normal: #ffa033;\r\n\t\t\t\t\t--mute-button-mod: #9a6bff;\r\n\t\t\t\t\t--pitch1-secondary-channel: #0099a1;\r\n\t\t\t\t\t--pitch1-primary-channel:   #25f3ff;\r\n\t\t\t\t\t--pitch1-secondary-note:    #00bdc7;\r\n\t\t\t\t\t--pitch1-primary-note:      #92f9ff;\r\n\t\t\t\t\t--pitch2-secondary-channel: #a1a100;\r\n\t\t\t\t\t--pitch2-primary-channel:   #ffff25;\r\n\t\t\t\t\t--pitch2-secondary-note:    #c7c700;\r\n\t\t\t\t\t--pitch2-primary-note:      #ffff92;\r\n\t\t\t\t\t--pitch3-secondary-channel: #c75000;\r\n\t\t\t\t\t--pitch3-primary-channel:   #ff9752;\r\n\t\t\t\t\t--pitch3-secondary-note:    #ff771c;\r\n\t\t\t\t\t--pitch3-primary-note:      #ffcdab;\r\n\t\t\t\t\t--pitch4-secondary-channel: #00a100;\r\n\t\t\t\t\t--pitch4-primary-channel:   #50ff50;\r\n\t\t\t\t\t--pitch4-secondary-note:    #00c700;\r\n\t\t\t\t\t--pitch4-primary-note:      #a0ffa0;\r\n\t\t\t\t\t--pitch5-secondary-channel: #d020d0;\r\n\t\t\t\t\t--pitch5-primary-channel:   #ff90ff;\r\n\t\t\t\t\t--pitch5-secondary-note:    #e040e0;\r\n\t\t\t\t\t--pitch5-primary-note:      #ffc0ff;\r\n\t\t\t\t\t--pitch6-secondary-channel: #7777b0;\r\n\t\t\t\t\t--pitch6-primary-channel:   #a0a0ff;\r\n\t\t\t\t\t--pitch6-secondary-note:    #8888d0;\r\n\t\t\t\t\t--pitch6-primary-note:      #d0d0ff;\r\n\t\t\t\t\t--pitch7-secondary-channel: #8AA100;\r\n\t\t\t\t\t--pitch7-primary-channel:   #DEFF25;\r\n\t\t\t\t\t--pitch7-secondary-note:\t  #AAC700;\r\n\t\t\t\t\t--pitch7-primary-note:\t\t\t#E6FF92;\r\n\t\t\t\t\t--pitch8-secondary-channel: #DF0019;\r\n\t\t\t\t\t--pitch8-primary-channel:   #FF98A4;\r\n\t\t\t\t\t--pitch8-secondary-note:    #FF4E63;\r\n\t\t\t\t\t--pitch8-primary-note:      #FFB2BB;\r\n\t\t\t\t\t--pitch9-secondary-channel: #00A170;\r\n\t\t\t\t\t--pitch9-primary-channel:   #50FFC9;\r\n\t\t\t\t\t--pitch9-secondary-note:    #00C78A;\r\n\t\t\t\t\t--pitch9-primary-note:\t\t\t#83FFD9;\r\n\t\t\t\t\t--pitch10-secondary-channel:#A11FFF;\r\n\t\t\t\t\t--pitch10-primary-channel:  #CE8BFF;\r\n\t\t\t\t\t--pitch10-secondary-note:   #B757FF;\r\n\t\t\t\t\t--pitch10-primary-note:     #DFACFF;\r\n\t\t\t\t\t--noise1-secondary-channel: #6f6f6f;\r\n\t\t\t\t\t--noise1-primary-channel:   #aaaaaa;\r\n\t\t\t\t\t--noise1-secondary-note:    #a7a7a7;\r\n\t\t\t\t\t--noise1-primary-note:      #e0e0e0;\r\n\t\t\t\t\t--noise2-secondary-channel: #996633;\r\n\t\t\t\t\t--noise2-primary-channel:   #ddaa77;\r\n\t\t\t\t\t--noise2-secondary-note:    #cc9966;\r\n\t\t\t\t\t--noise2-primary-note:      #f0d0bb;\r\n\t\t\t\t\t--noise3-secondary-channel: #4a6d8f;\r\n\t\t\t\t\t--noise3-primary-channel:   #77aadd;\r\n\t\t\t\t\t--noise3-secondary-note:    #6f9fcf;\r\n\t\t\t\t\t--noise3-primary-note:      #bbd7ff;\r\n\t\t\t\t\t--noise4-secondary-channel: #6B3E8E;\r\n\t\t\t\t\t--noise4-primary-channel:   #AF82D2;\r\n\t\t\t\t\t--noise4-secondary-note:    #9E71C1;\r\n\t\t\t\t\t--noise5-secondary-channel: #607837;\r\n\t\t\t\t\t--noise5-primary-channel:   #A2BB77;\r\n\t\t\t\t\t--noise5-secondary-note:    #91AA66;\r\n\t\t\t\t\t--noise5-primary-note:      #C5E2B2;\r\n\t\t\t\t\t--mod1-secondary-channel:   #339955;\r\n\t\t\t\t\t--mod1-primary-channel:     #77fc55;\r\n\t\t\t\t\t--mod1-secondary-note:      #77ff8a;\r\n\t\t\t\t\t--mod1-primary-note:        #cdffee;\r\n\t\t\t\t\t--mod2-secondary-channel:   #993355;\r\n\t\t\t\t\t--mod2-primary-channel:     #f04960;\r\n\t\t\t\t\t--mod2-secondary-note:      #f057a0;\r\n\t\t\t\t\t--mod2-primary-note:        #ffb8de;\r\n\t\t\t\t\t--mod3-secondary-channel:   #553399;\r\n\t\t\t\t\t--mod3-primary-channel:     #8855fc;\r\n\t\t\t\t\t--mod3-secondary-note:      #aa64ff;\r\n\t\t\t\t\t--mod3-primary-note:\t\t\t  #f8ddff;\r\n\t\t\t\t\t--mod4-secondary-channel:   #a86436;\r\n\t\t\t\t\t--mod4-primary-channel:     #c8a825;\r\n\t\t\t\t\t--mod4-secondary-note:      #e8ba46;\r\n\t\t\t\t\t--mod4-primary-note:        #fff6d3;\r\n\t\t\t\t\t--mod-label-primary:        #999;\r\n\t\t\t\t\t--mod-label-secondary-text: #333;\r\n\t\t\t\t\t--mod-label-primary-text:   black;\r\n\t\t\t\t\t--disabled-note-primary:    #999;\r\n\t\t\t\t\t--disabled-note-secondary:  #666;\r\n\r\n\t\t\t}\r\n\t\t`,\r\n        \"light classic\": `\r\n\t\t\t:root {\r\n\t\t\t\t-webkit-text-stroke-width: 0.5px;\r\n\t\t\t\t--page-margin: #685d88;\r\n\t\t\t\t--editor-background: white;\r\n\t\t\t\t--hover-preview: black;\r\n\t\t\t\t--playhead: rgba(0,0,0,0.5);\r\n\t\t\t\t--primary-text: black;\r\n\t\t\t\t--secondary-text: #777;\r\n\t\t\t\t--inverted-text: white;\r\n\t\t\t\t--text-selection: rgba(200,170,255,0.99);\r\n\t\t\t\t--box-selection-fill: rgba(0,0,0,0.1);\r\n\t\t\t\t--loop-accent: #98f;\r\n\t\t\t\t--link-accent: #74f;\r\n\t\t\t\t--ui-widget-background: #ececec;\r\n\t\t\t\t--ui-widget-focus: #eee;\r\n\t\t\t\t--pitch-background: #ececec;\r\n\t\t\t\t--tonic: #f0d6b6;\r\n\t\t\t\t--fifth-note: #bbddf0;\r\n\t\t\t\t--white-piano-key: #eee;\r\n\t\t\t\t--black-piano-key: #666;\r\n\t\t\t\t--white-piano-key-text: #131200;\r\n\t\t\t\t--black-piano-key-text: #fff;\r\n\t\t\t\t\t--use-color-formula: false;\r\n\t\t\t\t\t--track-editor-bg-pitch: #ececec;\r\n\t\t\t\t\t--track-editor-bg-pitch-dim: #fdfdfd;\r\n\t\t\t\t\t--track-editor-bg-noise: #ececec;\r\n\t\t\t\t\t--track-editor-bg-noise-dim: #fdfdfd;\r\n\t\t\t\t\t--track-editor-bg-mod: #dbecfd;\r\n\t\t\t\t\t--track-editor-bg-mod-dim: #ecfdff;\r\n\t\t\t\t\t--multiplicative-mod-slider: #789;\r\n\t\t\t\t\t--overwriting-mod-slider: #987;\r\n\t\t\t\t\t--indicator-primary: #98f;\r\n\t\t\t\t\t--indicator-secondary: #cde;\r\n\t\t\t\t\t--select2-opt-group: #cecece;\r\n\t\t\t\t\t--input-box-outline: #ddd;\r\n\t\t\t\t\t--mute-button-normal: #c0b47f;\r\n\t\t\t\t\t--mute-button-mod: #bd7fc0;\r\n\t\t\t\t--pitch1-secondary-channel: #6CD9ED;\r\n\t\t\t\t--pitch1-primary-channel:   #00A0BD;\r\n\t\t\t\t--pitch1-secondary-note:    #34C2DC;\r\n\t\t\t\t--pitch1-primary-note:      #00758A;\r\n\t\t\t\t--pitch2-secondary-channel: #E3C941;\r\n\t\t\t\t--pitch2-primary-channel:   #B49700;\r\n\t\t\t\t--pitch2-secondary-note:    #D1B628;\r\n\t\t\t\t--pitch2-primary-note:      #836E00;\r\n\t\t\t\t--pitch3-secondary-channel: #FF9D61;\r\n\t\t\t\t--pitch3-primary-channel:   #E14E00;\r\n\t\t\t\t--pitch3-secondary-note:    #F67D3C;\r\n\t\t\t\t--pitch3-primary-note:      #B64000;\r\n\t\t\t\t--pitch4-secondary-channel: #4BE24B;\r\n\t\t\t\t--pitch4-primary-channel:   #00A800;\r\n\t\t\t\t--pitch4-secondary-note:    #2DC82D;\r\n\t\t\t\t--pitch4-primary-note:      #008000;\r\n\t\t\t\t--pitch5-secondary-channel: #FF90FF;\r\n\t\t\t\t--pitch5-primary-channel:   #E12EDF;\r\n\t\t\t\t--pitch5-secondary-note:    #EC6EEC;\r\n\t\t\t\t--pitch5-primary-note:      #A600A5;\r\n\t\t\t\t--pitch6-secondary-channel: #B5B5FE;\r\n\t\t\t\t--pitch6-primary-channel:   #6969FD;\r\n\t\t\t\t--pitch6-secondary-note:    #9393FE;\r\n\t\t\t\t--pitch6-primary-note:      #4A4AD7;\r\n\t\t\t\t--pitch7-secondary-channel: #C2D848;\r\n\t\t\t\t--pitch7-primary-channel:   #8EA800;\r\n\t\t\t\t--pitch7-secondary-note:    #B0C82D;\r\n\t\t\t\t--pitch7-primary-note:      #6C8000;\r\n\t\t\t\t--pitch8-secondary-channel: #FF90A4;\r\n\t\t\t\t--pitch8-primary-channel:   #E12E4D;\r\n\t\t\t\t--pitch8-secondary-note:    #EC6E85;\r\n\t\t\t\t--pitch8-primary-note:      #A6001D;\r\n\t\t\t\t--pitch9-secondary-channel: #41E3B5;\r\n\t\t\t\t--pitch9-primary-channel:   #00B481;\r\n\t\t\t\t--pitch9-secondary-note:    #28D1A1;\r\n\t\t\t\t--pitch9-primary-note:      #00835E;\r\n\t\t\t\t--pitch10-secondary-channel:#CA77FF;\r\n\t\t\t\t--pitch10-primary-channel:  #9609FF;\r\n\t\t\t\t--pitch10-secondary-note:   #B54FFF;\r\n\t\t\t\t--pitch10-primary-note:     #8400E3;\r\n\t\t\t\t--noise1-secondary-channel: #C1C1C1;\r\n\t\t\t\t--noise1-primary-channel:   #898989;\r\n\t\t\t\t--noise1-secondary-note:    #ADADAD;\r\n\t\t\t\t--noise1-primary-note:      #6C6C6C;\r\n\t\t\t\t--noise2-secondary-channel: #E8BB8C;\r\n\t\t\t\t--noise2-primary-channel:   #BD7D3A;\r\n\t\t\t\t--noise2-secondary-note:    #D1A374;\r\n\t\t\t\t--noise2-primary-note:      #836342;\r\n\t\t\t\t--noise3-secondary-channel: #9BC4EB;\r\n\t\t\t\t--noise3-primary-channel:   #4481BE;\r\n\t\t\t\t--noise3-secondary-note:    #7CA7D3;\r\n\t\t\t\t--noise3-primary-note:      #476685;\r\n\t\t\t\t--noise4-secondary-channel: #C5A5E0;\r\n\t\t\t\t--noise4-primary-channel:   #8553AE;\r\n\t\t\t\t--noise4-secondary-note:    #B290CC;\r\n\t\t\t\t--noise4-primary-note:      #684F7D;\r\n\t\t\t\t--noise5-secondary-channel: #B8CE93;\r\n\t\t\t\t--noise5-primary-channel:   #87A74F;\r\n\t\t\t\t--noise5-secondary-note:    #ABC183;\r\n\t\t\t\t--noise5-primary-note:      #68784C;\r\n\t\t\t\t\t--mod1-secondary-channel:   #339955;\r\n\t\t\t\t\t--mod1-primary-channel:     #77dd55;\r\n\t\t\t\t\t--mod1-secondary-note:      #77ff8a;\r\n\t\t\t\t\t--mod1-primary-note:        #2ad84a;\r\n\t\t\t\t\t--mod2-secondary-channel:   #993355;\r\n\t\t\t\t\t--mod2-primary-channel:     #f04960;\r\n\t\t\t\t\t--mod2-secondary-note:      #f057a0;\r\n\t\t\t\t\t--mod2-primary-note:        #ba124a;\r\n\t\t\t\t\t--mod3-secondary-channel:   #553399;\r\n\t\t\t\t\t--mod3-primary-channel:     #8855fc;\r\n\t\t\t\t\t--mod3-secondary-note:      #aa64ff;\r\n\t\t\t\t\t--mod3-primary-note:        #7a1caa;\r\n\t\t\t\t\t--mod4-secondary-channel:   #a86436;\r\n\t\t\t\t\t--mod4-primary-channel:     #c8a825;\r\n\t\t\t\t\t--mod4-secondary-note:      #e8ba46;\r\n\t\t\t\t\t--mod4-primary-note:        #a86810;\r\n\t\t\t\t\t--mod-label-primary:        #dddddd;\r\n\t\t\t\t\t--mod-label-secondary-text: #777;\r\n\t\t\t\t\t--mod-label-primary-text:   black;\r\n\t\t\t\t\t--disabled-note-primary:    #666;\r\n\t\t\t\t\t--disabled-note-secondary:  #aaa;\r\n\t\t\t}\r\n\t\t\t\r\n\t\t\t.beepboxEditor button, .beepboxEditor select {\r\n\t\t\t\tbox-shadow: inset 0 0 0 1px var(--secondary-text);\r\n\t\t\t}\r\n\r\n\t\t\t\t.select2-selection__rendered {\r\n\t\t\t\t\tbox-shadow: inset 0 0 0 1px var(--secondary-text);\r\n\t\t\t\t}\r\n\t\t`,\r\n        \"jummbox classic\": `\r\n\t\t\t\t:root {\r\n\t\t\t\t\t--page-margin: #040410;\r\n\t\t\t\t\t--editor-background: #040410;\r\n\t\t\t\t\t--hover-preview: white;\r\n\t\t\t\t\t--playhead: rgba(255, 255, 255, 0.9);\r\n\t\t\t\t\t--primary-text: white;\r\n\t\t\t\t\t--secondary-text: #84859a;\r\n\t\t\t\t\t--inverted-text: black;\r\n\t\t\t\t\t--text-selection: rgba(119,68,255,0.99);\r\n\t\t\t\t\t--box-selection-fill: #044b94;\r\n\t\t\t\t\t--loop-accent: #74f;\r\n\t\t\t\t\t--link-accent: #98f;\r\n\t\t\t\t\t--ui-widget-background: #393e4f;\r\n\t\t\t\t\t--ui-widget-focus: #6d6886;\r\n\t\t\t\t\t--pitch-background: #393e4f;\r\n\t\t\t\t\t--tonic: #725491;\r\n\t\t\t\t\t--fifth-note: #54547a;\r\n\t\t\t\t\t--white-piano-key: #eee;\r\n\t\t\t\t\t--black-piano-key: #666;\r\n                    --white-piano-key-text: #131200;\r\n                    --black-piano-key-text: #fff;\r\n\t\t\t\t\t--use-color-formula: true;\r\n\t\t\t\t\t--track-editor-bg-pitch: #393e4f;\r\n\t\t\t\t\t--track-editor-bg-pitch-dim: #1c1d28;\r\n\t\t\t\t\t--track-editor-bg-noise: #3d3535;\r\n\t\t\t\t\t--track-editor-bg-noise-dim: #161313;\r\n\t\t\t\t\t--track-editor-bg-mod: #283560;\r\n\t\t\t\t\t--track-editor-bg-mod-dim: #0a101f;\r\n\t\t\t\t\t--multiplicative-mod-slider: #606c9f;\r\n\t\t\t\t\t--overwriting-mod-slider: #6850b5;\r\n\t\t\t\t\t--indicator-primary: #9c64f7;\r\n\t\t\t\t\t--indicator-secondary: #393e4f;\r\n\t\t\t\t\t--select2-opt-group: #5d576f;\r\n\t\t\t\t\t--input-box-outline: #222;\r\n\t\t\t\t\t--mute-button-normal: #dda85d;\r\n\t\t\t\t\t--mute-button-mod: #886eae;\r\n\t\t\t\t\t--mod-label-primary: #282840;\r\n\t\t\t\t\t--mod-label-secondary-text: rgb(87, 86, 120);\r\n\t\t\t\t\t--mod-label-primary-text: white;\r\n\t\t\t\t\t--pitch-secondary-channel-hue: 0;\r\n\t\t\t\t\t--pitch-secondary-channel-hue-scale: 6.1;\r\n\t\t\t\t\t--pitch-secondary-channel-sat: 83.3;\r\n\t\t\t\t\t--pitch-secondary-channel-sat-scale: 0.1;\r\n\t\t\t\t\t--pitch-secondary-channel-lum: 40;\r\n\t\t\t\t\t--pitch-secondary-channel-lum-scale: 0.05;\r\n\t\t\t\t\t--pitch-primary-channel-hue: 0;\r\n\t\t\t\t\t--pitch-primary-channel-hue-scale: 6.1;\r\n\t\t\t\t\t--pitch-primary-channel-sat: 100;\r\n\t\t\t\t\t--pitch-primary-channel-sat-scale: 0.1;\r\n\t\t\t\t\t--pitch-primary-channel-lum: 67.5;\r\n\t\t\t\t\t--pitch-primary-channel-lum-scale: 0.05;\r\n\t\t\t\t\t--pitch-secondary-note-hue: 0;\r\n\t\t\t\t\t--pitch-secondary-note-hue-scale: 6.1;\r\n\t\t\t\t\t--pitch-secondary-note-sat: 93.9;\r\n\t\t\t\t\t--pitch-secondary-note-sat-scale: 0.1;\r\n\t\t\t\t\t--pitch-secondary-note-lum: 25;\r\n\t\t\t\t\t--pitch-secondary-note-lum-scale: 0.05;\r\n\t\t\t\t\t--pitch-primary-note-hue: 0;\r\n\t\t\t\t\t--pitch-primary-note-hue-scale: 6.1;\r\n\t\t\t\t\t--pitch-primary-note-sat: 100;\r\n\t\t\t\t\t--pitch-primary-note-sat-scale: 0.05;\r\n\t\t\t\t\t--pitch-primary-note-lum: 85.6;\r\n\t\t\t\t\t--pitch-primary-note-lum-scale: 0.025;\r\n\t\t\t\t\t--noise-secondary-channel-hue: 0;\r\n\t\t\t\t\t--noise-secondary-channel-hue-scale: 2;\r\n\t\t\t\t\t--noise-secondary-channel-sat: 25;\r\n\t\t\t\t\t--noise-secondary-channel-sat-scale: 0;\r\n\t\t\t\t\t--noise-secondary-channel-lum: 42;\r\n\t\t\t\t\t--noise-secondary-channel-lum-scale: 0;\r\n\t\t\t\t\t--noise-primary-channel-hue: 0;\r\n\t\t\t\t\t--noise-primary-channel-hue-scale: 2;\r\n\t\t\t\t\t--noise-primary-channel-sat: 33;\r\n\t\t\t\t\t--noise-primary-channel-sat-scale: 0;\r\n\t\t\t\t\t--noise-primary-channel-lum: 63.5;\r\n\t\t\t\t\t--noise-primary-channel-lum-scale: 0;\r\n\t\t\t\t\t--noise-secondary-note-hue: 0;\r\n\t\t\t\t\t--noise-secondary-note-hue-scale: 2;\r\n\t\t\t\t\t--noise-secondary-note-sat: 33.5;\r\n\t\t\t\t\t--noise-secondary-note-sat-scale: 0;\r\n\t\t\t\t\t--noise-secondary-note-lum: 55;\r\n\t\t\t\t\t--noise-secondary-note-lum-scale: 0;\r\n\t\t\t\t\t--noise-primary-note-hue: 0;\r\n\t\t\t\t\t--noise-primary-note-hue-scale: 2;\r\n\t\t\t\t\t--noise-primary-note-sat: 46.5;\r\n\t\t\t\t\t--noise-primary-note-sat-scale: 0;\r\n\t\t\t\t\t--noise-primary-note-lum: 74;\r\n\t\t\t\t\t--noise-primary-note-lum-scale: 0;\r\n\t\t\t\t\t--mod-secondary-channel-hue: 192;\r\n\t\t\t\t\t--mod-secondary-channel-hue-scale: 1.5;\r\n\t\t\t\t\t--mod-secondary-channel-sat: 88;\r\n\t\t\t\t\t--mod-secondary-channel-sat-scale: 0;\r\n\t\t\t\t\t--mod-secondary-channel-lum: 50;\r\n\t\t\t\t\t--mod-secondary-channel-lum-scale: 0;\r\n\t\t\t\t\t--mod-primary-channel-hue: 192;\r\n\t\t\t\t\t--mod-primary-channel-hue-scale: 1.5;\r\n\t\t\t\t\t--mod-primary-channel-sat: 96;\r\n\t\t\t\t\t--mod-primary-channel-sat-scale: 0;\r\n\t\t\t\t\t--mod-primary-channel-lum: 80;\r\n\t\t\t\t\t--mod-primary-channel-lum-scale: 0;\r\n\t\t\t\t\t--mod-secondary-note-hue: 192;\r\n\t\t\t\t\t--mod-secondary-note-hue-scale: 1.5;\r\n\t\t\t\t\t--mod-secondary-note-sat: 92;\r\n\t\t\t\t\t--mod-secondary-note-sat-scale: 0;\r\n\t\t\t\t\t--mod-secondary-note-lum: 45;\r\n\t\t\t\t\t--mod-secondary-note-lum-scale: 0;\r\n\t\t\t\t\t--mod-primary-note-hue: 192;\r\n\t\t\t\t\t--mod-primary-note-hue-scale: 1.5;\r\n\t\t\t\t\t--mod-primary-note-sat: 96;\r\n\t\t\t\t\t--mod-primary-note-sat-scale: 0;\r\n\t\t\t\t\t--mod-primary-note-lum: 85;\r\n\t\t\t\t\t--mod-primary-note-lum-scale: 0;\r\n\t\t\t\t\t--disabled-note-primary:    #91879f;\r\n\t\t\t\t\t--disabled-note-secondary:  #6a677a;\r\n\t\t\t\t}\r\n\t\t\t`,\r\n        \"forest\": `\r\n\t\t\t\t:root {\r\n\t\t\t\t\t--page-margin: #010c03;\r\n\t\t\t\t\t--editor-background: #010c03;\r\n\t\t\t\t\t--hover-preview: #efe;\r\n\t\t\t\t\t--playhead: rgba(232, 255, 232, 0.9);\r\n\t\t\t\t\t--primary-text: #efe;\r\n\t\t\t\t\t--secondary-text: #70A070;\r\n\t\t\t\t\t--inverted-text: #280228;\r\n\t\t\t\t\t--text-selection: rgba(255,68,199,0.99);\r\n\t\t\t\t\t--box-selection-fill: #267aa3;\r\n\t\t\t\t\t--loop-accent: #ffe845;\r\n\t\t\t\t\t--link-accent: #9f8;\r\n\t\t\t\t\t--ui-widget-background: #203829;\r\n\t\t\t\t\t--ui-widget-focus: #487860;\r\n\t\t\t\t\t--pitch-background: #203829;\r\n\t\t\t\t\t--tonic: #2b8d20;\r\n\t\t\t\t\t--fifth-note: #385840;\r\n\t\t\t\t\t--white-piano-key: #bda;\r\n\t\t\t\t\t--black-piano-key: #573;\r\n                    --white-piano-key-text: #131200;\r\n                    --black-piano-key-text: #ffffff;\r\n\t\t\t\t\t--use-color-formula: true;\r\n\t\t\t\t\t--track-editor-bg-pitch: #254820;\r\n\t\t\t\t\t--track-editor-bg-pitch-dim: #102819;\r\n\t\t\t\t\t--track-editor-bg-noise: #304050;\r\n\t\t\t\t\t--track-editor-bg-noise-dim: #102030;\r\n\t\t\t\t\t--track-editor-bg-mod: #506030;\r\n\t\t\t\t\t--track-editor-bg-mod-dim: #2a300a;\r\n\t\t\t\t\t--multiplicative-mod-slider: #205c8f;\r\n\t\t\t\t\t--overwriting-mod-slider: #20ac6f;\r\n\t\t\t\t\t--indicator-primary: #dcd866;\r\n\t\t\t\t\t--indicator-secondary: #203829;\r\n\t\t\t\t\t--select2-opt-group: #1a6f5a;\r\n\t\t\t\t\t--input-box-outline: #242;\r\n\t\t\t\t\t--mute-button-normal: #49e980;\r\n\t\t\t\t\t--mute-button-mod: #c2e502;\r\n\t\t\t\t\t--mod-label-primary: #133613;\r\n\t\t\t\t\t--mod-label-secondary-text: rgb(27, 126, 40);\r\n\t\t\t\t\t--mod-label-primary-text: #efe;\r\n\t\t\t\t\t--pitch-secondary-channel-hue: 120;\r\n\t\t\t\t\t--pitch-secondary-channel-hue-scale: 8.1;\r\n\t\t\t\t\t--pitch-secondary-channel-sat: 59;\r\n\t\t\t\t\t--pitch-secondary-channel-sat-scale: 0.1;\r\n\t\t\t\t\t--pitch-secondary-channel-lum: 50;\r\n\t\t\t\t\t--pitch-secondary-channel-lum-scale: 0.04;\r\n\t\t\t\t\t--pitch-primary-channel-hue: 120;\r\n\t\t\t\t\t--pitch-primary-channel-hue-scale: 8.1;\r\n\t\t\t\t\t--pitch-primary-channel-sat: 86;\r\n\t\t\t\t\t--pitch-primary-channel-sat-scale: 0.1;\r\n\t\t\t\t\t--pitch-primary-channel-lum: 70;\r\n\t\t\t\t\t--pitch-primary-channel-lum-scale: 0.04;\r\n\t\t\t\t\t--pitch-secondary-note-hue: 120;\r\n\t\t\t\t\t--pitch-secondary-note-hue-scale: 8.1;\r\n\t\t\t\t\t--pitch-secondary-note-sat: 85;\r\n\t\t\t\t\t--pitch-secondary-note-sat-scale: 0.1;\r\n\t\t\t\t\t--pitch-secondary-note-lum: 30;\r\n\t\t\t\t\t--pitch-secondary-note-lum-scale: 0.04;\r\n\t\t\t\t\t--pitch-primary-note-hue: 120;\r\n\t\t\t\t\t--pitch-primary-note-hue-scale: 8.1;\r\n\t\t\t\t\t--pitch-primary-note-sat: 90;\r\n\t\t\t\t\t--pitch-primary-note-sat-scale: 0.05;\r\n\t\t\t\t\t--pitch-primary-note-lum: 80;\r\n\t\t\t\t\t--pitch-primary-note-lum-scale: 0.025;\r\n\t\t\t\t\t--noise-secondary-channel-hue: 200;\r\n\t\t\t\t\t--noise-secondary-channel-hue-scale: 1.1;\r\n\t\t\t\t\t--noise-secondary-channel-sat: 25;\r\n\t\t\t\t\t--noise-secondary-channel-sat-scale: 0;\r\n\t\t\t\t\t--noise-secondary-channel-lum: 22;\r\n\t\t\t\t\t--noise-secondary-channel-lum-scale: 0;\r\n\t\t\t\t\t--noise-primary-channel-hue: 200;\r\n\t\t\t\t\t--noise-primary-channel-hue-scale: 1.1;\r\n\t\t\t\t\t--noise-primary-channel-sat: 48;\r\n\t\t\t\t\t--noise-primary-channel-sat-scale: 0;\r\n\t\t\t\t\t--noise-primary-channel-lum: 65;\r\n\t\t\t\t\t--noise-primary-channel-lum-scale: 0;\r\n\t\t\t\t\t--noise-secondary-note-hue: 200;\r\n\t\t\t\t\t--noise-secondary-note-hue-scale: 1.1;\r\n\t\t\t\t\t--noise-secondary-note-sat: 33.5;\r\n\t\t\t\t\t--noise-secondary-note-sat-scale: 0;\r\n\t\t\t\t\t--noise-secondary-note-lum: 33;\r\n\t\t\t\t\t--noise-secondary-note-lum-scale: 0;\r\n\t\t\t\t\t--noise-primary-note-hue: 200;\r\n\t\t\t\t\t--noise-primary-note-hue-scale: 1.1;\r\n\t\t\t\t\t--noise-primary-note-sat: 46.5;\r\n\t\t\t\t\t--noise-primary-note-sat-scale: 0;\r\n\t\t\t\t\t--noise-primary-note-lum: 64;\r\n\t\t\t\t\t--noise-primary-note-lum-scale: 0;\r\n\t\t\t\t\t--mod-secondary-channel-hue: 40;\r\n\t\t\t\t\t--mod-secondary-channel-hue-scale: 1.8;\r\n\t\t\t\t\t--mod-secondary-channel-sat: 44;\r\n\t\t\t\t\t--mod-secondary-channel-sat-scale: 0;\r\n\t\t\t\t\t--mod-secondary-channel-lum: 50;\r\n\t\t\t\t\t--mod-secondary-channel-lum-scale: 0;\r\n\t\t\t\t\t--mod-primary-channel-hue: 40;\r\n\t\t\t\t\t--mod-primary-channel-hue-scale: 1.8;\r\n\t\t\t\t\t--mod-primary-channel-sat: 60;\r\n\t\t\t\t\t--mod-primary-channel-sat-scale: 0;\r\n\t\t\t\t\t--mod-primary-channel-lum: 80;\r\n\t\t\t\t\t--mod-primary-channel-lum-scale: 0;\r\n\t\t\t\t\t--mod-secondary-note-hue: 40;\r\n\t\t\t\t\t--mod-secondary-note-hue-scale: 1.8;\r\n\t\t\t\t\t--mod-secondary-note-sat: 62;\r\n\t\t\t\t\t--mod-secondary-note-sat-scale: 0;\r\n\t\t\t\t\t--mod-secondary-note-lum: 55;\r\n\t\t\t\t\t--mod-secondary-note-lum-scale: 0;\r\n\t\t\t\t\t--mod-primary-note-hue: 40;\r\n\t\t\t\t\t--mod-primary-note-hue-scale: 1.8;\r\n\t\t\t\t\t--mod-primary-note-sat: 66;\r\n\t\t\t\t\t--mod-primary-note-sat-scale: 0;\r\n\t\t\t\t\t--mod-primary-note-lum: 85;\r\n\t\t\t\t\t--mod-primary-note-lum-scale: 0;\r\n\t\t\t\t\t--disabled-note-primary:    #536e5c;\r\n\t\t\t\t\t--disabled-note-secondary:  #395440;\r\n\t\t\t\t}\r\n\t\t\t`,\r\n        \"canyon\": `\r\n\t\t\t\t:root {\r\n\t\t\t\t\t--page-margin: #0a0000;\r\n\t\t\t\t\t--editor-background: #0a0000;\r\n\t\t\t\t\t--hover-preview: white;\r\n\t\t\t\t\t--playhead: rgba(247, 172, 196, 0.9);\r\n\t\t\t\t\t--primary-text: #f5d6bf;\r\n\t\t\t\t\t--secondary-text: #934050;\r\n\t\t\t\t\t--inverted-text: #290505;\r\n\t\t\t\t\t--text-selection: rgba(255, 208, 68, 0.99);\r\n\t\t\t\t\t--box-selection-fill: #94044870;\r\n\t\t\t\t\t--loop-accent: #ff1e1e;\r\n\t\t\t\t\t--link-accent: #da7b76;\r\n\t\t\t\t\t--ui-widget-background: #533137;\r\n\t\t\t\t\t--ui-widget-focus: #743e4b;\r\n\t\t\t\t\t--pitch-background: #4f3939;\r\n\t\t\t\t\t--tonic: #9e4145;\r\n\t\t\t\t\t--fifth-note: #5b3e6b;\r\n\t\t\t\t\t--white-piano-key: #d89898;\r\n\t\t\t\t\t--black-piano-key: #572b29;\r\n                    --white-piano-key-text: #131200;\r\n                    --black-piano-key-text: #ffffff;\r\n\t\t\t\t\t--use-color-formula: true;\r\n\t\t\t\t\t--track-editor-bg-pitch: #5e3a41;\r\n\t\t\t\t\t--track-editor-bg-pitch-dim: #281d1c;\r\n\t\t\t\t\t--track-editor-bg-noise: #3a3551;\r\n\t\t\t\t\t--track-editor-bg-noise-dim: #272732;\r\n\t\t\t\t\t--track-editor-bg-mod: #552045;\r\n\t\t\t\t\t--track-editor-bg-mod-dim: #3e1442;\r\n\t\t\t\t\t--multiplicative-mod-slider: #9f6095;\r\n\t\t\t\t\t--overwriting-mod-slider: #b55050;\r\n\t\t\t\t\t--indicator-primary: #f2f764;\r\n\t\t\t\t\t--indicator-secondary: #4f3939;\r\n\t\t\t\t\t--select2-opt-group: #673030;\r\n\t\t\t\t\t--input-box-outline: #443131;\r\n\t\t\t\t\t--mute-button-normal: #d81833;\r\n\t\t\t\t\t--mute-button-mod: #9e2691;\r\n\t\t\t\t\t--mod-label-primary: #5f2b39;\r\n\t\t\t\t\t--mod-label-secondary-text: rgb(158, 66, 122);\r\n\t\t\t\t\t--mod-label-primary-text: #e6caed;\r\n\t\t\t\t\t--pitch-secondary-channel-hue: 0;\r\n\t\t\t\t\t--pitch-secondary-channel-hue-scale: 11.8;\r\n\t\t\t\t\t--pitch-secondary-channel-sat: 73.3;\r\n\t\t\t\t\t--pitch-secondary-channel-sat-scale: 0.1;\r\n\t\t\t\t\t--pitch-secondary-channel-lum: 40;\r\n\t\t\t\t\t--pitch-secondary-channel-lum-scale: 0.05;\r\n\t\t\t\t\t--pitch-primary-channel-hue: 0;\r\n\t\t\t\t\t--pitch-primary-channel-hue-scale: 11.8;\r\n\t\t\t\t\t--pitch-primary-channel-sat: 90;\r\n\t\t\t\t\t--pitch-primary-channel-sat-scale: 0.1;\r\n\t\t\t\t\t--pitch-primary-channel-lum: 67.5;\r\n\t\t\t\t\t--pitch-primary-channel-lum-scale: 0.05;\r\n\t\t\t\t\t--pitch-secondary-note-hue: 0;\r\n\t\t\t\t\t--pitch-secondary-note-hue-scale: 11.8;\r\n\t\t\t\t\t--pitch-secondary-note-sat: 83.9;\r\n\t\t\t\t\t--pitch-secondary-note-sat-scale: 0.1;\r\n\t\t\t\t\t--pitch-secondary-note-lum: 35;\r\n\t\t\t\t\t--pitch-secondary-note-lum-scale: 0.05;\r\n\t\t\t\t\t--pitch-primary-note-hue: 0;\r\n\t\t\t\t\t--pitch-primary-note-hue-scale: 11.8;\r\n\t\t\t\t\t--pitch-primary-note-sat: 100;\r\n\t\t\t\t\t--pitch-primary-note-sat-scale: 0.05;\r\n\t\t\t\t\t--pitch-primary-note-lum: 85.6;\r\n\t\t\t\t\t--pitch-primary-note-lum-scale: 0.025;\r\n\t\t\t\t\t--noise-secondary-channel-hue: 60;\r\n\t\t\t\t\t--noise-secondary-channel-hue-scale: 2;\r\n\t\t\t\t\t--noise-secondary-channel-sat: 25;\r\n\t\t\t\t\t--noise-secondary-channel-sat-scale: 0;\r\n\t\t\t\t\t--noise-secondary-channel-lum: 42;\r\n\t\t\t\t\t--noise-secondary-channel-lum-scale: 0;\r\n\t\t\t\t\t--noise-primary-channel-hue: 60;\r\n\t\t\t\t\t--noise-primary-channel-hue-scale: 2;\r\n\t\t\t\t\t--noise-primary-channel-sat: 33;\r\n\t\t\t\t\t--noise-primary-channel-sat-scale: 0;\r\n\t\t\t\t\t--noise-primary-channel-lum: 63.5;\r\n\t\t\t\t\t--noise-primary-channel-lum-scale: 0;\r\n\t\t\t\t\t--noise-secondary-note-hue: 60;\r\n\t\t\t\t\t--noise-secondary-note-hue-scale: 2;\r\n\t\t\t\t\t--noise-secondary-note-sat: 33.5;\r\n\t\t\t\t\t--noise-secondary-note-sat-scale: 0;\r\n\t\t\t\t\t--noise-secondary-note-lum: 55;\r\n\t\t\t\t\t--noise-secondary-note-lum-scale: 0;\r\n\t\t\t\t\t--noise-primary-note-hue: 60;\r\n\t\t\t\t\t--noise-primary-note-hue-scale: 2;\r\n\t\t\t\t\t--noise-primary-note-sat: 46.5;\r\n\t\t\t\t\t--noise-primary-note-sat-scale: 0;\r\n\t\t\t\t\t--noise-primary-note-lum: 74;\r\n\t\t\t\t\t--noise-primary-note-lum-scale: 0;\r\n\t\t\t\t\t--mod-secondary-channel-hue: 222;\r\n\t\t\t\t\t--mod-secondary-channel-hue-scale: 1.5;\r\n\t\t\t\t\t--mod-secondary-channel-sat: 88;\r\n\t\t\t\t\t--mod-secondary-channel-sat-scale: 0;\r\n\t\t\t\t\t--mod-secondary-channel-lum: 50;\r\n\t\t\t\t\t--mod-secondary-channel-lum-scale: 0;\r\n\t\t\t\t\t--mod-primary-channel-hue: 222;\r\n\t\t\t\t\t--mod-primary-channel-hue-scale: 1.5;\r\n\t\t\t\t\t--mod-primary-channel-sat: 96;\r\n\t\t\t\t\t--mod-primary-channel-sat-scale: 0;\r\n\t\t\t\t\t--mod-primary-channel-lum: 80;\r\n\t\t\t\t\t--mod-primary-channel-lum-scale: 0;\r\n\t\t\t\t\t--mod-secondary-note-hue: 222;\r\n\t\t\t\t\t--mod-secondary-note-hue-scale: 1.5;\r\n\t\t\t\t\t--mod-secondary-note-sat: 92;\r\n\t\t\t\t\t--mod-secondary-note-sat-scale: 0;\r\n\t\t\t\t\t--mod-secondary-note-lum: 54;\r\n\t\t\t\t\t--mod-secondary-note-lum-scale: 0;\r\n\t\t\t\t\t--mod-primary-note-hue: 222;\r\n\t\t\t\t\t--mod-primary-note-hue-scale: 1.5;\r\n\t\t\t\t\t--mod-primary-note-sat: 96;\r\n\t\t\t\t\t--mod-primary-note-sat-scale: 0;\r\n\t\t\t\t\t--mod-primary-note-lum: 75;\r\n\t\t\t\t\t--mod-primary-note-lum-scale: 0;\r\n\t\t\t\t\t--disabled-note-primary:    #515164;\r\n\t\t\t\t\t--disabled-note-secondary:  #2a2a3a;\r\n\t\t\t\t}\r\n\t\t\t`,\r\n        \"midnight\": `\r\n\t\t:root {\r\n\t\t\t--page-margin: #000;\r\n\t\t\t--editor-background: #000;\r\n\t\t\t--hover-preview: #757575;\r\n\t\t\t--playhead: #fff;\r\n\t\t\t--primary-text: #fff;\r\n\t\t\t--secondary-text: #acacac;\r\n\t\t\t--inverted-text: #290505;\r\n\t\t\t--text-selection: rgba(155, 155, 155, 0.99);\r\n\t\t\t--box-selection-fill: #79797970;\r\n\t\t\t--loop-accent: #646464;\r\n\t\t\t--link-accent: #707070;\r\n\t\t\t--ui-widget-background: #353535;\r\n\t\t\t--ui-widget-focus: #464646;\r\n\t\t\t--pitch-background: #222121;\r\n\t\t\t--tonic: #555955;\r\n\t\t\t--fifth-note: #1a1818;\r\n\t\t\t--white-piano-key: #a89e9e;\r\n\t\t\t--black-piano-key: #2d2424;\r\n            --white-piano-key-text: #131200;\r\n            --black-piano-key-text: #ffffff;\r\n\t\t\t--use-color-formula: true;\r\n\t\t\t--track-editor-bg-pitch: #373737;\r\n\t\t\t--track-editor-bg-pitch-dim: #131313;\r\n\t\t\t--track-editor-bg-noise: #484848;\r\n\t\t\t--track-editor-bg-noise-dim: #131313;\r\n\t\t\t--track-editor-bg-mod: #373737;\r\n\t\t\t--track-editor-bg-mod-dim: #131313;\r\n\t\t\t--multiplicative-mod-slider: #555;\r\n\t\t\t--overwriting-mod-slider: #464545;\r\n\t\t\t--indicator-primary: #e0e0e0;\r\n\t\t\t--indicator-secondary: #404040;\r\n\t\t\t--select2-opt-group: #3c3b3b;\r\n\t\t\t--input-box-outline: #757575;\r\n\t\t\t--mute-button-normal: #8e8d8d;\r\n\t\t\t--mute-button-mod: #ddd;\r\n\t\t\t--mod-label-primary: #262526;\r\n\t\t\t--mod-label-secondary-text: rgb(227, 222, 225);\r\n\t\t\t--mod-label-primary-text: #b9b9b9;\r\n\t\t\t--pitch-secondary-channel-hue: 240;\r\n\t\t\t--pitch-secondary-channel-hue-scale: 228;\r\n\t\t\t--pitch-secondary-channel-sat: 73.3;\r\n\t\t\t--pitch-secondary-channel-sat-scale: 0.1;\r\n\t\t\t--pitch-secondary-channel-lum: 25;\r\n\t\t\t--pitch-secondary-channel-lum-scale: 0.05;\r\n\t\t\t--pitch-primary-channel-hue: 240;\r\n\t\t\t--pitch-primary-channel-hue-scale: 228;\r\n\t\t\t--pitch-primary-channel-sat: 80;\r\n\t\t\t--pitch-primary-channel-sat-scale: 0.1;\r\n\t\t\t--pitch-primary-channel-lum: 60.5;\r\n\t\t\t--pitch-primary-channel-lum-scale: 0.05;\r\n\t\t\t--pitch-secondary-note-hue: 240;\r\n\t\t\t--pitch-secondary-note-hue-scale: 228;\r\n\t\t\t--pitch-secondary-note-sat: 73.9;\r\n\t\t\t--pitch-secondary-note-sat-scale: 0.1;\r\n\t\t\t--pitch-secondary-note-lum: 32;\r\n\t\t\t--pitch-secondary-note-lum-scale: 0.05;\r\n\t\t\t--pitch-primary-note-hue: 240;\r\n\t\t\t--pitch-primary-note-hue-scale: 228;\r\n\t\t\t--pitch-primary-note-sat: 90;\r\n\t\t\t--pitch-primary-note-sat-scale: 0.05;\r\n\t\t\t--pitch-primary-note-lum: 80.6;\r\n\t\t\t--pitch-primary-note-lum-scale: 0.025;\r\n\t\t\t--noise-secondary-channel-hue: 160;\r\n\t\t\t--noise-secondary-channel-hue-scale: 2;\r\n\t\t\t--noise-secondary-channel-sat: 25;\r\n\t\t\t--noise-secondary-channel-sat-scale: 0;\r\n\t\t\t--noise-secondary-channel-lum: 42;\r\n\t\t\t--noise-secondary-channel-lum-scale: 0;\r\n\t\t\t--noise-primary-channel-hue: 160;\r\n\t\t\t--noise-primary-channel-hue-scale: 2;\r\n\t\t\t--noise-primary-channel-sat: 33;\r\n\t\t\t--noise-primary-channel-sat-scale: 0;\r\n\t\t\t--noise-primary-channel-lum: 63.5;\r\n\t\t\t--noise-primary-channel-lum-scale: 0;\r\n\t\t\t--noise-secondary-note-hue: 160;\r\n\t\t\t--noise-secondary-note-hue-scale: 2;\r\n\t\t\t--noise-secondary-note-sat: 33.5;\r\n\t\t\t--noise-secondary-note-sat-scale: 0;\r\n\t\t\t--noise-secondary-note-lum: 55;\r\n\t\t\t--noise-secondary-note-lum-scale: 0;\r\n\t\t\t--noise-primary-note-hue: 160;\r\n\t\t\t--noise-primary-note-hue-scale: 2;\r\n\t\t\t--noise-primary-note-sat: 46.5;\r\n\t\t\t--noise-primary-note-sat-scale: 0;\r\n\t\t\t--noise-primary-note-lum: 74;\r\n\t\t\t--noise-primary-note-lum-scale: 0;\r\n\t\t\t--mod-secondary-channel-hue: 62;\r\n\t\t\t--mod-secondary-channel-hue-scale: 1.5;\r\n\t\t\t--mod-secondary-channel-sat: 88;\r\n\t\t\t--mod-secondary-channel-sat-scale: 0;\r\n\t\t\t--mod-secondary-channel-lum: 30;\r\n\t\t\t--mod-secondary-channel-lum-scale: 0;\r\n\t\t\t--mod-primary-channel-hue: 62;\r\n\t\t\t--mod-primary-channel-hue-scale: 1.5;\r\n\t\t\t--mod-primary-channel-sat: 96;\r\n\t\t\t--mod-primary-channel-sat-scale: 0;\r\n\t\t\t--mod-primary-channel-lum: 80;\r\n\t\t\t--mod-primary-channel-lum-scale: 0;\r\n\t\t\t--mod-secondary-note-hue: 62;\r\n\t\t\t--mod-secondary-note-hue-scale: 1.5;\r\n\t\t\t--mod-secondary-note-sat: 92;\r\n\t\t\t--mod-secondary-note-sat-scale: 0;\r\n\t\t\t--mod-secondary-note-lum: 34;\r\n\t\t\t--mod-secondary-note-lum-scale: 0;\r\n\t\t\t--mod-primary-note-hue: 62;\r\n\t\t\t--mod-primary-note-hue-scale: 1.5;\r\n\t\t\t--mod-primary-note-sat: 96;\r\n\t\t\t--mod-primary-note-sat-scale: 0;\r\n\t\t\t--mod-primary-note-lum: 75;\r\n\t\t\t--mod-primary-note-lum-scale: 0;\r\n\t\t\t--disabled-note-primary:    #66a;\r\n\t\t\t--disabled-note-secondary:  #447;\r\n\t\t}\r\n\t`,\r\n        \"jummbox light\": `\r\n\t\t\t\t:root {\r\n\t\t\t\t\t-webkit-text-stroke-width: 0.5px;\r\n\t\t\t\t\t--page-margin: #cab1d3;\r\n\t\t\t\t\t--editor-background: #f4f4f4;\r\n\t\t\t\t\t--hover-preview: #2d26a2;\r\n\t\t\t\t\t--playhead: rgb(20 25 153 / 90%);\r\n\t\t\t\t\t--primary-text: #b686c3;\r\n\t\t\t\t\t--secondary-text: #970f38;\r\n\t\t\t\t\t--inverted-text: #fefdff;\r\n\t\t\t\t\t--text-selection: rgb(56 21 8 / 99%);\r\n\t\t\t\t\t--box-selection-fill: rgb(20 203 160 / 61%);\r\n\t\t\t\t\t--loop-accent: #09dc0e;\r\n\t\t\t\t\t--link-accent: #3ee669;\r\n\t\t\t\t\t--ui-widget-background: #0e0a42;\r\n\t\t\t\t\t--ui-widget-focus: #380c42;\r\n\t\t\t\t\t--pitch-background: #8daf96;\r\n\t\t\t\t\t--tonic: #a16fb1;\r\n\t\t\t\t\t--fifth-note: #d08c8c;\r\n\t\t\t\t\t--white-piano-key: #fbffee;\r\n\t\t\t\t\t--black-piano-key: #c9d8e5;\r\n\t\t\t\t\t--white-piano-key-text: #101160;\r\n\t\t\t\t\t--black-piano-key-text: #231b03;\r\n\t\t\t\t\t--use-color-formula: true;\r\n\t\t\t\t\t--track-editor-bg-pitch: #34456a;\r\n\t\t\t\t\t--track-editor-bg-pitch-dim: #88afad;\r\n\t\t\t\t\t--track-editor-bg-noise: #564566;\r\n\t\t\t\t\t--track-editor-bg-noise-dim: #aaa;\r\n\t\t\t\t\t--track-editor-bg-mod: #7f779d;\r\n\t\t\t\t\t--track-editor-bg-mod-dim: #aaa;\r\n\t\t\t\t\t--multiplicative-mod-slider: #807caf;\r\n\t\t\t\t\t--overwriting-mod-slider: #909cdf;\r\n\t\t\t\t\t--indicator-primary: #ae38ff;\r\n\t\t\t\t\t--indicator-secondary: #5c8dbb;\r\n\t\t\t\t\t--select2-opt-group: #581b50;\r\n\t\t\t\t\t--input-box-outline: #6f7074;\r\n\t\t\t\t\t--mute-button-normal: #db1e00;\r\n\t\t\t\t\t--mute-button-mod: #883bf9;\r\n\t\t\t\t\t--mod-label-primary: #525297;\r\n\t\t\t\t\t--mod-label-secondary-text: rgb(197 147 245);\r\n\t\t\t\t\t--mod-label-primary-text: #a3aae9;\r\n                    --pitch-secondary-channel-hue: 26;\r\n                    --pitch-secondary-channel-hue-scale: 214.5;\r\n                    --pitch-secondary-channel-sat: 74.3;\r\n                    --pitch-secondary-channel-sat-scale: -0.1;\r\n\t\t\t\t\t--pitch-secondary-channel-lum: 55;\r\n\t\t\t\t\t--pitch-secondary-channel-lum-scale: -0.05;\r\n\t\t\t\t\t--pitch-primary-channel-hue: 26;\r\n\t\t\t\t\t--pitch-primary-channel-hue-scale: 214.5;\r\n\t\t\t\t\t--pitch-primary-channel-sat: 74;\r\n\t\t\t\t\t--pitch-primary-channel-sat-scale: -0.1;\r\n\t\t\t\t\t--pitch-primary-channel-lum: 65.5;\r\n\t\t\t\t\t--pitch-primary-channel-lum-scale: -0.05;\r\n\t\t\t\t\t--pitch-secondary-note-hue: 26;\r\n\t\t\t\t\t--pitch-secondary-note-hue-scale: 214.5;\r\n\t\t\t\t\t--pitch-secondary-note-sat: 74.9;\r\n\t\t\t\t\t--pitch-secondary-note-sat-scale: -0.1;\r\n\t\t\t\t\t--pitch-secondary-note-lum: 70;\r\n\t\t\t\t\t--pitch-secondary-note-lum-scale: -0.05;\r\n\t\t\t\t\t--pitch-primary-note-hue: 26;\r\n\t\t\t\t\t--pitch-primary-note-hue-scale: 214.5;\r\n\t\t\t\t\t--pitch-primary-note-sat: 85;\r\n\t\t\t\t\t--pitch-primary-note-sat-scale: 0.05;\r\n\t\t\t\t\t--pitch-primary-note-lum: 64.6;\r\n\t\t\t\t\t--pitch-primary-note-lum-scale: -0.025;\r\n\t\t\t\t\t--noise-secondary-channel-hue: 220;\r\n\t\t\t\t\t--noise-secondary-channel-hue-scale: 2;\r\n\t\t\t\t\t--noise-secondary-channel-sat: 25;\r\n\t\t\t\t\t--noise-secondary-channel-sat-scale: 0;\r\n\t\t\t\t\t--noise-secondary-channel-lum: 62;\r\n\t\t\t\t\t--noise-secondary-channel-lum-scale: -0.1;\r\n\t\t\t\t\t--noise-primary-channel-hue: 220;\r\n\t\t\t\t\t--noise-primary-channel-hue-scale: 2;\r\n\t\t\t\t\t--noise-primary-channel-sat: 53;\r\n\t\t\t\t\t--noise-primary-channel-sat-scale: 0;\r\n\t\t\t\t\t--noise-primary-channel-lum: 53.5;\r\n\t\t\t\t\t--noise-primary-channel-lum-scale: -0.1;\r\n\t\t\t\t\t--noise-secondary-note-hue: 220;\r\n\t\t\t\t\t--noise-secondary-note-hue-scale: 2;\r\n\t\t\t\t\t--noise-secondary-note-sat: 58.5;\r\n\t\t\t\t\t--noise-secondary-note-sat-scale: 0;\r\n\t\t\t\t\t--noise-secondary-note-lum: 85;\r\n\t\t\t\t\t--noise-secondary-note-lum-scale: -1;\r\n\t\t\t\t\t--noise-primary-note-hue: 220;\r\n\t\t\t\t\t--noise-primary-note-hue-scale: 2;\r\n\t\t\t\t\t--noise-primary-note-sat: 56.5;\r\n\t\t\t\t\t--noise-primary-note-sat-scale: 0;\r\n\t\t\t\t\t--noise-primary-note-lum: 54;\r\n\t\t\t\t\t--noise-primary-note-lum-scale: -1;\r\n\t\t\t\t\t--mod-secondary-channel-hue: 90;\r\n\t\t\t\t\t--mod-secondary-channel-hue-scale: 1.5;\r\n\t\t\t\t\t--mod-secondary-channel-sat: 88;\r\n\t\t\t\t\t--mod-secondary-channel-sat-scale: 0;\r\n\t\t\t\t\t--mod-secondary-channel-lum: 60;\r\n\t\t\t\t\t--mod-secondary-channel-lum-scale: 0;\r\n\t\t\t\t\t--mod-primary-channel-hue: 90;\r\n\t\t\t\t\t--mod-primary-channel-hue-scale: 1.5;\r\n\t\t\t\t\t--mod-primary-channel-sat: 89;\r\n\t\t\t\t\t--mod-primary-channel-sat-scale: 0;\r\n\t\t\t\t\t--mod-primary-channel-lum: 65;\r\n\t\t\t\t\t--mod-primary-channel-lum-scale: 0;\r\n\t\t\t\t\t--mod-secondary-note-hue: 90;\r\n\t\t\t\t\t--mod-secondary-note-hue-scale: 1.5;\r\n\t\t\t\t\t--mod-secondary-note-sat: 79;\r\n\t\t\t\t\t--mod-secondary-note-sat-scale: 0;\r\n\t\t\t\t\t--mod-secondary-note-lum: 95;\r\n\t\t\t\t\t--mod-secondary-note-lum-scale: 0;\r\n\t\t\t\t\t--mod-primary-note-hue: 90;\r\n\t\t\t\t\t--mod-primary-note-hue-scale: 1.5;\r\n\t\t\t\t\t--mod-primary-note-sat: 79;\r\n\t\t\t\t\t--mod-primary-note-sat-scale: 0;\r\n\t\t\t\t\t--mod-primary-note-lum: 55;\r\n\t\t\t\t\t--mod-primary-note-lum-scale: 0;\r\n\t\t\t\t\t--disabled-note-primary:    #868;\r\n\t\t\t\t\t--disabled-note-secondary:  #767;\r\n\t\t\t\t}\r\n\r\n\t\t\t\t.beepboxEditor button, .beepboxEditor select {\r\n\t\t\t\t\tbackground-color: var(--secondary-text);\r\n\t\t\t\t}\r\n\r\n\t\t\t\t.select2-selection__rendered {\r\n\t\t\t\t\tbackground-color: var(--secondary-text);\r\n\t\t\t\t}\r\n\r\n\t\t\t\t.beepboxEditor .piano-button::before {\r\n\t\t\t\t\tdisplay: none;\r\n\t\t\t\t}\r\n\t\t\t`,\r\n        \"amoled dark\": `\r\n\t\t\t\t:root {\r\n\t\t\t\t\t--page-margin: #000;\r\n\t\t\t\t\t--editor-background: #020406;\r\n\t\t\t\t\t--hover-preview: white;\r\n\t\t\t\t\t--playhead: rgba(255, 255, 255, 0.9);\r\n\t\t\t\t\t--primary-text: white;\r\n\t\t\t\t\t--secondary-text: #8e88ce;\r\n\t\t\t\t\t--inverted-text: black;\r\n\t\t\t\t\t--text-selection: rgba(119,68,255,0.99);\r\n\t\t\t\t\t--box-selection-fill: #044b94;\r\n\t\t\t\t\t--loop-accent: #ad38f9;\r\n\t\t\t\t\t--link-accent: #bd25ff;\r\n\t\t\t\t\t--ui-widget-background: #080d1f;\r\n\t\t\t\t\t--ui-widget-focus: #060f2d;\r\n\t\t\t\t\t--pitch-background: #02060b;\r\n\t\t\t\t\t--tonic: #00113a;\r\n\t\t\t\t\t--fifth-note: #1b0019;\r\n\t\t\t\t\t--white-piano-key: #02040c;\r\n\t\t\t\t\t--black-piano-key: #02040c;\r\n                    --white-piano-key-text: #fff;\r\n                    --black-piano-key-text: #fff;\r\n\t\t\t\t\t--use-color-formula: true;\r\n\t\t\t\t\t--track-editor-bg-pitch: #050829;\r\n\t\t\t\t\t--track-editor-bg-pitch-dim: #010213;\r\n\t\t\t\t\t--track-editor-bg-noise: #051529;\r\n\t\t\t\t\t--track-editor-bg-noise-dim: #010b13;\r\n\t\t\t\t\t--track-editor-bg-mod: #150529;\r\n\t\t\t\t\t--track-editor-bg-mod-dim: #0a0113;\r\n\t\t\t\t\t--multiplicative-mod-slider: #2b409c;\r\n\t\t\t\t\t--overwriting-mod-slider: #6850b5;\r\n\t\t\t\t\t--indicator-primary: #7f3bec;\r\n\t\t\t\t\t--indicator-secondary: #213888;\r\n\t\t\t\t\t--select2-opt-group: #1d123c;\r\n\t\t\t\t\t--input-box-outline: #1b1e48;\r\n\t\t\t\t\t--mute-button-normal: #d234b0;\r\n\t\t\t\t\t--mute-button-mod: #263d98;\r\n\t\t\t\t\t--mod-label-primary: #090910;\r\n\t\t\t\t\t--mod-label-secondary-text: rgb(73, 69, 214);\r\n\t\t\t\t\t--mod-label-primary-text: white;\r\n\t\t\t\t\t--pitch-secondary-channel-hue: 183;\r\n\t\t\t\t\t--pitch-secondary-channel-hue-scale: 158.7;\r\n\t\t\t\t\t--pitch-secondary-channel-sat: 83.3;\r\n\t\t\t\t\t--pitch-secondary-channel-sat-scale: 0.1;\r\n\t\t\t\t\t--pitch-secondary-channel-lum: 40;\r\n\t\t\t\t\t--pitch-secondary-channel-lum-scale: 0.05;\r\n\t\t\t\t\t--pitch-primary-channel-hue: 183;\r\n\t\t\t\t\t--pitch-primary-channel-hue-scale: 158.7;\r\n\t\t\t\t\t--pitch-primary-channel-sat: 100;\r\n\t\t\t\t\t--pitch-primary-channel-sat-scale: 0.1;\r\n\t\t\t\t\t--pitch-primary-channel-lum: 67.5;\r\n\t\t\t\t\t--pitch-primary-channel-lum-scale: 0.05;\r\n\t\t\t\t\t--pitch-secondary-note-hue: 183;\r\n\t\t\t\t\t--pitch-secondary-note-hue-scale: 158.7;\r\n\t\t\t\t\t--pitch-secondary-note-sat: 93.9;\r\n\t\t\t\t\t--pitch-secondary-note-sat-scale: 0.1;\r\n\t\t\t\t\t--pitch-secondary-note-lum: 25;\r\n\t\t\t\t\t--pitch-secondary-note-lum-scale: 0.05;\r\n\t\t\t\t\t--pitch-primary-note-hue: 183;\r\n\t\t\t\t\t--pitch-primary-note-hue-scale: 158.7;\r\n\t\t\t\t\t--pitch-primary-note-sat: 100;\r\n\t\t\t\t\t--pitch-primary-note-sat-scale: 0.05;\r\n\t\t\t\t\t--pitch-primary-note-lum: 85.6;\r\n\t\t\t\t\t--pitch-primary-note-lum-scale: 0.025;\r\n\t\t\t\t\t--noise-secondary-channel-hue: 30;\r\n\t\t\t\t\t--noise-secondary-channel-hue-scale: 2;\r\n\t\t\t\t\t--noise-secondary-channel-sat: 25;\r\n\t\t\t\t\t--noise-secondary-channel-sat-scale: 0;\r\n\t\t\t\t\t--noise-secondary-channel-lum: 42;\r\n\t\t\t\t\t--noise-secondary-channel-lum-scale: 0;\r\n\t\t\t\t\t--noise-primary-channel-hue: 30;\r\n\t\t\t\t\t--noise-primary-channel-hue-scale: 2;\r\n\t\t\t\t\t--noise-primary-channel-sat: 33;\r\n\t\t\t\t\t--noise-primary-channel-sat-scale: 0;\r\n\t\t\t\t\t--noise-primary-channel-lum: 63.5;\r\n\t\t\t\t\t--noise-primary-channel-lum-scale: 0;\r\n\t\t\t\t\t--noise-secondary-note-hue: 30;\r\n\t\t\t\t\t--noise-secondary-note-hue-scale: 2;\r\n\t\t\t\t\t--noise-secondary-note-sat: 33.5;\r\n\t\t\t\t\t--noise-secondary-note-sat-scale: 0;\r\n\t\t\t\t\t--noise-secondary-note-lum: 55;\r\n\t\t\t\t\t--noise-secondary-note-lum-scale: 0;\r\n\t\t\t\t\t--noise-primary-note-hue: 30;\r\n\t\t\t\t\t--noise-primary-note-hue-scale: 2;\r\n\t\t\t\t\t--noise-primary-note-sat: 46.5;\r\n\t\t\t\t\t--noise-primary-note-sat-scale: 0;\r\n\t\t\t\t\t--noise-primary-note-lum: 74;\r\n\t\t\t\t\t--noise-primary-note-lum-scale: 0;\r\n\t\t\t\t\t--mod-secondary-channel-hue: 0;\r\n\t\t\t\t\t--mod-secondary-channel-hue-scale: 1.5;\r\n\t\t\t\t\t--mod-secondary-channel-sat: 88;\r\n\t\t\t\t\t--mod-secondary-channel-sat-scale: 0;\r\n\t\t\t\t\t--mod-secondary-channel-lum: 50;\r\n\t\t\t\t\t--mod-secondary-channel-lum-scale: 0;\r\n\t\t\t\t\t--mod-primary-channel-hue: 0;\r\n\t\t\t\t\t--mod-primary-channel-hue-scale: 1.5;\r\n\t\t\t\t\t--mod-primary-channel-sat: 96;\r\n\t\t\t\t\t--mod-primary-channel-sat-scale: 0;\r\n\t\t\t\t\t--mod-primary-channel-lum: 80;\r\n\t\t\t\t\t--mod-primary-channel-lum-scale: 0;\r\n\t\t\t\t\t--mod-secondary-note-hue: 0;\r\n\t\t\t\t\t--mod-secondary-note-hue-scale: 1.5;\r\n\t\t\t\t\t--mod-secondary-note-sat: 92;\r\n\t\t\t\t\t--mod-secondary-note-sat-scale: 0;\r\n\t\t\t\t\t--mod-secondary-note-lum: 45;\r\n\t\t\t\t\t--mod-secondary-note-lum-scale: 0;\r\n\t\t\t\t\t--mod-primary-note-hue: 0;\r\n\t\t\t\t\t--mod-primary-note-hue-scale: 1.5;\r\n\t\t\t\t\t--mod-primary-note-sat: 96;\r\n\t\t\t\t\t--mod-primary-note-sat-scale: 0;\r\n\t\t\t\t\t--mod-primary-note-lum: 85;\r\n\t\t\t\t\t--mod-primary-note-lum-scale: 0;\r\n\t\t\t\t\t--disabled-note-primary: #91879f;\r\n\t\t\t\t\t--disabled-note-secondary: #6a677a;\r\n\t\t\t\t}\r\n\r\n\t\t\t`,\r\n        \"beachcombing\": `\r\n\t\t\t:root {\r\n\t\t\t  --page-margin: #010121;\r\n  --editor-background: #020222;\r\n  --hover-preview: #f3ffff;\r\n  --playhead: #fff;\r\n  --primary-text: #c1f1ff;\r\n  --secondary-text: #546775;\r\n  --inverted-text: black;\r\n  --text-selection: rgba(119,68,255,0.99);\r\n  --box-selection-fill: #3e0028;\r\n  --loop-accent: #5e68fffc;\r\n  --link-accent: #ff3ad5fc;\r\n  --ui-widget-background: #1f2b52;\r\n  --ui-widget-focus: #384e91;\r\n  --pitch-background: #2c3155;\r\n  --tonic: #935175;\r\n  --fifth-note: #1f569f;\r\n  --white-piano-key: #f3f2ff;\r\n  --black-piano-key: #4b4471;\r\n  --white-piano-key-text: #4b4471;\r\n  --black-piano-key-text: #fff;\r\n  --use-color-formula: false;\r\n  --track-editor-bg-pitch: #34406c;\r\n  --track-editor-bg-pitch-dim: #121931;\r\n  --track-editor-bg-noise: #562e3b;\r\n  --track-editor-bg-noise-dim: #161313;\r\n  --track-editor-bg-mod: #372e66;\r\n  --track-editor-bg-mod-dim: #2a1640;\r\n  --multiplicative-mod-slider: #606c9f;\r\n  --overwriting-mod-slider: #6850b5;\r\n  --indicator-primary: #ff8bd1;\r\n  --indicator-secondary: #393e4f;\r\n  --select2-opt-group: #5d576f;\r\n  --input-box-outline: #222;\r\n  --mute-button-normal: #7ce1ff;\r\n  --mute-button-mod: #db519d;\r\n  --pitch1-secondary-channel: #329b70;\r\n  --pitch1-primary-channel: #53ffb8;\r\n  --pitch1-secondary-note: #4cb98c;\r\n  --pitch1-primary-note: #98ffd4;\r\n  --pitch2-secondary-channel: #b08e4d;\r\n  --pitch2-primary-channel: #ffe185;\r\n  --pitch2-secondary-note: #91782e;\r\n  --pitch2-primary-note: #ffd968;\r\n  --pitch3-secondary-channel: #018e8e;\r\n  --pitch3-primary-channel: #3de4ff;\r\n  --pitch3-secondary-note: #24b7b7;\r\n  --pitch3-primary-note: #a7ffff;\r\n  --pitch4-secondary-channel: #792354;\r\n  --pitch4-primary-channel: #ff68bd;\r\n  --pitch4-secondary-note: #a73c78;\r\n  --pitch4-primary-note: #ff98d2;\r\n  --pitch5-secondary-channel: #185aab;\r\n  --pitch5-primary-channel: #6493ff;\r\n  --pitch5-secondary-note: #3e99d9;\r\n  --pitch5-primary-note: #b3e3ff;\r\n  --pitch6-secondary-channel: #953C47;\r\n  --pitch6-primary-channel: #FF7888;\r\n  --pitch6-secondary-note: #DF4F60;\r\n  --pitch6-primary-note: #FFB2BB;\r\n  --pitch7-secondary-channel: #4f007d;\r\n  --pitch7-primary-channel: #a54cd9;\r\n  --pitch7-secondary-note: #732b9d;\r\n  --pitch7-primary-note: #d386ff;\r\n  --pitch8-secondary-channel: #323c99;\r\n  --pitch8-primary-channel: #1b61ff;\r\n  --pitch8-secondary-note: #1848b3;\r\n  --pitch8-primary-note: #6f9bff;\r\n  --pitch9-secondary-channel: #1F605A;\r\n  --pitch9-primary-channel: #69FFEA;\r\n  --pitch9-secondary-note: #178076;\r\n  --pitch9-primary-note: #83FFD9;\r\n  --pitch10-secondary-channel: #6D438C;\r\n  --pitch10-primary-channel: #CE8BFF;\r\n  --pitch10-secondary-note: #8040B0;\r\n  --pitch10-primary-note: #DFACFF;\r\n  --noise1-secondary-channel: #635070;\r\n  --noise1-primary-channel: #9071db;\r\n  --noise1-secondary-note: #915dc1;\r\n  --noise1-primary-note: #c5a5ff;\r\n  --noise2-secondary-channel: #993367;\r\n  --noise2-primary-channel: #dd777c;\r\n  --noise2-secondary-note: #cc6695;\r\n  --noise2-primary-note: #f0bbd1;\r\n  --noise3-secondary-channel: #4a8c8f;\r\n  --noise3-primary-channel: #77c5dd;\r\n  --noise3-secondary-note: #6fb4cf;\r\n  --noise3-primary-note: #bbf2ff;\r\n  --noise4-secondary-channel: #8e3e7d;\r\n  --noise4-primary-channel: #c682d2;\r\n  --noise4-secondary-note: #b871c1;\r\n  --noise4-primary-note: #ffb8f0;\r\n  --noise5-secondary-channel: #785e37;\r\n  --noise5-primary-channel: #bb9d77;\r\n  --noise5-secondary-note: #aa8c66;\r\n  --noise5-primary-note: #e2d1b2;\r\n  --mod1-secondary-channel: #4e8397;\r\n  --mod1-primary-channel: #92e6f3;\r\n  --mod1-secondary-note: #76b9d9;\r\n  --mod1-primary-note: #cde3ff;\r\n  --mod2-secondary-channel: #ad5774;\r\n  --mod2-primary-channel: #eba4ae;\r\n  --mod2-secondary-note: #c9719b;\r\n  --mod2-primary-note: #fdcee7;\r\n  --mod3-secondary-channel: #6f579f;\r\n  --mod3-primary-channel: #b192f7;\r\n  --mod3-secondary-note: #7c3fc8;\r\n  --mod3-primary-note: #f8ddff;\r\n  --mod4-secondary-channel: #a88a36;\r\n  --mod4-primary-channel: #bec825;\r\n  --mod4-secondary-note: #aecb57;\r\n  --mod4-primary-note: #dee9bd;\r\n  --mod-label-primary: #2c2c56;\r\n  --mod-label-secondary-text: rgb(71,69,147);\r\n  --mod-label-primary-text: white;\r\n  --disabled-note-primary: #91879f;\r\n  --disabled-note-secondary: #6a677a;\r\n\r\n\r\n\t\t\t}\r\n\t\t`,\r\n        \"roe\": `\r\n\t\t\t:root {\r\n\t\t\t--page-margin: #050000;\r\n\t\t\t--editor-background: #050000;\r\n\t\t\t--hover-preview: white;\r\n\t\t\t--playhead: white;\r\n\t\t\t--primary-text: #b8cee0;\r\n\t\t\t--secondary-text: #cb3434;\r\n\t\t\t--inverted-text: black;\r\n\t\t\t--text-selection: rgb(255 68 68 / 99%);\r\n\t\t\t--box-selection-fill: rgb(255 0 0 / 30%);\r\n\t\t\t--loop-accent: #7744FF;\r\n\t\t\t--link-accent: #FF2A2A;\r\n\t\t\t--ui-widget-background: #1a2642;\r\n\t\t\t--ui-widget-focus: #2c3f6d;\r\n\t\t\t--pitch-background: #15111a;\r\n\t\t\t--tonic: #1b3041;\r\n\t\t\t--fifth-note: #381818;\r\n\t\t\t--white-piano-key: #cdcdcd;\r\n\t\t\t--black-piano-key: #232323;\r\n\t\t\t--white-piano-key-text: #131200;\r\n\t\t\t--black-piano-key-text: #fff;\r\n\t\t\t--use-color-formula: false;\r\n\t\t\t--track-editor-bg-pitch: #302938;\r\n\t\t\t--track-editor-bg-pitch-dim: #211c26;\r\n\t\t\t--track-editor-bg-noise: #261f42;\r\n\t\t\t--track-editor-bg-noise-dim: #1a152d;\r\n\t\t\t--track-editor-bg-mod: #183049;\r\n\t\t\t--track-editor-bg-mod-dim: #102132;\r\n\t\t\t--multiplicative-mod-slider: #344a7f;\r\n\t\t\t--overwriting-mod-slider: #344a7f;\r\n\t\t\t--indicator-primary: #FF2A2A;\r\n\t\t\t--indicator-secondary: #800000;\r\n\t\t\t--select2-opt-group: #141e34;\r\n\t\t\t--input-box-outline: #141e34;\r\n\t\t\t--mute-button-normal: #299eff;\r\n\t\t\t--mute-button-mod: #165a93;\r\n\t\t\t--pitch1-secondary-channel: #273c90;\r\n\t\t\t--pitch1-primary-channel: #476BFF;\r\n\t\t\t--pitch1-secondary-note: #273c90;\r\n\t\t\t--pitch1-primary-note: #476BFF;\r\n\t\t\t--pitch2-secondary-channel: #3a3898;\r\n\t\t\t--pitch2-primary-channel: #625FFB;\r\n\t\t\t--pitch2-secondary-note: #3a3898;\r\n\t\t\t--pitch2-primary-note: #625FFB;\r\n\t\t\t--pitch3-secondary-channel: #542780;\r\n\t\t\t--pitch3-primary-channel: #9C49EC;\r\n\t\t\t--pitch3-secondary-note: #542780;\r\n\t\t\t--pitch3-primary-note: #9C49EC;\r\n\t\t\t--pitch4-secondary-channel: #84225d;\r\n\t\t\t--pitch4-primary-channel: #fd3fb1;\r\n\t\t\t--pitch4-secondary-note: #84225d;\r\n\t\t\t--pitch4-primary-note: #fd3fb1;\r\n\t\t\t--pitch5-secondary-channel: #8d2323;\r\n\t\t\t--pitch5-primary-channel: #ff3f3f;\r\n\t\t\t--pitch5-secondary-note: #8d2323;\r\n\t\t\t--pitch5-primary-note: #ff3f3f;\r\n\t\t\t--pitch6-secondary-channel: #84225d;\r\n\t\t\t--pitch6-primary-channel: #fd3fb1;\r\n\t\t\t--pitch6-secondary-note: #84225d;\r\n\t\t\t--pitch6-primary-note: #fd3fb1;\r\n\t\t\t--pitch7-secondary-channel: #542780;\r\n\t\t\t--pitch7-primary-channel: #9C49EC;\r\n\t\t\t--pitch7-secondary-note: #542780;\r\n\t\t\t--pitch7-primary-note: #9C49EC;\r\n\t\t\t--pitch8-secondary-channel: #3a3898;\r\n\t\t\t--pitch8-primary-channel: #625FFB;\r\n\t\t\t--pitch8-secondary-note: #3a3898;\r\n\t\t\t--pitch8-primary-note: #625FFB;\r\n\t\t\t--pitch9-secondary-channel: #273c90;\r\n\t\t\t--pitch9-primary-channel: #476BFF;\r\n\t\t\t--pitch9-secondary-note: #273c90;\r\n\t\t\t--pitch9-primary-note: #476BFF;\r\n\t\t\t--pitch10-secondary-channel: #165a93;\r\n\t\t\t--pitch10-primary-channel: #299EFF;\r\n\t\t\t--pitch10-secondary-note: #165a93;\r\n\t\t\t--pitch10-primary-note: #299EFF;\r\n\t\t\t--noise1-secondary-channel: #4281FF;\r\n\t\t\t--noise1-primary-channel: #96b9ff;\r\n\t\t\t--noise1-secondary-note: #4281FF;\r\n\t\t\t--noise1-primary-note: #96b9ff;\r\n\t\t\t--noise2-secondary-channel: #7347FF;\r\n\t\t\t--noise2-primary-channel: #c3b0ff;\r\n\t\t\t--noise2-secondary-note: #7347FF;\r\n\t\t\t--noise2-primary-note: #c3b0ff;\r\n\t\t\t--noise3-secondary-channel: #9F3CBF;\r\n\t\t\t--noise3-primary-channel: #e29cf9;\r\n\t\t\t--noise3-secondary-note: #9F3CBF;\r\n\t\t\t--noise3-primary-note: #e29cf9;\r\n\t\t\t--noise4-secondary-channel: #D3326F;\r\n\t\t\t--noise4-primary-channel: #fb9bbf;\r\n\t\t\t--noise4-secondary-note: #D3326F;\r\n\t\t\t--noise4-primary-note: #fb9bbf;\r\n\t\t\t--noise5-secondary-channel: #FF2A2A;\r\n\t\t\t--noise5-primary-channel: #ffa2a2;\r\n\t\t\t--noise5-secondary-note: #FF2A2A;\r\n\t\t\t--noise5-primary-note: #ffa2a2;\r\n\t\t\t--mod1-secondary-channel: #47587a;\r\n\t\t\t--mod1-primary-channel: #96b9ff;\r\n\t\t\t--mod1-secondary-note: #47587a;\r\n\t\t\t--mod1-primary-note: #96b9ff;\r\n\t\t\t--mod2-secondary-channel: #716791;\r\n\t\t\t--mod2-primary-channel: #c3b0ff;\r\n\t\t\t--mod2-secondary-note: #716791;\r\n\t\t\t--mod2-primary-note: #c3b0ff;\r\n\t\t\t--mod3-secondary-channel: #6f4c7b;\r\n\t\t\t--mod3-primary-channel: #e29cf9;\r\n\t\t\t--mod3-secondary-note: #6f4c7b;\r\n\t\t\t--mod3-primary-note: #e29cf9;\r\n\t\t\t--mod4-secondary-channel: #9e6279;\r\n\t\t\t--mod4-primary-channel: #fb9bbf;\r\n\t\t\t--mod4-secondary-note: #9e6279;\r\n\t\t\t--mod4-primary-note: #fb9bbf;\r\n\t\t\t--mod-label-primary: #15111a;\r\n\t\t\t--mod-label-secondary-text: #cb3434;\r\n\t\t\t--mod-label-primary-text: white;\r\n\t\t\t--disabled-note-primary: #c9c9c9;\r\n\t\t\t--disabled-note-secondary: #616161;\r\n\t\t}`,\r\n        \"moonlight\": `\r\n\t\t\t:root {\r\n\t\t\t--page-margin: #020514;\r\n\t\t\t--editor-background: #020514;\r\n\t\t\t--hover-preview: white;\r\n\t\t\t--playhead: white;\r\n\t\t\t--primary-text: #D4DCE9;\r\n\t\t\t--secondary-text: #3E87DA;\r\n\t\t\t--inverted-text: black;\r\n\t\t\t--text-selection: #03599bd9;\r\n\t\t\t--box-selection-fill: hsl(206deg 66% 41% / 85%);\r\n\t\t\t--loop-accent: #639BD6;\r\n\t\t\t--link-accent: #A8C6E8;\r\n\t\t\t--ui-widget-background: #1e2940;\r\n\t\t\t--ui-widget-focus: #324b81;\r\n\t\t\t--pitch-background: #223849;\r\n\t\t\t--tonic: #33536c;\r\n\t\t\t--fifth-note: hsl(206deg 36% 16%);\r\n\t\t\t--white-piano-key: #c1bfe9;\r\n\t\t\t--black-piano-key: #454354;\r\n\t\t\t--white-piano-key-text: #131200;\r\n\t\t\t--black-piano-key-text: #fff;\r\n\t\t\t--use-color-formula: false;\r\n\t\t\t--track-editor-bg-pitch: #25568d80;\r\n\t\t\t--track-editor-bg-pitch-dim: #10253c80;\r\n\t\t\t--track-editor-bg-noise: #25568d80;\r\n\t\t\t--track-editor-bg-noise-dim: #10253c80;\r\n\t\t\t--track-editor-bg-mod: #25568d80;\r\n\t\t\t--track-editor-bg-mod-dim: #10253c80;\r\n\t\t\t--multiplicative-mod-slider: #0476cd;\r\n\t\t\t--overwriting-mod-slider: #035899;\r\n\t\t\t--indicator-primary: #57a1f4;\r\n\t\t\t--indicator-secondary: #2e5684;\r\n\t\t\t--select2-opt-group: #24355c;\r\n\t\t\t--input-box-outline: #141e34;\r\n\t\t\t--mute-button-normal: #6ebffc;\r\n\t\t\t--mute-button-mod: #0a92fa;\r\n\t\t\t--pitch1-secondary-channel: #47425c;\r\n\t\t\t--pitch1-primary-channel: #918bac;\r\n\t\t\t--pitch1-secondary-note: #6b6489;\r\n\t\t\t--pitch1-primary-note: #a8a3bf;\r\n\t\t\t--pitch2-secondary-channel: #626493;\r\n\t\t\t--pitch2-primary-channel: #bdbed3;\r\n\t\t\t--pitch2-secondary-note: #626493;\r\n\t\t\t--pitch2-primary-note: #bdbed3;\r\n\t\t\t--pitch3-secondary-channel: #6e89b4;\r\n\t\t\t--pitch3-primary-channel: #d4dce9;\r\n\t\t\t--pitch3-secondary-note: #6e89b4;\r\n\t\t\t--pitch3-primary-note: #d4dce9;\r\n\t\t\t--pitch4-secondary-channel: #4c77a9;\r\n\t\t\t--pitch4-primary-channel: #a8c6e8;\r\n\t\t\t--pitch4-secondary-note: #4c77a9;\r\n\t\t\t--pitch4-primary-note: #a8c6e8;\r\n\t\t\t--pitch5-secondary-channel: #314e6d;\r\n\t\t\t--pitch5-primary-channel: #639bd6;\r\n\t\t\t--pitch5-secondary-note: #46698f;\r\n\t\t\t--pitch5-primary-note: #639bd6;\r\n\t\t\t--pitch6-secondary-channel: #143d6b;\r\n\t\t\t--pitch6-primary-channel: #3e87da;\r\n\t\t\t--pitch6-secondary-note: #143d6b;\r\n\t\t\t--pitch6-primary-note: #3e87da;\r\n\t\t\t--pitch7-secondary-channel: #314e6d;\r\n\t\t\t--pitch7-primary-channel: #639bd6;\r\n\t\t\t--pitch7-secondary-note: #314e6d;\r\n\t\t\t--pitch7-primary-note: #639bd6;\r\n\t\t\t--pitch8-secondary-channel: #4c77a9;\r\n\t\t\t--pitch8-primary-channel: #a8c6e8;\r\n\t\t\t--pitch8-secondary-note: #4c77a9;\r\n\t\t\t--pitch8-primary-note: #a8c6e8;\r\n\t\t\t--pitch9-secondary-channel: #6e89b4;\r\n\t\t\t--pitch9-primary-channel: #d4dce9;\r\n\t\t\t--pitch9-secondary-note: #6e89b4;\r\n\t\t\t--pitch9-primary-note: #d4dce9;\r\n\t\t\t--pitch10-secondary-channel: #626493;\r\n\t\t\t--pitch10-primary-channel: #bdbed3;\r\n\t\t\t--pitch10-secondary-note: #626493;\r\n\t\t\t--pitch10-primary-note: #bdbed3;\r\n\t\t\t--noise1-secondary-channel: #4b4a55;\r\n\t\t\t--noise1-primary-channel: #9795a3;\r\n\t\t\t--noise1-secondary-note: #4b4a55;\r\n\t\t\t--noise1-primary-note: #9795a3;\r\n\t\t\t--noise2-secondary-channel: #858e9d;\r\n\t\t\t--noise2-primary-channel: #d7dce5;\r\n\t\t\t--noise2-secondary-note: #858e9d;\r\n\t\t\t--noise2-primary-note: #d7dce5;\r\n\t\t\t--noise3-secondary-channel: #394e65;\r\n\t\t\t--noise3-primary-channel: #809bb7;\r\n\t\t\t--noise3-secondary-note: #394e65;\r\n\t\t\t--noise3-primary-note: #809bb7;\r\n\t\t\t--noise4-secondary-channel: #37577b;\r\n\t\t\t--noise4-primary-channel: #6189b8;\r\n\t\t\t--noise4-secondary-note: #37577b;\r\n\t\t\t--noise4-primary-note: #6189b8;\r\n\t\t\t--noise5-secondary-channel: #223849;\r\n\t\t\t--noise5-primary-channel: #5588af;\r\n\t\t\t--noise5-secondary-note: #223849;\r\n\t\t\t--noise5-primary-note: #5588af;\r\n\t\t\t--mod1-secondary-channel: #3e336c;\r\n\t\t\t--mod1-primary-channel: #6d60a4;\r\n\t\t\t--mod1-secondary-note: #3e336c;\r\n\t\t\t--mod1-primary-note: #6d60a4;\r\n\t\t\t--mod2-secondary-channel: #716791;\r\n\t\t\t--mod2-primary-channel: #bdbed3;\r\n\t\t\t--mod2-secondary-note: #716791;\r\n\t\t\t--mod2-primary-note: #bdbed3;\r\n\t\t\t--mod3-secondary-channel: #6b91bd;\r\n\t\t\t--mod3-primary-channel: #4b8fdd;\r\n\t\t\t--mod3-secondary-note: #597ca7;\r\n\t\t\t--mod3-primary-note: #7eade3;\r\n\t\t\t--mod4-secondary-channel: #14559f;\r\n\t\t\t--mod4-primary-channel: #3386e6;\r\n\t\t\t--mod4-secondary-note: #14559f;\r\n\t\t\t--mod4-primary-note: #3386e6;\r\n\t\t\t--mod-label-primary: #1e2940;\r\n\t\t\t--mod-label-secondary-text: #748ebe;\r\n\t\t\t--mod-label-primary-text: white;\r\n\t\t\t--disabled-note-primary: #828282;\r\n\t\t\t--disabled-note-secondary: #4f4f4f;\r\n\t\t\t}`,\r\n        \"autumn\": `\r\n\t\t:root {\r\n\t\t\t--page-margin: #060304;\r\n\t\t\t--editor-background: #060304;\r\n\t\t\t--hover-preview: white;\r\n\t\t\t--playhead: white;\r\n\t\t\t--primary-text: white;\r\n\t\t\t--secondary-text: #999;\r\n\t\t\t--inverted-text: black;\r\n\t\t\t--text-selection: rgb(115 80 76);\r\n\t\t\t--box-selection-fill: rgb(174 73 81 / 45%);\r\n\t\t\t--loop-accent: #834A69;\r\n\t\t\t--link-accent: #98f;\r\n\t\t\t--ui-widget-background: #2a2523;\r\n\t\t\t--ui-widget-focus: #4e4c44;\r\n\t\t\t--pitch-background: #121212;\r\n\t\t\t--tonic: #4f4f4f;\r\n\t\t\t--fifth-note: #222;\r\n\t\t\t--white-piano-key: #b59b9b;\r\n\t\t\t--black-piano-key: #231e1e;\r\n\t\t\t--white-piano-key-text: #131200;\r\n\t\t\t--black-piano-key-text: #fff;\r\n\t\t\t--use-color-formula: false;\r\n\t\t\t--track-editor-bg-pitch: #352f38;\r\n\t\t\t--track-editor-bg-pitch-dim: #232025;\r\n\t\t\t--track-editor-bg-noise: #3c3029;\r\n\t\t\t--track-editor-bg-noise-dim: #251d19;\r\n\t\t\t--track-editor-bg-mod: #202623;\r\n\t\t\t--track-editor-bg-mod-dim: #131715;\r\n\t\t\t--multiplicative-mod-slider: #D9D16E;\r\n\t\t\t--overwriting-mod-slider: #2D826F;\r\n\t\t\t--indicator-primary: #D9D16E;\r\n\t\t\t--indicator-secondary: #444226;\r\n\t\t\t--select2-opt-group: #20191c;\r\n\t\t\t--input-box-outline: #20191c;\r\n\t\t\t--mute-button-normal: var(--pitch2-primary-channel);\r\n\t\t\t--mute-button-mod: var(--pitch4-primary-channel);\r\n\t\t\t--pitch1-secondary-channel: #704a34;\r\n\t\t\t--pitch1-primary-channel: #D9895A;\r\n\t\t\t--pitch1-secondary-note: #704a34;\r\n\t\t\t--pitch1-primary-note: #D9895A;\r\n\t\t\t--pitch2-secondary-channel: #5f3538;\r\n\t\t\t--pitch2-primary-channel: #AE4951;\r\n\t\t\t--pitch2-secondary-note: #5f3538;\r\n\t\t\t--pitch2-primary-note: #AE4951;\r\n\t\t\t--pitch3-secondary-channel: #5c4336;\r\n\t\t\t--pitch3-primary-channel: #CA9A81;\r\n\t\t\t--pitch3-secondary-note: #5c4336;\r\n\t\t\t--pitch3-primary-note: #CA9A81;\r\n\t\t\t--pitch4-secondary-channel: #1d3143;\r\n\t\t\t--pitch4-primary-channel: #386995;\r\n\t\t\t--pitch4-secondary-note: #1d3143;\r\n\t\t\t--pitch4-primary-note: #386995;\r\n\t\t\t--pitch5-secondary-channel: #9c8a58;\r\n\t\t\t--pitch5-primary-channel: #D9D16E;\r\n\t\t\t--pitch5-secondary-note: #7c783f;\r\n\t\t\t--pitch5-primary-note: #D9D16E;\r\n\t\t\t--pitch6-secondary-channel: #886562;\r\n\t\t\t--pitch6-primary-channel: #D3A9A5;\r\n\t\t\t--pitch6-secondary-note: #886562;\r\n\t\t\t--pitch6-primary-note: #D3A9A5;\r\n\t\t\t--pitch7-secondary-channel: #1c3f37;\r\n\t\t\t--pitch7-primary-channel: #2D826F;\r\n\t\t\t--pitch7-secondary-note: #1c3f37;\r\n\t\t\t--pitch7-primary-note: #2D826F;\r\n\t\t\t--pitch8-secondary-channel: #442e2d;\r\n\t\t\t--pitch8-primary-channel: #815150;\r\n\t\t\t--pitch8-secondary-note: #442e2d;\r\n\t\t\t--pitch8-primary-note: #815150;\r\n\t\t\t--pitch9-secondary-channel: #8e6f60;\r\n\t\t\t--pitch9-primary-channel: #E5B8A1;\r\n\t\t\t--pitch9-secondary-note: #8e6f60;\r\n\t\t\t--pitch9-primary-note: #E5B8A1;\r\n\t\t\t--pitch10-secondary-channel: #4f3142;\r\n\t\t\t--pitch10-primary-channel: #834A69;\r\n\t\t\t--pitch10-secondary-note: #4f3142;\r\n\t\t\t--pitch10-primary-note: #834A69;\r\n\t\t\t--noise1-secondary-channel: #6b5346;\r\n\t\t\t--noise1-primary-channel: #b99c89;\r\n\t\t\t--noise1-secondary-note: #6b5346;\r\n\t\t\t--noise1-primary-note: #F0D0BB;\r\n\t\t\t--noise2-secondary-channel: #4a3839;\r\n\t\t\t--noise2-primary-channel: #9c6b6e;\r\n\t\t\t--noise2-secondary-note: #4a3839;\r\n\t\t\t--noise2-primary-note: #c18b8f;\r\n\t\t\t--noise3-secondary-channel: #2d3c4a;\r\n\t\t\t--noise3-primary-channel: #536e86;\r\n\t\t\t--noise3-secondary-note: #2d3c4a;\r\n\t\t\t--noise3-primary-note: #8fa8c0;\r\n\t\t\t--noise4-secondary-channel: #273f3a;\r\n\t\t\t--noise4-primary-channel: #4e8377;\r\n\t\t\t--noise4-secondary-note: #273f3a;\r\n\t\t\t--noise4-primary-note: #87baae;\r\n\t\t\t--noise5-secondary-channel: #372730;\r\n\t\t\t--noise5-primary-channel: #7f5e70;\r\n\t\t\t--noise5-secondary-note: #372730;\r\n\t\t\t--noise5-primary-note: #cc96b3;\r\n\t\t\t--mod1-secondary-channel: #783f1f;\r\n\t\t\t--mod1-primary-channel: #dc6d2c;\r\n\t\t\t--mod1-secondary-note: #783f1f;\r\n\t\t\t--mod1-primary-note: #dc6d2c;\r\n\t\t\t--mod2-secondary-channel: #0b3153;\r\n\t\t\t--mod2-primary-channel: #1464ac;\r\n\t\t\t--mod2-secondary-note: #0b3153;\r\n\t\t\t--mod2-primary-note: #1464ac;\r\n\t\t\t--mod3-secondary-channel: #075040;\r\n\t\t\t--mod3-primary-channel: #08a17f;\r\n\t\t\t--mod3-secondary-note: #075040;\r\n\t\t\t--mod3-primary-note: #08a17f;\r\n\t\t\t--mod4-secondary-channel: #631640;\r\n\t\t\t--mod4-primary-channel: #b4186d;\r\n\t\t\t--mod4-secondary-note: #631640;\r\n\t\t\t--mod4-primary-note: #b4186d;\r\n\t\t\t--mod-label-primary: #000;\r\n\t\t\t--mod-label-secondary-text: #707070;\r\n\t\t\t--mod-label-primary-text: white;\r\n\t\t\t--disabled-note-primary: #5d5d5d;\r\n\t\t\t--disabled-note-secondary: #292929;\r\n\t\t}`,\r\n        \"fruit\": `\r\n\t\t:root {\r\n\t\t\t--page-margin: #040507;\r\n\t\t\t--editor-background: #040507;\r\n\t\t\t--hover-preview: white;\r\n\t\t\t--playhead: white;\r\n\t\t\t--primary-text: white;\r\n\t\t\t--secondary-text: #999;\r\n\t\t\t--inverted-text: black;\r\n\t\t\t--text-selection: rgb(115 103 76);\r\n\t\t\t--box-selection-fill: rgb(174 109 73 / 45%);\r\n\t\t\t--loop-accent: #EC897D;\r\n\t\t\t--link-accent: #FDE484;\r\n\t\t\t--ui-widget-background: #22222c;\r\n\t\t\t--ui-widget-focus: #39394c;\r\n\t\t\t--pitch-background: #101010;\r\n\t\t\t--tonic: #2c2d34;\r\n\t\t\t--fifth-note: #191a20;\r\n\t\t\t--white-piano-key: #bbbaba;\r\n\t\t\t--black-piano-key: #2d2d2d;\r\n\t\t\t--white-piano-key-text: #131200;\r\n\t\t\t--black-piano-key-text: #fff;\r\n\t\t\t--use-color-formula: false;\r\n\t\t\t--track-editor-bg-pitch: #2b2d40;\r\n\t\t\t--track-editor-bg-pitch-dim: #191a25;\r\n\t\t\t--track-editor-bg-noise: #3c3644;\r\n\t\t\t--track-editor-bg-noise-dim: #26222b;\r\n\t\t\t--track-editor-bg-mod: #322a2a;\r\n\t\t\t--track-editor-bg-mod-dim: #191515;\r\n\t\t\t--multiplicative-mod-slider: #977da9;\r\n\t\t\t--overwriting-mod-slider: #798FA7;\r\n\t\t\t--indicator-primary: #EAAC9D;\r\n\t\t\t--indicator-secondary: #5e413a;\r\n\t\t\t--select2-opt-group: #191920;\r\n\t\t\t--input-box-outline: #191920;\r\n\t\t\t--mute-button-normal: #798FA7;\r\n\t\t\t--mute-button-mod: #354457;\r\n\t\t\t--pitch1-secondary-channel: #91655a;\r\n\t\t\t--pitch1-primary-channel: #EAAC9D;\r\n\t\t\t--pitch1-secondary-note: #91655a;\r\n\t\t\t--pitch1-primary-note: #EAAC9D;\r\n\t\t\t--pitch2-secondary-channel: #8f6513;\r\n\t\t\t--pitch2-primary-channel: #FFAF12;\r\n\t\t\t--pitch2-secondary-note: #8f6513;\r\n\t\t\t--pitch2-primary-note: #FFAF12;\r\n\t\t\t--pitch3-secondary-channel: #212f46;\r\n\t\t\t--pitch3-primary-channel: #34558B;\r\n\t\t\t--pitch3-secondary-note: #212f46;\r\n\t\t\t--pitch3-primary-note: #34558B;\r\n\t\t\t--pitch4-secondary-channel: #2e6b5b;\r\n\t\t\t--pitch4-primary-channel: #4EC5A7;\r\n\t\t\t--pitch4-secondary-note: #2e6b5b;\r\n\t\t\t--pitch4-primary-note: #4EC5A7;\r\n\t\t\t--pitch5-secondary-channel: #555D46;\r\n\t\t\t--pitch5-primary-channel: #aabf84;\r\n\t\t\t--pitch5-secondary-note: #555D46;\r\n\t\t\t--pitch5-primary-note: #aabf84;\r\n\t\t\t--pitch6-secondary-channel: #A2553B;\r\n\t\t\t--pitch6-primary-channel: #e59a81;\r\n\t\t\t--pitch6-secondary-note: #A2553B;\r\n\t\t\t--pitch6-primary-note: #e59a81;\r\n\t\t\t--pitch7-secondary-channel: #7b4021;\r\n\t\t\t--pitch7-primary-channel: #FE813E;\r\n\t\t\t--pitch7-secondary-note: #7b4021;\r\n\t\t\t--pitch7-primary-note: #FE813E;\r\n\t\t\t--pitch8-secondary-channel: #847753;\r\n\t\t\t--pitch8-primary-channel: #EFDAA3;\r\n\t\t\t--pitch8-secondary-note: #847753;\r\n\t\t\t--pitch8-primary-note: #EFDAA3;\r\n\t\t\t--pitch9-secondary-channel: #2c3642;\r\n\t\t\t--pitch9-primary-channel: #798FA7;\r\n\t\t\t--pitch9-secondary-note: #2c3642;\r\n\t\t\t--pitch9-primary-note: #798FA7;\r\n\t\t\t--pitch10-secondary-channel: #0d4453;\r\n\t\t\t--pitch10-primary-channel: #107895;\r\n\t\t\t--pitch10-secondary-note: #0d4453;\r\n\t\t\t--pitch10-primary-note: #107895;\r\n\t\t\t--noise1-secondary-channel: #71617C;\r\n\t\t\t--noise1-primary-channel: #977da9;\r\n\t\t\t--noise1-secondary-note: #71617C;\r\n\t\t\t--noise1-primary-note: #977da9;\r\n\t\t\t--noise2-secondary-channel: #3B3D4A;\r\n\t\t\t--noise2-primary-channel: #707591;\r\n\t\t\t--noise2-secondary-note: #3B3D4A;\r\n\t\t\t--noise2-primary-note: #707591;\r\n\t\t\t--noise3-secondary-channel: #625f5e;\r\n\t\t\t--noise3-primary-channel: #A19D9C;\r\n\t\t\t--noise3-secondary-note: #625f5e;\r\n\t\t\t--noise3-primary-note: #A19D9C;\r\n\t\t\t--noise4-secondary-channel: #ab847b;\r\n\t\t\t--noise4-primary-channel: #EAAC9D;\r\n\t\t\t--noise4-secondary-note: #ab847b;\r\n\t\t\t--noise4-primary-note: #EAAC9D;\r\n\t\t\t--noise5-secondary-channel: #B49D74;\r\n\t\t\t--noise5-primary-channel: #dec69b;\r\n\t\t\t--noise5-secondary-note: #B49D74;\r\n\t\t\t--noise5-primary-note: #dec69b;\r\n\t\t\t--mod1-secondary-channel: #722124;\r\n\t\t\t--mod1-primary-channel: #D13A41;\r\n\t\t\t--mod1-secondary-note: #722124;\r\n\t\t\t--mod1-primary-note: #D13A41;\r\n\t\t\t--mod2-secondary-channel: #213657;\r\n\t\t\t--mod2-primary-channel: #34558B;\r\n\t\t\t--mod2-secondary-note: #213657;\r\n\t\t\t--mod2-primary-note: #34558B;\r\n\t\t\t--mod3-secondary-channel: #555D46;\r\n\t\t\t--mod3-primary-channel: #848f6d;\r\n\t\t\t--mod3-secondary-note: #555D46;\r\n\t\t\t--mod3-primary-note: #848f6d;\r\n\t\t\t--mod4-secondary-channel: #71617C;\r\n\t\t\t--mod4-primary-channel: #a68ab9;\r\n\t\t\t--mod4-secondary-note: #71617C;\r\n\t\t\t--mod4-primary-note: #a68ab9;\r\n\t\t\t--mod-label-primary: #282828;\r\n\t\t\t--mod-label-secondary-text: #707070;\r\n\t\t\t--mod-label-primary-text: white;\r\n\t\t\t--disabled-note-primary: #5d5d5d;\r\n\t\t\t--disabled-note-secondary: #292929;\r\n\t\t}`,\r\n        \"sunset\": `\r\n\t\t:root {\r\n\t\t\t--page-margin: #040300;\r\n\t\t\t--editor-background: #040300;\r\n\t\t\t--hover-preview: white;\r\n\t\t\t--playhead: white;\r\n\t\t\t--primary-text: white;\r\n\t\t\t--secondary-text: #999;\r\n\t\t\t--inverted-text: black;\r\n\t\t\t--text-selection: rgb(94 0 157);\r\n\t\t\t--box-selection-fill: rgb(174 173 73 / 45%);\r\n\t\t\t--loop-accent: #EC897D;\r\n\t\t\t--link-accent: #FDE484;\r\n\t\t\t--ui-widget-background: #241b24;\r\n\t\t\t--ui-widget-focus: #3a2e39;\r\n\t\t\t--pitch-background: #141414;\r\n\t\t\t--tonic: #2C212B;\r\n\t\t\t--fifth-note: #2E2A15;\r\n\t\t\t--white-piano-key: #bbbaba;\r\n\t\t\t--black-piano-key: #2d2d2d;\r\n\t\t\t--white-piano-key-text: #131200;\r\n\t\t\t--black-piano-key-text: #fff;\r\n\t\t\t--use-color-formula: false;\r\n\t\t\t--track-editor-bg-pitch: #2d2e42;\r\n\t\t\t--track-editor-bg-pitch-dim: #191a25;\r\n\t\t\t--track-editor-bg-noise: #393340;\r\n\t\t\t--track-editor-bg-noise-dim: #26222b;\r\n\t\t\t--track-editor-bg-mod: #232a2c;\r\n\t\t\t--track-editor-bg-mod-dim: #151819;\r\n\t\t\t--multiplicative-mod-slider: #977da9;\r\n\t\t\t--overwriting-mod-slider: #798FA7;\r\n\t\t\t--indicator-primary: #F28891;\r\n\t\t\t--indicator-secondary: #601d23;\r\n\t\t\t--select2-opt-group: #151015;\r\n\t\t\t--input-box-outline: #151015;\r\n\t\t\t--mute-button-normal: #E4739D;\r\n\t\t\t--mute-button-mod: #9650A6;\r\n\t\t\t--pitch1-secondary-channel: #7F7721;\r\n\t\t\t--pitch1-primary-channel: #F3E79A;\r\n\t\t\t--pitch1-secondary-note: #7F7721;\r\n\t\t\t--pitch1-primary-note: #F3E79A;\r\n\t\t\t--pitch2-secondary-channel: #785E20;\r\n\t\t\t--pitch2-primary-channel: #F7D086;\r\n\t\t\t--pitch2-secondary-note: #785E20;\r\n\t\t\t--pitch2-primary-note: #F7D086;\r\n\t\t\t--pitch3-secondary-channel: #6E4219;\r\n\t\t\t--pitch3-primary-channel: #F9B881;\r\n\t\t\t--pitch3-secondary-note: #6E4219;\r\n\t\t\t--pitch3-primary-note: #F9B881;\r\n\t\t\t--pitch4-secondary-channel: #79351F;\r\n\t\t\t--pitch4-primary-channel: #F7A086;\r\n\t\t\t--pitch4-secondary-note: #79351F;\r\n\t\t\t--pitch4-primary-note: #F7A086;\r\n\t\t\t--pitch5-secondary-channel: #81272F;\r\n\t\t\t--pitch5-primary-channel: #F28891;\r\n\t\t\t--pitch5-secondary-note: #81272F;\r\n\t\t\t--pitch5-primary-note: #F28891;\r\n\t\t\t--pitch6-secondary-channel: #8F224D;\r\n\t\t\t--pitch6-primary-channel: #E4739D;\r\n\t\t\t--pitch6-secondary-note: #8F224D;\r\n\t\t\t--pitch6-primary-note: #E4739D;\r\n\t\t\t--pitch7-secondary-channel: #611548;\r\n\t\t\t--pitch7-primary-channel: #CF63A6;\r\n\t\t\t--pitch7-secondary-note: #611548;\r\n\t\t\t--pitch7-primary-note: #CF63A6;\r\n\t\t\t--pitch8-secondary-channel: #561253;\r\n\t\t\t--pitch8-primary-channel: #B557A9;\r\n\t\t\t--pitch8-secondary-note: #4D104A;\r\n\t\t\t--pitch8-primary-note: #B557A9;\r\n\t\t\t--pitch9-secondary-channel: #4c1260;\r\n\t\t\t--pitch9-primary-channel: #9650A6;\r\n\t\t\t--pitch9-secondary-note: #3C0F4C;\r\n\t\t\t--pitch9-primary-note: #9650A6;\r\n\t\t\t--pitch10-secondary-channel: #3e1d78;\r\n\t\t\t--pitch10-primary-channel: #704D9E;\r\n\t\t\t--pitch10-secondary-note: #27124C;\r\n\t\t\t--pitch10-primary-note: #704D9E;\r\n\t\t\t--noise1-secondary-channel: #A7A578;\r\n\t\t\t--noise1-primary-channel: #EFE9AC;\r\n\t\t\t--noise1-secondary-note: #A7A578;\r\n\t\t\t--noise1-primary-note: #EFE9AC;\r\n\t\t\t--noise2-secondary-channel: #947A5F;\r\n\t\t\t--noise2-primary-channel: #FBCEA8;\r\n\t\t\t--noise2-secondary-note: #947A5F;\r\n\t\t\t--noise2-primary-note: #FBCEA8;\r\n\t\t\t--noise3-secondary-channel: #A3635D;\r\n\t\t\t--noise3-primary-channel: #F4A5AB;\r\n\t\t\t--noise3-secondary-note: #A3635D;\r\n\t\t\t--noise3-primary-note: #F4A5AB;\r\n\t\t\t--noise4-secondary-channel: #724D60;\r\n\t\t\t--noise4-primary-channel: #CD90B6;\r\n\t\t\t--noise4-secondary-note: #724D60;\r\n\t\t\t--noise4-primary-note: #CD90B6;\r\n\t\t\t--noise5-secondary-channel: #503F5C;\r\n\t\t\t--noise5-primary-channel: #7C6A9E;\r\n\t\t\t--noise5-secondary-note: #503F5C;\r\n\t\t\t--noise5-primary-note: #7C6A9E;\r\n\t\t\t--mod1-secondary-channel: #371883;\r\n\t\t\t--mod1-primary-channel: #6416C6;\r\n\t\t\t--mod1-secondary-note: #1F0A52;\r\n\t\t\t--mod1-primary-note: #6416C6;\r\n\t\t\t--mod2-secondary-channel: #690645;\r\n\t\t\t--mod2-primary-channel: #E52FA2;\r\n\t\t\t--mod2-secondary-note: #690645;\r\n\t\t\t--mod2-primary-note: #E52FA2;\r\n\t\t\t--mod3-secondary-channel: #943618;\r\n\t\t\t--mod3-primary-channel: #eb5b2c;\r\n\t\t\t--mod3-secondary-note: #943618;\r\n\t\t\t--mod3-primary-note: #eb5b2c;\r\n\t\t\t--mod4-secondary-channel: #928409;\r\n\t\t\t--mod4-primary-channel: #ecd50e;\r\n\t\t\t--mod4-secondary-note: #928409;\r\n\t\t\t--mod4-primary-note: #ecd50e;\r\n\t\t\t--mod-label-primary: #282828;\r\n\t\t\t--mod-label-secondary-text: #707070;\r\n\t\t\t--mod-label-primary-text: white;\r\n\t\t\t--disabled-note-primary: #5d5d5d;\r\n\t\t\t--disabled-note-secondary: #292929;\r\n\t\t}`,\r\n        \"toxic\": `\r\n\t\t:root {\r\n\t\t\t--page-margin: #010003;\r\n\t\t\t--editor-background: #010003;\r\n\t\t\t--hover-preview: white;\r\n\t\t\t--playhead: white;\r\n\t\t\t--primary-text: white;\r\n\t\t\t--secondary-text: #999;\r\n\t\t\t--inverted-text: black;\r\n\t\t\t--text-selection: rgb(147 195 0);\r\n\t\t\t--box-selection-fill: rgb(145 174 73 / 49%);\r\n\t\t\t--loop-accent: #BCDE2C;\r\n\t\t\t--link-accent: #edff9f;\r\n\t\t\t--ui-widget-background: #261e2e;\r\n\t\t\t--ui-widget-focus: #322042;\r\n\t\t\t--pitch-background: #141c15;\r\n\t\t\t--tonic: #282c21;\r\n\t\t\t--fifth-note: #18221a;\r\n\t\t\t--white-piano-key: #e3e3e3;\r\n\t\t\t--black-piano-key: #2d2d2d;\r\n\t\t\t--white-piano-key-text: #131200;\r\n\t\t\t--black-piano-key-text: #fff;\r\n\t\t\t--use-color-formula: false;\r\n\t\t\t--track-editor-bg-pitch: #38293e;\r\n\t\t\t--track-editor-bg-pitch-dim: #251c29;\r\n\t\t\t--track-editor-bg-noise: #2c304c;\r\n\t\t\t--track-editor-bg-noise-dim: #191b2b;\r\n\t\t\t--track-editor-bg-mod: #311b32;\r\n\t\t\t--track-editor-bg-mod-dim: #1d101e;\r\n\t\t\t--multiplicative-mod-slider: #977da9;\r\n\t\t\t--overwriting-mod-slider: #798FA7;\r\n\t\t\t--indicator-primary: #aae9ff;\r\n\t\t\t--indicator-secondary: #253e46;\r\n\t\t\t--select2-opt-group: #110d15;\r\n\t\t\t--input-box-outline: #110d15;\r\n\t\t\t--mute-button-normal: #8f5ad1;\r\n\t\t\t--mute-button-mod: #482574;\r\n\t\t\t--pitch1-secondary-channel: #6b7f19;\r\n\t\t\t--pitch1-primary-channel: #BCDE2C;\r\n\t\t\t--pitch1-secondary-note: #6b7f19;\r\n\t\t\t--pitch1-primary-note: #BCDE2C;\r\n\t\t\t--pitch2-secondary-channel: #497a31;\r\n\t\t\t--pitch2-primary-channel: #7BD152;\r\n\t\t\t--pitch2-secondary-note: #497a31;\r\n\t\t\t--pitch2-primary-note: #7BD152;\r\n\t\t\t--pitch3-secondary-channel: #286b40;\r\n\t\t\t--pitch3-primary-channel: #45BE71;\r\n\t\t\t--pitch3-secondary-note: #286b40;\r\n\t\t\t--pitch3-primary-note: #45BE71;\r\n\t\t\t--pitch4-secondary-channel: #125140;\r\n\t\t\t--pitch4-primary-channel: #25A884;\r\n\t\t\t--pitch4-secondary-note: #125140;\r\n\t\t\t--pitch4-primary-note: #25A884;\r\n\t\t\t--pitch5-secondary-channel: #114c49;\r\n\t\t\t--pitch5-primary-channel: #21908C;\r\n\t\t\t--pitch5-secondary-note: #114c49;\r\n\t\t\t--pitch5-primary-note: #21908C;\r\n\t\t\t--pitch6-secondary-channel: #143843;\r\n\t\t\t--pitch6-primary-channel: #2B788E;\r\n\t\t\t--pitch6-secondary-note: #143843;\r\n\t\t\t--pitch6-primary-note: #2B788E;\r\n\t\t\t--pitch7-secondary-channel: #1d354e;\r\n\t\t\t--pitch7-primary-channel: #355F8D;\r\n\t\t\t--pitch7-secondary-note: #1a2f46;\r\n\t\t\t--pitch7-primary-note: #355F8D;\r\n\t\t\t--pitch8-secondary-channel: #2c2e5a;\r\n\t\t\t--pitch8-primary-channel: #414486;\r\n\t\t\t--pitch8-secondary-note: #1e1f3d;\r\n\t\t\t--pitch8-primary-note: #414486;\r\n\t\t\t--pitch9-secondary-channel: #3c1f5e;\r\n\t\t\t--pitch9-primary-channel: #5e3b89;\r\n\t\t\t--pitch9-secondary-note: #25133b;\r\n\t\t\t--pitch9-primary-note: #5e3b89;\r\n\t\t\t--pitch10-secondary-channel: #510264;\r\n\t\t\t--pitch10-primary-channel: #720d8a;\r\n\t\t\t--pitch10-secondary-note: #440154;\r\n\t\t\t--pitch10-primary-note: #720d8a;\r\n\t\t\t--noise1-secondary-channel: #BCDE2C;\r\n\t\t\t--noise1-primary-channel: #edff9f;\r\n\t\t\t--noise1-secondary-note: #BCDE2C;\r\n\t\t\t--noise1-primary-note: #edff9f;\r\n\t\t\t--noise2-secondary-channel: #45BE71;\r\n\t\t\t--noise2-primary-channel: #89ffb4;\r\n\t\t\t--noise2-secondary-note: #45BE71;\r\n\t\t\t--noise2-primary-note: #89ffb4;\r\n\t\t\t--noise3-secondary-channel: #21908C;\r\n\t\t\t--noise3-primary-channel: #72fffa;\r\n\t\t\t--noise3-secondary-note: #21908C;\r\n\t\t\t--noise3-primary-note: #72fffa;\r\n\t\t\t--noise4-secondary-channel: #355F8D;\r\n\t\t\t--noise4-primary-channel: #7cb6f5;\r\n\t\t\t--noise4-secondary-note: #355F8D;\r\n\t\t\t--noise4-primary-note: #7cb6f5;\r\n\t\t\t--noise5-secondary-channel: #482574;\r\n\t\t\t--noise5-primary-channel: #8f5ad1;\r\n\t\t\t--noise5-secondary-note: #48257A;\r\n\t\t\t--noise5-primary-note: #8f5ad1;\r\n\t\t\t--mod1-secondary-channel: #815a16;\r\n\t\t\t--mod1-primary-channel: #F5AB29;\r\n\t\t\t--mod1-secondary-note: #815a16;\r\n\t\t\t--mod1-primary-note: #F5AB29;\r\n\t\t\t--mod2-secondary-channel: #4d341a;\r\n\t\t\t--mod2-primary-channel: #C98540;\r\n\t\t\t--mod2-secondary-note: #4d341a;\r\n\t\t\t--mod2-primary-note: #C98540;\r\n\t\t\t--mod3-secondary-channel: #643734;\r\n\t\t\t--mod3-primary-channel: #A75D58;\r\n\t\t\t--mod3-secondary-note: #643734;\r\n\t\t\t--mod3-primary-note: #A75D58;\r\n\t\t\t--mod4-secondary-channel: #461430;\r\n\t\t\t--mod4-primary-channel: #812359;\r\n\t\t\t--mod4-secondary-note: #3f112b;\r\n\t\t\t--mod4-primary-note: #812359;\r\n\t\t\t--mod-label-primary: #282828;\r\n\t\t\t--mod-label-secondary-text: #707070;\r\n\t\t\t--mod-label-primary-text: white;\r\n\t\t\t--disabled-note-primary: #5d5d5d;\r\n\t\t\t--disabled-note-secondary: #292929;\r\n\t\t}`,\r\n        \"violet verdant\": `\r\n\t\t:root {\r\n\t\t\t--page-margin: #0e031a;\r\n\t\t\t--editor-background: #0e031a;\r\n\t\t\t--hover-preview: #e5ffea;\r\n\t\t\t--playhead: rgba(255, 255, 255, 0.9);\r\n\t\t\t--primary-text: #f0e0ff;\r\n\t\t\t--secondary-text: #706087;\r\n\t\t\t--inverted-text: black;\r\n\t\t\t--text-selection: rgba(119,68,255,0.99);\r\n\t\t\t--box-selection-fill: #225835;\r\n\t\t\t--loop-accent: #8f00fb;\r\n\t\t\t--link-accent: #82dd5d;\r\n\t\t\t--ui-widget-background: #303c66;\r\n\t\t\t--ui-widget-focus: #62559b;\r\n\t\t\t--pitch-background: #293b52;\r\n\t\t\t--tonic: #5b46ad;\r\n\t\t\t--fifth-note: #42604d;\r\n\t\t\t--white-piano-key: #f6e8ff;\r\n\t\t\t--black-piano-key: #5a4972;\r\n\t\t\t--white-piano-key-text: #131200;\r\n\t\t\t--black-piano-key-text: #fff;\r\n\t\t\t--use-color-formula: true;\r\n\t\t\t--track-editor-bg-pitch: #392a46;\r\n\t\t\t--track-editor-bg-pitch-dim: #1c1d28;\r\n\t\t\t--track-editor-bg-noise: #403150;\r\n\t\t\t--track-editor-bg-noise-dim: #161313;\r\n\t\t\t--track-editor-bg-mod: #253c25;\r\n\t\t\t--track-editor-bg-mod-dim: #0c1811;\r\n\t\t\t--multiplicative-mod-slider: #606c9f;\r\n\t\t\t--overwriting-mod-slider: #6850b5;\r\n\t\t\t--indicator-primary: #9c64f7;\r\n\t\t\t--indicator-secondary: #393e4f;\r\n\t\t\t--select2-opt-group: #5d576f;\r\n\t\t\t--input-box-outline: #403150;\r\n\t\t\t--mute-button-normal: #82dd5d;\r\n\t\t\t--mute-button-mod: #945de5;\r\n\t\t\t--mod-label-primary: #312840;\r\n\t\t\t--mod-label-secondary-text: rgb(88 70 104);\r\n\t\t\t--mod-label-primary-text: #82dd5d;\r\n\t\t\t--pitch-secondary-channel-hue: 64;\r\n\t\t\t--pitch-secondary-channel-hue-scale: 6.1;\r\n\t\t\t--pitch-secondary-channel-sat: 63.3;\r\n\t\t\t--pitch-secondary-channel-sat-scale: 0.1;\r\n\t\t\t--pitch-secondary-channel-lum: 40;\r\n\t\t\t--pitch-secondary-channel-lum-scale: 0.05;\r\n\t\t\t--pitch-primary-channel-hue: 64;\r\n\t\t\t--pitch-primary-channel-hue-scale: 6.1;\r\n\t\t\t--pitch-primary-channel-sat: 90;\r\n\t\t\t--pitch-primary-channel-sat-scale: 0.1;\r\n\t\t\t--pitch-primary-channel-lum: 67.5;\r\n\t\t\t--pitch-primary-channel-lum-scale: 0.05;\r\n\t\t\t--pitch-secondary-note-hue: 32;\r\n\t\t\t--pitch-secondary-note-hue-scale: 6.1;\r\n\t\t\t--pitch-secondary-note-sat: 87.9;\r\n\t\t\t--pitch-secondary-note-sat-scale: 0.1;\r\n\t\t\t--pitch-secondary-note-lum: 25;\r\n\t\t\t--pitch-secondary-note-lum-scale: 0.05;\r\n\t\t\t--pitch-primary-note-hue: 64;\r\n\t\t\t--pitch-primary-note-hue-scale: 6.1;\r\n\t\t\t--pitch-primary-note-sat: 90;\r\n\t\t\t--pitch-primary-note-sat-scale: 0.05;\r\n\t\t\t--pitch-primary-note-lum: 85.6;\r\n\t\t\t--pitch-primary-note-lum-scale: 0.025;\r\n\t\t\t--noise-secondary-channel-hue: 192;\r\n\t\t\t--noise-secondary-channel-hue-scale: 2;\r\n\t\t\t--noise-secondary-channel-sat: 45;\r\n\t\t\t--noise-secondary-channel-sat-scale: 0;\r\n\t\t\t--noise-secondary-channel-lum: 32;\r\n\t\t\t--noise-secondary-channel-lum-scale: 0;\r\n\t\t\t--noise-primary-channel-hue: 192;\r\n\t\t\t--noise-primary-channel-hue-scale: 2;\r\n\t\t\t--noise-primary-channel-sat: 33;\r\n\t\t\t--noise-primary-channel-sat-scale: 0;\r\n\t\t\t--noise-primary-channel-lum: 43.5;\r\n\t\t\t--noise-primary-channel-lum-scale: 0;\r\n\t\t\t--noise-secondary-note-hue: 160;\r\n\t\t\t--noise-secondary-note-hue-scale: 2;\r\n\t\t\t--noise-secondary-note-sat: 33.5;\r\n\t\t\t--noise-secondary-note-sat-scale: 0;\r\n\t\t\t--noise-secondary-note-lum: 45;\r\n\t\t\t--noise-secondary-note-lum-scale: 0;\r\n\t\t\t--noise-primary-note-hue: 192;\r\n\t\t\t--noise-primary-note-hue-scale: 2;\r\n\t\t\t--noise-primary-note-sat: 46.5;\r\n\t\t\t--noise-primary-note-sat-scale: 0;\r\n\t\t\t--noise-primary-note-lum: 74;\r\n\t\t\t--noise-primary-note-lum-scale: 0;\r\n\t\t\t--mod-secondary-channel-hue: 132;\r\n\t\t\t--mod-secondary-channel-hue-scale: 1.5;\r\n\t\t\t--mod-secondary-channel-sat: 88;\r\n\t\t\t--mod-secondary-channel-sat-scale: 0;\r\n\t\t\t--mod-secondary-channel-lum: 50;\r\n\t\t\t--mod-secondary-channel-lum-scale: 0;\r\n\t\t\t--mod-primary-channel-hue: 132;\r\n\t\t\t--mod-primary-channel-hue-scale: 1.5;\r\n\t\t\t--mod-primary-channel-sat: 96;\r\n\t\t\t--mod-primary-channel-sat-scale: 0;\r\n\t\t\t--mod-primary-channel-lum: 80;\r\n\t\t\t--mod-primary-channel-lum-scale: 0;\r\n\t\t\t--mod-secondary-note-hue: 100;\r\n\t\t\t--mod-secondary-note-hue-scale: 1.5;\r\n\t\t\t--mod-secondary-note-sat: 92;\r\n\t\t\t--mod-secondary-note-sat-scale: 0;\r\n\t\t\t--mod-secondary-note-lum: 45;\r\n\t\t\t--mod-secondary-note-lum-scale: 0;\r\n\t\t\t--mod-primary-note-hue: 132;\r\n\t\t\t--mod-primary-note-hue-scale: 1.5;\r\n\t\t\t--mod-primary-note-sat: 96;\r\n\t\t\t--mod-primary-note-sat-scale: 0;\r\n\t\t\t--mod-primary-note-lum: 85;\r\n\t\t\t--mod-primary-note-lum-scale: 0;\r\n\t\t\t--disabled-note-primary: #91879f;\r\n\t\t\t--disabled-note-secondary: #6a677a;\r\n\t\t}`,\r\n        \"portal\": `\r\n\t\t:root {\r\n\t\t\t--page-margin: #04081a;\r\n\t\t\t--editor-background: #04081a;\r\n\t\t\t--hover-preview: white;\r\n\t\t\t--playhead: white;\r\n\t\t\t--primary-text: white;\r\n\t\t\t--secondary-text: #999;\r\n\t\t\t--inverted-text: black;\r\n\t\t\t--text-selection: rgba(119,68,255,0.99);\r\n\t\t\t--box-selection-fill: rgb(0 72 181);\r\n\t\t\t--loop-accent: #44d4ff;\r\n\t\t\t--link-accent: #ffa500;\r\n\t\t\t--ui-widget-background: #212c4a;\r\n\t\t\t--ui-widget-focus: #121f42;\r\n\t\t\t--pitch-background: #1b263e;\r\n\t\t\t--tonic: #995d00;\r\n\t\t\t--fifth-note: #0898a1;\r\n\t\t\t--white-piano-key: #ffffff;\r\n\t\t\t--black-piano-key: #516d7a;\r\n\t\t\t--white-piano-key-text: #131200;\r\n\t\t\t--black-piano-key-text: #fff;\r\n\t\t\t--use-color-formula: false;\r\n\t\t\t--track-editor-bg-pitch: #213352;\r\n\t\t\t--track-editor-bg-pitch-dim: #152032;\r\n\t\t\t--track-editor-bg-noise: #403524;\r\n\t\t\t--track-editor-bg-noise-dim: #2a1f0e;\r\n\t\t\t--track-editor-bg-mod: #234;\r\n\t\t\t--track-editor-bg-mod-dim: #123;\r\n\t\t\t--multiplicative-mod-slider: #456;\r\n\t\t\t--overwriting-mod-slider: #654;\r\n\t\t\t--indicator-primary: #5490ff;\r\n\t\t\t--indicator-secondary: #444;\r\n\t\t\t--select2-opt-group: #585858;\r\n\t\t\t--input-box-outline: #333;\r\n\t\t\t--mute-button-normal: #3372ff;\r\n\t\t\t--mute-button-mod: #dd872f;\r\n\t\t\t--pitch1-secondary-channel: #0099A1;\r\n\t\t\t--pitch1-primary-channel: #77f7ff;\r\n\t\t\t--pitch1-secondary-note: #00BDC7;\r\n\t\t\t--pitch1-primary-note: #92F9FF;\r\n\t\t\t--pitch2-secondary-channel: #0083a1;\r\n\t\t\t--pitch2-primary-channel: #35d9ff;\r\n\t\t\t--pitch2-secondary-note: #0083a1;\r\n\t\t\t--pitch2-primary-note: #a4eeff;\r\n\t\t\t--pitch3-secondary-channel: #0074c7;\r\n\t\t\t--pitch3-primary-channel: #3caeff;\r\n\t\t\t--pitch3-secondary-note: #00477a;\r\n\t\t\t--pitch3-primary-note: #aadcff;\r\n\t\t\t--pitch4-secondary-channel: #0039a1;\r\n\t\t\t--pitch4-primary-channel: #2673ff;\r\n\t\t\t--pitch4-secondary-note: #001f56;\r\n\t\t\t--pitch4-primary-note: #9bbeff;\r\n\t\t\t--pitch5-secondary-channel: #31148b;\r\n\t\t\t--pitch5-primary-channel: #7042ff;\r\n\t\t\t--pitch5-secondary-note: #190656;\r\n\t\t\t--pitch5-primary-note: #b79fff;\r\n\t\t\t--pitch6-secondary-channel: #979934;\r\n\t\t\t--pitch6-primary-channel: #fbff2f;\r\n\t\t\t--pitch6-secondary-note: #5d5e0a;\r\n\t\t\t--pitch6-primary-note: #fdff9a;\r\n\t\t\t--pitch7-secondary-channel: #b78f00;\r\n\t\t\t--pitch7-primary-channel: #ffd747;\r\n\t\t\t--pitch7-secondary-note: #5e3d00;\r\n\t\t\t--pitch7-primary-note: #ffe381;\r\n\t\t\t--pitch8-secondary-channel: #9d6500;\r\n\t\t\t--pitch8-primary-channel: #ffa400;\r\n\t\t\t--pitch8-secondary-note: #583900;\r\n\t\t\t--pitch8-primary-note: #ffd07c;\r\n\t\t\t--pitch9-secondary-channel: #744203;\r\n\t\t\t--pitch9-primary-channel: #ff8e00;\r\n\t\t\t--pitch9-secondary-note: #502d00;\r\n\t\t\t--pitch9-primary-note: #ffcb89;\r\n\t\t\t--pitch10-secondary-channel: #a32d00;\r\n\t\t\t--pitch10-primary-channel: #ff885b;\r\n\t\t\t--pitch10-secondary-note: #521700;\r\n\t\t\t--pitch10-primary-note: #ffb397;\r\n\t\t\t--noise1-secondary-channel: #6e2210;\r\n\t\t\t--noise1-primary-channel: #ff4600;\r\n\t\t\t--noise1-secondary-note: #4c1a08;\r\n\t\t\t--noise1-primary-note: #ffc9b4;\r\n\t\t\t--noise2-secondary-channel: #6a3110;\r\n\t\t\t--noise2-primary-channel: #ff782a;\r\n\t\t\t--noise2-secondary-note: #4c1f05;\r\n\t\t\t--noise2-primary-note: #ffb488;\r\n\t\t\t--noise3-secondary-channel: #72460e;\r\n\t\t\t--noise3-primary-channel: #d9871f;\r\n\t\t\t--noise3-secondary-note: #442905;\r\n\t\t\t--noise3-primary-note: #ffdcae;\r\n\t\t\t--noise4-secondary-channel: #837a0f;\r\n\t\t\t--noise4-primary-channel: #f7ea55;\r\n\t\t\t--noise4-secondary-note: #605906;\r\n\t\t\t--noise4-primary-note: #fff9ab;\r\n\t\t\t--noise5-secondary-channel: #8c8f00;\r\n\t\t\t--noise5-primary-channel: #fdff90;\r\n\t\t\t--noise5-secondary-note: #606200;\r\n\t\t\t--noise5-primary-note: #feffbc;\r\n\t\t\t--mod1-secondary-channel: #561b97;\r\n\t\t\t--mod1-primary-channel: #aa66f5;\r\n\t\t\t--mod1-secondary-note: #30075c;\r\n\t\t\t--mod1-primary-note: #cd9fff;\r\n\t\t\t--mod2-secondary-channel: #5116df;\r\n\t\t\t--mod2-primary-channel: #6b2dff;\r\n\t\t\t--mod2-secondary-note: #36138b;\r\n\t\t\t--mod2-primary-note: #bea3ff;\r\n\t\t\t--mod3-secondary-channel: #2535a1;\r\n\t\t\t--mod3-primary-channel: #3f57ff;\r\n\t\t\t--mod3-secondary-note: #0e185c;\r\n\t\t\t--mod3-primary-note: #8494ff;\r\n\t\t\t--mod4-secondary-channel: #1b5883;\r\n\t\t\t--mod4-primary-channel: #5eb7f5;\r\n\t\t\t--mod4-secondary-note: #072f4a;\r\n\t\t\t--mod4-primary-note: #63beff;\r\n\t\t\t--mod-label-primary: #24293a;\r\n\t\t\t--mod-label-secondary-text: #454d4e;\r\n\t\t\t--mod-label-primary-text: #7bd4ff;\r\n\t\t\t--disabled-note-primary: #072f4a;\r\n\t\t\t--disabled-note-secondary: #6585a7;\r\n\t\t}`,\r\n        \"fusion\": `:root {\r\n\t\t\t--page-margin: #0c0306;\r\n\t\t\t--editor-background: #0c0306;\r\n\t\t\t--hover-preview: white;\r\n\t\t\t--playhead: white;\r\n\t\t\t--primary-text: #26d9cd;\r\n\t\t\t--secondary-text: #ff6666;\r\n\t\t\t--inverted-text: white;\r\n\t\t\t--text-selection: #ffffff;\r\n\t\t\t--box-selection-fill: #ff00004d;\r\n\t\t\t--loop-accent: #ff6666;\r\n\t\t\t--link-accent: white;\r\n\t\t\t--ui-widget-background: #232323;\r\n\t\t\t--ui-widget-focus: #303030;\r\n\t\t\t--pitch-background: hsl(61deg 100% 70% / 25%);\r\n\t\t\t--tonic: #66a3ff40;\r\n\t\t\t--fifth-note: #ff666640;\r\n\t\t\t--white-piano-key: #cdcdcd;\r\n\t\t\t--black-piano-key: #232323;\r\n\t\t\t--white-piano-key-text: #131200;\r\n\t\t\t--black-piano-key-text: #fff;\r\n\t\t\t--use-color-formula: false;\r\n\t\t\t--track-editor-bg-pitch: #404040bf;\r\n\t\t\t--track-editor-bg-pitch-dim: #151515;\r\n\t\t\t--track-editor-bg-noise: #404040bf;\r\n\t\t\t--track-editor-bg-noise-dim: #151515;\r\n\t\t\t--track-editor-bg-mod: #404040bf;\r\n\t\t\t--track-editor-bg-mod-dim: #151515;\r\n\t\t\t--multiplicative-mod-slider: #ef7692;\r\n\t\t\t--overwriting-mod-slider: #f43e69;\r\n\t\t\t--indicator-primary: #26d9cd;\r\n\t\t\t--indicator-secondary: hsl(176deg 70% 25%);\r\n\t\t\t--select2-opt-group: #232323;\r\n\t\t\t--input-box-outline: #141e34;\r\n\t\t\t--mute-button-normal: #26d9cd;\r\n\t\t\t--mute-button-mod: hsl(346deg 70% 50%);\r\n\t\t\t--pitch1-secondary-channel: #bf4040;\r\n\t\t\t--pitch1-primary-channel: #ff6666;\r\n\t\t\t--pitch1-secondary-note: #bf4040;\r\n\t\t\t--pitch1-primary-note: #ff6666;\r\n\t\t\t--pitch2-secondary-channel: #bf5b40;\r\n\t\t\t--pitch2-primary-channel: #ff8766;\r\n\t\t\t--pitch2-secondary-note: #bf5b40;\r\n\t\t\t--pitch2-primary-note: #ff8766;\r\n\t\t\t--pitch3-secondary-channel: #bf7940;\r\n\t\t\t--pitch3-primary-channel: #ffab66;\r\n\t\t\t--pitch3-secondary-note: #bf7940;\r\n\t\t\t--pitch3-primary-note: #ffab66;\r\n\t\t\t--pitch4-secondary-channel: #bf9b40;\r\n\t\t\t--pitch4-primary-channel: #ffd466;\r\n\t\t\t--pitch4-secondary-note: #bf9b40;\r\n\t\t\t--pitch4-primary-note: #ffd466;\r\n\t\t\t--pitch5-secondary-channel: #bdbf40;\r\n\t\t\t--pitch5-primary-channel: #fcff66;\r\n\t\t\t--pitch5-secondary-note: #bdbf40;\r\n\t\t\t--pitch5-primary-note: #fcff66;\r\n\t\t\t--pitch6-secondary-channel: #9dbf40;\r\n\t\t\t--pitch6-primary-channel: #d6ff66;\r\n\t\t\t--pitch6-secondary-note: #9dbf40;\r\n\t\t\t--pitch6-primary-note: #d6ff66;\r\n\t\t\t--pitch7-secondary-channel: #9dbf40;\r\n\t\t\t--pitch7-primary-channel: #fcff66;\r\n\t\t\t--pitch7-secondary-note: #9dbf40;\r\n\t\t\t--pitch7-primary-note: #fcff66;\r\n\t\t\t--pitch8-secondary-channel: #bf9b40;\r\n\t\t\t--pitch8-primary-channel: #ffd466;\r\n\t\t\t--pitch8-secondary-note: #bf9b40;\r\n\t\t\t--pitch8-primary-note: #ffd466;\r\n\t\t\t--pitch9-secondary-channel: #bf5b40;\r\n\t\t\t--pitch9-primary-channel: #ffab66;\r\n\t\t\t--pitch9-secondary-note: #bf5b40;\r\n\t\t\t--pitch9-primary-note: #ffab66;\r\n\t\t\t--pitch10-secondary-channel: #d15a1f;\r\n\t\t\t--pitch10-primary-channel: #ff8766;\r\n\t\t\t--pitch10-secondary-note: #d15a1f;\r\n\t\t\t--pitch10-primary-note: #ff8766;\r\n\t\t\t--noise1-secondary-channel: #4073bf;\r\n\t\t\t--noise1-primary-channel: #66a3ff;\r\n\t\t\t--noise1-secondary-note: #4073bf;\r\n\t\t\t--noise1-primary-note: #66a3ff;\r\n\t\t\t--noise2-secondary-channel: #405dbf;\r\n\t\t\t--noise2-primary-channel: #668aff;\r\n\t\t\t--noise2-secondary-note: #405dbf;\r\n\t\t\t--noise2-primary-note: #668aff;\r\n\t\t\t--noise3-secondary-channel: #4f40bf;\r\n\t\t\t--noise3-primary-channel: #7866ff;\r\n\t\t\t--noise3-secondary-note: #4f40bf;\r\n\t\t\t--noise3-primary-note: #7866ff;\r\n\t\t\t--noise4-secondary-channel: #8840bf;\r\n\t\t\t--noise4-primary-channel: #bd66ff;\r\n\t\t\t--noise4-secondary-note: #8840bf;\r\n\t\t\t--noise4-primary-note: #bd66ff;\r\n\t\t\t--noise5-secondary-channel: #bf40b5;\r\n\t\t\t--noise5-primary-channel: #ff66f2;\r\n\t\t\t--noise5-secondary-note: #bf40b5;\r\n\t\t\t--noise5-primary-note: #ff66f2;\r\n\t\t\t--mod1-secondary-channel: #cc6666;\r\n\t\t\t--mod1-primary-channel: #ff9999;\r\n\t\t\t--mod1-secondary-note: #cc6666;\r\n\t\t\t--mod1-primary-note: #ff9999;\r\n\t\t\t--mod2-secondary-channel: #cc7766;\r\n\t\t\t--mod2-primary-channel: #ffaa99;\r\n\t\t\t--mod2-secondary-note: #bf5540;\r\n\t\t\t--mod2-primary-note: #ffaa99;\r\n\t\t\t--mod3-secondary-channel: #cc8866;\r\n\t\t\t--mod3-primary-channel: #ffbb99;\r\n\t\t\t--mod3-secondary-note: #cc8866;\r\n\t\t\t--mod3-primary-note: #ffbb99;\r\n\t\t\t--mod4-secondary-channel: #cc9966;\r\n\t\t\t--mod4-primary-channel: #ffcc99;\r\n\t\t\t--mod4-secondary-note: #cc9966;\r\n\t\t\t--mod4-primary-note: #ffcc99;\r\n\t\t\t--mod-label-primary: #999;\r\n\t\t\t--mod-label-secondary-text: #333;\r\n\t\t\t--mod-label-primary-text: black;\r\n\t\t\t--disabled-note-primary: #696969;\r\n\t\t\t--disabled-note-secondary: #232323;\r\n\t\t}`,\r\n        \"inverse\": `:root {\r\n\t\t\t--page-margin: #c4c8e3;\r\n\t\t\t--editor-background: #c4c8e3;\r\n\t\t\t--hover-preview: #000000;\r\n\t\t\t--playhead: #243953;\r\n\t\t\t--primary-text: black;\r\n\t\t\t--secondary-text: #855b95;\r\n\t\t\t--inverted-text: black;\r\n\t\t\t--text-selection: rgb(132 125 255);\r\n\t\t\t--box-selection-fill: rgb(174 109 73 / 65%);\r\n\t\t\t--loop-accent: #EC897D;\r\n\t\t\t--link-accent: #4e00c8;\r\n\t\t\t--ui-widget-background: #e7e7ff;\r\n\t\t\t--ui-widget-focus: #d0d3e9;\r\n\t\t\t--pitch-background: #ffffff;\r\n\t\t\t--tonic: #bbbbbb;\r\n\t\t\t--fifth-note: #dcdcdc;\r\n\t\t\t--white-piano-key: #ffffff;\r\n\t\t\t--black-piano-key: #615f66;\r\n\t\t\t--white-piano-key-text: #131200;\r\n\t\t\t--black-piano-key-text: #fff;\r\n\t\t\t--use-color-formula: false;\r\n\t\t\t--track-editor-bg-pitch: #e9ebff;\r\n\t\t\t--track-editor-bg-pitch-dim: #e9ebff;\r\n\t\t\t--track-editor-bg-noise: #fdf2fe;\r\n\t\t\t--track-editor-bg-noise-dim: #fdf2fe;\r\n\t\t\t--track-editor-bg-mod: #dbdefe;\r\n\t\t\t--track-editor-bg-mod-dim: #dbdefe;\r\n\t\t\t--multiplicative-mod-slider: #6900b3;\r\n\t\t\t--overwriting-mod-slider: #004b9d;\r\n\t\t\t--indicator-primary: #ff633d;\r\n\t\t\t--indicator-secondary: #933822;\r\n\t\t\t--select2-opt-group: #e7e7ff;\r\n\t\t\t--input-box-outline: #e7e7ff;\r\n\t\t\t--mute-button-normal: #0072ef;\r\n\t\t\t--mute-button-mod: #002e67;\r\n\t\t\t--pitch1-secondary-channel: #b77d6e;\r\n\t\t\t--pitch1-primary-channel: #ff9d85;\r\n\t\t\t--pitch1-secondary-note: #b77d6e;\r\n\t\t\t--pitch1-primary-note: #ff9d85;\r\n\t\t\t--pitch2-secondary-channel: #be8821;\r\n\t\t\t--pitch2-primary-channel: #FFAF12;\r\n\t\t\t--pitch2-secondary-note: #be8821;\r\n\t\t\t--pitch2-primary-note: #FFAF12;\r\n\t\t\t--pitch3-secondary-channel: #3a62a4;\r\n\t\t\t--pitch3-primary-channel: #528ae6;\r\n\t\t\t--pitch3-secondary-note: #3a62a4;\r\n\t\t\t--pitch3-primary-note: #528ae6;\r\n\t\t\t--pitch4-secondary-channel: #3e8d78;\r\n\t\t\t--pitch4-primary-channel: #4EC5A7;\r\n\t\t\t--pitch4-secondary-note: #3e8d78;\r\n\t\t\t--pitch4-primary-note: #4EC5A7;\r\n\t\t\t--pitch5-secondary-channel: #84906d;\r\n\t\t\t--pitch5-primary-channel: #aabf84;\r\n\t\t\t--pitch5-secondary-note: #84906d;\r\n\t\t\t--pitch5-primary-note: #aabf84;\r\n\t\t\t--pitch6-secondary-channel: #bd6345;\r\n\t\t\t--pitch6-primary-channel: #e59a81;\r\n\t\t\t--pitch6-secondary-note: #bd6345;\r\n\t\t\t--pitch6-primary-note: #e59a81;\r\n\t\t\t--pitch7-secondary-channel: #aa592f;\r\n\t\t\t--pitch7-primary-channel: #FE813E;\r\n\t\t\t--pitch7-secondary-note: #aa592f;\r\n\t\t\t--pitch7-primary-note: #FE813E;\r\n\t\t\t--pitch8-secondary-channel: #b2a171;\r\n\t\t\t--pitch8-primary-channel: #ffd76d;\r\n\t\t\t--pitch8-secondary-note: #b2a171;\r\n\t\t\t--pitch8-primary-note: #ffd76d;\r\n\t\t\t--pitch9-secondary-channel: #4f6177;\r\n\t\t\t--pitch9-primary-channel: #798FA7;\r\n\t\t\t--pitch9-secondary-note: #4f6177;\r\n\t\t\t--pitch9-primary-note: #798FA7;\r\n\t\t\t--pitch10-secondary-channel: #165162;\r\n\t\t\t--pitch10-primary-channel: #107895;\r\n\t\t\t--pitch10-secondary-note: #165162;\r\n\t\t\t--pitch10-primary-note: #107895;\r\n\t\t\t--noise1-secondary-channel: #71617C;\r\n\t\t\t--noise1-primary-channel: #977da9;\r\n\t\t\t--noise1-secondary-note: #71617C;\r\n\t\t\t--noise1-primary-note: #977da9;\r\n\t\t\t--noise2-secondary-channel: #4a4c5b;\r\n\t\t\t--noise2-primary-channel: #707591;\r\n\t\t\t--noise2-secondary-note: #4a4c5b;\r\n\t\t\t--noise2-primary-note: #707591;\r\n\t\t\t--noise3-secondary-channel: #817c7b;\r\n\t\t\t--noise3-primary-channel: #A19D9C;\r\n\t\t\t--noise3-secondary-note: #817c7b;\r\n\t\t\t--noise3-primary-note: #A19D9C;\r\n\t\t\t--noise4-secondary-channel: #ab847b;\r\n\t\t\t--noise4-primary-channel: #EAAC9D;\r\n\t\t\t--noise4-secondary-note: #ab847b;\r\n\t\t\t--noise4-primary-note: #EAAC9D;\r\n\t\t\t--noise5-secondary-channel: #B49D74;\r\n\t\t\t--noise5-primary-channel: #dec69b;\r\n\t\t\t--noise5-secondary-note: #B49D74;\r\n\t\t\t--noise5-primary-note: #dec69b;\r\n\t\t\t--mod1-secondary-channel: #722124;\r\n\t\t\t--mod1-primary-channel: #D13A41;\r\n\t\t\t--mod1-secondary-note: #722124;\r\n\t\t\t--mod1-primary-note: #D13A41;\r\n\t\t\t--mod2-secondary-channel: #213657;\r\n\t\t\t--mod2-primary-channel: #34558B;\r\n\t\t\t--mod2-secondary-note: #213657;\r\n\t\t\t--mod2-primary-note: #34558B;\r\n\t\t\t--mod3-secondary-channel: #555D46;\r\n\t\t\t--mod3-primary-channel: #848f6d;\r\n\t\t\t--mod3-secondary-note: #555D46;\r\n\t\t\t--mod3-primary-note: #848f6d;\r\n\t\t\t--mod4-secondary-channel: #71617C;\r\n\t\t\t--mod4-primary-channel: #a68ab9;\r\n\t\t\t--mod4-secondary-note: #71617C;\r\n\t\t\t--mod4-primary-note: #a68ab9;\r\n\t\t\t--mod-label-primary: #e9e9e9;\r\n\t\t\t--mod-label-secondary-text: #707070;\r\n\t\t\t--mod-label-primary-text: black;\r\n\t\t\t--disabled-note-primary: #959595;\r\n\t\t\t--disabled-note-secondary: #6e6e6e;\r\n\t\t\t}`,\r\n        \"nebula\": `\r\n\t\t:root {\r\n\t\t\t--page-margin: #040410;\r\n\t\t\t--editor-background: #150e1f;\r\n\t\t\t--hover-preview: white;\r\n\t\t\t--playhead: rgba(255, 255, 255, 0.9);\r\n\t\t\t--primary-text: white;\r\n\t\t\t--secondary-text: #8C849A;\r\n\t\t\t--inverted-text: black;\r\n\t\t\t--text-selection: rgba(141,79,201,0.99);\r\n\t\t\t--box-selection-fill: #311E44;\r\n\t\t\t--loop-accent: #CC688C;\r\n\t\t\t--link-accent: #817DC9;\r\n\t\t\t--ui-widget-background: #44394F;\r\n\t\t\t--ui-widget-focus: #7A6386;\r\n\t\t\t--pitch-background: #393e4f40;\r\n\t\t\t--tonic: #7D5C9EC0;\r\n\t\t\t--fifth-note: #ab77bd50;\r\n\t\t\t--white-piano-key: #EEEEEE;\r\n\t\t\t--black-piano-key: #5F5566;\r\n\t\t\t--white-piano-key-text: #131200;\r\n\t\t\t--black-piano-key-text: #fff;\r\n\t\t\t--use-color-formula: true;\r\n\t\t\t--track-editor-bg-pitch: #46374C;\r\n\t\t\t--track-editor-bg-pitch-dim: #1F1C2850;\r\n\t\t\t--track-editor-bg-noise: #3D353B;\r\n\t\t\t--track-editor-bg-noise-dim: #16131550;\r\n\t\t\t--track-editor-bg-mod: #623F4C;\r\n\t\t\t--track-editor-bg-mod-dim: #361A2450;\r\n\t\t\t--multiplicative-mod-slider: #9F6E6A;\r\n\t\t\t--overwriting-mod-slider: #A664B5;\r\n\t\t\t--indicator-primary: #CC6B8E;\r\n\t\t\t--indicator-secondary: #44394F;\r\n\t\t\t--select2-opt-group: #6A576F;\r\n\t\t\t--input-box-outline: #222;\r\n\t\t\t--mute-button-normal: #BF91DC;\r\n\t\t\t--mute-button-mod: #DC8C9A;\r\n\t\t\t--mod-label-primary: #3A2840;\r\n\t\t\t--mod-label-secondary-text: #62485E;\r\n\t\t\t--mod-label-primary-text: white;\r\n\t\t\t--pitch-secondary-channel-hue: -96;\r\n\t\t\t--pitch-secondary-channel-hue-scale: 4.2;\r\n\t\t\t--pitch-secondary-channel-sat: 50.3;\r\n\t\t\t--pitch-secondary-channel-sat-scale: 0.1;\r\n\t\t\t--pitch-secondary-channel-lum: 40;\r\n\t\t\t--pitch-secondary-channel-lum-scale: 0.05;\r\n\t\t\t--pitch-primary-channel-hue: -96;\r\n\t\t\t--pitch-primary-channel-hue-scale: 4.2;\r\n\t\t\t--pitch-primary-channel-sat: 70;\r\n\t\t\t--pitch-primary-channel-sat-scale: 0.1;\r\n\t\t\t--pitch-primary-channel-lum: 67.5;\r\n\t\t\t--pitch-primary-channel-lum-scale: 0.05;\r\n\t\t\t--pitch-secondary-note-hue: -96;\r\n\t\t\t--pitch-secondary-note-hue-scale: 4.2;\r\n\t\t\t--pitch-secondary-note-sat: 70.9;\r\n\t\t\t--pitch-secondary-note-sat-scale: 0.1;\r\n\t\t\t--pitch-secondary-note-lum: 25;\r\n\t\t\t--pitch-secondary-note-lum-scale: 0.05;\r\n\t\t\t--pitch-primary-note-hue: -96;\r\n\t\t\t--pitch-primary-note-hue-scale: 4.2;\r\n\t\t\t--pitch-primary-note-sat: 90;\r\n\t\t\t--pitch-primary-note-sat-scale: 0.05;\r\n\t\t\t--pitch-primary-note-lum: 85.6;\r\n\t\t\t--pitch-primary-note-lum-scale: 0.025;\r\n\t\t\t--noise-secondary-channel-hue: 16;\r\n\t\t\t--noise-secondary-channel-hue-scale: -1.33;\r\n\t\t\t--noise-secondary-channel-sat: 25;\r\n\t\t\t--noise-secondary-channel-sat-scale: 0;\r\n\t\t\t--noise-secondary-channel-lum: 42;\r\n\t\t\t--noise-secondary-channel-lum-scale: 0;\r\n\t\t\t--noise-primary-channel-hue: 16;\r\n\t\t\t--noise-primary-channel-hue-scale: -1.33;\r\n\t\t\t--noise-primary-channel-sat: 33;\r\n\t\t\t--noise-primary-channel-sat-scale: 0;\r\n\t\t\t--noise-primary-channel-lum: 63.5;\r\n\t\t\t--noise-primary-channel-lum-scale: 0;\r\n\t\t\t--noise-secondary-note-hue: 12;\r\n\t\t\t--noise-secondary-note-hue-scale: -1.33;\r\n\t\t\t--noise-secondary-note-sat: 33.5;\r\n\t\t\t--noise-secondary-note-sat-scale: 0;\r\n\t\t\t--noise-secondary-note-lum: 55;\r\n\t\t\t--noise-secondary-note-lum-scale: 0;\r\n\t\t\t--noise-primary-note-hue: 12;\r\n\t\t\t--noise-primary-note-hue-scale: -1.33;\r\n\t\t\t--noise-primary-note-sat: 46.5;\r\n\t\t\t--noise-primary-note-sat-scale: 0;\r\n\t\t\t--noise-primary-note-lum: 74;\r\n\t\t\t--noise-primary-note-lum-scale: 0;\r\n\t\t\t--mod-secondary-channel-hue: 12;\r\n\t\t\t--mod-secondary-channel-hue-scale: -.75;\r\n\t\t\t--mod-secondary-channel-sat: 50;\r\n\t\t\t--mod-secondary-channel-sat-scale: 0;\r\n\t\t\t--mod-secondary-channel-lum: 50;\r\n\t\t\t--mod-secondary-channel-lum-scale: 0;\r\n\t\t\t--mod-primary-channel-hue: 12;\r\n\t\t\t--mod-primary-channel-hue-scale: -.75;\r\n\t\t\t--mod-primary-channel-sat: 70;\r\n\t\t\t--mod-primary-channel-sat-scale: 0;\r\n\t\t\t--mod-primary-channel-lum: 80;\r\n\t\t\t--mod-primary-channel-lum-scale: 0;\r\n\t\t\t--mod-secondary-note-hue: 12;\r\n\t\t\t--mod-secondary-note-hue-scale: -.75;\r\n\t\t\t--mod-secondary-note-sat: 75;\r\n\t\t\t--mod-secondary-note-sat-scale: 0;\r\n\t\t\t--mod-secondary-note-lum: 45;\r\n\t\t\t--mod-secondary-note-lum-scale: 0;\r\n\t\t\t--mod-primary-note-hue: 12;\r\n\t\t\t--mod-primary-note-hue-scale: -.75;\r\n\t\t\t--mod-primary-note-sat: 85;\r\n\t\t\t--mod-primary-note-sat-scale: 0;\r\n\t\t\t--mod-primary-note-lum: 85;\r\n\t\t\t--mod-primary-note-lum-scale: 0;\r\n\t\t\t--disabled-note-primary: #aaa;\r\n\t\t\t--disabled-note-secondary: #666;\r\n\t\t}`,\r\n        \"roe light\": `\r\n\t\t:root {\r\n\t\t\t--page-margin: #fff5f5;\r\n\t\t\t--editor-background: #fff5f5;\r\n\t\t\t--hover-preview: #0e8bf1;\r\n\t\t\t--playhead: 000;\r\n\t\t\t--primary-text: #0e8bf1;\r\n\t\t\t--secondary-text: #f10e0e;\r\n\t\t\t--inverted-text: white;\r\n\t\t\t--text-selection: #ff4444fc;\r\n\t\t\t--box-selection-fill: #ff00004d;\r\n\t\t\t--loop-accent: #9a75ff;\r\n\t\t\t--link-accent: #ff7070;\r\n\t\t\t--ui-widget-background: #bdc9e5;\r\n\t\t\t--ui-widget-focus: #a3b7e5;\r\n\t\t\t--pitch-background: #d0c7db;\r\n\t\t\t--tonic: #bed3e4;\r\n\t\t\t--fifth-note: #e7c6c6;\r\n\t\t\t--white-piano-key: #cdcdcd;\r\n\t\t\t--black-piano-key: #232323;\r\n\t\t\t--white-piano-key-text: #131200;\r\n\t\t\t--black-piano-key-text: #fff;\r\n\t\t\t--use-color-formula: false;\r\n\t\t\t--track-editor-bg-pitch: #e5e1ea;\r\n\t\t\t--track-editor-bg-pitch-dim: #cbc4d4;\r\n\t\t\t--track-editor-bg-noise: #e0ddee;\r\n\t\t\t--track-editor-bg-noise-dim: #c1bade;\r\n\t\t\t--track-editor-bg-mod: #d8e6f3;\r\n\t\t\t--track-editor-bg-mod-dim: #b1cce7;\r\n\t\t\t--multiplicative-mod-slider: #8097cb;\r\n\t\t\t--overwriting-mod-slider: #8097cb;\r\n\t\t\t--indicator-primary: #FF2A2A;\r\n\t\t\t--indicator-secondary: #92a6d3;\r\n\t\t\t--select2-opt-group: #b6c4e2;\r\n\t\t\t--input-box-outline: #bdc9e5;\r\n\t\t\t--mute-button-normal: #66baff;\r\n\t\t\t--mute-button-mod: #1a98ff;\r\n\t\t\t--pitch1-secondary-channel: #273c90;\r\n\t\t\t--pitch1-primary-channel: #476BFF;\r\n\t\t\t--pitch1-secondary-note: #273c90;\r\n\t\t\t--pitch1-primary-note: #476BFF;\r\n\t\t\t--pitch2-secondary-channel: #3a3898;\r\n\t\t\t--pitch2-primary-channel: #625FFB;\r\n\t\t\t--pitch2-secondary-note: #3a3898;\r\n\t\t\t--pitch2-primary-note: #625FFB;\r\n\t\t\t--pitch3-secondary-channel: #542780;\r\n\t\t\t--pitch3-primary-channel: #9C49EC;\r\n\t\t\t--pitch3-secondary-note: #542780;\r\n\t\t\t--pitch3-primary-note: #9C49EC;\r\n\t\t\t--pitch4-secondary-channel: #84225d;\r\n\t\t\t--pitch4-primary-channel: #fd3fb1;\r\n\t\t\t--pitch4-secondary-note: #84225d;\r\n\t\t\t--pitch4-primary-note: #fd3fb1;\r\n\t\t\t--pitch5-secondary-channel: #8d2323;\r\n\t\t\t--pitch5-primary-channel: #ff3f3f;\r\n\t\t\t--pitch5-secondary-note: #8d2323;\r\n\t\t\t--pitch5-primary-note: #ff3f3f;\r\n\t\t\t--pitch6-secondary-channel: #84225d;\r\n\t\t\t--pitch6-primary-channel: #fd3fb1;\r\n\t\t\t--pitch6-secondary-note: #84225d;\r\n\t\t\t--pitch6-primary-note: #fd3fb1;\r\n\t\t\t--pitch7-secondary-channel: #542780;\r\n\t\t\t--pitch7-primary-channel: #9C49EC;\r\n\t\t\t--pitch7-secondary-note: #542780;\r\n\t\t\t--pitch7-primary-note: #9C49EC;\r\n\t\t\t--pitch8-secondary-channel: #3a3898;\r\n\t\t\t--pitch8-primary-channel: #625FFB;\r\n\t\t\t--pitch8-secondary-note: #3a3898;\r\n\t\t\t--pitch8-primary-note: #625FFB;\r\n\t\t\t--pitch9-secondary-channel: #273c90;\r\n\t\t\t--pitch9-primary-channel: #476BFF;\r\n\t\t\t--pitch9-secondary-note: #273c90;\r\n\t\t\t--pitch9-primary-note: #476BFF;\r\n\t\t\t--pitch10-secondary-channel: #165a93;\r\n\t\t\t--pitch10-primary-channel: #299EFF;\r\n\t\t\t--pitch10-secondary-note: #165a93;\r\n\t\t\t--pitch10-primary-note: #299EFF;\r\n\t\t\t--noise1-secondary-channel: #336bdb;\r\n\t\t\t--noise1-primary-channel: #4281FF;\r\n\t\t\t--noise1-secondary-note: #336bdb;\r\n\t\t\t--noise1-primary-note: #4281FF;\r\n\t\t\t--noise2-secondary-channel: #5e38dc;\r\n\t\t\t--noise2-primary-channel: #7347FF;\r\n\t\t\t--noise2-secondary-note: #5e38dc;\r\n\t\t\t--noise2-primary-note: #7347FF;\r\n\t\t\t--noise3-secondary-channel: #7d3097;\r\n\t\t\t--noise3-primary-channel: #9F3CBF;\r\n\t\t\t--noise3-secondary-note: #7d3097;\r\n\t\t\t--noise3-primary-note: #9F3CBF;\r\n\t\t\t--noise4-secondary-channel: #ad2559;\r\n\t\t\t--noise4-primary-channel: #D3326F;\r\n\t\t\t--noise4-secondary-note: #ad2559;\r\n\t\t\t--noise4-primary-note: #D3326F;\r\n\t\t\t--noise5-secondary-channel: #d02525;\r\n\t\t\t--noise5-primary-channel: #FF2A2A;\r\n\t\t\t--noise5-secondary-note: #d02525;\r\n\t\t\t--noise5-primary-note: #FF2A2A;\r\n\t\t\t--mod1-secondary-channel: #35415a;\r\n\t\t\t--mod1-primary-channel: #47587a;\r\n\t\t\t--mod1-secondary-note: #35415a;\r\n\t\t\t--mod1-primary-note: #47587a;\r\n\t\t\t--mod2-secondary-channel: #5a5374;\r\n\t\t\t--mod2-primary-channel: #716791;\r\n\t\t\t--mod2-secondary-note: #5a5374;\r\n\t\t\t--mod2-primary-note: #716791;\r\n\t\t\t--mod3-secondary-channel: #53385c;\r\n\t\t\t--mod3-primary-channel: #6f4c7b;\r\n\t\t\t--mod3-secondary-note: #53385c;\r\n\t\t\t--mod3-primary-note: #6f4c7b;\r\n\t\t\t--mod4-secondary-channel: #7e4e60;\r\n\t\t\t--mod4-primary-channel: #9e6279;\r\n\t\t\t--mod4-secondary-note: #7e4e60;\r\n\t\t\t--mod4-primary-note: #9e6279;\r\n\t\t\t--mod-label-primary: #d0c7db;\r\n\t\t\t--mod-label-secondary-text: #cb3434;\r\n\t\t\t--mod-label-primary-text: black;\r\n\t\t\t--disabled-note-primary: #616161;\r\n\t\t\t--disabled-note-secondary: #474747;\r\n\t\t}`,\r\n        \"energized\": `\r\n\t\t:root {\r\n\t\t\t--page-margin: #000a08;\r\n\t\t\t--editor-background: #000a08;\r\n\t\t\t--hover-preview: #ffffcc;\r\n\t\t\t--playhead: #ccfff5;\r\n\t\t\t--primary-text: white;\r\n\t\t\t--secondary-text: #d9d98c;\r\n\t\t\t--inverted-text: black;\r\n\t\t\t--text-selection: #ffff6659;\r\n\t\t\t--box-selection-fill: #ffffff33;\r\n\t\t\t--loop-accent: #ffff00;\r\n\t\t\t--link-accent: #00ffcc;\r\n\t\t\t--ui-widget-background: #141f1d;\r\n\t\t\t--ui-widget-focus: #24423d;\r\n\t\t\t--pitch-background: #001410;\r\n\t\t\t--tonic: #00241d;\r\n\t\t\t--fifth-note: #ffff6633;\r\n\t\t\t--white-piano-key: #66998f;\r\n\t\t\t--black-piano-key: #141f1d;\r\n\t\t\t--use-color-formula: false;\r\n\t\t\t--track-editor-bg-pitch: #66998f40;\r\n\t\t\t--track-editor-bg-pitch-dim: #293d3940;\r\n\t\t\t--track-editor-bg-noise: #66998f40;\r\n\t\t\t--track-editor-bg-noise-dim: #293d3940;\r\n\t\t\t--track-editor-bg-mod: #99996640;\r\n\t\t\t--track-editor-bg-mod-dim: #3d3d2940;\r\n\t\t\t--multiplicative-mod-slider: #ffff00;\r\n\t\t\t--overwriting-mod-slider: #00ffcc;\r\n\t\t\t--indicator-primary: #ffff00;\r\n\t\t\t--indicator-secondary: #141f1d;\r\n\t\t\t--select2-opt-group: #1b312e;\r\n\t\t\t--input-box-outline: #141f1d;\r\n\t\t\t--mute-button-normal: #00ffcc;\r\n\t\t\t--mute-button-mod: #00997a;\r\n\t\t\t--pitch1-secondary-channel: #bfbf40;\r\n\t\t\t--pitch1-primary-channel: #ffff64;\r\n\t\t\t--pitch1-secondary-note: #bfbf40;\r\n\t\t\t--pitch1-primary-note: #ffff64;\r\n\t\t\t--pitch2-secondary-channel: #a2bf40;\r\n\t\t\t--pitch2-primary-channel: #e0ff7d;\r\n\t\t\t--pitch2-secondary-note: #a2bf40;\r\n\t\t\t--pitch2-primary-note: #e0ff7d;\r\n\t\t\t--pitch3-secondary-channel: #75bf40;\r\n\t\t\t--pitch3-primary-channel: #c1ff96;\r\n\t\t\t--pitch3-secondary-note: #75bf40;\r\n\t\t\t--pitch3-primary-note: #c1ff96;\r\n\t\t\t--pitch4-secondary-channel: #40bf51;\r\n\t\t\t--pitch4-primary-channel: #a2ffaf;\r\n\t\t\t--pitch4-secondary-note: #40bf51;\r\n\t\t\t--pitch4-primary-note: #a2ffaf;\r\n\t\t\t--pitch5-secondary-channel: #40bf86;\r\n\t\t\t--pitch5-primary-channel: #83ffc8;\r\n\t\t\t--pitch5-secondary-note: #40bf86;\r\n\t\t\t--pitch5-primary-note: #83ffc8;\r\n\t\t\t--pitch6-secondary-channel: #40bfa6;\r\n\t\t\t--pitch6-primary-channel: #64ffe1;\r\n\t\t\t--pitch6-secondary-note: #40bfa6;\r\n\t\t\t--pitch6-primary-note: #64ffe1;\r\n\t\t\t--pitch7-secondary-channel: #40bf86;\r\n\t\t\t--pitch7-primary-channel: #83ffc8;\r\n\t\t\t--pitch7-secondary-note: #40bf86;\r\n\t\t\t--pitch7-primary-note: #83ffc8;\r\n\t\t\t--pitch8-secondary-channel: #40bf51;\r\n\t\t\t--pitch8-primary-channel: #a2ffaf;\r\n\t\t\t--pitch8-secondary-note: #40bf51;\r\n\t\t\t--pitch8-primary-note: #a2ffaf;\r\n\t\t\t--pitch9-secondary-channel: #75bf40;\r\n\t\t\t--pitch9-primary-channel: #c1ff96;\r\n\t\t\t--pitch9-secondary-note: #75bf40;\r\n\t\t\t--pitch9-primary-note: #c1ff96;\r\n\t\t\t--pitch10-secondary-channel: #a2bf40;\r\n\t\t\t--pitch10-primary-channel: #e0ff7d;\r\n\t\t\t--pitch10-secondary-note: #a2bf40;\r\n\t\t\t--pitch10-primary-note: #e0ff7d;\r\n\t\t\t--noise1-secondary-channel: #a6a659;\r\n\t\t\t--noise1-primary-channel: #ffffcc;\r\n\t\t\t--noise1-secondary-note: #a6a659;\r\n\t\t\t--noise1-primary-note: #ffffcc;\r\n\t\t\t--noise2-secondary-channel: #94a659;\r\n\t\t\t--noise2-primary-channel: #f3ffcc;\r\n\t\t\t--noise2-secondary-note: #94a659;\r\n\t\t\t--noise2-primary-note: #f3ffcc;\r\n\t\t\t--noise3-secondary-channel: #79a659;\r\n\t\t\t--noise3-primary-channel: #e1ffcc;\r\n\t\t\t--noise3-secondary-note: #79a659;\r\n\t\t\t--noise3-primary-note: #e1ffcc;\r\n\t\t\t--noise4-secondary-channel: #94a659;\r\n\t\t\t--noise4-primary-channel: #f3ffcc;\r\n\t\t\t--noise4-secondary-note: #94a659;\r\n\t\t\t--noise4-primary-note: #f3ffcc;\r\n\t\t\t--noise5-secondary-channel: #a6a659;\r\n\t\t\t--noise5-primary-channel: #ffffcc;\r\n\t\t\t--noise5-secondary-note: #a6a659;\r\n\t\t\t--noise5-primary-note: #ffffcc;\r\n\t\t\t--mod1-secondary-channel: #a3a329;\r\n\t\t\t--mod1-primary-channel: #ffff00;\r\n\t\t\t--mod1-secondary-note: #a3a329;\r\n\t\t\t--mod1-primary-note: #ffff00;\r\n\t\t\t--mod2-secondary-channel: #a38529;\r\n\t\t\t--mod2-primary-channel: #ffbf00;\r\n\t\t\t--mod2-secondary-note: #a38529;\r\n\t\t\t--mod2-primary-note: #ffbf00;\r\n\t\t\t--mod3-secondary-channel: #a36629;\r\n\t\t\t--mod3-primary-channel: #ff7f00;\r\n\t\t\t--mod3-secondary-note: #a36629;\r\n\t\t\t--mod3-primary-note: #ff7f00;\r\n\t\t\t--mod4-secondary-channel: #a38529;\r\n\t\t\t--mod4-primary-channel: #ffbf00;\r\n\t\t\t--mod4-secondary-note: #a38529;\r\n\t\t\t--mod4-primary-note: #ffbf00;\r\n\t\t\t--mod-label-primary: #141f1d;\r\n\t\t\t--mod-label-secondary-text: #d9d98c;\r\n\t\t\t--mod-label-primary-text: white;\r\n\t\t\t--disabled-note-primary: #808080;\r\n\t\t\t--disabled-note-secondary: #666666;\r\n\t\t}`,\r\n        \"neapolitan\": `:root {\r\n\t\t\t--page-margin: #120807;\r\n\t\t\t--editor-background: #120807;\r\n\t\t\t--hover-preview: #e79a82;\r\n\t\t\t--playhead: #e79a82;\r\n\t\t\t--primary-text: #decdbf;\r\n\t\t\t--secondary-text: #fa99bb;\r\n\t\t\t--inverted-text: black;\r\n\t\t\t--text-selection: #990036;\r\n\t\t\t--box-selection-fill: rgba(255,255,255,0.2);\r\n\t\t\t--loop-accent: #f6377a;\r\n\t\t\t--link-accent: #f6377a;\r\n\t\t\t--ui-widget-background: #24160f;\r\n\t\t\t--ui-widget-focus: #362217;\r\n\t\t\t--pitch-background: #1e1106;\r\n\t\t\t--tonic: #382414;\r\n\t\t\t--fifth-note: #41240c;\r\n\t\t\t--white-piano-key: #e1c5b7;\r\n\t\t\t--black-piano-key: #482c1e;\r\n\t\t\t--use-color-formula: false;\r\n\t\t\t--track-editor-bg-pitch: #4d2a19;\r\n\t\t\t--track-editor-bg-pitch-dim: #27150c;\r\n\t\t\t--track-editor-bg-noise: #4d2a19;\r\n\t\t\t--track-editor-bg-noise-dim: #27150c;\r\n\t\t\t--track-editor-bg-mod: #4d2a19;\r\n\t\t\t--track-editor-bg-mod-dim: #27150c;\r\n\t\t\t--multiplicative-mod-slider: #decdbf;\r\n\t\t\t--overwriting-mod-slider: #decdbf;\r\n\t\t\t--indicator-primary: #decdbf;\r\n\t\t\t--indicator-secondary: #362217;\r\n\t\t\t--select2-opt-group: #24160f;\r\n\t\t\t--input-box-outline: #24160f;\r\n\t\t\t--mute-button-normal: #ff66a1;\r\n\t\t\t--mute-button-mod: #e61968;\r\n\t\t\t--pitch1-secondary-channel: #680029;\r\n\t\t\t--pitch1-primary-channel: #cc0052;\r\n\t\t\t--pitch1-secondary-note: #660029;\r\n\t\t\t--pitch1-primary-note: #cc0052;\r\n\t\t\t--pitch2-secondary-channel: #7e1b43;\r\n\t\t\t--pitch2-primary-channel: #d32e71;\r\n\t\t\t--pitch2-secondary-note: #7e1b43;\r\n\t\t\t--pitch2-primary-note: #d32e71;\r\n\t\t\t--pitch3-secondary-channel: #aa275e;\r\n\t\t\t--pitch3-primary-channel: #da5d91;\r\n\t\t\t--pitch3-secondary-note: #aa275e;\r\n\t\t\t--pitch3-primary-note: #da5d91;\r\n\t\t\t--pitch4-secondary-channel: #cc3878;\r\n\t\t\t--pitch4-primary-channel: #e18bb0;\r\n\t\t\t--pitch4-secondary-note: #cc3878;\r\n\t\t\t--pitch4-primary-note: #e18bb0;\r\n\t\t\t--pitch5-secondary-channel: #d06c9b;\r\n\t\t\t--pitch5-primary-channel: #e9bad0;\r\n\t\t\t--pitch5-secondary-note: #d06c9b;\r\n\t\t\t--pitch5-primary-note: #e9bad0;\r\n\t\t\t--pitch6-secondary-channel: #c9acc5;\r\n\t\t\t--pitch6-primary-channel: #f0e8ef;\r\n\t\t\t--pitch6-secondary-note: #c9acc5;\r\n\t\t\t--pitch6-primary-note: #f0e8ef;\r\n\t\t\t--pitch7-secondary-channel: #d06c9b;\r\n\t\t\t--pitch7-primary-channel: #e9bad0;\r\n\t\t\t--pitch7-secondary-note: #d06c9b;\r\n\t\t\t--pitch7-primary-note: #e9bad0;\r\n\t\t\t--pitch8-secondary-channel: #cc3878;\r\n\t\t\t--pitch8-primary-channel: #e18bb0;\r\n\t\t\t--pitch8-secondary-note: #cc3878;\r\n\t\t\t--pitch8-primary-note: #e18bb0;\r\n\t\t\t--pitch9-secondary-channel: #aa275e;\r\n\t\t\t--pitch9-primary-channel: #da5d91;\r\n\t\t\t--pitch9-secondary-note: #aa275e;\r\n\t\t\t--pitch9-primary-note: #da5d91;\r\n\t\t\t--pitch10-secondary-channel: #7e1b43;\r\n\t\t\t--pitch10-primary-channel: #d32e71;\r\n\t\t\t--pitch10-secondary-note: #7e1b43;\r\n\t\t\t--pitch10-primary-note: #d32e71;\r\n\t\t\t--noise1-secondary-channel: #683a37;\r\n\t\t\t--noise1-primary-channel: #A85F5A;\r\n\t\t\t--noise1-secondary-note: #683a37;\r\n\t\t\t--noise1-primary-note: #A85F5A;\r\n\t\t\t--noise2-secondary-channel: #7c4a41;\r\n\t\t\t--noise2-primary-channel: #B47A70;\r\n\t\t\t--noise2-secondary-note: #7c4a41;\r\n\t\t\t--noise2-primary-note: #B47A70;\r\n\t\t\t--noise3-secondary-channel: #935f4d;\r\n\t\t\t--noise3-primary-channel: #c09587;\r\n\t\t\t--noise3-secondary-note: #935f4d;\r\n\t\t\t--noise3-primary-note: #C09587;\r\n\t\t\t--noise4-secondary-channel: #aa795a;\r\n\t\t\t--noise4-primary-channel: #cdb09d;\r\n\t\t\t--noise4-secondary-note: #aa795a;\r\n\t\t\t--noise4-primary-note: #CDAF9D;\r\n\t\t\t--noise5-secondary-channel: #bb987c;\r\n\t\t\t--noise5-primary-channel: #decdbf;\r\n\t\t\t--noise5-secondary-note: #bb987c;\r\n\t\t\t--noise5-primary-note: #decdbf;\r\n\t\t\t--mod1-secondary-channel: #6ca784;\r\n\t\t\t--mod1-primary-channel: #accdb9;\r\n\t\t\t--mod1-secondary-note: #6ca784;\r\n\t\t\t--mod1-primary-note: #accdb9;\r\n\t\t\t--mod2-secondary-channel: #7daa9f;\r\n\t\t\t--mod2-primary-channel: #bbd3cd;\r\n\t\t\t--mod2-secondary-note: #7daa9f;\r\n\t\t\t--mod2-primary-note: #bbd3cd;\r\n\t\t\t--mod3-secondary-channel: #70a3a9;\r\n\t\t\t--mod3-primary-channel: #afcccf;\r\n\t\t\t--mod3-secondary-note: #70a3a9;\r\n\t\t\t--mod3-primary-note: #afcccf;\r\n\t\t\t--mod4-secondary-channel: #5698b8;\r\n\t\t\t--mod4-primary-channel: #9ec3d6;\r\n\t\t\t--mod4-secondary-note: #5698b8;\r\n\t\t\t--mod4-primary-note: #9ec3d6;\r\n\t\t\t--mod-label-primary: #24160f;\r\n\t\t\t--mod-label-secondary-text: #E5AFC2;\r\n\t\t\t--mod-label-primary-text: #decdbf;\r\n\t\t\t--disabled-note-primary: #bababa;\r\n\t\t\t--disabled-note-secondary: #878787;\r\n\t\t}`,\r\n        \"mono\": `:root {\r\n\t\t\t--page-margin: #000;\r\n\t\t\t--editor-background: #000;\r\n\t\t\t--hover-preview: #808080;\r\n\t\t\t--playhead: #808080;\r\n\t\t\t--primary-text: white;\r\n\t\t\t--secondary-text: #cccccc;\r\n\t\t\t--inverted-text: black;\r\n\t\t\t--text-selection: #696969;\r\n\t\t\t--box-selection-fill: #cccccc40;\r\n\t\t\t--loop-accent: #808080;\r\n\t\t\t--link-accent: white;\r\n\t\t\t--ui-widget-background: #232323;\r\n\t\t\t--ui-widget-focus: #303030;\r\n\t\t\t--pitch-background: #1a1a1a;\r\n\t\t\t--tonic: #262626;\r\n\t\t\t--fifth-note: #0d0d0d;\r\n\t\t\t--white-piano-key: #808080;\r\n\t\t\t--black-piano-key: #232323;\r\n\t\t\t--use-color-formula: true;\r\n\t\t\t--track-editor-bg-pitch: #262626;\r\n\t\t\t--track-editor-bg-pitch-dim: #1a1a1a;\r\n\t\t\t--track-editor-bg-noise: #262626;\r\n\t\t\t--track-editor-bg-noise-dim: #1a1a1a;\r\n\t\t\t--track-editor-bg-mod: #262626;\r\n\t\t\t--track-editor-bg-mod-dim: #1a1a1a;\r\n\t\t\t--multiplicative-mod-slider: #808080;\r\n\t\t\t--overwriting-mod-slider: #808080;\r\n\t\t\t--indicator-primary: #808080;\r\n\t\t\t--indicator-secondary: #333333;\r\n\t\t\t--select2-opt-group: #232323;\r\n\t\t\t--input-box-outline: #222;\r\n\t\t\t--mute-button-normal: #808080;\r\n\t\t\t--mute-button-mod: #808080;\r\n\t\t\t--mod-label-primary: #232323;\r\n\t\t\t--mod-label-secondary-text: #696969;\r\n\t\t\t--mod-label-primary-text: #cdcdcd;\r\n\t\t\t--pitch-secondary-channel-hue: 0;\r\n\t\t\t--pitch-secondary-channel-hue-scale: 25;\r\n\t\t\t--pitch-secondary-channel-sat: 10;\r\n\t\t\t--pitch-secondary-channel-sat-scale: 0.1;\r\n\t\t\t--pitch-secondary-channel-lum: 70;\r\n\t\t\t--pitch-secondary-channel-lum-scale: 0;\r\n\t\t\t--pitch-primary-channel-hue: 0;\r\n\t\t\t--pitch-primary-channel-hue-scale: 25;\r\n\t\t\t--pitch-primary-channel-sat: 50;\r\n\t\t\t--pitch-primary-channel-sat-scale: 0.1;\r\n\t\t\t--pitch-primary-channel-lum: 95;\r\n\t\t\t--pitch-primary-channel-lum-scale: 0;\r\n\t\t\t--pitch-secondary-note-hue: 0;\r\n\t\t\t--pitch-secondary-note-hue-scale: 25;\r\n\t\t\t--pitch-secondary-note-sat: 10;\r\n\t\t\t--pitch-secondary-note-sat-scale: 0.1;\r\n\t\t\t--pitch-secondary-note-lum: 70;\r\n\t\t\t--pitch-secondary-note-lum-scale: 0;\r\n\t\t\t--pitch-primary-note-hue: 0;\r\n\t\t\t--pitch-primary-note-hue-scale: 25;\r\n\t\t\t--pitch-primary-note-sat: 50;\r\n\t\t\t--pitch-primary-note-sat-scale: 0.1;\r\n\t\t\t--pitch-primary-note-lum: 95;\r\n\t\t\t--pitch-primary-note-lum-scale: 0;\r\n\t\t\t--noise-secondary-channel-hue: 125;\r\n\t\t\t--noise-secondary-channel-hue-scale: 50;\r\n\t\t\t--noise-secondary-channel-sat: 10;\r\n\t\t\t--noise-secondary-channel-sat-scale: 0.1;\r\n\t\t\t--noise-secondary-channel-lum: 70;\r\n\t\t\t--noise-secondary-channel-lum-scale: 0;\r\n\t\t\t--noise-primary-channel-hue: 125;\r\n\t\t\t--noise-primary-channel-hue-scale: 50;\r\n\t\t\t--noise-primary-channel-sat: 50;\r\n\t\t\t--noise-primary-channel-sat-scale: 0.1;\r\n\t\t\t--noise-primary-channel-lum: 95;\r\n\t\t\t--noise-primary-channel-lum-scale: 0;\r\n\t\t\t--noise-secondary-note-hue: 125;\r\n\t\t\t--noise-secondary-note-hue-scale: 50;\r\n\t\t\t--noise-secondary-note-sat: 10;\r\n\t\t\t--noise-secondary-note-sat-scale: 0.1;\r\n\t\t\t--noise-secondary-note-lum: 70;\r\n\t\t\t--noise-secondary-note-lum-scale: 0;\r\n\t\t\t--noise-primary-note-hue: 125;\r\n\t\t\t--noise-primary-note-hue-scale: 50;\r\n\t\t\t--noise-primary-note-sat: 50;\r\n\t\t\t--noise-primary-note-sat-scale: 0.1;\r\n\t\t\t--noise-primary-note-lum: 95;\r\n\t\t\t--noise-primary-note-lum-scale: 0;\r\n\t\t\t--mod-secondary-channel-hue: 255;\r\n\t\t\t--mod-secondary-channel-hue-scale: 75;\r\n\t\t\t--mod-secondary-channel-sat: 10;\r\n\t\t\t--mod-secondary-channel-sat-scale: 0;\r\n\t\t\t--mod-secondary-channel-lum: 70;\r\n\t\t\t--mod-secondary-channel-lum-scale: 0;\r\n\t\t\t--mod-primary-channel-hue: 255;\r\n\t\t\t--mod-primary-channel-hue-scale: 75;\r\n\t\t\t--mod-primary-channel-sat: 50;\r\n\t\t\t--mod-primary-channel-sat-scale: 0;\r\n\t\t\t--mod-primary-channel-lum: 95;\r\n\t\t\t--mod-primary-channel-lum-scale: 0;\r\n\t\t\t--mod-secondary-note-hue: 255;\r\n\t\t\t--mod-secondary-note-hue-scale: 75;\r\n\t\t\t--mod-secondary-note-sat: 10;\r\n\t\t\t--mod-secondary-note-sat-scale: 0;\r\n\t\t\t--mod-secondary-note-lum: 70;\r\n\t\t\t--mod-secondary-note-lum-scale: 0;\r\n\t\t\t--mod-primary-note-hue: 255;\r\n\t\t\t--mod-primary-note-hue-scale: 75;\r\n\t\t\t--mod-primary-note-sat: 50;\r\n\t\t\t--mod-primary-note-sat-scale: 0;\r\n\t\t\t--mod-primary-note-lum: 95;\r\n\t\t\t--mod-primary-note-lum-scale: 0;\r\n\t\t\t--disabled-note-primary: #c6c6c6;\r\n\t\t\t--disabled-note-secondary: #8c8c8c;\r\n\t\t}`,\r\n\t\t\"modbox classic\": `\r\n\t\t\t:root {\r\n\t\t\t\t--page-margin: black;\r\n\t\t\t\t--editor-background: black;\r\n\t\t\t\t--hover-preview: white;\r\n\t\t\t\t--playhead: white;\r\n\t\t\t\t--primary-text: white;\r\n\t\t\t\t--secondary-text: #999;\r\n\t\t\t\t--inverted-text: black;\r\n\t\t\t\t--text-selection: rgba(119,68,255,0.99);\r\n\t\t\t\t--box-selection-fill: rgba(255,255,255,0.2);\r\n\t\t\t\t--loop-accent: #9900cc;\r\n\t\t\t\t--link-accent: #98f;\r\n\t\t\t\t--ui-widget-background: #444;\r\n\t\t\t\t--ui-widget-focus: #777;\r\n\t\t\t\t--pitch-background: #444;\r\n\t\t\t\t--tonic: #864;\r\n\t\t\t\t--fifth-note: #468;\r\n\t\t\t\t--white-piano-key: #bbb;\r\n\t\t\t\t--black-piano-key: #444;\r\n\t\t\t\t--white-piano-key-text: #131200;\r\n\t\t\t\t--black-piano-key-text: #fff;\r\n\t\t\t\t\t--use-color-formula: false;\r\n\t\t\t\t\t--track-editor-bg-pitch: #444;\r\n\t\t\t\t\t--track-editor-bg-pitch-dim: #333;\r\n\t\t\t\t\t--track-editor-bg-noise: #444;\r\n\t\t\t\t\t--track-editor-bg-noise-dim: #333;\r\n\t\t\t\t\t--track-editor-bg-mod: #234;\r\n\t\t\t\t\t--track-editor-bg-mod-dim: #123;\r\n\t\t\t\t\t--multiplicative-mod-slider: #456;\r\n\t\t\t\t\t--overwriting-mod-slider: #654;\r\n\t\t\t\t\t--indicator-primary: #74f;\r\n\t\t\t\t\t--indicator-secondary: #444;\r\n\t\t\t\t\t--select2-opt-group: #585858;\r\n\t\t\t\t\t--input-box-outline: #333;\r\n\t\t\t\t\t--mute-button-normal: #ffa033;\r\n\t\t\t\t\t--mute-button-mod: #9a6bff;\r\n\t\t\t\t--pitch1-secondary-channel: #0099a1;\r\n\t\t\t\t--pitch1-primary-channel:   #25f3ff;\r\n\t\t\t\t--pitch1-secondary-note:    #0099a1;\r\n\t\t\t\t--pitch1-primary-note:      #25f3ff;\r\n\t\t\t\t--pitch2-secondary-channel: #439143;\r\n\t\t\t\t--pitch2-primary-channel:   #44ff44;\r\n\t\t\t\t--pitch2-secondary-note:    #439143;\r\n\t\t\t\t--pitch2-primary-note:      #44ff44;\r\n\t\t\t\t--pitch3-secondary-channel: #a1a100;\r\n\t\t\t\t--pitch3-primary-channel:   #ffff25;\r\n\t\t\t\t--pitch3-secondary-note:    #a1a100;\r\n\t\t\t\t--pitch3-primary-note:      #ffff25;\r\n\t\t\t\t--pitch4-secondary-channel: #c75000;\r\n\t\t\t\t--pitch4-primary-channel:   #ff9752;\r\n\t\t\t\t--pitch4-secondary-note:    #c75000;\r\n\t\t\t\t--pitch4-primary-note:      #ff9752;\r\n\t\t\t\t--pitch5-secondary-channel: #d020d0;\r\n\t\t\t\t--pitch5-primary-channel:   #FF90FF;\r\n\t\t\t\t--pitch5-secondary-note:    #d020d0;\r\n\t\t\t\t--pitch5-primary-note:      #ff90ff;\r\n\t\t\t\t--pitch6-secondary-channel: #552377;\r\n\t\t\t\t--pitch6-primary-channel:   #9f31ea;\r\n\t\t\t\t--pitch6-secondary-note:    #552377;\r\n\t\t\t\t--pitch6-primary-note:      #9f31ea;\r\n\t\t\t\t--pitch7-secondary-channel: #221b89;\r\n\t\t\t\t--pitch7-primary-channel:   #2b6aff;\r\n\t\t\t\t--pitch7-secondary-note:    #221b89;\r\n\t\t\t\t--pitch7-primary-note:      #2b6aff;\r\n\t\t\t\t--pitch8-secondary-channel: #00995f;\r\n\t\t\t\t--pitch8-primary-channel:   #00ff9f;\r\n\t\t\t\t--pitch8-secondary-note:    #00995f;\r\n\t\t\t\t--pitch8-primary-note:      #00ff9f;\r\n\t\t\t\t--pitch9-secondary-channel: #d6b03e;\r\n\t\t\t\t--pitch9-primary-channel:   #ffbf00;\r\n\t\t\t\t--pitch9-secondary-note:    #d6b03e;\r\n\t\t\t\t--pitch9-primary-note:      #ffbf00;\r\n\t\t\t\t--pitch10-secondary-channel:#b25915;\r\n\t\t\t\t--pitch10-primary-channel:  #d85d00;\r\n\t\t\t\t--pitch10-secondary-note:   #b25915;\r\n\t\t\t\t--pitch10-primary-note:     #d85d00;\r\n\t\t\t\t--noise1-secondary-channel: #991010;\r\n\t\t\t\t--noise1-primary-channel:   #ff1616;\r\n\t\t\t\t--noise1-secondary-note:    #991010;\r\n\t\t\t\t--noise1-primary-note:      #ff1616;\r\n\t\t\t\t--noise2-secondary-channel: #aaaaaa;\r\n\t\t\t\t--noise2-primary-channel:   #ffffff;\r\n\t\t\t\t--noise2-secondary-note:    #aaaaaa;\r\n\t\t\t\t--noise2-primary-note:      #ffffff;\r\n\t\t\t\t--noise3-secondary-channel: #5869BD;\r\n\t\t\t\t--noise3-primary-channel:   #768dfc;\r\n\t\t\t\t--noise3-secondary-note:    #5869BD;\r\n\t\t\t\t--noise3-primary-note:      #768dfc;\r\n\t\t\t\t--noise4-secondary-channel: #7c9b42;\r\n\t\t\t\t--noise4-primary-channel:   #a5ff00;\r\n\t\t\t\t--noise4-secondary-note:    #7c9b42;\r\n\t\t\t\t--noise4-primary-note:      #a5ff00;\r\n\t\t\t\t--noise5-secondary-channel: #7c9b42;\r\n\t\t\t\t--noise5-primary-channel:   #A2BB77;\r\n\t\t\t\t--noise5-secondary-note:    #91AA66;\r\n\t\t\t\t--noise5-primary-note:      #C5E2B2;\r\n         --mod1-secondary-channel: #0099a1;\r\n\t\t\t\t--mod1-primary-channel:   #25f3ff;\r\n\t\t\t\t--mod1-secondary-note:    #0099a1;\r\n\t\t\t\t--mod1-primary-note:      #25f3ff;\r\n\t\t\t\t--mod2-secondary-channel: #439143;\r\n\t\t\t\t--mod2-primary-channel:   #44ff44;\r\n\t\t\t\t--mod2-secondary-note:    #439143;\r\n\t\t\t\t--mod2-primary-note:      #44ff44;\r\n\t\t\t\t--mod3-secondary-channel: #a1a100;\r\n\t\t\t\t--mod3-primary-channel:   #ffff25;\r\n\t\t\t\t--mod3-secondary-note:    #a1a100;\r\n\t\t\t\t--mod3-primary-note:      #ffff25;\r\n\t\t\t\t--mod4-secondary-channel: #c75000;\r\n\t\t\t\t--mod4-primary-channel:   #ff9752;\r\n\t\t\t\t--mod4-secondary-note:    #c75000;\r\n\t\t\t\t--mod4-primary-note:      #ff9752;\r\n\t\t\t\t\t--mod-label-primary:        #999;\r\n\t\t\t\t\t--mod-label-secondary-text: #333;\r\n\t\t\t\t\t--mod-label-primary-text:   black;\r\n\t\t\t\t\t--disabled-note-primary:    #999;\r\n\t\t\t\t\t--disabled-note-secondary:  #666;\r\n\t\t\t\t}\r\n\t\t\t`,\r\n\t\t\t\"zefbox\": `\r\n\t\t\t:root {\r\n\t\t\t\t--page-margin: black;\r\n\t\t\t\t--editor-background: black;\r\n\t\t\t\t--hover-preview: white;\r\n\t\t\t\t--playhead: white;\r\n\t\t\t\t--primary-text: white;\r\n\t\t\t\t--secondary-text: #999;\r\n\t\t\t\t--inverted-text: black;\r\n\t\t\t\t--text-selection: rgba(119,68,255,0.99);\r\n\t\t\t\t--box-selection-fill: rgba(255,255,255,0.2);\r\n\t\t\t\t--loop-accent: #C3593D;\r\n\t\t\t\t--link-accent: #98f;\r\n\t\t\t\t--ui-widget-background: #444;\r\n\t\t\t\t--ui-widget-focus: #777;\r\n\t\t\t\t--pitch-background: #444;\r\n\t\t\t\t--tonic: #864;\r\n\t\t\t\t--fifth-note: #468;\r\n\t\t\t\t--white-piano-key: #bbb;\r\n\t\t\t\t--black-piano-key: #444;\r\n\t\t\t\t--white-piano-key-text: #131200;\r\n\t\t\t\t--black-piano-key-text: #fff;\r\n\t\t\t\t\t--use-color-formula: false;\r\n\t\t\t\t\t--track-editor-bg-pitch: #444;\r\n\t\t\t\t\t--track-editor-bg-pitch-dim: #333;\r\n\t\t\t\t\t--track-editor-bg-noise: #444;\r\n\t\t\t\t\t--track-editor-bg-noise-dim: #333;\r\n\t\t\t\t\t--track-editor-bg-mod: #234;\r\n\t\t\t\t\t--track-editor-bg-mod-dim: #123;\r\n\t\t\t\t\t--multiplicative-mod-slider: #456;\r\n\t\t\t\t\t--overwriting-mod-slider: #654;\r\n\t\t\t\t\t--indicator-primary: #74f;\r\n\t\t\t\t\t--indicator-secondary: #444;\r\n\t\t\t\t\t--select2-opt-group: #585858;\r\n\t\t\t\t\t--input-box-outline: #333;\r\n\t\t\t\t\t--mute-button-normal: #ffa033;\r\n\t\t\t\t\t--mute-button-mod: #9a6bff;\r\n\t\t\t\t--pitch1-secondary-channel: #06c400;\r\n\t\t\t\t--pitch1-primary-channel:   #08ff00;\r\n\t\t\t\t--pitch1-secondary-note:    #06c400;\r\n\t\t\t\t--pitch1-primary-note:      #06e000;\r\n\t\t\t\t--pitch2-secondary-channel: #00bf97;\r\n\t\t\t\t--pitch2-primary-channel:   #00ffcb;\r\n\t\t\t\t--pitch2-secondary-note:    #00bf97;\r\n\t\t\t\t--pitch2-primary-note:      #00edbc;\r\n\t\t\t\t--pitch3-secondary-channel: #b5b000;\r\n\t\t\t\t--pitch3-primary-channel:   #fffa00;\r\n\t\t\t\t--pitch3-secondary-note:    #b5b000;\r\n\t\t\t\t--pitch3-primary-note:      #e0db00;\r\n\t\t\t\t--pitch4-secondary-channel: #c90000;\r\n\t\t\t\t--pitch4-primary-channel:   #e20000;\r\n\t\t\t\t--pitch4-secondary-note:    #c90000;\r\n\t\t\t\t--pitch4-primary-note:      #e20000;\r\n\t\t\t\t--pitch5-secondary-channel: #d17d12;\r\n\t\t\t\t--pitch5-primary-channel:   #ff9e21;\r\n\t\t\t\t--pitch5-secondary-note:    #d17d12;\r\n\t\t\t\t--pitch5-primary-note:      #ef9017;\r\n\t\t\t\t--pitch6-secondary-channel: #d35bc8;\r\n\t\t\t\t--pitch6-primary-channel:   #ffa5f7;\r\n\t\t\t\t--pitch6-secondary-note:    #d35bc8;\r\n\t\t\t\t--pitch6-primary-note:      #fc64ee;\r\n\t\t\t\t--pitch7-secondary-channel: #D00000;\r\n\t\t\t\t--pitch7-primary-channel:   #FF4444;\r\n\t\t\t\t--pitch7-secondary-note:    #D00000;\r\n\t\t\t\t--pitch7-primary-note:      #FF4444;\r\n\t\t\t\t--pitch8-secondary-channel: #00C700;\r\n\t\t\t\t--pitch8-primary-channel:   #A0FFA0;\r\n\t\t\t\t--pitch8-secondary-note:    #00C700;\r\n\t\t\t\t--pitch8-primary-note:      #A0FFA0;\r\n\t\t\t\t--pitch9-secondary-channel: #A88981;\r\n\t\t\t\t--pitch9-primary-channel:   #F1C3B7;\r\n\t\t\t\t--pitch9-secondary-note:    #A88981;\r\n\t\t\t\t--pitch9-primary-note:      #F1C3B7;\r\n\t\t\t\t--pitch10-secondary-channel:#0C0A99;\r\n\t\t\t\t--pitch10-primary-channel:  #0000EE;\r\n\t\t\t\t--pitch10-secondary-note:   #0C0A99;\r\n\t\t\t\t--pitch10-primary-note:     #0000EE;\r\n\t\t\t\t--noise1-secondary-channel: #ABABAB;\r\n\t\t\t\t--noise1-primary-channel:   #D6D6D6;\r\n\t\t\t\t--noise1-secondary-note:    #ABABAB;\r\n\t\t\t\t--noise1-primary-note:      #D6D6D6;\r\n\t\t\t\t--noise2-secondary-channel: #A18F51;\r\n\t\t\t\t--noise2-primary-channel:   #F6BB6A;\r\n\t\t\t\t--noise2-secondary-note:    #A18F51;\r\n\t\t\t\t--noise2-primary-note:      #F6BB6A;\r\n\t\t\t\t--noise3-secondary-channel: #5869BD;\r\n\t\t\t\t--noise3-primary-channel:   #768DFC;\r\n\t\t\t\t--noise3-secondary-note:    #5869BD;\r\n\t\t\t\t--noise3-primary-note:      #768DFC;\r\n\t\t\t\t--noise4-secondary-channel: #8888D0;\r\n\t\t\t\t--noise4-primary-channel:   #D0D0FF;\r\n\t\t\t\t--noise4-secondary-note:    #8888D0;\r\n\t\t\t\t--noise4-primary-note:      #D0D0FF;\r\n\t\t\t\t--noise5-secondary-channel: #B7148E;\r\n\t\t\t\t--noise5-primary-channel:   #E819B4;\r\n\t\t\t\t--noise5-secondary-note:    #B7148E;\r\n\t\t\t\t--noise5-primary-note:      #E819B4;\r\n       --mod1-secondary-channel: #06c400;\r\n\t\t\t\t--mod1-primary-channel:   #08ff00;\r\n\t\t\t\t--mod1-secondary-note:    #06c400;\r\n\t\t\t\t--mod1-primary-note:      #06e000;\r\n\t\t\t\t--mod2-secondary-channel: #00bf97;\r\n\t\t\t\t--mod2-primary-channel:   #00ffcb;\r\n\t\t\t\t--mod2-secondary-note:    #00bf97;\r\n\t\t\t\t--mod2-primary-note:      #00edbc;\r\n\t\t\t\t--mod3-secondary-channel: #b5b000;\r\n\t\t\t\t--mod3-primary-channel:   #fffa00;\r\n\t\t\t\t--mod3-secondary-note:    #b5b000;\r\n\t\t\t\t--mod3-primary-note:      #e0db00;\r\n\t\t\t\t--mod4-secondary-channel: #c90000;\r\n\t\t\t\t--mod4-primary-channel:   #e20000;\r\n\t\t\t\t--mod4-secondary-note:    #c90000;\r\n\t\t\t\t--mod4-primary-note:      #e20000;\r\n\t\t\t\t\t--mod-label-primary:        #999;\r\n\t\t\t\t\t--mod-label-secondary-text: #333;\r\n\t\t\t\t\t--mod-label-primary-text:   black;\r\n\t\t\t\t\t--disabled-note-primary:    #999;\r\n\t\t\t\t\t--disabled-note-secondary:  #666;\r\n\t\t\t\t}\r\n\t\t\t`,\r\n\t\t\t\"sandbox classic\": `\r\n\t\t\t:root {\r\n\t\t\t\t--page-margin: black;\r\n\t\t\t\t--editor-background: black;\r\n\t\t\t\t--hover-preview: white;\r\n\t\t\t\t--playhead: white;\r\n\t\t\t\t--primary-text: white;\r\n\t\t\t\t--secondary-text: #999;\r\n\t\t\t\t--inverted-text: black;\r\n\t\t\t\t--text-selection: rgba(119,68,255,0.99);\r\n\t\t\t\t--box-selection-fill: rgba(255,255,255,0.2);\r\n\t\t\t\t--loop-accent: #198195;\r\n\t\t\t\t--link-accent: #98f;\r\n\t\t\t\t--ui-widget-background: #444;\r\n\t\t\t\t--ui-widget-focus: #777;\r\n\t\t\t\t--pitch-background: #444;\r\n\t\t\t\t--tonic: #864;\r\n\t\t\t\t--fifth-note: #468;\r\n\t\t\t\t--white-piano-key: #bbb;\r\n\t\t\t\t--black-piano-key: #444;\r\n\t\t\t\t--white-piano-key-text: #131200;\r\n\t\t\t\t--black-piano-key-text: #fff;\r\n\t\t\t\t\t--use-color-formula: false;\r\n\t\t\t\t\t--track-editor-bg-pitch: #444;\r\n\t\t\t\t\t--track-editor-bg-pitch-dim: #333;\r\n\t\t\t\t\t--track-editor-bg-noise: #444;\r\n\t\t\t\t\t--track-editor-bg-noise-dim: #333;\r\n\t\t\t\t\t--track-editor-bg-mod: #234;\r\n\t\t\t\t\t--track-editor-bg-mod-dim: #123;\r\n\t\t\t\t\t--multiplicative-mod-slider: #456;\r\n\t\t\t\t\t--overwriting-mod-slider: #654;\r\n\t\t\t\t\t--indicator-primary: #74f;\r\n\t\t\t\t\t--indicator-secondary: #444;\r\n\t\t\t\t\t--select2-opt-group: #585858;\r\n\t\t\t\t\t--input-box-outline: #333;\r\n\t\t\t\t\t--mute-button-normal: #ffa033;\r\n\t\t\t\t\t--mute-button-mod: #9a6bff;\r\n\t\t\t\t--pitch1-secondary-channel: #539999;\r\n\t\t\t\t--pitch1-primary-channel:   #5EB1B1;\r\n\t\t\t\t--pitch1-secondary-note:    #539999;\r\n\t\t\t\t--pitch1-primary-note:      #5EB1B1;\r\n\t\t\t\t--pitch2-secondary-channel: #95933C;\r\n\t\t\t\t--pitch2-primary-channel:   #B0AD44;\r\n\t\t\t\t--pitch2-secondary-note:    #95933C;\r\n\t\t\t\t--pitch2-primary-note:      #B0AD44;\r\n\t\t\t\t--pitch3-secondary-channel: #E75566;\r\n\t\t\t\t--pitch3-primary-channel:   #FF9AA6;\r\n\t\t\t\t--pitch3-secondary-note:    #E75566;\r\n\t\t\t\t--pitch3-primary-note:      #FF9AA6;\r\n\t\t\t\t--pitch4-secondary-channel: #8B4343;\r\n\t\t\t\t--pitch4-primary-channel:   #FF8844;\r\n\t\t\t\t--pitch4-secondary-note:    #8B4343;\r\n\t\t\t\t--pitch4-primary-note:      #FF8844;\r\n\t\t\t\t--pitch5-secondary-channel: #888888;\r\n\t\t\t\t--pitch5-primary-channel:   #BBBBBB;\r\n\t\t\t\t--pitch5-secondary-note:    #888888;\r\n\t\t\t\t--pitch5-primary-note:      #BBBBBB;\r\n\t\t\t\t--pitch6-secondary-channel: #BB6906;\r\n\t\t\t\t--pitch6-primary-channel:   #FE8D00;\r\n\t\t\t\t--pitch6-secondary-note:    #BB6906;\r\n\t\t\t\t--pitch6-primary-note:      #FE8D00;\r\n\t\t\t\t--pitch7-secondary-channel: #539999;\r\n\t\t\t\t--pitch7-primary-channel:   #5EB1B1;\r\n\t\t\t\t--pitch7-secondary-note:    #539999;\r\n\t\t\t\t--pitch7-primary-note:      #5EB1B1;\r\n\t\t\t\t--pitch8-secondary-channel: #95933C;\r\n\t\t\t\t--pitch8-primary-channel:   #B0AD44;\r\n\t\t\t\t--pitch8-secondary-note:    #95933C;\r\n\t\t\t\t--pitch8-primary-note:      #B0AD44;\r\n\t\t\t\t--pitch9-secondary-channel: #E75566;\r\n\t\t\t\t--pitch9-primary-channel:   #FF9AA6;\r\n\t\t\t\t--pitch9-secondary-note:    #E75566;\r\n\t\t\t\t--pitch9-primary-note:      #FF9AA6;\r\n\t\t\t\t--pitch10-secondary-channel: #8B4343;\r\n\t\t\t\t--pitch10-primary-channel:   #FF8844;\r\n\t\t\t\t--pitch10-secondary-note:    #8B4343;\r\n\t\t\t\t--pitch10-primary-note:      #FF8844;\t\t\t\r\n\t\t\t\t--noise1-secondary-channel: #ABABAB;\r\n\t\t\t\t--noise1-primary-channel:   #D6D6D6;\r\n\t\t\t\t--noise1-secondary-note:    #ABABAB;\r\n\t\t\t\t--noise1-primary-note:      #D6D6D6;\r\n\t\t\t\t--noise2-secondary-channel: #A18F51;\r\n\t\t\t\t--noise2-primary-channel:   #F6BB6A;\r\n\t\t\t\t--noise2-secondary-note:    #A18F51;\r\n\t\t\t\t--noise2-primary-note:      #F6BB6A;\r\n\t\t\t\t--noise3-secondary-channel: #5869BD;\r\n\t\t\t\t--noise3-primary-channel:   #768DFC;\r\n\t\t\t\t--noise3-secondary-note:    #5869BD;\r\n\t\t\t\t--noise3-primary-note:      #768DFC;\r\n\t\t\t\t--noise4-secondary-channel: #8888D0;\r\n\t\t\t\t--noise4-primary-channel:   #D0D0FF;\r\n\t\t\t\t--noise4-secondary-note:    #8888D0;\r\n\t\t\t\t--noise4-primary-note:      #D0D0FF;\r\n\t\t\t\t--noise5-secondary-channel: #A18F51;\r\n\t\t\t\t--noise5-primary-channel:   #F6BB6A;\r\n\t\t\t\t--noise5-secondary-note:    #A18F51;\r\n\t\t\t\t--noise5-primary-note:      #F6BB6A;\t\t\t\r\n         \t--mod1-secondary-channel: #539999;\r\n\t\t\t\t--mod1-primary-channel:   #5EB1B1;\r\n\t\t\t\t--mod1-secondary-note:    #539999;\r\n\t\t\t\t--mod1-primary-note:      #5EB1B1;\r\n\t\t\t\t--mod2-secondary-channel: #95933C;\r\n\t\t\t\t--mod2-primary-channel:   #B0AD44;\r\n\t\t\t\t--mod2-secondary-note:    #95933C;\r\n\t\t\t\t--mod2-primary-note:      #B0AD44;\r\n\t\t\t\t--mod3-secondary-channel: #E75566;\r\n\t\t\t\t--mod3-primary-channel:   #FF9AA6;\r\n\t\t\t\t--mod3-secondary-note:    #E75566;\r\n\t\t\t\t--mod3-primary-note:      #FF9AA6;\r\n\t\t\t\t--mod4-secondary-channel: #8B4343;\r\n\t\t\t\t--mod4-primary-channel:   #FF8844;\r\n\t\t\t\t--mod4-secondary-note:    #8B4343;\r\n\t\t\t\t--mod4-primary-note:      #FF8844;\r\n\t\t\t\t\t--mod-label-primary:        #999;\r\n\t\t\t\t\t--mod-label-secondary-text: #333;\r\n\t\t\t\t\t--mod-label-primary-text:   black;\r\n\t\t\t\t\t--disabled-note-primary:    #999;\r\n\t\t\t\t\t--disabled-note-secondary:  #666;\r\n\t\t\t\t}\r\n\t\t\t`,\r\n\t\t\t\"harrybox\": `\r\n\t\t\t:root {\r\n\t\t\t\t--page-margin: black;\r\n\t\t\t\t--editor-background: black;\r\n\t\t\t\t--hover-preview: white;\r\n\t\t\t\t--playhead: white;\r\n\t\t\t\t--primary-text: white;\r\n\t\t\t\t--secondary-text: #999;\r\n\t\t\t\t--inverted-text: black;\r\n\t\t\t\t--text-selection: rgba(119,68,255,0.99);\r\n\t\t\t\t--box-selection-fill: rgba(255,255,255,0.2);\r\n\t\t\t\t--loop-accent: #9900cc;\r\n\t\t\t\t--link-accent: #98f;\r\n\t\t\t\t--ui-widget-background: #444;\r\n\t\t\t\t--ui-widget-focus: #777;\r\n\t\t\t\t--pitch-background: #444;\r\n\t\t\t\t--tonic: #864;\r\n\t\t\t\t--fifth-note: #468;\r\n\t\t\t\t--white-piano-key: #bbb;\r\n\t\t\t\t--black-piano-key: #444;\r\n\t\t\t\t--white-piano-key-text: #131200;\r\n\t\t\t\t--black-piano-key-text: #fff;\r\n\t\t\t\t\t--use-color-formula: false;\r\n\t\t\t\t\t--track-editor-bg-pitch: #444;\r\n\t\t\t\t\t--track-editor-bg-pitch-dim: #333;\r\n\t\t\t\t\t--track-editor-bg-noise: #444;\r\n\t\t\t\t\t--track-editor-bg-noise-dim: #333;\r\n\t\t\t\t\t--track-editor-bg-mod: #234;\r\n\t\t\t\t\t--track-editor-bg-mod-dim: #123;\r\n\t\t\t\t\t--multiplicative-mod-slider: #456;\r\n\t\t\t\t\t--overwriting-mod-slider: #654;\r\n\t\t\t\t\t--indicator-primary: #74f;\r\n\t\t\t\t\t--indicator-secondary: #444;\r\n\t\t\t\t\t--select2-opt-group: #585858;\r\n\t\t\t\t\t--input-box-outline: #333;\r\n\t\t\t\t\t--mute-button-normal: #ffa033;\r\n\t\t\t\t\t--mute-button-mod: #9a6bff;\r\n\t\t\t\t--pitch1-secondary-channel: #00ffff;\r\n\t\t\t\t--pitch1-primary-channel:   #00ffff;\r\n\t\t\t\t--pitch1-secondary-note:    #00ffff;\r\n\t\t\t\t--pitch1-primary-note:      #00ffff;\r\n\t\t\t\t--pitch2-secondary-channel: #00d8d8;\r\n\t\t\t\t--pitch2-primary-channel:   #00d8d8;\r\n\t\t\t\t--pitch2-secondary-note:    #00d8d8;\r\n\t\t\t\t--pitch2-primary-note:      #00d8d8;\r\n\t\t\t\t--pitch3-secondary-channel: #00adad;\r\n\t\t\t\t--pitch3-primary-channel:   #00adad;\r\n\t\t\t\t--pitch3-secondary-note:    #00adad;\r\n\t\t\t\t--pitch3-primary-note:      #00adad;\r\n\t\t\t\t-pitch4-secondary-channel: #008c8c;\r\n\t\t\t\t--pitch4-primary-channel:   #008c8c;\r\n\t\t\t\t--pitch4-secondary-note:    #008c8c;\r\n\t\t\t\t--pitch4-primary-note:      #008c8c;\r\n\t\t\t\t--pitch5-secondary-channel: #005b5b;\r\n\t\t\t\t--pitch5-primary-channel:   #005b5b;\r\n\t\t\t\t--pitch5-secondary-note:    #005b5b;\r\n\t\t\t\t--pitch5-primary-note:      #005b5b;\r\n\t\t\t\t--pitch6-secondary-channel: #003333;\r\n\t\t\t\t--pitch6-primary-channel:   #003333;\r\n\t\t\t\t--pitch6-secondary-note:    #003333;\r\n\t\t\t\t--pitch6-primary-note:      #003333;\r\n\t\t\t\t--pitch7-secondary-channel: #00ffff;\r\n\t\t\t\t--pitch7-primary-channel:   #00ffff;\r\n\t\t\t\t--pitch7-secondary-note:    #00ffff;\r\n\t\t\t\t--pitch7-primary-note:      #00ffff;\r\n\t\t\t\t--pitch8-secondary-channel: #00ffff;\r\n\t\t\t\t--pitch8-primary-channel:   #00ffff;\r\n\t\t\t\t--pitch8-secondary-note:    #00ffff;\r\n\t\t\t\t--pitch8-primary-note:      #00ffff;\r\n\t\t\t\t--pitch9-secondary-channel: #00ffff;\r\n\t\t\t\t--pitch9-primary-channel:   #00ffff;\r\n\t\t\t\t--pitch9-secondary-note:    #00ffff;\r\n\t\t\t\t--pitch9-primary-note:      #00ffff;\r\n\t\t\t\t--pitch10-secondary-channel:#00ffff;\r\n\t\t\t\t--pitch10-primary-channel:  #00ffff;\r\n\t\t\t\t--pitch10-secondary-note:   #00ffff;\r\n\t\t\t\t--pitch10-primary-note:     #00ffff;\r\n\t\t\t\t--noise1-secondary-channel: #991010;\r\n\t\t\t\t--noise1-primary-channel:   #ff1616;\r\n\t\t\t\t--noise1-secondary-note:    #991010;\r\n\t\t\t\t--noise1-primary-note:      #ff1616;\r\n\t\t\t\t--noise2-secondary-channel: #aaaaaa;\r\n\t\t\t\t--noise2-primary-channel:   #ffffff;\r\n\t\t\t\t--noise2-secondary-note:    #aaaaaa;\r\n\t\t\t\t--noise2-primary-note:      #ffffff;\r\n\t\t\t\t--noise3-secondary-channel: #991010;\r\n\t\t\t\t--noise3-primary-channel:   #ff1616;\r\n\t\t\t\t--noise3-secondary-note:    #991010;\r\n\t\t\t\t--noise3-primary-note:      #ff1616;\r\n\t\t\t\t--noise4-secondary-channel: #aaaaaa;\r\n\t\t\t\t--noise4-primary-channel:   #ffffff;\r\n\t\t\t\t--noise4-secondary-note:    #aaaaaa;\r\n\t\t\t\t--noise4-primary-note:      #ffffff;\r\n\t\t\t\t--noise5-secondary-channel: #991010;\r\n\t\t\t\t--noise5-primary-channel:   #ff1616;\r\n\t\t\t\t--noise5-secondary-note:    #991010;\r\n\t\t\t\t--noise5-primary-note:      #ff1616;\r\n         \t--mod1-secondary-channel: #00ffff;\r\n\t\t\t\t--mod1-primary-channel:   #00ffff;\r\n\t\t\t\t--mod1-secondary-note:    #00ffff;\r\n\t\t\t\t--mod1-primary-note:      #00ffff;\r\n\t\t\t\t--mod2-secondary-channel: #00d8d8;\r\n\t\t\t\t--mod2-primary-channel:   #00d8d8;\r\n\t\t\t\t--mod2-secondary-note:    #00d8d8;\r\n\t\t\t\t--mod2-primary-note:      #00d8d8;\r\n\t\t\t\t--mod3-secondary-channel: #00adad;\r\n\t\t\t\t--mod3-primary-channel:   #00adad;\r\n\t\t\t\t--mod3-secondary-note:    #00adad;\r\n\t\t\t\t--mod3-primary-note:      #00adad;\r\n\t\t\t\t-mod4-secondary-channel: #008c8c;\r\n\t\t\t\t--mod4-primary-channel:   #008c8c;\r\n\t\t\t\t--mod4-secondary-note:    #008c8c;\r\n\t\t\t\t--mod4-primary-note:      #008c8c;\r\n\t\t\t\t\t--mod-label-primary:        #999;\r\n\t\t\t\t\t--mod-label-secondary-text: #333;\r\n\t\t\t\t\t--mod-label-primary-text:   black;\r\n\t\t\t\t\t--disabled-note-primary:    #999;\r\n\t\t\t\t\t--disabled-note-secondary:  #666;\r\n\t\t\t\t}\r\n\t\t\t`,\r\n\t\t\t\"brucebox\": `\r\n\t\t:root {\r\n\t\t\t\tfont: 16px/2 cursive;\r\n\t\t\t\t--page-margin: #4667CE;\r\n\t\t\t\t--editor-background: black;\r\n\t\t\t\t--hover-preview: white;\r\n\t\t\t\t--playhead: white;\r\n\t\t\t\t--primary-text: white;\r\n\t\t\t\t--secondary-text: #999;\r\n\t\t\t\t--inverted-text: black;\r\n\t\t\t\t--text-selection: rgba(119,68,255,0.99);\r\n\t\t\t\t--box-selection-fill: rgba(255,255,255,0.2);\r\n\t\t\t\t--loop-accent: #9900cc;\r\n\t\t\t\t--link-accent: #98f;\r\n\t\t\t\t--ui-widget-background: #444;\r\n\t\t\t\t--ui-widget-focus: #777;\r\n\t\t\t\t--pitch-background: #444;\r\n\t\t\t\t--tonic: #864;\r\n\t\t\t\t--fifth-note: #468;\r\n\t\t\t\t--white-piano-key: #bbb;\r\n\t\t\t\t--black-piano-key: #444;\r\n\t\t\t\t--white-piano-key-text: #131200;\r\n\t\t\t\t--black-piano-key-text: #fff;\r\n\t\t\t\t\t--use-color-formula: false;\r\n\t\t\t\t\t--track-editor-bg-pitch: #444;\r\n\t\t\t\t\t--track-editor-bg-pitch-dim: #333;\r\n\t\t\t\t\t--track-editor-bg-noise: #444;\r\n\t\t\t\t\t--track-editor-bg-noise-dim: #333;\r\n\t\t\t\t\t--track-editor-bg-mod: #234;\r\n\t\t\t\t\t--track-editor-bg-mod-dim: #123;\r\n\t\t\t\t\t--multiplicative-mod-slider: #456;\r\n\t\t\t\t\t--overwriting-mod-slider: #654;\r\n\t\t\t\t\t--indicator-primary: #74f;\r\n\t\t\t\t\t--indicator-secondary: #444;\r\n\t\t\t\t\t--select2-opt-group: #585858;\r\n\t\t\t\t\t--input-box-outline: #333;\r\n\t\t\t\t\t--mute-button-normal: #ffa033;\r\n\t\t\t\t\t--mute-button-mod: #9a6bff;\r\n\t\t\t\t--pitch1-secondary-channel: #bda822;\r\n\t\t\t\t--pitch1-primary-channel:   #fcdb00;\r\n\t\t\t\t--pitch1-secondary-note:    #bda822;\r\n\t\t\t\t--pitch1-primary-note:      #fcdb00;\r\n\t\t\t\t--pitch2-secondary-channel: #612278;\r\n\t\t\t\t--pitch2-primary-channel:   #bb00ff;\r\n\t\t\t\t--pitch2-secondary-note:    #612278;\r\n\t\t\t\t--pitch2-primary-note:      #bb00ff;\r\n\t\t\t\t--pitch3-secondary-channel: #8b4343;\r\n\t\t\t\t--pitch3-primary-channel:   #ff8844;\r\n\t\t\t\t--pitch3-secondary-note:    #8b4343;\r\n\t\t\t\t--pitch3-primary-note:      #ff8844;\r\n\t\t\t\t--pitch4-secondary-channel: #bda822;\r\n\t\t\t\t--pitch4-primary-channel:   #fcdb00;\r\n\t\t\t\t--pitch4-secondary-note:    #bda822;\r\n\t\t\t\t--pitch4-primary-note:      #fcdb00;\r\n\t\t\t\t--pitch5-secondary-channel: #612278;\r\n\t\t\t\t--pitch5-primary-channel:   #bb00ff;\r\n\t\t\t\t--pitch5-secondary-note:    #612278;\r\n\t\t\t\t--pitch5-primary-note:      #bb00ff;\r\n\t\t\t\t--pitch6-secondary-channel: #8b4343;\r\n\t\t\t\t--pitch6-primary-channel:   #ff8844;\r\n\t\t\t\t--pitch6-secondary-note:    #8b4343;\r\n\t\t\t\t--pitch6-primary-note:      #ff8844;\r\n\t\t\t\t--pitch7-secondary-channel: #bda822;\r\n\t\t\t\t--pitch7-primary-channel:   #fcdb00;\r\n\t\t\t\t--pitch7-secondary-note:    #bda822;\r\n\t\t\t\t--pitch7-primary-note:      #fcdb00;\r\n\t\t\t\t--pitch8-secondary-channel: #612278;\r\n\t\t\t\t--pitch8-primary-channel:   #bb00ff;\r\n\t\t\t\t--pitch8-secondary-note:    #612278;\r\n\t\t\t\t--pitch8-primary-note:      #bb00ff;\r\n\t\t\t\t--pitch9-secondary-channel: #8b4343;\r\n\t\t\t\t--pitch9-primary-channel:   #ff8844;\r\n\t\t\t\t--pitch9-secondary-note:    #8b4343;\r\n\t\t\t\t--pitch9-primary-note:      #ff8844;\r\n\t\t\t\t--pitch10-secondary-channel: #bda822;\r\n\t\t\t\t--pitch10-primary-channel:   #fcdb00;\r\n\t\t\t\t--pitch10-secondary-note:    #bda822;\r\n\t\t\t\t--pitch10-primary-note:      #fcdb00;\r\n\t\t\t\t--noise1-secondary-channel: #991010;\r\n\t\t\t\t--noise1-secondary-channel: #6F6F6F;\r\n\t\t\t\t--noise1-primary-channel:   #AAAAAA;\r\n\t\t\t\t--noise1-secondary-note:    #A7A7A7;\r\n\t\t\t\t--noise1-primary-note:      #E0E0E0;\r\n\t\t\t\t--noise2-secondary-channel: #996633;\r\n\t\t\t\t--noise2-primary-channel:   #DDAA77;\r\n\t\t\t\t--noise2-secondary-note:    #CC9966;\r\n\t\t\t\t--noise2-primary-note:      #F0D0BB;\r\n\t\t\t\t--noise3-secondary-channel: #4A6D8F;\r\n\t\t\t\t--noise3-primary-channel:   #77AADD;\r\n\t\t\t\t--noise3-secondary-note:    #6F9FCF;\r\n\t\t\t\t--noise3-primary-note:      #BBD7FF;\r\n\t\t\t\t--noise4-secondary-channel: #7A4F9A;\r\n\t\t\t\t--noise4-primary-channel:   #AF82D2;\r\n\t\t\t\t--noise4-secondary-note:    #9E71C1;\r\n\t\t\t\t--noise4-primary-note:      #D4C1EA;\r\n\t\t\t\t--noise5-secondary-channel: #607837;\r\n\t\t\t\t--noise5-primary-channel:   #A2BB77;\r\n\t\t\t\t--noise5-secondary-note:    #91AA66;\r\n\t\t\t\t--noise5-primary-note:      #C5E2B2;\r\n          --mod1-secondary-channel:   #339955;\r\n\t\t\t\t\t--mod1-primary-channel:     #77fc55;\r\n\t\t\t\t\t--mod1-secondary-note:      #77ff8a;\r\n\t\t\t\t\t--mod1-primary-note:        #cdffee;\r\n\t\t\t\t\t--mod2-secondary-channel:   #993355;\r\n\t\t\t\t\t--mod2-primary-channel:     #f04960;\r\n\t\t\t\t\t--mod2-secondary-note:      #f057a0;\r\n\t\t\t\t\t--mod2-primary-note:        #ffb8de;\r\n\t\t\t\t\t--mod3-secondary-channel:   #553399;\r\n\t\t\t\t\t--mod3-primary-channel:     #8855fc;\r\n\t\t\t\t\t--mod3-secondary-note:      #aa64ff;\r\n\t\t\t\t\t--mod3-primary-note:\t    #f8ddff;\r\n\t\t\t\t\t--mod4-secondary-channel:   #a86436;\r\n\t\t\t\t\t--mod4-primary-channel:     #c8a825;\r\n\t\t\t\t\t--mod4-secondary-note:      #e8ba46;\r\n\t\t\t\t\t--mod4-primary-note:        #fff6d3;\r\n\t\t\t\t\t--mod-label-primary:        #999;\r\n\t\t\t\t\t--mod-label-secondary-text: #333;\r\n\t\t\t\t\t--mod-label-primary-text:   black;\r\n\t\t\t\t\t--disabled-note-primary:    #999;\r\n\t\t\t\t\t--disabled-note-secondary:  #666;\r\n\t\t\t\t}\r\n\t\t\t`,\r\n\t\t\t \"shitbox 2.0\": `\r\n\t\t\t:root {\r\n\t\t\t--page-margin: maroon;\r\n\t\t\t\t\t--editor-background: black;\r\n\t\t\t\t\t--hover-preview: white;\r\n\t\t\t\t\t--playhead: firebrick;\r\n\t\t\t\t\t--primary-text: silver;\r\n\t\t\t\t\t--secondary-text: #999;\r\n\t\t\t\t\t--inverted-text: black;\r\n\t\t\t\t--text-selection: rgba(139,69,19,0.99);\r\n\t\t\t\t\t--box-selection-fill: rgba(220,20,60,0.2);\r\n\t\t\t\t\t--loop-accent: #841;\r\n\t\t\t\t\t--link-accent: #841;\r\n\t\t\t\t\t--ui-widget-background: #800;\r\n\t\t\t\t\t--ui-widget-focus: #a00;\r\n\t\t\t\t\t--pitch-background: #700;\r\n\t\t\t\t\t--tonic: #522;\r\n\t\t\t\t\t--fifth-note: #f75;\r\n\t\t\t\t\t--white-piano-key: #bbb;\r\n\t\t\t\t\t--black-piano-key: #444;\r\n\t\t\t\t--white-piano-key-text: #131200;\r\n\t\t\t\t--black-piano-key-text: #fff;\r\n\t\t\t\t\t--use-color-formula: false;\r\n\t\t\t\t\t--track-editor-bg-pitch: #444;\r\n\t\t\t\t\t--track-editor-bg-pitch-dim: #333;\r\n\t\t\t\t\t--track-editor-bg-noise: #444;\r\n\t\t\t\t\t--track-editor-bg-noise-dim: #333;\r\n\t\t\t\t\t--track-editor-bg-mod: #234;\r\n\t\t\t\t\t--track-editor-bg-mod-dim: #123;\r\n\t\t\t\t\t--multiplicative-mod-slider: #456;\r\n\t\t\t\t\t--overwriting-mod-slider: #654;\r\n\t\t\t\t\t--indicator-primary: #74f;\r\n\t\t\t\t\t--indicator-secondary: #444;\r\n\t\t\t\t\t--select2-opt-group: #585858;\r\n\t\t\t\t\t--input-box-outline: #333;\r\n\t\t\t\t\t--mute-button-normal: #ffa033;\r\n\t\t\t\t\t--mute-button-mod: #9a6bff;\r\n\t\t\t\t--pitch1-secondary-channel: #7e4a35;\r\n\t\t\t\t\t--pitch1-primary-channel:   #c27251;\r\n\t\t\t\t\t--pitch1-secondary-note:    #7e4a35;\r\n\t\t\t\t\t--pitch1-primary-note:      #f09571;\r\n\t\t\t\t\t--pitch2-secondary-channel: #998a5c;\r\n\t\t\t\t\t--pitch2-primary-channel:   #d9c27c;\r\n\t\t\t\t\t--pitch2-secondary-note:    #998a5c;\r\n\t\t\t\t\t--pitch2-primary-note:      #fae196;\r\n\t\t\t\t\t--pitch3-secondary-channel: #9c927c;\r\n\t\t\t\t\t--pitch3-primary-channel:   #dbceb0;\r\n\t\t\t\t\t--pitch3-secondary-note:    #9c927c;\r\n\t\t\t\t\t--pitch3-primary-note:      #eddebb;\r\n\t\t\t\t\t--pitch4-secondary-channel: #838060;\r\n\t\t\t\t\t--pitch4-primary-channel:   #ccc795;\r\n\t\t\t\t\t--pitch4-secondary-note:    #838060;\r\n\t\t\t\t\t--pitch4-primary-note:      #f2ecb1;\r\n\t\t\t\t\t--pitch5-secondary-channel: #8b6f47;\r\n\t\t\t\t\t--pitch5-primary-channel:   #d1a76b;\r\n\t\t\t\t\t--pitch5-secondary-note:    #8b6f47;\r\n\t\t\t\t\t--pitch5-primary-note:      #ffcc82;\r\n\t\t\t\t\t--pitch6-secondary-channel: #a96e5b;\r\n\t\t\t\t\t--pitch6-primary-channel:   #e3967d;\r\n\t\t\t\t\t--pitch6-secondary-note:    #a96e5b;\r\n\t\t\t\t\t--pitch6-primary-note:      #ffa68a;\r\n\t\t\t\t\t\t--pitch7-secondary-channel: #7e4a35;\r\n\t\t\t\t\t--pitch7-primary-channel:   #c27251;\r\n\t\t\t\t\t--pitch7-secondary-note:    #7e4a35;\r\n\t\t\t\t\t--pitch7-primary-note:      #f09571;\r\n\t\t\t\t\t--pitch8-secondary-channel: #998a5c;\r\n\t\t\t\t\t--pitch8-primary-channel:   #d9c27c;\r\n\t\t\t\t\t--pitch8-secondary-note:    #998a5c;\r\n\t\t\t\t\t--pitch8-primary-note:      #fae196;\r\n\t\t\t\t\t--pitch9-secondary-channel: #9c927c;\r\n\t\t\t\t\t--pitch9-primary-channel:   #dbceb0;\r\n\t\t\t\t\t--pitch9-secondary-note:    #9c927c;\r\n\t\t\t\t\t--pitch9-primary-note:      #eddebb;\r\n\t\t\t\t\t--pitch10-secondary-channel: #838060;\r\n\t\t\t\t\t--pitch10-primary-channel:   #ccc795;\r\n\t\t\t\t\t--pitch10-secondary-note:    #838060;\r\n\t\t\t\t\t--pitch10-primary-note:      #f2ecb1;\r\n\t\t\t\t\t--noise1-secondary-channel: #6f6f6f;\r\n\t\t\t\t\t--noise1-primary-channel:   #aaaaaa;\r\n\t\t\t\t\t--noise1-secondary-note:    #a7a7a7;\r\n\t\t\t\t\t--noise1-primary-note:      #e0e0e0;\r\n\t\t\t\t\t--noise2-secondary-channel: #996633;\r\n\t\t\t\t\t--noise2-primary-channel:   #ddaa77;\r\n\t\t\t\t\t--noise2-secondary-note:    #cc9966;\r\n\t\t\t\t\t--noise2-primary-note:      #f0d0bb;\r\n\t\t\t\t\t--noise3-secondary-channel: #4a6d8f;\r\n\t\t\t\t\t--noise3-primary-channel:   #77aadd;\r\n\t\t\t\t\t--noise3-secondary-note:    #6f9fcf;\r\n\t\t\t\t\t--noise3-primary-note:      #bbd7ff;\r\n\t\t\t\t\t--noise4-secondary-channel: #6f6f6f;\r\n\t\t\t\t\t--noise4-primary-channel:   #aaaaaa;\r\n\t\t\t\t\t--noise4-secondary-note:    #a7a7a7;\r\n\t\t\t\t\t--noise4-primary-note:      #e0e0e0;\r\n\t\t\t\t\t--noise5-secondary-channel: #996633;\r\n\t\t\t\t\t--noise5-primary-channel:   #ddaa77;\r\n\t\t\t\t\t--noise5-secondary-note:    #cc9966;\r\n\t\t\t\t\t--noise5-primary-note:      #f0d0bb;\r\n         --mod1-secondary-channel: #7e4a35;\r\n\t\t\t\t\t--mod1-primary-channel:   #c27251;\r\n\t\t\t\t\t--mod1-secondary-note:    #7e4a35;\r\n\t\t\t\t\t--mod1-primary-note:      #f09571;\r\n\t\t\t\t\t--mod2-secondary-channel: #998a5c;\r\n\t\t\t\t\t--mod2-primary-channel:   #d9c27c;\r\n\t\t\t\t\t--mod2-secondary-note:    #998a5c;\r\n\t\t\t\t\t--mod2-primary-note:      #fae196;\r\n\t\t\t\t\t--mod3-secondary-channel: #9c927c;\r\n\t\t\t\t\t--mod3-primary-channel:   #dbceb0;\r\n\t\t\t\t\t--mod3-secondary-note:    #9c927c;\r\n\t\t\t\t\t--mod3-primary-note:      #eddebb;\r\n\t\t\t\t\t--mod4-secondary-channel: #838060;\r\n\t\t\t\t\t--mod4-primary-channel:   #ccc795;\r\n\t\t\t\t\t--mod4-secondary-note:    #838060;\r\n\t\t\t\t\t--mod4-primary-note:      #f2ecb1;\r\n\t\t\t\t\t--mod-label-primary:        #999;\r\n\t\t\t\t\t--mod-label-secondary-text: #333;\r\n\t\t\t\t\t--mod-label-primary-text:   black;\r\n\t\t\t\t\t--disabled-note-primary:    #999;\r\n\t\t\t\t\t--disabled-note-secondary:  #666;\r\n\t\t\t\t}\r\n\t\t\t`,\r\n\t\t\t \"shitbox 3.0\": `\r\n\t\t\t\r\n\t\t\t:root {\r\n\t\t\t\tfont: 20px/2 monospace;\r\n\t\t\t\t--page-margin: #252525;\r\n\t\t\t\t--editor-background: black;\r\n\t\t\t\t--hover-preview: white;\r\n\t\t\t\t--playhead: white;\r\n\t\t\t\t--primary-text: white;\r\n\t\t\t\t--secondary-text: #999;\r\n\t\t\t\t--inverted-text: black;\r\n\t\t\t\t--text-selection: rgba(119,68,255,0.99);\r\n\t\t\t\t--box-selection-fill: rgba(255,255,255,0.2);\r\n\t\t\t\t--loop-accent: #74f;\r\n\t\t\t\t--link-accent: #98f;\r\n\t\t\t\t--ui-widget-background: #444;\r\n\t\t\t\t--ui-widget-focus: #777;\r\n\t\t\t\t--pitch-background: #444;\r\n\t\t\t\t--tonic: #864;\r\n\t\t\t\t--fifth-note: #468;\r\n\t\t\t\t--white-piano-key: #bbb;\r\n\t\t\t\t--black-piano-key: #444;\r\n\t\t\t\t--white-piano-key-text: #131200;\r\n\t\t\t\t--black-piano-key-text: #fff;\r\n\t\t\t\t\t--use-color-formula: false;\r\n\t\t\t\t\t--track-editor-bg-pitch: #444;\r\n\t\t\t\t\t--track-editor-bg-pitch-dim: #333;\r\n\t\t\t\t\t--track-editor-bg-noise: #444;\r\n\t\t\t\t\t--track-editor-bg-noise-dim: #333;\r\n\t\t\t\t\t--track-editor-bg-mod: #234;\r\n\t\t\t\t\t--track-editor-bg-mod-dim: #123;\r\n\t\t\t\t\t--multiplicative-mod-slider: #456;\r\n\t\t\t\t\t--overwriting-mod-slider: #654;\r\n\t\t\t\t\t--indicator-primary: #74f;\r\n\t\t\t\t\t--indicator-secondary: #444;\r\n\t\t\t\t\t--select2-opt-group: #585858;\r\n\t\t\t\t\t--input-box-outline: #333;\r\n\t\t\t\t\t--mute-button-normal: #ffa033;\r\n\t\t\t\t\t--mute-button-mod: #9a6bff;\r\n\t\t\t\t--pitch1-secondary-channel: #0099A1;\r\n\t\t\t\t--pitch1-primary-channel:   #25F3FF;\r\n\t\t\t\t--pitch1-secondary-note:    #00BDC7;\r\n\t\t\t\t--pitch1-primary-note:      #92F9FF;\r\n\t\t\t\t--pitch2-secondary-channel: #A1A100;\r\n\t\t\t\t--pitch2-primary-channel:   #FFFF25;\r\n\t\t\t\t--pitch2-secondary-note:    #C7C700;\r\n\t\t\t\t--pitch2-primary-note:      #FFFF92;\r\n\t\t\t\t--pitch3-secondary-channel: #C75000;\r\n\t\t\t\t--pitch3-primary-channel:   #FF9752;\r\n\t\t\t\t--pitch3-secondary-note:    #FF771C;\r\n\t\t\t\t--pitch3-primary-note:      #FFCDAB;\r\n\t\t\t\t--pitch4-secondary-channel: #00A100;\r\n\t\t\t\t--pitch4-primary-channel:   #50FF50;\r\n\t\t\t\t--pitch4-secondary-note:    #00C700;\r\n\t\t\t\t--pitch4-primary-note:      #A0FFA0;\r\n\t\t\t\t--pitch5-secondary-channel: #D020D0;\r\n\t\t\t\t--pitch5-primary-channel:   #FF90FF;\r\n\t\t\t\t--pitch5-secondary-note:    #E040E0;\r\n\t\t\t\t--pitch5-primary-note:      #FFC0FF;\r\n\t\t\t\t--pitch6-secondary-channel: #7777B0;\r\n\t\t\t\t--pitch6-primary-channel:   #A0A0FF;\r\n\t\t\t\t--pitch6-secondary-note:    #8888D0;\r\n\t\t\t\t--pitch6-primary-note:      #D0D0FF;\r\n\t\t\t\t--pitch7-secondary-channel: #8AA100;\r\n\t\t\t\t--pitch7-primary-channel:   #DEFF25;\r\n\t\t\t\t--pitch7-secondary-note:    #AAC700;\r\n\t\t\t\t--pitch7-primary-note:      #E6FF92;\r\n\t\t\t\t--pitch8-secondary-channel: #DF0019;\r\n\t\t\t\t--pitch8-primary-channel:   #FF98A4;\r\n\t\t\t\t--pitch8-secondary-note:    #FF4E63;\r\n\t\t\t\t--pitch8-primary-note:      #FFB2BB;\r\n\t\t\t\t--pitch9-secondary-channel: #00A170;\r\n\t\t\t\t--pitch9-primary-channel:   #50FFC9;\r\n\t\t\t\t--pitch9-secondary-note:    #00C78A;\r\n\t\t\t\t--pitch9-primary-note:      #83FFD9;\r\n\t\t\t\t--pitch10-secondary-channel:#A11FFF;\r\n\t\t\t\t--pitch10-primary-channel:  #CE8BFF;\r\n\t\t\t\t--pitch10-secondary-note:   #B757FF;\r\n\t\t\t\t--pitch10-primary-note:     #DFACFF;\r\n\t\t\t\t--noise1-secondary-channel: #6F6F6F;\r\n\t\t\t\t--noise1-primary-channel:   #AAAAAA;\r\n\t\t\t\t--noise1-secondary-note:    #A7A7A7;\r\n\t\t\t\t--noise1-primary-note:      #E0E0E0;\r\n\t\t\t\t--noise2-secondary-channel: #996633;\r\n\t\t\t\t--noise2-primary-channel:   #DDAA77;\r\n\t\t\t\t--noise2-secondary-note:    #CC9966;\r\n\t\t\t\t--noise2-primary-note:      #F0D0BB;\r\n\t\t\t\t--noise3-secondary-channel: #4A6D8F;\r\n\t\t\t\t--noise3-primary-channel:   #77AADD;\r\n\t\t\t\t--noise3-secondary-note:    #6F9FCF;\r\n\t\t\t\t--noise3-primary-note:      #BBD7FF;\r\n\t\t\t\t--noise4-secondary-channel: #7A4F9A;\r\n\t\t\t\t--noise4-primary-channel:   #AF82D2;\r\n\t\t\t\t--noise4-secondary-note:    #9E71C1;\r\n\t\t\t\t--noise4-primary-note:      #D4C1EA;\r\n\t\t\t\t--noise5-secondary-channel: #607837;\r\n\t\t\t\t--noise5-primary-channel:   #A2BB77;\r\n\t\t\t\t--noise5-secondary-note:    #91AA66;\r\n\t\t\t\t--noise5-primary-note:      #C5E2B2;\r\n          --mod1-secondary-channel:   #339955;\r\n\t\t\t\t\t--mod1-primary-channel:     #77fc55;\r\n\t\t\t\t\t--mod1-secondary-note:      #77ff8a;\r\n\t\t\t\t\t--mod1-primary-note:        #cdffee;\r\n\t\t\t\t\t--mod2-secondary-channel:   #993355;\r\n\t\t\t\t\t--mod2-primary-channel:     #f04960;\r\n\t\t\t\t\t--mod2-secondary-note:      #f057a0;\r\n\t\t\t\t\t--mod2-primary-note:        #ffb8de;\r\n\t\t\t\t\t--mod3-secondary-channel:   #553399;\r\n\t\t\t\t\t--mod3-primary-channel:     #8855fc;\r\n\t\t\t\t\t--mod3-secondary-note:      #aa64ff;\r\n\t\t\t\t\t--mod3-primary-note:\t    #f8ddff;\r\n\t\t\t\t\t--mod4-secondary-channel:   #a86436;\r\n\t\t\t\t\t--mod4-primary-channel:     #c8a825;\r\n\t\t\t\t\t--mod4-secondary-note:      #e8ba46;\r\n\t\t\t\t\t--mod4-primary-note:        #fff6d3;\r\n\t\t\t\t\t--mod-label-primary:        #999;\r\n\t\t\t\t\t--mod-label-secondary-text: #333;\r\n\t\t\t\t\t--mod-label-primary-text:   black;\r\n\t\t\t\t\t--disabled-note-primary:    #999;\r\n\t\t\t\t\t--disabled-note-secondary:  #666;\r\n\t\t\t\t}\r\n\t\t\t\r\n\t\t\t`,\r\n\t\t\t\"nerdbox\": `\r\n\t\t\t:root {\r\n\t\t\t\t--page-margin: black;\r\n\t\t\t\t--editor-background: black;\r\n\t\t\t\t--hover-preview: white;\r\n\t\t\t\t--playhead: white;\r\n\t\t\t\t--primary-text: white;\r\n\t\t\t\t--secondary-text: #999;\r\n\t\t\t\t--inverted-text: black;\r\n\t\t\t\t--text-selection: rgba(119,68,255,0.99);\r\n\t\t\t\t--box-selection-fill: rgba(255,255,255,0.2);\r\n\t\t\t\t--loop-accent: #74f;\r\n\t\t\t\t--link-accent: #98f;\r\n\t\t\t\t--ui-widget-background: #444;\r\n\t\t\t\t--ui-widget-focus: #777;\r\n\t\t\t\t--pitch-background: #444;\r\n\t\t\t\t--tonic: #864;\r\n\t\t\t\t--fifth-note: #468;\r\n\t\t\t\t--white-piano-key: #bbb;\r\n\t\t\t\t--black-piano-key: #444;\r\n\t\t\t\t--white-piano-key-text: #131200;\r\n\t\t\t\t--black-piano-key-text: #fff;\r\n\t\t\t\t\t--use-color-formula: false;\r\n\t\t\t\t\t--track-editor-bg-pitch: #444;\r\n\t\t\t\t\t--track-editor-bg-pitch-dim: #333;\r\n\t\t\t\t\t--track-editor-bg-noise: #444;\r\n\t\t\t\t\t--track-editor-bg-noise-dim: #333;\r\n\t\t\t\t\t--track-editor-bg-mod: #234;\r\n\t\t\t\t\t--track-editor-bg-mod-dim: #123;\r\n\t\t\t\t\t--multiplicative-mod-slider: #456;\r\n\t\t\t\t\t--overwriting-mod-slider: #654;\r\n\t\t\t\t\t--indicator-primary: #74f;\r\n\t\t\t\t\t--indicator-secondary: #444;\r\n\t\t\t\t\t--select2-opt-group: #585858;\r\n\t\t\t\t\t--input-box-outline: #333;\r\n\t\t\t\t\t--mute-button-normal: #ffa033;\r\n\t\t\t\t\t--mute-button-mod: #9a6bff;\r\n\t\t\t\t--pitch1-secondary-channel: #139620;\r\n\t\t\t\t--pitch1-primary-channel:   #25ff3a;\r\n\t\t\t\t--pitch1-secondary-note:    #139620;\r\n\t\t\t\t--pitch1-primary-note:      #25ff3a;\r\n\t\t\t\t--pitch2-secondary-channel: #109986;\r\n\t\t\t\t--pitch2-primary-channel:   #1cffe0;\r\n\t\t\t\t--pitch2-secondary-note:    #109986;\r\n\t\t\t\t--pitch2-primary-note:      #1cffe0;\r\n\t\t\t\t--pitch3-secondary-channel: #127296;\r\n\t\t\t\t--pitch3-primary-channel:   #21c3ff;\r\n\t\t\t\t--pitch3-secondary-note:    #127296;\r\n\t\t\t\t--pitch3-primary-note:      #21c3ff;\r\n\t\t\t\t--pitch4-secondary-channel: #6038a5;\r\n\t\t\t\t--pitch4-primary-channel:   #9456ff;\r\n\t\t\t\t--pitch4-secondary-note:    #6038a5;\r\n\t\t\t\t--pitch4-primary-note:      #ff35e0;\r\n\t\t\t\t--pitch5-secondary-channel: #a52491;\r\n\t\t\t\t--pitch5-primary-channel:   #ff35e0;\r\n\t\t\t\t--pitch5-secondary-note:    #a52491;\r\n\t\t\t\t--pitch5-primary-note:      #af3221;\r\n\t\t\t\t--pitch6-secondary-channel: #af3221;\r\n\t\t\t\t--pitch6-primary-channel:   #ff4a32;\r\n\t\t\t\t--pitch6-secondary-note:    #af3221;\r\n\t\t\t\t--pitch6-primary-note:      #ff4a32;\r\n\t\t\t\t--pitch7-secondary-channel: #ad6e0f;\r\n\t\t\t\t--pitch7-primary-channel:   #ffa216;\r\n\t\t\t\t--pitch7-secondary-note:    #ad6e0f;\r\n\t\t\t\t--pitch7-primary-note:      #ffa216;\r\n\t\t\t\t--pitch8-secondary-channel: #a7b512;\r\n\t\t\t\t--pitch8-primary-channel:   #ebff19;\r\n\t\t\t\t--pitch8-secondary-note:    #a7b512;\r\n\t\t\t\t--pitch8-primary-note:      #ebff19;\r\n\t\t\t\t--pitch9-secondary-channel: #70ad1b;\r\n\t\t\t\t--pitch9-primary-channel:   #a4ff26;\r\n\t\t\t\t--pitch9-secondary-note:    #70ad1b;\r\n\t\t\t\t--pitch9-primary-note:      #a4ff26;\r\n\t\t\t\t--pitch10-secondary-channel:#5D9620;\r\n\t\t\t\t--pitch10-primary-channel:  #5DBE20;\r\n\t\t\t\t--pitch10-secondary-note:   #5D9620;\r\n\t\t\t\t--pitch10-primary-note:     #5DBE20;\r\n\t\t\t\t--noise1-secondary-channel: #68706f;\r\n\t\t\t\t--noise1-primary-channel:   #a6b2b1;\r\n\t\t\t\t--noise1-secondary-note:    #68706f;\r\n\t\t\t\t--noise1-primary-note:      #a6b2b1;\r\n\t\t\t\t--noise2-secondary-channel: #665c64;\r\n\t\t\t\t--noise2-primary-channel:   #a396a1;\r\n\t\t\t\t--noise2-secondary-note:    #665c64;\r\n\t\t\t\t--noise2-primary-note:      #a396a1;\r\n\t\t\t\t--noise3-secondary-channel: #60605a;\r\n\t\t\t\t--noise3-primary-channel:   #afaea3;\r\n\t\t\t\t--noise3-secondary-note:    #60605a;\r\n\t\t\t\t--noise3-primary-note:      #afaea3;\r\n\t\t\t--noise4-secondary-channel: #665c64;\r\n\t\t\t--noise4-primary-channel:   #a396a1;\r\n\t\t\t\t--noise4-secondary-note:    #665c64;\r\n\t\t\t\t--noise4-primary-note:      #a396a1;\r\n\t\t\t\t--noise5-secondary-channel: #60605a;\r\n\t\t\t\t--noise5-primary-channel:   #afaea3;\r\n\t\t\t\t--noise5-secondary-note:    #60605a;\r\n\t\t\t\t--noise5-primary-note:      #afaea3;\r\n         --mod1-secondary-channel: #139620;\r\n\t\t\t\t--mod1-primary-channel:   #25ff3a;\r\n\t\t\t\t--mod1-secondary-note:    #139620;\r\n\t\t\t\t--mod1-primary-note:      #25ff3a;\r\n\t\t\t\t--mod2-secondary-channel: #109986;\r\n\t\t\t\t--mod2-primary-channel:   #1cffe0;\r\n\t\t\t\t--mod2-secondary-note:    #109986;\r\n\t\t\t\t--mod2-primary-note:      #1cffe0;\r\n\t\t\t\t--mod3-secondary-channel: #127296;\r\n\t\t\t\t--mod3-primary-channel:   #21c3ff;\r\n\t\t\t\t--mod3-secondary-note:    #127296;\r\n\t\t\t\t--mod3-primary-note:      #21c3ff;\r\n\t\t\t\t--mod4-secondary-channel: #6038a5;\r\n\t\t\t\t--mod4-primary-channel:   #9456ff;\r\n\t\t\t\t--mod4-secondary-note:    #6038a5;\r\n\t\t\t\t--mod4-primary-note:      #ff35e0;\r\n\t\t\t\t\t--mod-label-primary:        #999;\r\n\t\t\t\t\t--mod-label-secondary-text: #333;\r\n\t\t\t\t\t--mod-label-primary-text:   black;\r\n\t\t\t\t\t--disabled-note-primary:    #999;\r\n\t\t\t\t\t--disabled-note-secondary:  #666;\r\n\t\t\t\t}\r\n\t\t\t`,\r\n\t\t\t \"cardboardbox classic\": `\r\n\t\t\t\t:root {\r\n\t\t\t\t\t--page-margin: #0f0700;\r\n--editor-background: #0f0700;\r\n--hover-preview: #75461d;\r\n--playhead: #75461d;\r\n--primary-text: #ddd;\r\n--secondary-text: #8e695b;\r\n--inverted-text: black;\r\n--text-selection: #75461d;\r\n--box-selection-fill: rgba(117, 70, 29,0.5);\r\n--loop-accent: #75461d;\r\n--link-accent: #75461d;\r\n--ui-widget-background: #574a3e;\r\n--ui-widget-focus: #756453;\r\n--pitch-background: #361900;\r\n--tonic: #fdba9a;\r\n--fifth-note: #7f78d2;\r\n--white-piano-key: #bbb;\r\n--black-piano-key: #444;\r\n--use-color-formula: false;\r\n--track-editor-bg-pitch: #444;\r\n--track-editor-bg-pitch-dim: #333;\r\n--track-editor-bg-noise: #444;\r\n--track-editor-bg-noise-dim: #333;\r\n--track-editor-bg-mod: #234;\r\n--track-editor-bg-mod-dim: #123;\r\n--multiplicative-mod-slider: #456;\r\n--overwriting-mod-slider: #654;\r\n--indicator-primary: #74f;\r\n--indicator-secondary: #444;\r\n--select2-opt-group: #585858;\r\n--input-box-outline: #333;\r\n--mute-button-normal: #ffa033;\r\n--mute-button-mod: #9a6bff;\r\n--pitch1-secondary-channel: #798566;\r\n--pitch1-primary-channel: #9dab86;\r\n--pitch1-secondary-note: #798566;\r\n--pitch1-primary-note: #9dab86;\r\n--pitch2-secondary-channel: #a6733d;\r\n--pitch2-primary-channel: #e6a157;\r\n--pitch2-secondary-note: #a6733d;\r\n--pitch2-primary-note: #e6a157;\r\n--pitch3-secondary-channel: #874c27;\r\n--pitch3-primary-channel: #eb8242;\r\n--pitch3-secondary-note: #874c27;\r\n--pitch3-primary-note: #eb8242;\r\n--pitch4-secondary-channel: #395866;\r\n--pitch4-primary-channel: #537d91;\r\n--pitch4-secondary-note: #395866;\r\n--pitch4-primary-note: #537d91;\r\n--pitch5-secondary-channel: #779992;\r\n--pitch5-primary-channel: #a4d1c8;\r\n--pitch5-secondary-note: #779992;\r\n--pitch5-primary-note: #a4d1c8;\r\n--pitch6-secondary-channel: #7777b0;\r\n--pitch6-primary-channel: #a0a0ff;\r\n--pitch6-secondary-note: #8888d0;\r\n--pitch6-primary-note: #d0d0ff;\r\n--pitch7-secondary-channel: #300707;\r\n--pitch7-primary-channel: #560d0d;\r\n--pitch7-secondary-note: #300707;\r\n--pitch7-primary-note: #560d0d;\r\n--pitch8-secondary-channel: #486312;\r\n--pitch8-primary-channel: #76a21e;\r\n--pitch8-secondary-note: #486312;\r\n--pitch8-primary-note: #76a21e;\r\n--pitch9-secondary-channel: #4a1242;\r\n--pitch9-primary-channel: #721b65;\r\n--pitch9-secondary-note: #4a1242;\r\n--pitch9-primary-note: #721b65;\r\n--pitch10-secondary-channel: #7a312d;\r\n--pitch10-primary-channel: #f8615a;\r\n--pitch10-secondary-note: #7a312d;\r\n--pitch10-primary-note: #f8615a;\r\n--noise1-secondary-channel: #5f6582;\r\n--noise1-primary-channel: #a6b1e1;\r\n--noise1-secondary-note: #5f6582;\r\n--noise1-primary-note: #a6b1e1;\r\n--noise2-secondary-channel: #996633;\r\n--noise2-primary-channel: #ddaa77;\r\n--noise2-secondary-note: #cc9966;\r\n--noise2-primary-note: #f0d0bb;\r\n--noise3-secondary-channel: #4a6d8f;\r\n--noise3-primary-channel: #77aadd;\r\n--noise3-secondary-note: #6f9fcf;\r\n--noise3-primary-note: #bbd7ff;\r\n--noise4-secondary-channel: #6B3E8E;\r\n--noise4-primary-channel: #AF82D2;\r\n--noise4-secondary-note: #9E71C1;\r\n--noise4-primary-note: #D4C1EA;\r\n--noise5-secondary-channel: #996633;\r\n--noise5-primary-channel: #ddaa77;\r\n--noise5-secondary-note: #cc9966;\r\n--noise5-primary-note: #f0d0bb;\r\n--mod1-secondary-channel: #339955;\r\n--mod1-primary-channel: #77fc55;\r\n--mod1-secondary-note: #77ff8a;\r\n--mod1-primary-note: #cdffee;\r\n--mod2-secondary-channel: #993355;\r\n--mod2-primary-channel: #f04960;\r\n--mod2-secondary-note: #f057a0;\r\n--mod2-primary-note: #ffb8de;\r\n--mod3-secondary-channel: #553399;\r\n--mod3-primary-channel: #8855fc;\r\n--mod3-secondary-note: #aa64ff;\r\n--mod3-primary-note: #f8ddff;\r\n--mod4-secondary-channel: #a86436;\r\n--mod4-primary-channel: #c8a825;\r\n--mod4-secondary-note: #e8ba46;\r\n--mod4-primary-note: #fff6d3;\r\n--mod-label-primary: #999;\r\n--mod-label-secondary-text: #333;\r\n--mod-label-primary-text: black;\r\n\t\t\t\t}\r\n\t\t\t`,\r\n\t\t\t\"blubox classic\": `\r\n\t\t\t:root {\r\n\t\t\t\t--page-margin: #040410;\r\n\t\t\t\t\t--editor-background: #040410;\r\n\t\t\t\t\t--hover-preview: white;\r\n\t\t\t\t\t--playhead: white;\r\n\t\t\t\t\t--primary-text: white;\r\n\t\t\t\t\t--secondary-text: #84859a;\r\n\t\t\t\t\t--inverted-text: black;\r\n\t\t\t\t\t--text-selection: rgba(119,68,255,0.99);\r\n\t\t\t\t\t--box-selection-fill: #044b94;\r\n\t\t\t\t\t--loop-accent: #74f;\r\n\t\t\t\t\t--link-accent: #024ACA;\r\n\t\t\t\t\t--ui-widget-background: #393e4f;\r\n\t\t\t\t\t--ui-widget-focus: #6d6886;\r\n\t\t\t\t\t--pitch-background: #393e4f;\r\n\t\t\t\t\t--tonic: #725491;\r\n\t\t\t\t\t--fifth-note: #54547a;\r\n\t\t\t\t\t--white-piano-key: #bbb;\r\n\t\t\t\t\t--black-piano-key: #444;\r\n\t\t\t\t\t--use-color-formula: false;\r\n\t\t\t\t\t--track-editor-bg-pitch: #393e4f;\r\n\t\t\t\t\t--track-editor-bg-pitch-dim: #1c1d28;\r\n\t\t\t\t\t--track-editor-bg-noise: #3d3535;\r\n\t\t\t\t\t--track-editor-bg-noise-dim: #161313;\r\n\t\t\t\t\t--track-editor-bg-mod: #283560;\r\n\t\t\t\t\t--track-editor-bg-mod-dim: #0a101f;\r\n\t\t\t\t\t--multiplicative-mod-slider: #606c9f;\r\n\t\t\t\t\t--overwriting-mod-slider: #6850b5;\r\n\t\t\t\t\t--indicator-primary: #9c64f7;\r\n\t\t\t\t\t--indicator-secondary: #393e4f;\r\n\t\t\t\t\t--select2-opt-group: #5d576f;\r\n\t\t\t\t\t--input-box-outline: #222;\r\n\t\t\t\t\t--mute-button-normal: #886eae;\r\n\t\t\t\t\t--mute-button-mod: #9a6bff;\r\n\t\t\t\t\t--pitch1-secondary-channel: #0A89FF;\r\n\t\t\t\t\t--pitch1-primary-channel:   #024ACA;\r\n\t\t\t\t\t--pitch1-secondary-note:    #0A89FF;\r\n\t\t\t\t\t--pitch1-primary-note:      #024ACA;\r\n\t\t\t\t\t--pitch2-secondary-channel: #0A89FF;\r\n\t\t\t\t\t--pitch2-primary-channel:   #024ACA;\r\n\t\t\t\t\t--pitch2-secondary-note:    #0A89FF;\r\n\t\t\t\t\t--pitch2-primary-note:      #024ACA;\r\n\t\t\t\t\t--pitch3-secondary-channel: #0A89FF;\r\n\t\t\t\t\t--pitch3-primary-channel:   #024ACA;\r\n\t\t\t\t\t--pitch3-secondary-note:    #0A89FF;\r\n\t\t\t\t\t--pitch3-primary-note:      #024ACA;\r\n\t\t\t\t\t--pitch4-secondary-channel: #0A89FF;\r\n\t\t\t\t\t--pitch4-primary-channel:   #024ACA;\r\n\t\t\t\t\t--pitch4-secondary-note:    #0A89FF;\r\n\t\t\t\t\t--pitch4-primary-note:      #024ACA;\r\n\t\t\t\t\t--pitch5-secondary-channel: #0A89FF;\r\n\t\t\t\t\t--pitch5-primary-channel:   #024ACA;\r\n\t\t\t\t\t--pitch5-secondary-note:    #0A89FF;\r\n\t\t\t\t\t--pitch5-primary-note:      #024ACA;\r\n\t\t\t\t\t--pitch6-secondary-channel: #0A89FF;\r\n\t\t\t\t\t--pitch6-primary-channel:   #024ACA;\r\n\t\t\t\t\t--pitch6-secondary-note:    #0A89FF;\r\n\t\t\t\t\t--pitch6-primary-note:      #024ACA;\r\n\t\t\t\t\t--pitch7-secondary-channel: #0A89FF;\r\n\t\t\t\t\t--pitch7-primary-channel:   #024ACA;\r\n\t\t\t\t\t--pitch7-secondary-note:\t  #0A89FF;\r\n\t\t\t\t\t--pitch7-primary-note:\t\t\t#024ACA;\r\n\t\t\t\t\t--pitch8-secondary-channel: #0A89FF;\r\n\t\t\t\t\t--pitch8-primary-channel:   #024ACA;\r\n\t\t\t\t\t--pitch8-secondary-note:    #0A89FF;\r\n\t\t\t\t\t--pitch8-primary-note:      #024ACA;\r\n\t\t\t\t\t--pitch9-secondary-channel: #0A89FF;\r\n\t\t\t\t\t--pitch9-primary-channel:   #024ACA;\r\n\t\t\t\t\t--pitch9-secondary-note:    #0A89FF;\r\n\t\t\t\t\t--pitch9-primary-note:\t\t\t#024ACA;\r\n\t\t\t\t\t--pitch10-secondary-channel:#0A89FF;\r\n\t\t\t\t\t--pitch10-primary-channel:  #024ACA;\r\n\t\t\t\t\t--pitch10-secondary-note:   #0A89FF;\r\n\t\t\t\t\t--pitch10-primary-note:     #024ACA;\r\n\t\t\t\t\t--noise1-secondary-channel: #0A89FF;\r\n\t\t\t\t\t--noise1-primary-channel:   #024ACA;\r\n\t\t\t\t\t--noise1-secondary-note:    #0A89FF;\r\n\t\t\t\t\t--noise1-primary-note:      #024ACA;\r\n\t\t\t\t\t--noise2-secondary-channel: #0A89FF;\r\n\t\t\t\t\t--noise2-primary-channel:   #024ACA;\r\n\t\t\t\t\t--noise2-secondary-note:    #0A89FF;\r\n\t\t\t\t\t--noise2-primary-note:      #024ACA;\r\n\t\t\t\t\t--noise3-secondary-channel: #0A89FF;\r\n\t\t\t\t\t--noise3-primary-channel:   #024ACA;\r\n\t\t\t\t\t--noise3-secondary-note:    #0A89FF;\r\n\t\t\t\t\t--noise3-primary-note:      #024ACA;\r\n\t\t\t\t\t--noise4-secondary-channel: #0A89FF;\r\n\t\t\t\t\t--noise4-primary-channel:   #024ACA;\r\n\t\t\t\t\t--noise4-secondary-note:    #0A89FF;\r\n\t\t\t\t\t--noise4-primary-note:      #024ACA;\r\n\t\t--mod1-secondary-channel:   #0A89FF;\r\n\t\t\t\t\t--mod1-primary-channel:     #024ACA;\r\n\t\t\t\t\t--mod1-secondary-note:      #0A89FF;\r\n\t\t\t\t\t--mod1-primary-note:        #024ACA;\r\n\t\t\t\t\t--mod2-secondary-channel:   #0A89FF;\r\n\t\t\t\t\t--mod2-primary-channel:     #024ACA;\r\n\t\t\t\t\t--mod2-secondary-note:      #0A89FF;\r\n\t\t\t\t\t--mod2-primary-note:        #024ACA;\r\n\t\t\t\t\t--mod3-secondary-channel:   #0A89FF;\r\n\t\t\t\t\t--mod3-primary-channel:     #024ACA;\r\n\t\t\t\t\t--mod3-secondary-note:      #0A89FF;\r\n\t\t\t\t\t--mod3-primary-note:\t\t\t  #024ACA;\r\n\t\t\t\t\t--mod4-secondary-channel:   #0A89FF;\r\n\t\t\t\t\t--mod4-primary-channel:     #024ACA;\r\n\t\t\t\t\t--mod4-secondary-note:      #0A89FF;\r\n\t\t\t\t\t--mod4-primary-note:        #024ACA;\r\n\t\t\t\t\t--mod-label-primary:        #282840;\r\n\t\t\t\t\t--mod-label-secondary-text: rgb(87, 86, 120);\r\n\t\t\t\t\t--mod-label-primary-text:   white;\r\n\t\t\t\t}\r\n\t\t\t`,\r\n\t\t\"dogebox classic\": `\r\n\t\t\t\t:root {\r\n\t\t\t\t\t--page-margin: #0d0063;\r\n--editor-background: #0D0063;\r\n--hover-preview: white;\r\n--playhead: white;\r\n--primary-text: white;\r\n--secondary-text: #999;\r\n--inverted-text: black;\r\n--text-selection: rgba(119,68,255,0.99);\r\n--box-selection-fill: rgba(255,255,255,0.2);\r\n--loop-accent: #74f;\r\n--link-accent: #98f;\r\n--ui-widget-background: #444;\r\n--ui-widget-focus: #777;\r\n--pitch-background: #322c59;\r\n--tonic: #1c1933;\r\n--fifth-note: #7b74ad;\r\n--white-piano-key: #bbb;\r\n--black-piano-key: #444;\r\n\t\t\t\t--white-piano-key-text: #131200;\r\n\t\t\t\t--black-piano-key-text: #fff;\r\n\t\t\t\t\t--use-color-formula: false;\r\n\t\t\t\t\t--track-editor-bg-pitch: #444;\r\n\t\t\t\t\t--track-editor-bg-pitch-dim: #333;\r\n\t\t\t\t\t--track-editor-bg-noise: #444;\r\n\t\t\t\t\t--track-editor-bg-noise-dim: #333;\r\n\t\t\t\t\t--track-editor-bg-mod: #234;\r\n\t\t\t\t\t--track-editor-bg-mod-dim: #123;\r\n\t\t\t\t\t--multiplicative-mod-slider: #456;\r\n\t\t\t\t\t--overwriting-mod-slider: #654;\r\n\t\t\t\t\t--indicator-primary: #74f;\r\n\t\t\t\t\t--indicator-secondary: #444;\r\n\t\t\t\t\t--select2-opt-group: #585858;\r\n\t\t\t\t\t--input-box-outline: #333;\r\n\t\t\t\t\t--mute-button-normal: #ffa033;\r\n\t\t\t\t\t--mute-button-mod: #9a6bff;\r\n--pitch1-secondary-channel: #c7ac00;\r\n--pitch1-primary-channel: #fcf403;\r\n--pitch1-secondary-note: #c7c700;\r\n--pitch1-primary-note: #fcf403;\r\n--pitch2-secondary-channel: #9400b5;\r\n--pitch2-primary-channel: #ff00ee;\r\n--pitch2-secondary-note: #9400b5;\r\n--pitch2-primary-note: #ff00ee;\r\n--pitch3-secondary-channel: #b37466;\r\n--pitch3-primary-channel: #ffc6a1;\r\n--pitch3-secondary-note: #b37466;\r\n--pitch3-primary-note: #ffc6a1;\r\n--pitch4-secondary-channel: #00a100;\r\n--pitch4-primary-channel: #50ff50;\r\n--pitch4-secondary-note: #00c700;\r\n--pitch4-primary-note: #a0ffa0;\r\n--pitch5-secondary-channel: #d020d0;\r\n--pitch5-primary-channel: #ff90ff;\r\n--pitch5-secondary-note: #e040e0;\r\n--pitch5-primary-note: #ffc0ff;\r\n--pitch6-secondary-channel: #7777b0;\r\n--pitch6-primary-channel: #a0a0ff;\r\n--pitch6-secondary-note: #8888d0;\r\n--pitch6-primary-note: #d0d0ff;\r\n--pitch7-secondary-channel: #c7ac00;\r\n--pitch7-primary-channel: #fcf403;\r\n--pitch7-secondary-note: #c7c700;\r\n--pitch7-primary-note: #fcf403;\r\n--pitch8-secondary-channel: #9400b5;\r\n--pitch8-primary-channel: #ff00ee;\r\n--pitch8-secondary-note: #9400b5;\r\n--pitch8-primary-note: #ff00ee;\r\n--pitch9-secondary-channel: #b37466;\r\n--pitch9-primary-channel: #ffc6a1;\r\n--pitch9-secondary-note: #b37466;\r\n--pitch9-primary-note: #ffc6a1;\r\n--pitch10-secondary-channel: #00a100;\r\n--pitch10-primary-channel: #50ff50;\r\n--pitch10-secondary-note: #00c700;\r\n--pitch10-primary-note: #a0ffa0;\r\n--noise1-secondary-channel: #95acad;\r\n--noise1-primary-channel: #cee9eb;\r\n--noise1-secondary-note: #95acad;\r\n--noise1-primary-note: #cee9eb;\r\n--noise2-secondary-channel: #996633;\r\n--noise2-primary-channel: #ddaa77;\r\n--noise2-secondary-note: #cc9966;\r\n--noise2-primary-note: #f0d0bb;\r\n--noise3-secondary-channel: #4a6d8f;\r\n--noise3-primary-channel: #77aadd;\r\n--noise3-secondary-note: #6f9fcf;\r\n--noise3-primary-note: #bbd7ff;\r\n--noise4-secondary-channel: #7c9b42;\r\n\t\t\t\t--noise4-primary-channel:   #a5ff00;\r\n\t\t\t\t--noise4-secondary-note:    #7c9b42;\r\n\t\t\t\t--noise4-primary-note:      #a5ff00;\r\n\t\t\t\t--noise5-secondary-channel: #7c9b42;\r\n\t\t\t\t--noise5-primary-channel:   #A2BB77;\r\n\t\t\t\t--noise5-secondary-note:    #91AA66;\r\n\t\t\t\t--noise5-primary-note:      #C5E2B2;\r\n       --mod1-secondary-channel: #c7ac00;\r\n--mod1-primary-channel: #fcf403;\r\n--mod1-secondary-note: #c7c700;\r\n--mod1-primary-note: #fcf403;\r\n--mod2-secondary-channel: #9400b5;\r\n--mod2-primary-channel: #ff00ee;\r\n--mod2-secondary-note: #9400b5;\r\n--mod2-primary-note: #ff00ee;\r\n--mod3-secondary-channel: #b37466;\r\n--mod3-primary-channel: #ffc6a1;\r\n--mod3-secondary-note: #b37466;\r\n--mod3-primary-note: #ffc6a1;\r\n--mod4-secondary-channel: #00a100;\r\n--mod4-primary-channel: #50ff50;\r\n--mod4-secondary-note: #00c700;\r\n--mod4-primary-note: #a0ffa0;\r\n\t\t\t\t\t--mod-label-primary:        #999;\r\n\t\t\t\t\t--mod-label-secondary-text: #333;\r\n\t\t\t\t\t--mod-label-primary-text:   black;\r\n\t\t\t\t\t--disabled-note-primary:    #999;\r\n\t\t\t\t\t--disabled-note-secondary:  #666;\r\n\t\t\t\t}\r\n\t\t\t`,\r\n\t\t  \"dogebox dark\": `\r\n\t\t\t\t:root {\r\n\t\t\t\t\t--page-margin: #0d0063;\r\n\t\t\t\t\t--editor-background: #0D0063;\r\n\t\t\t\t\t--hover-preview: white;\r\n\t\t\t\t\t--playhead: white;\r\n\t\t\t\t\t--primary-text: white;\r\n\t\t\t\t\t--secondary-text: #999;\r\n\t\t\t\t\t--inverted-text: black;\r\n\t\t\t\t\t--text-selection: rgba(119,68,255,0.99);\r\n\t\t\t\t\t--box-selection-fill: rgba(255,255,255,0.2);\r\n\t\t\t\t\t--loop-accent: #74f;\r\n\t\t\t\t\t--link-accent: #98f;\r\n\t\t\t\t\t--ui-widget-background: #444;\r\n\t\t\t\t\t--ui-widget-focus: #777;\r\n\t\t\t\t\t--pitch-background: #322c59;\r\n\t\t\t\t\t--tonic: #1c1933;\r\n\t\t\t\t\t--fifth-note: #7b74ad;\r\n\t\t\t\t\t--white-piano-key: #bbb;\r\n\t\t\t\t\t--black-piano-key: #444;\r\n\t\t\t\t\t--pitch1-secondary-channel: #c7ac00;\r\n\t\t\t\t\t--pitch1-primary-channel:   #fcf403;\r\n\t\t\t\t\t--pitch1-secondary-note:    #c7c700;\r\n\t\t\t\t\t--pitch1-primary-note:      #fcf403;\r\n\t\t\t\t\t--pitch2-secondary-channel: #9400b5;\r\n\t\t\t\t\t--pitch2-primary-channel:   #ff00ee;\r\n\t\t\t\t\t--pitch2-secondary-note:    #9400b5;\r\n\t\t\t\t\t--pitch2-primary-note:      #ff00ee;\r\n\t\t\t\t\t--pitch3-secondary-channel: #b37466;\r\n\t\t\t\t\t--pitch3-primary-channel:   #ffc6a1;\r\n\t\t\t\t\t--pitch3-secondary-note:    #b37466;\r\n\t\t\t\t\t--pitch3-primary-note:      #ffc6a1;\r\n\t\t\t\t\t--pitch4-secondary-channel: #00a100;\r\n\t\t\t\t\t--pitch4-primary-channel:   #50ff50;\r\n\t\t\t\t\t--pitch4-secondary-note:    #00c700;\r\n\t\t\t\t\t--pitch4-primary-note:      #a0ffa0;\r\n\t\t\t\t\t--pitch5-secondary-channel: #d020d0;\r\n\t\t\t\t\t--pitch5-primary-channel:   #ff90ff;\r\n\t\t\t\t\t--pitch5-secondary-note:    #e040e0;\r\n\t\t\t\t\t--pitch5-primary-note:      #ffc0ff;\r\n\t\t\t\t\t--pitch6-secondary-channel: #7777b0;\r\n\t\t\t\t\t--pitch6-primary-channel:   #a0a0ff;\r\n\t\t\t\t\t--pitch6-secondary-note:    #8888d0;\r\n\t\t\t\t\t--pitch6-primary-note:      #d0d0ff;\r\n\t\t\t\t\t--noise1-secondary-channel: #95acad;\r\n\t\t\t\t\t--noise1-primary-channel:   #cee9eb;\r\n\t\t\t\t\t--noise1-secondary-note:    #95acad;\r\n\t\t\t\t\t--noise1-primary-note:      #cee9eb;\r\n\t\t\t\t\t--noise2-secondary-channel: #996633;\r\n\t\t\t\t\t--noise2-primary-channel:   #ddaa77;\r\n\t\t\t\t\t--noise2-secondary-note:    #cc9966;\r\n\t\t\t\t\t--noise2-primary-note:      #f0d0bb;\r\n\t\t\t\t\t--noise3-secondary-channel: #4a6d8f;\r\n\t\t\t\t\t--noise3-primary-channel:   #77aadd;\r\n\t\t\t\t\t--noise3-secondary-note:    #6f9fcf;\r\n\t\t\t\t\t--noise3-primary-note:      #bbd7ff;\r\n\t\t\t\t}\r\n\t\t\t`,\r\n\t\t\t    \"todbox classic\": `\r\n\t\t\t\t:root {\r\n\t\t\t\t\t--page-margin: black;\r\n\t\t\t\t\t--editor-background: black;\r\n\t\t\t\t\t--hover-preview: white;\r\n\t\t\t\t\t--playhead: white;\r\n\t\t\t\t\t--primary-text: white;\r\n\t\t\t\t\t--secondary-text: #999;\r\n\t\t\t\t\t--inverted-text: black;\r\n\t\t\t\t\t--text-selection: rgba(119,68,255,0.99);\r\n\t\t\t\t\t--box-selection-fill: rgba(255,255,255,0.2);\r\n\t\t\t\t\t--loop-accent: #74f;\r\n\t\t\t\t\t--link-accent: #98f;\r\n\t\t\t\t\t--ui-widget-background: #444;\r\n\t\t\t\t\t--ui-widget-focus: #777;\r\n\t\t\t\t\t--pitch-background: #444;\r\n\t\t\t\t\t--tonic: #864;\r\n\t\t\t\t\t--fifth-note: #468;\r\n\t\t\t\t\t--white-piano-key: #bbb;\r\n\t\t\t\t\t--black-piano-key: #444;\r\n\t\t\t\t\t--pitch1-secondary-channel: #0099a1;\r\n\t\t\t\t\t--pitch1-primary-channel:   #25f3ff;\r\n\t\t\t\t\t--pitch1-secondary-note:    #00bdc7;\r\n\t\t\t\t\t--pitch1-primary-note:      #92f9ff;\r\n\t\t\t\t\t--pitch2-secondary-channel: #a1a100;\r\n\t\t\t\t\t--pitch2-primary-channel:   #ffff25;\r\n\t\t\t\t\t--pitch2-secondary-note:    #c7c700;\r\n\t\t\t\t\t--pitch2-primary-note:      #ffff92;\r\n\t\t\t\t\t--pitch3-secondary-channel: #c75000;\r\n\t\t\t\t\t--pitch3-primary-channel:   #ff9752;\r\n\t\t\t\t\t--pitch3-secondary-note:    #ff771c;\r\n\t\t\t\t\t--pitch3-primary-note:      #ffcdab;\r\n\t\t\t\t\t--pitch4-secondary-channel: #00a100;\r\n\t\t\t\t\t--pitch4-primary-channel:   #50ff50;\r\n\t\t\t\t\t--pitch4-secondary-note:    #00c700;\r\n\t\t\t\t\t--pitch4-primary-note:      #a0ffa0;\r\n\t\t\t\t\t--pitch5-secondary-channel: #d020d0;\r\n\t\t\t\t\t--pitch5-primary-channel:   #ff90ff;\r\n\t\t\t\t\t--pitch5-secondary-note:    #e040e0;\r\n\t\t\t\t\t--pitch5-primary-note:      #ffc0ff;\r\n\t\t\t\t\t--pitch6-secondary-channel: #7777b0;\r\n\t\t\t\t\t--pitch6-primary-channel:   #a0a0ff;\r\n\t\t\t\t\t--pitch6-secondary-note:    #8888d0;\r\n\t\t\t\t\t--pitch6-primary-note:      #d0d0ff;\r\n\t\t\t\t\t--pitch7-secondary-channel: #0099a1;\r\n\t\t\t\t\t--pitch7-primary-channel:   #25f3ff;\r\n\t\t\t\t\t--pitch7-secondary-note:    #00bdc7;\r\n\t\t\t\t\t--pitch7-primary-note:      #92f9ff;\r\n\t\t\t\t\t--pitch8-secondary-channel: #a1a100;\r\n\t\t\t\t\t--pitch8-primary-channel:   #ffff25;\r\n\t\t\t\t\t--pitch8-secondary-note:    #c7c700;\r\n\t\t\t\t\t--pitch8-primary-note:      #ffff92;\r\n\t\t\t\t\t--pitch9-secondary-channel: #c75000;\r\n\t\t\t\t\t--pitch9-primary-channel:   #ff9752;\r\n\t\t\t\t\t--pitch9-secondary-note:    #ff771c;\r\n\t\t\t\t\t--pitch9-primary-note:      #ffcdab;\r\n\t\t\t\t\t--pitch10-secondary-channel: #00a100;\r\n\t\t\t\t\t--pitch10-primary-channel:   #50ff50;\r\n\t\t\t\t\t--pitch10-secondary-note:    #00c700;\r\n\t\t\t\t\t--pitch10-primary-note:      #a0ffa0;\r\n\t\t\t\t\t--noise1-secondary-channel: #6f6f6f;\r\n\t\t\t\t\t--noise1-primary-channel:   #aaaaaa;\r\n\t\t\t\t\t--noise1-secondary-note:    #a7a7a7;\r\n\t\t\t\t\t--noise1-primary-note:      #e0e0e0;\r\n\t\t\t\t\t--noise2-secondary-channel: #996633;\r\n\t\t\t\t\t--noise2-primary-channel:   #ddaa77;\r\n\t\t\t\t\t--noise2-secondary-note:    #cc9966;\r\n\t\t\t\t\t--noise2-primary-note:      #f0d0bb;\r\n\t\t\t\t\t--noise3-secondary-channel: #4a6d8f;\r\n\t\t\t\t\t--noise3-primary-channel:   #77aadd;\r\n\t\t\t\t\t--noise3-secondary-note:    #6f9fcf;\r\n\t\t\t\t\t--noise3-primary-note:      #bbd7ff;\r\n\t\t\t\t\t--noise4-secondary-channel: #6f6f6f;\r\n\t\t\t\t\t--noise4-primary-channel:   #aaaaaa;\r\n\t\t\t\t\t--noise4-secondary-note:    #a7a7a7;\r\n\t\t\t\t\t--noise4-primary-note:      #e0e0e0;\r\n\t\t\t\t\t--noise5-secondary-channel: #996633;\r\n\t\t\t\t\t--noise5-primary-channel:   #ddaa77;\r\n\t\t\t\t\t--noise5-secondary-note:    #cc9966;\r\n\t\t\t\t\t--noise5-primary-note:      #f0d0bb;\r\n\t\t\t\t\t--mod1-secondary-channel: #0099a1;\r\n\t\t\t\t\t--mod1-primary-channel:   #25f3ff;\r\n\t\t\t\t\t--mod1-secondary-note:    #00bdc7;\r\n\t\t\t\t\t--mod1-primary-note:      #92f9ff;\r\n\t\t\t\t\t--mod2-secondary-channel: #a1a100;\r\n\t\t\t\t\t--mod2-primary-channel:   #ffff25;\r\n\t\t\t\t\t--mod2-secondary-note:    #c7c700;\r\n\t\t\t\t\t--mod2-primary-note:      #ffff92;\r\n\t\t\t\t\t--mod3-secondary-channel: #c75000;\r\n\t\t\t\t\t--mod3-primary-channel:   #ff9752;\r\n\t\t\t\t\t--mod3-secondary-note:    #ff771c;\r\n\t\t\t\t\t--mod3-primary-note:      #ffcdab;\r\n\t\t\t\t\t--mod4-secondary-channel: #00a100;\r\n\t\t\t\t\t--mod4-primary-channel:   #50ff50;\r\n\t\t\t\t\t--mod4-secondary-note:    #00c700;\r\n\t\t\t\t\t--mod4-primary-note:      #a0ffa0;\r\n\t\t\t\t\t--mod-label-primary:        #999;\r\n\t\t\t\t\t--mod-label-secondary-text: #333;\r\n\t\t\t\t\t--mod-label-primary-text:   black;\r\n\t\t\t\t\t--disabled-note-primary:    #999;\r\n\t\t\t\t\t--disabled-note-secondary:  #666;\r\n\t\t\t\t}\r\n\t\t\t`,\r\n\t\t\t \"todbox dark mode\": `\r\n\t\t\t:root {\r\n\t\t\t\t-webkit-text-stroke-width: 0.5px;\r\n\t\t\t\t\t--page-margin: black;\r\n\t\t\t\t\t--editor-background: black;\r\n\t\t\t\t\t--hover-preview: #999999;\r\n\t\t\t\t\t--playhead: #999999;\r\n\t\t\t\t\t--primary-text: #999999;\r\n\t\t\t\t\t--secondary-text: #444444;\r\n\t\t\t\t\t--inverted-text: black;\r\n\t\t\t\t--text-selection: #999999;\r\n\t\t\t\t\t--box-selection-fill: #999999;\r\n\t\t\t\t\t--loop-accent: #999999;\r\n\t\t\t\t\t--link-accent: #999999;\r\n\t\t\t\t\t--ui-widget-background: #222222;\r\n\t\t\t\t\t--ui-widget-focus: #444444;\r\n\t\t\t\t--pitch-background: #101010;\r\n\t\t\t\t\t--tonic: #404040;\r\n\t\t\t\t\t--fifth-note: #202020;\r\n\t\t\t\t\t--white-piano-key: #999999;\r\n\t\t\t\t\t--black-piano-key: #101010;\r\n\t\t\t\t--white-piano-key-text: #131200;\r\n\t\t\t\t--black-piano-key-text: #fff;\r\n\t\t\t\t\t--use-color-formula: false;\r\n\t\t\t\t\t--track-editor-bg-pitch: #444;\r\n\t\t\t\t\t--track-editor-bg-pitch-dim: #333;\r\n\t\t\t\t\t--track-editor-bg-noise: #444;\r\n\t\t\t\t\t--track-editor-bg-noise-dim: #333;\r\n\t\t\t\t\t--track-editor-bg-mod: #234;\r\n\t\t\t\t\t--track-editor-bg-mod-dim: #123;\r\n\t\t\t\t\t--multiplicative-mod-slider: #456;\r\n\t\t\t\t\t--overwriting-mod-slider: #654;\r\n\t\t\t\t\t--indicator-primary: #74f;\r\n\t\t\t\t\t--indicator-secondary: #444;\r\n\t\t\t\t\t--select2-opt-group: #585858;\r\n\t\t\t\t\t--input-box-outline: #333;\r\n\t\t\t\t\t--mute-button-normal: #ffa033;\r\n\t\t\t\t\t--mute-button-mod: #9a6bff;\r\n\t\t\t\t--pitch1-secondary-channel: #004444;\r\n\t\t\t\t\t--pitch1-primary-channel:   #009999;\r\n\t\t\t\t\t--pitch1-secondary-note:    #004444;\r\n\t\t\t\t\t--pitch1-primary-note:      #009999;\r\n\t\t\t\t\t--pitch2-secondary-channel: #444400;\r\n\t\t\t\t\t--pitch2-primary-channel:   #999900;\r\n\t\t\t\t\t--pitch2-secondary-note:    #444400;\r\n\t\t\t\t\t--pitch2-primary-note:      #999900;\r\n\t\t\t\t\t--pitch3-secondary-channel: #443300;\r\n\t\t\t\t\t--pitch3-primary-channel:   #996600;\r\n\t\t\t\t\t--pitch3-secondary-note:    #443300;\r\n\t\t\t\t\t--pitch3-primary-note:      #996600;\r\n\t\t\t\t\t--pitch4-secondary-channel: #004400;\r\n\t\t\t\t\t--pitch4-primary-channel:   #009900;\r\n\t\t\t\t\t--pitch4-secondary-note:    #004400;\r\n\t\t\t\t\t--pitch4-primary-note:      #009900;\r\n\t\t\t\t\t--pitch5-secondary-channel: #440044;\r\n\t\t\t\t\t--pitch5-primary-channel:   #990099;\r\n\t\t\t\t\t--pitch5-secondary-note:    #440044;\r\n\t\t\t\t\t--pitch5-primary-note:      #990099;\r\n\t\t\t\t\t--pitch6-secondary-channel: #333344;\r\n\t\t\t\t\t--pitch6-primary-channel:   #666699;\r\n\t\t\t\t\t--pitch6-secondary-note:    #333344;\r\n\t\t\t\t\t--pitch6-primary-note:      #666699;\r\n\t\t\t\t\t--pitch7-secondary-channel: #444400;\r\n\t\t\t\t\t--pitch7-primary-channel:   #999900;\r\n\t\t\t\t\t--pitch7-secondary-note:    #444400;\r\n\t\t\t\t\t--pitch7-primary-note:      #999900;\r\n\t\t\t\t\t--pitch8-secondary-channel: #824E54;\r\n\t\t\t\t\t--pitch8-primary-channel:   #C4757E;\r\n\t\t\t\t\t--pitch8-secondary-note:    #824E54;\r\n\t\t\t\t\t--pitch8-primary-note:      #C4757E;\r\n\t\t\t\t\t--pitch9-secondary-channel: #006342;\r\n\t\t\t\t\t--pitch9-primary-channel:   #008E5F;\r\n\t\t\t\t\t--pitch9-secondary-note:    #006342;\r\n\t\t\t\t\t--pitch9-primary-note:      #008E5F;\r\n\t\t\t\t\t--pitch10-secondary-channel: #561291;\r\n\t\t\t\t\t--pitch10-primary-channel:   #7819C1;\r\n\t\t\t\t\t--pitch10-secondary-note:    #561291;\r\n\t\t\t\t\t--pitch10-primary-note:      #7819C1;\r\n\t\t\t\t\t--noise1-secondary-channel: #444444;\r\n\t\t\t\t\t--noise1-primary-channel:   #999999;\r\n\t\t\t\t\t--noise1-secondary-note:    #444444;\r\n\t\t\t\t\t--noise1-primary-note:      #999999;\r\n\t\t\t\t\t--noise2-secondary-channel: #443311;\r\n\t\t\t\t\t--noise2-primary-channel:   #996633;\r\n\t\t\t\t\t--noise2-secondary-note:    #443311;\r\n\t\t\t\t\t--noise2-primary-note:      #996633;\r\n\t\t\t\t\t--noise3-secondary-channel: #113344;\r\n\t\t\t\t\t--noise3-primary-channel:   #336699;\r\n\t\t\t\t\t--noise3-secondary-note:    #113344;\r\n\t\t\t\t\t--noise3-primary-note:      #336699;\r\n\t\t\t\t\t--noise4-secondary-channel: #444444;\r\n\t\t\t\t\t--noise4-primary-channel:   #999999;\r\n\t\t\t\t\t--noise4-secondary-note:    #444444;\r\n\t\t\t\t\t--noise4-primary-note:      #999999;\r\n\t\t\t\t\t--noise5-secondary-channel: #443311;\r\n\t\t\t\t\t--noise5-primary-channel:   #996633;\r\n\t\t\t\t\t--noise5-secondary-note:    #443311;\r\n\t\t\t\t\t--noise5-primary-note:      #996633;\r\n          --mod1-secondary-channel: #004444;\r\n\t\t\t\t\t--mod1-primary-channel:   #009999;\r\n\t\t\t\t\t--mod1-secondary-note:    #004444;\r\n\t\t\t\t\t--mod1-primary-note:      #009999;\r\n\t\t\t\t\t--mod2-secondary-channel: #444400;\r\n\t\t\t\t\t--mod2-primary-channel:   #999900;\r\n\t\t\t\t\t--mod2-secondary-note:    #444400;\r\n\t\t\t\t\t--mod2-primary-note:      #999900;\r\n\t\t\t\t\t--mod3-secondary-channel: #443300;\r\n\t\t\t\t\t--mod3-primary-channel:   #996600;\r\n\t\t\t\t\t--mod3-secondary-note:    #443300;\r\n\t\t\t\t\t--mod3-primary-note:      #996600;\r\n\t\t\t\t\t--mod4-secondary-channel: #004400;\r\n\t\t\t\t\t--mod4-primary-channel:   #009900;\r\n\t\t\t\t\t--mod4-secondary-note:    #004400;\r\n\t\t\t\t\t--mod4-primary-note:      #009900;\r\n\t\t\t\t\t--mod-label-primary:        #999;\r\n\t\t\t\t\t--mod-label-secondary-text: #333;\r\n\t\t\t\t\t--mod-label-primary-text:   black;\r\n\t\t\t\t\t--disabled-note-primary:    #999;\r\n\t\t\t\t\t--disabled-note-secondary:  #666;\r\n\t\t\t\t}\r\n\t\t\t\t.beepboxEditor button, .beepboxEditor select {\r\n\t\t\t\t\tbox-shadow: inset 0 0 0 1px var(--secondary-text);\r\n\t\t\t\t}\r\n\t\t\t`,\r\n\t\t\t   \"todbox dark (original)\": `\r\n\t\t\t\t:root {\r\n\t\t\t\t\t-webkit-text-stroke-width: 0.5px;\r\n\t\t\t\t\t--page-margin: black;\r\n\t\t\t\t\t--editor-background: black;\r\n\t\t\t\t\t--hover-preview: #999999;\r\n\t\t\t\t\t--playhead: #999999;\r\n\t\t\t\t\t--primary-text: #999999;\r\n\t\t\t\t\t--secondary-text: #444444;\r\n\t\t\t\t\t--inverted-text: black;\r\n\t\t\t\t\t--text-selection: #999999;\r\n\t\t\t\t\t--box-selection-fill: #999999;\r\n\t\t\t\t\t--loop-accent: #999999;\r\n\t\t\t\t\t--link-accent: #999999;\r\n\t\t\t\t\t--ui-widget-background: #222222;\r\n\t\t\t\t\t--ui-widget-focus: #444444;\r\n\t\t\t\t\t--pitch-background: #101010;\r\n\t\t\t\t\t--tonic: #404040;\r\n\t\t\t\t\t--fifth-note: #202020;\r\n\t\t\t\t\t--white-piano-key: #999999;\r\n\t\t\t\t\t--black-piano-key: #101010;\r\n\t\t\t\t\t--pitch1-secondary-channel: #004444;\r\n\t\t\t\t\t--pitch1-primary-channel:   #009999;\r\n\t\t\t\t\t--pitch1-secondary-note:    #004444;\r\n\t\t\t\t\t--pitch1-primary-note:      #009999;\r\n\t\t\t\t\t--pitch2-secondary-channel: #444400;\r\n\t\t\t\t\t--pitch2-primary-channel:   #999900;\r\n\t\t\t\t\t--pitch2-secondary-note:    #444400;\r\n\t\t\t\t\t--pitch2-primary-note:      #999900;\r\n\t\t\t\t\t--pitch3-secondary-channel: #443300;\r\n\t\t\t\t\t--pitch3-primary-channel:   #996600;\r\n\t\t\t\t\t--pitch3-secondary-note:    #443300;\r\n\t\t\t\t\t--pitch3-primary-note:      #996600;\r\n\t\t\t\t\t--pitch4-secondary-channel: #004400;\r\n\t\t\t\t\t--pitch4-primary-channel:   #009900;\r\n\t\t\t\t\t--pitch4-secondary-note:    #004400;\r\n\t\t\t\t\t--pitch4-primary-note:      #009900;\r\n\t\t\t\t\t--pitch5-secondary-channel: #440044;\r\n\t\t\t\t\t--pitch5-primary-channel:   #990099;\r\n\t\t\t\t\t--pitch5-secondary-note:    #440044;\r\n\t\t\t\t\t--pitch5-primary-note:      #990099;\r\n\t\t\t\t\t--pitch6-secondary-channel: #333344;\r\n\t\t\t\t\t--pitch6-primary-channel:   #666699;\r\n\t\t\t\t\t--pitch6-secondary-note:    #333344;\r\n\t\t\t\t\t--pitch6-primary-note:      #666699;\r\n\t\t\t\t\t--noise1-secondary-channel: #444444;\r\n\t\t\t\t\t--noise1-primary-channel:   #999999;\r\n\t\t\t\t\t--noise1-secondary-note:    #444444;\r\n\t\t\t\t\t--noise1-primary-note:      #999999;\r\n\t\t\t\t\t--noise2-secondary-channel: #443311;\r\n\t\t\t\t\t--noise2-primary-channel:   #996633;\r\n\t\t\t\t\t--noise2-secondary-note:    #443311;\r\n\t\t\t\t\t--noise2-primary-note:      #996633;\r\n\t\t\t\t\t--noise3-secondary-channel: #113344;\r\n\t\t\t\t\t--noise3-primary-channel:   #336699;\r\n\t\t\t\t\t--noise3-secondary-note:    #113344;\r\n\t\t\t\t\t--noise3-primary-note:      #336699;\r\n\t\t\t\t}\r\n\t\t\t\t\r\n\t\t\t\t.beepboxEditor button, .beepboxEditor select {\r\n\t\t\t\t\tbox-shadow: inset 0 0 0 1px var(--secondary-text);\r\n\t\t\t\t}\r\n\t\t\t`,\r\n\t\t\t\"mainbox 1.0\": `\r\n\t\t\t:root {\r\n\t\t\t\t--page-margin: black;\r\n\t\t\t\t--editor-background: black;\r\n\t\t\t\t--hover-preview: white;\r\n\t\t\t\t--playhead: white;\r\n\t\t\t\t--primary-text: white;\r\n\t\t\t\t--secondary-text: #999;\r\n\t\t\t\t--inverted-text: black;\r\n\t\t\t\t--text-selection: rgba(119,68,255,0.99);\r\n\t\t\t\t--box-selection-fill: rgba(255,255,255,0.2);\r\n\t\t\t\t--loop-accent: #2F1C40;\r\n\t\t\t\t\t--link-accent: #543873;\r\n\t\t\t\t--ui-widget-background: #2F1C40;\r\n\t\t\t\t\t--ui-widget-focus: #543873;\r\n\t\t\t\t\t--pitch-background: #2F1C40;\r\n\t\t\t\t\t--tonic: #42286D;\r\n\t\t\t\t--fifth-note: #37416B;\r\n\t\t\t--white-piano-key: #156CB6;\r\n\t\t\t\t\t--black-piano-key: #130D14;\r\n\t\t\t\t--white-piano-key-text: #131200;\r\n\t\t\t\t--black-piano-key-text: #fff;\r\n\t\t\t\t\t--use-color-formula: false;\r\n\t\t\t\t\t--track-editor-bg-pitch: #444;\r\n\t\t\t\t\t--track-editor-bg-pitch-dim: #333;\r\n\t\t\t\t\t--track-editor-bg-noise: #444;\r\n\t\t\t\t\t--track-editor-bg-noise-dim: #333;\r\n\t\t\t\t\t--track-editor-bg-mod: #234;\r\n\t\t\t\t\t--track-editor-bg-mod-dim: #123;\r\n\t\t\t\t\t--multiplicative-mod-slider: #456;\r\n\t\t\t\t\t--overwriting-mod-slider: #654;\r\n\t\t\t\t\t--indicator-primary: #74f;\r\n\t\t\t\t\t--indicator-secondary: #444;\r\n\t\t\t\t\t--select2-opt-group: #585858;\r\n\t\t\t\t\t--input-box-outline: #333;\r\n\t\t\t\t\t--mute-button-normal: #ffa033;\r\n\t\t\t\t\t--mute-button-mod: #9a6bff;\r\n\t\t\t\t--pitch1-secondary-channel: #156C99;\r\n\t\t\t\t\t--pitch1-primary-channel:   #00CFDF;\r\n\t\t\t\t\t--pitch1-secondary-note:    #0080A8;\r\n\t\t\t\t\t--pitch1-primary-note:      #009FC6;\r\n\t\t\t\t\t--pitch2-secondary-channel: #AD923A;\r\n\t\t\t\t\t--pitch2-primary-channel:   #FFD552;\r\n\t\t\t\t\t--pitch2-secondary-note:    #C49736;\r\n\t\t\t\t\t--pitch2-primary-note:      #EFC742;\r\n\t\t\t\t\t--pitch3-secondary-channel: #7A401E;\r\n\t\t\t\t\t--pitch3-primary-channel:   #C14E30;\r\n\t\t\t\t\t--pitch3-secondary-note:    #89381B;\r\n\t\t\t\t\t--pitch3-primary-note:      #E15427;\r\n\t\t\t\t\t--pitch4-secondary-channel: #0B6030;\r\n\t\t\t\t\t--pitch4-primary-channel:   #00915C;\r\n\t\t\t\t\t--pitch4-secondary-note:    #004337;\r\n\t\t\t\t\t--pitch4-primary-note:      #00915E;\r\n\t\t\t\t\t--pitch5-secondary-channel: #543873;\r\n\t\t\t\t\t--pitch5-primary-channel:   #695B95;\r\n\t\t\t\t\t--pitch5-secondary-note:    #8188BE;\r\n\t\t\t\t\t--pitch5-primary-note:      #848ED8;\r\n\t\t\t\t\t--pitch6-secondary-channel: #585882;\r\n\t\t\t\t\t--pitch6-primary-channel:   #5A72DD;\r\n\t\t\t\t\t--pitch6-secondary-note:    #8888d0;\r\n\t\t\t\t\t--pitch6-primary-note:      #d0d0ff;\r\n\t\t\t\t\t--pitch7-secondary-channel: #7D7C2E;\r\n\t\t\t\t\t--pitch7-primary-channel:   #B0C952;\r\n\t\t\t\t\t--pitch7-secondary-note:    #7D7C2E;\r\n\t\t\t\t\t--pitch7-primary-note:      #B0C952;\r\n\t\t\t\t\t--pitch8-secondary-channel: #7F426A;\r\n\t\t\t\t\t--pitch8-primary-channel:   #B75297;\r\n\t\t\t\t\t--pitch8-secondary-note:    #7F426A;\r\n\t\t\t\t\t--pitch8-primary-note:      #B75297;\r\n\t\t\t\t\t--pitch9-secondary-channel: #2A6B65;\r\n\t\t\t\t\t--pitch9-primary-channel:   #3BA590;\r\n\t\t\t\t\t--pitch9-secondary-note:    #2A6B65;\r\n\t\t\t\t\t--pitch9-primary-note:      #3BA590;\r\n\t\t\t\t\t--pitch10-secondary-channel: #713EA0;\r\n\t\t\t\t\t--pitch10-primary-channel:   #925EC9;\r\n\t\t\t\t\t--pitch10-secondary-note:    #713EA0;\r\n\t\t\t\t\t--pitch10-primary-note:      #925EC9;\r\n\t\t\t\t\t--noise1-secondary-channel: #6C6C8E;\r\n\t\t\t\t\t--noise1-primary-channel:   #8A7F96;\r\n\t\t\t\t\t--noise1-secondary-note:    #A1A3B7;\r\n\t\t\t\t\t--noise1-primary-note:      #DDBADD;\r\n\t\t\t\t\t--noise2-secondary-channel: #865E40;\r\n\t\t\t\t\t--noise2-primary-channel:   #ddaa77;\r\n\t\t\t\t\t--noise2-secondary-note:    #C7B47A;\r\n\t\t\t\t\t--noise2-primary-note:      #CFC587;\r\n\t\t\t\t\t--noise3-secondary-channel: #7E7068;\r\n\t\t\t\t\t--noise3-primary-channel:   #B19998;\r\n\t\t\t\t\t--noise3-secondary-note:    #BAA6BC;\r\n\t\t\t\t\t--noise3-primary-note:      #EDDCEC;\r\n\t\t\t\t--noise4-secondary-channel: #7A4F9A;\r\n\t\t\t\t--noise4-primary-channel:   #AF82D2;\r\n\t\t\t\t--noise4-secondary-note:    #9E71C1;\r\n\t\t\t\t--noise4-primary-note:      #D4C1EA;\r\n\t\t\t\t--noise5-secondary-channel: #607837;\r\n\t\t\t\t--noise5-primary-channel:   #A2BB77;\r\n\t\t\t\t--noise5-secondary-note:    #91AA66;\r\n\t\t\t\t--noise5-primary-note:      #C5E2B2;\r\n          --mod1-secondary-channel: #156C99;\r\n\t\t\t\t\t--mod1-primary-channel:   #00CFDF;\r\n\t\t\t\t\t--mod1-secondary-note:    #0080A8;\r\n\t\t\t\t\t--mod1-primary-note:      #009FC6;\r\n\t\t\t\t\t--mod2-secondary-channel: #AD923A;\r\n\t\t\t\t\t--mod2-primary-channel:   #FFD552;\r\n\t\t\t\t\t--mod2-secondary-note:    #C49736;\r\n\t\t\t\t\t--mod2-primary-note:      #EFC742;\r\n\t\t\t\t\t--mod3-secondary-channel: #7A401E;\r\n\t\t\t\t\t--mod3-primary-channel:   #C14E30;\r\n\t\t\t\t\t--mod3-secondary-note:    #89381B;\r\n\t\t\t\t\t--mod3-primary-note:      #E15427;\r\n\t\t\t\t\t--mod4-secondary-channel: #0B6030;\r\n\t\t\t\t\t--mod4-primary-channel:   #00915C;\r\n\t\t\t\t\t--mod4-secondary-note:    #004337;\r\n\t\t\t\t\t--mod4-primary-note:      #00915E;\r\n\t\t\t\t\t--mod-label-primary:        #999;\r\n\t\t\t\t\t--mod-label-secondary-text: #333;\r\n\t\t\t\t\t--mod-label-primary-text:   black;\r\n\t\t\t\t\t--disabled-note-primary:    #999;\r\n\t\t\t\t\t--disabled-note-secondary:  #666;\r\n\t\t\t\t}\r\n\t\t\t`,\r\n\t\t\t\"mainbox reimagined\": `\r\n\t\t\t\t\t:root {\r\n\t\t --page-margin: black;\r\n\t\t --editor-background: black;\r\n\t\t --hover-preview: white;\r\n\t\t --playhead: white;\r\n\t\t --primary-text: white;\r\n\t\t --secondary-text: #B6B7C4;\r\n\t\t --inverted-text: black;\r\n\t\t --text-selection: rgba(119,68,255,0.99);\r\n\t\t --box-selection-fill: rgba(255,255,255,0.2);\r\n\t\t --loop-accent: #8153E0;\r\n\t\t --link-accent: #8153E0;\r\n\t\t --ui-widget-background: #2D1C4C;\r\n\t\t --ui-widget-focus: #432C89;\r\n\t\t --pitch-background: #2B1E38;\r\n\t\t --tonic: #462C77;\r\n\t\t --fifth-note: #38477F;\r\n\t\t --white-piano-key: #D2D2DD;\r\n\t\t --black-piano-key: #020202;\r\n\t\t --white-piano-key-text: #131200;\r\n\t\t --black-piano-key-text: #fff;\r\n\t\t --use-color-formula: false;\r\n\t\t --track-editor-bg-pitch: #444;\r\n\t\t --track-editor-bg-pitch-dim: #333;\r\n\t\t --track-editor-bg-noise: #444;\r\n\t\t --track-editor-bg-noise-dim: #333;\r\n\t\t --track-editor-bg-mod: #234;\r\n\t\t --track-editor-bg-mod-dim: #123;\r\n\t\t --multiplicative-mod-slider: #456;\r\n\t\t --overwriting-mod-slider: #654;\r\n\t\t --indicator-primary: #8153E0;\r\n\t\t --indicator-secondary: #3D303F;\r\n\t\t --select2-opt-group: #585858;\r\n\t\t --input-box-outline: #333;\r\n\t\t --mute-button-normal: #D8AE2B;\r\n\t\t --mute-button-mod: #8153E0;\r\n\t\t --pitch1-secondary-channel: #156C99;\r\n\t\t --pitch1-primary-channel:   #00CEE2;\r\n\t\t --pitch1-secondary-note:    #005CBF;\r\n\t\t --pitch1-primary-note:      #00CEE2;\r\n\t\t --pitch2-secondary-channel: #C13C40;\r\n\t\t --pitch2-primary-channel:   #E0C218;\r\n\t\t --pitch2-secondary-note:    #C13C40;\r\n\t\t --pitch2-primary-note:      #E0C218;\r\n\t\t --pitch3-secondary-channel: #4D4529;\r\n\t\t --pitch3-primary-channel:   #C62936;\r\n\t\t --pitch3-secondary-note:    #4D4529;\r\n\t\t --pitch3-primary-note:      #C62936;\r\n\t\t --pitch4-secondary-channel: #00333F;\r\n\t\t --pitch4-primary-channel:   #00A960;\r\n\t\t --pitch4-secondary-note:    #00333F;\r\n\t\t --pitch4-primary-note:      #00A960;\r\n\t\t --pitch5-secondary-channel: #590CA8;\r\n\t\t --pitch5-primary-channel:   #8874C9;\r\n\t\t --pitch5-secondary-note:    #590CA8;\r\n\t\t --pitch5-primary-note:      #8874C9;\r\n\t\t --pitch6-secondary-channel: #7017BC;\r\n\t\t --pitch6-primary-channel:   #8CACE2;\r\n\t\t --pitch6-secondary-note:    #7017BC;\r\n\t\t --pitch6-primary-note:      #8CACE2;\r\n\t\t --pitch7-secondary-channel: #631A21;\r\n\t\t --pitch7-primary-channel:   #BADB3A;\r\n\t\t --pitch7-secondary-note:    #631A21;\r\n\t\t --pitch7-primary-note:      #BADB3A;\r\n\t\t --pitch8-secondary-channel: #690076;\r\n\t\t --pitch8-primary-channel:   #ED6DCA;\r\n\t\t --pitch8-secondary-note:    #690076;\r\n\t\t --pitch8-primary-note:      #ED6DCA;\r\n\t\t --pitch9-secondary-channel: #194945;\r\n\t\t --pitch9-primary-channel:   #1ECD58;\r\n\t\t --pitch9-secondary-note:    #194945;\r\n\t\t --pitch9-primary-note:      #1ECD58;\r\n\t\t --pitch10-secondary-channel: #561070;\r\n\t\t --pitch10-primary-channel:   #9E71CE;\r\n\t\t --pitch10-secondary-note:    #561070;\r\n\t\t --pitch10-primary-note:      #9E71CE;\r\n\t\t --noise1-secondary-channel: #572C59;\r\n\t\t --noise1-primary-channel:   #CAC9CC;\r\n\t\t --noise1-secondary-note:    #572C59;\r\n\t\t --noise1-primary-note:      #CAC9CC;\r\n\t\t --noise2-secondary-channel: #77174B;\r\n\t\t --noise2-primary-channel:   #DBBE85;\r\n\t\t --noise2-secondary-note:    #77174B;\r\n\t\t --noise2-primary-note:      #DBBE85;\r\n\t\t --noise3-secondary-channel: #70195D;\r\n\t\t --noise3-primary-channel:   #B19998;\r\n\t\t --noise3-secondary-note:    #70195D;\r\n\t\t --noise3-primary-note:      #EDDCEC;\r\n\t\t --noise4-secondary-channel: #720B87;\r\n\t\t --noise4-primary-channel:   #BD81DB;\r\n\t\t --noise4-secondary-note:    #720B87;\r\n\t\t --noise4-primary-note:      #BD81DB;\r\n\t\t --noise5-secondary-channel: #821B5C;\r\n\t\t --noise5-primary-channel:   #C6D88A;\r\n\t\t --noise5-secondary-note:    #821B5C;\r\n\t\t --noise5-primary-note:      #C6D88A;\r\n\t\t --mod1-secondary-channel: #156C99;\r\n\t\t --mod1-primary-channel:   #00CEE2;\r\n\t\t --mod1-secondary-note:    #005CBF;\r\n\t\t --mod1-primary-note:      #00CEE2;\r\n\t\t --mod2-secondary-channel: #C13C40;\r\n\t\t --mod2-primary-channel:   #E0C218;\r\n\t\t --mod2-secondary-note:    #C13C40;\r\n\t\t --mod2-primary-note:      #E0C218;\r\n\t\t --mod3-secondary-channel: #4D4529;\r\n\t\t --mod3-primary-channel:   #C62936;\r\n\t\t --mod3-secondary-note:    #4D4529;\r\n\t\t --mod3-primary-note:      #C62936;\r\n\t\t --mod4-secondary-channel: #00333F;\r\n\t\t --mod4-primary-channel:   #00A960;\r\n\t\t --mod4-secondary-note:    #00333F;\r\n\t\t --mod4-primary-note:      #00A960;\r\n\t\t --mod-label-primary:        #999;\r\n\t\t --mod-label-secondary-text: #333;\r\n\t\t --mod-label-primary-text:   black;\r\n\t\t --disabled-note-primary:    #B6B7C4;\r\n\t\t --disabled-note-secondary:  #3D303F;\r\n\t\t}\r\n\t\t\t`,\r\n\t\t\t \"fogbox\": `\r\n\t\t\t:root {\r\n\t\t\t\t--page-margin: #252525;\r\n\t\t\t\t--editor-background: #252525;\r\n\t\t\t\t--hover-preview: white;\r\n\t\t\t\t--playhead: white;\r\n\t\t\t\t--primary-text: white;\r\n\t\t\t\t--secondary-text: #999;\r\n\t\t\t\t--inverted-text: black;\r\n\t\t\t\t--text-selection: rgba(119,68,255,0.99);\r\n\t\t\t\t--box-selection-fill: rgba(255,255,255,0.2);\r\n\t\t\t\t--loop-accent: #74f;\r\n\t\t\t\t--link-accent: #98f;\r\n\t\t\t\t--ui-widget-background: #444;\r\n\t\t\t\t--ui-widget-focus: #777;\r\n\t\t\t\t--pitch-background: #444;\r\n\t\t\t\t--tonic: #864;\r\n\t\t\t\t--fifth-note: #468;\r\n\t\t\t\t--white-piano-key: #bbb;\r\n\t\t\t\t--black-piano-key: #444;\r\n\t\t\t\t--white-piano-key-text: #131200;\r\n\t\t\t\t--black-piano-key-text: #fff;\r\n\t\t\t\t\t--use-color-formula: false;\r\n\t\t\t\t\t--track-editor-bg-pitch: #444;\r\n\t\t\t\t\t--track-editor-bg-pitch-dim: #333;\r\n\t\t\t\t\t--track-editor-bg-noise: #444;\r\n\t\t\t\t\t--track-editor-bg-noise-dim: #333;\r\n\t\t\t\t\t--track-editor-bg-mod: #234;\r\n\t\t\t\t\t--track-editor-bg-mod-dim: #123;\r\n\t\t\t\t\t--multiplicative-mod-slider: #456;\r\n\t\t\t\t\t--overwriting-mod-slider: #654;\r\n\t\t\t\t\t--indicator-primary: #74f;\r\n\t\t\t\t\t--indicator-secondary: #444;\r\n\t\t\t\t\t--select2-opt-group: #585858;\r\n\t\t\t\t\t--input-box-outline: #333;\r\n\t\t\t\t\t--mute-button-normal: #ffa033;\r\n\t\t\t\t\t--mute-button-mod: #9a6bff;\r\n\t\t\t\t--pitch1-secondary-channel: #0099A1;\r\n\t\t\t\t--pitch1-primary-channel:   #25F3FF;\r\n\t\t\t\t--pitch1-secondary-note:    #00BDC7;\r\n\t\t\t\t--pitch1-primary-note:      #92F9FF;\r\n\t\t\t\t--pitch2-secondary-channel: #A1A100;\r\n\t\t\t\t--pitch2-primary-channel:   #FFFF25;\r\n\t\t\t\t--pitch2-secondary-note:    #C7C700;\r\n\t\t\t\t--pitch2-primary-note:      #FFFF92;\r\n\t\t\t\t--pitch3-secondary-channel: #C75000;\r\n\t\t\t\t--pitch3-primary-channel:   #FF9752;\r\n\t\t\t\t--pitch3-secondary-note:    #FF771C;\r\n\t\t\t\t--pitch3-primary-note:      #FFCDAB;\r\n\t\t\t\t--pitch4-secondary-channel: #00A100;\r\n\t\t\t\t--pitch4-primary-channel:   #50FF50;\r\n\t\t\t\t--pitch4-secondary-note:    #00C700;\r\n\t\t\t\t--pitch4-primary-note:      #A0FFA0;\r\n\t\t\t\t--pitch5-secondary-channel: #D020D0;\r\n\t\t\t\t--pitch5-primary-channel:   #FF90FF;\r\n\t\t\t\t--pitch5-secondary-note:    #E040E0;\r\n\t\t\t\t--pitch5-primary-note:      #FFC0FF;\r\n\t\t\t\t--pitch6-secondary-channel: #7777B0;\r\n\t\t\t\t--pitch6-primary-channel:   #A0A0FF;\r\n\t\t\t\t--pitch6-secondary-note:    #8888D0;\r\n\t\t\t\t--pitch6-primary-note:      #D0D0FF;\r\n\t\t\t\t--pitch7-secondary-channel: #8AA100;\r\n\t\t\t\t--pitch7-primary-channel:   #DEFF25;\r\n\t\t\t\t--pitch7-secondary-note:    #AAC700;\r\n\t\t\t\t--pitch7-primary-note:      #E6FF92;\r\n\t\t\t\t--pitch8-secondary-channel: #DF0019;\r\n\t\t\t\t--pitch8-primary-channel:   #FF98A4;\r\n\t\t\t\t--pitch8-secondary-note:    #FF4E63;\r\n\t\t\t\t--pitch8-primary-note:      #FFB2BB;\r\n\t\t\t\t--pitch9-secondary-channel: #00A170;\r\n\t\t\t\t--pitch9-primary-channel:   #50FFC9;\r\n\t\t\t\t--pitch9-secondary-note:    #00C78A;\r\n\t\t\t\t--pitch9-primary-note:      #83FFD9;\r\n\t\t\t\t--pitch10-secondary-channel:#A11FFF;\r\n\t\t\t\t--pitch10-primary-channel:  #CE8BFF;\r\n\t\t\t\t--pitch10-secondary-note:   #B757FF;\r\n\t\t\t\t--pitch10-primary-note:     #DFACFF;\r\n\t\t\t\t--noise1-secondary-channel: #6F6F6F;\r\n\t\t\t\t--noise1-primary-channel:   #AAAAAA;\r\n\t\t\t\t--noise1-secondary-note:    #A7A7A7;\r\n\t\t\t\t--noise1-primary-note:      #E0E0E0;\r\n\t\t\t\t--noise2-secondary-channel: #996633;\r\n\t\t\t\t--noise2-primary-channel:   #DDAA77;\r\n\t\t\t\t--noise2-secondary-note:    #CC9966;\r\n\t\t\t\t--noise2-primary-note:      #F0D0BB;\r\n\t\t\t\t--noise3-secondary-channel: #4A6D8F;\r\n\t\t\t\t--noise3-primary-channel:   #77AADD;\r\n\t\t\t\t--noise3-secondary-note:    #6F9FCF;\r\n\t\t\t\t--noise3-primary-note:      #BBD7FF;\r\n\t\t\t\t--noise4-secondary-channel: #7A4F9A;\r\n\t\t\t\t--noise4-primary-channel:   #AF82D2;\r\n\t\t\t\t--noise4-secondary-note:    #9E71C1;\r\n\t\t\t\t--noise4-primary-note:      #D4C1EA;\r\n\t\t\t\t--noise5-secondary-channel: #607837;\r\n\t\t\t\t--noise5-primary-channel:   #A2BB77;\r\n\t\t\t\t--noise5-secondary-note:    #91AA66;\r\n\t\t\t\t--noise5-primary-note:      #C5E2B2;\r\n          --mod1-secondary-channel:   #339955;\r\n\t\t\t\t\t--mod1-primary-channel:     #77fc55;\r\n\t\t\t\t\t--mod1-secondary-note:      #77ff8a;\r\n\t\t\t\t\t--mod1-primary-note:        #cdffee;\r\n\t\t\t\t\t--mod2-secondary-channel:   #993355;\r\n\t\t\t\t\t--mod2-primary-channel:     #f04960;\r\n\t\t\t\t\t--mod2-secondary-note:      #f057a0;\r\n\t\t\t\t\t--mod2-primary-note:        #ffb8de;\r\n\t\t\t\t\t--mod3-secondary-channel:   #553399;\r\n\t\t\t\t\t--mod3-primary-channel:     #8855fc;\r\n\t\t\t\t\t--mod3-secondary-note:      #aa64ff;\r\n\t\t\t\t\t--mod3-primary-note:\t    #f8ddff;\r\n\t\t\t\t\t--mod4-secondary-channel:   #a86436;\r\n\t\t\t\t\t--mod4-primary-channel:     #c8a825;\r\n\t\t\t\t\t--mod4-secondary-note:      #e8ba46;\r\n\t\t\t\t\t--mod4-primary-note:        #fff6d3;\r\n\t\t\t\t\t--mod-label-primary:        #999;\r\n\t\t\t\t\t--mod-label-secondary-text: #333;\r\n\t\t\t\t\t--mod-label-primary-text:   black;\r\n\t\t\t\t\t--disabled-note-primary:    #999;\r\n\t\t\t\t\t--disabled-note-secondary:  #666;\r\n\t\t\t\t}\r\n\t\t\t`,\r\n\t\t\t \"ultrabox rainbow\": `\r\n\t\t\t:root {\r\n\t\t\t\t--page-margin: linear-gradient(90deg, rgba(255,0,0,1) 0%, rgba(255,154,0,1) 10%, rgba(208,222,33,1) 20%, rgba(79,220,74,1) 30%, rgba(63,218,216,1) 40%, rgba(47,201,226,1) 50%, rgba(28,127,238,1) 60%, rgba(95,21,242,1) 70%, rgba(186,12,248,1) 80%, rgba(251,7,217,1) 90%, rgba(255,0,0,1) 100%);\r\n\t\t\t\t--editor-background: transparent;\r\n\t\t\t\t--hover-preview: lime;\r\n\t\t\t\t--playhead: lime;\r\n\t\t\t\t--primary-text: lime;\r\n\t\t\t\t--secondary-text: red;\r\n\t\t\t\t--inverted-text: black;\r\n\t\t\t\t--text-selection: rgba(119,68,255,0.99);\r\n\t\t\t\t--box-selection-fill: rgba(255,255,255,0.2);\r\n\t\t\t\t--loop-accent: blue;\r\n\t\t\t\t--link-accent: yellow;\r\n\t\t\t\t--ui-widget-background: linear-gradient(90deg, rgba(255,0,0,1) 0%, rgba(255,154,0,1) 10%, rgba(208,222,33,1) 20%, rgba(79,220,74,1) 30%, rgba(63,218,216,1) 40%, rgba(47,201,226,1) 50%, rgba(28,127,238,1) 60%, rgba(95,21,242,1) 70%, rgba(186,12,248,1) 80%, rgba(251,7,217,1) 90%, rgba(255,0,0,1) 100%);\r\n\t\t\t\t--ui-widget-focus: linear-gradient(90deg, rgba(255,0,0,1) 0%, rgba(255,154,0,1) 10%, rgba(208,222,33,1) 20%, rgba(79,220,74,1) 30%, rgba(63,218,216,1) 40%, rgba(47,201,226,1) 50%, rgba(28,127,238,1) 60%, rgba(95,21,242,1) 70%, rgba(186,12,248,1) 80%, rgba(251,7,217,1) 90%, rgba(255,0,0,1) 100%);\r\n\t\t\t\t--pitch-background: #444;\r\n\t\t\t\t--tonic: indigo;\r\n\t\t\t\t--fifth-note: #468;\r\n\t\t\t\t--white-piano-key: linear-gradient(90deg, rgba(255,0,0,1) 0%, rgba(255,154,0,1) 10%, rgba(208,222,33,1) 20%, rgba(79,220,74,1) 30%, rgba(63,218,216,1) 40%, rgba(47,201,226,1) 50%, rgba(28,127,238,1) 60%, rgba(95,21,242,1) 70%, rgba(186,12,248,1) 80%, rgba(251,7,217,1) 90%, rgba(255,0,0,1) 100%);\r\n\t\t\t\t--black-piano-key: linear-gradient(90deg, rgba(255,0,0,1) 0%, rgba(255,154,0,1) 10%, rgba(208,222,33,1) 20%, rgba(79,220,74,1) 30%, rgba(63,218,216,1) 40%, rgba(47,201,226,1) 50%, rgba(28,127,238,1) 60%, rgba(95,21,242,1) 70%, rgba(186,12,248,1) 80%, rgba(251,7,217,1) 90%, rgba(255,0,0,1) 100%);\r\n\t\t\t\t--white-piano-key-text: lime;\r\n\t\t\t\t--black-piano-key-text: purple;\r\n\t\t\t\t\t--use-color-formula: false;\r\n\t\t\t\t\t--track-editor-bg-pitch: #444;\r\n\t\t\t\t\t--track-editor-bg-pitch-dim: #333;\r\n\t\t\t\t\t--track-editor-bg-noise: #444;\r\n\t\t\t\t\t--track-editor-bg-noise-dim: #333;\r\n\t\t\t\t\t--track-editor-bg-mod: #234;\r\n\t\t\t\t\t--track-editor-bg-mod-dim: #123;\r\n\t\t\t\t\t--multiplicative-mod-slider: #456;\r\n\t\t\t\t\t--overwriting-mod-slider: #654;\r\n\t\t\t\t\t--indicator-primary: #74f;\r\n\t\t\t\t\t--indicator-secondary: #444;\r\n\t\t\t\t\t--select2-opt-group: #585858;\r\n\t\t\t\t\t--input-box-outline: #333;\r\n\t\t\t\t\t--mute-button-normal: #ffa033;\r\n\t\t\t\t\t--mute-button-mod: #9a6bff;\r\n\t\t\t\t--pitch1-secondary-channel: #0099A1;\r\n\t\t\t\t--pitch1-primary-channel:   #25F3FF;\r\n\t\t\t\t--pitch1-secondary-note:    #00BDC7;\r\n\t\t\t\t--pitch1-primary-note:      #92F9FF;\r\n\t\t\t\t--pitch2-secondary-channel: #A1A100;\r\n\t\t\t\t--pitch2-primary-channel:   #FFFF25;\r\n\t\t\t\t--pitch2-secondary-note:    #C7C700;\r\n\t\t\t\t--pitch2-primary-note:      #FFFF92;\r\n\t\t\t\t--pitch3-secondary-channel: #C75000;\r\n\t\t\t\t--pitch3-primary-channel:   #FF9752;\r\n\t\t\t\t--pitch3-secondary-note:    #FF771C;\r\n\t\t\t\t--pitch3-primary-note:      #FFCDAB;\r\n\t\t\t\t--pitch4-secondary-channel: #00A100;\r\n\t\t\t\t--pitch4-primary-channel:   #50FF50;\r\n\t\t\t\t--pitch4-secondary-note:    #00C700;\r\n\t\t\t\t--pitch4-primary-note:      #A0FFA0;\r\n\t\t\t\t--pitch5-secondary-channel: #D020D0;\r\n\t\t\t\t--pitch5-primary-channel:   #FF90FF;\r\n\t\t\t\t--pitch5-secondary-note:    #E040E0;\r\n\t\t\t\t--pitch5-primary-note:      #FFC0FF;\r\n\t\t\t\t--pitch6-secondary-channel: #7777B0;\r\n\t\t\t\t--pitch6-primary-channel:   #A0A0FF;\r\n\t\t\t\t--pitch6-secondary-note:    #8888D0;\r\n\t\t\t\t--pitch6-primary-note:      #D0D0FF;\r\n\t\t\t\t--pitch7-secondary-channel: #8AA100;\r\n\t\t\t\t--pitch7-primary-channel:   #DEFF25;\r\n\t\t\t\t--pitch7-secondary-note:    #AAC700;\r\n\t\t\t\t--pitch7-primary-note:      #E6FF92;\r\n\t\t\t\t--pitch8-secondary-channel: #DF0019;\r\n\t\t\t\t--pitch8-primary-channel:   #FF98A4;\r\n\t\t\t\t--pitch8-secondary-note:    #FF4E63;\r\n\t\t\t\t--pitch8-primary-note:      #FFB2BB;\r\n\t\t\t\t--pitch9-secondary-channel: #00A170;\r\n\t\t\t\t--pitch9-primary-channel:   #50FFC9;\r\n\t\t\t\t--pitch9-secondary-note:    #00C78A;\r\n\t\t\t\t--pitch9-primary-note:      #83FFD9;\r\n\t\t\t\t--pitch10-secondary-channel:#A11FFF;\r\n\t\t\t\t--pitch10-primary-channel:  #CE8BFF;\r\n\t\t\t\t--pitch10-secondary-note:   #B757FF;\r\n\t\t\t\t--pitch10-primary-note:     #DFACFF;\r\n\t\t\t\t--noise1-secondary-channel: #6F6F6F;\r\n\t\t\t\t--noise1-primary-channel:   #AAAAAA;\r\n\t\t\t\t--noise1-secondary-note:    #A7A7A7;\r\n\t\t\t\t--noise1-primary-note:      #E0E0E0;\r\n\t\t\t\t--noise2-secondary-channel: #996633;\r\n\t\t\t\t--noise2-primary-channel:   #DDAA77;\r\n\t\t\t\t--noise2-secondary-note:    #CC9966;\r\n\t\t\t\t--noise2-primary-note:      #F0D0BB;\r\n\t\t\t\t--noise3-secondary-channel: #4A6D8F;\r\n\t\t\t\t--noise3-primary-channel:   #77AADD;\r\n\t\t\t\t--noise3-secondary-note:    #6F9FCF;\r\n\t\t\t\t--noise3-primary-note:      #BBD7FF;\r\n\t\t\t\t--noise4-secondary-channel: #7A4F9A;\r\n\t\t\t\t--noise4-primary-channel:   #AF82D2;\r\n\t\t\t\t--noise4-secondary-note:    #9E71C1;\r\n\t\t\t\t--noise4-primary-note:      #D4C1EA;\r\n\t\t\t\t--noise5-secondary-channel: #607837;\r\n\t\t\t\t--noise5-primary-channel:   #A2BB77;\r\n\t\t\t\t--noise5-secondary-note:    #91AA66;\r\n\t\t\t\t--noise5-primary-note:      #C5E2B2;\r\n          --mod1-secondary-channel:   #339955;\r\n\t\t\t\t\t--mod1-primary-channel:     #77fc55;\r\n\t\t\t\t\t--mod1-secondary-note:      #77ff8a;\r\n\t\t\t\t\t--mod1-primary-note:        #cdffee;\r\n\t\t\t\t\t--mod2-secondary-channel:   #993355;\r\n\t\t\t\t\t--mod2-primary-channel:     #f04960;\r\n\t\t\t\t\t--mod2-secondary-note:      #f057a0;\r\n\t\t\t\t\t--mod2-primary-note:        #ffb8de;\r\n\t\t\t\t\t--mod3-secondary-channel:   #553399;\r\n\t\t\t\t\t--mod3-primary-channel:     #8855fc;\r\n\t\t\t\t\t--mod3-secondary-note:      #aa64ff;\r\n\t\t\t\t\t--mod3-primary-note:\t    #f8ddff;\r\n\t\t\t\t\t--mod4-secondary-channel:   #a86436;\r\n\t\t\t\t\t--mod4-primary-channel:     #c8a825;\r\n\t\t\t\t\t--mod4-secondary-note:      #e8ba46;\r\n\t\t\t\t\t--mod4-primary-note:        #fff6d3;\r\n\t\t\t\t\t--mod-label-primary:        #999;\r\n\t\t\t\t\t--mod-label-secondary-text: #333;\r\n\t\t\t\t\t--mod-label-primary-text:   black;\r\n\t\t\t\t\t--disabled-note-primary:    #999;\r\n\t\t\t\t\t--disabled-note-secondary:  #666;\r\n\t\t\t\t}\r\n\t\t\t`,\r\n\t\t\t  \"ultrabox upside-down beepbox\": `\r\n\t\t\t:root {\r\n\t\t\t\t--page-margin: black;\r\n\t\t\t\t--editor-background: black;\r\n\t\t\t\t--hover-preview: white;\r\n\t\t\t\t--playhead: white;\r\n\t\t\t\t--primary-text: white;\r\n\t\t\t\t--secondary-text: #999;\r\n\t\t\t\t--inverted-text: black;\r\n\t\t\t\t--text-selection: rgba(119,68,255,0.99);\r\n\t\t\t\t--box-selection-fill: rgba(255,255,255,0.2);\r\n\t\t\t\t--loop-accent: #74f;\r\n\t\t\t\t--link-accent: #98f;\r\n\t\t\t\t--ui-widget-background: #444;\r\n\t\t\t\t--ui-widget-focus: #777;\r\n\t\t\t\t--pitch-background: #444;\r\n\t\t\t\t--tonic: #864;\r\n\t\t\t\t--fifth-note: #468;\r\n\t\t\t\t--white-piano-key: #bbb;\r\n\t\t\t\t--black-piano-key: #444;\r\n\t\t\t\t--white-piano-key-text: #131200;\r\n\t\t\t\t--black-piano-key-text: #fff;\r\n\t\t\t\t\t--use-color-formula: false;\r\n\t\t\t\t\t--track-editor-bg-pitch: #444;\r\n\t\t\t\t\t--track-editor-bg-pitch-dim: #333;\r\n\t\t\t\t\t--track-editor-bg-noise: #444;\r\n\t\t\t\t\t--track-editor-bg-noise-dim: #333;\r\n\t\t\t\t\t--track-editor-bg-mod: #234;\r\n\t\t\t\t\t--track-editor-bg-mod-dim: #123;\r\n\t\t\t\t\t--multiplicative-mod-slider: #456;\r\n\t\t\t\t\t--overwriting-mod-slider: #654;\r\n\t\t\t\t\t--indicator-primary: #74f;\r\n\t\t\t\t\t--indicator-secondary: #444;\r\n\t\t\t\t\t--select2-opt-group: #585858;\r\n\t\t\t\t\t--input-box-outline: #333;\r\n\t\t\t\t\t--mute-button-normal: #ffa033;\r\n\t\t\t\t\t--mute-button-mod: #9a6bff;\r\n\t\t\t\t--pitch1-secondary-channel: #0099A1;\r\n\t\t\t\t--pitch1-primary-channel:   #25F3FF;\r\n\t\t\t\t--pitch1-secondary-note:    #00BDC7;\r\n\t\t\t\t--pitch1-primary-note:      #92F9FF;\r\n\t\t\t\t--pitch2-secondary-channel: #A1A100;\r\n\t\t\t\t--pitch2-primary-channel:   #FFFF25;\r\n\t\t\t\t--pitch2-secondary-note:    #C7C700;\r\n\t\t\t\t--pitch2-primary-note:      #FFFF92;\r\n\t\t\t\t--pitch3-secondary-channel: #C75000;\r\n\t\t\t\t--pitch3-primary-channel:   #FF9752;\r\n\t\t\t\t--pitch3-secondary-note:    #FF771C;\r\n\t\t\t\t--pitch3-primary-note:      #FFCDAB;\r\n\t\t\t\t--pitch4-secondary-channel: #00A100;\r\n\t\t\t\t--pitch4-primary-channel:   #50FF50;\r\n\t\t\t\t--pitch4-secondary-note:    #00C700;\r\n\t\t\t\t--pitch4-primary-note:      #A0FFA0;\r\n\t\t\t\t--pitch5-secondary-channel: #D020D0;\r\n\t\t\t\t--pitch5-primary-channel:   #FF90FF;\r\n\t\t\t\t--pitch5-secondary-note:    #E040E0;\r\n\t\t\t\t--pitch5-primary-note:      #FFC0FF;\r\n\t\t\t\t--pitch6-secondary-channel: #7777B0;\r\n\t\t\t\t--pitch6-primary-channel:   #A0A0FF;\r\n\t\t\t\t--pitch6-secondary-note:    #8888D0;\r\n\t\t\t\t--pitch6-primary-note:      #D0D0FF;\r\n\t\t\t\t--pitch7-secondary-channel: #8AA100;\r\n\t\t\t\t--pitch7-primary-channel:   #DEFF25;\r\n\t\t\t\t--pitch7-secondary-note:    #AAC700;\r\n\t\t\t\t--pitch7-primary-note:      #E6FF92;\r\n\t\t\t\t--pitch8-secondary-channel: #DF0019;\r\n\t\t\t\t--pitch8-primary-channel:   #FF98A4;\r\n\t\t\t\t--pitch8-secondary-note:    #FF4E63;\r\n\t\t\t\t--pitch8-primary-note:      #FFB2BB;\r\n\t\t\t\t--pitch9-secondary-channel: #00A170;\r\n\t\t\t\t--pitch9-primary-channel:   #50FFC9;\r\n\t\t\t\t--pitch9-secondary-note:    #00C78A;\r\n\t\t\t\t--pitch9-primary-note:      #83FFD9;\r\n\t\t\t\t--pitch10-secondary-channel:#A11FFF;\r\n\t\t\t\t--pitch10-primary-channel:  #CE8BFF;\r\n\t\t\t\t--pitch10-secondary-note:   #B757FF;\r\n\t\t\t\t--pitch10-primary-note:     #DFACFF;\r\n\t\t\t\t--noise1-secondary-channel: #6F6F6F;\r\n\t\t\t\t--noise1-primary-channel:   #AAAAAA;\r\n\t\t\t\t--noise1-secondary-note:    #A7A7A7;\r\n\t\t\t\t--noise1-primary-note:      #E0E0E0;\r\n\t\t\t\t--noise2-secondary-channel: #996633;\r\n\t\t\t\t--noise2-primary-channel:   #DDAA77;\r\n\t\t\t\t--noise2-secondary-note:    #CC9966;\r\n\t\t\t\t--noise2-primary-note:      #F0D0BB;\r\n\t\t\t\t--noise3-secondary-channel: #4A6D8F;\r\n\t\t\t\t--noise3-primary-channel:   #77AADD;\r\n\t\t\t\t--noise3-secondary-note:    #6F9FCF;\r\n\t\t\t\t--noise3-primary-note:      #BBD7FF;\r\n\t\t\t\t--noise4-secondary-channel: #7A4F9A;\r\n\t\t\t\t--noise4-primary-channel:   #AF82D2;\r\n\t\t\t\t--noise4-secondary-note:    #9E71C1;\r\n\t\t\t\t--noise4-primary-note:      #D4C1EA;\r\n\t\t\t\t--noise5-secondary-channel: #607837;\r\n\t\t\t\t--noise5-primary-channel:   #A2BB77;\r\n\t\t\t\t--noise5-secondary-note:    #91AA66;\r\n\t\t\t\t--noise5-primary-note:      #C5E2B2;\r\n          --mod1-secondary-channel:   #339955;\r\n\t\t\t\t\t--mod1-primary-channel:     #77fc55;\r\n\t\t\t\t\t--mod1-secondary-note:      #77ff8a;\r\n\t\t\t\t\t--mod1-primary-note:        #cdffee;\r\n\t\t\t\t\t--mod2-secondary-channel:   #993355;\r\n\t\t\t\t\t--mod2-primary-channel:     #f04960;\r\n\t\t\t\t\t--mod2-secondary-note:      #f057a0;\r\n\t\t\t\t\t--mod2-primary-note:        #ffb8de;\r\n\t\t\t\t\t--mod3-secondary-channel:   #553399;\r\n\t\t\t\t\t--mod3-primary-channel:     #8855fc;\r\n\t\t\t\t\t--mod3-secondary-note:      #aa64ff;\r\n\t\t\t\t\t--mod3-primary-note:\t    #f8ddff;\r\n\t\t\t\t\t--mod4-secondary-channel:   #a86436;\r\n\t\t\t\t\t--mod4-primary-channel:     #c8a825;\r\n\t\t\t\t\t--mod4-secondary-note:      #e8ba46;\r\n\t\t\t\t\t--mod4-primary-note:        #fff6d3;\r\n\t\t\t\t\t--mod-label-primary:        #999;\r\n\t\t\t\t\t--mod-label-secondary-text: #333;\r\n\t\t\t\t\t--mod-label-primary-text:   black;\r\n\t\t\t\t\t--disabled-note-primary:    #999;\r\n\t\t\t\t\t--disabled-note-secondary:  #666;\r\n\t\t\t\t}\r\n\t\t\t\t.beepboxEditor{\r\n\ttransform: rotate(0.5turn);\r\n}\r\n\t\t\t`,\r\n\t\t\t\"foxbox\": `\r\n\t\t\t:root {\r\n\t\t\t\t--page-margin: #ADD8E6;\r\n\t\t\t\t--editor-background: black;\r\n\t\t\t\t--hover-preview: white;\r\n\t\t\t\t--playhead: white;\r\n\t\t\t\t--primary-text: white;\r\n\t\t\t\t--secondary-text: #999;\r\n\t\t\t\t--inverted-text: black;\r\n\t\t\t\t--text-selection: rgba(119,68,255,0.99);\r\n\t\t\t\t--box-selection-fill: rgba(255,255,255,0.2);\r\n\t\t\t\t--loop-accent: #74f;\r\n\t\t\t\t--link-accent: #98f;\r\n\t\t\t\t--ui-widget-background: #444;\r\n\t\t\t\t--ui-widget-focus: #777;\r\n\t\t\t\t--pitch-background: #444;\r\n\t\t\t\t--tonic: #864;\r\n\t\t\t\t--fifth-note: #468;\r\n\t\t\t\t--white-piano-key: #bbb;\r\n\t\t\t\t--black-piano-key: #444;\r\n\t\t\t\t--white-piano-key-text: #131200;\r\n\t\t\t\t--black-piano-key-text: #fff;\r\n\t\t\t\t\t--use-color-formula: false;\r\n\t\t\t\t\t--track-editor-bg-pitch: #444;\r\n\t\t\t\t\t--track-editor-bg-pitch-dim: #333;\r\n\t\t\t\t\t--track-editor-bg-noise: #444;\r\n\t\t\t\t\t--track-editor-bg-noise-dim: #333;\r\n\t\t\t\t\t--track-editor-bg-mod: #234;\r\n\t\t\t\t\t--track-editor-bg-mod-dim: #123;\r\n\t\t\t\t\t--multiplicative-mod-slider: #456;\r\n\t\t\t\t\t--overwriting-mod-slider: #654;\r\n\t\t\t\t\t--indicator-primary: #74f;\r\n\t\t\t\t\t--indicator-secondary: #444;\r\n\t\t\t\t\t--select2-opt-group: #585858;\r\n\t\t\t\t\t--input-box-outline: #333;\r\n\t\t\t\t\t--mute-button-normal: #ffa033;\r\n\t\t\t\t\t--mute-button-mod: #9a6bff;\r\n\t\t\t\t--pitch1-secondary-channel: #0099A1;\r\n\t\t\t\t--pitch1-primary-channel:   #25F3FF;\r\n\t\t\t\t--pitch1-secondary-note:    #00BDC7;\r\n\t\t\t\t--pitch1-primary-note:      #92F9FF;\r\n\t\t\t\t--pitch2-secondary-channel: #A1A100;\r\n\t\t\t\t--pitch2-primary-channel:   #FFFF25;\r\n\t\t\t\t--pitch2-secondary-note:    #C7C700;\r\n\t\t\t\t--pitch2-primary-note:      #FFFF92;\r\n\t\t\t\t--pitch3-secondary-channel: #C75000;\r\n\t\t\t\t--pitch3-primary-channel:   #FF9752;\r\n\t\t\t\t--pitch3-secondary-note:    #FF771C;\r\n\t\t\t\t--pitch3-primary-note:      #FFCDAB;\r\n\t\t\t\t--pitch4-secondary-channel: #00A100;\r\n\t\t\t\t--pitch4-primary-channel:   #50FF50;\r\n\t\t\t\t--pitch4-secondary-note:    #00C700;\r\n\t\t\t\t--pitch4-primary-note:      #A0FFA0;\r\n\t\t\t\t--pitch5-secondary-channel: #D020D0;\r\n\t\t\t\t--pitch5-primary-channel:   #FF90FF;\r\n\t\t\t\t--pitch5-secondary-note:    #E040E0;\r\n\t\t\t\t--pitch5-primary-note:      #FFC0FF;\r\n\t\t\t\t--pitch6-secondary-channel: #7777B0;\r\n\t\t\t\t--pitch6-primary-channel:   #A0A0FF;\r\n\t\t\t\t--pitch6-secondary-note:    #8888D0;\r\n\t\t\t\t--pitch6-primary-note:      #D0D0FF;\r\n\t\t\t\t--pitch7-secondary-channel: #8AA100;\r\n\t\t\t\t--pitch7-primary-channel:   #DEFF25;\r\n\t\t\t\t--pitch7-secondary-note:    #AAC700;\r\n\t\t\t\t--pitch7-primary-note:      #E6FF92;\r\n\t\t\t\t--pitch8-secondary-channel: #DF0019;\r\n\t\t\t\t--pitch8-primary-channel:   #FF98A4;\r\n\t\t\t\t--pitch8-secondary-note:    #FF4E63;\r\n\t\t\t\t--pitch8-primary-note:      #FFB2BB;\r\n\t\t\t\t--pitch9-secondary-channel: #00A170;\r\n\t\t\t\t--pitch9-primary-channel:   #50FFC9;\r\n\t\t\t\t--pitch9-secondary-note:    #00C78A;\r\n\t\t\t\t--pitch9-primary-note:      #83FFD9;\r\n\t\t\t\t--pitch10-secondary-channel:#A11FFF;\r\n\t\t\t\t--pitch10-primary-channel:  #CE8BFF;\r\n\t\t\t\t--pitch10-secondary-note:   #B757FF;\r\n\t\t\t\t--pitch10-primary-note:     #DFACFF;\r\n\t\t\t\t--noise1-secondary-channel: #6F6F6F;\r\n\t\t\t\t--noise1-primary-channel:   #AAAAAA;\r\n\t\t\t\t--noise1-secondary-note:    #A7A7A7;\r\n\t\t\t\t--noise1-primary-note:      #E0E0E0;\r\n\t\t\t\t--noise2-secondary-channel: #996633;\r\n\t\t\t\t--noise2-primary-channel:   #DDAA77;\r\n\t\t\t\t--noise2-secondary-note:    #CC9966;\r\n\t\t\t\t--noise2-primary-note:      #F0D0BB;\r\n\t\t\t\t--noise3-secondary-channel: #4A6D8F;\r\n\t\t\t\t--noise3-primary-channel:   #77AADD;\r\n\t\t\t\t--noise3-secondary-note:    #6F9FCF;\r\n\t\t\t\t--noise3-primary-note:      #BBD7FF;\r\n\t\t\t\t--noise4-secondary-channel: #7A4F9A;\r\n\t\t\t\t--noise4-primary-channel:   #AF82D2;\r\n\t\t\t\t--noise4-secondary-note:    #9E71C1;\r\n\t\t\t\t--noise4-primary-note:      #D4C1EA;\r\n\t\t\t\t--noise5-secondary-channel: #607837;\r\n\t\t\t\t--noise5-primary-channel:   #A2BB77;\r\n\t\t\t\t--noise5-secondary-note:    #91AA66;\r\n\t\t\t\t--noise5-primary-note:      #C5E2B2;\r\n          --mod1-secondary-channel:   #339955;\r\n\t\t\t\t\t--mod1-primary-channel:     #77fc55;\r\n\t\t\t\t\t--mod1-secondary-note:      #77ff8a;\r\n\t\t\t\t\t--mod1-primary-note:        #cdffee;\r\n\t\t\t\t\t--mod2-secondary-channel:   #993355;\r\n\t\t\t\t\t--mod2-primary-channel:     #f04960;\r\n\t\t\t\t\t--mod2-secondary-note:      #f057a0;\r\n\t\t\t\t\t--mod2-primary-note:        #ffb8de;\r\n\t\t\t\t\t--mod3-secondary-channel:   #553399;\r\n\t\t\t\t\t--mod3-primary-channel:     #8855fc;\r\n\t\t\t\t\t--mod3-secondary-note:      #aa64ff;\r\n\t\t\t\t\t--mod3-primary-note:\t    #f8ddff;\r\n\t\t\t\t\t--mod4-secondary-channel:   #a86436;\r\n\t\t\t\t\t--mod4-primary-channel:     #c8a825;\r\n\t\t\t\t\t--mod4-secondary-note:      #e8ba46;\r\n\t\t\t\t\t--mod4-primary-note:        #fff6d3;\r\n\t\t\t\t\t--mod-label-primary:        #999;\r\n\t\t\t\t\t--mod-label-secondary-text: #333;\r\n\t\t\t\t\t--mod-label-primary-text:   black;\r\n\t\t\t\t\t--disabled-note-primary:    #999;\r\n\t\t\t\t\t--disabled-note-secondary:  #666;\t\r\n\t\t\t\t}\r\n\t\t\t`,\r\n\t\t\t \"wackybox\": `\r\n\t\t\t\r\n\t\t\t:root {\r\n\t\t\t\tcursor: url('wackybox_cursor.png'), auto;\r\n\t\t\t\t--page-margin: black;\r\n\t\t\t\t--editor-background: black;\r\n\t\t\t\t--hover-preview: white;\r\n\t\t\t\t--playhead: white;\r\n\t\t\t\t--primary-text: white;\r\n\t\t\t\t--secondary-text: #999;\r\n\t\t\t\t--inverted-text: black;\r\n\t\t\t\t--text-selection: rgba(119,68,255,0.99);\r\n\t\t\t\t--box-selection-fill: rgba(255,255,255,0.2);\r\n\t\t\t\t--loop-accent: #74f;\r\n\t\t\t\t--link-accent: #98f;\r\n\t\t\t\t--ui-widget-background: #444;\r\n\t\t\t\t--ui-widget-focus: #777;\r\n\t\t\t\t--pitch-background: #444;\r\n\t\t\t\t--tonic: #864;\r\n\t\t\t\t--fifth-note: #468;\r\n\t\t\t\t--white-piano-key: #bbb;\r\n\t\t\t\t--black-piano-key: #444;\r\n\t\t\t\t--white-piano-key-text: #131200;\r\n\t\t\t\t--black-piano-key-text: #fff;\r\n\t\t\t\t\t--use-color-formula: false;\r\n\t\t\t\t\t--track-editor-bg-pitch: #444;\r\n\t\t\t\t\t--track-editor-bg-pitch-dim: #333;\r\n\t\t\t\t\t--track-editor-bg-noise: #444;\r\n\t\t\t\t\t--track-editor-bg-noise-dim: #333;\r\n\t\t\t\t\t--track-editor-bg-mod: #234;\r\n\t\t\t\t\t--track-editor-bg-mod-dim: #123;\r\n\t\t\t\t\t--multiplicative-mod-slider: #456;\r\n\t\t\t\t\t--overwriting-mod-slider: #654;\r\n\t\t\t\t\t--indicator-primary: #74f;\r\n\t\t\t\t\t--indicator-secondary: #444;\r\n\t\t\t\t\t--select2-opt-group: #585858;\r\n\t\t\t\t\t--input-box-outline: #333;\r\n\t\t\t\t\t--mute-button-normal: #ffa033;\r\n\t\t\t\t\t--mute-button-mod: #9a6bff;\r\n\t\t\t\t--pitch1-secondary-channel: #0099A1;\r\n\t\t\t\t--pitch1-primary-channel:   #25F3FF;\r\n\t\t\t\t--pitch1-secondary-note:    #00BDC7;\r\n\t\t\t\t--pitch1-primary-note:      #92F9FF;\r\n\t\t\t\t--pitch2-secondary-channel: #A1A100;\r\n\t\t\t\t--pitch2-primary-channel:   #FFFF25;\r\n\t\t\t\t--pitch2-secondary-note:    #C7C700;\r\n\t\t\t\t--pitch2-primary-note:      #FFFF92;\r\n\t\t\t\t--pitch3-secondary-channel: #C75000;\r\n\t\t\t\t--pitch3-primary-channel:   #FF9752;\r\n\t\t\t\t--pitch3-secondary-note:    #FF771C;\r\n\t\t\t\t--pitch3-primary-note:      #FFCDAB;\r\n\t\t\t\t--pitch4-secondary-channel: #00A100;\r\n\t\t\t\t--pitch4-primary-channel:   #50FF50;\r\n\t\t\t\t--pitch4-secondary-note:    #00C700;\r\n\t\t\t\t--pitch4-primary-note:      #A0FFA0;\r\n\t\t\t\t--pitch5-secondary-channel: #D020D0;\r\n\t\t\t\t--pitch5-primary-channel:   #FF90FF;\r\n\t\t\t\t--pitch5-secondary-note:    #E040E0;\r\n\t\t\t\t--pitch5-primary-note:      #FFC0FF;\r\n\t\t\t\t--pitch6-secondary-channel: #7777B0;\r\n\t\t\t\t--pitch6-primary-channel:   #A0A0FF;\r\n\t\t\t\t--pitch6-secondary-note:    #8888D0;\r\n\t\t\t\t--pitch6-primary-note:      #D0D0FF;\r\n\t\t\t\t--pitch7-secondary-channel: #8AA100;\r\n\t\t\t\t--pitch7-primary-channel:   #DEFF25;\r\n\t\t\t\t--pitch7-secondary-note:    #AAC700;\r\n\t\t\t\t--pitch7-primary-note:      #E6FF92;\r\n\t\t\t\t--pitch8-secondary-channel: #DF0019;\r\n\t\t\t\t--pitch8-primary-channel:   #FF98A4;\r\n\t\t\t\t--pitch8-secondary-note:    #FF4E63;\r\n\t\t\t\t--pitch8-primary-note:      #FFB2BB;\r\n\t\t\t\t--pitch9-secondary-channel: #00A170;\r\n\t\t\t\t--pitch9-primary-channel:   #50FFC9;\r\n\t\t\t\t--pitch9-secondary-note:    #00C78A;\r\n\t\t\t\t--pitch9-primary-note:      #83FFD9;\r\n\t\t\t\t--pitch10-secondary-channel:#A11FFF;\r\n\t\t\t\t--pitch10-primary-channel:  #CE8BFF;\r\n\t\t\t\t--pitch10-secondary-note:   #B757FF;\r\n\t\t\t\t--pitch10-primary-note:     #DFACFF;\r\n\t\t\t\t--noise1-secondary-channel: #6F6F6F;\r\n\t\t\t\t--noise1-primary-channel:   #AAAAAA;\r\n\t\t\t\t--noise1-secondary-note:    #A7A7A7;\r\n\t\t\t\t--noise1-primary-note:      #E0E0E0;\r\n\t\t\t\t--noise2-secondary-channel: #996633;\r\n\t\t\t\t--noise2-primary-channel:   #DDAA77;\r\n\t\t\t\t--noise2-secondary-note:    #CC9966;\r\n\t\t\t\t--noise2-primary-note:      #F0D0BB;\r\n\t\t\t\t--noise3-secondary-channel: #4A6D8F;\r\n\t\t\t\t--noise3-primary-channel:   #77AADD;\r\n\t\t\t\t--noise3-secondary-note:    #6F9FCF;\r\n\t\t\t\t--noise3-primary-note:      #BBD7FF;\r\n\t\t\t\t--noise4-secondary-channel: #7A4F9A;\r\n\t\t\t\t--noise4-primary-channel:   #AF82D2;\r\n\t\t\t\t--noise4-secondary-note:    #9E71C1;\r\n\t\t\t\t--noise4-primary-note:      #D4C1EA;\r\n\t\t\t\t--noise5-secondary-channel: #607837;\r\n\t\t\t\t--noise5-primary-channel:   #A2BB77;\r\n\t\t\t\t--noise5-secondary-note:    #91AA66;\r\n\t\t\t\t--noise5-primary-note:      #C5E2B2;\r\n          --mod1-secondary-channel:   #339955;\r\n\t\t\t\t\t--mod1-primary-channel:     #77fc55;\r\n\t\t\t\t\t--mod1-secondary-note:      #77ff8a;\r\n\t\t\t\t\t--mod1-primary-note:        #cdffee;\r\n\t\t\t\t\t--mod2-secondary-channel:   #993355;\r\n\t\t\t\t\t--mod2-primary-channel:     #f04960;\r\n\t\t\t\t\t--mod2-secondary-note:      #f057a0;\r\n\t\t\t\t\t--mod2-primary-note:        #ffb8de;\r\n\t\t\t\t\t--mod3-secondary-channel:   #553399;\r\n\t\t\t\t\t--mod3-primary-channel:     #8855fc;\r\n\t\t\t\t\t--mod3-secondary-note:      #aa64ff;\r\n\t\t\t\t\t--mod3-primary-note:\t    #f8ddff;\r\n\t\t\t\t\t--mod4-secondary-channel:   #a86436;\r\n\t\t\t\t\t--mod4-primary-channel:     #c8a825;\r\n\t\t\t\t\t--mod4-secondary-note:      #e8ba46;\r\n\t\t\t\t\t--mod4-primary-note:        #fff6d3;\r\n\t\t\t\t\t--mod-label-primary:        #999;\r\n\t\t\t\t\t--mod-label-secondary-text: #333;\r\n\t\t\t\t\t--mod-label-primary-text:   black;\r\n\t\t\t\t\t--disabled-note-primary:    #999;\r\n\t\t\t\t\t--disabled-note-secondary:  #666;\r\n\t\t\t\t}\r\n\r\n.beepboxEditor {\r\n\tcursor: url('wackybox_cursor.png'), auto !important;;\r\n}\r\n\t\t\r\n.beepboxEditor .tip {\r\n\tcursor: url('wackybox_cursor.png'), auto !important;;\r\n}\r\n\r\n.beepboxEditor .prompt label {\r\n\tcursor: url('wackybox_cursor.png'), auto !important;;\r\n}\r\n\r\n.beepboxEditor .layout-option {\r\n\tcursor: url('wackybox_cursor.png'), auto !important;;\r\n}\r\n\r\n.beepboxEditor select {\r\n\tcursor: url('wackybox_cursor.png'), auto !important;;\r\n}\r\n\r\n.select2-selection__rendered {\r\n\tcursor: url('wackybox_cursor.png'), auto !important;;\r\n}\r\n\r\n.select2-container--default .select2-results__group {\r\n    cursor: url('wackybox_cursor.png'), auto !important;;\r\n}\r\n\r\n.beepboxEditor button {\r\n\t cursor: url('wackybox_cursor.png'), auto !important;;\r\n}\r\n\r\n.beepboxEditor canvas {\r\n\tcursor: url('wackybox_cursor.png'), auto !important;;\r\n}\r\n\r\n.beepboxEditor input {\r\n\tcursor: url('wackybox_cursor.png'), auto !important;;\r\n}\r\n\r\n\t\t\t`,\r\n\t\t\t \"microbox\": `\r\n\t\t\t\t:root {\r\n\t\t\t\t\t--page-margin: #000000;\r\n\t\t\t\t\t--editor-background: #000000;\r\n\t\t\t\t\t--hover-preview: white;\r\n\t\t\t\t\t--playhead: rgba(255, 255, 255, 0.9);\r\n\t\t\t\t\t--primary-text: white;\r\n\t\t\t\t\t--secondary-text: #93B6AD;\r\n\t\t\t\t\t--inverted-text: black;\r\n\t\t\t\t\t--text-selection: rgba(47,255,250,0.99);\r\n\t\t\t\t\t--box-selection-fill: #03B068;\r\n\t\t\t\t\t--loop-accent: #FF0061;\r\n\t\t\t\t\t--link-accent: #FFC800;\r\n\t\t\t\t\t--ui-widget-background: #38554E;\r\n\t\t\t\t\t--ui-widget-focus: #2A7E69;\r\n\t\t\t\t\t--pitch-background: #281F23;\r\n\t\t\t\t\t--tonic: #004634;\r\n\t\t\t\t\t--fifth-note: #463400;\r\n\t\t\t\t\t--white-piano-key: #edc;\r\n\t\t\t\t\t--black-piano-key: #456;\r\n\t\t\t\t\t--use-color-formula: true;\r\n\t\t\t\t\t--track-editor-bg-pitch: #333333;\r\n\t\t\t\t\t--track-editor-bg-pitch-dim: #000000;\r\n\t\t\t\t\t--track-editor-bg-noise: #463400;\r\n\t\t\t\t\t--track-editor-bg-noise-dim: #000000;\r\n\t\t\t\t\t--track-editor-bg-mod: #004634;\r\n\t\t\t\t\t--track-editor-bg-mod-dim: #000000;\r\n\t\t\t\t\t--multiplicative-mod-slider: #FFC800;\r\n\t\t\t\t\t--overwriting-mod-slider: #00ffc0;\r\n\t\t\t\t\t--indicator-primary: #333333;\r\n\t\t\t\t\t--indicator-secondary: #00ffc0;\r\n\t\t\t\t\t--select2-opt-group: #2B2B2B;\r\n\t\t\t\t\t--input-box-outline: #69BFC6;\r\n\t\t\t\t\t--mute-button-normal: #00ffc0;\r\n\t\t\t\t\t--mute-button-mod: #FFC800;\r\n\t\t\t\t\t--mod-label-primary: #38554E;\r\n\t\t\t\t\t--mod-label-secondary-text: rgb(0, 43, 45);\r\n\t\t\t\t\t--mod-label-primary-text: white;\r\n\t\t\t\t\t--pitch-secondary-channel-hue: 0;\r\n\t\t\t\t\t--pitch-secondary-channel-hue-scale: 6.1;\r\n\t\t\t\t\t--pitch-secondary-channel-sat: 83.3;\r\n\t\t\t\t\t--pitch-secondary-channel-sat-scale: 0.1;\r\n\t\t\t\t\t--pitch-secondary-channel-lum: 40;\r\n\t\t\t\t\t--pitch-secondary-channel-lum-scale: 0.05;\r\n\t\t\t\t\t--pitch-primary-channel-hue: 0;\r\n\t\t\t\t\t--pitch-primary-channel-hue-scale: 6.1;\r\n\t\t\t\t\t--pitch-primary-channel-sat: 100;\r\n\t\t\t\t\t--pitch-primary-channel-sat-scale: 0.1;\r\n\t\t\t\t\t--pitch-primary-channel-lum: 67.5;\r\n\t\t\t\t\t--pitch-primary-channel-lum-scale: 0.05;\r\n\t\t\t\t\t--pitch-secondary-note-hue: 0;\r\n\t\t\t\t\t--pitch-secondary-note-hue-scale: 6.1;\r\n\t\t\t\t\t--pitch-secondary-note-sat: 93.9;\r\n\t\t\t\t\t--pitch-secondary-note-sat-scale: 0.1;\r\n\t\t\t\t\t--pitch-secondary-note-lum: 25;\r\n\t\t\t\t\t--pitch-secondary-note-lum-scale: 0.05;\r\n\t\t\t\t\t--pitch-primary-note-hue: 0;\r\n\t\t\t\t\t--pitch-primary-note-hue-scale: 6.1;\r\n\t\t\t\t\t--pitch-primary-note-sat: 100;\r\n\t\t\t\t\t--pitch-primary-note-sat-scale: 0.05;\r\n\t\t\t\t\t--pitch-primary-note-lum: 85.6;\r\n\t\t\t\t\t--pitch-primary-note-lum-scale: 0.025;\r\n\t\t\t\t\t--noise-secondary-channel-hue: 0;\r\n\t\t\t\t\t--noise-secondary-channel-hue-scale: 2;\r\n\t\t\t\t\t--noise-secondary-channel-sat: 25;\r\n\t\t\t\t\t--noise-secondary-channel-sat-scale: 0;\r\n\t\t\t\t\t--noise-secondary-channel-lum: 42;\r\n\t\t\t\t\t--noise-secondary-channel-lum-scale: 0;\r\n\t\t\t\t\t--noise-primary-channel-hue: 0;\r\n\t\t\t\t\t--noise-primary-channel-hue-scale: 2;\r\n\t\t\t\t\t--noise-primary-channel-sat: 33;\r\n\t\t\t\t\t--noise-primary-channel-sat-scale: 0;\r\n\t\t\t\t\t--noise-primary-channel-lum: 63.5;\r\n\t\t\t\t\t--noise-primary-channel-lum-scale: 0;\r\n\t\t\t\t\t--noise-secondary-note-hue: 0;\r\n\t\t\t\t\t--noise-secondary-note-hue-scale: 2;\r\n\t\t\t\t\t--noise-secondary-note-sat: 33.5;\r\n\t\t\t\t\t--noise-secondary-note-sat-scale: 0;\r\n\t\t\t\t\t--noise-secondary-note-lum: 55;\r\n\t\t\t\t\t--noise-secondary-note-lum-scale: 0;\r\n\t\t\t\t\t--noise-primary-note-hue: 0;\r\n\t\t\t\t\t--noise-primary-note-hue-scale: 2;\r\n\t\t\t\t\t--noise-primary-note-sat: 46.5;\r\n\t\t\t\t\t--noise-primary-note-sat-scale: 0;\r\n\t\t\t\t\t--noise-primary-note-lum: 74;\r\n\t\t\t\t\t--noise-primary-note-lum-scale: 0;\r\n\t\t\t\t\t--mod-secondary-channel-hue: 192;\r\n\t\t\t\t\t--mod-secondary-channel-hue-scale: 1.5;\r\n\t\t\t\t\t--mod-secondary-channel-sat: 88;\r\n\t\t\t\t\t--mod-secondary-channel-sat-scale: 0;\r\n\t\t\t\t\t--mod-secondary-channel-lum: 50;\r\n\t\t\t\t\t--mod-secondary-channel-lum-scale: 0;\r\n\t\t\t\t\t--mod-primary-channel-hue: 192;\r\n\t\t\t\t\t--mod-primary-channel-hue-scale: 1.5;\r\n\t\t\t\t\t--mod-primary-channel-sat: 96;\r\n\t\t\t\t\t--mod-primary-channel-sat-scale: 0;\r\n\t\t\t\t\t--mod-primary-channel-lum: 80;\r\n\t\t\t\t\t--mod-primary-channel-lum-scale: 0;\r\n\t\t\t\t\t--mod-secondary-note-hue: 192;\r\n\t\t\t\t\t--mod-secondary-note-hue-scale: 1.5;\r\n\t\t\t\t\t--mod-secondary-note-sat: 92;\r\n\t\t\t\t\t--mod-secondary-note-sat-scale: 0;\r\n\t\t\t\t\t--mod-secondary-note-lum: 45;\r\n\t\t\t\t\t--mod-secondary-note-lum-scale: 0;\r\n\t\t\t\t\t--mod-primary-note-hue: 192;\r\n\t\t\t\t\t--mod-primary-note-hue-scale: 1.5;\r\n\t\t\t\t\t--mod-primary-note-sat: 96;\r\n\t\t\t\t\t--mod-primary-note-sat-scale: 0;\r\n\t\t\t\t\t--mod-primary-note-lum: 85;\r\n\t\t\t\t\t--mod-primary-note-lum-scale: 0;\r\n\t\t\t\t}\r\n\t\t\t`,\r\n\t\t\t \"ultrabox terminal\": `\r\n\t\t\t\t\r\n\t\t\t\t@import url(https://fonts.googleapis.com/css?family=VT323);\t\t\r\n:root {\r\n\t\t\t\t--page-margin: black;\r\n\t\t\t\t--editor-background: black;\r\n\t\t\t\t--hover-preview: #000200;\r\n\t\t\t\t--playhead: #393;\r\n\t\t\t\t--primary-text: #393;\r\n\t\t\t\t--secondary-text: #393;\r\n\t\t\t\t--inverted-text: #011910;\r\n\t\t\t\t--text-selection: #393;\r\n\t\t\t\t--box-selection-fill: #393;\r\n\t\t\t\t--loop-accent: #393;\r\n\t\t\t\t--link-accent: #393;\r\n\t\t\t\t--ui-widget-background:  #000800;\r\n\t\t\t\t--ui-widget-focus: #011910;\r\n\t\t\t\t--pitch-background: #000800;\r\n\t\t\t\t--tonic: #000600;\r\n\t\t\t\t--fifth-note: #393;\r\n\t\t\t\t--white-piano-key: white;\r\n\t\t\t\t--black-piano-key: black;\r\n\t\t\t\t--white-piano-key-text: #131200;\r\n\t\t\t\t--black-piano-key-text: #fff;\r\n\t\t\t\t\t--use-color-formula: false;\r\n\t\t\t\t\t--track-editor-bg-pitch: #000800;\r\n\t\t\t\t\t--track-editor-bg-pitch-dim: #000600;\r\n\t\t\t\t\t--track-editor-bg-noise: #000800;\r\n\t\t\t\t\t--track-editor-bg-noise-dim: #000600;\r\n\t\t\t\t\t--track-editor-bg-mod: #000800;\r\n\t\t\t\t\t--track-editor-bg-mod-dim: #000600;\r\n\t\t\t\t\t--multiplicative-mod-slider: #456;\r\n\t\t\t\t\t--overwriting-mod-slider: #393;\r\n\t\t\t\t\t--indicator-primary: #393;\r\n\t\t\t\t\t--indicator-secondary: #222;\r\n\t\t\t\t\t--select2-opt-group: #393;\r\n\t\t\t\t\t--input-box-outline: transparent;\r\n\t\t\t\t\t--mute-button-normal: #393;\r\n\t\t\t\t\t--mute-button-mod: #393;\r\n\t\t\t\t--pitch1-secondary-channel: #011910;\r\n\t\t\t\t--pitch1-primary-channel:   #393;\r\n\t\t\t\t--pitch1-secondary-note:    #011910;\r\n\t\t\t\t--pitch1-primary-note:      #393;\r\n\t\t\t--pitch2-secondary-channel: #011910;\r\n\t\t\t\t--pitch2-primary-channel:   #393;\r\n\t\t\t\t--pitch2-secondary-note:    #011910;\r\n\t\t\t\t--pitch2-primary-note:      #393;\r\n\t\t\t\t--pitch3-secondary-channel: #011910;\r\n\t\t\t\t--pitch3-primary-channel:   #393;\r\n\t\t\t\t--pitch3-secondary-note:    #011910;\r\n\t\t\t\t--pitch3-primary-note:      #393;\r\n\t\t\t--pitch4-secondary-channel: #011910;\r\n\t\t\t\t--pitch4-primary-channel:   #393;\r\n\t\t\t\t--pitch4-secondary-note:    #011910;\r\n\t\t\t\t--pitch4-primary-note:      #393;\r\n\t\t\t--pitch5-secondary-channel: #011910;\r\n\t\t\t\t--pitch5-primary-channel:   #393;\r\n\t\t\t\t--pitch5-secondary-note:    #011910;\r\n\t\t\t\t--pitch5-primary-note:      #393;\r\n\t\t\t--pitch6-secondary-channel: #011910;\r\n\t\t\t\t--pitch6-primary-channel:   #393;\r\n\t\t\t\t--pitch6-secondary-note:    #011910;\r\n\t\t\t\t--pitch6-primary-note:      #393;\r\n\t\t\t\t--pitch7-secondary-channel: #011910;\r\n\t\t\t\t--pitch7-primary-channel:   #393;\r\n\t\t\t\t--pitch7-secondary-note:    #011910;\r\n\t\t\t\t--pitch7-primary-note:      #393;\r\n\t\t\t--pitch8-secondary-channel: #011910;\r\n\t\t\t\t--pitch8-primary-channel:   #393;\r\n\t\t\t\t--pitch8-secondary-note:    #011910;\r\n\t\t\t\t--pitch8-primary-note:      #393;\r\n\t\t\t\t--pitch9-secondary-channel: #011910;\r\n\t\t\t\t--pitch9-primary-channel:   #393;\r\n\t\t\t\t--pitch9-secondary-note:    #011910;\r\n\t\t\t\t--pitch9-primary-note:      #393;\r\n\t\t\t--pitch10-secondary-channel: #011910;\r\n\t\t\t\t--pitch10-primary-channel:   #393;\r\n\t\t\t\t--pitch10-secondary-note:    #011910;\r\n\t\t\t\t--pitch10-primary-note:      #393;\r\n\t\t\t\t--noise1-secondary-channel: #011910;\r\n\t\t\t\t--noise1-primary-channel:   #393;\r\n\t\t\t\t--noise1-secondary-note:    #011910;\r\n\t\t\t\t--noise1-primary-note:      #393;\r\n\t\t\t\t--noise2-secondary-channel: #011910;\r\n\t\t\t\t--noise2-primary-channel:   #393;\r\n\t\t\t\t--noise2-secondary-note:    #011910;\r\n\t\t\t\t--noise2-primary-note:      #393;\r\n\t\t\t\t--noise3-secondary-channel: #011910;\r\n\t\t\t\t--noise3-primary-channel:   #393;\r\n\t\t\t\t--noise3-secondary-note:    #011910;\r\n\t\t\t\t--noise3-primary-note:      #393;\r\n\t\t\t\t--noise4-secondary-channel: #011910;\r\n\t\t\t\t--noise4-primary-channel:   #393;\r\n\t\t\t\t--noise4-secondary-note:    #011910;\r\n\t\t\t\t--noise4-primary-note:      #393;\r\n\t\t\t\t--noise5-secondary-channel: #011910;\r\n\t\t\t\t--noise5-primary-channel:   #393;\r\n\t\t\t\t--noise5-secondary-note:    #011910;\r\n\t\t\t\t--noise5-primary-note:      #393;\r\n          --mod1-secondary-channel:   #011910;\r\n\t\t\t\t\t--mod1-primary-channel:     #393;\r\n\t\t\t\t\t--mod1-secondary-note:      #011910;\r\n\t\t\t\t\t--mod1-primary-note:        #393;\r\n\t\t\t\t\t--mod2-secondary-channel:   #011910;\r\n\t\t\t\t\t--mod2-primary-channel:     #393;\r\n\t\t\t\t\t--mod2-secondary-note:      #011910;\r\n\t\t\t\t\t--mod2-primary-note:        #393;\r\n\t\t\t\t\t--mod3-secondary-channel:   #011910;\r\n\t\t\t\t\t--mod3-primary-channel:     #393;\r\n\t\t\t\t\t--mod3-secondary-note:      #011910;\r\n\t\t\t\t\t--mod3-primary-note:\t    #393;\r\n\t\t\t\t\t--mod4-secondary-channel:   #011910;\r\n\t\t\t\t\t--mod4-primary-channel:     #393;\r\n\t\t\t\t\t--mod4-secondary-note:      #011910;\r\n\t\t\t\t\t--mod4-primary-note:        #393;\r\n\t\t\t\t\t--mod-label-primary:        #999;\r\n\t\t\t\t\t--mod-label-secondary-text: #333;\r\n\t\t\t\t\t--mod-label-primary-text:  #222;\r\n\t\t\t\t\t--disabled-note-primary:    #242;\r\n\t\t\t\t\t--disabled-note-secondary:  #121;\r\n\t\t\t\t\tfont-family: 'VT323', Courier;\r\n\t\t\t\t\t\r\n\t\t\t\t}\r\n\t\t\t\t#beepboxEditorContainer::after {\r\n    content: \"\";\r\n    position: fixed;\r\n    width: 100%;\r\n    height: 100%;\r\n    background: linear-gradient(rgba(0, 0, 0, 0) 50%, rgba(0, 0, 0, 0.5) 50%);\r\n    left: 0;\r\n    top: 0;\r\n    background-size: 100% 2px;\r\n    touch-action: none;\r\n    pointer-events: none;\r\n    z-index: 100;\r\n}\r\n\t\t\t`,\r\n\t\t\t \"slushie\": `\r\n\t\t\t:root {\r\n\t\t\t\t--page-margin: #040814;\r\n    --editor-background: #040814;\r\n    --hover-preview: #c6f7ff;\r\n    --playhead: white;\r\n    --primary-text: #d3f3ff;\r\n    --secondary-text: #6f72b5;\r\n    --inverted-text: black;\r\n    --text-selection: rgba(119,68,255,0.99);\r\n    --box-selection-fill: rgb(43 70 171 / 62%);\r\n    --loop-accent: #573ebb;\r\n    --link-accent: #98f;\r\n    --ui-widget-background: #2e2f44;\r\n    --ui-widget-focus: #2b2c46;\r\n    --pitch-background: #353654;\r\n    --tonic: #716fe3;\r\n    --fifth-note: #76469b;\r\n    --white-piano-key: #abbce3;\r\n    --black-piano-key: #2f235e;\r\n    --use-color-formula: false;\r\n    --track-editor-bg-pitch: #3a3b5c;\r\n    --track-editor-bg-pitch-dim: #1f2036;\r\n    --track-editor-bg-noise: #3c3554;\r\n    --track-editor-bg-noise-dim: #1e1834;\r\n    --track-editor-bg-mod: #30335e;\r\n    --track-editor-bg-mod-dim: #161938;\r\n    --multiplicative-mod-slider: #e29cff;\r\n    --overwriting-mod-slider: #495789;\r\n    --indicator-primary: #e1a6ff;\r\n    --indicator-secondary: #415187;\r\n    --select2-opt-group: #22223a;\r\n    --input-box-outline: #2d2648;\r\n    --mute-button-normal: #7aceff;\r\n    --mute-button-mod: #9d6bff;\r\n    --pitch1-secondary-channel: #5f3ea5;\r\n    --pitch1-primary-channel: #c1a4ff;\r\n    --pitch1-secondary-note: #794fd3;\r\n    --pitch1-primary-note: #d8c6ff;\r\n    --pitch2-secondary-channel: #4f44bf;\r\n    --pitch2-primary-channel: #9287ff;\r\n    --pitch2-secondary-note: #5e51d9;\r\n    --pitch2-primary-note: #b6afff;\r\n    --pitch3-secondary-channel: #374eb9;\r\n    --pitch3-primary-channel: #8097ff;\r\n    --pitch3-secondary-note: #445cc9;\r\n    --pitch3-primary-note: #a0b2ff;\r\n    --pitch4-secondary-channel: #2867cf;\r\n    --pitch4-primary-channel: #6fa5ff;\r\n    --pitch4-secondary-note: #2e6ed7;\r\n    --pitch4-primary-note: #a6c7ff;\r\n    --pitch5-secondary-channel: #3175a7;\r\n    --pitch5-primary-channel: #7ec9ff;\r\n    --pitch5-secondary-note: #367eb3;\r\n    --pitch5-primary-note: #9fd7ff;\r\n    --pitch6-secondary-channel: #3993a9;\r\n    --pitch6-primary-channel: #8ce9ff;\r\n    --pitch6-secondary-note: #386da3;\r\n    --pitch6-primary-note: #9eecff;\r\n    --pitch7-secondary-channel: #369d8a;\r\n    --pitch7-primary-channel: #8bfce7;\r\n    --pitch7-secondary-note: #1c93a7;\r\n    --pitch7-primary-note: #abffef;\r\n    --pitch8-secondary-channel: #00A170;\r\n    --pitch8-primary-channel: #50FFC9;\r\n    --pitch8-secondary-note: #00C78A;\r\n    --pitch8-primary-note: #83FFD9;\r\n    --pitch9-secondary-channel: #49b374;\r\n    --pitch9-primary-channel: #8affa9;\r\n    --pitch9-secondary-note: #26815f;\r\n    --pitch9-primary-note: #c8ffde;\r\n    --pitch10-secondary-channel: #58a747;\r\n    --pitch10-primary-channel: #bbffaa;\r\n    --pitch10-secondary-note: #1d7c48;\r\n    --pitch10-primary-note: #c7ffbc;\r\n    --noise1-secondary-channel: #42829b;\r\n    --noise1-primary-channel: #97d3fc;\r\n    --noise1-secondary-note: #3f53b3;\r\n    --noise1-primary-note: #97d3fc;\r\n    --noise2-secondary-channel: #6354bb;\r\n    --noise2-primary-channel: #9a89ff;\r\n    --noise2-secondary-note: #5f4dcd;\r\n    --noise2-primary-note: #c6bcff;\r\n    --noise3-secondary-channel: #704a95;\r\n    --noise3-primary-channel: #c285ff;\r\n    --noise3-secondary-note: #ad5aff;\r\n    --noise3-primary-note: #d3a6ff;\r\n    --noise4-secondary-channel: #a53c65;\r\n    --noise4-primary-channel: #f794bb;\r\n    --noise4-secondary-note: #cb5080;\r\n    --noise4-primary-note: #f794bb;\r\n    --noise5-secondary-channel: #9b2d2d;\r\n    --noise5-primary-channel: #ff7676;\r\n    --noise5-secondary-note: #cb4444;\r\n    --noise5-primary-note: #ff9999;\r\n    --mod1-secondary-channel: #b7613c;\r\n    --mod1-primary-channel: #ff9f76;\r\n    --mod1-secondary-note: #e77e52;\r\n    --mod1-primary-note: #ffb99b;\r\n    --mod2-secondary-channel: #916d34;\r\n    --mod2-primary-channel: #fece80;\r\n    --mod2-secondary-note: #c58b35;\r\n    --mod2-primary-note: #ffdda5;\r\n    --mod3-secondary-channel: #83761a;\r\n    --mod3-primary-channel: #fdf68c;\r\n    --mod3-secondary-note: #c18e00;\r\n    --mod3-primary-note: #fdf68c;\r\n    --mod4-secondary-channel: #a86436;\r\n    --mod4-primary-channel: #c8a825;\r\n    --mod4-secondary-note: #e8ba46;\r\n    --mod4-primary-note: #c8a825;\r\n    --mod-label-primary: #37325e;\r\n    --mod-label-secondary-text: #6e8aa7;\r\n    --mod-label-primary-text: #c1ffff;\r\n    --disabled-note-primary: #999;\r\n    --disabled-note-secondary: #666;\r\n\t\t\t\t}\r\n\t\t\t`,\r\n\t\t\t  \"custom\": `${localStorage.getItem(\"customColors\") || `:root {\r\n\t\t\t\t--page-margin: #040410;\r\n\t\t\t\t--editor-background: #040410;\r\n\t\t\t\t--hover-preview: white;\r\n\t\t\t\t--playhead: rgba(255, 255, 255, 0.9);\r\n\t\t\t\t--primary-text: white;\r\n\t\t\t\t--secondary-text: #84859a;\r\n\t\t\t\t--inverted-text: black;\r\n\t\t\t\t--text-selection: rgba(119,68,255,0.99);\r\n\t\t\t\t--box-selection-fill: #044b94;\r\n\t\t\t\t--loop-accent: #74f;\r\n\t\t\t\t--link-accent: #98f;\r\n\t\t\t\t--ui-widget-background: #393e4f;\r\n\t\t\t\t--ui-widget-focus: #6d6886;\r\n\t\t\t\t--pitch-background: #393e4f99;\r\n\t\t\t\t--tonic: #725491;\r\n\t\t\t\t--fifth-note: #54547a;\r\n\t\t\t\t--white-piano-key: #eee;\r\n\t\t\t\t--black-piano-key: #666;\r\n\t\t\t\t--use-color-formula: true;\r\n\t\t\t\t--track-editor-bg-pitch: #393e4f;\r\n\t\t\t\t--track-editor-bg-pitch-dim: #1c1d28;\r\n\t\t\t\t--track-editor-bg-noise: #3d3535;\r\n\t\t\t\t--track-editor-bg-noise-dim: #161313;\r\n\t\t\t\t--track-editor-bg-mod: #283560;\r\n\t\t\t\t--track-editor-bg-mod-dim: #0a101f;\r\n\t\t\t\t--multiplicative-mod-slider: #606c9f;\r\n\t\t\t\t--overwriting-mod-slider: #6850b5;\r\n\t\t\t\t--indicator-primary: #9c64f7;\r\n\t\t\t\t--indicator-secondary: #393e4f;\r\n\t\t\t\t--select2-opt-group: #5d576f;\r\n\t\t\t\t--input-box-outline: #222;\r\n\t\t\t\t--mute-button-normal: #dda85d;\r\n\t\t\t\t--mute-button-mod: #886eae;\r\n\t\t\t\t--mod-label-primary: #282840;\r\n\t\t\t\t--mod-label-secondary-text: rgb(87, 86, 120);\r\n\t\t\t\t--mod-label-primary-text: white;\r\n\t\t\t\t--pitch-secondary-channel-hue: 0;\r\n\t\t\t\t--pitch-secondary-channel-hue-scale: 6.1;\r\n\t\t\t\t--pitch-secondary-channel-sat: 83.3;\r\n\t\t\t\t--pitch-secondary-channel-sat-scale: 0.1;\r\n\t\t\t\t--pitch-secondary-channel-lum: 40;\r\n\t\t\t\t--pitch-secondary-channel-lum-scale: 0.05;\r\n\t\t\t\t--pitch-primary-channel-hue: 0;\r\n\t\t\t\t--pitch-primary-channel-hue-scale: 6.1;\r\n\t\t\t\t--pitch-primary-channel-sat: 100;\r\n\t\t\t\t--pitch-primary-channel-sat-scale: 0.1;\r\n\t\t\t\t--pitch-primary-channel-lum: 67.5;\r\n\t\t\t\t--pitch-primary-channel-lum-scale: 0.05;\r\n\t\t\t\t--pitch-secondary-note-hue: 0;\r\n\t\t\t\t--pitch-secondary-note-hue-scale: 6.1;\r\n\t\t\t\t--pitch-secondary-note-sat: 93.9;\r\n\t\t\t\t--pitch-secondary-note-sat-scale: 0.1;\r\n\t\t\t\t--pitch-secondary-note-lum: 25;\r\n\t\t\t\t--pitch-secondary-note-lum-scale: 0.05;\r\n\t\t\t\t--pitch-primary-note-hue: 0;\r\n\t\t\t\t--pitch-primary-note-hue-scale: 6.1;\r\n\t\t\t\t--pitch-primary-note-sat: 100;\r\n\t\t\t\t--pitch-primary-note-sat-scale: 0.05;\r\n\t\t\t\t--pitch-primary-note-lum: 85.6;\r\n\t\t\t\t--pitch-primary-note-lum-scale: 0.025;\r\n\t\t\t\t--noise-secondary-channel-hue: 0;\r\n\t\t\t\t--noise-secondary-channel-hue-scale: 2;\r\n\t\t\t\t--noise-secondary-channel-sat: 25;\r\n\t\t\t\t--noise-secondary-channel-sat-scale: 0;\r\n\t\t\t\t--noise-secondary-channel-lum: 42;\r\n\t\t\t\t--noise-secondary-channel-lum-scale: 0;\r\n\t\t\t\t--noise-primary-channel-hue: 0;\r\n\t\t\t\t--noise-primary-channel-hue-scale: 2;\r\n\t\t\t\t--noise-primary-channel-sat: 33;\r\n\t\t\t\t--noise-primary-channel-sat-scale: 0;\r\n\t\t\t\t--noise-primary-channel-lum: 63.5;\r\n\t\t\t\t--noise-primary-channel-lum-scale: 0;\r\n\t\t\t\t--noise-secondary-note-hue: 0;\r\n\t\t\t\t--noise-secondary-note-hue-scale: 2;\r\n\t\t\t\t--noise-secondary-note-sat: 33.5;\r\n\t\t\t\t--noise-secondary-note-sat-scale: 0;\r\n\t\t\t\t--noise-secondary-note-lum: 55;\r\n\t\t\t\t--noise-secondary-note-lum-scale: 0;\r\n\t\t\t\t--noise-primary-note-hue: 0;\r\n\t\t\t\t--noise-primary-note-hue-scale: 2;\r\n\t\t\t\t--noise-primary-note-sat: 46.5;\r\n\t\t\t\t--noise-primary-note-sat-scale: 0;\r\n\t\t\t\t--noise-primary-note-lum: 74;\r\n\t\t\t\t--noise-primary-note-lum-scale: 0;\r\n\t\t\t\t--mod-secondary-channel-hue: 192;\r\n\t\t\t\t--mod-secondary-channel-hue-scale: 1.5;\r\n\t\t\t\t--mod-secondary-channel-sat: 88;\r\n\t\t\t\t--mod-secondary-channel-sat-scale: 0;\r\n\t\t\t\t--mod-secondary-channel-lum: 50;\r\n\t\t\t\t--mod-secondary-channel-lum-scale: 0;\r\n\t\t\t\t--mod-primary-channel-hue: 192;\r\n\t\t\t\t--mod-primary-channel-hue-scale: 1.5;\r\n\t\t\t\t--mod-primary-channel-sat: 96;\r\n\t\t\t\t--mod-primary-channel-sat-scale: 0;\r\n\t\t\t\t--mod-primary-channel-lum: 80;\r\n\t\t\t\t--mod-primary-channel-lum-scale: 0;\r\n\t\t\t\t--mod-secondary-note-hue: 192;\r\n\t\t\t\t--mod-secondary-note-hue-scale: 1.5;\r\n\t\t\t\t--mod-secondary-note-sat: 92;\r\n\t\t\t\t--mod-secondary-note-sat-scale: 0;\r\n\t\t\t\t--mod-secondary-note-lum: 45;\r\n\t\t\t\t--mod-secondary-note-lum-scale: 0;\r\n\t\t\t\t--mod-primary-note-hue: 192;\r\n\t\t\t\t--mod-primary-note-hue-scale: 1.5;\r\n\t\t\t\t--mod-primary-note-sat: 96;\r\n\t\t\t\t--mod-primary-note-sat-scale: 0;\r\n\t\t\t\t--mod-primary-note-lum: 85;\r\n\t\t\t\t--mod-primary-note-lum-scale: 0;\r\n\t\t\t}`}`,\r\n    };\r\n\r\n    public static readonly pageMargin: string = \"var(--page-margin)\";\r\n    public static readonly editorBackground: string = \"var(--editor-background)\";\r\n    public static readonly hoverPreview: string = \"var(--hover-preview)\";\r\n    public static readonly playhead: string = \"var(--playhead)\";\r\n    public static readonly primaryText: string = \"var(--primary-text)\";\r\n    public static readonly secondaryText: string = \"var(--secondary-text)\";\r\n    public static readonly invertedText: string = \"var(--inverted-text)\";\r\n    public static readonly textSelection: string = \"var(--text-selection)\";\r\n    public static readonly boxSelectionFill: string = \"var(--box-selection-fill)\";\r\n    public static readonly loopAccent: string = \"var(--loop-accent)\";\r\n    public static readonly linkAccent: string = \"var(--link-accent)\";\r\n    public static readonly uiWidgetBackground: string = \"var(--ui-widget-background)\";\r\n    public static readonly uiWidgetFocus: string = \"var(--ui-widget-focus)\";\r\n    public static readonly pitchBackground: string = \"var(--pitch-background)\";\r\n    public static readonly tonic: string = \"var(--tonic)\";\r\n    public static readonly fifthNote: string = \"var(--fifth-note)\";\r\n    public static readonly whitePianoKey: string = \"var(--white-piano-key)\";\r\n    public static readonly blackPianoKey: string = \"var(--black-piano-key)\";\r\n    public static readonly whitePianoKeyText: string = \"var(--white-piano-key-text)\";\r\n    public static readonly blackPianoKeyText: string = \"var(--black-piano-key-text)\";\r\n    public static readonly useColorFormula: string = \"var(--use-color-formula)\";\r\n    public static readonly pitchSecondaryChannelHue: string = \"var(--pitch-secondary-channel-hue)\";\r\n    public static readonly pitchSecondaryChannelHueScale: string = \"var(--pitch-secondary-channel-hue-scale)\";\r\n    public static readonly pitchSecondaryChannelSat: string = \"var(--pitch-secondary-channel-sat)\";\r\n    public static readonly pitchSecondaryChannelSatScale: string = \"var(--pitch-secondary-channel-sat-scale)\";\r\n    public static readonly pitchSecondaryChannelLum: string = \"var(--pitch-secondary-channel-lum)\";\r\n    public static readonly pitchSecondaryChannelLumScale: string = \"var(--pitch-secondary-channel-lum-scale)\";\r\n    public static readonly pitchPrimaryChannelHue: string = \"var(--pitch-primary-channel-hue)\";\r\n    public static readonly pitchPrimaryChannelHueScale: string = \"var(--pitch-primary-channel-hue-scale)\";\r\n    public static readonly pitchPrimaryChannelSat: string = \"var(--pitch-primary-channel-sat)\";\r\n    public static readonly pitchPrimaryChannelSatScale: string = \"var(--pitch-primary-channel-sat-scale)\";\r\n    public static readonly pitchPrimaryChannelLum: string = \"var(--pitch-primary-channel-lum)\";\r\n    public static readonly pitchPrimaryChannelLumScale: string = \"var(--pitch-primary-channel-lum-scale)\";\r\n    public static readonly pitchSecondaryNoteHue: string = \"var(--pitch-secondary-note-hue)\";\r\n    public static readonly pitchSecondaryNoteHueScale: string = \"var(--pitch-secondary-note-hue-scale)\";\r\n    public static readonly pitchSecondaryNoteSat: string = \"var(--pitch-secondary-note-sat)\";\r\n    public static readonly pitchSecondaryNoteSatScale: string = \"var(--pitch-secondary-note-sat-scale)\";\r\n    public static readonly pitchSecondaryNoteLum: string = \"var(--pitch-secondary-note-lum)\";\r\n    public static readonly pitchSecondaryNoteLumScale: string = \"var(--pitch-secondary-note-lum-scale)\";\r\n    public static readonly pitchPrimaryNoteHue: string = \"var(--pitch-primary-note-hue)\";\r\n    public static readonly pitchPrimaryNoteHueScale: string = \"var(--pitch-primary-note-hue-scale)\";\r\n    public static readonly pitchPrimaryNoteSat: string = \"var(--pitch-primary-note-sat)\";\r\n    public static readonly pitchPrimaryNoteSatScale: string = \"var(--pitch-primary-note-sat-scale)\";\r\n    public static readonly pitchPrimaryNoteLum: string = \"var(--pitch-primary-note-lum)\";\r\n    public static readonly pitchPrimaryNoteLumScale: string = \"var(--pitch-primary-note-lum-scale)\";\r\n    public static readonly modSecondaryChannelHue: string = \"var(--mod-secondary-channel-hue)\";\r\n    public static readonly modSecondaryChannelHueScale: string = \"var(--mod-secondary-channel-hue-scale)\";\r\n    public static readonly modSecondaryChannelSat: string = \"var(--mod-secondary-channel-sat)\";\r\n    public static readonly modSecondaryChannelSatScale: string = \"var(--mod-secondary-channel-sat-scale)\";\r\n    public static readonly modSecondaryChannelLum: string = \"var(--mod-secondary-channel-lum)\";\r\n    public static readonly modSecondaryChannelLumScale: string = \"var(--mod-secondary-channel-lum-scale)\";\r\n    public static readonly modPrimaryChannelHue: string = \"var(--mod-primary-channel-hue)\";\r\n    public static readonly modPrimaryChannelHueScale: string = \"var(--mod-primary-channel-hue-scale)\";\r\n    public static readonly modPrimaryChannelSat: string = \"var(--mod-primary-channel-sat)\";\r\n    public static readonly modPrimaryChannelSatScale: string = \"var(--mod-primary-channel-sat-scale)\";\r\n    public static readonly modPrimaryChannelLum: string = \"var(--mod-primary-channel-lum)\";\r\n    public static readonly modPrimaryChannelLumScale: string = \"var(--mod-primary-channel-lum-scale)\";\r\n    public static readonly modSecondaryNoteHue: string = \"var(--mod-secondary-note-hue)\";\r\n    public static readonly modSecondaryNoteHueScale: string = \"var(--mod-secondary-note-hue-scale)\";\r\n    public static readonly modSecondaryNoteSat: string = \"var(--mod-secondary-note-sat)\";\r\n    public static readonly modSecondaryNoteSatScale: string = \"var(--mod-secondary-note-sat-scale)\";\r\n    public static readonly modSecondaryNoteLum: string = \"var(--mod-secondary-note-lum)\";\r\n    public static readonly modSecondaryNoteLumScale: string = \"var(--mod-secondary-note-lum-scale)\";\r\n    public static readonly modPrimaryNoteHue: string = \"var(--mod-primary-note-hue)\";\r\n    public static readonly modPrimaryNoteHueScale: string = \"var(--mod-primary-note-hue-scale)\";\r\n    public static readonly modPrimaryNoteSat: string = \"var(--mod-primary-note-sat)\";\r\n    public static readonly modPrimaryNoteSatScale: string = \"var(--mod-primary-note-sat-scale)\";\r\n    public static readonly modPrimaryNoteLum: string = \"var(--mod-primary-note-lum)\";\r\n    public static readonly modPrimaryNoteLumScale: string = \"var(--mod-primary-note-lum-scale)\";\r\n    public static readonly noiseSecondaryChannelHue: string = \"var(--noise-secondary-channel-hue)\";\r\n    public static readonly noiseSecondaryChannelHueScale: string = \"var(--noise-secondary-channel-hue-scale)\";\r\n    public static readonly noiseSecondaryChannelSat: string = \"var(--noise-secondary-channel-sat)\";\r\n    public static readonly noiseSecondaryChannelSatScale: string = \"var(--noise-secondary-channel-sat-scale)\";\r\n    public static readonly noiseSecondaryChannelLum: string = \"var(--noise-secondary-channel-lum)\";\r\n    public static readonly noiseSecondaryChannelLumScale: string = \"var(--noise-secondary-channel-lum-scale)\";\r\n    public static readonly noisePrimaryChannelHue: string = \"var(--noise-primary-channel-hue)\";\r\n    public static readonly noisePrimaryChannelHueScale: string = \"var(--noise-primary-channel-hue-scale)\";\r\n    public static readonly noisePrimaryChannelSat: string = \"var(--noise-primary-channel-sat)\";\r\n    public static readonly noisePrimaryChannelSatScale: string = \"var(--noise-primary-channel-sat-scale)\";\r\n    public static readonly noisePrimaryChannelLum: string = \"var(--noise-primary-channel-lum)\";\r\n    public static readonly noisePrimaryChannelLumScale: string = \"var(--noise-primary-channel-lum-scale)\";\r\n    public static readonly noiseSecondaryNoteHue: string = \"var(--noise-secondary-note-hue)\";\r\n    public static readonly noiseSecondaryNoteHueScale: string = \"var(--noise-secondary-note-hue-scale)\";\r\n    public static readonly noiseSecondaryNoteSat: string = \"var(--noise-secondary-note-sat)\";\r\n    public static readonly noiseSecondaryNoteSatScale: string = \"var(--noise-secondary-note-sat-scale)\";\r\n    public static readonly noiseSecondaryNoteLum: string = \"var(--noise-secondary-note-lum)\";\r\n    public static readonly noiseSecondaryNoteLumScale: string = \"var(--noise-secondary-note-lum-scale)\";\r\n    public static readonly noisePrimaryNoteHue: string = \"var(--noise-primary-note-hue)\";\r\n    public static readonly noisePrimaryNoteHueScale: string = \"var(--noise-primary-note-hue-scale)\";\r\n    public static readonly noisePrimaryNoteSat: string = \"var(--noise-primary-note-sat)\";\r\n    public static readonly noisePrimaryNoteSatScale: string = \"var(--noise-primary-note-sat-scale)\";\r\n    public static readonly noisePrimaryNoteLum: string = \"var(--noise-primary-note-lum)\";\r\n    public static readonly noisePrimaryNoteLumScale: string = \"var(--noise-primary-note-lum-scale)\";\r\n    public static readonly trackEditorBgPitch: string = \"var(--track-editor-bg-pitch)\";\r\n    public static readonly trackEditorBgPitchDim: string = \"var(--track-editor-bg-pitch-dim)\";\r\n    public static readonly trackEditorBgNoise: string = \"var(--track-editor-bg-noise)\";\r\n    public static readonly trackEditorBgNoiseDim: string = \"var(--track-editor-bg-noise-dim)\";\r\n    public static readonly trackEditorBgMod: string = \"var(--track-editor-bg-mod)\";\r\n    public static readonly trackEditorBgModDim: string = \"var(--track-editor-bg-mod-dim)\";\r\n    public static readonly multiplicativeModSlider: string = \"var(--multiplicative-mod-slider)\";\r\n    public static readonly overwritingModSlider: string = \"var(--overwriting-mod-slider)\";\r\n    public static readonly indicatorPrimary: string = \"var(--indicator-primary)\";\r\n    public static readonly indicatorSecondary: string = \"var(--indicator-secondary)\";\r\n    public static readonly select2OptGroup: string = \"var(--select2-opt-group)\";\r\n    public static readonly inputBoxOutline: string = \"var(--input-box-outline)\";\r\n    public static readonly muteButtonNormal: string = \"var(--mute-button-normal)\";\r\n    public static readonly muteButtonMod: string = \"var(--mute-button-mod)\";\r\n    public static readonly modLabelPrimary: string = \"var(--mod-label-primary)\";\r\n    public static readonly modLabelSecondaryText: string = \"var(--mod-label-secondary-text)\";\r\n    public static readonly modLabelPrimaryText: string = \"var(--mod-label-primary-text)\";\r\n    public static readonly disabledNotePrimary: string = \"var(--disabled-note-primary)\";\r\n    public static readonly disabledNoteSecondary: string = \"var(--disabled-note-secondary)\";\r\n\r\n    public static readonly pitchChannels: DictionaryArray<ChannelColors> = toNameMap([\r\n        {\r\n            name: \"pitch1\", // cyan\r\n            secondaryChannel: \"var(--pitch1-secondary-channel)\",\r\n            primaryChannel: \"var(--pitch1-primary-channel)\",\r\n            secondaryNote: \"var(--pitch1-secondary-note)\",\r\n            primaryNote: \"var(--pitch1-primary-note)\",\r\n        }, {\r\n            name: \"pitch2\", // yellow\r\n            secondaryChannel: \"var(--pitch2-secondary-channel)\",\r\n            primaryChannel: \"var(--pitch2-primary-channel)\",\r\n            secondaryNote: \"var(--pitch2-secondary-note)\",\r\n            primaryNote: \"var(--pitch2-primary-note)\",\r\n        }, {\r\n            name: \"pitch3\", // orange\r\n            secondaryChannel: \"var(--pitch3-secondary-channel)\",\r\n            primaryChannel: \"var(--pitch3-primary-channel)\",\r\n            secondaryNote: \"var(--pitch3-secondary-note)\",\r\n            primaryNote: \"var(--pitch3-primary-note)\",\r\n        }, {\r\n            name: \"pitch4\", // green\r\n            secondaryChannel: \"var(--pitch4-secondary-channel)\",\r\n            primaryChannel: \"var(--pitch4-primary-channel)\",\r\n            secondaryNote: \"var(--pitch4-secondary-note)\",\r\n            primaryNote: \"var(--pitch4-primary-note)\",\r\n        }, {\r\n            name: \"pitch5\", // magenta\r\n            secondaryChannel: \"var(--pitch5-secondary-channel)\",\r\n            primaryChannel: \"var(--pitch5-primary-channel)\",\r\n            secondaryNote: \"var(--pitch5-secondary-note)\",\r\n            primaryNote: \"var(--pitch5-primary-note)\",\r\n        }, {\r\n            name: \"pitch6\", // blue\r\n            secondaryChannel: \"var(--pitch6-secondary-channel)\",\r\n            primaryChannel: \"var(--pitch6-primary-channel)\",\r\n            secondaryNote: \"var(--pitch6-secondary-note)\",\r\n            primaryNote: \"var(--pitch6-primary-note)\",\r\n        }, {\r\n            name: \"pitch7\", // olive\r\n            secondaryChannel: \"var(--pitch7-secondary-channel)\",\r\n            primaryChannel: \"var(--pitch7-primary-channel)\",\r\n            secondaryNote: \"var(--pitch7-secondary-note)\",\r\n            primaryNote: \"var(--pitch7-primary-note)\",\r\n        }, {\r\n            name: \"pitch8\", // red\r\n            secondaryChannel: \"var(--pitch8-secondary-channel)\",\r\n            primaryChannel: \"var(--pitch8-primary-channel)\",\r\n            secondaryNote: \"var(--pitch8-secondary-note)\",\r\n            primaryNote: \"var(--pitch8-primary-note)\",\r\n        }, {\r\n            name: \"pitch9\", // teal\r\n            secondaryChannel: \"var(--pitch9-secondary-channel)\",\r\n            primaryChannel: \"var(--pitch9-primary-channel)\",\r\n            secondaryNote: \"var(--pitch9-secondary-note)\",\r\n            primaryNote: \"var(--pitch9-primary-note)\",\r\n        }, {\r\n            name: \"pitch10\", // purple\r\n            secondaryChannel: \"var(--pitch10-secondary-channel)\",\r\n            primaryChannel: \"var(--pitch10-primary-channel)\",\r\n            secondaryNote: \"var(--pitch10-secondary-note)\",\r\n            primaryNote: \"var(--pitch10-primary-note)\",\r\n        },\r\n    ]);\r\n    public static readonly noiseChannels: DictionaryArray<ChannelColors> = toNameMap([\r\n        {\r\n            name: \"noise1\", // gray\r\n            secondaryChannel: \"var(--noise1-secondary-channel)\",\r\n            primaryChannel: \"var(--noise1-primary-channel)\",\r\n            secondaryNote: \"var(--noise1-secondary-note)\",\r\n            primaryNote: \"var(--noise1-primary-note)\",\r\n        }, {\r\n            name: \"noise2\", // brown\r\n            secondaryChannel: \"var(--noise2-secondary-channel)\",\r\n            primaryChannel: \"var(--noise2-primary-channel)\",\r\n            secondaryNote: \"var(--noise2-secondary-note)\",\r\n            primaryNote: \"var(--noise2-primary-note)\",\r\n        }, {\r\n            name: \"noise3\", // azure\r\n            secondaryChannel: \"var(--noise3-secondary-channel)\",\r\n            primaryChannel: \"var(--noise3-primary-channel)\",\r\n            secondaryNote: \"var(--noise3-secondary-note)\",\r\n            primaryNote: \"var(--noise3-primary-note)\",\r\n        }, {\r\n            name: \"noise4\", // purple\r\n            secondaryChannel: \"var(--noise4-secondary-channel)\",\r\n            primaryChannel: \"var(--noise4-primary-channel)\",\r\n            secondaryNote: \"var(--noise4-secondary-note)\",\r\n            primaryNote: \"var(--noise4-primary-note)\",\r\n        }, {\r\n            name: \"noise5\", // sage\r\n            secondaryChannel: \"var(--noise5-secondary-channel)\",\r\n            primaryChannel: \"var(--noise5-primary-channel)\",\r\n            secondaryNote: \"var(--noise5-secondary-note)\",\r\n            primaryNote: \"var(--noise5-primary-note)\",\r\n        },\r\n    ]);\r\n    public static readonly modChannels: DictionaryArray<ChannelColors> = toNameMap([\r\n        {\r\n            name: \"mod1\",\r\n            secondaryChannel: \"var(--mod1-secondary-channel)\",\r\n            primaryChannel: \"var(--mod1-primary-channel)\",\r\n            secondaryNote: \"var(--mod1-secondary-note)\",\r\n            primaryNote: \"var(--mod1-primary-note)\",\r\n        }, {\r\n            name: \"mod2\",\r\n            secondaryChannel: \"var(--mod2-secondary-channel)\",\r\n            primaryChannel: \"var(--mod2-primary-channel)\",\r\n            secondaryNote: \"var(--mod2-secondary-note)\",\r\n            primaryNote: \"var(--mod2-primary-note)\",\r\n        }, {\r\n            name: \"mod3\",\r\n            secondaryChannel: \"var(--mod3-secondary-channel)\",\r\n            primaryChannel: \"var(--mod3-primary-channel)\",\r\n            secondaryNote: \"var(--mod3-secondary-note)\",\r\n            primaryNote: \"var(--mod3-primary-note)\",\r\n        }, {\r\n            name: \"mod4\",\r\n            secondaryChannel: \"var(--mod4-secondary-channel)\",\r\n            primaryChannel: \"var(--mod4-primary-channel)\",\r\n            secondaryNote: \"var(--mod4-secondary-note)\",\r\n            primaryNote: \"var(--mod4-primary-note)\",\r\n        },\r\n    ]);\r\n\r\n    public static resetColors() {\r\n        this.colorLookup.clear();\r\n    }\r\n\r\n\tpublic static getArbitaryChannelColor(type: string, channel: number): ChannelColors {\r\n\r\n        if (getComputedStyle(this._styleElement).getPropertyValue(\"--use-color-formula\").trim() == \"false\") {\r\n            let base: ChannelColors;\r\n            switch (type) {\r\n                case (\"noise\"): {\r\n                    base = ColorConfig.noiseChannels[channel % ColorConfig.noiseChannels.length];\r\n                    break;\r\n                }\r\n                case (\"mod\"): {\r\n                    base = ColorConfig.modChannels[channel % ColorConfig.modChannels.length];\r\n                    break;\r\n                }\r\n                case (\"pitch\"):\r\n                default: {\r\n                    base = ColorConfig.pitchChannels[channel % ColorConfig.pitchChannels.length];\r\n                    break;\r\n                }\r\n            }\r\n            var regex = /\\(([^)]+)\\)/;\r\n            let newChannelSecondary: string = ColorConfig.getComputed((regex.exec(base.secondaryChannel) as RegExpExecArray)[1] as string);\r\n            let newChannelPrimary: string = ColorConfig.getComputed((regex.exec(base.primaryChannel) as RegExpExecArray)[1] as string);\r\n            let newNoteSecondary: string = ColorConfig.getComputed((regex.exec(base.secondaryNote) as RegExpExecArray)[1] as string);\r\n            let newNotePrimary: string = ColorConfig.getComputed((regex.exec(base.primaryNote) as RegExpExecArray)[1] as string);\r\n            return <ChannelColors>{ secondaryChannel: newChannelSecondary, primaryChannel: newChannelPrimary, secondaryNote: newNoteSecondary, primaryNote: newNotePrimary };\r\n        }\r\n        switch (type) {\r\n            case (\"noise\"): {\r\n                const noiseSecondaryChannelHue: number = +getComputedStyle(this._styleElement).getPropertyValue(\"--noise-secondary-channel-hue\");\r\n                const noiseSecondaryChannelHueScale: number = +getComputedStyle(this._styleElement).getPropertyValue(\"--noise-secondary-channel-hue-scale\");\r\n                const noiseSecondaryChannelSat: number = +getComputedStyle(this._styleElement).getPropertyValue(\"--noise-secondary-channel-sat\");\r\n                const noiseSecondaryChannelSatScale: number = +getComputedStyle(this._styleElement).getPropertyValue(\"--noise-secondary-channel-sat-scale\");\r\n                const noiseSecondaryChannelLum: number = +getComputedStyle(this._styleElement).getPropertyValue(\"--noise-secondary-channel-lum\");\r\n                const noiseSecondaryChannelLumScale: number = +getComputedStyle(this._styleElement).getPropertyValue(\"--noise-secondary-channel-lum-scale\");\r\n                const noisePrimaryChannelHue: number = +getComputedStyle(this._styleElement).getPropertyValue(\"--noise-primary-channel-hue\");\r\n                const noisePrimaryChannelHueScale: number = +getComputedStyle(this._styleElement).getPropertyValue(\"--noise-primary-channel-hue-scale\");\r\n                const noisePrimaryChannelSat: number = +getComputedStyle(this._styleElement).getPropertyValue(\"--noise-primary-channel-sat\");\r\n                const noisePrimaryChannelSatScale: number = +getComputedStyle(this._styleElement).getPropertyValue(\"--noise-primary-channel-sat-scale\");\r\n                const noisePrimaryChannelLum: number = +getComputedStyle(this._styleElement).getPropertyValue(\"--noise-primary-channel-lum\");\r\n                const noisePrimaryChannelLumScale: number = +getComputedStyle(this._styleElement).getPropertyValue(\"--noise-primary-channel-lum-scale\");\r\n                const noiseSecondaryNoteHue: number = +getComputedStyle(this._styleElement).getPropertyValue(\"--noise-secondary-note-hue\");\r\n                const noiseSecondaryNoteHueScale: number = +getComputedStyle(this._styleElement).getPropertyValue(\"--noise-secondary-note-hue-scale\");\r\n                const noiseSecondaryNoteSat: number = +getComputedStyle(this._styleElement).getPropertyValue(\"--noise-secondary-note-sat\");\r\n                const noiseSecondaryNoteSatScale: number = +getComputedStyle(this._styleElement).getPropertyValue(\"--noise-secondary-note-sat-scale\");\r\n                const noiseSecondaryNoteLum: number = +getComputedStyle(this._styleElement).getPropertyValue(\"--noise-secondary-note-lum\");\r\n                const noiseSecondaryNoteLumScale: number = +getComputedStyle(this._styleElement).getPropertyValue(\"--noise-secondary-note-lum-scale\");\r\n                const noisePrimaryNoteHue: number = +getComputedStyle(this._styleElement).getPropertyValue(\"--noise-primary-note-hue\");\r\n                const noisePrimaryNoteHueScale: number = +getComputedStyle(this._styleElement).getPropertyValue(\"--noise-primary-note-hue-scale\");\r\n                const noisePrimaryNoteSat: number = +getComputedStyle(this._styleElement).getPropertyValue(\"--noise-primary-note-sat\");\r\n                const noisePrimaryNoteSatScale: number = +getComputedStyle(this._styleElement).getPropertyValue(\"--noise-primary-note-sat-scale\");\r\n                const noisePrimaryNoteLum: number = +getComputedStyle(this._styleElement).getPropertyValue(\"--noise-primary-note-lum\");\r\n                const noisePrimaryNoteLumScale: number = +getComputedStyle(this._styleElement).getPropertyValue(\"--noise-primary-note-lum-scale\");\r\n\r\n                let newChannelSecondary: string = \"hsl(\" + ((+noiseSecondaryChannelHue + ((channel * +noiseSecondaryChannelHueScale) / Config.noiseChannelCountMax) * 256) % 256) + \",\"\r\n                    + (+noiseSecondaryChannelSat + channel * +noiseSecondaryChannelSatScale) + \"%,\"\r\n                    + (+noiseSecondaryChannelLum + channel * +noiseSecondaryChannelLumScale) + \"%)\";\r\n                let newChannelPrimary: string = \"hsl(\" + ((+noisePrimaryChannelHue + ((channel * +noisePrimaryChannelHueScale) / Config.noiseChannelCountMax) * 256) % 256) + \",\"\r\n                    + (+noisePrimaryChannelSat + channel * +noisePrimaryChannelSatScale) + \"%,\"\r\n                    + (+noisePrimaryChannelLum + channel * +noisePrimaryChannelLumScale) + \"%)\";\r\n                let newNoteSecondary: string = \"hsl(\" + ((+noiseSecondaryNoteHue + ((channel * +noiseSecondaryNoteHueScale) / Config.noiseChannelCountMax) * 256) % 256) + \",\"\r\n                    + (+noiseSecondaryNoteSat + channel * +noiseSecondaryNoteSatScale) + \"%,\"\r\n                    + (+noiseSecondaryNoteLum + channel * +noiseSecondaryNoteLumScale) + \"%)\";\r\n                let newNotePrimary: string = \"hsl(\" + ((+noisePrimaryNoteHue + ((channel * +noisePrimaryNoteHueScale) / Config.noiseChannelCountMax) * 256) % 256) + \",\"\r\n                    + (+noisePrimaryNoteSat + channel * +noisePrimaryNoteSatScale) + \"%,\"\r\n                    + (+noisePrimaryNoteLum + channel * +noisePrimaryNoteLumScale) + \"%)\";\r\n\r\n                let newChannelColors = <ChannelColors>{ secondaryChannel: newChannelSecondary, primaryChannel: newChannelPrimary, secondaryNote: newNoteSecondary, primaryNote: newNotePrimary };\r\n                ColorConfig.colorLookup.set(channel, newChannelColors);\r\n                return newChannelColors;\r\n            } case (\"mod\"): {\r\n                // Mod formula\r\n                const modSecondaryChannelHue: number = +getComputedStyle(this._styleElement).getPropertyValue(\"--mod-secondary-channel-hue\");\r\n                const modSecondaryChannelHueScale: number = +getComputedStyle(this._styleElement).getPropertyValue(\"--mod-secondary-channel-hue-scale\");\r\n                const modSecondaryChannelSat: number = +getComputedStyle(this._styleElement).getPropertyValue(\"--mod-secondary-channel-sat\");\r\n                const modSecondaryChannelSatScale: number = +getComputedStyle(this._styleElement).getPropertyValue(\"--mod-secondary-channel-sat-scale\");\r\n                const modSecondaryChannelLum: number = +getComputedStyle(this._styleElement).getPropertyValue(\"--mod-secondary-channel-lum\");\r\n                const modSecondaryChannelLumScale: number = +getComputedStyle(this._styleElement).getPropertyValue(\"--mod-secondary-channel-lum-scale\");\r\n                const modPrimaryChannelHue: number = +getComputedStyle(this._styleElement).getPropertyValue(\"--mod-primary-channel-hue\");\r\n                const modPrimaryChannelHueScale: number = +getComputedStyle(this._styleElement).getPropertyValue(\"--mod-primary-channel-hue-scale\");\r\n                const modPrimaryChannelSat: number = +getComputedStyle(this._styleElement).getPropertyValue(\"--mod-primary-channel-sat\");\r\n                const modPrimaryChannelSatScale: number = +getComputedStyle(this._styleElement).getPropertyValue(\"--mod-primary-channel-sat-scale\");\r\n                const modPrimaryChannelLum: number = +getComputedStyle(this._styleElement).getPropertyValue(\"--mod-primary-channel-lum\");\r\n                const modPrimaryChannelLumScale: number = +getComputedStyle(this._styleElement).getPropertyValue(\"--mod-primary-channel-lum-scale\");\r\n                const modSecondaryNoteHue: number = +getComputedStyle(this._styleElement).getPropertyValue(\"--mod-secondary-note-hue\");\r\n                const modSecondaryNoteHueScale: number = +getComputedStyle(this._styleElement).getPropertyValue(\"--mod-secondary-note-hue-scale\");\r\n                const modSecondaryNoteSat: number = +getComputedStyle(this._styleElement).getPropertyValue(\"--mod-secondary-note-sat\");\r\n                const modSecondaryNoteSatScale: number = +getComputedStyle(this._styleElement).getPropertyValue(\"--mod-secondary-note-sat-scale\");\r\n                const modSecondaryNoteLum: number = +getComputedStyle(this._styleElement).getPropertyValue(\"--mod-secondary-note-lum\");\r\n                const modSecondaryNoteLumScale: number = +getComputedStyle(this._styleElement).getPropertyValue(\"--mod-secondary-note-lum-scale\");\r\n                const modPrimaryNoteHue: number = +getComputedStyle(this._styleElement).getPropertyValue(\"--mod-primary-note-hue\");\r\n                const modPrimaryNoteHueScale: number = +getComputedStyle(this._styleElement).getPropertyValue(\"--mod-primary-note-hue-scale\");\r\n                const modPrimaryNoteSat: number = +getComputedStyle(this._styleElement).getPropertyValue(\"--mod-primary-note-sat\");\r\n                const modPrimaryNoteSatScale: number = +getComputedStyle(this._styleElement).getPropertyValue(\"--mod-primary-note-sat-scale\");\r\n                const modPrimaryNoteLum: number = +getComputedStyle(this._styleElement).getPropertyValue(\"--mod-primary-note-lum\");\r\n                const modPrimaryNoteLumScale: number = +getComputedStyle(this._styleElement).getPropertyValue(\"--mod-primary-note-lum-scale\");\r\n\r\n                let newChannelSecondary: string = \"hsl(\" + ((+modSecondaryChannelHue + ((channel * +modSecondaryChannelHueScale) / Config.modChannelCountMax) * 256) % 256) + \",\"\r\n                    + (+modSecondaryChannelSat + channel * +modSecondaryChannelSatScale) + \"%,\"\r\n                    + (+modSecondaryChannelLum + channel * +modSecondaryChannelLumScale) + \"%)\";\r\n                let newChannelPrimary: string = \"hsl(\" + ((+modPrimaryChannelHue + ((channel * +modPrimaryChannelHueScale) / Config.modChannelCountMax) * 256) % 256) + \",\"\r\n                    + (+modPrimaryChannelSat + channel * +modPrimaryChannelSatScale) + \"%,\"\r\n                    + (+modPrimaryChannelLum + channel * +modPrimaryChannelLumScale) + \"%)\";\r\n                let newNoteSecondary: string = \"hsl(\" + ((+modSecondaryNoteHue + ((channel * +modSecondaryNoteHueScale) / Config.modChannelCountMax) * 256) % 256) + \",\"\r\n                    + (+modSecondaryNoteSat + channel * +modSecondaryNoteSatScale) + \"%,\"\r\n                    + (+modSecondaryNoteLum + channel * +modSecondaryNoteLumScale) + \"%)\";\r\n                let newNotePrimary: string = \"hsl(\" + ((+modPrimaryNoteHue + ((channel * +modPrimaryNoteHueScale) / Config.modChannelCountMax) * 256) % 256) + \",\"\r\n                    + (+modPrimaryNoteSat + channel * +modPrimaryNoteSatScale) + \"%,\"\r\n                    + (+modPrimaryNoteLum + channel * +modPrimaryNoteLumScale) + \"%)\";\r\n\r\n                let newChannelColors = <ChannelColors>{ secondaryChannel: newChannelSecondary, primaryChannel: newChannelPrimary, secondaryNote: newNoteSecondary, primaryNote: newNotePrimary };\r\n                ColorConfig.colorLookup.set(channel, newChannelColors);\r\n                return newChannelColors;\r\n            }\r\n            case (\"pitch\"):\r\n            default: {\r\n                const pitchSecondaryChannelHue: number = +getComputedStyle(this._styleElement).getPropertyValue(\"--pitch-secondary-channel-hue\");\r\n                const pitchSecondaryChannelHueScale: number = +getComputedStyle(this._styleElement).getPropertyValue(\"--pitch-secondary-channel-hue-scale\");\r\n                const pitchSecondaryChannelSat: number = +getComputedStyle(this._styleElement).getPropertyValue(\"--pitch-secondary-channel-sat\");\r\n                const pitchSecondaryChannelSatScale: number = +getComputedStyle(this._styleElement).getPropertyValue(\"--pitch-secondary-channel-sat-scale\");\r\n                const pitchSecondaryChannelLum: number = +getComputedStyle(this._styleElement).getPropertyValue(\"--pitch-secondary-channel-lum\");\r\n                const pitchSecondaryChannelLumScale: number = +getComputedStyle(this._styleElement).getPropertyValue(\"--pitch-secondary-channel-lum-scale\");\r\n                const pitchPrimaryChannelHue: number = +getComputedStyle(this._styleElement).getPropertyValue(\"--pitch-primary-channel-hue\");\r\n                const pitchPrimaryChannelHueScale: number = +getComputedStyle(this._styleElement).getPropertyValue(\"--pitch-primary-channel-hue-scale\");\r\n                const pitchPrimaryChannelSat: number = +getComputedStyle(this._styleElement).getPropertyValue(\"--pitch-primary-channel-sat\");\r\n                const pitchPrimaryChannelSatScale: number = +getComputedStyle(this._styleElement).getPropertyValue(\"--pitch-primary-channel-sat-scale\");\r\n                const pitchPrimaryChannelLum: number = +getComputedStyle(this._styleElement).getPropertyValue(\"--pitch-primary-channel-lum\");\r\n                const pitchPrimaryChannelLumScale: number = +getComputedStyle(this._styleElement).getPropertyValue(\"--pitch-primary-channel-lum-scale\");\r\n                const pitchSecondaryNoteHue: number = +getComputedStyle(this._styleElement).getPropertyValue(\"--pitch-secondary-note-hue\");\r\n                const pitchSecondaryNoteHueScale: number = +getComputedStyle(this._styleElement).getPropertyValue(\"--pitch-secondary-note-hue-scale\");\r\n                const pitchSecondaryNoteSat: number = +getComputedStyle(this._styleElement).getPropertyValue(\"--pitch-secondary-note-sat\");\r\n                const pitchSecondaryNoteSatScale: number = +getComputedStyle(this._styleElement).getPropertyValue(\"--pitch-secondary-note-sat-scale\");\r\n                const pitchSecondaryNoteLum: number = +getComputedStyle(this._styleElement).getPropertyValue(\"--pitch-secondary-note-lum\");\r\n                const pitchSecondaryNoteLumScale: number = +getComputedStyle(this._styleElement).getPropertyValue(\"--pitch-secondary-note-lum-scale\");\r\n                const pitchPrimaryNoteHue: number = +getComputedStyle(this._styleElement).getPropertyValue(\"--pitch-primary-note-hue\");\r\n                const pitchPrimaryNoteHueScale: number = +getComputedStyle(this._styleElement).getPropertyValue(\"--pitch-primary-note-hue-scale\");\r\n                const pitchPrimaryNoteSat: number = +getComputedStyle(this._styleElement).getPropertyValue(\"--pitch-primary-note-sat\");\r\n                const pitchPrimaryNoteSatScale: number = +getComputedStyle(this._styleElement).getPropertyValue(\"--pitch-primary-note-sat-scale\");\r\n                const pitchPrimaryNoteLum: number = +getComputedStyle(this._styleElement).getPropertyValue(\"--pitch-primary-note-lum\");\r\n                const pitchPrimaryNoteLumScale: number = +getComputedStyle(this._styleElement).getPropertyValue(\"--pitch-primary-note-lum-scale\");\r\n\r\n                let newChannelSecondary: string = \"hsl(\" + ((+pitchSecondaryChannelHue + (channel * +pitchSecondaryChannelHueScale / Config.pitchChannelCountMax) * 256) % 256) + \",\"\r\n                    + (+pitchSecondaryChannelSat * (1 - (+pitchSecondaryChannelSatScale * Math.floor(channel / 7)))) + \"%,\"\r\n                    + (+pitchSecondaryChannelLum * (1 - (+pitchSecondaryChannelLumScale * Math.floor(channel / 7)))) + \"%)\";\r\n                let newChannelPrimary: string = \"hsl(\" + ((+pitchPrimaryChannelHue + (channel * +pitchPrimaryChannelHueScale / Config.pitchChannelCountMax) * 256) % 256) + \",\"\r\n                    + (+pitchPrimaryChannelSat * (1 - (+pitchPrimaryChannelSatScale * Math.floor(channel / 7)))) + \"%,\"\r\n                    + (+pitchPrimaryChannelLum * (1 - (+pitchPrimaryChannelLumScale * Math.floor(channel / 7)))) + \"%)\";\r\n                let newNoteSecondary: string = \"hsl(\" + ((+pitchSecondaryNoteHue + (channel * +pitchSecondaryNoteHueScale / Config.pitchChannelCountMax) * 256) % 256) + \",\"\r\n                    + (+pitchSecondaryNoteSat * (1 - (+pitchSecondaryNoteSatScale * Math.floor(channel / 7)))) + \"%,\"\r\n                    + (+pitchSecondaryNoteLum * (1 - (+pitchSecondaryNoteLumScale * Math.floor(channel / 7)))) + \"%)\";\r\n                let newNotePrimary: string = \"hsl(\" + ((+pitchPrimaryNoteHue + (channel * +pitchPrimaryNoteHueScale / Config.pitchChannelCountMax) * 256) % 256) + \",\"\r\n                    + (+pitchPrimaryNoteSat * (1 - (+pitchPrimaryNoteSatScale * Math.floor(channel / 7)))) + \"%,\"\r\n                    + (+pitchPrimaryNoteLum * (1 - (+pitchPrimaryNoteLumScale * Math.floor(channel / 7)))) + \"%)\";\r\n\r\n                let newChannelColors = <ChannelColors>{ secondaryChannel: newChannelSecondary, primaryChannel: newChannelPrimary, secondaryNote: newNoteSecondary, primaryNote: newNotePrimary };\r\n                ColorConfig.colorLookup.set(channel, newChannelColors);\r\n                return newChannelColors;\r\n            }\r\n        }\r\n    }\r\n\r\n    // Same as below, but won't return var colors\r\n    public static getComputedChannelColor(song: Song, channel: number): ChannelColors {\r\n        if (getComputedStyle(this._styleElement).getPropertyValue(\"--use-color-formula\").trim() == \"false\") {\r\n            let base: ChannelColors = ColorConfig.getChannelColor(song, channel);\r\n            // Trim away \"var(...)\"\r\n            var regex = /\\(([^)]+)\\)/;\r\n            let newChannelSecondary: string = ColorConfig.getComputed((regex.exec(base.secondaryChannel) as RegExpExecArray)[1] as string);\r\n            let newChannelPrimary: string = ColorConfig.getComputed((regex.exec(base.primaryChannel) as RegExpExecArray)[1] as string);\r\n            let newNoteSecondary: string = ColorConfig.getComputed((regex.exec(base.secondaryNote) as RegExpExecArray)[1] as string);\r\n            let newNotePrimary: string = ColorConfig.getComputed((regex.exec(base.primaryNote) as RegExpExecArray)[1] as string);\r\n            return <ChannelColors>{ secondaryChannel: newChannelSecondary, primaryChannel: newChannelPrimary, secondaryNote: newNoteSecondary, primaryNote: newNotePrimary };\r\n        }\r\n        else {\r\n            return ColorConfig.getChannelColor(song, channel);\r\n        }\r\n    };\r\n\r\n    public static getChannelColor(song: Song, channel: number): ChannelColors {\r\n        if (getComputedStyle(this._styleElement).getPropertyValue(\"--use-color-formula\").trim() == \"false\") {\r\n            // Set colors, not defined by formula\r\n            if (channel < song.pitchChannelCount) {\r\n                return ColorConfig.pitchChannels[channel % ColorConfig.pitchChannels.length];\r\n            } else if (channel < song.pitchChannelCount + song.noiseChannelCount) {\r\n                return ColorConfig.noiseChannels[(channel - song.pitchChannelCount) % ColorConfig.noiseChannels.length];\r\n            } else {\r\n                return ColorConfig.modChannels[(channel - song.pitchChannelCount - song.noiseChannelCount) % ColorConfig.modChannels.length];\r\n            }\r\n        }\r\n        else {\r\n            // Determine if color is cached\r\n            if (ColorConfig.colorLookup.has(channel)) {\r\n                return ColorConfig.colorLookup.get(channel) as ChannelColors;\r\n            }\r\n            else {\r\n                // Formulaic color definition\r\n                if (channel < song.pitchChannelCount) {\r\n                    // Pitch formula\r\n                    const pitchSecondaryChannelHue: number = +getComputedStyle(this._styleElement).getPropertyValue(\"--pitch-secondary-channel-hue\");\r\n                    const pitchSecondaryChannelHueScale: number = +getComputedStyle(this._styleElement).getPropertyValue(\"--pitch-secondary-channel-hue-scale\");\r\n                    const pitchSecondaryChannelSat: number = +getComputedStyle(this._styleElement).getPropertyValue(\"--pitch-secondary-channel-sat\");\r\n                    const pitchSecondaryChannelSatScale: number = +getComputedStyle(this._styleElement).getPropertyValue(\"--pitch-secondary-channel-sat-scale\");\r\n                    const pitchSecondaryChannelLum: number = +getComputedStyle(this._styleElement).getPropertyValue(\"--pitch-secondary-channel-lum\");\r\n                    const pitchSecondaryChannelLumScale: number = +getComputedStyle(this._styleElement).getPropertyValue(\"--pitch-secondary-channel-lum-scale\");\r\n                    const pitchPrimaryChannelHue: number = +getComputedStyle(this._styleElement).getPropertyValue(\"--pitch-primary-channel-hue\");\r\n                    const pitchPrimaryChannelHueScale: number = +getComputedStyle(this._styleElement).getPropertyValue(\"--pitch-primary-channel-hue-scale\");\r\n                    const pitchPrimaryChannelSat: number = +getComputedStyle(this._styleElement).getPropertyValue(\"--pitch-primary-channel-sat\");\r\n                    const pitchPrimaryChannelSatScale: number = +getComputedStyle(this._styleElement).getPropertyValue(\"--pitch-primary-channel-sat-scale\");\r\n                    const pitchPrimaryChannelLum: number = +getComputedStyle(this._styleElement).getPropertyValue(\"--pitch-primary-channel-lum\");\r\n                    const pitchPrimaryChannelLumScale: number = +getComputedStyle(this._styleElement).getPropertyValue(\"--pitch-primary-channel-lum-scale\");\r\n                    const pitchSecondaryNoteHue: number = +getComputedStyle(this._styleElement).getPropertyValue(\"--pitch-secondary-note-hue\");\r\n                    const pitchSecondaryNoteHueScale: number = +getComputedStyle(this._styleElement).getPropertyValue(\"--pitch-secondary-note-hue-scale\");\r\n                    const pitchSecondaryNoteSat: number = +getComputedStyle(this._styleElement).getPropertyValue(\"--pitch-secondary-note-sat\");\r\n                    const pitchSecondaryNoteSatScale: number = +getComputedStyle(this._styleElement).getPropertyValue(\"--pitch-secondary-note-sat-scale\");\r\n                    const pitchSecondaryNoteLum: number = +getComputedStyle(this._styleElement).getPropertyValue(\"--pitch-secondary-note-lum\");\r\n                    const pitchSecondaryNoteLumScale: number = +getComputedStyle(this._styleElement).getPropertyValue(\"--pitch-secondary-note-lum-scale\");\r\n                    const pitchPrimaryNoteHue: number = +getComputedStyle(this._styleElement).getPropertyValue(\"--pitch-primary-note-hue\");\r\n                    const pitchPrimaryNoteHueScale: number = +getComputedStyle(this._styleElement).getPropertyValue(\"--pitch-primary-note-hue-scale\");\r\n                    const pitchPrimaryNoteSat: number = +getComputedStyle(this._styleElement).getPropertyValue(\"--pitch-primary-note-sat\");\r\n                    const pitchPrimaryNoteSatScale: number = +getComputedStyle(this._styleElement).getPropertyValue(\"--pitch-primary-note-sat-scale\");\r\n                    const pitchPrimaryNoteLum: number = +getComputedStyle(this._styleElement).getPropertyValue(\"--pitch-primary-note-lum\");\r\n                    const pitchPrimaryNoteLumScale: number = +getComputedStyle(this._styleElement).getPropertyValue(\"--pitch-primary-note-lum-scale\");\r\n\r\n                    let newChannelSecondary: string = \"hsl(\" + ((+pitchSecondaryChannelHue + (channel * +pitchSecondaryChannelHueScale / Config.pitchChannelCountMax) * 256) % 256) + \",\"\r\n                        + (+pitchSecondaryChannelSat * (1 - (+pitchSecondaryChannelSatScale * Math.floor(channel / 7)))) + \"%,\"\r\n                        + (+pitchSecondaryChannelLum * (1 - (+pitchSecondaryChannelLumScale * Math.floor(channel / 7)))) + \"%)\";\r\n                    let newChannelPrimary: string = \"hsl(\" + ((+pitchPrimaryChannelHue + (channel * +pitchPrimaryChannelHueScale / Config.pitchChannelCountMax) * 256) % 256) + \",\"\r\n                        + (+pitchPrimaryChannelSat * (1 - (+pitchPrimaryChannelSatScale * Math.floor(channel / 7)))) + \"%,\"\r\n                        + (+pitchPrimaryChannelLum * (1 - (+pitchPrimaryChannelLumScale * Math.floor(channel / 7)))) + \"%)\";\r\n                    let newNoteSecondary: string = \"hsl(\" + ((+pitchSecondaryNoteHue + (channel * +pitchSecondaryNoteHueScale / Config.pitchChannelCountMax) * 256) % 256) + \",\"\r\n                        + (+pitchSecondaryNoteSat * (1 - (+pitchSecondaryNoteSatScale * Math.floor(channel / 7)))) + \"%,\"\r\n                        + (+pitchSecondaryNoteLum * (1 - (+pitchSecondaryNoteLumScale * Math.floor(channel / 7)))) + \"%)\";\r\n                    let newNotePrimary: string = \"hsl(\" + ((+pitchPrimaryNoteHue + (channel * +pitchPrimaryNoteHueScale / Config.pitchChannelCountMax) * 256) % 256) + \",\"\r\n                        + (+pitchPrimaryNoteSat * (1 - (+pitchPrimaryNoteSatScale * Math.floor(channel / 7)))) + \"%,\"\r\n                        + (+pitchPrimaryNoteLum * (1 - (+pitchPrimaryNoteLumScale * Math.floor(channel / 7)))) + \"%)\";\r\n\r\n                    let newChannelColors = <ChannelColors>{ secondaryChannel: newChannelSecondary, primaryChannel: newChannelPrimary, secondaryNote: newNoteSecondary, primaryNote: newNotePrimary };\r\n                    ColorConfig.colorLookup.set(channel, newChannelColors);\r\n                    return newChannelColors;\r\n\r\n                }\r\n                else if (channel < song.pitchChannelCount + song.noiseChannelCount) {\r\n                    // Noise formula\r\n                    const noiseSecondaryChannelHue: number = +getComputedStyle(this._styleElement).getPropertyValue(\"--noise-secondary-channel-hue\");\r\n                    const noiseSecondaryChannelHueScale: number = +getComputedStyle(this._styleElement).getPropertyValue(\"--noise-secondary-channel-hue-scale\");\r\n                    const noiseSecondaryChannelSat: number = +getComputedStyle(this._styleElement).getPropertyValue(\"--noise-secondary-channel-sat\");\r\n                    const noiseSecondaryChannelSatScale: number = +getComputedStyle(this._styleElement).getPropertyValue(\"--noise-secondary-channel-sat-scale\");\r\n                    const noiseSecondaryChannelLum: number = +getComputedStyle(this._styleElement).getPropertyValue(\"--noise-secondary-channel-lum\");\r\n                    const noiseSecondaryChannelLumScale: number = +getComputedStyle(this._styleElement).getPropertyValue(\"--noise-secondary-channel-lum-scale\");\r\n                    const noisePrimaryChannelHue: number = +getComputedStyle(this._styleElement).getPropertyValue(\"--noise-primary-channel-hue\");\r\n                    const noisePrimaryChannelHueScale: number = +getComputedStyle(this._styleElement).getPropertyValue(\"--noise-primary-channel-hue-scale\");\r\n                    const noisePrimaryChannelSat: number = +getComputedStyle(this._styleElement).getPropertyValue(\"--noise-primary-channel-sat\");\r\n                    const noisePrimaryChannelSatScale: number = +getComputedStyle(this._styleElement).getPropertyValue(\"--noise-primary-channel-sat-scale\");\r\n                    const noisePrimaryChannelLum: number = +getComputedStyle(this._styleElement).getPropertyValue(\"--noise-primary-channel-lum\");\r\n                    const noisePrimaryChannelLumScale: number = +getComputedStyle(this._styleElement).getPropertyValue(\"--noise-primary-channel-lum-scale\");\r\n                    const noiseSecondaryNoteHue: number = +getComputedStyle(this._styleElement).getPropertyValue(\"--noise-secondary-note-hue\");\r\n                    const noiseSecondaryNoteHueScale: number = +getComputedStyle(this._styleElement).getPropertyValue(\"--noise-secondary-note-hue-scale\");\r\n                    const noiseSecondaryNoteSat: number = +getComputedStyle(this._styleElement).getPropertyValue(\"--noise-secondary-note-sat\");\r\n                    const noiseSecondaryNoteSatScale: number = +getComputedStyle(this._styleElement).getPropertyValue(\"--noise-secondary-note-sat-scale\");\r\n                    const noiseSecondaryNoteLum: number = +getComputedStyle(this._styleElement).getPropertyValue(\"--noise-secondary-note-lum\");\r\n                    const noiseSecondaryNoteLumScale: number = +getComputedStyle(this._styleElement).getPropertyValue(\"--noise-secondary-note-lum-scale\");\r\n                    const noisePrimaryNoteHue: number = +getComputedStyle(this._styleElement).getPropertyValue(\"--noise-primary-note-hue\");\r\n                    const noisePrimaryNoteHueScale: number = +getComputedStyle(this._styleElement).getPropertyValue(\"--noise-primary-note-hue-scale\");\r\n                    const noisePrimaryNoteSat: number = +getComputedStyle(this._styleElement).getPropertyValue(\"--noise-primary-note-sat\");\r\n                    const noisePrimaryNoteSatScale: number = +getComputedStyle(this._styleElement).getPropertyValue(\"--noise-primary-note-sat-scale\");\r\n                    const noisePrimaryNoteLum: number = +getComputedStyle(this._styleElement).getPropertyValue(\"--noise-primary-note-lum\");\r\n                    const noisePrimaryNoteLumScale: number = +getComputedStyle(this._styleElement).getPropertyValue(\"--noise-primary-note-lum-scale\");\r\n\r\n                    let newChannelSecondary: string = \"hsl(\" + ((+noiseSecondaryChannelHue + (((channel - song.pitchChannelCount) * +noiseSecondaryChannelHueScale) / Config.noiseChannelCountMax) * 256) % 256) + \",\"\r\n                        + (+noiseSecondaryChannelSat + channel * +noiseSecondaryChannelSatScale) + \"%,\"\r\n                        + (+noiseSecondaryChannelLum + channel * +noiseSecondaryChannelLumScale) + \"%)\";\r\n                    let newChannelPrimary: string = \"hsl(\" + ((+noisePrimaryChannelHue + (((channel - song.pitchChannelCount) * +noisePrimaryChannelHueScale) / Config.noiseChannelCountMax) * 256) % 256) + \",\"\r\n                        + (+noisePrimaryChannelSat + channel * +noisePrimaryChannelSatScale) + \"%,\"\r\n                        + (+noisePrimaryChannelLum + channel * +noisePrimaryChannelLumScale) + \"%)\";\r\n                    let newNoteSecondary: string = \"hsl(\" + ((+noiseSecondaryNoteHue + (((channel - song.pitchChannelCount) * +noiseSecondaryNoteHueScale) / Config.noiseChannelCountMax) * 256) % 256) + \",\"\r\n                        + (+noiseSecondaryNoteSat + channel * +noiseSecondaryNoteSatScale) + \"%,\"\r\n                        + (+noiseSecondaryNoteLum + channel * +noiseSecondaryNoteLumScale) + \"%)\";\r\n                    let newNotePrimary: string = \"hsl(\" + ((+noisePrimaryNoteHue + (((channel - song.pitchChannelCount) * +noisePrimaryNoteHueScale) / Config.noiseChannelCountMax) * 256) % 256) + \",\"\r\n                        + (+noisePrimaryNoteSat + channel * +noisePrimaryNoteSatScale) + \"%,\"\r\n                        + (+noisePrimaryNoteLum + channel * +noisePrimaryNoteLumScale) + \"%)\";\r\n\r\n                    let newChannelColors = <ChannelColors>{ secondaryChannel: newChannelSecondary, primaryChannel: newChannelPrimary, secondaryNote: newNoteSecondary, primaryNote: newNotePrimary };\r\n                    ColorConfig.colorLookup.set(channel, newChannelColors);\r\n                    return newChannelColors;\r\n                }\r\n                else {\r\n                    // Mod formula\r\n                    const modSecondaryChannelHue: number = +getComputedStyle(this._styleElement).getPropertyValue(\"--mod-secondary-channel-hue\");\r\n                    const modSecondaryChannelHueScale: number = +getComputedStyle(this._styleElement).getPropertyValue(\"--mod-secondary-channel-hue-scale\");\r\n                    const modSecondaryChannelSat: number = +getComputedStyle(this._styleElement).getPropertyValue(\"--mod-secondary-channel-sat\");\r\n                    const modSecondaryChannelSatScale: number = +getComputedStyle(this._styleElement).getPropertyValue(\"--mod-secondary-channel-sat-scale\");\r\n                    const modSecondaryChannelLum: number = +getComputedStyle(this._styleElement).getPropertyValue(\"--mod-secondary-channel-lum\");\r\n                    const modSecondaryChannelLumScale: number = +getComputedStyle(this._styleElement).getPropertyValue(\"--mod-secondary-channel-lum-scale\");\r\n                    const modPrimaryChannelHue: number = +getComputedStyle(this._styleElement).getPropertyValue(\"--mod-primary-channel-hue\");\r\n                    const modPrimaryChannelHueScale: number = +getComputedStyle(this._styleElement).getPropertyValue(\"--mod-primary-channel-hue-scale\");\r\n                    const modPrimaryChannelSat: number = +getComputedStyle(this._styleElement).getPropertyValue(\"--mod-primary-channel-sat\");\r\n                    const modPrimaryChannelSatScale: number = +getComputedStyle(this._styleElement).getPropertyValue(\"--mod-primary-channel-sat-scale\");\r\n                    const modPrimaryChannelLum: number = +getComputedStyle(this._styleElement).getPropertyValue(\"--mod-primary-channel-lum\");\r\n                    const modPrimaryChannelLumScale: number = +getComputedStyle(this._styleElement).getPropertyValue(\"--mod-primary-channel-lum-scale\");\r\n                    const modSecondaryNoteHue: number = +getComputedStyle(this._styleElement).getPropertyValue(\"--mod-secondary-note-hue\");\r\n                    const modSecondaryNoteHueScale: number = +getComputedStyle(this._styleElement).getPropertyValue(\"--mod-secondary-note-hue-scale\");\r\n                    const modSecondaryNoteSat: number = +getComputedStyle(this._styleElement).getPropertyValue(\"--mod-secondary-note-sat\");\r\n                    const modSecondaryNoteSatScale: number = +getComputedStyle(this._styleElement).getPropertyValue(\"--mod-secondary-note-sat-scale\");\r\n                    const modSecondaryNoteLum: number = +getComputedStyle(this._styleElement).getPropertyValue(\"--mod-secondary-note-lum\");\r\n                    const modSecondaryNoteLumScale: number = +getComputedStyle(this._styleElement).getPropertyValue(\"--mod-secondary-note-lum-scale\");\r\n                    const modPrimaryNoteHue: number = +getComputedStyle(this._styleElement).getPropertyValue(\"--mod-primary-note-hue\");\r\n                    const modPrimaryNoteHueScale: number = +getComputedStyle(this._styleElement).getPropertyValue(\"--mod-primary-note-hue-scale\");\r\n                    const modPrimaryNoteSat: number = +getComputedStyle(this._styleElement).getPropertyValue(\"--mod-primary-note-sat\");\r\n                    const modPrimaryNoteSatScale: number = +getComputedStyle(this._styleElement).getPropertyValue(\"--mod-primary-note-sat-scale\");\r\n                    const modPrimaryNoteLum: number = +getComputedStyle(this._styleElement).getPropertyValue(\"--mod-primary-note-lum\");\r\n                    const modPrimaryNoteLumScale: number = +getComputedStyle(this._styleElement).getPropertyValue(\"--mod-primary-note-lum-scale\");\r\n\r\n                    let newChannelSecondary: string = \"hsl(\" + ((+modSecondaryChannelHue + (((channel - song.pitchChannelCount - song.noiseChannelCount) * +modSecondaryChannelHueScale) / Config.modChannelCountMax) * 256) % 256) + \",\"\r\n                        + (+modSecondaryChannelSat + channel * +modSecondaryChannelSatScale) + \"%,\"\r\n                        + (+modSecondaryChannelLum + channel * +modSecondaryChannelLumScale) + \"%)\";\r\n                    let newChannelPrimary: string = \"hsl(\" + ((+modPrimaryChannelHue + (((channel - song.pitchChannelCount - song.noiseChannelCount) * +modPrimaryChannelHueScale) / Config.modChannelCountMax) * 256) % 256) + \",\"\r\n                        + (+modPrimaryChannelSat + channel * +modPrimaryChannelSatScale) + \"%,\"\r\n                        + (+modPrimaryChannelLum + channel * +modPrimaryChannelLumScale) + \"%)\";\r\n                    let newNoteSecondary: string = \"hsl(\" + ((+modSecondaryNoteHue + (((channel - song.pitchChannelCount - song.noiseChannelCount) * +modSecondaryNoteHueScale) / Config.modChannelCountMax) * 256) % 256) + \",\"\r\n                        + (+modSecondaryNoteSat + channel * +modSecondaryNoteSatScale) + \"%,\"\r\n                        + (+modSecondaryNoteLum + channel * +modSecondaryNoteLumScale) + \"%)\";\r\n                    let newNotePrimary: string = \"hsl(\" + ((+modPrimaryNoteHue + (((channel - song.pitchChannelCount - song.noiseChannelCount) * +modPrimaryNoteHueScale) / Config.modChannelCountMax) * 256) % 256) + \",\"\r\n                        + (+modPrimaryNoteSat + channel * +modPrimaryNoteSatScale) + \"%,\"\r\n                        + (+modPrimaryNoteLum + channel * +modPrimaryNoteLumScale) + \"%)\";\r\n\r\n                    let newChannelColors = <ChannelColors>{ secondaryChannel: newChannelSecondary, primaryChannel: newChannelPrimary, secondaryNote: newNoteSecondary, primaryNote: newNotePrimary };\r\n                    ColorConfig.colorLookup.set(channel, newChannelColors);\r\n                    return newChannelColors;\r\n                }\r\n            }\r\n        }\r\n    }\r\n\r\n    private static readonly _styleElement: HTMLStyleElement = document.head.appendChild(HTML.style({ type: \"text/css\" }));\r\n\r\n    public static setTheme(name: string): void {\r\n\t\tlet theme: string = this.themes[name];\r\n\t\tif (theme == undefined) theme = this.themes[\"dark classic\"];\r\n\t\tthis._styleElement.textContent = theme;\r\n\r\n        const themeColor = <HTMLMetaElement>document.querySelector(\"meta[name='theme-color']\");\r\n        if (themeColor != null) {\r\n            themeColor.setAttribute(\"content\", getComputedStyle(document.documentElement).getPropertyValue('--ui-widget-background'));\r\n        }\r\n\r\n        this.resetColors();\r\n    }\r\n\r\n    public static getComputed(name: string): string {\r\n        return getComputedStyle(this._styleElement).getPropertyValue(name);\r\n    }\r\n}\r\n\r\n","// Copyright (c) 2012-2022 John Nesky and contributing authors, distributed under the MIT license, see accompanying the LICENSE.md file.\r\n\r\nimport { getLocalStorageItem } from \"../synth/SynthConfig\";\r\nimport {ColorConfig} from \"./ColorConfig\";\r\nimport {HTML} from \"imperative-html/dist/esm/elements-strict\";\r\n\r\n\r\n// Determine if the user's browser/OS adds scrollbars that occupy space.\r\n// See: https://www.filamentgroup.com/lab/scrollbars/\r\nconst scrollBarTest: HTMLDivElement = document.body.appendChild(HTML.div({ style: \"width:30px; height:30px; overflow: auto;\" },\r\n\tHTML.div({ style: \"width:100%;height:40px\" }),\r\n));\r\nif ((<any>scrollBarTest).firstChild.clientWidth < 30) {\r\n\tdocument.documentElement.classList.add(\"obtrusive-scrollbars\");\r\n}\r\ndocument.body.removeChild(scrollBarTest);\r\n\r\n\r\ndocument.head.appendChild(HTML.style({ type: \"text/css\" }, `\r\n\r\n/* Note: \"#\" symbols need to be encoded as \"%23\" in SVG data urls, otherwise they are interpreted as fragment identifiers! */\r\n:root {\r\n\t--button-size: 26px;\r\n\t--settings-area-width: 192px;\r\n\t--play-symbol: url('data:image/svg+xml,<svg xmlns=\"http://www.w3.org/2000/svg\" width=\"26\" height=\"26\" viewBox=\"-13 -13 26 26\"><path d=\"M -5 -8 L -5 8 L 8 0 z\" fill=\"gray\"/></svg>');\r\n\t--pause-symbol: url('data:image/svg+xml,<svg xmlns=\"http://www.w3.org/2000/svg\" width=\"26\" height=\"26\" viewBox=\"-13 -13 26 26\"><rect x=\"-5\" y=\"-7\" width=\"4\" height=\"14\" fill=\"gray\"/><rect x=\"3\" y=\"-7\" width=\"4\" height=\"14\" fill=\"gray\"/></svg>');\r\n\t--record-symbol: url('data:image/svg+xml,<svg xmlns=\"http://www.w3.org/2000/svg\" width=\"26\" height=\"26\" viewBox=\"-13 -13 26 26\"><circle cx=\"0\" cy=\"0\" r=\"6\" fill=\"gray\"/></svg>');\r\n\t--stop-symbol: url('data:image/svg+xml,<svg xmlns=\"http://www.w3.org/2000/svg\" width=\"26\" height=\"26\" viewBox=\"-13 -13 26 26\"><rect x=\"-6\" y=\"-6\" width=\"12\" height=\"12\" fill=\"gray\"/></svg>');\r\n\t--prev-bar-symbol: url('data:image/svg+xml,<svg xmlns=\"http://www.w3.org/2000/svg\" width=\"26\" height=\"26\" viewBox=\"-13 -13 26 26\"><rect x=\"-6\" y=\"-6\" width=\"2\" height=\"12\" fill=\"gray\"/><path d=\"M 6 -6 L 6 6 L -3 0 z\" fill=\"gray\"/></svg>');\r\n\t--next-bar-symbol: url('data:image/svg+xml,<svg xmlns=\"http://www.w3.org/2000/svg\" width=\"26\" height=\"26\" viewBox=\"-13 -13 26 26\"><rect x=\"4\" y=\"-6\" width=\"2\" height=\"12\" fill=\"gray\"/><path d=\"M -6 -6 L -6 6 L 3 0 z\" fill=\"gray\"/></svg>');\r\n\t--volume-symbol: url('data:image/svg+xml,<svg xmlns=\"http://www.w3.org/2000/svg\" width=\"26\" height=\"26\" viewBox=\"0 0 26 26\"><path d=\"M 4 16 L 4 10 L 8 10 L 13 5 L 13 21 L 8 16 z M 15 11 L 16 10 A 7.2 7.2 0 0 1 16 16 L 15 15 A 5.8 5.8 0 0 0 15 12 z M 18 8 L 19 7 A 11.5 11.5 0 0 1 19 19 L 18 18 A 10.1 10.1 0 0 0 18 8 z\" fill=\"gray\"/></svg>');\r\n\t--unmuted-symbol: url('data:image/svg+xml,<svg xmlns=\"http://www.w3.org/2000/svg\" width=\"20\" height=\"20\" viewBox=\"3 3 20 20\"><path d=\"M 4 16 L 4 10 L 8 10 L 13 5 L 13 21 L 8 16 z M 15 11 L 16 10 A 7.2 7.2 0 0 1 16 16 L 15 15 A 5.8 5.8 0 0 0 15 12 z M 18 8 L 19 7 A 11.5 11.5 0 0 1 19 19 L 18 18 A 10.1 10.1 0 0 0 18 8 z\" fill=\"gray\"/></svg>');\r\n\t--muted-symbol: url('data:image/svg+xml,<svg xmlns=\"http://www.w3.org/2000/svg\" width=\"20\" height=\"20\" viewBox=\"3 3 20 20\"><path d=\"M 4 16 L 4 10 L 8 10 L 13 5 L 13 21 L 8 16 z\" fill=\"gray\"/></svg>');\r\n\t--menu-down-symbol: url('data:image/svg+xml,<svg xmlns=\"http://www.w3.org/2000/svg\" width=\"26\" height=\"26\" viewBox=\"-13 -13 26 26\"><path d=\"M -4 -2 L 4 -2 L 0 3 z\" fill=\"gray\"/></svg>');\r\n\t--select-arrows-symbol: url('data:image/svg+xml,<svg xmlns=\"http://www.w3.org/2000/svg\" width=\"26\" height=\"26\" viewBox=\"-13 -13 26 26\"><path d=\"M -4 -3 L 4 -3 L 0 -8 z M -4 3 L 4 3 L 0 8 z\" fill=\"gray\"/></svg>');\r\n\t--file-page-symbol: url('data:image/svg+xml,<svg xmlns=\"http://www.w3.org/2000/svg\" width=\"26\" height=\"26\" viewBox=\"-5 -21 26 26\"><path d=\"M 2 0 L 2 -16 L 10 -16 L 14 -12 L 14 0 z M 3 -1 L 13 -1 L 13 -11 L 9 -11 L 9 -15 L 3 -15 z\" fill=\"gray\"/></svg>');\r\n\t--edit-pencil-symbol: url('data:image/svg+xml,<svg xmlns=\"http://www.w3.org/2000/svg\" width=\"26\" height=\"26\" viewBox=\"-5 -21 26 26\"><path d=\"M 0 0 L 1 -4 L 4 -1 z M 2 -5 L 10 -13 L 13 -10 L 5 -2 zM 11 -14 L 13 -16 L 14 -16 L 16 -14 L 16 -13 L 14 -11 z\" fill=\"gray\"/></svg>');\r\n\t--preferences-gear-symbol: url('data:image/svg+xml,<svg xmlns=\"http://www.w3.org/2000/svg\" width=\"26\" height=\"26\" viewBox=\"-13 -13 26 26\"><path d=\"M 5.78 -1.6 L 7.93 -0.94 L 7.93 0.94 L 5.78 1.6 L 4.85 3.53 L 5.68 5.61 L 4.21 6.78 L 2.36 5.52 L 0.27 5.99 L -0.85 7.94 L -2.68 7.52 L -2.84 5.28 L -4.52 3.95 L -6.73 4.28 L -7.55 2.59 L -5.9 1.07 L -5.9 -1.07 L -7.55 -2.59 L -6.73 -4.28 L -4.52 -3.95 L -2.84 -5.28 L -2.68 -7.52 L -0.85 -7.94 L 0.27 -5.99 L 2.36 -5.52 L 4.21 -6.78 L 5.68 -5.61 L 4.85 -3.53 M 2.92 0.67 L 2.92 -0.67 L 2.35 -1.87 L 1.3 -2.7 L 0 -3 L -1.3 -2.7 L -2.35 -1.87 L -2.92 -0.67 L -2.92 0.67 L -2.35 1.87 L -1.3 2.7 L -0 3 L 1.3 2.7 L 2.35 1.87 z\" fill=\"gray\"/></svg>');\r\n\t--customize-dial-symbol: url('data:image/svg+xml,<svg xmlns=\"http://www.w3.org/2000/svg\" width=\"26\" height=\"26\" viewBox=\"-13 -13 26 26\"> \\\r\n\t\t\t<g transform=\"translate(0,1)\" fill=\"gray\"> \\\r\n\t\t\t\t<circle cx=\"0\" cy=\"0\" r=\"6.5\" stroke=\"gray\" stroke-width=\"1\" fill=\"none\"/> \\\r\n\t\t\t\t<rect x=\"-1\" y=\"-5\" width=\"2\" height=\"4\" transform=\"rotate(30)\"/> \\\r\n\t\t\t\t<circle cx=\"-7.79\" cy=\"4.5\" r=\"0.75\"/> \\\r\n\t\t\t\t<circle cx=\"-9\" cy=\"0\" r=\"0.75\"/> \\\r\n\t\t\t\t<circle cx=\"-7.79\" cy=\"-4.5\" r=\"0.75\"/> \\\r\n\t\t\t\t<circle cx=\"-4.5\" cy=\"-7.79\" r=\"0.75\"/> \\\r\n\t\t\t\t<circle cx=\"0\" cy=\"-9\" r=\"0.75\"/> \\\r\n\t\t\t\t<circle cx=\"4.5\" cy=\"-7.79\" r=\"0.75\"/> \\\r\n\t\t\t\t<circle cx=\"7.79\" cy=\"-4.5\" r=\"0.75\"/> \\\r\n\t\t\t\t<circle cx=\"9\" cy=\"0\" r=\"0.75\"/> \\\r\n\t\t\t\t<circle cx=\"7.79\" cy=\"4.5\" r=\"0.75\"/> \\\r\n\t\t\t</g> \\\r\n\t\t</svg>');\r\n\t--instrument-copy-symbol: url('data:image/svg+xml,<svg xmlns=\"http://www.w3.org/2000/svg\" width=\"26\" height=\"26\" viewBox=\"-5 -21 26 26\"><path d=\"M 0 -15 L 1 -15 L 1 0 L 13 0 L 13 1 L 0 1 L 0 -15 z M 2 -1 L 2 -17 L 10 -17 L 14 -13 L 14 -1 z M 3 -2 L 13 -2 L 13 -12 L 9 -12 L 9 -16 L 3 -16 z\" fill=\"currentColor\"></path></svg>');\r\n\t--instrument-paste-symbol: url('data:image/svg+xml,<svg xmlns=\"http://www.w3.org/2000/svg\" width=\"26\" height=\"26\" viewBox=\"0 0 26 26\"><path d=\"M 8 18 L 6 18 L 6 5 L 17 5 L 17 7 M 9 8 L 16 8 L 20 12 L 20 22 L 9 22 z\" stroke=\"currentColor\" fill=\"none\"></path><path d=\"M 9 3 L 14 3 L 14 6 L 9 6 L 9 3 z M 16 8 L 20 12 L 16 12 L 16 8 z\" fill=\"currentColor\"></path></svg>');\r\n\t--export-symbol: url('data:image/svg+xml,<svg xmlns=\"http://www.w3.org/2000/svg\" width=\"26\" height=\"26\" viewBox=\"-13 -13 26 26\"><path fill=\"gray\" d=\"M -8 3 L -8 8 L 8 8 L 8 3 L 6 3 L 6 6 L -6 6 L -6 3 z M 0 2 L -4 -2 L -1 -2 L -1 -8 L 1 -8 L 1 -2 L 4 -2 z\"/></svg>');\r\n\t--close-symbol: url('data:image/svg+xml,<svg xmlns=\"http://www.w3.org/2000/svg\" width=\"26\" height=\"26\" viewBox=\"-13 -13 26 26\"><path fill=\"gray\" d=\"M -7.07 -5.66 L -5.66 -7.07 L 0 -1.4 L 5.66 -7.07 L 7.07 -5.66 L 1.4 0 L 7.07 5.66 L 5.66 7.07 L 0 1.4 L -5.66 7.07 L -7.07 5.66 L -1.4 0 z\"/></svg>');\r\n\t--add-symbol: url('data:image/svg+xml,<svg xmlns=\"http://www.w3.org/2000/svg\" width=\"26\" height=\"26\" viewBox=\"-13 -13 26 26\"><path fill=\"gray\" d=\"M -8 -1 L -1 -1 L -1 -8  L 1 -8 L 1 -1 L 8 -1 L 8 1 L 1 1 L 1 8 L -1 8 L -1 1 L -8 1 z\"/></svg>');\r\n\t--zoom-in-symbol: url('data:image/svg+xml,<svg xmlns=\"http://www.w3.org/2000/svg\" width=\"20\" height=\"20\" viewBox=\"-10 -10 20 20\"><circle cx=\"-1\" cy=\"-1\" r=\"6\" stroke-width=\"2\" stroke=\"gray\" fill=\"none\"></circle><path stroke=\"gray\" stroke-width=\"2\" d=\"M 3 3 L 7 7 M -1 -4 L -1 2 M -4 -1 L 2 -1\" fill=\"none\"></path></svg>');\r\n\t--zoom-out-symbol: url('data:image/svg+xml,<svg xmlns=\"http://www.w3.org/2000/svg\" width=\"20\" height=\"20\" viewBox=\"-10 -10 20 20\"><circle cx=\"-1\" cy=\"-1\" r=\"6\" stroke-width=\"2\" stroke=\"gray\" fill=\"none\"></circle><path stroke=\"gray\" stroke-width=\"2\" d=\"M 3 3 L 7 7 M -4 -1 L 2 -1\" fill=\"none\"></path></svg>');\r\n\t--checkmark-symbol: url('data:image/svg+xml,<svg xmlns=\"http://www.w3.org/2000/svg\" width=\"26\" height=\"26\" viewBox=\"-13 -13 26 26\"><path fill=\"gray\" d=\"M -9 -2 L -8 -3 L -3 2 L 9 -8 L 10 -7 L -3 8 z\"/></svg>');\r\n\t--drum-symbol: url('data:image/svg+xml,<svg xmlns=\"http://www.w3.org/2000/svg\" width=\"32\" height=\"40\" viewBox=\"0 0 32 40\"> \\\r\n\t\t\t<defs> \\\r\n\t\t\t\t<linearGradient id=\"gold1\" x1=\"0%\" y1=\"0%\" x2=\"100%\" y2=\"0%\"> \\\r\n\t\t\t\t\t<stop offset=\"0%\" stop-color=\"%237e3302\"/> \\\r\n\t\t\t\t\t<stop offset=\"40%\" stop-color=\"%23ffec6b\"/> \\\r\n\t\t\t\t\t<stop offset=\"100%\" stop-color=\"%237e3302\"/> \\\r\n\t\t\t\t</linearGradient> \\\r\n\t\t\t\t<linearGradient id=\"gold2\" x1=\"0%\" y1=\"0%\" x2=\"100%\" y2=\"0%\"> \\\r\n\t\t\t\t\t<stop offset=\"0%\" stop-color=\"%23faaf7d\"/> \\\r\n\t\t\t\t\t<stop offset=\"15%\" stop-color=\"%23fffba9\"/> \\\r\n\t\t\t\t\t<stop offset=\"40%\" stop-color=\"%23ffffe3\"/> \\\r\n\t\t\t\t\t<stop offset=\"65%\" stop-color=\"%23fffba9\"/> \\\r\n\t\t\t\t\t<stop offset=\"100%\" stop-color=\"%23faaf7d\"/> \\\r\n\t\t\t\t</linearGradient> \\\r\n\t\t\t\t<radialGradient id=\"gold3\" cx=\"0%\" cy=\"0%\" r=\"100%\"> \\\r\n\t\t\t\t\t<stop offset=\"0%\" stop-color=\"%23ffffe3\"/> \\\r\n\t\t\t\t\t<stop offset=\"50%\" stop-color=\"%23ffec6b\"/> \\\r\n\t\t\t\t\t<stop offset=\"100%\" stop-color=\"%237e3302\"/> \\\r\n\t\t\t\t</radialGradient> \\\r\n\t\t\t\t<linearGradient id=\"red\" x1=\"0%\" y1=\"0%\" x2=\"100%\" y2=\"0%\"> \\\r\n\t\t\t\t\t<stop offset=\"0%\" stop-color=\"%23641919\"/> \\\r\n\t\t\t\t\t<stop offset=\"40%\" stop-color=\"%23cd2c2c\"/> \\\r\n\t\t\t\t\t<stop offset=\"100%\" stop-color=\"%23641919\"/> \\\r\n\t\t\t\t</linearGradient> \\\r\n\t\t\t\t<radialGradient id=\"membrane\"> \\\r\n\t\t\t\t\t<stop offset=\"10%\" stop-color=\"%23cccccc\" /> \\\r\n\t\t\t\t\t<stop offset=\"90%\" stop-color=\"%23f6f6f7\" /> \\\r\n\t\t\t\t\t<stop offset=\"100%\" stop-color=\"%23999\" /> \\\r\n\t\t\t\t</radialGradient> \\\r\n\t\t\t</defs> \\\r\n\t\t\t<ellipse cx=\"16\" cy=\"26\" rx=\"16\" ry=\"14\" fill=\"rgba(0,0,0,0.5)\"/> \\\r\n\t\t\t<ellipse cx=\"16\" cy=\"25\" rx=\"16\" ry=\"14\" fill=\"url(%23gold1)\"/> \\\r\n\t\t\t<rect x=\"0\" y=\"23\" width=\"32\" height=\"2\" fill=\"url(%23gold1)\"/> \\\r\n\t\t\t<ellipse cx=\"16\" cy=\"23\" rx=\"16\" ry=\"14\" fill=\"url(%23gold2)\"/> \\\r\n\t\t\t<ellipse cx=\"16\" cy=\"23\" rx=\"15\" ry=\"13\" fill=\"url(%23red)\"/> \\\r\n\t\t\t<rect x=\"1\" y=\"17\" width=\"30\" height=\"6\" fill=\"url(%23red)\"/> \\\r\n\t\t\t<rect x=\"5\" y=\"27\" width=\"1\" height=\"5\" rx=\"0.5\" fill=\"rgba(0,0,0,0.5)\"/> \\\r\n\t\t\t<rect x=\"15\" y=\"31\" width=\"2\" height=\"5\" rx=\"1\" fill=\"rgba(0,0,0,0.5)\"/> \\\r\n\t\t\t<rect x=\"26\" y=\"27\" width=\"1\" height=\"5\" rx=\"0.5\" fill=\"rgba(0,0,0,0.5)\"/> \\\r\n\t\t\t<rect x=\"5\" y=\"26\" width=\"1\" height=\"5\" rx=\"0.5\" fill=\"url(%23gold3)\"/> \\\r\n\t\t\t<rect x=\"15\" y=\"30\" width=\"2\" height=\"5\" rx=\"1\" fill=\"url(%23gold3)\"/> \\\r\n\t\t\t<rect x=\"26\" y=\"26\" width=\"1\" height=\"5\" rx=\"0.5\" fill=\"url(%23gold3)\"/> \\\r\n\t\t\t<ellipse cx=\"16\" cy=\"18\" rx=\"15\" ry=\"13\" fill=\"rgba(0,0,0,0.5)\"/> \\\r\n\t\t\t<ellipse cx=\"16\" cy=\"16\" rx=\"16\" ry=\"14\" fill=\"url(%23gold1)\"/> \\\r\n\t\t\t<rect x=\"0\" y=\"14\" width=\"32\" height=\"2\" fill=\"url(%23gold1)\"/> \\\r\n\t\t\t<ellipse cx=\"16\" cy=\"14\" rx=\"16\" ry=\"14\" fill=\"url(%23gold2)\"/> \\\r\n\t\t\t<ellipse cx=\"16\" cy=\"14\" rx=\"15\" ry=\"13\" fill=\"url(%23membrane)\"/> \\\r\n\t\t</svg>');\r\n\t--piano-key-symbol: url('data:image/svg+xml,<svg xmlns=\"http://www.w3.org/2000/svg\" width=\"32\" height=\"15\" preserveAspectRatio=\"none\" viewBox=\"0 -1 32 15\"> \\\r\n\t\t\t<defs> \\\r\n\t\t\t\t<linearGradient id=\"shadow\" x1=\"0%\" y1=\"0%\" x2=\"100%\" y2=\"0%\"> \\\r\n\t\t\t\t\t<stop offset=\"0%\" stop-color=\"rgba(0,0,0,0.5)\"/> \\\r\n\t\t\t\t\t<stop offset=\"100%\" stop-color=\"transparent\"/> \\\r\n\t\t\t\t</linearGradient> \\\r\n\t\t\t</defs> \\\r\n\t\t\t<rect x=\"-1\" y=\"1\" width=\"31\" height=\"1\" rx=\"0.6\" fill=\"rgba(255,255,255,0.4)\"/> \\\r\n\t\t\t<path d=\"M -1 11 L 30 11 L 30 2 L 33 -1 L 33 14 L -1 14 z\" fill=\"rgba(0,0,0,0.7)\"/> \\\r\n\t\t\t<rect x=\"-1\" y=\"-1\" width=\"19\" height=\"15\" fill=\"url(%23shadow)\"/> \\\r\n\t\t</svg>');\r\n  --mod-key-symbol: url('data:image/svg+xml,<svg xmlns=\"http://www.w3.org/2000/svg\" width=\"32\" height=\"80\" preserveAspectRatio=\"none\" viewBox=\"0 -1 32 80\"> \\\r\n\t\t\t<defs> \\\r\n\t\t\t\t<linearGradient id=\"shadow\" x1=\"0%\" y1=\"0%\" x2=\"100%\" y2=\"0%\"> \\\r\n\t\t\t\t\t<stop offset=\"0%\" stop-color=\"rgba(0,0,0,0.4)\"/> \\\r\n\t\t\t\t\t<stop offset=\"100%\" stop-color=\"transparent\"/> \\\r\n\t\t\t\t</linearGradient> \\\r\n\t\t\t</defs> \\\r\n\t\t\t<rect x=\"-1\" y=\"1\" width=\"31\" height=\"1\" rx=\"0.6\" fill=\"rgba(255,255,255,0.2)\"/> \\\r\n\t\t\t<path d=\"M -1 76 L 30 76 L 30 1 L 33 -1 L 33 80 L -1 80 z\" fill=\"rgba(0,0,0,0.7)\"/> \\\r\n\t\t\t<rect x=\"-1\" y=\"-1\" width=\"19\" height=\"80\" fill=\"url(%23shadow)\"/> \\\r\n\t\t</svg>');\r\n}\r\n\r\n\r\n.obtrusive-scrollbars, .obtrusive-scrollbars * {\r\n\tscrollbar-width: thin;\r\n\tscrollbar-color: ${ColorConfig.uiWidgetBackground} ${ColorConfig.editorBackground};\r\n}\r\n.obtrusive-scrollbars::-webkit-scrollbar, .obtrusive-scrollbars *::-webkit-scrollbar {\r\n\twidth: 12px;\r\n}\r\n.obtrusive-scrollbars::-webkit-scrollbar-track, .obtrusive-scrollbars *::-webkit-scrollbar-track {\r\n\tbackground: ${ColorConfig.editorBackground};\r\n}\r\n.obtrusive-scrollbars::-webkit-scrollbar-thumb, .obtrusive-scrollbars *::-webkit-scrollbar-thumb {\r\n\tbackground-color: ${ColorConfig.uiWidgetBackground};\r\n\tborder: 3px solid ${ColorConfig.editorBackground};\r\n}\r\n\r\n@-moz-document url-prefix() {\r\n\t.muteButtonText {\r\n\t\ttransform: translate(3px, 1px) !important;\r\n\t}\r\n}\r\n\r\n.beepboxEditor {\r\n\tdisplay: grid;\r\n    grid-template-columns: minmax(0, 1fr) max-content;\r\n    grid-template-rows: max-content 1fr; /* max-content minmax(0, 1fr); Chrome 80 grid layout regression. https://bugs.chromium.org/p/chromium/issues/detail?id=1050307 */\r\n    grid-template-areas: \"pattern-area settings-area\" \"track-area settings-area\";\r\n\tgrid-column-gap: 6px;\r\n\tgrid-row-gap: 6px;\r\n\tposition: relative;\r\n\ttouch-action: manipulation;\r\n\tcursor: default;\r\n\tfont-size: 13px;\r\n\toverflow: hidden;\r\n\tcolor: ${ColorConfig.primaryText};\r\n\tbackground: ${ColorConfig.editorBackground};\r\n    opacity: 0;\r\n    -webkit-transition: opacity 0.2s ease-in;\r\n    -moz-transition: opacity 0.2s ease-in;\r\n    -o-transition: opacity 0.2s ease-in;\r\n    -ms-transition: opacity 0.2s ease-in;\r\n    transition: opacity 0.2s ease-in;\r\n    transition-delay: 0s;\r\n}\r\n\r\n.beepboxEditor .operatorRow {\r\n\tmargin: 2px 0;\r\n\theight: 2em;\r\n\tdisplay: flex;\r\n\tflex-direction: row;\r\n\talign-items: center;\r\n}\r\n\r\n.beepboxEditor .operatorRow > * {\r\n\tflex-grow: 1;\r\n\tflex-shrink: 1;\r\n}\r\n\r\n.pattern-area {\r\n     opacity: 0;\r\n    -webkit-transition: opacity 0.5s ease-in;\r\n    -moz-transition: opacity 0.5s ease-in;\r\n    -o-transition: opacity 0.5s ease-in;\r\n    -ms-transition: opacity 0.5s ease-in;\r\n    transition: opacity 0.5s ease-in;\r\n    transition-delay: 0s;\r\n}\r\n\r\n.settings-area {\r\n    opacity: 0;\r\n    -webkit-transition: opacity 0.5s ease-in;\r\n    -moz-transition: opacity 0.5s ease-in;\r\n    -o-transition: opacity 0.5s ease-in;\r\n    -ms-transition: opacity 0.5s ease-in;\r\n    transition: opacity 0.5s ease-in;\r\n    transition-delay: 0.15s;\r\n}\r\n\r\n.editor-song-settings {\r\n    opacity: 0;\r\n    -webkit-transition: opacity 0.5s ease-in;\r\n    -moz-transition: opacity 0.5s ease-in;\r\n    -o-transition: opacity 0.5s ease-in;\r\n    -ms-transition: opacity 0.5s ease-in;\r\n    transition: opacity 0.5s ease-in;\r\n    transition-delay: 0.35s;\r\n}\r\n\r\n.instrument-settings-area {\r\n    opacity: 0;\r\n    -webkit-transition: opacity 0.5s ease-in;\r\n    -moz-transition: opacity 0.5s ease-in;\r\n    -o-transition: opacity 0.5s ease-in;\r\n    -ms-transition: opacity 0.5s ease-in;\r\n    transition: opacity 0.5s ease-in;\r\n    transition-delay: 0.45s;\r\n}\r\n\r\n.trackAndMuteContainer {\r\n    opacity: 0;\r\n    -webkit-transition: opacity 0.5s ease-in;\r\n    -moz-transition: opacity 0.5s ease-in;\r\n    -o-transition: opacity 0.5s ease-in;\r\n    -ms-transition: opacity 0.5s ease-in;\r\n    transition: opacity 0.5s ease-in;\r\n    transition-delay: 0.4s;\r\n}\r\n\r\n.barScrollBar {\r\n    opacity: 0;\r\n    -webkit-transition: opacity 0.5s ease-in;\r\n    -moz-transition: opacity 0.5s ease-in;\r\n    -o-transition: opacity 0.5s ease-in;\r\n    -ms-transition: opacity 0.5s ease-in;\r\n    transition: opacity 0.5s ease-in;\r\n    transition-delay: 0.5s;\r\n}\r\n\r\n\r\n\r\n.load {\r\n    opacity: 1;\r\n}\r\n\r\n.beepboxEditor .noSelection {\r\n\t-webkit-touch-callout: none;\r\n\t-webkit-user-select: none;\r\n\t-moz-user-select: none;\r\n\t-ms-user-select: none;\r\n\tuser-select: none;\r\n}\r\n\r\n.beepboxEditor div {\r\n\tmargin: 0;\r\n\tpadding: 0;\r\n}\r\n\r\n.beepboxEditor .pattern-area {\r\n\tgrid-area: pattern-area;\r\n\theight: 481px;\r\n\tdisplay: flex;\r\n\tflex-direction: row;\r\n\tposition: relative;\r\n}\r\n\r\n.beepboxEditor .track-area {\r\n\tgrid-area: track-area;\r\n\tbackground-image: url(${getLocalStorageItem(\"customTheme2\", \"\")});\r\n}\r\n\r\n.beepboxEditor .loopEditor {\r\n\theight: 20px;\r\n\tposition: sticky;\r\n\tbottom: 0;\r\n\tpadding: 5px 0;\r\n\tbackground-color: ${ColorConfig.editorBackground};\r\n}\r\n\r\n.beepboxEditor .settings-area {\r\n\tgrid-area: settings-area;\r\n\tdisplay: grid;\r\n    grid-template-columns: auto;\r\n    grid-template-rows: min-content min-content min-content min-content min-content;\r\n    grid-template-areas: \"version-area\" \"play-pause-area\" \"menu-area\" \"song-settings-area\" \"instrument-settings-area\";\r\n\tgrid-column-gap: 6px;\r\n}\r\n\r\n.beepboxEditor .version-area{ grid-area: version-area; }\r\n.beepboxEditor .play-pause-area{ grid-area: play-pause-area; }\r\n.beepboxEditor .menu-area{ grid-area: menu-area; }\r\n.beepboxEditor .song-settings-area{ grid-area: song-settings-area; }\r\n.beepboxEditor .instrument-settings-area{ grid-area: instrument-settings-area; }\r\n\r\n.beepboxEditor .tip {\r\n\tcursor: help;\r\n\tcolor: ${ColorConfig.secondaryText};\r\n\ttext-decoration: none;\r\n}\r\n\r\n.beepboxEditor .tip:hover {\r\n\tcolor: ${ColorConfig.linkAccent};\r\n\ttext-decoration: underline;\r\n}\r\n.beepboxEditor .tip:active {\r\n\tcolor: ${ColorConfig.primaryText};\r\n}\r\n\r\n.beepboxEditor .volume-speaker {\r\n\tflex-shrink: 0;\r\n\twidth: var(--button-size);\r\n\theight: var(--button-size);\r\n\tbackground: ${ColorConfig.secondaryText};\r\n\t-webkit-mask-image: var(--volume-symbol);\r\n\t-webkit-mask-repeat: no-repeat;\r\n\t-webkit-mask-position: center;\r\n\tmask-image: var(--volume-symbol);\r\n\tmask-repeat: no-repeat;\r\n\tmask-position: center;\r\n}\r\n\r\n.beepboxEditor .drum-button {\r\n\tflex: 1;\r\n\tbackground-color: transparent;\r\n\tbackground-image: var(--drum-symbol);\r\n\tbackground-repeat: no-repeat;\r\n\tbackground-position: center;\r\n}\r\n\r\n.beepboxEditor .modulator-button {\r\n\tflex: 1;\r\n\tposition: relative;\r\n\tdisplay: flex;\r\n\talign-items: center;\r\n}\r\n.beepboxEditor .modulator-button::before {\r\n\tcontent: \"\";\r\n\tposition: absolute;\r\n\tleft: 0;\r\n\ttop: 0;\r\n\twidth: 100%;\r\n\theight: 100%;\r\n\tpointer-events: none;\r\n\tbackground-image: var(--mod-key-symbol);\r\n\tbackground-repeat: no-repeat;\r\n\tbackground-position: center;\r\n\tbackground-size: 100% 102%;\r\n}\r\n\r\n.beepboxEditor .piano-button {\r\n\tflex: 1;\r\n\tposition: relative;\r\n\tdisplay: flex;\r\n\talign-items: center;\r\n}\r\n.beepboxEditor .piano-button::before {\r\n\tcontent: \"\";\r\n\tposition: absolute;\r\n\tleft: 0;\r\n\ttop: 0;\r\n\twidth: 100%;\r\n\theight: 100%;\r\n\tpointer-events: none;\r\n\tbackground-image: var(--piano-key-symbol);\r\n\tbackground-repeat: no-repeat;\r\n\tbackground-position: center;\r\n\tbackground-size: 100% 115.38%;\r\n}\r\n.beepboxEditor .piano-button.disabled::after {\r\n\tcontent: \"\";\r\n\tposition: absolute;\r\n\tright: 0;\r\n\ttop: 0;\r\n\twidth: 70%;\r\n\theight: 100%;\r\n\tpointer-events: none;\r\n\tbackground: ${ColorConfig.editorBackground};\r\n\t-webkit-mask-image: linear-gradient(90deg, transparent 0%, gray 70%, gray 100%);\r\n\t-webkit-mask-repeat: no-repeat;\r\n\t-webkit-mask-position: center;\r\n\tmask-image: linear-gradient(90deg, transparent 0%, gray 70%, gray 100%);\r\n\tmask-repeat: no-repeat;\r\n\tmask-position: center;\r\n}\r\n\r\n.beepboxEditor .piano-button.pressed, .beepboxEditor .drum-button.pressed {\r\n\tfilter: brightness(0.5);\r\n}\r\n\r\n.beepboxEditor .customize-instrument {\r\n\tmargin: 2px 0;\r\n}\r\n.beepboxEditor .customize-instrument::before {\r\n\tcontent: \"\";\r\n\tflex-shrink: 0;\r\n\tposition: absolute;\r\n\tleft: 0;\r\n\ttop: 50%;\r\n\ttransform: translateY(-50%);\r\n\tpointer-events: none;\r\n\twidth: var(--button-size);\r\n\theight: var(--button-size);\r\n\tbackground: currentColor;\r\n\t-webkit-mask-image: var(--customize-dial-symbol);\r\n\t-webkit-mask-repeat: no-repeat;\r\n\t-webkit-mask-position: center;\r\n\tmask-image: var(--customize-dial-symbol);\r\n\tmask-repeat: no-repeat;\r\n\tmask-position: center;\r\n}\r\n\r\n.beepboxEditor .instrumentCopyPasteRow {\r\n\tgap: 2px;\r\n}\r\n\r\n.beepboxEditor .copy-instrument {\r\n\tmargin: 2px 0;\r\n\tflex-grow: 1;\r\n}\r\n.beepboxEditor .copy-instrument::before {\r\n\tcontent: \"\";\r\n\tflex-shrink: 0;\r\n\tposition: absolute;\r\n\tleft: 0;\r\n\ttop: 50%;\r\n\ttransform: translateY(-50%);\r\n\tpointer-events: none;\r\n\twidth: var(--button-size);\r\n\theight: var(--button-size);\r\n\tbackground: currentColor;\r\n\t-webkit-mask-image: var(--instrument-copy-symbol);\r\n\t-webkit-mask-repeat: no-repeat;\r\n\t-webkit-mask-position: center;\r\n\tmask-image: var(--instrument-copy-symbol);\r\n\tmask-repeat: no-repeat;\r\n\tmask-position: center;\r\n}\r\n\r\n.beepboxEditor .paste-instrument {\r\n\tmargin: 2px 0;\r\n\tflex-grow: 1;\r\n}\r\n.beepboxEditor .paste-instrument::before {\r\n\tcontent: \"\";\r\n\tflex-shrink: 0;\r\n\tposition: absolute;\r\n\tleft: 0;\r\n\ttop: 50%;\r\n\ttransform: translateY(-50%);\r\n\tpointer-events: none;\r\n\twidth: var(--button-size);\r\n\theight: var(--button-size);\r\n\tbackground: currentColor;\r\n\t-webkit-mask-image: var(--instrument-paste-symbol);\r\n\t-webkit-mask-repeat: no-repeat;\r\n\t-webkit-mask-position: center;\r\n\tmask-image: var(--instrument-paste-symbol);\r\n\tmask-repeat: no-repeat;\r\n\tmask-position: center;\r\n}\r\n\r\n.beepboxEditor .envelopeEditor {\r\n\tdisplay: flex;\r\n\tflex-direction: column;\r\n}\r\n\r\n.beepboxEditor .envelope-row {\r\n\tdisplay: flex;\r\n\tmargin: 2px 0;\r\n\tgap: 2px;\r\n}\r\n\r\n.beepboxEditor .add-envelope {\r\n\twidth: var(--button-size);\r\n}\r\n.beepboxEditor .add-envelope::before {\r\n\tcontent: \"\";\r\n\tposition: absolute;\r\n\twidth: var(--button-size);\r\n\theight: var(--button-size);\r\n\tleft: 0;\r\n\ttop: 0;\r\n\tpointer-events: none;\r\n\tbackground: currentColor;\r\n\tmask-image: var(--add-symbol);\r\n\tmask-repeat: no-repeat;\r\n\tmask-position: center;\r\n\t-webkit-mask-image: var(--add-symbol);\r\n\t-webkit-mask-repeat: no-repeat;\r\n\t-webkit-mask-position: center;\r\n}\r\n.beepboxEditor .add-envelope:disabled {\r\n\tvisibility: hidden;\r\n}\r\n\r\n.beepboxEditor .effects-menu {\r\n\twidth: var(--button-size);\r\n\tposition: relative;\r\n}\r\n.beepboxEditor .effects-menu::before {\r\n\tcontent: \"\";\r\n\tposition: absolute;\r\n\twidth: var(--button-size);\r\n\theight: var(--button-size);\r\n\tleft: 0;\r\n\ttop: 0;\r\n\tpointer-events: none;\r\n\tbackground: currentColor;\r\n\tmask-image: var(--menu-down-symbol);\r\n\tmask-repeat: no-repeat;\r\n\tmask-position: center;\r\n\t-webkit-mask-image: var(--menu-down-symbol);\r\n\t-webkit-mask-repeat: no-repeat;\r\n\t-webkit-mask-position: center;\r\n}\r\n\r\n.beepboxEditor .zoomInButton, .beepboxEditor .zoomOutButton {\r\n\twidth: var(--button-size);\r\n\tposition: absolute;\r\n\tright: 10px;\r\n}\r\n.beepboxEditor .zoomInButton {\r\n\ttop: 10px;\r\n}\r\n.beepboxEditor .zoomOutButton {\r\n\ttop: 50px;\r\n}\r\n.beepboxEditor .zoomInButton::before {\r\n\tcontent: \"\";\r\n\tposition: absolute;\r\n\twidth: var(--button-size);\r\n\theight: var(--button-size);\r\n\tleft: 0;\r\n\ttop: 0;\r\n\tpointer-events: none;\r\n\tbackground: currentColor;\r\n\tmask-image: var(--zoom-in-symbol);\r\n\tmask-repeat: no-repeat;\r\n\tmask-position: center;\r\n\t-webkit-mask-image: var(--zoom-in-symbol);\r\n\t-webkit-mask-repeat: no-repeat;\r\n\t-webkit-mask-position: center;\r\n}\r\n.beepboxEditor .zoomOutButton::before {\r\n\tcontent: \"\";\r\n\tposition: absolute;\r\n\twidth: var(--button-size);\r\n\theight: var(--button-size);\r\n\tleft: 0;\r\n\ttop: 0;\r\n\tpointer-events: none;\r\n\tbackground: currentColor;\r\n\tmask-image: var(--zoom-out-symbol);\r\n\tmask-repeat: no-repeat;\r\n\tmask-position: center;\r\n\t-webkit-mask-image: var(--zoom-out-symbol);\r\n\t-webkit-mask-repeat: no-repeat;\r\n\t-webkit-mask-position: center;\r\n}\r\n\r\n.beepboxEditor .delete-envelope {\r\n\twidth: var(--button-size);\r\n\tflex-shrink: 0;\r\n\tflex-grow: 0;\r\n}\r\n.beepboxEditor .delete-envelope::before {\r\n\tcontent: \"\";\r\n\tposition: absolute;\r\n\twidth: var(--button-size);\r\n\theight: var(--button-size);\r\n\tleft: 0;\r\n\ttop: 0;\r\n\tpointer-events: none;\r\n\tbackground: currentColor;\r\n\tmask-image: var(--close-symbol);\r\n\tmask-repeat: no-repeat;\r\n\tmask-position: center;\r\n\t-webkit-mask-image: var(--close-symbol);\r\n\t-webkit-mask-repeat: no-repeat;\r\n\t-webkit-mask-position: center;\r\n}\r\n.beepboxEditor .delete-envelope:disabled {\r\n\tvisibility: hidden;\r\n}\r\n\r\n.beepboxEditor .menu.file::before {\r\n\tcontent: \"\";\r\n\tflex-shrink: 0;\r\n\tposition: absolute;\r\n\tleft: 0;\r\n\ttop: 50%;\r\n\ttransform: translateY(-50%);\r\n\tpointer-events: none;\r\n\twidth: var(--button-size);\r\n\theight: var(--button-size);\r\n\tbackground: currentColor;\r\n\t-webkit-mask-image: var(--file-page-symbol);\r\n\t-webkit-mask-repeat: no-repeat;\r\n\t-webkit-mask-position: center;\r\n\tmask-image: var(--file-page-symbol);\r\n\tmask-repeat: no-repeat;\r\n\tmask-position: center;\r\n}\r\n\r\n.beepboxEditor .menu.edit::before {\r\n\tcontent: \"\";\r\n\tflex-shrink: 0;\r\n\tposition: absolute;\r\n\tleft: 0;\r\n\ttop: 50%;\r\n\ttransform: translateY(-50%);\r\n\tpointer-events: none;\r\n\twidth: var(--button-size);\r\n\theight: var(--button-size);\r\n\tbackground: currentColor;\r\n\t-webkit-mask-image: var(--edit-pencil-symbol);\r\n\t-webkit-mask-repeat: no-repeat;\r\n\t-webkit-mask-position: center;\r\n\tmask-image: var(--edit-pencil-symbol);\r\n\tmask-repeat: no-repeat;\r\n\tmask-position: center;\r\n}\r\n\r\n.beepboxEditor .menu.preferences::before {\r\n\tcontent: \"\";\r\n\tflex-shrink: 0;\r\n\tposition: absolute;\r\n\tleft: 0;\r\n\ttop: 50%;\r\n\ttransform: translateY(-50%);\r\n\tpointer-events: none;\r\n\twidth: var(--button-size);\r\n\theight: var(--button-size);\r\n\tbackground: currentColor;\r\n\t-webkit-mask-image: var(--preferences-gear-symbol);\r\n\t-webkit-mask-repeat: no-repeat;\r\n\t-webkit-mask-position: center;\r\n\tmask-image: var(--preferences-gear-symbol);\r\n\tmask-repeat: no-repeat;\r\n\tmask-position: center;\r\n}\r\n\r\n.beepboxEditor .mute-button {\r\n\tbackground: transparent;\r\n\tborder: none;\r\n  padding-right: 0px;\r\n  padding-left: 0px;\r\n  box-shadow: none;\r\n}\r\n\r\n.beepboxEditor .mute-button:focus {\r\n  background: transparent;\r\n\tborder: none;\r\n}\r\n\r\n.beepboxEditor .mute-button::before {\r\n\tcontent: \"\";\r\n\tpointer-events: none;\r\n\twidth: 100%;\r\n\theight: 100%;\r\n\tdisplay: inline-block;\r\n  background: var(--mute-button-normal);\r\n\t-webkit-mask-image: var(--unmuted-symbol);\r\n\t-webkit-mask-repeat: no-repeat;\r\n\t-webkit-mask-position: center;\r\n\t-webkit-mask-size: cover;\r\n  mask-repeat: no-repeat;\r\n\tmask-position: center;\r\n\tmask-size: cover;\r\n  mask-image: var(--unmuted-symbol);\r\n}\r\n\r\n.beepboxEditor .mute-button.muted::before {\r\n  background: var(--ui-widget-background);\r\n\t-webkit-mask-image: var(--muted-symbol);\r\n  mask-image: var(--muted-symbol);\r\n}\r\n\r\n.beepboxEditor .mute-button.modMute.muted::before {\r\n  background: var(--ui-widget-background);\r\n\t-webkit-mask-image: var(--muted-symbol);\r\n  mask-image: var(--muted-symbol);\r\n}\r\n\r\n.beepboxEditor .mute-button.modMute::before {\r\n  background: var(--mute-button-mod);\r\n}\r\n\r\n\r\n.beepboxEditor .promptContainer {\r\n\tposition: absolute;\r\n\ttop: 0;\r\n\tleft: 0;\r\n\twidth: 100%;\r\n\theight: 100%;\r\n\tdisplay: flex;\r\n\tjustify-content: center;\r\n\talign-items: center;\r\n\tz-index: 100;\r\n}\r\n\r\n.beepboxEditor .promptContainer::before {\r\n\tcontent: \"\";\r\n\tposition: absolute;\r\n\ttop: 0;\r\n\tleft: 0;\r\n\twidth: 100%;\r\n\theight: 100%;\r\n\tbackground: ${ColorConfig.editorBackground};\r\n\topacity: 0.5;\r\n\tdisplay: flex;\r\n}\r\n\r\n.beepboxEditor .prompt {\r\n\tmargin: auto;\r\n\ttext-align: center;\r\n\tbackground: ${ColorConfig.editorBackground};\r\n\tborder-radius: 15px;\r\n\tborder: 4px solid ${ColorConfig.uiWidgetBackground};\r\n\tcolor: ${ColorConfig.primaryText};\r\n\tpadding: 20px;\r\n\tdisplay: flex;\r\n\tflex-direction: column;\r\n\tposition: relative;\r\n\tbox-shadow: 5px 5px 20px 10px rgba(0,0,0,0.5);\r\n}\r\n\r\n.beepboxEditor .prompt > *:not(:first-child):not(.cancelButton) {\r\n\tmargin-top: 1.5em;\r\n}\r\n\r\n.beepboxEditor .prompt h2 {\r\n\tfont-size: 2em;\r\n\tmargin: 0 16px;\r\n\tfont-weight: normal;\r\n}\r\n\r\n.beepboxEditor .prompt p {\r\n\ttext-align: left;\r\n\tmargin: 1em 0;\r\n}\r\n\r\n.beepboxEditor .prompt label {\r\n\tcursor: pointer;\r\n}\r\n\r\n.beepboxEditor .prompt.recordingSetupPrompt p {\r\n\tmargin-top: 0.75em;\r\n\tmargin-bottom: 0;\r\n}\r\n\r\n.beepboxEditor .prompt.recordingSetupPrompt > label:not(:first-child):not(.cancelButton) {\r\n\tmargin: 2px 0;\r\n}\r\n\r\n.beepboxEditor .layout-option {\r\n\tdisplay: flex;\r\n\tflex-direction: column;\r\n\tflex: 1;\r\n\tcursor: pointer;\r\n\tcolor: ${ColorConfig.secondaryText};\r\n}\r\n\r\n.beepboxEditor .layout-option input {\r\n\tdisplay: none;\r\n}\r\n\r\n.beepboxEditor .layout-option input:checked ~ * {\r\n\tcolor: ${ColorConfig.primaryText};\r\n}\r\n.beepboxEditor select.invalidSetting {\r\n\tborder: solid 1px red;\r\n}\r\n.beepboxEditor .selectContainer {\r\n\tposition: relative;\r\n}\r\n.beepboxEditor .selectContainer:not(.menu)::after {\r\n\tcontent: \"\";\r\n\tflex-shrink: 0;\r\n\tposition: absolute;\r\n\tright: 0;\r\n\ttop: 50%;\r\n\ttransform: translateY(-50%);\r\n\tpointer-events: none;\r\n\twidth: 14px;\r\n\theight: var(--button-size);\r\n\tbackground: currentColor;\r\n\t-webkit-mask-image: var(--select-arrows-symbol);\r\n\t-webkit-mask-repeat: no-repeat;\r\n\t-webkit-mask-position: center;\r\n\tmask-image: var(--select-arrows-symbol);\r\n\tmask-repeat: no-repeat;\r\n\tmask-position: center;\r\n}\r\n.beepboxEditor .selectContainer.menu::after {\r\n\tcontent: \"\";\r\n\tflex-shrink: 0;\r\n\tposition: absolute;\r\n\tright: 0;\r\n\ttop: 50%;\r\n\ttransform: translateY(-50%);\r\n\tpointer-events: none;\r\n\twidth: var(--button-size);\r\n\theight: var(--button-size);\r\n\tbackground: currentColor;\r\n\t-webkit-mask-image: var(--menu-down-symbol);\r\n\t-webkit-mask-repeat: no-repeat;\r\n\t-webkit-mask-position: center;\r\n\tmask-image: var(--menu-down-symbol);\r\n\tmask-repeat: no-repeat;\r\n\tmask-position: center;\r\n}\r\n.beepboxEditor select {\r\n\tmargin: 0;\r\n\tpadding: 0 4px;\r\n\tdisplay: block;\r\n\theight: var(--button-size);\r\n\tborder: none;\r\n\tborder-radius: 5px;\r\n\tbackground: ${ColorConfig.uiWidgetBackground};\r\n\tcolor: inherit;\r\n\tfont-size: inherit;\r\n\tcursor: pointer;\r\n\tfont-family: inherit;\r\n\tfont-weight: inherit;\r\n\r\n\t-webkit-appearance:none;\r\n\t-moz-appearance: none;\r\n\tappearance: none;\r\n}\r\n.beepboxEditor select option:disabled {\r\n\tcolor: ${ColorConfig.linkAccent};\r\n\tfont-weight: bold;\r\n}\r\n\r\n.select2-container .select2-selection--single {\r\n  height: auto;\r\n}\r\n\r\n.select2-container {\r\n  width: -moz-available !important;\r\n  width: -webkit-fill-available !important;\r\n}\r\n@media (min-width: 711px) {\r\n\t.select2 {\r\n\t  width: calc(var(--settings-area-width) * 0.625) !important;\r\n\t}\r\n}\r\n\r\n.select2-container--default .select2-selection--single{\r\n  border-radius: 0px;\r\n  border: 0px;\r\n  background-color: transparent;\r\n  outline: none;\r\n}\r\n\r\n.select2-selection__rendered:not(.menu)::before {\r\n\tcontent: \"\";\r\n\tposition: absolute;\r\n\tright: 0.3em;\r\n\ttop: 0.4em;\r\n\tborder-bottom: 0.4em solid currentColor;\r\n\tborder-left: 0.3em solid transparent;\r\n\tborder-right: 0.3em solid transparent;\r\n\tpointer-events: none;\r\n}\r\n.select2-selection__rendered:not(.menu)::after {\r\n\tcontent: \"\";\r\n\tposition: absolute;\r\n\tright: 0.3em;\r\n\tbottom: 0.4em;\r\n\tborder-top: 0.4em solid currentColor;\r\n\tborder-left: 0.3em solid transparent;\r\n\tborder-right: 0.3em solid transparent;\r\n\tpointer-events: none;\r\n}\r\n.select2-selection__rendered {\r\n\tmargin: 0;\r\n\tpadding: 0 0.3em;\r\n\tdisplay: block;\r\n\theight: 2em;\r\n\tborder: none;\r\n\tborder-radius: 0.4em;\r\n\tbackground: ${ColorConfig.uiWidgetBackground};\r\n\tcolor: inherit !important;\r\n\tfont-size: inherit;\r\n\tcursor: pointer;\r\n\tfont-family: inherit;\r\n\t-webkit-appearance:none;\r\n\t-moz-appearance: none;\r\n\tappearance: none;\r\n}\r\n.select2-selection__arrow b{\r\n    display:none !important;\r\n}\r\n\r\n.select2-selection__rendered--focus {\r\n\tbackground: ${ColorConfig.uiWidgetFocus};\r\n\toutline: none;\r\n}\r\n.select2-search__field {\r\n    background: ${ColorConfig.uiWidgetBackground};\r\n    color: inherit !important;\r\n    font-size: small;\r\n    font-family: inherit;\r\n    border: 0px !important;\r\n    padding: 1px !important;\r\n}\r\n.select2-dropdown {\r\n    box-sizing: border-box;\r\n    display: inline-block;\r\n    margin: 0;\r\n    font-size: small;\r\n    position: relative;\r\n    vertical-align: middle;\r\n    background-color: ${ColorConfig.uiWidgetFocus};\r\n}\r\n\r\n.select2-container--default .select2-results>.select2-results__options {\r\n    max-height: 430px;\r\n    overflow-x: hidden;\r\n}\r\n.select2-container--default .select2-results__group {\r\n    cursor: default;\r\n    display: block;\r\n    padding: 1px;\r\n    background: ${ColorConfig.select2OptGroup};\r\n}\r\n.select2-results__option {\r\n    padding: 2px;\r\n    user-select: none;\r\n    -webkit-user-select: none;\r\n}\r\n.select2-container--default .select2-results__option .select2-results__option {\r\n    padding-left: 0.1em;\r\n}\r\n.select2-container--default .select2-results__option[aria-selected=true] {\r\n  background-color: transparent !important;\r\n}\r\n\r\n.select2-results__option--highlighted[aria-selected] {\r\n\tcolor: white !important;\r\n}\r\n\r\n.beepboxEditor .menu select {\r\n\tpadding: 0 var(--button-size);\r\n}\r\n.beepboxEditor select:focus {\r\n\tbackground: ${ColorConfig.uiWidgetFocus};\r\n\toutline: none;\r\n}\r\n.beepboxEditor .menu select {\r\n\ttext-align: center;\r\n\ttext-align-last: center;\r\n}\r\n.beepboxEditor .settings-area select {\r\n       width: 100%;\r\n}\r\n\r\n/* This makes it look better in firefox on my computer... What about others?\r\n@-moz-document url-prefix() {\r\n\t.beepboxEditor select { padding: 0 2px; }\r\n}\r\n*/\r\n.beepboxEditor button {\r\n\tmargin: 0;\r\n\tposition: relative;\r\n\theight: var(--button-size);\r\n\tborder: none;\r\n\tborder-radius: 5px;\r\n\tbackground: ${ColorConfig.uiWidgetBackground};\r\n\tcolor: inherit;\r\n\tfont-size: inherit;\r\n\tfont-family: inherit;\r\n\tfont-weight: inherit;\r\n\tcursor: pointer;\r\n}\r\n.beepboxEditor button:focus {\r\n\tbackground: ${ColorConfig.uiWidgetFocus};\r\n\toutline: none;\r\n}\r\n\r\n.beepboxEditor button.cancelButton {\r\n\tfloat: right;\r\n\twidth: var(--button-size);\r\n\tposition: absolute;\r\n\ttop: 8px;\r\n\tright: 8px;\r\n}\r\n\r\n.beepboxEditor .playback-bar-controls {\r\n\tdisplay: grid;\r\n\tgrid-template-columns: minmax(0, 1fr) minmax(0, 1fr) minmax(0, 1fr) minmax(0, 1fr);\r\n\tgrid-template-rows: min-content;\r\n\tgrid-column-gap: 4px;\r\n}\r\n\r\n.beepboxEditor button.playButton::before {\r\n\tcontent: \"\";\r\n\tflex-shrink: 0;\r\n\tposition: absolute;\r\n\tleft: 0;\r\n\ttop: 50%;\r\n\ttransform: translateY(-50%);\r\n\tpointer-events: none;\r\n\twidth: var(--button-size);\r\n\theight: var(--button-size);\r\n\tbackground: currentColor;\r\n\t-webkit-mask-image: var(--play-symbol);\r\n\t-webkit-mask-repeat: no-repeat;\r\n\t-webkit-mask-position: center;\r\n\tmask-image: var(--play-symbol);\r\n\tmask-repeat: no-repeat;\r\n\tmask-position: center;\r\n}\r\n.beepboxEditor button.pauseButton::before {\r\n\tcontent: \"\";\r\n\tflex-shrink: 0;\r\n\tposition: absolute;\r\n\tleft: 0;\r\n\ttop: 50%;\r\n\ttransform: translateY(-50%);\r\n\tpointer-events: none;\r\n\twidth: var(--button-size);\r\n\theight: var(--button-size);\r\n\tbackground: currentColor;\r\n\t-webkit-mask-image: var(--pause-symbol);\r\n\t-webkit-mask-repeat: no-repeat;\r\n\t-webkit-mask-position: center;\r\n\tmask-image: var(--pause-symbol);\r\n\tmask-repeat: no-repeat;\r\n\tmask-position: center;\r\n}\r\n.beepboxEditor button.recordButton::before {\r\n\tcontent: \"\";\r\n\tflex-shrink: 0;\r\n\tposition: absolute;\r\n\tleft: 0;\r\n\ttop: 50%;\r\n\ttransform: translateY(-50%);\r\n\tpointer-events: none;\r\n\twidth: var(--button-size);\r\n\theight: var(--button-size);\r\n\tbackground: currentColor;\r\n\t-webkit-mask-image: var(--record-symbol);\r\n\t-webkit-mask-repeat: no-repeat;\r\n\t-webkit-mask-position: center;\r\n\tmask-image: var(--record-symbol);\r\n\tmask-repeat: no-repeat;\r\n\tmask-position: center;\r\n}\r\n.beepboxEditor button.stopButton::before {\r\n\tcontent: \"\";\r\n\tflex-shrink: 0;\r\n\tposition: absolute;\r\n\tleft: 0;\r\n\ttop: 50%;\r\n\ttransform: translateY(-50%);\r\n\tpointer-events: none;\r\n\twidth: var(--button-size);\r\n\theight: var(--button-size);\r\n\tbackground: currentColor;\r\n\t-webkit-mask-image: var(--stop-symbol);\r\n\t-webkit-mask-repeat: no-repeat;\r\n\t-webkit-mask-position: center;\r\n\tmask-image: var(--stop-symbol);\r\n\tmask-repeat: no-repeat;\r\n\tmask-position: center;\r\n}\r\n\r\n.beepboxEditor button.prevBarButton::before {\r\n\tcontent: \"\";\r\n\tflex-shrink: 0;\r\n\tposition: absolute;\r\n\tleft: 50%;\r\n\ttop: 50%;\r\n\ttransform: translate(-50%, -50%);\r\n\tpointer-events: none;\r\n\twidth: var(--button-size);\r\n\theight: var(--button-size);\r\n\tbackground: currentColor;\r\n\t-webkit-mask-image: var(--prev-bar-symbol);\r\n\t-webkit-mask-repeat: no-repeat;\r\n\t-webkit-mask-position: center;\r\n\tmask-image: var(--prev-bar-symbol);\r\n\tmask-repeat: no-repeat;\r\n\tmask-position: center;\r\n}\r\n\r\n.beepboxEditor button.nextBarButton::before {\r\n\tcontent: \"\";\r\n\tflex-shrink: 0;\r\n\tposition: absolute;\r\n\tleft: 50%;\r\n\ttop: 50%;\r\n\ttransform: translate(-50%, -50%);\r\n\tpointer-events: none;\r\n\twidth: var(--button-size);\r\n\theight: var(--button-size);\r\n\tbackground: currentColor;\r\n\t-webkit-mask-image: var(--next-bar-symbol);\r\n\t-webkit-mask-repeat: no-repeat;\r\n\t-webkit-mask-position: center;\r\n\tmask-image: var(--next-bar-symbol);\r\n\tmask-repeat: no-repeat;\r\n\tmask-position: center;\r\n}\r\n\r\n.beepboxEditor button.playButton, .beepboxEditor button.pauseButton, .beepboxEditor button.recordButton, .beepboxEditor button.stopButton, .beepboxEditor button.okayButton, .beepboxEditor button.exportButton {\r\n\tpadding-left: var(--button-size);\r\n}\r\n.beepboxEditor button.playButton, .beepboxEditor button.pauseButton, .beepboxEditor button.recordButton {\r\n\tgrid-column-start: 1;\r\n\tgrid-column-end: 3;\r\n}\r\n.beepboxEditor button.stopButton {\r\n\tgrid-column-start: 1;\r\n\tgrid-column-end: 5;\r\n}\r\n.beepboxEditor button.prevBarButton {\r\n\tgrid-column-start: 3;\r\n\tgrid-column-end: 4;\r\n}\r\n.beepboxEditor button.nextBarButton {\r\n\tgrid-column-start: 4;\r\n\tgrid-column-end: 5;\r\n}\r\n\r\n.beepboxEditor button.playButton.shrunk, .beepboxEditor button.recordButton.shrunk {\r\n\tpadding: 0;\r\n}\r\n.beepboxEditor button.playButton.shrunk::before, .beepboxEditor button.recordButton.shrunk::before {\r\n\tleft: 50%;\r\n\ttop: 50%;\r\n\ttransform: translate(-50%, -50%);\r\n}\r\n.beepboxEditor button.playButton.shrunk span, .beepboxEditor button.recordButton.shrunk span {\r\n\tdisplay: none;\r\n}\r\n.beepboxEditor button.playButton.shrunk {\r\n\tgrid-column-start: 1;\r\n\tgrid-column-end: 2;\r\n}\r\n.beepboxEditor button.recordButton.shrunk {\r\n\tgrid-column-start: 2;\r\n\tgrid-column-end: 3;\r\n}\r\n\r\n.beepboxEditor button.cancelButton::before {\r\n\tcontent: \"\";\r\n\tposition: absolute;\r\n\twidth: var(--button-size);\r\n\theight: var(--button-size);\r\n\tleft: 0;\r\n\ttop: 0;\r\n\tpointer-events: none;\r\n\tbackground: currentColor;\r\n\tmask-image: var(--close-symbol);\r\n\tmask-repeat: no-repeat;\r\n\tmask-position: center;\r\n\t-webkit-mask-image: var(--close-symbol);\r\n\t-webkit-mask-repeat: no-repeat;\r\n\t-webkit-mask-position: center;\r\n}\r\n\r\n.beepboxEditor button.okayButton::before {\r\n\tcontent: \"\";\r\n\tposition: absolute;\r\n\twidth: var(--button-size);\r\n\theight: var(--button-size);\r\n\tleft: 0;\r\n\ttop: 0;\r\n\tpointer-events: none;\r\n\tbackground: currentColor;\r\n\t-webkit-mask-image: var(--checkmark-symbol);\r\n\t-webkit-mask-repeat: no-repeat;\r\n\t-webkit-mask-position: center;\r\n\tmask-image: var(--checkmark-symbol);\r\n\tmask-repeat: no-repeat;\r\n\tmask-position: center;\r\n}\r\n\r\n.beepboxEditor button.exportButton::before {\r\n\tcontent: \"\";\r\n\tposition: absolute;\r\n\twidth: var(--button-size);\r\n\theight: var(--button-size);\r\n\tleft: 0;\r\n\ttop: 0;\r\n\tpointer-events: none;\r\n\tbackground: currentColor;\r\n\tmask-image: var(--export-symbol);\r\n\tmask-repeat: no-repeat;\r\n\tmask-position: center;\r\n\t-webkit-mask-image: var(--export-symbol);\r\n\t-webkit-mask-repeat: no-repeat;\r\n\t-webkit-mask-position: center;\r\n}\r\n\r\n.beepboxEditor .instrument-bar {\r\n\tdisplay: flex;\r\n\tgap: 2px;\r\n}\r\n\r\n.beepboxEditor .instrument-bar button {\r\n\tflex-grow: 1;\r\n\tmin-width: 0;\r\n\tpadding: 0;\r\n\tflex-basis: 0;\r\n\tdisplay: flex;\r\n\talign-items: center;\r\n\tjustify-content: center;\r\n\tcolor: var(--text-color-lit);\r\n}\r\n\r\n.beepboxEditor .instrument-bar .remove-instrument, .beepboxEditor .instrument-bar .add-instrument {\r\n\tmax-width: var(--button-size);\r\n}\r\n\r\n.beepboxEditor .instrument-bar > :not(:first-child) {\r\n\tborder-top-left-radius: 0;\r\n\tborder-bottom-left-radius: 0;\r\n}\r\n\r\n.beepboxEditor .instrument-bar > :not(.last-button) {\r\n\tborder-top-right-radius: 0;\r\n\tborder-bottom-right-radius: 0;\r\n\tborder-bottom: inset;\r\n\tborder-color: var(--background-color-dim);\r\n}\r\n\r\n.beepboxEditor .instrument-bar .selected-instrument {\r\n\tbackground: var(--background-color-lit);\r\n\tcolor: ${ColorConfig.invertedText};\r\n}\r\n\r\n.beepboxEditor .instrument-bar .deactivated {\r\n\tbackground: ${ColorConfig.editorBackground};\r\n\tcolor: var(--text-color-dim);\r\n\tborder-bottom: unset;\r\n}\r\n\r\n.beepboxEditor .instrument-bar .deactivated.selected-instrument {\r\n\tbackground: var(--background-color-dim);\r\n\tcolor: ${ColorConfig.invertedText};\r\n}\r\n\r\n.beepboxEditor .instrument-bar .remove-instrument {\r\n\tborder-bottom: unset;\r\n}\r\n\r\n.beepboxEditor .instrument-bar .remove-instrument::before {\r\n\tcontent: \"\";\r\n\tposition: absolute;\r\n\twidth: 100%;\r\n\theight: var(--button-size);\r\n\tleft: 0;\r\n\ttop: 0;\r\n\tpointer-events: none;\r\n\tbackground: currentColor;\r\n\tmask-image: var(--close-symbol);\r\n\tmask-repeat: no-repeat;\r\n\tmask-position: center;\r\n\t-webkit-mask-image: var(--close-symbol);\r\n\t-webkit-mask-repeat: no-repeat;\r\n\t-webkit-mask-position: center;\r\n}\r\n\r\n.beepboxEditor .instrument-bar .add-instrument {\r\n\tborder-bottom: unset;\r\n}\r\n\r\n.beepboxEditor .instrument-bar .no-underline {\r\n\tborder-bottom: unset;\r\n}\r\n\r\n.beepboxEditor .instrument-bar .add-instrument::before {\r\n\tcontent: \"\";\r\n\tposition: absolute;\r\n\twidth: 100%;\r\n\theight: var(--button-size);\r\n\tleft: 0;\r\n\ttop: 0;\r\n\tpointer-events: none;\r\n\tbackground: currentColor;\r\n\tmask-image: var(--add-symbol);\r\n\tmask-repeat: no-repeat;\r\n\tmask-position: center;\r\n\t-webkit-mask-image: var(--add-symbol);\r\n\t-webkit-mask-repeat: no-repeat;\r\n\t-webkit-mask-position: center;\r\n}\r\n\r\n.beepboxEditor canvas {\r\n\toverflow: hidden;\r\n\tposition: absolute;\r\n\tdisplay: block;\r\n  cursor: crosshair;\r\n}\r\n\r\n@keyframes dash-animation {\r\n  to {\r\n    stroke-dashoffset: -100;\r\n  }\r\n}\r\n\r\n.beepboxEditor .dash-move {\r\n  animation: dash-animation 20s infinite linear;\r\n}\r\n\r\n.beepboxEditor .trackContainer {\r\n\tflex-grow: 1;\r\n}\r\n\r\n.beepboxEditor .trackAndMuteContainer {\r\n\tdisplay: flex;\r\n\talign-items: flex-start;\r\n\twidth: 100%;\r\n\tmin-height: 0;\r\n\tflex: 1;\r\n\toverflow-x: hidden;\r\n\tposition: relative;\r\n}\r\n\r\n.beepboxEditor .muteEditor {\r\n\twidth: 32px;\r\n\tflex-shrink: 0;\r\n\tdisplay: flex;\r\n\tflex-direction: column;\r\n\talign-items: stretch;\r\n\tposition: sticky;\r\n\tleft: 0;\r\n\tz-index: 1;\r\n\tbackground: ${ColorConfig.editorBackground};\r\n}\r\n\r\n.beepboxEditor .selectRow, .beepboxEditor .instrumentCopyPasteRow {\r\n\tmargin: 2px 0;\r\n\theight: var(--button-size);\r\n\tdisplay: flex;\r\n\tflex-direction: row;\r\n\talign-items: center;\r\n\tjustify-content: space-between;\r\n}\r\n\r\n.beepboxEditor .selectRow > :last-child {\r\n\twidth: 62.5%;\r\n\tflex-shrink: 0;\r\n}\r\n\r\n.beepboxEditor .menu-area {\r\n\tdisplay: flex;\r\n\tflex-direction: column;\r\n}\r\n.beepboxEditor .menu-area > * {\r\n\tmargin: 2px 0;\r\n}\r\n.beepboxEditor .menu-area > button {\r\n\tpadding: 0 var(--button-size);\r\n\twhite-space: nowrap;\r\n}\r\n\r\n.beepboxEditor .song-settings-area {\r\n\tdisplay: flex;\r\n\tflex-direction: column;\r\n}\r\n\r\n.beepboxEditor .editor-controls {\r\n\tflex-shrink: 0;\r\n\tdisplay: flex;\r\n\tflex-direction: column;\r\n}\r\n\r\n.beepboxEditor .instrument-settings-area {\r\n\tdisplay: flex;\r\n\tflex-direction: column;\r\n}\r\n\r\n.beepboxEditor .editor-right-side-top > *, .beepboxEditor .editor-right-side-bottom > * {\r\n\tflex-shrink: 0;\r\n}\r\n\r\n.beepboxEditor .pitchShiftMarkerContainer {\r\n\tbox-sizing: border-box;\r\n\tdisplay: flex;\r\n\theight: 100%;\r\n\tleft: 3px;\r\n\tright: 3px;\r\n\tposition: absolute;\r\n\talign-items: center;\r\n\tpointer-events: none;\r\n}\r\n\r\n.beepboxEditor .pitchShiftMarker {\r\n\twidth: 0;\r\n\theight: 0;\r\n\tposition: absolute;\r\n}\r\n\r\n.beepboxEditor .pitchShiftMarker::before {\r\n\tcontent: \"\";\r\n\twidth: 2px;\r\n\theight: 20px;\r\n\ttransform: translate(-50%, -50%);\r\n\tposition: absolute;\r\n\tbackground: currentColor;\r\n\tborder-radius: 3px;\r\n}\r\n\r\n.beepboxEditor input[type=text], .beepboxEditor input[type=number] {\r\n\tfont-size: inherit;\r\n\tfont-weight: inherit;\r\n\tfont-family: inherit;\r\n\tbackground: transparent;\r\n\ttext-align: center;\r\n\tborder: 1px solid ${ColorConfig.inputBoxOutline};\r\n\tcolor: ${ColorConfig.primaryText};\r\n}\r\n\r\n.beepboxEditor input[type=text]::selection, .beepboxEditor input[type=number]::selection {\r\n\tbackground-color: ${ColorConfig.textSelection};\r\n\tcolor: ${ColorConfig.primaryText};\r\n}\r\n\r\n.beepboxEditor input[type=checkbox] {\r\n  transform: scale(1.5);\r\n}\r\n\r\n.beepboxEditor input[type=range] {\r\n\t-webkit-appearance: none;\r\n\tcolor: inherit;\r\n\twidth: 100%;\r\n\theight: var(--button-size);\r\n\tfont-size: inherit;\r\n\tmargin: 0;\r\n\tcursor: pointer;\r\n\tbackground: none;\r\n\ttouch-action: pan-y;\r\n  position: relative;\r\n}\r\n.beepboxEditor input[type=range]:focus {\r\n\toutline: none;\r\n}\r\n.beepboxEditor input[type=range]::-webkit-slider-runnable-track {\r\n\twidth: 100%;\r\n\theight: 6px;\r\n\tcursor: pointer;\r\n\tbackground: ${ColorConfig.uiWidgetBackground};\r\n}\r\n\r\n.modTarget:hover {\r\n\tfill: ${ColorConfig.hoverPreview} !important;\r\n}\r\n\r\n.beepboxEditor span.midTick:after {\r\n    content: \"\";\r\n    display:inline-block;\r\n    position: absolute;\r\n    background: currentColor;\r\n    width: 2%;\r\n    left: 49%;\r\n    height: 0.5em;\r\n    top: 32%;\r\n    z-index: 1;\r\n\t\tpointer-events: none;\r\n}\r\n.beepboxEditor span.modSlider {\r\n\t--mod-position: 20%;\r\n\t--mod-color: ${ColorConfig.overwritingModSlider};\r\n  --mod-border-radius: 0%;\r\n}\r\n.beepboxEditor span.modSlider:before {\r\n\tcontent: \"\";\r\n    display:inline-block;\r\n    position: absolute;\r\n    background: var(--mod-color);\r\n    width: 4%;\r\n    left: var(--mod-position);\r\n    height: 0.8em;\r\n    top: 28%;\r\n    z-index: 2;\r\n\t\ttransform: translate(-50%, 0%);\r\n\t\tpointer-events: none;\r\n\t\tborder: 40%;\r\n\t\tborder-radius: var(--mod-border-radius);\r\n}\r\n.beepboxEditor input[type=range]::-webkit-slider-thumb {\r\n\theight: var(--button-size);\r\n\twidth: 6px;\r\n\tborder-radius: 3px;\r\n\tbackground: currentColor;\r\n\tcursor: pointer;\r\n\t-webkit-appearance: none;\r\n\tmargin-top: -10px;\r\n}\r\n.beepboxEditor input[type=range]:focus::-webkit-slider-runnable-track {\r\n\tbackground: ${ColorConfig.uiWidgetFocus};\r\n}\r\n.beepboxEditor input[type=range]::-moz-range-track {\r\n\twidth: 100%;\r\n\theight: 6px;\r\n\tcursor: pointer;\r\n\tbackground: ${ColorConfig.uiWidgetBackground};\r\n}\r\n.beepboxEditor input[type=range]:focus::-moz-range-track {\r\n\tbackground: ${ColorConfig.uiWidgetFocus};\r\n}\r\n.beepboxEditor input[type=range]::-moz-range-thumb {\r\n\theight: var(--button-size);\r\n\twidth: 6px;\r\n\tborder-radius: 3px;\r\n\tborder: none;\r\n\tbackground: currentColor;\r\n\tcursor: pointer;\r\n}\r\n.beepboxEditor input[type=range]::-ms-track {\r\n\twidth: 100%;\r\n\theight: 6px;\r\n\tcursor: pointer;\r\n\tbackground: ${ColorConfig.uiWidgetBackground};\r\n\tborder-color: transparent;\r\n}\r\n.beepboxEditor input[type=range]:focus::-ms-track {\r\n\tbackground: ${ColorConfig.uiWidgetFocus};\r\n}\r\n.beepboxEditor input[type=range]::-ms-thumb {\r\n\theight: var(--button-size);\r\n\twidth: 6px;\r\n\tborder-radius: 3px;\r\n\tbackground: currentColor;\r\n\tcursor: pointer;\r\n}\r\n\r\nli.select2-results__option[role=group] > strong:hover {\r\n  background-color: #516fbb;\r\n}\r\n\r\n/* wide screen */\r\n@media (min-width: 711px) {\r\n\t#beepboxEditorContainer {\r\n\t\tbackground-image: url(${getLocalStorageItem(\"customTheme2\", \"\")});\r\n\t\tdisplay: table;\r\n\t}\r\n\t.beepboxEditor {\r\n\t\tflex-direction: row;\r\n\t}\r\n\t.beepboxEditor:focus-within {\r\n\t\toutline: 3px solid ${ColorConfig.uiWidgetBackground};\r\n\t}\r\n\t.beepboxEditor .trackAndMuteContainer {\r\n\t\twidth: 512px;\r\n\t}\r\n\t.beepboxEditor .trackSelectBox {\r\n\t\tdisplay: none;\r\n\t}\r\n    .beepboxEditor .muteButtonSelectBox {\r\n\t\tdisplay: none;\r\n\t}\r\n\t.beepboxEditor .play-pause-area {\r\n\t\tdisplay: flex;\r\n\t\tflex-direction: column;\r\n\t}\r\n\t.beepboxEditor .playback-bar-controls {\r\n\t\tmargin: 2px 0;\r\n\t}\r\n\t.beepboxEditor .playback-volume-controls {\r\n\t\tdisplay: flex;\r\n\t\tflex-direction: row;\r\n\t\tmargin: 2px 0;\r\n\t\talign-items: center;\r\n\t}\r\n\t.beepboxEditor .settings-area {\r\n\t\twidth: var(--settings-area-width);\r\n\t}\r\n}\r\n\r\n/* narrow screen */\r\n@media (max-width: 710px) {\r\n\t.beepboxEditor {\r\n\t\tgrid-template-columns: minmax(0, 1fr);\r\n\t\tgrid-template-rows: min-content 6px min-content min-content;\r\n\t\tgrid-template-areas: \"pattern-area\" \".\" \"track-area\" \"settings-area\";\r\n\t\tgrid-row-gap: 0;\r\n\t}\r\n\t.beepboxEditor .settings-area {\r\n\t\tgrid-template-columns: minmax(0, 1fr) minmax(0, 1fr);\r\n\t\tgrid-template-rows: min-content min-content 1fr min-content;\r\n\t\tgrid-template-areas:\r\n\t\t\t\"play-pause-area play-pause-area\"\r\n\t\t\t\"menu-area instrument-settings-area\"\r\n\t\t\t\"song-settings-area instrument-settings-area\"\r\n\t\t\t\"version-area version-area\";\r\n\t\tgrid-column-gap: 8px;\r\n\t\tmargin: 0 4px;\r\n\t}\r\n\t.beepboxEditor:focus-within {\r\n\t\toutline: none;\r\n\t}\r\n\t.beepboxEditor .pattern-area {\r\n\t\tmax-height: 75vh;\r\n\t}\r\n\t.beepboxEditor .trackAndMuteContainer {\r\n\t\toverflow-x: auto;\r\n\t}\r\n\t.beepboxEditor .barScrollBar {\r\n\t\tdisplay: none;\r\n\t}\r\n\t.beepboxEditor .play-pause-area {\r\n\t\tdisplay: grid;\r\n\t\tgrid-template-columns: minmax(0, 1fr) minmax(0, 1fr);\r\n\t\tgrid-column-gap: 8px;\r\n\t\tmargin: 2px 0;\r\n\t}\r\n\t.beepboxEditor .playback-bar-controls {\r\n\t\tflex-grow: 1;\r\n\t}\r\n\t.beepboxEditor .playback-volume-controls {\r\n\t\tdisplay: flex;\r\n\t\tflex-direction: row;\r\n\t\talign-items: center;\r\n\t\tflex-grow: 1;\r\n\t}\r\n\t\r\n\t.beepboxEditor .soundIcon {\r\n\t  background: ${ColorConfig.editorBackground};\r\n\t  display: inline-block;\r\n\t  height: 10px;\r\n\t  margin-left: 0px;\r\n\t  margin-top: 8px;\r\n\t\tposition: relative;\r\n\t\twidth: 10px;\r\n\t}\r\n\t.beepboxEditor .soundIcon:before {\r\n\t  border-bottom: 6px solid transparent;\r\n\t  border-top: 6px solid transparent;\r\n\t  border-right: 10px solid ${ColorConfig.editorBackground};\r\n\t  content: \"\";\r\n\t  height: 10px;\r\n\t  left: 6px;\r\n\t  position: absolute;\r\n\t  top: -6px;\r\n\t  width: 0;\r\n\t}\r\n}\r\n\r\n`));\r\n","// Copyright (c) 2012-2022 John Nesky and contributing authors, distributed under the MIT license, see accompanying the LICENSE.md file.\r\n\r\n\r\nimport { SongDocument } from \"./SongDocument\";\r\nimport { HTML, SVG } from \"imperative-html/dist/esm/elements-strict\";\r\nimport { ColorConfig } from \"./ColorConfig\";\r\n\r\nexport class BarScrollBar {\r\n\tprivate readonly _editorWidth: number = 512;\r\n\tprivate readonly _editorHeight: number = 20;\r\n\tprivate readonly _playhead: SVGRectElement = SVG.rect(\"rect\", { fill: ColorConfig.playhead, x: 0, y: 0, width: 2, height: this._editorHeight });\r\n\t\tprivate readonly _notches: SVGSVGElement = SVG.svg({\"pointer-events\": \"none\"});\r\n\t\tprivate readonly _handle: SVGRectElement = SVG.rect({fill: ColorConfig.uiWidgetBackground, x: 0, y: 2, width: 10, height: this._editorHeight - 4});\r\n\t\tprivate readonly _handleHighlight: SVGRectElement = SVG.rect({fill: \"none\", stroke: ColorConfig.hoverPreview, \"stroke-width\": 2, \"pointer-events\": \"none\", x: 0, y: 1, width: 10, height: this._editorHeight - 2});\r\n\t\tprivate readonly _leftHighlight: SVGPathElement = SVG.path({fill: ColorConfig.hoverPreview, \"pointer-events\": \"none\"});\r\n\t\tprivate readonly _rightHighlight: SVGPathElement = SVG.path({fill: ColorConfig.hoverPreview, \"pointer-events\": \"none\"});\r\n\tprivate _renderedPlayhead: number = -1;\r\n\t\t\r\n\t\tprivate readonly _svg: SVGSVGElement = SVG.svg({style: `background-color: ${ColorConfig.editorBackground}; touch-action: pan-y; position: absolute;`, width: this._editorWidth, height: this._editorHeight},\r\n\t\tthis._notches,\r\n\t\tthis._handle,\r\n\t\tthis._handleHighlight,\r\n\t\tthis._leftHighlight,\r\n\t\tthis._rightHighlight,\r\n\t\tthis._playhead,\r\n\t);\r\n\t\t\r\n\t\tpublic readonly container: HTMLElement = HTML.div({class: \"barScrollBar\", style: \"width: 512px; height: 20px; overflow: hidden; position: relative;\"}, this._svg);\r\n\t\t\r\n\tprivate _mouseX: number = 0;\r\n\tprivate _mouseDown: boolean = false;\r\n\tprivate _mouseOver: boolean = false;\r\n\tprivate _dragging: boolean = false;\r\n\tprivate _dragStart: number;\r\n\tprivate _notchSpace: number;\r\n\tprivate _renderedNotchCount: number = -1;\r\n\tprivate _renderedScrollBarPos: number = -1;\r\n\t\r\n\tconstructor(private _doc: SongDocument, private _trackContainer: HTMLDivElement) {\r\n\t\tconst center: number = this._editorHeight * 0.5;\r\n\t\tconst base: number = 20;\r\n\t\tconst tip: number = 9;\r\n\t\tconst arrowHeight: number = 6;\r\n\t\tthis._leftHighlight.setAttribute(\"d\", `M ${tip} ${center} L ${base} ${center + arrowHeight} L ${base} ${center - arrowHeight} z`);\r\n\t\tthis._rightHighlight.setAttribute(\"d\", `M ${this._editorWidth - tip} ${center} L ${this._editorWidth - base} ${center + arrowHeight} L ${this._editorWidth - base} ${center - arrowHeight} z`);\r\n\t\t\t\r\n\t\tthis.container.addEventListener(\"mousedown\", this._whenMousePressed);\r\n\t\tdocument.addEventListener(\"mousemove\", this._whenMouseMoved);\r\n\t\tdocument.addEventListener(\"mouseup\", this._whenCursorReleased);\r\n\t\tthis.container.addEventListener(\"mouseover\", this._whenMouseOver);\r\n\t\tthis.container.addEventListener(\"mouseout\", this._whenMouseOut);\r\n\t\t\t\r\n\t\tthis.container.addEventListener(\"touchstart\", this._whenTouchPressed);\r\n\t\tthis.container.addEventListener(\"touchmove\", this._whenTouchMoved);\r\n\t\tthis.container.addEventListener(\"touchend\", this._whenCursorReleased);\r\n\t\tthis.container.addEventListener(\"touchcancel\", this._whenCursorReleased);\r\n\t\t\t\r\n\t\t// Sorry, bypassing typescript type safety on this function because I want to use the new \"passive\" option.\r\n\t\t//this._trackContainer.addEventListener(\"scroll\", this._onScroll, {capture: false, passive: true});\r\n\t\t\t(<Function>this._trackContainer.addEventListener)(\"scroll\", this._onScroll, {capture: false, passive: true});\r\n\t}\r\n\r\n\tpublic animatePlayhead = (): void => {\r\n\t\tconst playhead = Math.min(512, Math.max(0, (this._notchSpace * this._doc.synth.playhead - 2)));\r\n\t\tif (this._renderedPlayhead != playhead) {\r\n\t\t\tthis._renderedPlayhead = playhead;\r\n\t\t\tthis._playhead.setAttribute(\"x\", \"\" + playhead);\r\n\t}\r\n\t}\r\n\t\t\r\n\tprivate _onScroll = (event: Event): void => {\r\n\t\tthis._doc.barScrollPos = (this._trackContainer.scrollLeft / this._doc.getBarWidth());\r\n\t\t//this._doc.notifier.changed();\r\n\t}\r\n\t\t\r\n\tprivate _whenMouseOver = (event: MouseEvent): void => {\r\n\t\tif (this._mouseOver) return;\r\n\t\tthis._mouseOver = true;\r\n\t\tthis._updatePreview();\r\n\t}\r\n\t\t\r\n\tprivate _whenMouseOut = (event: MouseEvent): void => {\r\n\t\tif (!this._mouseOver) return;\r\n\t\tthis._mouseOver = false;\r\n\t\tthis._updatePreview();\r\n\t}\r\n\t\t\r\n\tprivate _whenMousePressed = (event: MouseEvent): void => {\r\n\t\tevent.preventDefault();\r\n\t\tthis._mouseDown = true;\r\n\t\tconst boundingRect: ClientRect = this._svg.getBoundingClientRect();\r\n\t\tthis._mouseX = (event.clientX || event.pageX) - boundingRect.left;\r\n\t\t//this._mouseY = (event.clientY || event.pageY) - boundingRect.top;\r\n\t\tthis._updatePreview();\r\n\t\tif (this._mouseX >= this._doc.barScrollPos * this._notchSpace && this._mouseX <= (this._doc.barScrollPos + this._doc.trackVisibleBars) * this._notchSpace) {\r\n\t\t\tthis._dragging = true;\r\n\t\t\tthis._dragStart = this._mouseX;\r\n\t\t}\r\n\t}\r\n\t\t\r\n\tprivate _whenTouchPressed = (event: TouchEvent): void => {\r\n\t\tevent.preventDefault();\r\n\t\tthis._mouseDown = true;\r\n\t\tconst boundingRect: ClientRect = this._svg.getBoundingClientRect();\r\n\t\tthis._mouseX = event.touches[0].clientX - boundingRect.left;\r\n\t\t//this._mouseY = event.touches[0].clientY - boundingRect.top;\r\n\t\tthis._updatePreview();\r\n\t\tif (this._mouseX >= this._doc.barScrollPos * this._notchSpace && this._mouseX <= (this._doc.barScrollPos + this._doc.trackVisibleBars) * this._notchSpace) {\r\n\t\t\tthis._dragging = true;\r\n\t\t\tthis._dragStart = this._mouseX;\r\n\t\t}\r\n\t}\r\n\t\t\r\n\tprivate _whenMouseMoved = (event: MouseEvent): void => {\r\n\t\tconst boundingRect: ClientRect = this._svg.getBoundingClientRect();\r\n\t\tthis._mouseX = (event.clientX || event.pageX) - boundingRect.left;\r\n\t\t//this._mouseY = (event.clientY || event.pageY) - boundingRect.top;\r\n\t\tthis._whenCursorMoved();\r\n\t}\r\n\t\t\r\n\tprivate _whenTouchMoved = (event: TouchEvent): void => {\r\n\t\tif (!this._mouseDown) return;\r\n\t\tevent.preventDefault();\r\n\t\tconst boundingRect: ClientRect = this._svg.getBoundingClientRect();\r\n\t\tthis._mouseX = event.touches[0].clientX - boundingRect.left;\r\n\t\t//this._mouseY = event.touches[0].clientY - boundingRect.top;\r\n\t\tthis._whenCursorMoved();\r\n\t}\r\n\t\t\r\n\tprivate _whenCursorMoved(): void {\r\n\t\tif (this._dragging) {\r\n\t\t\twhile (this._mouseX - this._dragStart < -this._notchSpace * 0.5) {\r\n\t\t\t\tif (this._doc.barScrollPos > 0) {\r\n\t\t\t\t\tthis._doc.barScrollPos--;\r\n\t\t\t\t\tthis._dragStart -= this._notchSpace;\r\n\t\t\t\t\tthis._doc.notifier.changed();\r\n\t\t\t\t} else {\r\n\t\t\t\t\tbreak;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\twhile (this._mouseX - this._dragStart > this._notchSpace * 0.5) {\r\n\t\t\t\tif (this._doc.barScrollPos < this._doc.song.barCount - this._doc.trackVisibleBars) {\r\n\t\t\t\t\tthis._doc.barScrollPos++;\r\n\t\t\t\t\tthis._dragStart += this._notchSpace;\r\n\t\t\t\t\tthis._doc.notifier.changed();\r\n\t\t\t\t} else {\r\n\t\t\t\t\tbreak;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\t\tif (this._mouseOver) this._updatePreview();\r\n\t}\r\n\t\t\r\n\tpublic changePos(offset: number) {\r\n\t\twhile (Math.abs(offset) >= 1) {\r\n\r\n\t\t\tif (offset < 0) {\r\n\t\t\t\tif (this._doc.barScrollPos > 0) {\r\n\t\t\t\t\tthis._doc.barScrollPos--;\r\n\t\t\t\t\tthis._dragStart += this._notchSpace;\r\n\t\t\t\t\tthis._doc.notifier.changed();\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\telse {\r\n\t\t\t\tif (this._doc.barScrollPos < this._doc.song.barCount - this._doc.trackVisibleBars) {\r\n\t\t\t\t\tthis._doc.barScrollPos++;\r\n\t\t\t\t\tthis._dragStart += this._notchSpace;\r\n\t\t\t\t\tthis._doc.notifier.changed();\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\toffset += (offset > 0) ? -1 : 1;\r\n\r\n\t\t}\r\n\t}\r\n\r\n\tprivate _whenCursorReleased = (event: Event): void => {\r\n\t\tif (!this._dragging && this._mouseDown) {\r\n\t\t\tif (this._mouseX < (this._doc.barScrollPos + 8) * this._notchSpace) {\r\n\t\t\t\tif (this._doc.barScrollPos > 0) this._doc.barScrollPos--;\r\n\t\t\t\tthis._doc.notifier.changed();\r\n\t\t\t} else {\r\n\t\t\t\tif (this._doc.barScrollPos < this._doc.song.barCount - this._doc.trackVisibleBars) this._doc.barScrollPos++;\r\n\t\t\t\tthis._doc.notifier.changed();\r\n\t\t\t}\r\n\t\t}\r\n\t\tthis._mouseDown = false;\r\n\t\tthis._dragging = false;\r\n\t\tthis._updatePreview();\r\n\t}\r\n\t\t\r\n\tprivate _updatePreview(): void {\r\n\t\tconst showHighlight: boolean = this._mouseOver && !this._mouseDown;\r\n\t\tlet showleftHighlight: boolean = false;\r\n\t\tlet showRightHighlight: boolean = false;\r\n\t\tlet showHandleHighlight: boolean = false;\r\n\t\t\t\r\n\t\tif (showHighlight) {\r\n\t\t\tif (this._mouseX < this._doc.barScrollPos * this._notchSpace) {\r\n\t\t\t\tshowleftHighlight = true;\r\n\t\t\t} else if (this._mouseX > (this._doc.barScrollPos + this._doc.trackVisibleBars) * this._notchSpace) {\r\n\t\t\t\tshowRightHighlight = true;\r\n\t\t\t} else {\r\n\t\t\t\tshowHandleHighlight = true;\r\n\t\t\t}\r\n\t\t}\r\n\t\t\t\r\n\t\tthis._leftHighlight.style.visibility = showleftHighlight ? \"visible\" : \"hidden\";\r\n\t\tthis._rightHighlight.style.visibility = showRightHighlight ? \"visible\" : \"hidden\";\r\n\t\tthis._handleHighlight.style.visibility = showHandleHighlight ? \"visible\" : \"hidden\";\r\n\t}\r\n\t\t\r\n\tpublic render(): void {\r\n\t\t\tthis._notchSpace = (this._editorWidth-1) / Math.max(this._doc.trackVisibleBars, this._doc.song.barCount);\r\n\t\t\t\r\n\t\tconst resized: boolean = this._renderedNotchCount != this._doc.song.barCount;\r\n\t\tif (resized) {\r\n\t\t\tthis._renderedNotchCount = this._doc.song.barCount;\r\n\t\t\t\t\r\n\t\t\twhile (this._notches.firstChild) this._notches.removeChild(this._notches.firstChild);\r\n\t\t\t\t\r\n\t\t\tfor (let i: number = 0; i <= this._doc.song.barCount; i++) {\r\n\t\t\t\tconst lineHeight: number = (i % 16 == 0) ? 0 : ((i % 4 == 0) ? this._editorHeight / 8 : this._editorHeight / 3);\r\n\t\t\t\t\tthis._notches.appendChild(SVG.rect({fill: ColorConfig.uiWidgetBackground, x: i * this._notchSpace - 1, y: lineHeight, width: 2, height: this._editorHeight - lineHeight * 2}));\r\n\t\t\t}\r\n\t\t}\r\n\t\t\r\n\t\tthis._doc.barScrollPos     = Math.max(0, Math.min(this._doc.song.barCount          - this._doc.trackVisibleBars,     this._doc.barScrollPos));\r\n\t\tthis._doc.channelScrollPos = Math.max(0, Math.min(this._doc.song.getChannelCount() - this._doc.trackVisibleChannels, this._doc.channelScrollPos));\r\n\t\t\r\n\t\tif (resized || this._renderedScrollBarPos != this._doc.barScrollPos) {\r\n\t\t\tthis._renderedScrollBarPos = this._doc.barScrollPos;\r\n\t\t\tthis._handle.setAttribute(\"x\", String(this._notchSpace * this._doc.barScrollPos));\r\n\t\t\tthis._handle.setAttribute(\"width\", String(this._notchSpace * this._doc.trackVisibleBars));\r\n\t\t\tthis._handleHighlight.setAttribute(\"x\", String(this._notchSpace * this._doc.barScrollPos));\r\n\t\t\tthis._handleHighlight.setAttribute(\"width\", String(this._notchSpace * this._doc.trackVisibleBars));\r\n\t\t}\r\n\t\t\t\r\n\t\tthis._updatePreview();\r\n\t\t\t\r\n\t\tthis._trackContainer.scrollLeft = this._doc.barScrollPos * this._doc.getBarWidth();\r\n\t\tthis._trackContainer.scrollTop = this._doc.channelScrollPos * this._doc.getChannelHeight();\r\n\t}\r\n}\r\n","// Copyright (c) 2012-2022 John Nesky and contributing authors, distributed under the MIT license, see accompanying the LICENSE.md file.\r\n\r\n// interface shared by number[], Float32Array, and other typed arrays in JavaScript.\r\ninterface NumberArray {\r\n\tlength: number;\r\n\t[index: number]: number;\r\n}\r\n\r\n// A basic FFT operation scales the overall magnitude of elements by the\r\n// square root of the length of the array, √N. Performing a forward FFT and\r\n// then an inverse FFT results in the original array, but multiplied by N.\r\n// This helper function can be used to compensate for that. \r\nexport function scaleElementsByFactor(array: NumberArray, factor: number): void {\r\n\tfor (let i: number = 0; i < array.length; i++) {\r\n\t\tarray[i] *= factor;\r\n\t}\r\n}\r\n\r\nfunction isPowerOf2(n: number): boolean {\r\n\treturn !!n && !(n & (n - 1));\r\n}\r\n\r\nfunction countBits(n: number): number {\r\n\tif (!isPowerOf2(n)) throw new Error(\"FFT array length must be a power of 2.\");\r\n\treturn Math.round(Math.log(n) / Math.log(2));\r\n}\r\n\r\n// Rearranges the elements of the array, swapping the element at an index\r\n// with an element at an index that is the bitwise reverse of the first\r\n// index in base 2. Useful for computing the FFT.\r\nfunction reverseIndexBits(array: NumberArray, fullArrayLength: number): void {\r\n\tconst bitCount: number = countBits(fullArrayLength);\r\n\tif (bitCount > 16) throw new Error(\"FFT array length must not be greater than 2^16.\");\r\n\tconst finalShift: number = 16 - bitCount;\r\n\tfor (let i: number = 0; i < fullArrayLength; i++) {\r\n\t\t// Dear Javascript: Please support bit order reversal intrinsics. Thanks! :D\r\n\t\tlet j: number;\r\n\t\tj = ((i & 0xaaaa) >> 1) | ((i & 0x5555) << 1);\r\n\t\tj = ((j & 0xcccc) >> 2) | ((j & 0x3333) << 2);\r\n\t\tj = ((j & 0xf0f0) >> 4) | ((j & 0x0f0f) << 4);\r\n\t\t\tj = ((j           >> 8) | ((j &   0xff) << 8)) >> finalShift;\r\n\t\tif (j > i) {\r\n\t\t\tlet temp: number = array[i];\r\n\t\t\tarray[i] = array[j];\r\n\t\t\tarray[j] = temp;\r\n\t\t}\r\n\t}\r\n}\r\n\r\n// Provided for educational purposes. Easier to read than\r\n// fastFourierTransform(), but computes the same result.\r\n// Takes two parallel arrays representing the real and imaginary elements,\r\n// respectively, and returns an array containing two new arrays, which\r\n// contain the complex result of the transform.\r\nexport function discreteFourierTransform(realArray: NumberArray, imagArray: NumberArray): number[][] {\r\n\tconst fullArrayLength: number = realArray.length;\r\n\tif (fullArrayLength != imagArray.length) throw new Error(\"FFT arrays must be the same length.\");\r\n\tconst realOut: number[] = [];\r\n\tconst imagOut: number[] = [];\r\n\tfor (let i: number = 0; i < fullArrayLength; i++) {\r\n\t\trealOut[i] = 0.0;\r\n\t\timagOut[i] = 0.0;\r\n\t\tfor (let j: number = 0; j < fullArrayLength; j++) {\r\n\t\t\tconst radians: number = -6.2831853 * j * i / fullArrayLength;\r\n\t\t\tconst c: number = Math.cos(radians);\r\n\t\t\tconst s: number = Math.sin(radians);\r\n\t\t\trealOut[i] += realArray[j] * c - imagArray[j] * s;\r\n\t\t\timagOut[i] += realArray[j] * s + imagArray[j] * c;\r\n\t\t}\r\n\t}\r\n\treturn [realOut, imagOut];\r\n}\r\n\r\n// Performs a Fourier transform in O(N log(N)) operations. Overwrites the\r\n// input real and imaginary arrays. Can be used for both forward and inverse\r\n// transforms: swap the order of the arguments for the inverse.\r\nexport function fastFourierTransform(realArray: NumberArray, imagArray: NumberArray): void {\r\n\tconst fullArrayLength: number = realArray.length;\r\n\tif (!isPowerOf2(fullArrayLength)) throw new Error(\"FFT array length must be a power of 2.\");\r\n\tif (fullArrayLength < 4) throw new Error(\"FFT array length must be at least 4.\");\r\n\tif (fullArrayLength != imagArray.length) throw new Error(\"FFT arrays must be the same length.\");\r\n\t\t\r\n\treverseIndexBits(realArray, fullArrayLength);\r\n\treverseIndexBits(imagArray, fullArrayLength);\r\n\t\t\r\n\t// First two passes, with strides of 2 and 4, can be combined and optimized.\r\n\tfor (let startIndex: number = 0; startIndex < fullArrayLength; startIndex += 4) {\r\n\t\tconst startIndex1: number = startIndex + 1;\r\n\t\tconst startIndex2: number = startIndex + 2;\r\n\t\tconst startIndex3: number = startIndex + 3;\r\n\t\t\tconst real0: number = realArray[startIndex ];\r\n\t\tconst real1: number = realArray[startIndex1];\r\n\t\tconst real2: number = realArray[startIndex2];\r\n\t\tconst real3: number = realArray[startIndex3];\r\n\t\t\tconst imag0: number = imagArray[startIndex ];\r\n\t\tconst imag1: number = imagArray[startIndex1];\r\n\t\tconst imag2: number = imagArray[startIndex2];\r\n\t\tconst imag3: number = imagArray[startIndex3];\r\n\t\tconst realTemp0: number = real0 + real1;\r\n\t\tconst realTemp1: number = real0 - real1;\r\n\t\tconst realTemp2: number = real2 + real3;\r\n\t\tconst realTemp3: number = real2 - real3;\r\n\t\tconst imagTemp0: number = imag0 + imag1;\r\n\t\tconst imagTemp1: number = imag0 - imag1;\r\n\t\tconst imagTemp2: number = imag2 + imag3;\r\n\t\tconst imagTemp3: number = imag2 - imag3;\r\n\t\t\trealArray[startIndex ] = realTemp0 + realTemp2;\r\n\t\trealArray[startIndex1] = realTemp1 + imagTemp3;\r\n\t\trealArray[startIndex2] = realTemp0 - realTemp2;\r\n\t\trealArray[startIndex3] = realTemp1 - imagTemp3;\r\n\t\t\timagArray[startIndex ] = imagTemp0 + imagTemp2;\r\n\t\timagArray[startIndex1] = imagTemp1 - realTemp3;\r\n\t\timagArray[startIndex2] = imagTemp0 - imagTemp2;\r\n\t\timagArray[startIndex3] = imagTemp1 + realTemp3;\r\n\t}\r\n\t\t\r\n\tfor (let stride: number = 8; stride <= fullArrayLength; stride += stride) {\r\n\t\tconst halfLength: number = stride >>> 1;\r\n\t\tconst radiansIncrement: number = Math.PI * 2.0 / stride;\r\n\t\tconst cosIncrement: number = Math.cos(radiansIncrement);\r\n\t\tconst sinIncrement: number = Math.sin(radiansIncrement);\r\n\t\tconst oscillatorMultiplier: number = 2.0 * cosIncrement;\r\n\t\tfor (let startIndex: number = 0; startIndex < fullArrayLength; startIndex += stride) {\r\n\t\t\tlet c: number = 1.0;\r\n\t\t\tlet s: number = 0.0;\r\n\t\t\tlet cPrev: number = cosIncrement;\r\n\t\t\tlet sPrev: number = sinIncrement;\r\n\t\t\tconst secondHalf: number = startIndex + halfLength;\r\n\t\t\tfor (let i: number = startIndex; i < secondHalf; i++) {\r\n\t\t\t\tconst j: number = i + halfLength;\r\n\t\t\t\tconst real0: number = realArray[i];\r\n\t\t\t\tconst imag0: number = imagArray[i];\r\n\t\t\t\tconst real1: number = realArray[j] * c - imagArray[j] * s;\r\n\t\t\t\tconst imag1: number = realArray[j] * s + imagArray[j] * c;\r\n\t\t\t\trealArray[i] = real0 + real1;\r\n\t\t\t\timagArray[i] = imag0 + imag1;\r\n\t\t\t\trealArray[j] = real0 - real1;\r\n\t\t\t\timagArray[j] = imag0 - imag1;\r\n\t\t\t\tconst cTemp: number = oscillatorMultiplier * c - cPrev;\r\n\t\t\t\tconst sTemp: number = oscillatorMultiplier * s - sPrev;\r\n\t\t\t\tcPrev = c;\r\n\t\t\t\tsPrev = s;\r\n\t\t\t\tc = cTemp;\r\n\t\t\t\ts = sTemp;\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n}\r\n\r\n// Computes the Fourier transform from an array of real-valued time-domain\r\n// samples. The output is specially formatted for space efficieny: elements\r\n// 0 through N/2 represent cosine wave amplitudes in ascending frequency,\r\n// and elements N/2+1 through N-1 represent sine wave amplitudes in\r\n// descending frequency. Overwrites the input array.\r\nexport function forwardRealFourierTransform(array: NumberArray): void {\r\n\tconst fullArrayLength: number = array.length;\r\n\tconst totalPasses: number = countBits(fullArrayLength);\r\n\tif (fullArrayLength < 4) throw new Error(\"FFT array length must be at least 4.\");\r\n\t\t\r\n\treverseIndexBits(array, fullArrayLength);\r\n\t\t\r\n\t// First and second pass.\r\n\tfor (let index: number = 0; index < fullArrayLength; index += 4) {\r\n\t\tconst index1: number = index + 1;\r\n\t\tconst index2: number = index + 2;\r\n\t\tconst index3: number = index + 3;\r\n\t\t\tconst real0: number = array[index ];\r\n\t\tconst real1: number = array[index1];\r\n\t\tconst real2: number = array[index2];\r\n\t\tconst real3: number = array[index3];\r\n\t\t// no imaginary elements yet since the input is fully real.\r\n\t\tconst tempA: number = real0 + real1;\r\n\t\tconst tempB: number = real2 + real3;\r\n\t\t\tarray[index ] = tempA + tempB;\r\n\t\tarray[index1] = real0 - real1;\r\n\t\tarray[index2] = tempA - tempB;\r\n\t\tarray[index3] = real2 - real3;\r\n\t}\r\n\t\t\r\n\t// Third pass.\r\n\tconst sqrt2over2: number = Math.sqrt(2.0) / 2.0;\r\n\tfor (let index: number = 0; index < fullArrayLength; index += 8) {\r\n\t\tconst index1: number = index + 1;\r\n\t\tconst index3: number = index + 3;\r\n\t\tconst index4: number = index + 4;\r\n\t\tconst index5: number = index + 5;\r\n\t\tconst index7: number = index + 7;\r\n\t\t\tconst real0: number = array[index ];\r\n\t\tconst real1: number = array[index1];\r\n\t\tconst imag3: number = array[index3];\r\n\t\tconst real4: number = array[index4];\r\n\t\tconst real5: number = array[index5];\r\n\t\tconst imag7: number = array[index7];\r\n\t\tconst tempA: number = (real5 - imag7) * sqrt2over2;\r\n\t\tconst tempB: number = (real5 + imag7) * sqrt2over2;\r\n\t\t\tarray[index ] = real0 + real4;\r\n\t\tarray[index1] = real1 + tempA;\r\n\t\tarray[index3] = real1 - tempA;\r\n\t\tarray[index4] = real0 - real4;\r\n\t\tarray[index5] = tempB - imag3;\r\n\t\tarray[index7] = tempB + imag3;\r\n\t}\r\n\t\t\r\n\t// Handle remaining passes.\r\n\tfor (let pass: number = 3; pass < totalPasses; pass++) {\r\n\t\tconst subStride: number = 1 << pass;\r\n\t\tconst midSubStride: number = subStride >> 1;\r\n\t\tconst stride: number = subStride << 1;\r\n\t\tconst radiansIncrement: number = Math.PI * 2.0 / stride;\r\n\t\tconst cosIncrement: number = Math.cos(radiansIncrement);\r\n\t\tconst sinIncrement: number = Math.sin(radiansIncrement);\r\n\t\tconst oscillatorMultiplier: number = 2.0 * cosIncrement;\r\n\t\tfor (let startIndex: number = 0; startIndex < fullArrayLength; startIndex += stride) {\r\n\t\t\tconst startIndexA: number = startIndex;\r\n\t\t\tconst startIndexB: number = startIndexA + subStride;\r\n\t\t\tconst stopIndex: number = startIndexB + subStride;\r\n\t\t\tconst realStartA: number = array[startIndexA];\r\n\t\t\tconst realStartB: number = array[startIndexB];\r\n\t\t\tarray[startIndexA] = realStartA + realStartB;\r\n\t\t\tarray[startIndexB] = realStartA - realStartB;\r\n\t\t\tlet c: number = cosIncrement;\r\n\t\t\tlet s: number = -sinIncrement;\r\n\t\t\tlet cPrev: number = 1.0;\r\n\t\t\tlet sPrev: number = 0.0;\r\n\t\t\tfor (let index: number = 1; index < midSubStride; index++) {\r\n\t\t\t\tconst indexA0: number = startIndexA + index;\r\n\t\t\t\tconst indexA1: number = startIndexB - index;\r\n\t\t\t\tconst indexB0: number = startIndexB + index;\r\n\t\t\t\t\tconst indexB1: number = stopIndex   - index;\r\n\t\t\t\tconst real0: number = array[indexA0];\r\n\t\t\t\tconst imag0: number = array[indexA1];\r\n\t\t\t\tconst real1: number = array[indexB0];\r\n\t\t\t\tconst imag1: number = array[indexB1];\r\n\t\t\t\tconst tempA: number = real1 * c + imag1 * s;\r\n\t\t\t\tconst tempB: number = real1 * s - imag1 * c;\r\n\t\t\t\tarray[indexA0] = real0 + tempA;\r\n\t\t\t\tarray[indexA1] = real0 - tempA;\r\n\t\t\t\t\tarray[indexB0] =-imag0 - tempB;\r\n\t\t\t\tarray[indexB1] = imag0 - tempB;\r\n\t\t\t\tconst cTemp: number = oscillatorMultiplier * c - cPrev;\r\n\t\t\t\tconst sTemp: number = oscillatorMultiplier * s - sPrev;\r\n\t\t\t\tcPrev = c;\r\n\t\t\t\tsPrev = s;\r\n\t\t\t\tc = cTemp;\r\n\t\t\t\ts = sTemp;\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n}\r\n\r\n// Computes the inverse Fourier transform from a specially formatted array of\r\n// scalar values. Elements 0 through N/2 are expected to be the real values of\r\n// the corresponding complex elements, representing cosine wave amplitudes in\r\n// ascending frequency, and elements N/2+1 through N-1 correspond to the\r\n// imaginary values, representing sine wave amplitudes in descending frequency.\r\n// Generates real-valued time-domain samples. Overwrites the input array.\r\nexport function inverseRealFourierTransform(array: NumberArray, fullArrayLength: number): void {\r\n\tconst totalPasses: number = countBits(fullArrayLength);\r\n\tif (fullArrayLength < 4) throw new Error(\"FFT array length must be at least 4.\");\r\n\r\n\t// Perform all but the last few passes in reverse.\r\n\tfor (let pass: number = totalPasses - 1; pass >= 2; pass--) {\r\n\t\tconst subStride: number = 1 << pass;\r\n\t\tconst midSubStride: number = subStride >> 1;\r\n\t\tconst stride: number = subStride << 1;\r\n\t\tconst radiansIncrement: number = Math.PI * 2.0 / stride;\r\n\t\tconst cosIncrement: number = Math.cos(radiansIncrement);\r\n\t\tconst sinIncrement: number = Math.sin(radiansIncrement);\r\n\t\tconst oscillatorMultiplier: number = 2.0 * cosIncrement;\r\n\t\t\t\r\n\t\tfor (let startIndex: number = 0; startIndex < fullArrayLength; startIndex += stride) {\r\n\t\t\tconst startIndexA: number = startIndex;\r\n\t\t\tconst midIndexA: number = startIndexA + midSubStride;\r\n\t\t\tconst startIndexB: number = startIndexA + subStride;\r\n\t\t\tconst midIndexB: number = startIndexB + midSubStride;\r\n\t\t\tconst stopIndex: number = startIndexB + subStride;\r\n\t\t\tconst realStartA: number = array[startIndexA];\r\n\t\t\tconst imagStartB: number = array[startIndexB];\r\n\t\t\tarray[startIndexA] = realStartA + imagStartB;\r\n\t\t\tarray[midIndexA] *= 2;\r\n\t\t\tarray[startIndexB] = realStartA - imagStartB;\r\n\t\t\tarray[midIndexB] *= 2;\r\n\t\t\tlet c: number = cosIncrement;\r\n\t\t\tlet s: number = -sinIncrement;\r\n\t\t\tlet cPrev: number = 1.0;\r\n\t\t\tlet sPrev: number = 0.0;\r\n\t\t\tfor (let index: number = 1; index < midSubStride; index++) {\r\n\t\t\t\tconst indexA0: number = startIndexA + index;\r\n\t\t\t\tconst indexA1: number = startIndexB - index;\r\n\t\t\t\tconst indexB0: number = startIndexB + index;\r\n\t\t\t\t\tconst indexB1: number = stopIndex   - index;\r\n\t\t\t\tconst real0: number = array[indexA0];\r\n\t\t\t\tconst real1: number = array[indexA1];\r\n\t\t\t\tconst imag0: number = array[indexB0];\r\n\t\t\t\tconst imag1: number = array[indexB1];\r\n\t\t\t\tconst tempA: number = real0 - real1;\r\n\t\t\t\tconst tempB: number = imag0 + imag1;\r\n\t\t\t\tarray[indexA0] = real0 + real1;\r\n\t\t\t\tarray[indexA1] = imag1 - imag0;\r\n\t\t\t\tarray[indexB0] = tempA * c - tempB * s;\r\n\t\t\t\tarray[indexB1] = tempB * c + tempA * s;\r\n\t\t\t\tconst cTemp: number = oscillatorMultiplier * c - cPrev;\r\n\t\t\t\tconst sTemp: number = oscillatorMultiplier * s - sPrev;\r\n\t\t\t\tcPrev = c;\r\n\t\t\t\tsPrev = s;\r\n\t\t\t\tc = cTemp;\r\n\t\t\t\ts = sTemp;\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\t/*\r\n\t// Commented out this block (and compensated with an extra pass above)\r\n\t// because it's slower in my testing so far.\r\n\t// Pass with stride 8.\r\n\tconst sqrt2over2: number = Math.sqrt(2.0) / 2.0;\r\n\tfor (let index: number = 0; index < fullArrayLength; index += 8) {\r\n\t\tconst index1: number = index + 1;\r\n\t\tconst index2: number = index + 2;\r\n\t\tconst index3: number = index + 3;\r\n\t\tconst index4: number = index + 4;\r\n\t\tconst index5: number = index + 5;\r\n\t\tconst index6: number = index + 6;\r\n\t\tconst index7: number = index + 7;\r\n\t\tconst real0: number = array[index ];\r\n\t\tconst real1: number = array[index1];\r\n\t\tconst real2: number = array[index2];\r\n\t\tconst real3: number = array[index3];\r\n\t\tconst imag4: number = array[index4];\r\n\t\tconst imag5: number = array[index5];\r\n\t\tconst imag6: number = array[index6];\r\n\t\tconst imag7: number = array[index7];\r\n\t\tconst tempA: number = real1 - real3;\r\n\t\tconst tempB: number = imag5 + imag7;\r\n\t\tarray[index ] = real0 + imag4;\r\n\t\tarray[index1] = real1 + real3;\r\n\t\tarray[index2] = real2 * 2;\r\n\t\tarray[index3] = imag7 - imag5;\r\n\t\tarray[index4] = real0 - imag4;\r\n\t\tarray[index5] = (tempA + tempB) * sqrt2over2;\r\n\t\tarray[index6] = imag6 * 2;\r\n\t\tarray[index7] = (tempB - tempA) * sqrt2over2;\r\n\t}\r\n\t*/\r\n\t// The final passes with strides 4 and 2, combined into one loop.\r\n\tfor (let index: number = 0; index < fullArrayLength; index += 4) {\r\n\t\tconst index1: number = index + 1;\r\n\t\tconst index2: number = index + 2;\r\n\t\tconst index3: number = index + 3;\r\n\t\t\tconst real0: number = array[index ];\r\n\t\tconst real1: number = array[index1] * 2;\r\n\t\tconst imag2: number = array[index2];\r\n\t\tconst imag3: number = array[index3] * 2;\r\n\t\tconst tempA: number = real0 + imag2;\r\n\t\tconst tempB: number = real0 - imag2;\r\n\t\t\tarray[index ] = tempA + real1;\r\n\t\tarray[index1] = tempA - real1;\r\n\t\tarray[index2] = tempB + imag3;\r\n\t\tarray[index3] = tempB - imag3;\r\n\t}\r\n\t\t\r\n\treverseIndexBits(array, fullArrayLength);\r\n}\r\n","// Copyright (c) 2012-2022 John Nesky and contributing authors, distributed under the MIT license, see accompanying the LICENSE.md file.\r\n\r\nexport class Deque<T> {\r\n\tprivate _capacity: number = 1;\r\n\tprivate _buffer: Array<T | undefined> = [undefined];\r\n\tprivate _mask: number = 0;\r\n\tprivate _offset: number = 0;\r\n\tprivate _count: number = 0;\r\n\r\n\tpublic pushFront(element: T): void {\r\n\t\tif (this._count >= this._capacity) this._expandCapacity();\r\n\t\tthis._offset = (this._offset - 1) & this._mask;\r\n\t\tthis._buffer[this._offset] = element;\r\n\t\tthis._count++;\r\n\t}\r\n\tpublic pushBack(element: T): void {\r\n\t\tif (this._count >= this._capacity) this._expandCapacity();\r\n\t\tthis._buffer[(this._offset + this._count) & this._mask] = element;\r\n\t\tthis._count++;\r\n\t}\r\n\tpublic popFront(): T {\r\n\t\tif (this._count <= 0) throw new Error(\"No elements left to pop.\");\r\n\t\tconst element: T = <T>this._buffer[this._offset];\r\n\t\tthis._buffer[this._offset] = undefined;\r\n\t\tthis._offset = (this._offset + 1) & this._mask;\r\n\t\tthis._count--;\r\n\t\treturn element;\r\n\t}\r\n\tpublic popBack(): T {\r\n\t\tif (this._count <= 0) throw new Error(\"No elements left to pop.\");\r\n\t\tthis._count--;\r\n\t\tconst index: number = (this._offset + this._count) & this._mask;\r\n\t\tconst element: T = <T>this._buffer[index];\r\n\t\tthis._buffer[index] = undefined;\r\n\t\treturn element;\r\n\t}\r\n\tpublic peakFront(): T {\r\n\t\tif (this._count <= 0) throw new Error(\"No elements left to pop.\");\r\n\t\treturn <T>this._buffer[this._offset];\r\n\t}\r\n\tpublic peakBack(): T {\r\n\t\tif (this._count <= 0) throw new Error(\"No elements left to pop.\");\r\n\t\treturn <T>this._buffer[(this._offset + this._count - 1) & this._mask];\r\n\t}\r\n\tpublic count(): number {\r\n\t\treturn this._count;\r\n\t}\r\n\tpublic set(index: number, element: T): void {\r\n\t\tif (index < 0 || index >= this._count) throw new Error(\"Invalid index\");\r\n\t\tthis._buffer[(this._offset + index) & this._mask] = element;\r\n\t}\r\n\tpublic get(index: number): T {\r\n\t\tif (index < 0 || index >= this._count) throw new Error(\"Invalid index\");\r\n\t\treturn <T>this._buffer[(this._offset + index) & this._mask];\r\n\t}\r\n\tpublic remove(index: number): void {\r\n\t\tif (index < 0 || index >= this._count) throw new Error(\"Invalid index\");\r\n\t\tif (index <= (this._count >> 1)) {\r\n\t\t\twhile (index > 0) {\r\n\t\t\t\tthis.set(index, this.get(index - 1));\r\n\t\t\t\tindex--;\r\n\t\t\t}\r\n\t\t\tthis.popFront();\r\n\t\t} else {\r\n\t\t\tindex++;\r\n\t\t\twhile (index < this._count) {\r\n\t\t\t\tthis.set(index - 1, this.get(index));\r\n\t\t\t\tindex++;\r\n\t\t\t}\r\n\t\t\tthis.popBack();\r\n\t\t}\r\n\t}\r\n\tprivate _expandCapacity(): void {\r\n\t\tif (this._capacity >= 0x40000000) throw new Error(\"Capacity too big.\");\r\n\t\tthis._capacity = this._capacity << 1;\r\n\t\tconst oldBuffer: Array<T | undefined> = this._buffer;\r\n\t\tconst newBuffer: Array<T | undefined> = new Array(this._capacity);\r\n\t\tconst size: number = this._count | 0;\r\n\t\tconst offset: number = this._offset | 0;\r\n\t\tfor (let i = 0; i < size; i++) {\r\n\t\t\tnewBuffer[i] = oldBuffer[(offset + i) & this._mask];\r\n\t\t}\r\n\t\tfor (let i = size; i < this._capacity; i++) {\r\n\t\t\tnewBuffer[i] = undefined;\r\n\t\t}\r\n\t\tthis._offset = 0;\r\n\t\tthis._buffer = newBuffer;\r\n\t\tthis._mask = this._capacity - 1;\r\n\t}\r\n}","//A simple events system for effectively direct links without actualy linking files or references\r\nclass EventManager { \r\n    private activeEvents:string[] = [];\r\n    private listeners:any = {};\r\n\r\n    constructor() {\r\n        this.activeEvents = [];\r\n        this.listeners = {};\r\n    }\r\n\r\n\r\n    public raise(eventType: string, eventData: any, extraEventData?: any): void {\r\n        if (this.listeners[eventType] == undefined) {\r\n            return;\r\n        }\r\n        this.activeEvents.push(eventType);\r\n        for (let i: number = 0; i < this.listeners[eventType].length; i++) {\r\n            this.listeners[eventType][i](eventData,extraEventData)\r\n        }\r\n        this.activeEvents.pop();\r\n    }\r\n\r\n    public listen(eventType:string,callback:Function): void {\r\n        if (this.listeners[eventType] == undefined) {\r\n            this.listeners[eventType] = []\r\n        }\r\n        this.listeners[eventType].push(callback)\r\n    }\r\n\r\n    public unlisten(eventType: string, callback: Function): void {\r\n        if (this.listeners[eventType] == undefined) {\r\n            return;\r\n        }\r\n        const lisen = this.listeners[eventType].indexOf(callback);\r\n        if (lisen != -1) {\r\n            this.listeners[eventType].splice(lisen, 1);\r\n        }\r\n    }\r\n    public unlistenAll(eventType: string): void {\r\n        if (this.listeners[eventType] == undefined) {\r\n            return;\r\n        }\r\n        this.listeners[eventType]=[];\r\n    }\r\n}\r\n\r\nexport const events:EventManager = new EventManager()","/*\r\nThis file contains code to compute digital audio filter coefficients based on\r\nthe desired type, cutoff frequency, and other parameters. You can use these\r\ncoefficients to apply the filter to audio samples. It also contains code to\r\nanalyze these filters, which is useful for graphically displaying their effects.\r\n\r\nAll of the filters in this file are known as \"Infinite Impulse Response\" or IIR\r\nfilters, because older output samples contribute feedback to newer output\r\nsamples and thus contribute to all future samples, although typically filters\r\nare design to reduce the contribution of older samples over time.\r\n\r\nLow-pass filters aka high-cut filters preserve audio signals below the cutoff\r\nfrequency, and attenuate audio signals above the cutoff frequency. High-pass\r\nfilters aka low-cut filters are the reverse. All-pass filters do not affect the\r\nvolume of the signal at all but induce phase changes above the cutoff frequency.\r\nPeak/Notch filters maintain the volume on either side of the cutoff frequency,\r\nbut raise or lower the volume at that frequency. \r\n\r\nThe number of old samples used in the filter determines the \"order\" of the\r\nfilter. First-order filters generally have shallower slopes, and second-order\r\nfilters generally have steeper slopes and can be configured to \"resonate\",\r\nmeaning they have a louder peak at the cutoff frequency. This file contains\r\nfirst-order filters and second-order filters, meaning one or two older samples\r\nare involved, as well as the current input sample.\r\n\r\nThe class FilterCoefficients is defined lower in this file. You can use it to\r\nset up a first order filter like this:\r\n\r\n\tconst cutoffRadiansPerSample: number = 2 * Math.PI * cutoffHz / sampleRate;\r\n\tconst filter: FilterCoefficients = new FilterCoefficients();\r\n\tfilter.lowPass1stOrderButterworth(cutoffRadiansPerSample);\r\n\t// output sample coefficients are conventionally called a0, a1, etc. Note\r\n\t// that a[0] is typically normalized to 1.0 and need not be used directly.\r\n\tconst a: number[] = filter.a;\r\n\t// input sample coefficients are conventionally called b0, b1, etc\r\n\tconst b: number[] = filter.b;\r\n\t// filter input samples, x[0] is the most recent, x[1] is the previous one, etc.\r\n\tconst x: number[] = [0, 0, 0];\r\n\t// filter output samples, y[0] will be computed by the filter based on input\r\n\t// samples and older output samples.\r\n\tconst y: number[] = [0, 0, 0];\r\n\r\nThen to apply the first-order filter to samples inside a loop, using the current\r\ninput sample (x[0]) as well as previous input and output samples, do this:\r\n\r\n\t// Compute the next output sample y[0]:\r\n\ty[0] = b[0] * x[0] + b[1] * x[1] - a[1] * y[1];\r\n\t// Remember the input and output samples for next time:\r\n\tx[1] = x[0];\r\n\ty[1] = y[0];\r\n\r\n2nd order filters are similar, but have more parameters and require more old\r\nsamples:\r\n\r\n\t// Compute the next output sample y[0]:\r\n\ty[0] = b[0] * x[0] + b[1] * x[1] + b[2] * x[2] - a[1] * y[1] - a[2] * y[2];\r\n\t// Remember the input and output samples for next time:\r\n\tx[2] = x[1];\r\n\tx[1] = x[0];\r\n\ty[2] = y[1];\r\n\ty[1] = y[0];\r\n\r\nYou can compose multiple filters into a higher order filter, although doing so\r\nreduces the numerical stability of the filter:\r\n\r\n\tfilter3.combination(filter1, filter2);\r\n\t// filter3.order will equal: filter1.order + filter2.order\r\n\t// The number of coefficients in filter3.a and filter3.b will be: order + 1\r\n\r\nThis file also contains a class called FrequencyResponse. You can use it to\r\ndetermine how much gain or attenuation a filter would apply to sounds at a\r\nspecific input frequency, as well as the phase offset:\r\n\r\n\tconst inputRadians: number = 2 * Math.PI * cutoffHz / sampleRate;\r\n\tconst response: FrequencyResponse = new FrequencyResponse();\r\n\tresponse.analyze(filter, inputRadians);\r\n\tconst gainResponse = response.magnitude();\r\n\tconst phaseResponse = response.angle();\r\n\r\nThat's basically all you need to know to use this code, but I'll also explain\r\nhow the analysis works.\r\n\r\nA first-order digital IIR filter is ordinarily implemented in a form like this:\r\n\r\n\toutput = inputCoeff * input + prevInputCoeff * prevInput - prevOutputCoeff * prevOutput;\r\n\r\nIf we adopt standard naming conventions for audio filters, this same code would\r\ninstead look like:\r\n\r\n\t// x0 = current input, x1 = prevInput, y0 = current output, y1 = prevOutput\r\n\ty0 = b0*x0 + b1*x1 - a1*y1;\r\n\r\nLeaving behind the world of code for a moment and entering the world of algebra,\r\nwe can rewrite this equation by moving all the output terms to the left side,\r\nand we can add a coefficient to the y0 term called a0 (which is typically\r\nnormalized to 1.0, which is why I didn't bother including it until now):\r\n\r\n\ta0*y0 + a1*y1 = b0*x0 + b1*x1\r\n\r\nThis is known as the symmetrical form of the filter, and it will help us analyze\r\nthe impact of the filter on an input audio signal. Here's a lesson that helped\r\nme understand the symmetrical form:\r\nhttps://web.archive.org/web/20200626183458/http://123.physics.ucdavis.edu/week_5_files/filters/digital_filter.pdf\r\n\r\nThe end of that lesson introduces a concept called the \"delay operator\" which\r\nlooks like \"z^-1\", which (magically) turns a sample into the previous sample\r\nwhen you multiply them. For example:\r\n\r\n\tx0 * z^-1 = x1\r\n\r\nThe lesson doesn't explain how it actually works. Audio signals aren't always\r\npredictable, which means that you generally can't do math on a single sample to\r\ncompute what the previous sample was. However, some audio signals ARE\r\npredictable, such as pure sine waves. Fortunately, all audio signals can be\r\nbroken down into a sum of independent sine waves. We can pick one sine wave at a\r\ntime, and use it to analyze the filter's impact on waves at that frequency. In\r\npractice, this tells us what the filter will do to unpredictable input samples\r\nthat contain a partial sine wave at that frequency.\r\n\r\nTechnically, you can't just use a single sine wave sample to determine the\r\nprevious sine wave sample, because each possible value is passed going upwards\r\nand downwards once per period and the direction is ambigous. This is where we\r\nneed to move into the complex number domain, where the real and imaginary\r\ncomponents can provide enough information to compute the previous position on\r\nthe input signal. So now instead of talking about sine waves, we're talking\r\nabout waves where the imaginary component is a sine wave and the real component\r\nis a cosine wave at the same frequency. Together, they trace around a unit\r\ncircle in the complex domain, and each sample is just a consistent rotation\r\napplied to the previous sample. The \"delay operator\" described above, z^-1, is\r\nthis same rotation applied in reverse, and it can be computed as:\r\n\r\n\tz^-1 = cos(radiansPerSample) - i * sin(radiansPerSample)\r\n\r\nMath nerds may be interested to know that \"Euler's formula\" was used here, but\r\nexplaining what that means is probably beyond the scope of this documentation\r\naside from noting that a complex number on the unit circle represents a 2D\r\nrotation that you can apply via multiplication.\r\n\r\nNow we can rewrite the symmetrical form using the delay operator and algebra:\r\n\r\n\ta0*y0 + a1*y0*z^-1 = b0*x0 + b1*x0*z^-1\r\n\ty0 * (a0 + a1*z^-1) = x0 * (b0 + b1*z^-1)\r\n\ty0 = x0 * (b0 + b1*z^-1) / (a0 + a1*z^-1)\r\n\ty0 / x0 = (b0 + b1*z^-1) / (a0 + a1*z^-1)\r\n\r\nThat last equation expresses the relationship between the input and output\r\nsignals (y0/x0) in terms of the filter coefficients and delay operator. At this\r\npoint, the specific values of the input and output samples don't even matter!\r\nThis is called the \"transfer function\", and it's conventionally named \"H(z)\":\r\n\r\n\tH(z) = (b0 + b1*z^-1) / (a0 + a1*z^-1)\r\n\r\nIf you plug in actual filter coefficients and express the delay operators as\r\ncomplex numbers with the appropriate trigonometry functions, the transfer\r\nfunction can be computed and produces a complex number that represents the\r\nrelationship between the input and output signals, whose magnitude represents\r\nthe volume gain (or attenuation) of signals at that frequency, and whose angle\r\nrepresents how much phase shift is applied by the filter to signals at that\r\nfrequency.\r\n\r\n(Note that in order to compute the transfer function, you'll need to do\r\nsomething about the complex number in the denominator. It turns out you can turn\r\nthe denominator into a real number by multiplying both the numerator and\r\ndenominator by the complex conjugate of the denominator, which is just the\r\ndenominator with the imaginary component negated.)\r\n\r\nFinally, I'll list some of the links that helped me understand filters and\r\nprovided some of the algorithms I that use here.\r\n\r\nHere's where I found accurate 2nd order low-pass and high-pass digital filters:\r\nhttps://web.archive.org/web/20120531011328/http://www.musicdsp.org/files/Audio-EQ-Cookbook.txt\r\n\r\nThis page is how I found a link to the cookbook article above. It claims these\r\nfilters are Butterworth filters:\r\nhttp://web.archive.org/web/20191213120120/https://crypto.stanford.edu/~blynn/sound/analog.html\r\n\r\nI found the first-order digital Butterworth filter coefficients at:\r\nhttps://www.researchgate.net/publication/338022014_Digital_Implementation_of_Butterworth_First-Order_Filter_Type_IIR\r\n\r\nThis meta-paper helped me understand how to make 2nd order peak/notch filters:\r\nhttps://web.archive.org/web/20170706085655/https://www.thesounddesign.com/MIO/EQ-Coefficients.pdf\r\n\r\nBeepBox originally used simpler low-pass filters that I adapted from SFXR:\r\nhttps://www.drpetter.se/project_sfxr.html\r\nFor low cutoff frequencies, the simpler filters and the Butterworth filters are\r\nnearly identical, but when closer to the nyquist frequency the simpler filters\r\ncreate extra resonance.\r\n*/\r\n\r\nexport class FilterCoefficients {\r\n\tpublic readonly a: number[] = [1.0]; // output coefficients (negated, keep a[0]=1)\r\n\tpublic readonly b: number[] = [1.0]; // input coefficients\r\n\tpublic order: number = 0;\r\n\t\r\n\tpublic linearGain0thOrder(linearGain: number): void {\r\n\t\t//a[0] = 1.0; // a0 should always be normalized to 1.0, no need to assign it directly.\r\n\t\tthis.b[0] = linearGain;\r\n\t\tthis.order = 0;\r\n\t}\r\n\t\r\n\tpublic lowPass1stOrderButterworth(cornerRadiansPerSample: number): void {\r\n\t\t// First-order Butterworth low-pass filter according to:\r\n\t\t// https://www.researchgate.net/publication/338022014_Digital_Implementation_of_Butterworth_First-Order_Filter_Type_IIR\r\n\t\t// A butterworth filter is one where the amplitude response is equal to:\r\n\t\t// 1 / √(1 + (freq / cutoffFreq)^(2 * order))\r\n\t\tconst g: number = 1.0 / Math.tan(cornerRadiansPerSample * 0.5);\r\n\t\tconst a0: number = 1.0 + g;\r\n\t\tthis.a[1] = (1.0 - g) / a0;\r\n\t\tthis.b[1] = this.b[0] = 1 / a0;\r\n\t\tthis.order = 1;\r\n\t}\r\n\t\r\n\tpublic lowPass1stOrderSimplified(cornerRadiansPerSample: number): void {\r\n\t\t// The output of this filter is nearly identical to the 1st order\r\n\t\t// Butterworth low-pass above, except if the cutoff is set to nyquist/3,\r\n\t\t// then the output is the same as the input, and if the cutoff is higher\r\n\t\t// than that, then the output actually resonates at high frequencies\r\n\t\t// instead of attenuating.\r\n\t\t// I'm guessing this filter was converted from analog to digital using\r\n\t\t// the \"matched z-transform\" method instead of the \"bilinear transform\"\r\n\t\t// method. The difference is that the bilinear transform warps\r\n\t\t// frequencies so that the lowpass response of zero at analogue ∞hz maps\r\n\t\t// to the digital nyquist frequency, whereas the matched z-transform\r\n\t\t// preserves the frequency of the filter response but also adds the\r\n\t\t// reflected response from above the nyquist frequency.\r\n\t\tconst g: number = 2.0 * Math.sin(cornerRadiansPerSample * 0.5);\r\n\t\tthis.a[1] = g - 1.0;\r\n\t\tthis.b[0] = g;\r\n\t\tthis.b[1] = 0.0;\r\n\t\t/*\r\n\t\t// Alternatively:\r\n\t\tconst g: number = 1.0 / (2.0 * Math.sin(cornerRadiansPerSample / 2));\r\n\t\tconst a0: number = g;\r\n\t\tthis.a[1] = (1.0 - g) / a0;\r\n\t\tthis.b[0] = 1.0 / a0;\r\n\t\tthis.b[1] = 0.0 / a0;\r\n\t\t*/\r\n\t\tthis.order = 1;\r\n\t}\r\n\t\r\n\tpublic highPass1stOrderButterworth(cornerRadiansPerSample: number): void {\r\n\t\t// First-order Butterworth high-pass filter according to:\r\n\t\t// https://www.researchgate.net/publication/338022014_Digital_Implementation_of_Butterworth_First-Order_Filter_Type_IIR\r\n\t\tconst g: number = 1.0 / Math.tan(cornerRadiansPerSample * 0.5);\r\n\t\tconst a0: number = 1.0 + g;\r\n\t\tthis.a[1] = (1.0 - g) / a0;\r\n\t\tthis.b[0] = g / a0;\r\n\t\tthis.b[1] = -g / a0;\r\n\t\tthis.order = 1;\r\n\t}\r\n\t/*\r\n\tpublic highPass1stOrderSimplified(cornerRadiansPerSample: number): void {\r\n\t\t// The output of this filter is nearly identical to the 1st order\r\n\t\t// Butterworth high-pass above, except it resonates when the cutoff\r\n\t\t// appoaches the nyquist.\r\n\t\tconst g: number = 2.0 * Math.sin(cornerRadiansPerSample * 0.5);\r\n\t\tthis.a[1] = g - 1.0;\r\n\t\tthis.b[0] = 1.0;\r\n\t\tthis.b[1] = -1.0;\r\n\t\tthis.order = 1;\r\n\t}\r\n\t*/\r\n\tpublic highShelf1stOrder(cornerRadiansPerSample: number, shelfLinearGain: number): void {\r\n\t\t// I had trouble figuring this one out because I couldn't find any\r\n\t\t// online algorithms that I understood. There are 3 degrees of freedom\r\n\t\t// and I could narrow down a couple of them based on the desired gain at\r\n\t\t// DC and nyquist, but getting the cutoff frequency correct took a\r\n\t\t// little bit of trial and error in my attempts to interpret page 53 of\r\n\t\t// this chapter: http://www.music.mcgill.ca/~ich/classes/FiltersChap2.pdf\r\n\t\t// Obviously I don't fully understand the bilinear transform yet!\r\n\t\tconst tan: number = Math.tan(cornerRadiansPerSample * 0.5);\r\n\t\tconst sqrtGain: number = Math.sqrt(shelfLinearGain);\r\n\t\tconst g: number = (tan * sqrtGain - 1) / (tan * sqrtGain + 1.0);\r\n\t\tconst a0: number = 1.0;\r\n\t\tthis.a[1] = g / a0;\r\n\t\tthis.b[0] = (1.0 + g + shelfLinearGain * (1.0 - g)) / (2.0 * a0);\r\n\t\tthis.b[1] = (1.0 + g - shelfLinearGain * (1.0 - g)) / (2.0 * a0);\r\n\t\tthis.order = 1;\r\n\t}\r\n\t\r\n\tpublic allPass1stOrderInvertPhaseAbove(cornerRadiansPerSample: number): void {\r\n\t\tconst g: number = (Math.sin(cornerRadiansPerSample) - 1.0) / Math.cos(cornerRadiansPerSample);\r\n\t\tthis.a[1] = g;\r\n\t\tthis.b[0] = g;\r\n\t\tthis.b[1] = 1.0;\r\n\t\tthis.order = 1;\r\n\t}\r\n\t\r\n\t/*\r\n\t// I haven't found a practical use for this version of the all pass filter.\r\n\t// It seems to create a weird subharmonic when used in a delay feedback loop.\r\n\tpublic allPass1stOrderInvertPhaseBelow(cornerRadiansPerSample: number): void {\r\n\t\tconst g: number = (Math.sin(cornerRadiansPerSample) - 1.0) / Math.cos(cornerRadiansPerSample);\r\n\t\tthis.a[1] = g;\r\n\t\tthis.b[0] = -g;\r\n\t\tthis.b[1] = -1.0;\r\n\t\tthis.order = 1;\r\n\t}\r\n\t*/\r\n\t\r\n\tpublic allPass1stOrderFractionalDelay(delay: number) {\r\n\t\t// Very similar to allPass1stOrderInvertPhaseAbove, but configured\r\n\t\t// differently and for a different purpose! Useful for interpolating\r\n\t\t// between samples in a delay line.\r\n\t\tconst g: number = (1.0 - delay) / (1.0 + delay);\r\n\t\tthis.a[1] = g;\r\n\t\tthis.b[0] = g;\r\n\t\tthis.b[1] = 1.0;\r\n\t\tthis.order = 1;\r\n\t}\r\n\t\r\n\tpublic lowPass2ndOrderButterworth(cornerRadiansPerSample: number, peakLinearGain: number): void {\r\n\t\t// This is Butterworth if peakLinearGain=1/√2 according to:\r\n\t\t// http://web.archive.org/web/20191213120120/https://crypto.stanford.edu/~blynn/sound/analog.html\r\n\t\t// An interesting property is that if peakLinearGain=1/16 then the\r\n\t\t// output resembles a first-order lowpass at a cutoff 4 octaves lower,\r\n\t\t// although it gets distorted near the nyquist.\r\n\t\tconst alpha: number = Math.sin(cornerRadiansPerSample) / (2.0 * peakLinearGain);\r\n\t\tconst cos: number = Math.cos(cornerRadiansPerSample);\r\n\t\tconst a0: number = 1.0 + alpha;\r\n\t\tthis.a[1] = -2.0*cos / a0;\r\n\t\tthis.a[2] = (1 - alpha) / a0;\r\n\t\tthis.b[2] = this.b[0] = (1 - cos) / (2.0*a0);\r\n\t\tthis.b[1] = (1 - cos) / a0;\r\n\t\tthis.order = 2;\r\n\t}\r\n\t\r\n\tpublic lowPass2ndOrderSimplified(cornerRadiansPerSample: number, peakLinearGain: number): void {\r\n\t\t// This filter is adapted from the one in the SFXR source code:\r\n\t\t// https://www.drpetter.se/project_sfxr.html\r\n\t\t// The output is nearly identical to the resonant Butterworth low-pass\r\n\t\t// above, except it resonates too much when the cutoff appoaches the\r\n\t\t// nyquist. If the resonance is set to zero and the cutoff is set to\r\n\t\t// nyquist/3, then the output is the same as the input.\r\n\t\tconst g: number = 2.0 * Math.sin(cornerRadiansPerSample / 2.0);\r\n\t\tconst filterResonance: number = 1.0 - 1.0 / (2.0 * peakLinearGain);\r\n\t\tconst feedback: number = filterResonance + filterResonance / (1.0 - g);\r\n\t\tthis.a[1] = 2.0*g + (g - 1.0) * g*feedback - 2.0;\r\n\t\tthis.a[2] = (g - 1.0) * (g - g*feedback - 1.0);\r\n\t\tthis.b[0] = g*g;\r\n\t\tthis.b[1] = 0;\r\n\t\tthis.b[2] = 0;\r\n\t\tthis.order = 2;\r\n\t}\r\n\t\r\n\tpublic highPass2ndOrderButterworth(cornerRadiansPerSample: number, peakLinearGain: number): void {\r\n\t\tconst alpha: number = Math.sin(cornerRadiansPerSample) / (2 * peakLinearGain);\r\n\t\tconst cos: number = Math.cos(cornerRadiansPerSample);\r\n\t\tconst a0: number = 1.0 + alpha;\r\n\t\tthis.a[1] = -2.0*cos / a0;\r\n\t\tthis.a[2] = (1.0 - alpha) / a0;\r\n\t\tthis.b[2] = this.b[0] = (1.0 + cos) / (2.0*a0);\r\n\t\tthis.b[1] = -(1.0 + cos) / a0;\r\n\t\tthis.order = 2;\r\n\t}\r\n\t/*\r\n\tpublic highPass2ndOrderSimplified(cornerRadiansPerSample: number, peakLinearGain: number): void {\r\n\t\tconst g: number = 2.0 * Math.sin(cornerRadiansPerSample * 0.5);\r\n\t\tconst filterResonance: number = 1.0 - 1.0 / (2.0 * peakLinearGain);\r\n\t\tconst feedback: number = filterResonance + filterResonance / (1.0 - g);\r\n\t\tthis.a[1] = 2.0*g + (g - 1.0) * g*feedback - 2.0;\r\n\t\tthis.a[2] = (g - 1.0) * (g - g*feedback - 1.0);\r\n\t\tthis.b[0] = 1.0;\r\n\t\tthis.b[1] = -2.0;\r\n\t\tthis.b[2] = 1.0;\r\n\t\tthis.order = 2;\r\n\t}\r\n\t*/\r\n\tpublic peak2ndOrder(cornerRadiansPerSample: number, peakLinearGain: number, bandWidthScale: number): void {\r\n\t\tconst sqrtGain: number = Math.sqrt(peakLinearGain);\r\n\t\tconst bandWidth: number = bandWidthScale * cornerRadiansPerSample / (sqrtGain >= 1 ? sqrtGain : 1/sqrtGain);\r\n\t\t//const bandWidth: number = bandWidthScale * cornerRadiansPerSample / Math.max(sqrtGain, 1.0);\r\n\t\tconst alpha: number = Math.tan(bandWidth * 0.5);\r\n\t\tconst a0: number = 1.0 + alpha / sqrtGain;\r\n\t\tthis.b[0] = (1.0 + alpha * sqrtGain) / a0;\r\n\t\tthis.b[1] = this.a[1] = -2.0 * Math.cos(cornerRadiansPerSample) / a0;\r\n\t\tthis.b[2] = (1.0 - alpha * sqrtGain) / a0;\r\n\t\tthis.a[2] = (1.0 - alpha / sqrtGain) / a0;\r\n\t\tthis.order = 2;\r\n\t}\r\n\t/*\r\n\t// Create a higher order filter by combining two lower order filters.\r\n\t// However, making high order filters in this manner results in instability.\r\n\t// It is recommended to apply the 2nd order filters (biquads) in sequence instead.\r\n\tpublic combination(filter1: FilterCoefficients, filter2: FilterCoefficients): void {\r\n\t\tthis.order = filter1.order + filter2.order;\r\n\t\tfor (let i: number = 0; i <= this.order; i++) {\r\n\t\t\tthis.a[i] = 0.0;\r\n\t\t\tthis.b[i] = 0.0;\r\n\t\t}\r\n\t\tfor (let i: number = 0; i <= filter1.order; i++) {\r\n\t\t\tfor (let j: number = 0; j <= filter2.order; j++) {\r\n\t\t\t\tthis.a[i + j] += filter1.a[i] * filter2.a[j];\r\n\t\t\t\tthis.b[i + j] += filter1.b[i] * filter2.b[j];\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\t\r\n\tpublic scaledDifference(other: FilterCoefficients, scale: number): void {\r\n\t\tif (other.order != this.order) throw new Error();\r\n\t\tfor (let i: number = 0; i <= this.order; i++) {\r\n\t\t\tthis.a[i] = (this.a[i] - other.a[i]) * scale;\r\n\t\t\tthis.b[i] = (this.b[i] - other.b[i]) * scale;\r\n\t\t}\r\n\t}\r\n\t\r\n\tpublic copy(other: FilterCoefficients): void {\r\n\t\tthis.order = other.order;\r\n\t\tfor (let i: number = 0; i <= this.order; i++) {\r\n\t\t\tthis.a[i] = other.a[i];\r\n\t\t\tthis.b[i] = other.b[i];\r\n\t\t}\r\n\t}\r\n\t*/\r\n}\r\n\r\nexport class FrequencyResponse {\r\n\tpublic real: number = 0.0;\r\n\tpublic imag: number = 0.0;\r\n\tpublic denom: number = 1.0;\r\n\t\r\n\tpublic analyze(filter: FilterCoefficients, radiansPerSample: number): void {\r\n\t\tthis.analyzeComplex(filter, Math.cos(radiansPerSample), Math.sin(radiansPerSample));\r\n\t}\r\n\t\r\n\tpublic analyzeComplex(filter: FilterCoefficients, real: number, imag: number): void {\r\n\t\tconst a: number[] = filter.a;\r\n\t\tconst b: number[] = filter.b;\r\n\t\tconst realZ1: number = real;\r\n\t\tconst imagZ1: number = -imag;\r\n\t\tlet realNum: number = b[0] + b[1] * realZ1;\r\n\t\tlet imagNum: number = b[1] * imagZ1;\r\n\t\tlet realDenom: number = 1.0 + a[1] * realZ1;\r\n\t\tlet imagDenom: number = a[1] * imagZ1;\r\n\t\tlet realZ: number = realZ1;\r\n\t\tlet imagZ: number = imagZ1;\r\n\t\tfor (let i: number = 2; i <= filter.order; i++) {\r\n\t\t\tconst realTemp: number = realZ * realZ1 - imagZ * imagZ1;\r\n\t\t\tconst imagTemp: number = realZ * imagZ1 + imagZ * realZ1;\r\n\t\t\trealZ = realTemp;\r\n\t\t\timagZ = imagTemp;\r\n\t\t\trealNum += b[i] * realZ;\r\n\t\t\timagNum += b[i] * imagZ;\r\n\t\t\trealDenom += a[i] * realZ;\r\n\t\t\timagDenom += a[i] * imagZ;\r\n\t\t}\r\n\t\tthis.denom = realDenom * realDenom + imagDenom * imagDenom;\r\n\t\tthis.real = realNum * realDenom + imagNum * imagDenom;\r\n\t\tthis.imag = imagNum * realDenom - realNum * imagDenom;\r\n\t}\r\n\t\r\n\tpublic magnitude(): number {\r\n\t\treturn Math.sqrt(this.real * this.real + this.imag * this.imag) / this.denom;\r\n\t}\r\n\t\r\n\tpublic angle(): number {\r\n\t\treturn Math.atan2(this.imag, this.real);\r\n\t}\r\n}\r\n\r\nexport class DynamicBiquadFilter {\r\n\tpublic a1: number = 0.0;\r\n\tpublic a2: number = 0.0;\r\n\tpublic b0: number = 1.0;\r\n\tpublic b1: number = 0.0;\r\n\tpublic b2: number = 0.0;\r\n\tpublic a1Delta: number = 0.0;\r\n\tpublic a2Delta: number = 0.0;\r\n\tpublic b0Delta: number = 0.0;\r\n\tpublic b1Delta: number = 0.0;\r\n\tpublic b2Delta: number = 0.0;\r\n\tpublic output1: number = 0.0;\r\n\tpublic output2: number = 0.0;\r\n\t\r\n\t// Some filter types are more stable when interpolating between coefficients\r\n\t// if the \"b\" coefficient interpolation is multiplicative. Don't enable this\r\n\t// for filter types where the \"b\" coefficients might change sign!\r\n\tpublic useMultiplicativeInputCoefficients: boolean = false;\r\n\t\r\n\tpublic resetOutput(): void {\r\n\t\tthis.output1 = 0.0;\r\n\t\tthis.output2 = 0.0;\r\n\t}\r\n\t\r\n\tpublic loadCoefficientsWithGradient(start: FilterCoefficients, end: FilterCoefficients, deltaRate: number, useMultiplicativeInputCoefficients: boolean): void {\r\n\t\tif (start.order != 2 || end.order != 2) throw new Error();\r\n\t\tthis.a1 = start.a[1];\r\n\t\tthis.a2 = start.a[2];\r\n\t\tthis.b0 = start.b[0];\r\n\t\tthis.b1 = start.b[1];\r\n\t\tthis.b2 = start.b[2];\r\n\t\tthis.a1Delta = (end.a[1] - start.a[1]) * deltaRate;\r\n\t\tthis.a2Delta = (end.a[2] - start.a[2]) * deltaRate;\r\n\t\tif (useMultiplicativeInputCoefficients) {\r\n\t\t\tthis.b0Delta = Math.pow(end.b[0] / start.b[0], deltaRate);\r\n\t\t\tthis.b1Delta = Math.pow(end.b[1] / start.b[1], deltaRate);\r\n\t\t\tthis.b2Delta = Math.pow(end.b[2] / start.b[2], deltaRate);\r\n\t\t} else {\r\n\t\t\tthis.b0Delta = (end.b[0] - start.b[0]) * deltaRate;\r\n\t\t\tthis.b1Delta = (end.b[1] - start.b[1]) * deltaRate;\r\n\t\t\tthis.b2Delta = (end.b[2] - start.b[2]) * deltaRate;\r\n\t\t}\r\n\t\tthis.useMultiplicativeInputCoefficients = useMultiplicativeInputCoefficients;\r\n\t}\r\n}\r\n","// Copyright (c) 2012-2022 John Nesky and contributing authors, distributed under the MIT license, see accompanying the LICENSE.md file.\r\n\r\nimport { startLoadingSample, sampleLoadingState, SampleLoadingState, sampleLoadEvents, SampleLoadedEvent, SampleLoadingStatus, loadBuiltInSamples, Dictionary, DictionaryArray, toNameMap, FilterType, EnvelopeType, InstrumentType, EffectType, EnvelopeComputeIndex, Transition, Unison, Chord, Vibrato, Envelope, AutomationTarget, Config, getDrumWave, drawNoiseSpectrum, getArpeggioPitchIndex, performIntegralOld, getPulseWidthRatio, effectsIncludeTransition, effectsIncludeChord, effectsIncludePitchShift, effectsIncludeDetune, effectsIncludeVibrato, effectsIncludeNoteFilter, effectsIncludeDistortion, effectsIncludeBitcrusher, effectsIncludePanning, effectsIncludeChorus, effectsIncludeEcho, effectsIncludeReverb, OperatorWave } from \"./SynthConfig\";\r\nimport { Preset, EditorConfig } from \"../editor/EditorConfig\";\r\nimport { scaleElementsByFactor, inverseRealFourierTransform } from \"./FFT\";\r\nimport { Deque } from \"./Deque\";\r\nimport { events } from \"../global/Events\";\r\nimport { FilterCoefficients, FrequencyResponse, DynamicBiquadFilter } from \"./filtering\";\r\n\r\ndeclare global {\r\n    interface Window {\r\n        AudioContext: any;\r\n        webkitAudioContext: any;\r\n    }\r\n}\r\n\r\nconst epsilon: number = (1.0e-24); // For detecting and avoiding float denormals, which have poor performance.\r\n\r\n// For performance debugging:\r\n//let samplesAccumulated: number = 0;\r\n//let samplePerformance: number = 0;\r\n\r\nexport function clamp(min: number, max: number, val: number): number {\r\n    max = max - 1;\r\n    if (val <= max) {\r\n        if (val >= min) return val;\r\n        else return min;\r\n    } else {\r\n        return max;\r\n    }\r\n}\r\n\r\nfunction validateRange(min: number, max: number, val: number): number {\r\n    if (min <= val && val <= max) return val;\r\n    throw new Error(`Value ${val} not in range [${min}, ${max}]`);\r\n}\r\n\r\nfunction encode32BitNumber(buffer: number[], x: number): void {\r\n    // 0b11_\r\n    buffer.push(base64IntToCharCode[(x >>> (6 * 5)) & 0x3]);\r\n    //      111111_\r\n    buffer.push(base64IntToCharCode[(x >>> (6 * 4)) & 0x3f]);\r\n    //             111111_\r\n    buffer.push(base64IntToCharCode[(x >>> (6 * 3)) & 0x3f]);\r\n    //                    111111_\r\n    buffer.push(base64IntToCharCode[(x >>> (6 * 2)) & 0x3f]);\r\n    //                           111111_\r\n    buffer.push(base64IntToCharCode[(x >>> (6 * 1)) & 0x3f]);\r\n    //                                  111111\r\n    buffer.push(base64IntToCharCode[(x >>> (6 * 0)) & 0x3f]);\r\n}\r\n\r\n// @TODO: This is error-prone, because the caller has to remember to increment\r\n// charIndex by 6 afterwards.\r\nfunction decode32BitNumber(compressed: string, charIndex: number): number {\r\n    let x: number = 0;\r\n    // 0b11_\r\n    x |= base64CharCodeToInt[compressed.charCodeAt(charIndex++)] << (6 * 5);\r\n    //      111111_\r\n    x |= base64CharCodeToInt[compressed.charCodeAt(charIndex++)] << (6 * 4);\r\n    //             111111_\r\n    x |= base64CharCodeToInt[compressed.charCodeAt(charIndex++)] << (6 * 3);\r\n    //                    111111_\r\n    x |= base64CharCodeToInt[compressed.charCodeAt(charIndex++)] << (6 * 2);\r\n    //                           111111_\r\n    x |= base64CharCodeToInt[compressed.charCodeAt(charIndex++)] << (6 * 1);\r\n    //                                  111111\r\n    x |= base64CharCodeToInt[compressed.charCodeAt(charIndex++)] << (6 * 0);\r\n    return x;\r\n}\r\n\r\nfunction convertLegacyKeyToKeyAndOctave(rawKeyIndex: number): [number, number] {\r\n    let key: number = clamp(0, Config.keys.length, rawKeyIndex);\r\n    let octave: number = 0;\r\n    // This conversion code depends on C through B being\r\n    // available as keys, of course.\r\n    if (rawKeyIndex === 12) {\r\n        // { name: \"C+\", isWhiteKey: false, basePitch: 24 }\r\n        key = 0;\r\n        octave = 1;\r\n    } else if (rawKeyIndex === 13) {\r\n        // { name: \"G- (actually F#-)\", isWhiteKey: false, basePitch: 6 }\r\n        key = 6;\r\n        octave = -1;\r\n    } else if (rawKeyIndex === 14) {\r\n        // { name: \"C-\", isWhiteKey: true, basePitch: 0 }\r\n        key = 0;\r\n        octave = -1;\r\n    } else if (rawKeyIndex === 15) {\r\n        // { name: \"oh no (F-)\", isWhiteKey: true, basePitch: 5 }\r\n        key = 5;\r\n        octave = -1;\r\n    }\r\n    return [key, octave];\r\n}\r\n\r\nconst enum CharCode {\r\n    SPACE = 32,\r\n    HASH = 35,\r\n    PERCENT = 37,\r\n    AMPERSAND = 38,\r\n    PLUS = 43,\r\n    DASH = 45,\r\n    DOT = 46,\r\n    NUM_0 = 48,\r\n    NUM_1 = 49,\r\n    NUM_2 = 50,\r\n    NUM_3 = 51,\r\n    NUM_4 = 52,\r\n    NUM_5 = 53,\r\n    NUM_6 = 54,\r\n    NUM_7 = 55,\r\n    NUM_8 = 56,\r\n    NUM_9 = 57,\r\n    EQUALS = 61,\r\n    A = 65,\r\n    B = 66,\r\n    C = 67,\r\n    D = 68,\r\n    E = 69,\r\n    F = 70,\r\n    G = 71,\r\n    H = 72,\r\n    I = 73,\r\n    J = 74,\r\n    K = 75,\r\n    L = 76,\r\n    M = 77,\r\n    N = 78,\r\n    O = 79,\r\n    P = 80,\r\n    Q = 81,\r\n    R = 82,\r\n    S = 83,\r\n    T = 84,\r\n    U = 85,\r\n    V = 86,\r\n    W = 87,\r\n    X = 88,\r\n    Y = 89,\r\n    Z = 90,\r\n    UNDERSCORE = 95,\r\n    a = 97,\r\n    b = 98,\r\n    c = 99,\r\n    d = 100,\r\n    e = 101,\r\n    f = 102,\r\n    g = 103,\r\n    h = 104,\r\n    i = 105,\r\n    j = 106,\r\n    k = 107,\r\n    l = 108,\r\n    m = 109,\r\n    n = 110,\r\n    o = 111,\r\n    p = 112,\r\n    q = 113,\r\n    r = 114,\r\n    s = 115,\r\n    t = 116,\r\n    u = 117,\r\n    v = 118,\r\n    w = 119,\r\n    x = 120,\r\n    y = 121,\r\n    z = 122,\r\n    LEFT_CURLY_BRACE = 123,\r\n    RIGHT_CURLY_BRACE = 125,\r\n}\r\n\r\nconst enum SongTagCode {\r\n    beatCount = CharCode.a, // added in song url version 2\r\n    bars = CharCode.b, // added in 2\r\n    vibrato = CharCode.c, // added in 2, DEPRECATED\r\n    fadeInOut = CharCode.d, // added in 3 for transition, switched to fadeInOut in 9\r\n    loopEnd = CharCode.e, // added in 2\r\n    eqFilter = CharCode.f, // added in 3\r\n    barCount = CharCode.g, // added in 3\r\n    unison = CharCode.h, // added in 2\r\n    instrumentCount = CharCode.i, // added in 3\r\n    patternCount = CharCode.j, // added in 3\r\n    key = CharCode.k, // added in 2\r\n    loopStart = CharCode.l, // added in 2\r\n    reverb = CharCode.m, // added in 5, DEPRECATED\r\n    channelCount = CharCode.n, // added in 6\r\n    channelOctave = CharCode.o, // added in 3\r\n    patterns = CharCode.p, // added in 2\r\n    effects = CharCode.q, // added in 7\r\n    rhythm = CharCode.r, // added in 2\r\n    scale = CharCode.s, // added in 2\r\n    tempo = CharCode.t, // added in 2\r\n    preset = CharCode.u, // added in 7\r\n    volume = CharCode.v, // added in 2\r\n    wave = CharCode.w, // added in 2\r\n\r\n    filterResonance = CharCode.y, // added in 7, DEPRECATED, [UB] repurposed for chip wave loop controls\r\n    drumsetEnvelopes = CharCode.z, // added in 7 for filter envelopes, still used for drumset envelopes\r\n    algorithm = CharCode.A, // added in 6\r\n    feedbackAmplitude = CharCode.B, // added in 6\r\n    chord = CharCode.C, // added in 7, DEPRECATED\r\n    detune = CharCode.D, // [JB], added in 3(?), DEPRECATED\r\n    envelopes = CharCode.E, // added in 6 for FM operator envelopes, repurposed in 9 for general envelopes.\r\n    feedbackType = CharCode.F, // added in 6\r\n    arpeggioSpeed = CharCode.G, // [JB], added in 3, DEPRECATED\r\n    harmonics = CharCode.H, // added in 7\r\n    stringSustain = CharCode.I, // added in 9\r\n\r\n    edo = CharCode.K, // [UB] added in 3\r\n    pan = CharCode.L, // added between 8 and 9, DEPRECATED\r\n    customChipWave = CharCode.M, // [JB], added in 1(?)\r\n    songTitle = CharCode.N, // [JB], added in 1(?)\r\n    limiterSettings = CharCode.O, // [JB], added in 3(?)\r\n\r\n    operatorAmplitudes = CharCode.P, // added in 6\r\n    operatorFrequencies = CharCode.Q, // added in 6\r\n    operatorWaves = CharCode.R, // [JB], added in 4\r\n    spectrum = CharCode.S, // added in 7\r\n    startInstrument = CharCode.T, // added in 6\r\n    channelNames = CharCode.U, // [JB], added in 4(?)\r\n    feedbackEnvelope = CharCode.V, // added in 6, DEPRECATED\r\n    pulseWidth = CharCode.W, // added in 7\r\n    aliases = CharCode.X, // [JB], added in 4, DEPRECATED\r\n\r\n}\r\n\r\nconst base64IntToCharCode: ReadonlyArray<number> = [48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 45, 95];\r\nconst base64CharCodeToInt: ReadonlyArray<number> = [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 62, 62, 0, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 0, 0, 0, 0, 0, 0, 0, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 0, 0, 0, 0, 63, 0, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 0, 0, 0, 0, 0]; // 62 could be represented by either \"-\" or \".\" for historical reasons. New songs should use \"-\".\r\n\r\nclass BitFieldReader {\r\n    private _bits: number[] = [];\r\n    private _readIndex: number = 0;\r\n\r\n    constructor(source: string, startIndex: number, stopIndex: number) {\r\n        for (let i: number = startIndex; i < stopIndex; i++) {\r\n            const value: number = base64CharCodeToInt[source.charCodeAt(i)];\r\n            this._bits.push((value >> 5) & 0x1);\r\n            this._bits.push((value >> 4) & 0x1);\r\n            this._bits.push((value >> 3) & 0x1);\r\n            this._bits.push((value >> 2) & 0x1);\r\n            this._bits.push((value >> 1) & 0x1);\r\n            this._bits.push(value & 0x1);\r\n        }\r\n    }\r\n\r\n    public read(bitCount: number): number {\r\n        let result: number = 0;\r\n        while (bitCount > 0) {\r\n            result = result << 1;\r\n            result += this._bits[this._readIndex++];\r\n            bitCount--;\r\n        }\r\n        return result;\r\n    }\r\n\r\n    public readLongTail(minValue: number, minBits: number): number {\r\n        let result: number = minValue;\r\n        let numBits: number = minBits;\r\n        while (this._bits[this._readIndex++]) {\r\n            result += 1 << numBits;\r\n            numBits++;\r\n        }\r\n        while (numBits > 0) {\r\n            numBits--;\r\n            if (this._bits[this._readIndex++]) {\r\n                result += 1 << numBits;\r\n            }\r\n        }\r\n        return result;\r\n    }\r\n\r\n    public readPartDuration(): number {\r\n        return this.readLongTail(1, 3);\r\n    }\r\n\r\n    public readLegacyPartDuration(): number {\r\n        return this.readLongTail(1, 2);\r\n    }\r\n\r\n    public readPinCount(): number {\r\n        return this.readLongTail(1, 0);\r\n    }\r\n\r\n    public readPitchInterval(): number {\r\n        if (this.read(1)) {\r\n            return -this.readLongTail(1, 3);\r\n        } else {\r\n            return this.readLongTail(1, 3);\r\n        }\r\n    }\r\n}\r\n\r\nclass BitFieldWriter {\r\n    private _index: number = 0;\r\n    private _bits: number[] = [];\r\n\r\n    public clear() {\r\n        this._index = 0;\r\n    }\r\n\r\n    public write(bitCount: number, value: number): void {\r\n        bitCount--;\r\n        while (bitCount >= 0) {\r\n            this._bits[this._index++] = (value >>> bitCount) & 1;\r\n            bitCount--;\r\n        }\r\n    }\r\n\r\n    public writeLongTail(minValue: number, minBits: number, value: number): void {\r\n        if (value < minValue) throw new Error(\"value out of bounds\");\r\n        value -= minValue;\r\n        let numBits: number = minBits;\r\n        while (value >= (1 << numBits)) {\r\n            this._bits[this._index++] = 1;\r\n            value -= 1 << numBits;\r\n            numBits++;\r\n        }\r\n        this._bits[this._index++] = 0;\r\n        while (numBits > 0) {\r\n            numBits--;\r\n            this._bits[this._index++] = (value >>> numBits) & 1;\r\n        }\r\n    }\r\n\r\n    public writePartDuration(value: number): void {\r\n        this.writeLongTail(1, 3, value);\r\n    }\r\n\r\n    public writePinCount(value: number): void {\r\n        this.writeLongTail(1, 0, value);\r\n    }\r\n\r\n    public writePitchInterval(value: number): void {\r\n        if (value < 0) {\r\n            this.write(1, 1); // sign\r\n            this.writeLongTail(1, 3, -value);\r\n        } else {\r\n            this.write(1, 0); // sign\r\n            this.writeLongTail(1, 3, value);\r\n        }\r\n    }\r\n\r\n    public concat(other: BitFieldWriter): void {\r\n        for (let i: number = 0; i < other._index; i++) {\r\n            this._bits[this._index++] = other._bits[i];\r\n        }\r\n    }\r\n\r\n    public encodeBase64(buffer: number[]): number[] {\r\n\r\n        for (let i: number = 0; i < this._index; i += 6) {\r\n            const value: number = (this._bits[i] << 5) | (this._bits[i + 1] << 4) | (this._bits[i + 2] << 3) | (this._bits[i + 3] << 2) | (this._bits[i + 4] << 1) | this._bits[i + 5];\r\n            buffer.push(base64IntToCharCode[value]);\r\n        }\r\n        return buffer;\r\n    }\r\n\r\n    public lengthBase64(): number {\r\n        return Math.ceil(this._index / 6);\r\n    }\r\n}\r\n\r\nexport interface NotePin {\r\n    interval: number;\r\n    time: number;\r\n    size: number;\r\n}\r\n\r\nexport function makeNotePin(interval: number, time: number, size: number): NotePin {\r\n    return { interval: interval, time: time, size: size };\r\n}\r\n\r\nexport class Note {\r\n    public pitches: number[];\r\n    public pins: NotePin[];\r\n    public start: number;\r\n    public end: number;\r\n    public continuesLastPattern: boolean;\r\n\r\n    public constructor(pitch: number, start: number, end: number, size: number, fadeout: boolean = false) {\r\n        this.pitches = [pitch];\r\n        this.pins = [makeNotePin(0, 0, size), makeNotePin(0, end - start, fadeout ? 0 : size)];\r\n        this.start = start;\r\n        this.end = end;\r\n        this.continuesLastPattern = false;\r\n    }\r\n\r\n    public pickMainInterval(): number {\r\n        let longestFlatIntervalDuration: number = 0;\r\n        let mainInterval: number = 0;\r\n        for (let pinIndex: number = 1; pinIndex < this.pins.length; pinIndex++) {\r\n            const pinA: NotePin = this.pins[pinIndex - 1];\r\n            const pinB: NotePin = this.pins[pinIndex];\r\n            if (pinA.interval == pinB.interval) {\r\n                const duration: number = pinB.time - pinA.time;\r\n                if (longestFlatIntervalDuration < duration) {\r\n                    longestFlatIntervalDuration = duration;\r\n                    mainInterval = pinA.interval;\r\n                }\r\n            }\r\n        }\r\n        if (longestFlatIntervalDuration == 0) {\r\n            let loudestSize: number = 0;\r\n            for (let pinIndex: number = 0; pinIndex < this.pins.length; pinIndex++) {\r\n                const pin: NotePin = this.pins[pinIndex];\r\n                if (loudestSize < pin.size) {\r\n                    loudestSize = pin.size;\r\n                    mainInterval = pin.interval;\r\n                }\r\n            }\r\n        }\r\n        return mainInterval;\r\n    }\r\n\r\n    public clone(): Note {\r\n        const newNote: Note = new Note(-1, this.start, this.end, 3);\r\n        newNote.pitches = this.pitches.concat();\r\n        newNote.pins = [];\r\n        for (const pin of this.pins) {\r\n            newNote.pins.push(makeNotePin(pin.interval, pin.time, pin.size));\r\n        }\r\n        newNote.continuesLastPattern = this.continuesLastPattern;\r\n        return newNote;\r\n    }\r\n\r\n    public getEndPinIndex(part: number): number {\r\n        let endPinIndex: number;\r\n        for (endPinIndex = 1; endPinIndex < this.pins.length - 1; endPinIndex++) {\r\n            if (this.pins[endPinIndex].time + this.start > part) break;\r\n        }\r\n        return endPinIndex;\r\n    }\r\n}\r\n\r\nexport class Pattern {\r\n    public notes: Note[] = [];\r\n    public readonly instruments: number[] = [0];\r\n\r\n    public cloneNotes(): Note[] {\r\n        const result: Note[] = [];\r\n        for (const note of this.notes) {\r\n            result.push(note.clone());\r\n        }\r\n        return result;\r\n    }\r\n\r\n    public reset(): void {\r\n        this.notes.length = 0;\r\n        this.instruments[0] = 0;\r\n        this.instruments.length = 1;\r\n    }\r\n\r\n    public toJsonObject(song: Song, channel: Channel, isModChannel: boolean): any {\r\n        const noteArray: Object[] = [];\r\n        for (const note of this.notes) {\r\n            // Only one ins per pattern is enforced in mod channels.\r\n            let instrument: Instrument = channel.instruments[this.instruments[0]];\r\n            let mod: number = Math.max(0, Config.modCount - note.pitches[0] - 1);\r\n            let volumeCap: number = song.getVolumeCapForSetting(isModChannel, instrument.modulators[mod], instrument.modFilterTypes[mod]);\r\n            const pointArray: Object[] = [];\r\n            for (const pin of note.pins) {\r\n                let useVol: number = isModChannel ? Math.round(pin.size) : Math.round(pin.size * 100 / volumeCap);\r\n                pointArray.push({\r\n                    \"tick\": (pin.time + note.start) * Config.rhythms[song.rhythm].stepsPerBeat / Config.partsPerBeat,\r\n                    \"pitchBend\": pin.interval,\r\n                    \"volume\": useVol,\r\n                    \"forMod\": isModChannel,\r\n                });\r\n            }\r\n\r\n            const noteObject: any = {\r\n                \"pitches\": note.pitches,\r\n                \"points\": pointArray,\r\n            };\r\n            if (note.start == 0) {\r\n                noteObject[\"continuesLastPattern\"] = note.continuesLastPattern;\r\n            }\r\n            noteArray.push(noteObject);\r\n        }\r\n\r\n        const patternObject: any = { \"notes\": noteArray };\r\n        if (song.patternInstruments) {\r\n            patternObject[\"instruments\"] = this.instruments.map(i => i + 1);\r\n        }\r\n        return patternObject;\r\n    }\r\n\r\n    public fromJsonObject(patternObject: any, song: Song, channel: Channel, importedPartsPerBeat: number, isNoiseChannel: boolean, isModChannel: boolean): void {\r\n        if (song.patternInstruments) {\r\n            if (Array.isArray(patternObject[\"instruments\"])) {\r\n                const instruments: any[] = patternObject[\"instruments\"];\r\n                const instrumentCount: number = clamp(Config.instrumentCountMin, song.getMaxInstrumentsPerPatternForChannel(channel) + 1, instruments.length);\r\n                for (let j: number = 0; j < instrumentCount; j++) {\r\n                    this.instruments[j] = clamp(0, channel.instruments.length, (instruments[j] | 0) - 1);\r\n                }\r\n                this.instruments.length = instrumentCount;\r\n            } else {\r\n                this.instruments[0] = clamp(0, channel.instruments.length, (patternObject[\"instrument\"] | 0) - 1);\r\n                this.instruments.length = 1;\r\n            }\r\n        }\r\n\r\n        if (patternObject[\"notes\"] && patternObject[\"notes\"].length > 0) {\r\n            const maxNoteCount: number = Math.min(song.beatsPerBar * Config.partsPerBeat * (isModChannel ? Config.modCount : 1), patternObject[\"notes\"].length >>> 0);\r\n\r\n            // TODO: Consider supporting notes specified in any timing order, sorting them and truncating as necessary.\r\n            //let tickClock: number = 0;\r\n            for (let j: number = 0; j < patternObject[\"notes\"].length; j++) {\r\n                if (j >= maxNoteCount) break;\r\n\r\n                const noteObject = patternObject[\"notes\"][j];\r\n                if (!noteObject || !noteObject[\"pitches\"] || !(noteObject[\"pitches\"].length >= 1) || !noteObject[\"points\"] || !(noteObject[\"points\"].length >= 2)) {\r\n                    continue;\r\n                }\r\n\r\n                const note: Note = new Note(0, 0, 0, 0);\r\n                note.pitches = [];\r\n                note.pins = [];\r\n\r\n                for (let k: number = 0; k < noteObject[\"pitches\"].length; k++) {\r\n                    const pitch: number = noteObject[\"pitches\"][k] | 0;\r\n                    if (note.pitches.indexOf(pitch) != -1) continue;\r\n                    note.pitches.push(pitch);\r\n                    if (note.pitches.length >= Config.maxChordSize) break;\r\n                }\r\n                if (note.pitches.length < 1) continue;\r\n\r\n                //let noteClock: number = tickClock;\r\n                let startInterval: number = 0;\r\n                for (let k: number = 0; k < noteObject[\"points\"].length; k++) {\r\n                    const pointObject: any = noteObject[\"points\"][k];\r\n                    if (pointObject == undefined || pointObject[\"tick\"] == undefined) continue;\r\n                    const interval: number = (pointObject[\"pitchBend\"] == undefined) ? 0 : (pointObject[\"pitchBend\"] | 0);\r\n\r\n                    const time: number = Math.round((+pointObject[\"tick\"]) * Config.partsPerBeat / importedPartsPerBeat);\r\n\r\n                    let instrument: Instrument = channel.instruments[this.instruments[0]];\r\n                    let mod: number = Math.max(0, Config.modCount - note.pitches[0] - 1);\r\n\r\n                    // Only one instrument per pattern allowed in mod channels.\r\n                    let volumeCap: number = song.getVolumeCapForSetting(isModChannel, instrument.modulators[mod], instrument.modFilterTypes[mod]);\r\n\r\n                    // The strange volume formula used for notes is not needed for mods. Some rounding errors were possible.\r\n                    // A \"forMod\" signifier was added to new JSON export to detect when the higher precision export was used in a file.\r\n                    let size: number;\r\n                    if (pointObject[\"volume\"] == undefined) {\r\n                        size = volumeCap;\r\n                    } else if (pointObject[\"forMod\"] == undefined) {\r\n                        size = Math.max(0, Math.min(volumeCap, Math.round((pointObject[\"volume\"] | 0) * volumeCap / 100)));\r\n                    }\r\n                    else {\r\n                        size = ((pointObject[\"forMod\"] | 0) > 0) ? Math.round(pointObject[\"volume\"] | 0) : Math.max(0, Math.min(volumeCap, Math.round((pointObject[\"volume\"] | 0) * volumeCap / 100)));\r\n                    }\r\n\r\n                    if (time > song.beatsPerBar * Config.partsPerBeat) continue;\r\n                    if (note.pins.length == 0) {\r\n                        //if (time < noteClock) continue;\r\n                        note.start = time;\r\n                        startInterval = interval;\r\n                    } else {\r\n                        //if (time <= noteClock) continue;\r\n                    }\r\n                    //noteClock = time;\r\n\r\n                    note.pins.push(makeNotePin(interval - startInterval, time - note.start, size));\r\n                }\r\n                if (note.pins.length < 2) continue;\r\n\r\n                note.end = note.pins[note.pins.length - 1].time + note.start;\r\n\r\n                const maxPitch: number = isNoiseChannel ? Config.drumCount - 1 : Config.maxPitch;\r\n                let lowestPitch: number = maxPitch;\r\n                let highestPitch: number = 0;\r\n                for (let k: number = 0; k < note.pitches.length; k++) {\r\n                    note.pitches[k] += startInterval;\r\n                    if (note.pitches[k] < 0 || note.pitches[k] > maxPitch) {\r\n                        note.pitches.splice(k, 1);\r\n                        k--;\r\n                    }\r\n                    if (note.pitches[k] < lowestPitch) lowestPitch = note.pitches[k];\r\n                    if (note.pitches[k] > highestPitch) highestPitch = note.pitches[k];\r\n                }\r\n                if (note.pitches.length < 1) continue;\r\n\r\n                for (let k: number = 0; k < note.pins.length; k++) {\r\n                    const pin: NotePin = note.pins[k];\r\n                    if (pin.interval + lowestPitch < 0) pin.interval = -lowestPitch;\r\n                    if (pin.interval + highestPitch > maxPitch) pin.interval = maxPitch - highestPitch;\r\n                    if (k >= 2) {\r\n                        if (pin.interval == note.pins[k - 1].interval &&\r\n                            pin.interval == note.pins[k - 2].interval &&\r\n                            pin.size == note.pins[k - 1].size &&\r\n                            pin.size == note.pins[k - 2].size) {\r\n                            note.pins.splice(k - 1, 1);\r\n                            k--;\r\n                        }\r\n                    }\r\n                }\r\n\r\n                if (note.start == 0) {\r\n                    note.continuesLastPattern = (noteObject[\"continuesLastPattern\"] === true);\r\n                } else {\r\n                    note.continuesLastPattern = false;\r\n                }\r\n\r\n                this.notes.push(note);\r\n            }\r\n        }\r\n    }\r\n}\r\n\r\nexport class Operator {\r\n    public frequency: number = 4;\r\n    public amplitude: number = 0;\r\n    public waveform: number = 0;\r\n    public pulseWidth: number = 0.5;\r\n\r\n    constructor(index: number) {\r\n        this.reset(index);\r\n    }\r\n\r\n    public reset(index: number): void {\r\n        this.frequency = 4; //defualt to 1x\r\n        this.amplitude = (index <= 1) ? Config.operatorAmplitudeMax : 0;\r\n        this.waveform = 0;\r\n        this.pulseWidth = 5;\r\n    }\r\n\r\n    public copy(other: Operator): void {\r\n        this.frequency = other.frequency;\r\n        this.amplitude = other.amplitude;\r\n        this.waveform = other.waveform;\r\n        this.pulseWidth = other.pulseWidth;\r\n    }\r\n}\r\n\r\nexport class CustomAlgorithm {\r\n    public name: string = \"\";\r\n    public carrierCount: number = 0;\r\n    public modulatedBy: number[][] = [[], [], [], [], [], []];\r\n    public associatedCarrier: number[] = [];\r\n\r\n    constructor(){\r\n        this.fromPreset(1);\r\n    }\r\n\r\n    public set(carriers: number, modulation: number[][]) {\r\n        this.reset();\r\n        this.carrierCount = carriers;\r\n        for (let i = 0; i < this.modulatedBy.length; i++) {\r\n            this.modulatedBy[i] = modulation[i];\r\n            if (i < carriers) {\r\n                this.associatedCarrier[i] = i+1;\r\n            }\r\n            this.name += (i+1);\r\n            for (let j = 0; j < modulation[i].length;j++) {\r\n                this.name += modulation[i][j];\r\n                if (modulation[i][j] > carriers-1) {\r\n                    this.associatedCarrier[modulation[i][j] - 1] = i + 1;\r\n                }\r\n                this.name += \",\";\r\n            }\r\n            if (i < carriers) {\r\n                this.name += \"|\";\r\n            } else {\r\n                this.name += \".\";\r\n            }\r\n        }\r\n    }\r\n\r\n    public reset(): void {\r\n        this.name = \"\"\r\n        this.carrierCount = 1;\r\n        this.modulatedBy = [[2, 3, 4, 5, 6], [], [], [], [], []];\r\n        this.associatedCarrier = [1, 1, 1, 1, 1, 1];\r\n    }\r\n\r\n    public copy(other: CustomAlgorithm): void {\r\n        this.name = other.name;\r\n        this.carrierCount = other.carrierCount;\r\n        this.modulatedBy = other.modulatedBy;\r\n        this.associatedCarrier = other.associatedCarrier;\r\n    }\r\n\r\n    public fromPreset(other: number): void {\r\n        this.reset();\r\n        let preset = Config.algorithms6Op[other]\r\n        this.name = preset.name;\r\n        this.carrierCount = preset.carrierCount;\r\n        for (var i = 0; i < preset.modulatedBy.length; i++) {\r\n            this.modulatedBy[i] = Array.from(preset.modulatedBy[i]);\r\n            this.associatedCarrier[i] = preset.associatedCarrier[i];\r\n        }\r\n    }\r\n}\r\n\r\nexport class CustomFeedBack { //feels redunant\r\n    public name: string = \"\";\r\n    public indices: number[][] = [[], [], [], [], [], []];\r\n\r\n    constructor() {\r\n        this.fromPreset(1);\r\n    }\r\n\r\n    public set(inIndices: number[][]) {\r\n        this.reset();\r\n        for (let i = 0; i < this.indices.length; i++) {\r\n            this.indices[i] = inIndices[i];\r\n            for (let j = 0; j < inIndices[i].length; j++) {\r\n                this.name += inIndices[i][j];\r\n                this.name += \",\";\r\n            }\r\n            this.name += \".\";\r\n        }\r\n    }\r\n\r\n    public reset(): void {\r\n        this.reset;\r\n        this.name = \"\";\r\n        this.indices = [[1], [], [], [], [], []];\r\n    }\r\n\r\n    public copy(other: CustomFeedBack): void {\r\n        this.name = other.name;\r\n        this.indices = other.indices;\r\n    }\r\n\r\n    public fromPreset(other: number): void {\r\n        this.reset();\r\n        let preset = Config.feedbacks6Op[other]\r\n        for (var i = 0; i < preset.indices.length; i++) {\r\n            this.indices[i] = Array.from(preset.indices[i]);\r\n            for (let j = 0; j < preset.indices[i].length; j++) {\r\n                this.name += preset.indices[i][j];\r\n                this.name += \",\";\r\n            }\r\n            this.name += \".\";\r\n        }\r\n    }\r\n}\r\n\r\nexport class SpectrumWave {\r\n    public spectrum: number[] = [];\r\n    public hash: number = -1;\r\n\r\n    constructor(isNoiseChannel: boolean) {\r\n        this.reset(isNoiseChannel);\r\n    }\r\n\r\n    public reset(isNoiseChannel: boolean): void {\r\n        for (let i: number = 0; i < Config.spectrumControlPoints; i++) {\r\n            if (isNoiseChannel) {\r\n                this.spectrum[i] = Math.round(Config.spectrumMax * (1 / Math.sqrt(1 + i / 3)));\r\n            } else {\r\n                const isHarmonic: boolean = i == 0 || i == 7 || i == 11 || i == 14 || i == 16 || i == 18 || i == 21 || i == 23 || i >= 25;\r\n                this.spectrum[i] = isHarmonic ? Math.max(0, Math.round(Config.spectrumMax * (1 - i / 30))) : 0;\r\n            }\r\n        }\r\n        this.markCustomWaveDirty();\r\n    }\r\n\r\n    public markCustomWaveDirty(): void {\r\n        const hashMult: number = Synth.fittingPowerOfTwo(Config.spectrumMax + 2) - 1;\r\n        let hash: number = 0;\r\n        for (const point of this.spectrum) hash = ((hash * hashMult) + point) >>> 0;\r\n        this.hash = hash;\r\n    }\r\n}\r\n\r\nclass SpectrumWaveState {\r\n    public wave: Float32Array | null = null;\r\n    private _hash: number = -1;\r\n\r\n    public getCustomWave(settings: SpectrumWave, lowestOctave: number): Float32Array {\r\n        if (this._hash == settings.hash) return this.wave!;\r\n        this._hash = settings.hash;\r\n\r\n        const waveLength: number = Config.spectrumNoiseLength;\r\n        if (this.wave == null || this.wave.length != waveLength + 1) {\r\n            this.wave = new Float32Array(waveLength + 1);\r\n        }\r\n        const wave: Float32Array = this.wave;\r\n\r\n        for (let i: number = 0; i < waveLength; i++) {\r\n            wave[i] = 0;\r\n        }\r\n\r\n        const highestOctave: number = 14;\r\n        const falloffRatio: number = 0.25;\r\n        // Nudge the 2/7 and 4/7 control points so that they form harmonic intervals.\r\n        const pitchTweak: number[] = [0, 1 / 7, Math.log2(5 / 4), 3 / 7, Math.log2(3 / 2), 5 / 7, 6 / 7];\r\n        function controlPointToOctave(point: number): number {\r\n            return lowestOctave + Math.floor(point / Config.spectrumControlPointsPerOctave) + pitchTweak[(point + Config.spectrumControlPointsPerOctave) % Config.spectrumControlPointsPerOctave];\r\n        }\r\n\r\n        let combinedAmplitude: number = 1;\r\n        for (let i: number = 0; i < Config.spectrumControlPoints + 1; i++) {\r\n            const value1: number = (i <= 0) ? 0 : settings.spectrum[i - 1];\r\n            const value2: number = (i >= Config.spectrumControlPoints) ? settings.spectrum[Config.spectrumControlPoints - 1] : settings.spectrum[i];\r\n            const octave1: number = controlPointToOctave(i - 1);\r\n            let octave2: number = controlPointToOctave(i);\r\n            if (i >= Config.spectrumControlPoints) octave2 = highestOctave + (octave2 - highestOctave) * falloffRatio;\r\n            if (value1 == 0 && value2 == 0) continue;\r\n\r\n            combinedAmplitude += 0.02 * drawNoiseSpectrum(wave, waveLength, octave1, octave2, value1 / Config.spectrumMax, value2 / Config.spectrumMax, -0.5);\r\n        }\r\n        if (settings.spectrum[Config.spectrumControlPoints - 1] > 0) {\r\n            combinedAmplitude += 0.02 * drawNoiseSpectrum(wave, waveLength, highestOctave + (controlPointToOctave(Config.spectrumControlPoints) - highestOctave) * falloffRatio, highestOctave, settings.spectrum[Config.spectrumControlPoints - 1] / Config.spectrumMax, 0, -0.5);\r\n        }\r\n\r\n        inverseRealFourierTransform(wave, waveLength);\r\n        scaleElementsByFactor(wave, 5.0 / (Math.sqrt(waveLength) * Math.pow(combinedAmplitude, 0.75)));\r\n\r\n        // Duplicate the first sample at the end for easier wrap-around interpolation.\r\n        wave[waveLength] = wave[0];\r\n\r\n        return wave;\r\n    }\r\n}\r\n\r\nexport class HarmonicsWave {\r\n    public harmonics: number[] = [];\r\n    public hash: number = -1;\r\n\r\n    constructor() {\r\n        this.reset();\r\n    }\r\n\r\n    public reset(): void {\r\n        for (let i: number = 0; i < Config.harmonicsControlPoints; i++) {\r\n            this.harmonics[i] = 0;\r\n        }\r\n        this.harmonics[0] = Config.harmonicsMax;\r\n        this.harmonics[3] = Config.harmonicsMax;\r\n        this.harmonics[6] = Config.harmonicsMax;\r\n        this.markCustomWaveDirty();\r\n    }\r\n\r\n    public markCustomWaveDirty(): void {\r\n        const hashMult: number = Synth.fittingPowerOfTwo(Config.harmonicsMax + 2) - 1;\r\n        let hash: number = 0;\r\n        for (const point of this.harmonics) hash = ((hash * hashMult) + point) >>> 0;\r\n        this.hash = hash;\r\n    }\r\n}\r\n\r\nclass HarmonicsWaveState {\r\n    public wave: Float32Array | null = null;\r\n    private _hash: number = -1;\r\n    private _generatedForType: InstrumentType;\r\n\r\n    public getCustomWave(settings: HarmonicsWave, instrumentType: InstrumentType): Float32Array {\r\n        if (this._hash == settings.hash && this._generatedForType == instrumentType) return this.wave!;\r\n        this._hash = settings.hash;\r\n        this._generatedForType = instrumentType;\r\n\r\n        const harmonicsRendered: number = (instrumentType == InstrumentType.pickedString) ? Config.harmonicsRenderedForPickedString : Config.harmonicsRendered;\r\n\r\n        const waveLength: number = Config.harmonicsWavelength;\r\n        const retroWave: Float32Array = getDrumWave(0, null, null);\r\n\r\n        if (this.wave == null || this.wave.length != waveLength + 1) {\r\n            this.wave = new Float32Array(waveLength + 1);\r\n        }\r\n        const wave: Float32Array = this.wave;\r\n\r\n        for (let i: number = 0; i < waveLength; i++) {\r\n            wave[i] = 0;\r\n        }\r\n\r\n        const overallSlope: number = -0.25;\r\n        let combinedControlPointAmplitude: number = 1;\r\n\r\n        for (let harmonicIndex: number = 0; harmonicIndex < harmonicsRendered; harmonicIndex++) {\r\n            const harmonicFreq: number = harmonicIndex + 1;\r\n            let controlValue: number = harmonicIndex < Config.harmonicsControlPoints ? settings.harmonics[harmonicIndex] : settings.harmonics[Config.harmonicsControlPoints - 1];\r\n            if (harmonicIndex >= Config.harmonicsControlPoints) {\r\n                controlValue *= 1 - (harmonicIndex - Config.harmonicsControlPoints) / (harmonicsRendered - Config.harmonicsControlPoints);\r\n            }\r\n            const normalizedValue: number = controlValue / Config.harmonicsMax;\r\n            let amplitude: number = Math.pow(2, controlValue - Config.harmonicsMax + 1) * Math.sqrt(normalizedValue);\r\n            if (harmonicIndex < Config.harmonicsControlPoints) {\r\n                combinedControlPointAmplitude += amplitude;\r\n            }\r\n            amplitude *= Math.pow(harmonicFreq, overallSlope);\r\n\r\n            // Multiply all the sine wave amplitudes by 1 or -1 based on the LFSR\r\n            // retro wave (effectively random) to avoid egregiously tall spikes.\r\n            amplitude *= retroWave[harmonicIndex + 589];\r\n\r\n            wave[waveLength - harmonicFreq] = amplitude;\r\n        }\r\n\r\n        inverseRealFourierTransform(wave, waveLength);\r\n\r\n        // Limit the maximum wave amplitude.\r\n        const mult: number = 1 / Math.pow(combinedControlPointAmplitude, 0.7);\r\n        for (let i: number = 0; i < wave.length; i++) wave[i] *= mult;\r\n\r\n        performIntegralOld(wave);\r\n\r\n        // The first sample should be zero, and we'll duplicate it at the end for easier interpolation.\r\n        wave[waveLength] = wave[0];\r\n\r\n        return wave;\r\n    }\r\n}\r\n\r\nexport class FilterControlPoint {\r\n    public freq: number = 0;\r\n    public gain: number = Config.filterGainCenter;\r\n    public type: FilterType = FilterType.peak;\r\n\r\n    public set(freqSetting: number, gainSetting: number): void {\r\n        this.freq = freqSetting;\r\n        this.gain = gainSetting;\r\n    }\r\n\r\n    public getHz(): number {\r\n        return FilterControlPoint.getHzFromSettingValue(this.freq);\r\n    }\r\n\r\n    public static getHzFromSettingValue(value: number): number {\r\n        return Config.filterFreqReferenceHz * Math.pow(2.0, (value - Config.filterFreqReferenceSetting) * Config.filterFreqStep);\r\n    }\r\n    public static getSettingValueFromHz(hz: number): number {\r\n        return Math.log2(hz / Config.filterFreqReferenceHz) / Config.filterFreqStep + Config.filterFreqReferenceSetting;\r\n    }\r\n    public static getRoundedSettingValueFromHz(hz: number): number {\r\n        return Math.max(0, Math.min(Config.filterFreqRange - 1, Math.round(FilterControlPoint.getSettingValueFromHz(hz))));\r\n    }\r\n\r\n    public getLinearGain(peakMult: number = 1.0): number {\r\n        const power: number = (this.gain - Config.filterGainCenter) * Config.filterGainStep;\r\n        const neutral: number = (this.type == FilterType.peak) ? 0.0 : -0.5;\r\n        const interpolatedPower: number = neutral + (power - neutral) * peakMult;\r\n        return Math.pow(2.0, interpolatedPower);\r\n    }\r\n    public static getRoundedSettingValueFromLinearGain(linearGain: number): number {\r\n        return Math.max(0, Math.min(Config.filterGainRange - 1, Math.round(Math.log2(linearGain) / Config.filterGainStep + Config.filterGainCenter)));\r\n    }\r\n\r\n    public toCoefficients(filter: FilterCoefficients, sampleRate: number, freqMult: number = 1.0, peakMult: number = 1.0): void {\r\n        const cornerRadiansPerSample: number = 2.0 * Math.PI * Math.max(Config.filterFreqMinHz, Math.min(Config.filterFreqMaxHz, freqMult * this.getHz())) / sampleRate;\r\n        const linearGain: number = this.getLinearGain(peakMult);\r\n        switch (this.type) {\r\n            case FilterType.lowPass:\r\n                filter.lowPass2ndOrderButterworth(cornerRadiansPerSample, linearGain);\r\n                break;\r\n            case FilterType.highPass:\r\n                filter.highPass2ndOrderButterworth(cornerRadiansPerSample, linearGain);\r\n                break;\r\n            case FilterType.peak:\r\n                filter.peak2ndOrder(cornerRadiansPerSample, linearGain, 1.0);\r\n                break;\r\n            default:\r\n                throw new Error();\r\n        }\r\n    }\r\n\r\n    public getVolumeCompensationMult(): number {\r\n        const octave: number = (this.freq - Config.filterFreqReferenceSetting) * Config.filterFreqStep;\r\n        const gainPow: number = (this.gain - Config.filterGainCenter) * Config.filterGainStep;\r\n        switch (this.type) {\r\n            case FilterType.lowPass:\r\n                const freqRelativeTo8khz: number = Math.pow(2.0, octave) * Config.filterFreqReferenceHz / 8000.0;\r\n                // Reverse the frequency warping from importing legacy simplified filters to imitate how the legacy filter cutoff setting affected volume.\r\n                const warpedFreq: number = (Math.sqrt(1.0 + 4.0 * freqRelativeTo8khz) - 1.0) / 2.0;\r\n                const warpedOctave: number = Math.log2(warpedFreq);\r\n                return Math.pow(0.5, 0.2 * Math.max(0.0, gainPow + 1.0) + Math.min(0.0, Math.max(-3.0, 0.595 * warpedOctave + 0.35 * Math.min(0.0, gainPow + 1.0))));\r\n            case FilterType.highPass:\r\n                return Math.pow(0.5, 0.125 * Math.max(0.0, gainPow + 1.0) + Math.min(0.0, 0.3 * (-octave - Math.log2(Config.filterFreqReferenceHz / 125.0)) + 0.2 * Math.min(0.0, gainPow + 1.0)));\r\n            case FilterType.peak:\r\n                const distanceFromCenter: number = octave + Math.log2(Config.filterFreqReferenceHz / 2000.0);\r\n                const freqLoudness: number = Math.pow(1.0 / (1.0 + Math.pow(distanceFromCenter / 3.0, 2.0)), 2.0);\r\n                return Math.pow(0.5, 0.125 * Math.max(0.0, gainPow) + 0.1 * freqLoudness * Math.min(0.0, gainPow));\r\n            default:\r\n                throw new Error();\r\n        }\r\n    }\r\n}\r\n\r\nexport class FilterSettings {\r\n    public readonly controlPoints: FilterControlPoint[] = [];\r\n    public controlPointCount: number = 0;\r\n\r\n    constructor() {\r\n        this.reset();\r\n    }\r\n\r\n    reset(): void {\r\n        this.controlPointCount = 0;\r\n    }\r\n\r\n    addPoint(type: FilterType, freqSetting: number, gainSetting: number): void {\r\n        let controlPoint: FilterControlPoint;\r\n        if (this.controlPoints.length <= this.controlPointCount) {\r\n            controlPoint = new FilterControlPoint();\r\n            this.controlPoints[this.controlPointCount] = controlPoint;\r\n        } else {\r\n            controlPoint = this.controlPoints[this.controlPointCount];\r\n        }\r\n        this.controlPointCount++;\r\n        controlPoint.type = type;\r\n        controlPoint.set(freqSetting, gainSetting);\r\n    }\r\n\r\n    public toJsonObject(): Object {\r\n        const filterArray: any[] = [];\r\n        for (let i: number = 0; i < this.controlPointCount; i++) {\r\n            const point: FilterControlPoint = this.controlPoints[i];\r\n            filterArray.push({\r\n                \"type\": Config.filterTypeNames[point.type],\r\n                \"cutoffHz\": Math.round(point.getHz() * 100) / 100,\r\n                \"linearGain\": Math.round(point.getLinearGain() * 10000) / 10000,\r\n            });\r\n        }\r\n        return filterArray;\r\n    }\r\n\r\n    public fromJsonObject(filterObject: any): void {\r\n        this.controlPoints.length = 0;\r\n        if (filterObject) {\r\n            for (const pointObject of filterObject) {\r\n                const point: FilterControlPoint = new FilterControlPoint();\r\n                point.type = Config.filterTypeNames.indexOf(pointObject[\"type\"]);\r\n                if (<any>point.type == -1) point.type = FilterType.peak;\r\n                if (pointObject[\"cutoffHz\"] != undefined) {\r\n                    point.freq = FilterControlPoint.getRoundedSettingValueFromHz(pointObject[\"cutoffHz\"]);\r\n                } else {\r\n                    point.freq = 0;\r\n                }\r\n                if (pointObject[\"linearGain\"] != undefined) {\r\n                    point.gain = FilterControlPoint.getRoundedSettingValueFromLinearGain(pointObject[\"linearGain\"]);\r\n                } else {\r\n                    point.gain = Config.filterGainCenter;\r\n                }\r\n                this.controlPoints.push(point);\r\n            }\r\n        }\r\n        this.controlPointCount = this.controlPoints.length;\r\n    }\r\n\r\n    // Returns true if all filter control points match in number and type (but not freq/gain)\r\n    public static filtersCanMorph(filterA: FilterSettings, filterB: FilterSettings): boolean {\r\n        if (filterA.controlPointCount != filterB.controlPointCount)\r\n            return false;\r\n        for (let i: number = 0; i < filterA.controlPointCount; i++) {\r\n            if (filterA.controlPoints[i].type != filterB.controlPoints[i].type)\r\n                return false;\r\n        }\r\n        return true;\r\n    }\r\n\r\n    // Interpolate two FilterSettings, where pos=0 is filterA and pos=1 is filterB\r\n    public static lerpFilters(filterA: FilterSettings, filterB: FilterSettings, pos: number): FilterSettings {\r\n\r\n        let lerpedFilter: FilterSettings = new FilterSettings();\r\n\r\n        // One setting or another is null, return the other.\r\n        if (filterA == null) {\r\n            return filterA;\r\n        }\r\n        if (filterB == null) {\r\n            return filterB;\r\n        }\r\n\r\n        pos = Math.max(0, Math.min(1, pos));\r\n\r\n        // Filter control points match in number and type\r\n        if (this.filtersCanMorph(filterA, filterB)) {\r\n            for (let i: number = 0; i < filterA.controlPointCount; i++) {\r\n                lerpedFilter.controlPoints[i] = new FilterControlPoint();\r\n                lerpedFilter.controlPoints[i].type = filterA.controlPoints[i].type;\r\n                lerpedFilter.controlPoints[i].freq = filterA.controlPoints[i].freq + (filterB.controlPoints[i].freq - filterA.controlPoints[i].freq) * pos;\r\n                lerpedFilter.controlPoints[i].gain = filterA.controlPoints[i].gain + (filterB.controlPoints[i].gain - filterA.controlPoints[i].gain) * pos;\r\n            }\r\n\r\n            lerpedFilter.controlPointCount = filterA.controlPointCount;\r\n\r\n            return lerpedFilter;\r\n        }\r\n        else {\r\n            // Not allowing morph of unmatching filters for now. It's a hornet's nest of problems, and I had it implemented and mostly working and it didn't sound very interesting since the shape becomes \"mushy\" in between\r\n            return (pos >= 1) ? filterB : filterA;\r\n        }\r\n        /* \r\n        // Filter control points do not match. Take all filterA points and move them to neutral at pos=1 (gain 7 for normal points, slide to edge and gain 7 for lo/hipass),\r\n        // and do the opposite for filterB points. Return a filter with points for both.\r\n        else {\r\n            let lerpedFilter: FilterSettings = new FilterSettings();\r\n            // Filter A's morph points\r\n            for (let i: number = 0; i < filterA.controlPointCount; i++) {\r\n                lerpedFilter.controlPoints[i] = new FilterControlPoint();\r\n                lerpedFilter.controlPoints[i].type = filterA.controlPoints[i].type;\r\n                lerpedFilter.controlPoints[i].gain = filterA.controlPoints[i].gain + (Config.filterGainCenter - filterA.controlPoints[i].gain) * pos;\r\n\r\n                if (filterA.controlPoints[i].type == FilterType.peak) {\r\n                    lerpedFilter.controlPoints[i].freq = filterA.controlPoints[i].freq;\r\n                }\r\n                else if (filterA.controlPoints[i].type == FilterType.highPass) {\r\n                    lerpedFilter.controlPoints[i].freq = filterA.controlPoints[i].freq * (1 - pos);\r\n                }\r\n                else {\r\n                    lerpedFilter.controlPoints[i].freq = filterA.controlPoints[i].freq + ((Config.filterFreqRange - 1) - filterA.controlPoints[i].freq) * pos;\r\n                }\r\n            }\r\n            // Filter B's morph points\r\n            for (let i: number = 0, j: number = filterA.controlPointCount; i < filterB.controlPointCount; i++, j++) {\r\n                lerpedFilter.controlPoints[j] = new FilterControlPoint();\r\n                lerpedFilter.controlPoints[j].type = filterB.controlPoints[i].type;\r\n                lerpedFilter.controlPoints[j].gain = filterB.controlPoints[i].gain + (Config.filterGainCenter - filterB.controlPoints[i].gain) * (1 - pos);\r\n\r\n                if (filterB.controlPoints[i].type == FilterType.peak) {\r\n                    lerpedFilter.controlPoints[j].freq = filterB.controlPoints[i].freq;\r\n                }\r\n                else if (filterB.controlPoints[i].type == FilterType.highPass) {\r\n                    lerpedFilter.controlPoints[j].freq = filterB.controlPoints[i].freq * pos;\r\n                }\r\n                else {\r\n                    lerpedFilter.controlPoints[j].freq = filterB.controlPoints[i].freq + ((Config.filterFreqRange - 1) - filterB.controlPoints[i].freq) * (1 - pos);\r\n                }\r\n            }\r\n\r\n            lerpedFilter.controlPointCount = filterA.controlPointCount + filterB.controlPointCount;\r\n\r\n            return lerpedFilter;\r\n        }\r\n        */\r\n    }\r\n\r\n    public convertLegacySettings(legacyCutoffSetting: number, legacyResonanceSetting: number, legacyEnv: Envelope): void {\r\n        this.reset();\r\n\r\n        const legacyFilterCutoffMaxHz: number = 8000; // This was carefully calculated to correspond to no change in response when filtering at 48000 samples per second... when using the legacy simplified low-pass filter.\r\n        const legacyFilterMax: number = 0.95;\r\n        const legacyFilterMaxRadians: number = Math.asin(legacyFilterMax / 2.0) * 2.0;\r\n        const legacyFilterMaxResonance: number = 0.95;\r\n        const legacyFilterCutoffRange: number = 11;\r\n        const legacyFilterResonanceRange: number = 8;\r\n\r\n        const resonant: boolean = (legacyResonanceSetting > 1);\r\n        const firstOrder: boolean = (legacyResonanceSetting == 0);\r\n        const cutoffAtMax: boolean = (legacyCutoffSetting == legacyFilterCutoffRange - 1);\r\n        const envDecays: boolean = (legacyEnv.type == EnvelopeType.flare || legacyEnv.type == EnvelopeType.twang || legacyEnv.type == EnvelopeType.decay || legacyEnv.type == EnvelopeType.noteSize);\r\n\r\n        const standardSampleRate: number = 48000;\r\n        const legacyHz: number = legacyFilterCutoffMaxHz * Math.pow(2.0, (legacyCutoffSetting - (legacyFilterCutoffRange - 1)) * 0.5);\r\n        const legacyRadians: number = Math.min(legacyFilterMaxRadians, 2 * Math.PI * legacyHz / standardSampleRate);\r\n\r\n        if (legacyEnv.type == EnvelopeType.none && !resonant && cutoffAtMax) {\r\n            // The response is flat and there's no envelopes, so don't even bother adding any control points.\r\n        } else if (firstOrder) {\r\n            // In general, a 1st order lowpass can be approximated by a 2nd order lowpass\r\n            // with a cutoff ~4 octaves higher (*16) and a gain of 1/16.\r\n            // However, BeepBox's original lowpass filters behaved oddly as they\r\n            // approach the nyquist frequency, so I've devised this curved conversion\r\n            // to guess at a perceptually appropriate new cutoff frequency and gain.\r\n            const extraOctaves: number = 3.5;\r\n            const targetRadians: number = legacyRadians * Math.pow(2.0, extraOctaves);\r\n            const curvedRadians: number = targetRadians / (1.0 + targetRadians / Math.PI);\r\n            const curvedHz: number = standardSampleRate * curvedRadians / (2.0 * Math.PI)\r\n            const freqSetting: number = FilterControlPoint.getRoundedSettingValueFromHz(curvedHz);\r\n            const finalHz: number = FilterControlPoint.getHzFromSettingValue(freqSetting);\r\n            const finalRadians: number = 2.0 * Math.PI * finalHz / standardSampleRate;\r\n\r\n            const legacyFilter: FilterCoefficients = new FilterCoefficients();\r\n            legacyFilter.lowPass1stOrderSimplified(legacyRadians);\r\n            const response: FrequencyResponse = new FrequencyResponse();\r\n            response.analyze(legacyFilter, finalRadians);\r\n            const legacyFilterGainAtNewRadians: number = response.magnitude();\r\n\r\n            let logGain: number = Math.log2(legacyFilterGainAtNewRadians);\r\n            // Bias slightly toward 2^(-extraOctaves):\r\n            logGain = -extraOctaves + (logGain + extraOctaves) * 0.82;\r\n            // Decaying envelopes move the cutoff frequency back into an area where the best approximation of the first order slope requires a lower gain setting.\r\n            if (envDecays) logGain = Math.min(logGain, -1.0);\r\n            const convertedGain: number = Math.pow(2.0, logGain);\r\n            const gainSetting: number = FilterControlPoint.getRoundedSettingValueFromLinearGain(convertedGain);\r\n\r\n            this.addPoint(FilterType.lowPass, freqSetting, gainSetting);\r\n        } else {\r\n            const intendedGain: number = 0.5 / (1.0 - legacyFilterMaxResonance * Math.sqrt(Math.max(0.0, legacyResonanceSetting - 1.0) / (legacyFilterResonanceRange - 2.0)));\r\n            const invertedGain: number = 0.5 / intendedGain;\r\n            const maxRadians: number = 2.0 * Math.PI * legacyFilterCutoffMaxHz / standardSampleRate;\r\n            const freqRatio: number = legacyRadians / maxRadians;\r\n            const targetRadians: number = legacyRadians * (freqRatio * Math.pow(invertedGain, 0.9) + 1.0);\r\n            const curvedRadians: number = legacyRadians + (targetRadians - legacyRadians) * invertedGain;\r\n            let curvedHz: number;\r\n            if (envDecays) {\r\n                curvedHz = standardSampleRate * Math.min(curvedRadians, legacyRadians * Math.pow(2, 0.25)) / (2.0 * Math.PI);\r\n            } else {\r\n                curvedHz = standardSampleRate * curvedRadians / (2.0 * Math.PI);\r\n            }\r\n            const freqSetting: number = FilterControlPoint.getRoundedSettingValueFromHz(curvedHz);\r\n\r\n            let legacyFilterGain: number;\r\n            if (envDecays) {\r\n                legacyFilterGain = intendedGain;\r\n            } else {\r\n                const legacyFilter: FilterCoefficients = new FilterCoefficients();\r\n                legacyFilter.lowPass2ndOrderSimplified(legacyRadians, intendedGain);\r\n                const response: FrequencyResponse = new FrequencyResponse();\r\n                response.analyze(legacyFilter, curvedRadians);\r\n                legacyFilterGain = response.magnitude();\r\n            }\r\n            if (!resonant) legacyFilterGain = Math.min(legacyFilterGain, Math.sqrt(0.5));\r\n            const gainSetting: number = FilterControlPoint.getRoundedSettingValueFromLinearGain(legacyFilterGain);\r\n\r\n            this.addPoint(FilterType.lowPass, freqSetting, gainSetting);\r\n        }\r\n\r\n        // Added for JummBox - making a 0 point filter does not truncate control points!\r\n        this.controlPoints.length = this.controlPointCount;\r\n    }\r\n\r\n    // Similar to above, but purpose-fit for quick conversions in synth calls.\r\n    public convertLegacySettingsForSynth(legacyCutoffSetting: number, legacyResonanceSetting: number, allowFirstOrder: boolean = false): void {\r\n        this.reset();\r\n\r\n        const legacyFilterCutoffMaxHz: number = 8000; // This was carefully calculated to correspond to no change in response when filtering at 48000 samples per second... when using the legacy simplified low-pass filter.\r\n        const legacyFilterMax: number = 0.95;\r\n        const legacyFilterMaxRadians: number = Math.asin(legacyFilterMax / 2.0) * 2.0;\r\n        const legacyFilterMaxResonance: number = 0.95;\r\n        const legacyFilterCutoffRange: number = 11;\r\n        const legacyFilterResonanceRange: number = 8;\r\n\r\n        const firstOrder: boolean = (legacyResonanceSetting == 0 && allowFirstOrder);\r\n        const standardSampleRate: number = 48000;\r\n        const legacyHz: number = legacyFilterCutoffMaxHz * Math.pow(2.0, (legacyCutoffSetting - (legacyFilterCutoffRange - 1)) * 0.5);\r\n        const legacyRadians: number = Math.min(legacyFilterMaxRadians, 2 * Math.PI * legacyHz / standardSampleRate);\r\n\r\n        if (firstOrder) {\r\n            // In general, a 1st order lowpass can be approximated by a 2nd order lowpass\r\n            // with a cutoff ~4 octaves higher (*16) and a gain of 1/16.\r\n            // However, BeepBox's original lowpass filters behaved oddly as they\r\n            // approach the nyquist frequency, so I've devised this curved conversion\r\n            // to guess at a perceptually appropriate new cutoff frequency and gain.\r\n            const extraOctaves: number = 3.5;\r\n            const targetRadians: number = legacyRadians * Math.pow(2.0, extraOctaves);\r\n            const curvedRadians: number = targetRadians / (1.0 + targetRadians / Math.PI);\r\n            const curvedHz: number = standardSampleRate * curvedRadians / (2.0 * Math.PI)\r\n            const freqSetting: number = FilterControlPoint.getRoundedSettingValueFromHz(curvedHz);\r\n            const finalHz: number = FilterControlPoint.getHzFromSettingValue(freqSetting);\r\n            const finalRadians: number = 2.0 * Math.PI * finalHz / standardSampleRate;\r\n\r\n            const legacyFilter: FilterCoefficients = new FilterCoefficients();\r\n            legacyFilter.lowPass1stOrderSimplified(legacyRadians);\r\n            const response: FrequencyResponse = new FrequencyResponse();\r\n            response.analyze(legacyFilter, finalRadians);\r\n            const legacyFilterGainAtNewRadians: number = response.magnitude();\r\n\r\n            let logGain: number = Math.log2(legacyFilterGainAtNewRadians);\r\n            // Bias slightly toward 2^(-extraOctaves):\r\n            logGain = -extraOctaves + (logGain + extraOctaves) * 0.82;\r\n            const convertedGain: number = Math.pow(2.0, logGain);\r\n            const gainSetting: number = FilterControlPoint.getRoundedSettingValueFromLinearGain(convertedGain);\r\n\r\n            this.addPoint(FilterType.lowPass, freqSetting, gainSetting);\r\n        } else {\r\n            const intendedGain: number = 0.5 / (1.0 - legacyFilterMaxResonance * Math.sqrt(Math.max(0.0, legacyResonanceSetting - 1.0) / (legacyFilterResonanceRange - 2.0)));\r\n            const invertedGain: number = 0.5 / intendedGain;\r\n            const maxRadians: number = 2.0 * Math.PI * legacyFilterCutoffMaxHz / standardSampleRate;\r\n            const freqRatio: number = legacyRadians / maxRadians;\r\n            const targetRadians: number = legacyRadians * (freqRatio * Math.pow(invertedGain, 0.9) + 1.0);\r\n            const curvedRadians: number = legacyRadians + (targetRadians - legacyRadians) * invertedGain;\r\n            let curvedHz: number;\r\n\r\n            curvedHz = standardSampleRate * curvedRadians / (2.0 * Math.PI);\r\n            const freqSetting: number = FilterControlPoint.getSettingValueFromHz(curvedHz);\r\n\r\n            let legacyFilterGain: number;\r\n\r\n            const legacyFilter: FilterCoefficients = new FilterCoefficients();\r\n            legacyFilter.lowPass2ndOrderSimplified(legacyRadians, intendedGain);\r\n            const response: FrequencyResponse = new FrequencyResponse();\r\n            response.analyze(legacyFilter, curvedRadians);\r\n            legacyFilterGain = response.magnitude();\r\n            const gainSetting: number = FilterControlPoint.getRoundedSettingValueFromLinearGain(legacyFilterGain);\r\n\r\n            this.addPoint(FilterType.lowPass, freqSetting, gainSetting);\r\n        }\r\n\r\n    }\r\n}\r\n\r\nexport class EnvelopeSettings {\r\n    public target: number = 0;\r\n    public index: number = 0;\r\n    public envelope: number = 0;\r\n\r\n    constructor() {\r\n        this.reset();\r\n    }\r\n\r\n    reset(): void {\r\n        this.target = 0;\r\n        this.index = 0;\r\n        this.envelope = 0;\r\n    }\r\n\r\n    public toJsonObject(): Object {\r\n        const envelopeObject: any = {\r\n            \"target\": Config.instrumentAutomationTargets[this.target].name,\r\n            \"envelope\": Config.envelopes[this.envelope].name,\r\n        };\r\n        if (Config.instrumentAutomationTargets[this.target].maxCount > 1) {\r\n            envelopeObject[\"index\"] = this.index;\r\n        }\r\n        return envelopeObject;\r\n    }\r\n\r\n    public fromJsonObject(envelopeObject: any): void {\r\n        this.reset();\r\n\r\n        let target: AutomationTarget = Config.instrumentAutomationTargets.dictionary[envelopeObject[\"target\"]];\r\n        if (target == null) target = Config.instrumentAutomationTargets.dictionary[\"noteVolume\"];\r\n        this.target = target.index;\r\n\r\n        let envelope: Envelope = Config.envelopes.dictionary[envelopeObject[\"envelope\"]];\r\n        if (envelope == null) envelope = Config.envelopes.dictionary[\"none\"];\r\n        this.envelope = envelope.index;\r\n\r\n        if (envelopeObject[\"index\"] != undefined) {\r\n            this.index = clamp(0, Config.instrumentAutomationTargets[this.target].maxCount, envelopeObject[\"index\"] | 0);\r\n        } else {\r\n            this.index = 0;\r\n        }\r\n    }\r\n}\r\n\r\n// Settings that were available to old versions of BeepBox but are no longer available in the\r\n// current version that need to be reinterpreted as a group to determine the best way to\r\n// represent them in the current version.\r\ninterface LegacySettings {\r\n    filterCutoff?: number;\r\n    filterResonance?: number;\r\n    filterEnvelope?: Envelope;\r\n    pulseEnvelope?: Envelope;\r\n    operatorEnvelopes?: Envelope[];\r\n    feedbackEnvelope?: Envelope;\r\n}\r\n\r\nexport class Instrument {\r\n    public type: InstrumentType = InstrumentType.chip;\r\n    public preset: number = 0;\r\n    public chipWave: number = 2;\r\n\t// advloop addition\r\n\tpublic isUsingAdvancedLoopControls: boolean = false;\r\n\tpublic chipWaveLoopStart: number = 0;\r\n\tpublic chipWaveLoopEnd = Config.rawRawChipWaves[this.chipWave].samples.length - 1;\r\n\tpublic chipWaveLoopMode: number = 0; // 0: loop, 1: ping-pong, 2: once, 3: play loop once\r\n\tpublic chipWavePlayBackwards: boolean = false;\r\n        public chipWaveStartOffset: number = 0;\r\n        // advloop addition\r\n    public chipNoise: number = 1;\r\n    public eqFilter: FilterSettings = new FilterSettings();\r\n    public eqFilterType: boolean = false;\r\n    public eqFilterSimpleCut: number = Config.filterSimpleCutRange - 1;\r\n    public eqFilterSimplePeak: number = 0;\r\n    public noteFilter: FilterSettings = new FilterSettings();\r\n    public noteFilterType: boolean = false;\r\n    public noteFilterSimpleCut: number = Config.filterSimpleCutRange - 1;\r\n    public noteFilterSimplePeak: number = 0;\r\n    public eqSubFilters: (FilterSettings | null)[] = [];\r\n    public noteSubFilters: (FilterSettings | null)[] = [];\r\n    public tmpEqFilterStart: FilterSettings | null;\r\n    public tmpEqFilterEnd: FilterSettings | null;\r\n    public tmpNoteFilterStart: FilterSettings | null;\r\n    public tmpNoteFilterEnd: FilterSettings | null;\r\n    public envelopes: EnvelopeSettings[] = [];\r\n    public fadeIn: number = 0;\r\n    public fadeOut: number = Config.fadeOutNeutral;\r\n    public envelopeCount: number = 0;\r\n    public transition: number = Config.transitions.dictionary[\"normal\"].index;\r\n    public pitchShift: number = 0;\r\n    public detune: number = 0;\r\n    public vibrato: number = 0;\r\n    public interval: number = 0;\r\n    public vibratoDepth: number = 0;\r\n    public vibratoSpeed: number = 10;\r\n    public vibratoDelay: number = 0;\r\n    public vibratoType: number = 0;\r\n    public unison: number = 0;\r\n    public effects: number = 0;\r\n    public chord: number = 1;\r\n    public volume: number = 0;\r\n    public pan: number = Config.panCenter;\r\n    public panDelay: number = 10;\r\n    public arpeggioSpeed: number = 12;\r\n    public fastTwoNoteArp: boolean = false;\r\n    public legacyTieOver: boolean = false;\r\n    public clicklessTransition: boolean = false;\r\n    public aliases: boolean = false;\r\n    public pulseWidth: number = Config.pulseWidthRange;\r\n    public stringSustain: number = 10;\r\n    public distortion: number = 0;\r\n    public bitcrusherFreq: number = 0;\r\n    public bitcrusherQuantization: number = 0;\r\n    public chorus: number = 0;\r\n    public reverb: number = 0;\r\n    public echoSustain: number = 0;\r\n    public echoDelay: number = 0;\r\n    public algorithm: number = 0;\r\n    public feedbackType: number = 0;\r\n    public algorithm6Op: number = 1;\r\n    public feedbackType6Op: number = 1;//default to not custom\r\n    public customAlgorithm: CustomAlgorithm = new CustomAlgorithm(); //{ name: \"1←4(2←5 3←6\", carrierCount: 3, associatedCarrier: [1, 2, 3, 1, 2, 3], modulatedBy: [[2, 3, 4], [5], [6], [], [], []] };\r\n    public customFeedbackType: CustomFeedBack = new CustomFeedBack(); //{ name: \"1↔4 2↔5 3↔6\", indices: [[3], [5], [6], [1], [2], [3]] };\r\n    public feedbackAmplitude: number = 0;\r\n    public LFOtime: number = 0;\r\n    public nextLFOtime: number = 0;\r\n    public arpTime: number = 0;\r\n    public customChipWave: Float32Array = new Float32Array(64);\r\n    public customChipWaveIntegral: Float32Array = new Float32Array(65); // One extra element for wrap-around in chipSynth.\r\n    public readonly operators: Operator[] = [];\r\n    public readonly spectrumWave: SpectrumWave;\r\n    public readonly harmonicsWave: HarmonicsWave = new HarmonicsWave();\r\n    public readonly drumsetEnvelopes: number[] = [];\r\n    public readonly drumsetSpectrumWaves: SpectrumWave[] = [];\r\n    public modChannels: number[] = [];\r\n    public modInstruments: number[] = [];\r\n    public modulators: number[] = [];\r\n    public modFilterTypes: number[] = [];\r\n    public invalidModulators: boolean[] = [];\r\n    constructor(isNoiseChannel: boolean, isModChannel: boolean) {\r\n\r\n        if (isModChannel) {\r\n            for (let mod: number = 0; mod < Config.modCount; mod++) {\r\n                this.modChannels.push(0);\r\n                this.modInstruments.push(0);\r\n                this.modulators.push(Config.modulators.dictionary[\"none\"].index);\r\n            }\r\n        }\r\n\r\n        this.spectrumWave = new SpectrumWave(isNoiseChannel);\r\n        for (let i: number = 0; i < Config.operatorCount+2; i++) {//hopefully won't break everything\r\n            this.operators[i] = new Operator(i);\r\n        }\r\n        for (let i: number = 0; i < Config.drumCount; i++) {\r\n            this.drumsetEnvelopes[i] = Config.envelopes.dictionary[\"twang 2\"].index;\r\n            this.drumsetSpectrumWaves[i] = new SpectrumWave(true);\r\n        }\r\n\r\n        for (let i = 0; i < 64; i++) {\r\n            this.customChipWave[i] = 24 - Math.floor(i * (48 / 64));\r\n        }\r\n\r\n        let sum: number = 0.0;\r\n        for (let i: number = 0; i < this.customChipWave.length; i++) {\r\n            sum += this.customChipWave[i];\r\n        }\r\n        const average: number = sum / this.customChipWave.length;\r\n\r\n        // Perform the integral on the wave. The chipSynth will perform the derivative to get the original wave back but with antialiasing.\r\n        let cumulative: number = 0;\r\n        let wavePrev: number = 0;\r\n        for (let i: number = 0; i < this.customChipWave.length; i++) {\r\n            cumulative += wavePrev;\r\n            wavePrev = this.customChipWave[i] - average;\r\n            this.customChipWaveIntegral[i] = cumulative;\r\n        }\r\n\r\n        // 65th, last sample is for anti-aliasing\r\n        this.customChipWaveIntegral[64] = 0.0;\r\n\r\n    }\r\n\r\n    public setTypeAndReset(type: InstrumentType, isNoiseChannel: boolean, isModChannel: boolean): void {\r\n        // Mod channels are forced to one type.\r\n        if (isModChannel) type = InstrumentType.mod;\r\n        this.type = type;\r\n        this.preset = type;\r\n        this.volume = 0;\r\n        this.effects = (1 << EffectType.panning); // Panning enabled by default in JB.\r\n        this.chorus = Config.chorusRange - 1;\r\n        this.reverb = 0;\r\n        this.echoSustain = Math.floor((Config.echoSustainRange - 1) * 0.5);\r\n        this.echoDelay = Math.floor((Config.echoDelayRange - 1) * 0.5);\r\n        this.eqFilter.reset();\r\n        this.eqFilterType = false;\r\n        this.eqFilterSimpleCut = Config.filterSimpleCutRange - 1;\r\n        this.eqFilterSimplePeak = 0;\r\n        for (let i: number = 0; i < Config.filterMorphCount; i++) {\r\n            this.eqSubFilters[i] = null;\r\n            this.noteSubFilters[i] = null;\r\n        }\r\n        this.noteFilter.reset();\r\n        this.noteFilterType = false;\r\n        this.noteFilterSimpleCut = Config.filterSimpleCutRange - 1;\r\n        this.noteFilterSimplePeak = 0;\r\n        this.distortion = Math.floor((Config.distortionRange - 1) * 0.75);\r\n        this.bitcrusherFreq = Math.floor((Config.bitcrusherFreqRange - 1) * 0.5)\r\n        this.bitcrusherQuantization = Math.floor((Config.bitcrusherQuantizationRange - 1) * 0.5);\r\n        this.pan = Config.panCenter;\r\n        this.panDelay = 10;\r\n        this.pitchShift = Config.pitchShiftCenter;\r\n        this.detune = Config.detuneCenter;\r\n        this.vibrato = 0;\r\n        this.unison = 0;\r\n        this.stringSustain = 10;\r\n        this.clicklessTransition = false;\r\n        this.arpeggioSpeed = 12;\r\n        this.legacyTieOver = false;\r\n        this.aliases = false;\r\n        this.fadeIn = 0;\r\n        this.fadeOut = Config.fadeOutNeutral;\r\n        this.transition = Config.transitions.dictionary[\"normal\"].index;\r\n        this.envelopeCount = 0;\r\n        switch (type) {\r\n            case InstrumentType.chip:\r\n                this.chipWave = 2;\r\n                // TODO: enable the chord effect?\r\n                this.chord = Config.chords.dictionary[\"arpeggio\"].index;\r\n\t\t\t\t\t\t\t\t // advloop addition\r\n                    this.isUsingAdvancedLoopControls = false;\r\n                    this.chipWaveLoopStart = 0;\r\n                    this.chipWaveLoopEnd = Config.rawRawChipWaves[this.chipWave].samples.length - 1;\r\n                    this.chipWaveLoopMode = 0;\r\n                    this.chipWavePlayBackwards = false;\r\n                    this.chipWaveStartOffset = 0;\r\n                    // advloop addition\r\n                break;\r\n            case InstrumentType.customChipWave:\r\n                this.chipWave = 2;\r\n                this.chord = Config.chords.dictionary[\"arpeggio\"].index;\r\n                for (let i: number = 0; i < 64; i++) {\r\n                    this.customChipWave[i] = 24 - (Math.floor(i * (48 / 64)));\r\n                }\r\n\r\n                let sum: number = 0.0;\r\n                for (let i: number = 0; i < this.customChipWave.length; i++) {\r\n                    sum += this.customChipWave[i];\r\n                }\r\n                const average: number = sum / this.customChipWave.length;\r\n\r\n                // Perform the integral on the wave. The chipSynth will perform the derivative to get the original wave back but with antialiasing.\r\n                let cumulative: number = 0;\r\n                let wavePrev: number = 0;\r\n                for (let i: number = 0; i < this.customChipWave.length; i++) {\r\n                    cumulative += wavePrev;\r\n                    wavePrev = this.customChipWave[i] - average;\r\n                    this.customChipWaveIntegral[i] = cumulative;\r\n                }\r\n\r\n                this.customChipWaveIntegral[64] = 0.0;\r\n                break;\r\n            case InstrumentType.fm:\r\n                this.chord = Config.chords.dictionary[\"custom interval\"].index;\r\n                this.algorithm = 0;\r\n                this.feedbackType = 0;\r\n                this.feedbackAmplitude = 0;\r\n                for (let i: number = 0; i < this.operators.length; i++) {\r\n                    this.operators[i].reset(i);\r\n                }\r\n                break;\r\n            case InstrumentType.fm6op:\r\n                this.transition = 1;\r\n                this.vibrato = 0;\r\n                this.effects = 1;\r\n                this.chord = 3;\r\n                this.algorithm = 0;\r\n                this.feedbackType = 0;\r\n                this.algorithm6Op = 1;\r\n                this.feedbackType6Op = 1;\r\n                this.customAlgorithm.fromPreset(1);\r\n                this.feedbackAmplitude = 0;\r\n                for (let i: number = 0; i < this.operators.length; i++) {\r\n                    this.operators[i].reset(i);\r\n                }\r\n                break;\r\n            case InstrumentType.noise:\r\n                this.chipNoise = 1;\r\n                this.chord = Config.chords.dictionary[\"arpeggio\"].index;\r\n                break;\r\n            case InstrumentType.spectrum:\r\n                this.chord = Config.chords.dictionary[\"simultaneous\"].index;\r\n                this.spectrumWave.reset(isNoiseChannel);\r\n                break;\r\n            case InstrumentType.drumset:\r\n                this.chord = Config.chords.dictionary[\"simultaneous\"].index;\r\n                for (let i: number = 0; i < Config.drumCount; i++) {\r\n                    this.drumsetEnvelopes[i] = Config.envelopes.dictionary[\"twang 2\"].index;\r\n                    if (this.drumsetSpectrumWaves[i] == undefined) {\r\n                        this.drumsetSpectrumWaves[i] = new SpectrumWave(true);\r\n                    }\r\n                    this.drumsetSpectrumWaves[i].reset(isNoiseChannel);\r\n                }\r\n                break;\r\n            case InstrumentType.harmonics:\r\n                this.chord = Config.chords.dictionary[\"simultaneous\"].index;\r\n                this.harmonicsWave.reset();\r\n                break;\r\n            case InstrumentType.pwm:\r\n                this.chord = Config.chords.dictionary[\"arpeggio\"].index;\r\n                this.pulseWidth = Config.pulseWidthRange;\r\n                break;\r\n            case InstrumentType.pickedString:\r\n                this.chord = Config.chords.dictionary[\"strum\"].index;\r\n                this.harmonicsWave.reset();\r\n                break;\r\n            case InstrumentType.mod:\r\n                this.transition = 0;\r\n                this.vibrato = 0;\r\n                this.interval = 0;\r\n                this.effects = 0;\r\n                this.chord = 0;\r\n                this.modChannels = [];\r\n                this.modInstruments = [];\r\n                this.modulators = [];\r\n                for (let mod: number = 0; mod < Config.modCount; mod++) {\r\n                    this.modChannels.push(-2);\r\n                    this.modInstruments.push(0);\r\n                    this.modulators.push(Config.modulators.dictionary[\"none\"].index);\r\n                    this.invalidModulators[mod] = false;\r\n                    this.modFilterTypes[mod] = 0;\r\n                }\r\n                break;\r\n            default:\r\n                throw new Error(\"Unrecognized instrument type: \" + type);\r\n        }\r\n        // Chip/noise instruments had arpeggio and FM had custom interval but neither\r\n        // explicitly saved the chorus setting beforeSeven so enable it here. The effects\r\n        // will otherwise get overridden when reading SongTagCode.startInstrument.\r\n        if (this.chord != Config.chords.dictionary[\"simultaneous\"].index) {\r\n            // Enable chord if it was used.\r\n            this.effects = (this.effects | (1 << EffectType.chord));\r\n        }\r\n    }\r\n\r\n    // (only) difference for JummBox: Returns whether or not the note filter was chosen for filter conversion.\r\n    public convertLegacySettings(legacySettings: LegacySettings, forceSimpleFilter: boolean): void {\r\n        let legacyCutoffSetting: number | undefined = legacySettings.filterCutoff;\r\n        let legacyResonanceSetting: number | undefined = legacySettings.filterResonance;\r\n        let legacyFilterEnv: Envelope | undefined = legacySettings.filterEnvelope;\r\n        let legacyPulseEnv: Envelope | undefined = legacySettings.pulseEnvelope;\r\n        let legacyOperatorEnvelopes: Envelope[] | undefined = legacySettings.operatorEnvelopes;\r\n        let legacyFeedbackEnv: Envelope | undefined = legacySettings.feedbackEnvelope;\r\n\r\n        // legacy defaults:\r\n        if (legacyCutoffSetting == undefined) legacyCutoffSetting = (this.type == InstrumentType.chip) ? 6 : 10;\r\n        if (legacyResonanceSetting == undefined) legacyResonanceSetting = 0;\r\n        if (legacyFilterEnv == undefined) legacyFilterEnv = Config.envelopes.dictionary[\"none\"];\r\n        if (legacyPulseEnv == undefined) legacyPulseEnv = Config.envelopes.dictionary[(this.type == InstrumentType.pwm) ? \"twang 2\" : \"none\"];\r\n        if (legacyOperatorEnvelopes == undefined) legacyOperatorEnvelopes = [Config.envelopes.dictionary[(this.type == InstrumentType.fm) ? \"note size\" : \"none\"], Config.envelopes.dictionary[\"none\"], Config.envelopes.dictionary[\"none\"], Config.envelopes.dictionary[\"none\"]];\r\n        if (legacyFeedbackEnv == undefined) legacyFeedbackEnv = Config.envelopes.dictionary[\"none\"];\r\n\r\n        // The \"punch\" envelope is special: it goes *above* the chosen cutoff. But if the cutoff was already at the max, it couldn't go any higher... except in the current version of BeepBox I raised the max cutoff so it *can* but then it sounds different, so to preserve the original sound let's just remove the punch envelope.\r\n        const legacyFilterCutoffRange: number = 11;\r\n        const cutoffAtMax: boolean = (legacyCutoffSetting == legacyFilterCutoffRange - 1);\r\n        if (cutoffAtMax && legacyFilterEnv.type == EnvelopeType.punch) legacyFilterEnv = Config.envelopes.dictionary[\"none\"];\r\n\r\n        const carrierCount: number = Config.algorithms[this.algorithm].carrierCount;\r\n        let noCarriersControlledByNoteSize: boolean = true;\r\n        let allCarriersControlledByNoteSize: boolean = true;\r\n        let noteSizeControlsSomethingElse: boolean = (legacyFilterEnv.type == EnvelopeType.noteSize) || (legacyPulseEnv.type == EnvelopeType.noteSize);\r\n        if (this.type == InstrumentType.fm) {\r\n            noteSizeControlsSomethingElse = noteSizeControlsSomethingElse || (legacyFeedbackEnv.type == EnvelopeType.noteSize);\r\n            for (let i: number = 0; i < legacyOperatorEnvelopes.length; i++) {\r\n                if (i < carrierCount) {\r\n                    if (legacyOperatorEnvelopes[i].type != EnvelopeType.noteSize) {\r\n                        allCarriersControlledByNoteSize = false;\r\n                    } else {\r\n                        noCarriersControlledByNoteSize = false;\r\n                    }\r\n                } else {\r\n                    noteSizeControlsSomethingElse = noteSizeControlsSomethingElse || (legacyOperatorEnvelopes[i].type == EnvelopeType.noteSize);\r\n                }\r\n            }\r\n        }\r\n\r\n        this.envelopeCount = 0;\r\n\r\n        if (this.type == InstrumentType.fm) {\r\n            if (allCarriersControlledByNoteSize && noteSizeControlsSomethingElse) {\r\n                this.addEnvelope(Config.instrumentAutomationTargets.dictionary[\"noteVolume\"].index, 0, Config.envelopes.dictionary[\"note size\"].index);\r\n            } else if (noCarriersControlledByNoteSize && !noteSizeControlsSomethingElse) {\r\n                this.addEnvelope(Config.instrumentAutomationTargets.dictionary[\"none\"].index, 0, Config.envelopes.dictionary[\"note size\"].index);\r\n            }\r\n        }\r\n\r\n        if (legacyFilterEnv.type == EnvelopeType.none) {\r\n            this.noteFilter.reset();\r\n            this.noteFilterType = false;\r\n            this.eqFilter.convertLegacySettings(legacyCutoffSetting, legacyResonanceSetting, legacyFilterEnv);\r\n            this.effects &= ~(1 << EffectType.noteFilter);\r\n            if (forceSimpleFilter || this.eqFilterType) {\r\n                this.eqFilterType = true;\r\n                this.eqFilterSimpleCut = legacyCutoffSetting;\r\n                this.eqFilterSimplePeak = legacyResonanceSetting;\r\n            }\r\n        } else {\r\n            this.eqFilter.reset();\r\n\r\n            this.eqFilterType = false;\r\n            this.noteFilterType = false;\r\n            this.noteFilter.convertLegacySettings(legacyCutoffSetting, legacyResonanceSetting, legacyFilterEnv);\r\n            this.effects |= 1 << EffectType.noteFilter;\r\n            this.addEnvelope(Config.instrumentAutomationTargets.dictionary[\"noteFilterAllFreqs\"].index, 0, legacyFilterEnv.index);\r\n            if (forceSimpleFilter || this.noteFilterType) {\r\n                this.noteFilterType = true;\r\n                this.noteFilterSimpleCut = legacyCutoffSetting;\r\n                this.noteFilterSimplePeak = legacyResonanceSetting;\r\n            }\r\n        }\r\n\r\n        if (legacyPulseEnv.type != EnvelopeType.none) {\r\n            this.addEnvelope(Config.instrumentAutomationTargets.dictionary[\"pulseWidth\"].index, 0, legacyPulseEnv.index);\r\n        }\r\n\r\n        for (let i: number = 0; i < legacyOperatorEnvelopes.length; i++) {\r\n            if (i < carrierCount && allCarriersControlledByNoteSize) continue;\r\n            if (legacyOperatorEnvelopes[i].type != EnvelopeType.none) {\r\n                this.addEnvelope(Config.instrumentAutomationTargets.dictionary[\"operatorAmplitude\"].index, i, legacyOperatorEnvelopes[i].index);\r\n            }\r\n        }\r\n\r\n        if (legacyFeedbackEnv.type != EnvelopeType.none) {\r\n            this.addEnvelope(Config.instrumentAutomationTargets.dictionary[\"feedbackAmplitude\"].index, 0, legacyFeedbackEnv.index);\r\n        }\r\n    }\r\n\r\n    public toJsonObject(): Object {\r\n        const instrumentObject: any = {\r\n            \"type\": Config.instrumentTypeNames[this.type],\r\n            \"volume\": this.volume,\r\n            \"eqFilter\": this.eqFilter.toJsonObject(),\r\n            \"eqFilterType\": this.eqFilterType,\r\n            \"eqSimpleCut\": this.eqFilterSimpleCut,\r\n            \"eqSimplePeak\": this.eqFilterSimplePeak\r\n        };\r\n\r\n        if (this.preset != this.type) {\r\n            instrumentObject[\"preset\"] = this.preset;\r\n        }\r\n\r\n        for (let i: number = 0; i < Config.filterMorphCount; i++) {\r\n            if (this.eqSubFilters[i] != null)\r\n                instrumentObject[\"eqSubFilters\" + i] = this.eqSubFilters[i]!.toJsonObject();\r\n        }\r\n\r\n        const effects: string[] = [];\r\n        for (const effect of Config.effectOrder) {\r\n            if (this.effects & (1 << effect)) {\r\n                effects.push(Config.effectNames[effect]);\r\n            }\r\n        }\r\n        instrumentObject[\"effects\"] = effects;\r\n\r\n\r\n        if (effectsIncludeTransition(this.effects)) {\r\n            instrumentObject[\"transition\"] = Config.transitions[this.transition].name;\r\n            instrumentObject[\"clicklessTransition\"] = this.clicklessTransition;\r\n        }\r\n        if (effectsIncludeChord(this.effects)) {\r\n            instrumentObject[\"chord\"] = this.getChord().name;\r\n            instrumentObject[\"fastTwoNoteArp\"] = this.fastTwoNoteArp;\r\n            instrumentObject[\"arpeggioSpeed\"] = this.arpeggioSpeed;\r\n        }\r\n        if (effectsIncludePitchShift(this.effects)) {\r\n            instrumentObject[\"pitchShiftSemitones\"] = this.pitchShift;\r\n        }\r\n        if (effectsIncludeDetune(this.effects)) {\r\n            instrumentObject[\"detuneCents\"] = Synth.detuneToCents(this.detune);\r\n        }\r\n        if (effectsIncludeVibrato(this.effects)) {\r\n            if (this.vibrato == -1) {\r\n                this.vibrato = 5;\r\n            }\r\n            if (this.vibrato != 5) {\r\n                instrumentObject[\"vibrato\"] = Config.vibratos[this.vibrato].name;\r\n            } else {\r\n                instrumentObject[\"vibrato\"] = \"custom\";\r\n            }\r\n            instrumentObject[\"vibratoDepth\"] = this.vibratoDepth;\r\n            instrumentObject[\"vibratoDelay\"] = this.vibratoDelay;\r\n            instrumentObject[\"vibratoSpeed\"] = this.vibratoSpeed;\r\n            instrumentObject[\"vibratoType\"] = this.vibratoType;\r\n        }\r\n        if (effectsIncludeNoteFilter(this.effects)) {\r\n            instrumentObject[\"noteFilterType\"] = this.noteFilterType;\r\n            instrumentObject[\"noteSimpleCut\"] = this.noteFilterSimpleCut;\r\n            instrumentObject[\"noteSimplePeak\"] = this.noteFilterSimplePeak;\r\n            instrumentObject[\"noteFilter\"] = this.noteFilter.toJsonObject();\r\n\r\n            for (let i: number = 0; i < Config.filterMorphCount; i++) {\r\n                if (this.noteSubFilters[i] != null)\r\n                    instrumentObject[\"noteSubFilters\" + i] = this.noteSubFilters[i]!.toJsonObject();\r\n            }\r\n        }\r\n        if (effectsIncludeDistortion(this.effects)) {\r\n            instrumentObject[\"distortion\"] = Math.round(100 * this.distortion / (Config.distortionRange - 1));\r\n            instrumentObject[\"aliases\"] = this.aliases;\r\n        }\r\n        if (effectsIncludeBitcrusher(this.effects)) {\r\n            instrumentObject[\"bitcrusherOctave\"] = (Config.bitcrusherFreqRange - 1 - this.bitcrusherFreq) * Config.bitcrusherOctaveStep;\r\n            instrumentObject[\"bitcrusherQuantization\"] = Math.round(100 * this.bitcrusherQuantization / (Config.bitcrusherQuantizationRange - 1));\r\n        }\r\n        if (effectsIncludePanning(this.effects)) {\r\n            instrumentObject[\"pan\"] = Math.round(100 * (this.pan - Config.panCenter) / Config.panCenter);\r\n            instrumentObject[\"panDelay\"] = this.panDelay;\r\n        }\r\n        if (effectsIncludeChorus(this.effects)) {\r\n            instrumentObject[\"chorus\"] = Math.round(100 * this.chorus / (Config.chorusRange - 1));\r\n        }\r\n        if (effectsIncludeEcho(this.effects)) {\r\n            instrumentObject[\"echoSustain\"] = Math.round(100 * this.echoSustain / (Config.echoSustainRange - 1));\r\n            instrumentObject[\"echoDelayBeats\"] = Math.round(1000 * (this.echoDelay + 1) * Config.echoDelayStepTicks / (Config.ticksPerPart * Config.partsPerBeat)) / 1000;\r\n        }\r\n        if (effectsIncludeReverb(this.effects)) {\r\n            instrumentObject[\"reverb\"] = Math.round(100 * this.reverb / (Config.reverbRange - 1));\r\n        }\r\n\r\n        if (this.type != InstrumentType.drumset) {\r\n            instrumentObject[\"fadeInSeconds\"] = Math.round(10000 * Synth.fadeInSettingToSeconds(this.fadeIn)) / 10000;\r\n            instrumentObject[\"fadeOutTicks\"] = Synth.fadeOutSettingToTicks(this.fadeOut);\r\n        }\r\n\r\n        if (this.type == InstrumentType.harmonics || this.type == InstrumentType.pickedString) {\r\n            instrumentObject[\"harmonics\"] = [];\r\n            for (let i: number = 0; i < Config.harmonicsControlPoints; i++) {\r\n                instrumentObject[\"harmonics\"][i] = Math.round(100 * this.harmonicsWave.harmonics[i] / Config.harmonicsMax);\r\n            }\r\n        }\r\n\r\n        if (this.type == InstrumentType.noise) {\r\n            instrumentObject[\"wave\"] = Config.chipNoises[this.chipNoise].name;\r\n        } else if (this.type == InstrumentType.spectrum) {\r\n            instrumentObject[\"spectrum\"] = [];\r\n            for (let i: number = 0; i < Config.spectrumControlPoints; i++) {\r\n                instrumentObject[\"spectrum\"][i] = Math.round(100 * this.spectrumWave.spectrum[i] / Config.spectrumMax);\r\n            }\r\n        } else if (this.type == InstrumentType.drumset) {\r\n            instrumentObject[\"drums\"] = [];\r\n            for (let j: number = 0; j < Config.drumCount; j++) {\r\n                const spectrum: number[] = [];\r\n                for (let i: number = 0; i < Config.spectrumControlPoints; i++) {\r\n                    spectrum[i] = Math.round(100 * this.drumsetSpectrumWaves[j].spectrum[i] / Config.spectrumMax);\r\n                }\r\n                instrumentObject[\"drums\"][j] = {\r\n                    \"filterEnvelope\": this.getDrumsetEnvelope(j).name,\r\n                    \"spectrum\": spectrum,\r\n                };\r\n            }\r\n        } else if (this.type == InstrumentType.chip) {\r\n            instrumentObject[\"wave\"] = Config.chipWaves[this.chipWave].name;\r\n            instrumentObject[\"unison\"] = Config.unisons[this.unison].name;\r\n\t\t\t\t\t\t// advloop addition\r\n                instrumentObject[\"isUsingAdvancedLoopControls\"] = this.isUsingAdvancedLoopControls;\r\n                instrumentObject[\"chipWaveLoopStart\"] = this.chipWaveLoopStart;\r\n                instrumentObject[\"chipWaveLoopEnd\"] = this.chipWaveLoopEnd;\r\n                instrumentObject[\"chipWaveLoopMode\"] = this.chipWaveLoopMode;\r\n                instrumentObject[\"chipWavePlayBackwards\"] = this.chipWavePlayBackwards;\r\n                instrumentObject[\"chipWaveStartOffset\"] = this.chipWaveStartOffset;\r\n                // advloop addition\r\n        } else if (this.type == InstrumentType.pwm) {\r\n            instrumentObject[\"pulseWidth\"] = this.pulseWidth;\r\n        } else if (this.type == InstrumentType.pickedString) {\r\n            instrumentObject[\"unison\"] = Config.unisons[this.unison].name;\r\n            instrumentObject[\"stringSustain\"] = Math.round(100 * this.stringSustain / (Config.stringSustainRange - 1));\r\n        } else if (this.type == InstrumentType.harmonics) {\r\n            instrumentObject[\"unison\"] = Config.unisons[this.unison].name;\r\n        } else if (this.type == InstrumentType.fm || this.type == InstrumentType.fm6op) {\r\n            const operatorArray: Object[] = [];\r\n            for (const operator of this.operators) {\r\n                operatorArray.push({\r\n                    \"frequency\": Config.operatorFrequencies[operator.frequency].name,\r\n                    \"amplitude\": operator.amplitude,\r\n                    \"waveform\": Config.operatorWaves[operator.waveform].name,\r\n                    \"pulseWidth\": operator.pulseWidth,\r\n                });\r\n            }\r\n            if(this.type == InstrumentType.fm){\r\n                instrumentObject[\"algorithm\"] = Config.algorithms[this.algorithm].name;\r\n                instrumentObject[\"feedbackType\"] = Config.feedbacks[this.feedbackType].name;\r\n                instrumentObject[\"feedbackAmplitude\"] = this.feedbackAmplitude;\r\n                instrumentObject[\"operators\"] = operatorArray;\r\n            } else {\r\n                instrumentObject[\"algorithm\"] = Config.algorithms6Op[this.algorithm6Op].name;\r\n                instrumentObject[\"feedbackType\"] = Config.feedbacks6Op[this.feedbackType6Op].name;\r\n                instrumentObject[\"feedbackAmplitude\"] = this.feedbackAmplitude;\r\n                if(this.algorithm6Op == 0){\r\n                    const customAlgorithm: any = {};\r\n                    customAlgorithm[\"mods\"] = this.customAlgorithm.modulatedBy;\r\n                    customAlgorithm[\"carrierCount\"] = this.customAlgorithm.carrierCount;\r\n                    instrumentObject[\"customAlgorithm\"] = customAlgorithm;\r\n                }\r\n                if(this.feedbackType6Op == 0){\r\n                    const customFeedback: any = {};\r\n                    customFeedback[\"mods\"] = this.customFeedbackType.indices;\r\n                    instrumentObject[\"customFeedback\"] = customFeedback;\r\n                }\r\n\r\n                instrumentObject[\"operators\"] = operatorArray;\r\n            }\r\n        } else if (this.type == InstrumentType.customChipWave) {\r\n            instrumentObject[\"wave\"] = Config.chipWaves[this.chipWave].name;\r\n            instrumentObject[\"unison\"] = Config.unisons[this.unison].name;\r\n            instrumentObject[\"customChipWave\"] = new Float64Array(64);\r\n            instrumentObject[\"customChipWaveIntegral\"] = new Float64Array(65);\r\n            for (let i: number = 0; i < this.customChipWave.length; i++) {\r\n                instrumentObject[\"customChipWave\"][i] = this.customChipWave[i];\r\n                // Meh, waste of space and can be inaccurate. It will be recalc'ed when instrument loads.\r\n                //instrumentObject[\"customChipWaveIntegral\"][i] = this.customChipWaveIntegral[i];\r\n            }\r\n        } else if (this.type == InstrumentType.mod) {\r\n            instrumentObject[\"modChannels\"] = [];\r\n            instrumentObject[\"modInstruments\"] = [];\r\n            instrumentObject[\"modSettings\"] = [];\r\n            instrumentObject[\"modStatuses\"] = [];\r\n            for (let mod: number = 0; mod < Config.modCount; mod++) {\r\n                instrumentObject[\"modChannels\"][mod] = this.modChannels[mod];\r\n                instrumentObject[\"modInstruments\"][mod] = this.modInstruments[mod];\r\n                instrumentObject[\"modSettings\"][mod] = this.modulators[mod];\r\n            }\r\n        } else {\r\n            throw new Error(\"Unrecognized instrument type\");\r\n        }\r\n\r\n        const envelopes: any[] = [];\r\n        for (let i = 0; i < this.envelopeCount; i++) {\r\n            envelopes.push(this.envelopes[i].toJsonObject());\r\n        }\r\n        instrumentObject[\"envelopes\"] = envelopes;\r\n\r\n        return instrumentObject;\r\n    }\r\n\r\n\r\n    public fromJsonObject(instrumentObject: any, isNoiseChannel: boolean, isModChannel: boolean, useSlowerRhythm: boolean, useFastTwoNoteArp: boolean, legacyGlobalReverb: number = 0): void {\r\n        if (instrumentObject == undefined) instrumentObject = {};\r\n\r\n        let type: InstrumentType = Config.instrumentTypeNames.indexOf(instrumentObject[\"type\"]);\r\n        if (<any>type == -1) type = isModChannel ? InstrumentType.mod : (isNoiseChannel ? InstrumentType.noise : InstrumentType.chip);\r\n        this.setTypeAndReset(type, isNoiseChannel, isModChannel);\r\n\r\n        if (instrumentObject[\"preset\"] != undefined) {\r\n            this.preset = instrumentObject[\"preset\"] >>> 0;\r\n        }\r\n\r\n        if (instrumentObject[\"volume\"] != undefined) {\r\n            this.volume = clamp(-Config.volumeRange / 2, (Config.volumeRange / 2) + 1, instrumentObject[\"volume\"] | 0);\r\n        } else {\r\n            this.volume = 0;\r\n        }\r\n\r\n        if (Array.isArray(instrumentObject[\"effects\"])) {\r\n            let effects: number = 0;\r\n            for (let i: number = 0; i < instrumentObject[\"effects\"].length; i++) {\r\n                effects = effects | (1 << Config.effectNames.indexOf(instrumentObject[\"effects\"][i]));\r\n            }\r\n            this.effects = (effects & ((1 << EffectType.length) - 1));\r\n        } else {\r\n            // The index of these names is reinterpreted as a bitfield, which relies on reverb and chorus being the first effects!\r\n            const legacyEffectsNames: string[] = [\"none\", \"reverb\", \"chorus\", \"chorus & reverb\"];\r\n            this.effects = legacyEffectsNames.indexOf(instrumentObject[\"effects\"]);\r\n            if (this.effects == -1) this.effects = (this.type == InstrumentType.noise) ? 0 : 1;\r\n        }\r\n\r\n        this.transition = Config.transitions.dictionary[\"normal\"].index; // default value.\r\n        const transitionProperty: any = instrumentObject[\"transition\"] || instrumentObject[\"envelope\"]; // the transition property used to be called envelope, so check that too.\r\n        if (transitionProperty != undefined) {\r\n            let transition: Transition | undefined = Config.transitions.dictionary[transitionProperty];\r\n            if (instrumentObject[\"fadeInSeconds\"] == undefined || instrumentObject[\"fadeOutTicks\"] == undefined) {\r\n                const legacySettings = (<any>{\r\n                    \"binary\": { transition: \"interrupt\", fadeInSeconds: 0.0, fadeOutTicks: -1 },\r\n                    \"seamless\": { transition: \"interrupt\", fadeInSeconds: 0.0, fadeOutTicks: -1 },\r\n                    \"sudden\": { transition: \"normal\", fadeInSeconds: 0.0, fadeOutTicks: -3 },\r\n                    \"hard\": { transition: \"normal\", fadeInSeconds: 0.0, fadeOutTicks: -3 },\r\n                    \"smooth\": { transition: \"normal\", fadeInSeconds: 0.025, fadeOutTicks: -3 },\r\n                    \"soft\": { transition: \"normal\", fadeInSeconds: 0.025, fadeOutTicks: -3 },\r\n                    // Note that the old slide transition has the same name as a new slide transition that is different.\r\n                    // Only apply legacy settings if the instrument JSON was created before, based on the presence\r\n                    // of the fade in/out fields.\r\n                    \"slide\": { transition: \"slide in pattern\", fadeInSeconds: 0.025, fadeOutTicks: -3 },\r\n                    \"cross fade\": { transition: \"normal\", fadeInSeconds: 0.04, fadeOutTicks: 6 },\r\n                    \"hard fade\": { transition: \"normal\", fadeInSeconds: 0.0, fadeOutTicks: 48 },\r\n                    \"medium fade\": { transition: \"normal\", fadeInSeconds: 0.0125, fadeOutTicks: 72 },\r\n                    \"soft fade\": { transition: \"normal\", fadeInSeconds: 0.06, fadeOutTicks: 96 },\r\n                })[transitionProperty];\r\n                if (legacySettings != undefined) {\r\n                    transition = Config.transitions.dictionary[legacySettings.transition];\r\n                    // These may be overridden below.\r\n                    this.fadeIn = Synth.secondsToFadeInSetting(legacySettings.fadeInSeconds);\r\n                    this.fadeOut = Synth.ticksToFadeOutSetting(legacySettings.fadeOutTicks);\r\n                }\r\n            }\r\n            if (transition != undefined) this.transition = transition.index;\r\n\r\n            if (this.transition != Config.transitions.dictionary[\"normal\"].index) {\r\n                // Enable transition if it was used.\r\n                this.effects = (this.effects | (1 << EffectType.transition));\r\n            }\r\n        }\r\n\r\n        // Overrides legacy settings in transition above.\r\n        if (instrumentObject[\"fadeInSeconds\"] != undefined) {\r\n            this.fadeIn = Synth.secondsToFadeInSetting(+instrumentObject[\"fadeInSeconds\"]);\r\n        }\r\n        if (instrumentObject[\"fadeOutTicks\"] != undefined) {\r\n            this.fadeOut = Synth.ticksToFadeOutSetting(+instrumentObject[\"fadeOutTicks\"]);\r\n        }\r\n\r\n        {\r\n            // Note that the chord setting may be overridden by instrumentObject[\"chorus\"] below.\r\n            const chordProperty: any = instrumentObject[\"chord\"];\r\n            const legacyChordNames: Dictionary<string> = { \"harmony\": \"simultaneous\" };\r\n            const chord: Chord | undefined = Config.chords.dictionary[legacyChordNames[chordProperty]] || Config.chords.dictionary[chordProperty];\r\n            if (chord != undefined) {\r\n                this.chord = chord.index;\r\n            } else {\r\n                // Different instruments have different default chord types based on historical behaviour.\r\n                if (this.type == InstrumentType.noise) {\r\n                    this.chord = Config.chords.dictionary[\"arpeggio\"].index;\r\n                } else if (this.type == InstrumentType.pickedString) {\r\n                    this.chord = Config.chords.dictionary[\"strum\"].index;\r\n                } else if (this.type == InstrumentType.chip) {\r\n                    this.chord = Config.chords.dictionary[\"arpeggio\"].index;\r\n                } else if (this.type == InstrumentType.fm||this.type == InstrumentType.fm6op) {\r\n                    this.chord = Config.chords.dictionary[\"custom interval\"].index;\r\n                } else {\r\n                    this.chord = Config.chords.dictionary[\"simultaneous\"].index;\r\n                }\r\n            }\r\n        }\r\n\r\n        this.unison = Config.unisons.dictionary[\"none\"].index; // default value.\r\n        const unisonProperty: any = instrumentObject[\"unison\"] || instrumentObject[\"interval\"] || instrumentObject[\"chorus\"]; // The unison property has gone by various names in the past.\r\n        if (unisonProperty != undefined) {\r\n            const legacyChorusNames: Dictionary<string> = { \"union\": \"none\", \"fifths\": \"fifth\", \"octaves\": \"octave\" };\r\n            const unison: Unison | undefined = Config.unisons.dictionary[legacyChorusNames[unisonProperty]] || Config.unisons.dictionary[unisonProperty];\r\n            if (unison != undefined) this.unison = unison.index;\r\n        }\r\n        if (instrumentObject[\"chorus\"] == \"custom harmony\") {\r\n            // The original chorus setting had an option that now maps to two different settings. Override those if necessary.\r\n            this.unison = Config.unisons.dictionary[\"hum\"].index;\r\n            this.chord = Config.chords.dictionary[\"custom interval\"].index;\r\n        }\r\n        if (this.chord != Config.chords.dictionary[\"simultaneous\"].index && !Array.isArray(instrumentObject[\"effects\"])) {\r\n            // Enable chord if it was used.\r\n            this.effects = (this.effects | (1 << EffectType.chord));\r\n        }\r\n\r\n        if (instrumentObject[\"pitchShiftSemitones\"] != undefined) {\r\n            this.pitchShift = clamp(0, Config.pitchShiftRange, Math.round(+instrumentObject[\"pitchShiftSemitones\"]));\r\n        }\r\n        if (instrumentObject[\"detuneCents\"] != undefined) {\r\n            this.detune = clamp(Config.detuneMin, Config.detuneMax + 1, Math.round(Synth.centsToDetune(+instrumentObject[\"detuneCents\"])));\r\n        }\r\n\r\n        this.vibrato = Config.vibratos.dictionary[\"none\"].index; // default value.\r\n        const vibratoProperty: any = instrumentObject[\"vibrato\"] || instrumentObject[\"effect\"]; // The vibrato property was previously called \"effect\", not to be confused with the current \"effects\".\r\n        if (vibratoProperty != undefined) {\r\n\r\n            const legacyVibratoNames: Dictionary<string> = { \"vibrato light\": \"light\", \"vibrato delayed\": \"delayed\", \"vibrato heavy\": \"heavy\" };\r\n            const vibrato: Vibrato | undefined = Config.vibratos.dictionary[legacyVibratoNames[unisonProperty]] || Config.vibratos.dictionary[vibratoProperty];\r\n            if (vibrato != undefined)\r\n                this.vibrato = vibrato.index;\r\n            else if (vibratoProperty == \"custom\")\r\n                this.vibrato = Config.vibratos.length; // custom\r\n\r\n            if (this.vibrato == Config.vibratos.length) {\r\n                this.vibratoDepth = instrumentObject[\"vibratoDepth\"];\r\n                this.vibratoSpeed = instrumentObject[\"vibratoSpeed\"];\r\n                this.vibratoDelay = instrumentObject[\"vibratoDelay\"];\r\n                this.vibratoType = instrumentObject[\"vibratoType\"];\r\n            }\r\n            else { // Set defaults for the vibrato profile\r\n                this.vibratoDepth = Config.vibratos[this.vibrato].amplitude;\r\n                this.vibratoDelay = Config.vibratos[this.vibrato].delayTicks / 2;\r\n                this.vibratoSpeed = 10; // default;\r\n                this.vibratoType = Config.vibratos[this.vibrato].type;\r\n            }\r\n\r\n            // Old songs may have a vibrato effect without explicitly enabling it.\r\n            if (vibrato != Config.vibratos.dictionary[\"none\"]) {\r\n                this.effects = (this.effects | (1 << EffectType.vibrato));\r\n            }\r\n        }\r\n\r\n        if (instrumentObject[\"pan\"] != undefined) {\r\n            this.pan = clamp(0, Config.panMax + 1, Math.round(Config.panCenter + (instrumentObject[\"pan\"] | 0) * Config.panCenter / 100));\r\n\r\n            // Old songs may have a panning effect without explicitly enabling it.\r\n            if (this.pan != Config.panCenter) {\r\n                this.effects = (this.effects | (1 << EffectType.panning));\r\n            }\r\n        } else {\r\n            this.pan = Config.panCenter;\r\n            // Still enabling pan effect, to make it a default\r\n            this.effects = (this.effects | (1 << EffectType.panning));\r\n        }\r\n\r\n        if (instrumentObject[\"panDelay\"] != undefined) {\r\n            this.panDelay = (instrumentObject[\"panDelay\"] | 0);\r\n        } else {\r\n            this.panDelay = 10;\r\n        }\r\n\r\n        if (instrumentObject[\"detune\"] != undefined) {\r\n            this.detune = clamp(Config.detuneMin, Config.detuneMax + 1, (instrumentObject[\"detune\"] | 0));\r\n        }\r\n        else if (instrumentObject[\"detuneCents\"] == undefined) {\r\n            this.detune = Config.detuneCenter;\r\n        }\r\n\r\n        if (instrumentObject[\"distortion\"] != undefined) {\r\n            this.distortion = clamp(0, Config.distortionRange, Math.round((Config.distortionRange - 1) * (instrumentObject[\"distortion\"] | 0) / 100));\r\n        }\r\n\r\n        if (instrumentObject[\"bitcrusherOctave\"] != undefined) {\r\n            this.bitcrusherFreq = Config.bitcrusherFreqRange - 1 - (+instrumentObject[\"bitcrusherOctave\"]) / Config.bitcrusherOctaveStep;\r\n        }\r\n        if (instrumentObject[\"bitcrusherQuantization\"] != undefined) {\r\n            this.bitcrusherQuantization = clamp(0, Config.bitcrusherQuantizationRange, Math.round((Config.bitcrusherQuantizationRange - 1) * (instrumentObject[\"bitcrusherQuantization\"] | 0) / 100));\r\n        }\r\n\r\n        if (instrumentObject[\"echoSustain\"] != undefined) {\r\n            this.echoSustain = clamp(0, Config.echoSustainRange, Math.round((Config.echoSustainRange - 1) * (instrumentObject[\"echoSustain\"] | 0) / 100));\r\n        }\r\n        if (instrumentObject[\"echoDelayBeats\"] != undefined) {\r\n            this.echoDelay = clamp(0, Config.echoDelayRange, Math.round((+instrumentObject[\"echoDelayBeats\"]) * (Config.ticksPerPart * Config.partsPerBeat) / Config.echoDelayStepTicks - 1.0));\r\n        }\r\n\r\n        if (!isNaN(instrumentObject[\"chorus\"])) {\r\n            this.chorus = clamp(0, Config.chorusRange, Math.round((Config.chorusRange - 1) * (instrumentObject[\"chorus\"] | 0) / 100));\r\n        }\r\n\r\n        if (instrumentObject[\"reverb\"] != undefined) {\r\n            this.reverb = clamp(0, Config.reverbRange, Math.round((Config.reverbRange - 1) * (instrumentObject[\"reverb\"] | 0) / 100));\r\n        } else {\r\n            this.reverb = legacyGlobalReverb;\r\n        }\r\n\r\n        if (instrumentObject[\"pulseWidth\"] != undefined) {\r\n            this.pulseWidth = clamp(1, Config.pulseWidthRange + 1, Math.round(instrumentObject[\"pulseWidth\"]));\r\n        } else {\r\n            this.pulseWidth = Config.pulseWidthRange;\r\n        }\r\n\r\n        if (instrumentObject[\"harmonics\"] != undefined) {\r\n            for (let i: number = 0; i < Config.harmonicsControlPoints; i++) {\r\n                this.harmonicsWave.harmonics[i] = Math.max(0, Math.min(Config.harmonicsMax, Math.round(Config.harmonicsMax * (+instrumentObject[\"harmonics\"][i]) / 100)));\r\n            }\r\n            this.harmonicsWave.markCustomWaveDirty();\r\n        } else {\r\n            this.harmonicsWave.reset();\r\n        }\r\n\r\n        if (instrumentObject[\"spectrum\"] != undefined) {\r\n            for (let i: number = 0; i < Config.spectrumControlPoints; i++) {\r\n                this.spectrumWave.spectrum[i] = Math.max(0, Math.min(Config.spectrumMax, Math.round(Config.spectrumMax * (+instrumentObject[\"spectrum\"][i]) / 100)));\r\n            }\r\n        } else {\r\n            this.spectrumWave.reset(isNoiseChannel);\r\n        }\r\n\r\n        if (instrumentObject[\"stringSustain\"] != undefined) {\r\n            this.stringSustain = clamp(0, Config.stringSustainRange, Math.round((Config.stringSustainRange - 1) * (instrumentObject[\"stringSustain\"] | 0) / 100));\r\n        } else {\r\n            this.stringSustain = 10;\r\n        }\r\n\r\n        if (this.type == InstrumentType.noise) {\r\n            this.chipNoise = Config.chipNoises.findIndex(wave => wave.name == instrumentObject[\"wave\"]);\r\n            if (this.chipNoise == -1) this.chipNoise = 1;\r\n        }\r\n\r\n        const legacyEnvelopeNames: Dictionary<string> = { \"custom\": \"note size\", \"steady\": \"none\", \"pluck 1\": \"twang 1\", \"pluck 2\": \"twang 2\", \"pluck 3\": \"twang 3\" };\r\n        const getEnvelope = (name: any): Envelope | undefined => (legacyEnvelopeNames[name] != undefined) ? Config.envelopes.dictionary[legacyEnvelopeNames[name]] : Config.envelopes.dictionary[name];\r\n\r\n        if (this.type == InstrumentType.drumset) {\r\n            if (instrumentObject[\"drums\"] != undefined) {\r\n                for (let j: number = 0; j < Config.drumCount; j++) {\r\n                    const drum: any = instrumentObject[\"drums\"][j];\r\n                    if (drum == undefined) continue;\r\n\r\n                    this.drumsetEnvelopes[j] = Config.envelopes.dictionary[\"twang 2\"].index; // default value.\r\n                    if (drum[\"filterEnvelope\"] != undefined) {\r\n                        const envelope: Envelope | undefined = getEnvelope(drum[\"filterEnvelope\"]);\r\n                        if (envelope != undefined) this.drumsetEnvelopes[j] = envelope.index;\r\n                    }\r\n                    if (drum[\"spectrum\"] != undefined) {\r\n                        for (let i: number = 0; i < Config.spectrumControlPoints; i++) {\r\n                            this.drumsetSpectrumWaves[j].spectrum[i] = Math.max(0, Math.min(Config.spectrumMax, Math.round(Config.spectrumMax * (+drum[\"spectrum\"][i]) / 100)));\r\n                        }\r\n                    }\r\n                }\r\n            }\r\n        }\r\n\r\n        if (this.type == InstrumentType.chip) {\r\n            const legacyWaveNames: Dictionary<number> = { \"triangle\": 1, \"square\": 2, \"pulse wide\": 3, \"pulse narrow\": 4, \"sawtooth\": 5, \"double saw\": 6, \"double pulse\": 7, \"spiky\": 8, \"plateau\": 0 };\r\n           \t\t\t\t const modboxWaveNames: Dictionary<number> = { \"10% pulse\": 22, \"sunsoft bass\": 23, \"loud pulse\": 24, \"sax\": 25, \"guitar\": 26, \"atari bass\": 28, \"atari pulse\": 29, \"1% pulse\": 30, \"curved sawtooth\": 31, \"viola\": 32, \"brass\": 33, \"acoustic bass\": 34, \"lyre\": 35, \"ramp pulse\": 36, \"piccolo\": 37, \"squaretooth\": 38, \"flatline\": 39, \"pnryshk a (u5)\": 40, \"pnryshk b (riff)\": 41 };\r\n             \t const sandboxWaveNames: Dictionary<number> = { \"shrill lute\": 42, \"shrill bass\": 44, \"nes pulse\": 45, \"saw bass\": 46, \"euphonium\": 47, \"shrill pulse\": 48, \"r-sawtooth\": 49, \"recorder\": 50, \"narrow saw\": 51, \"deep square\": 52, \"ring pulse\": 53, \"double sine\": 54, \"contrabass\": 55, \"double bass\": 56 };\r\n\t\t\t const zefboxWaveNames: Dictionary<number> = {\"semi-square\": 63, \"deep square\": 64, \"squaretal\": 40, \"saw wide\": 65, \"saw narrow \": 66, \"deep sawtooth\": 67, \"sawtal\": 68, \"pulse\": 69, \"triple pulse\": 70, \"high pulse\": 71,\"deep pulse\": 72 };\r\n\t\t\t const miscWaveNames: Dictionary<number> = {\"test1\": 56, \"pokey 4bit lfsr\": 57, \"pokey 5step bass\": 58, \"isolated spiky\": 59, \"unnamed 1\": 60, \"unnamed 2\": 61, \"guitar string\": 75, \"intense\": 76, \"buzz wave\": 77, \"pokey square\": 57, \"pokey bass\": 58, \"banana wave\": 83, \"test 1\": 84, \"test 2\": 84, \"real snare\": 85, \"earthbound o. guitar\": 86 };\r\n\t\t\t const paandorasboxWaveNames: Dictionary<number> = {\"kick\": 87, \"snare\": 88, \"piano1\": 89, \"WOW\": 90, \"overdrive\": 91, \"trumpet\": 92, \"saxophone\": 93, \"orchestrahit\": 94, \"detached violin\": 95, \"synth\": 96, \"sonic3snare\": 97, \"come on\": 98, \"choir\": 99, \"overdriveguitar\": 100, \"flute\": 101, \"legato violin\": 102, \"tremolo violin\": 103, \"amen break\": 104, \"pizzicato violin\": 105, \"tim allen grunt\": 106, \"tuba\": 107, \"loopingcymbal\": 108, \"standardkick\": 109, \"standardsnare\": 110, \"closedhihat\": 111, \"foothihat\": 112, \"openhihat\": 113, \"crashcymbal\": 114, \"pianoC4\": 115, \"liver pad\": 116, \"marimba\": 117, \"susdotwav\": 118, \"wackyboxtts\": 119};\r\n\t\t\t// const paandorasbetaWaveNames = {\"contrabass\": 55, \"double bass\": 56 };\r\n\t\t//this.chipWave = legacyWaveNames[instrumentObject[\"wave\"]] != undefined ? legacyWaveNames[instrumentObject[\"wave\"]] : Config.chipWaves.findIndex(wave => wave.name == instrumentObject[\"wave\"]);\r\n            this.chipWave = -1;\r\n            const rawName: string = instrumentObject[\"wave\"];\r\n            for (const table of [\r\n                legacyWaveNames,\r\n                modboxWaveNames,\r\n                sandboxWaveNames,\r\n                zefboxWaveNames,\r\n                miscWaveNames,\r\n                paandorasboxWaveNames\r\n            ]) {\r\n                if (this.chipWave == -1 && table[rawName] != undefined && Config.chipWaves[table[rawName]] != undefined) {\r\n                    this.chipWave = table[rawName];\r\n                    break;\r\n                }\r\n            }\r\n            if (this.chipWave == -1) {\r\n                const potentialChipWaveIndex: number = Config.chipWaves.findIndex(wave => wave.name == rawName);\r\n                if (potentialChipWaveIndex != -1) this.chipWave = potentialChipWaveIndex;\r\n            }\r\n            // this.chipWave = legacyWaveNames[instrumentObject[\"wave\"]] != undefined ? legacyWaveNames[instrumentObject[\"wave\"]] : modboxWaveNames[instrumentObject[\"wave\"]] != undefined ? modboxWaveNames[instrumentObject[\"wave\"]] : sandboxWaveNames[instrumentObject[\"wave\"]] != undefined ? sandboxWaveNames[instrumentObject[\"wave\"]] : zefboxWaveNames[instrumentObject[\"wave\"]] != undefined ? zefboxWaveNames[instrumentObject[\"wave\"]] : miscWaveNames[instrumentObject[\"wave\"]] != undefined ? miscWaveNames[instrumentObject[\"wave\"]] : paandorasboxWaveNames[instrumentObject[\"wave\"]] != undefined ? paandorasboxWaveNames[instrumentObject[\"wave\"]] : Config.chipWaves.findIndex(wave => wave.name == instrumentObject[\"wave\"]); \r\n\t\tif (this.chipWave == -1) this.chipWave = 1;\r\n        }\r\n\r\n        if (this.type == InstrumentType.fm || this.type == InstrumentType.fm6op) {\r\n            if(this.type == InstrumentType.fm) {\r\n                this.algorithm = Config.algorithms.findIndex(algorithm => algorithm.name == instrumentObject[\"algorithm\"]);\r\n                if (this.algorithm == -1) this.algorithm = 0;\r\n                this.feedbackType = Config.feedbacks.findIndex(feedback => feedback.name == instrumentObject[\"feedbackType\"]);\r\n                if (this.feedbackType == -1) this.feedbackType = 0;\r\n            } else {\r\n                this.algorithm6Op = Config.algorithms6Op.findIndex(algorithm6Op => algorithm6Op.name == instrumentObject[\"algorithm\"]);\r\n                if (this.algorithm6Op == -1) this.algorithm6Op = 1;\r\n                if(this.algorithm6Op == 0){ \r\n                    this.customAlgorithm.set(instrumentObject[\"customAlgorithm\"][\"carrierCount\"], instrumentObject[\"customAlgorithm\"][\"mods\"]);\r\n                } else{\r\n                    this.customAlgorithm.fromPreset(this.algorithm6Op);\r\n                }\r\n                this.feedbackType6Op = Config.feedbacks6Op.findIndex(feedback6Op => feedback6Op.name == instrumentObject[\"feedbackType\"]);\r\n                if (this.feedbackType6Op == -1) this.feedbackType6Op = 1;\r\n                if(this.feedbackType6Op == 0) {\r\n                    this.customFeedbackType.set(instrumentObject[\"customFeedback\"][\"mods\"]);\r\n                }else{\r\n                    this.customFeedbackType.fromPreset(this.feedbackType6Op)\r\n                }\r\n            }\r\n            if (instrumentObject[\"feedbackAmplitude\"] != undefined) {\r\n                this.feedbackAmplitude = clamp(0, Config.operatorAmplitudeMax + 1, instrumentObject[\"feedbackAmplitude\"] | 0);\r\n            } else {\r\n                this.feedbackAmplitude = 0;\r\n            }\r\n\r\n            for (let j: number = 0; j < Config.operatorCount + (this.type == InstrumentType.fm6op?2:0); j++) {\r\n                const operator: Operator = this.operators[j];\r\n                let operatorObject: any = undefined;\r\n                if (instrumentObject[\"operators\"] != undefined) operatorObject = instrumentObject[\"operators\"][j];\r\n                if (operatorObject == undefined) operatorObject = {};\r\n\r\n                operator.frequency = Config.operatorFrequencies.findIndex(freq => freq.name == operatorObject[\"frequency\"]);\r\n                if (operator.frequency == -1) operator.frequency = 0;\r\n                if (operatorObject[\"amplitude\"] != undefined) {\r\n                    operator.amplitude = clamp(0, Config.operatorAmplitudeMax + 1, operatorObject[\"amplitude\"] | 0);\r\n                } else {\r\n                    operator.amplitude = 0;\r\n                }\r\n                if (operatorObject[\"waveform\"] != undefined) {\r\n                    operator.waveform = Config.operatorWaves.findIndex(wave => wave.name == operatorObject[\"waveform\"]);\r\n                    if (operator.waveform == -1) {\r\n                        // GoldBox compatibility\r\n                        if (operatorObject[\"waveform\"] == \"square\") {\r\n                            operator.waveform = Config.operatorWaves.dictionary[\"pulse width\"].index;\r\n                            operator.pulseWidth = 5;\r\n                        } else {\r\n                            operator.waveform = 0;\r\n                        }\r\n\r\n                    }\r\n                } else {\r\n                    operator.waveform = 0;\r\n                }\r\n                if (operatorObject[\"pulseWidth\"] != undefined) {\r\n                    operator.pulseWidth = operatorObject[\"pulseWidth\"] | 0;\r\n                } else {\r\n                    operator.pulseWidth = 5;\r\n                }\r\n            }\r\n        }\r\n        else if (this.type == InstrumentType.customChipWave) {\r\n            if (instrumentObject[\"customChipWave\"]) {\r\n\r\n                for (let i: number = 0; i < 64; i++) {\r\n                    this.customChipWave[i] = instrumentObject[\"customChipWave\"][i];\r\n                }\r\n\r\n\r\n                let sum: number = 0.0;\r\n                for (let i: number = 0; i < this.customChipWave.length; i++) {\r\n                    sum += this.customChipWave[i];\r\n                }\r\n                const average: number = sum / this.customChipWave.length;\r\n\r\n                // Perform the integral on the wave. The chipSynth will perform the derivative to get the original wave back but with antialiasing.\r\n                let cumulative: number = 0;\r\n                let wavePrev: number = 0;\r\n                for (let i: number = 0; i < this.customChipWave.length; i++) {\r\n                    cumulative += wavePrev;\r\n                    wavePrev = this.customChipWave[i] - average;\r\n                    this.customChipWaveIntegral[i] = cumulative;\r\n                }\r\n\r\n                // 65th, last sample is for anti-aliasing\r\n                this.customChipWaveIntegral[64] = 0.0;\r\n            }\r\n        } else if (this.type == InstrumentType.mod) {\r\n            if (instrumentObject[\"modChannels\"] != undefined) {\r\n                for (let mod: number = 0; mod < Config.modCount; mod++) {\r\n                    this.modChannels[mod] = instrumentObject[\"modChannels\"][mod];\r\n                    this.modInstruments[mod] = instrumentObject[\"modInstruments\"][mod];\r\n                    this.modulators[mod] = instrumentObject[\"modSettings\"][mod];\r\n                }\r\n            }\r\n        }\r\n\r\n        if (this.type != InstrumentType.mod) {\r\n            // Arpeggio speed\r\n            if (this.chord == Config.chords.dictionary[\"arpeggio\"].index && instrumentObject[\"arpeggioSpeed\"] != undefined) {\r\n                this.arpeggioSpeed = instrumentObject[\"arpeggioSpeed\"];\r\n            }\r\n            else {\r\n                this.arpeggioSpeed = (useSlowerRhythm) ? 9 : 12; // Decide whether to import arps as x3/4 speed\r\n            }\r\n\r\n            if (instrumentObject[\"fastTwoNoteArp\"] != undefined) {\r\n                this.fastTwoNoteArp = instrumentObject[\"fastTwoNoteArp\"];\r\n            }\r\n            else {\r\n                this.fastTwoNoteArp = useFastTwoNoteArp;\r\n            }\r\n\r\n            if (instrumentObject[\"clicklessTransition\"] != undefined) {\r\n                this.clicklessTransition = instrumentObject[\"clicklessTransition\"];\r\n            }\r\n            else {\r\n                this.clicklessTransition = false;\r\n            }\r\n\r\n            if (instrumentObject[\"aliases\"] != undefined) {\r\n                this.aliases = instrumentObject[\"aliases\"];\r\n            }\r\n            else {\r\n                this.aliases = false;\r\n            }\r\n\r\n            if (instrumentObject[\"noteFilterType\"] != undefined) {\r\n                this.noteFilterType = instrumentObject[\"noteFilterType\"];\r\n            }\r\n            if (instrumentObject[\"noteSimpleCut\"] != undefined) {\r\n                this.noteFilterSimpleCut = instrumentObject[\"noteSimpleCut\"];\r\n            }\r\n            if (instrumentObject[\"noteSimplePeak\"] != undefined) {\r\n                this.noteFilterSimplePeak = instrumentObject[\"noteSimplePeak\"];\r\n            }\r\n            if (instrumentObject[\"noteFilter\"] != undefined) {\r\n                this.noteFilter.fromJsonObject(instrumentObject[\"noteFilter\"]);\r\n            } else {\r\n                this.noteFilter.reset();\r\n            }\r\n            for (let i: number = 0; i < Config.filterMorphCount; i++) {\r\n                if (Array.isArray(instrumentObject[\"noteSubFilters\" + i])) {\r\n                    this.noteSubFilters[i] = new FilterSettings();\r\n                    this.noteSubFilters[i]!.fromJsonObject(instrumentObject[\"noteSubFilters\" + i]);\r\n                }\r\n            }\r\n            if (instrumentObject[\"eqFilterType\"] != undefined) {\r\n                this.eqFilterType = instrumentObject[\"eqFilterType\"];\r\n            }\r\n            if (instrumentObject[\"eqSimpleCut\"] != undefined) {\r\n                this.eqFilterSimpleCut = instrumentObject[\"eqSimpleCut\"];\r\n            }\r\n            if (instrumentObject[\"eqSimplePeak\"] != undefined) {\r\n                this.eqFilterSimplePeak = instrumentObject[\"eqSimplePeak\"];\r\n            }\r\n            if (Array.isArray(instrumentObject[\"eqFilter\"])) {\r\n                this.eqFilter.fromJsonObject(instrumentObject[\"eqFilter\"]);\r\n            } else {\r\n                this.eqFilter.reset();\r\n\r\n                const legacySettings: LegacySettings = {};\r\n\r\n                // Try converting from legacy filter settings.\r\n                const filterCutoffMaxHz: number = 8000;\r\n                const filterCutoffRange: number = 11;\r\n                const filterResonanceRange: number = 8;\r\n                if (instrumentObject[\"filterCutoffHz\"] != undefined) {\r\n                    legacySettings.filterCutoff = clamp(0, filterCutoffRange, Math.round((filterCutoffRange - 1) + 2.0 * Math.log((instrumentObject[\"filterCutoffHz\"] | 0) / filterCutoffMaxHz) / Math.LN2));\r\n                } else {\r\n                    legacySettings.filterCutoff = (this.type == InstrumentType.chip) ? 6 : 10;\r\n                }\r\n                if (instrumentObject[\"filterResonance\"] != undefined) {\r\n                    legacySettings.filterResonance = clamp(0, filterResonanceRange, Math.round((filterResonanceRange - 1) * (instrumentObject[\"filterResonance\"] | 0) / 100));\r\n                } else {\r\n                    legacySettings.filterResonance = 0;\r\n                }\r\n\r\n                legacySettings.filterEnvelope = getEnvelope(instrumentObject[\"filterEnvelope\"]);\r\n                legacySettings.pulseEnvelope = getEnvelope(instrumentObject[\"pulseEnvelope\"]);\r\n                legacySettings.feedbackEnvelope = getEnvelope(instrumentObject[\"feedbackEnvelope\"]);\r\n                if (Array.isArray(instrumentObject[\"operators\"])) {\r\n                    legacySettings.operatorEnvelopes = [];\r\n                    for (let j: number = 0; j < Config.operatorCount; j++) {\r\n                        let envelope: Envelope | undefined;\r\n                        if (instrumentObject[\"operators\"][j] != undefined) {\r\n                            envelope = getEnvelope(instrumentObject[\"operators\"][j][\"envelope\"]);\r\n                        }\r\n                        legacySettings.operatorEnvelopes[j] = (envelope != undefined) ? envelope : Config.envelopes.dictionary[\"none\"];\r\n                    }\r\n                }\r\n\r\n                // Try converting from even older legacy filter settings.\r\n                if (instrumentObject[\"filter\"] != undefined) {\r\n                    const legacyToCutoff: number[] = [10, 6, 3, 0, 8, 5, 2];\r\n                    const legacyToEnvelope: string[] = [\"none\", \"none\", \"none\", \"none\", \"decay 1\", \"decay 2\", \"decay 3\"];\r\n                    const filterNames: string[] = [\"none\", \"bright\", \"medium\", \"soft\", \"decay bright\", \"decay medium\", \"decay soft\"];\r\n                    const oldFilterNames: Dictionary<number> = { \"sustain sharp\": 1, \"sustain medium\": 2, \"sustain soft\": 3, \"decay sharp\": 4 };\r\n                    let legacyFilter: number = oldFilterNames[instrumentObject[\"filter\"]] != undefined ? oldFilterNames[instrumentObject[\"filter\"]] : filterNames.indexOf(instrumentObject[\"filter\"]);\r\n                    if (legacyFilter == -1) legacyFilter = 0;\r\n                    legacySettings.filterCutoff = legacyToCutoff[legacyFilter];\r\n                    legacySettings.filterEnvelope = getEnvelope(legacyToEnvelope[legacyFilter]);\r\n                    legacySettings.filterResonance = 0;\r\n                }\r\n\r\n                this.convertLegacySettings(legacySettings, true);\r\n            }\r\n\r\n            for (let i: number = 0; i < Config.filterMorphCount; i++) {\r\n                if (Array.isArray(instrumentObject[\"eqSubFilters\" + i])) {\r\n                    this.eqSubFilters[i] = new FilterSettings();\r\n                    this.eqSubFilters[i]!.fromJsonObject(instrumentObject[\"eqSubFilters\" + i]);\r\n                }\r\n            }\r\n\r\n            if (Array.isArray(instrumentObject[\"envelopes\"])) {\r\n                const envelopeArray: any[] = instrumentObject[\"envelopes\"];\r\n                for (let i = 0; i < envelopeArray.length; i++) {\r\n                    if (this.envelopeCount >= Config.maxEnvelopeCount) break;\r\n                    const tempEnvelope: EnvelopeSettings = new EnvelopeSettings();\r\n                    tempEnvelope.fromJsonObject(envelopeArray[i]);\r\n                    this.addEnvelope(tempEnvelope.target, tempEnvelope.index, tempEnvelope.envelope);\r\n                }\r\n            }\r\n        }\r\n   \t\t // advloop addition\r\n            if (type === 0) {\r\n                if (instrumentObject[\"isUsingAdvancedLoopControls\"] != undefined) {\r\n                    this.isUsingAdvancedLoopControls = instrumentObject[\"isUsingAdvancedLoopControls\"];\r\n                    this.chipWaveLoopStart = instrumentObject[\"chipWaveLoopStart\"];\r\n                    this.chipWaveLoopEnd = instrumentObject[\"chipWaveLoopEnd\"];\r\n                    this.chipWaveLoopMode = instrumentObject[\"chipWaveLoopMode\"];\r\n                    this.chipWavePlayBackwards = instrumentObject[\"chipWavePlayBackwards\"];\r\n                    this.chipWaveStartOffset = instrumentObject[\"chipWaveStartOffset\"];\r\n                } else {\r\n                    this.isUsingAdvancedLoopControls = false;\r\n                    this.chipWaveLoopStart = 0;\r\n                    this.chipWaveLoopEnd = Config.rawRawChipWaves[this.chipWave].samples.length - 1;\r\n                    this.chipWaveLoopMode = 0;\r\n                    this.chipWavePlayBackwards = false;\r\n                    this.chipWaveStartOffset = 0;\r\n                }\r\n            }\r\n\t}\t\r\n           // advloop addition\r\n\r\n    public static frequencyFromPitch(pitch: number): number {\r\n        //return 440.0 * Math.pow(2.0, (pitch - 69.0) / Config.pitchesPerOctave);\r\n        return 440.0 * Math.pow(2.0, (pitch - (5.0 * Config.pitchesPerOctave) - 9.0) / Config.pitchesPerOctave);\r\n        //I think this is the best we're gonna get\r\n\r\n        //return 440.0 * Math.pow(2.0, (pitch - 9) / Config.pitchesPerOctave - Math.round(Config.pitchOctaves / 2));\r\n        //return 440.0 * Math.pow(2.0, (pitch - 21) / Config.pitchesPerOctave - Math.round(Config.pitchOctaves / 2));\r\n        //return 425.85465642512778279 * Math.pow(2.0, pitch / Config.pitchesPerOctave - Math.round(Config.pitchOctaves/2));\r\n        //I'm just gonna trust that this code from microbox is correct \r\n        //changes for microtuning\r\n    }\r\n\r\n    public addEnvelope(target: number, index: number, envelope: number): void {\r\n        let makeEmpty: boolean = false;\r\n        if (!this.supportsEnvelopeTarget(target, index)) makeEmpty = true;\r\n        if (this.envelopeCount >= Config.maxEnvelopeCount) throw new Error();\r\n        while (this.envelopes.length <= this.envelopeCount) this.envelopes[this.envelopes.length] = new EnvelopeSettings();\r\n        const envelopeSettings: EnvelopeSettings = this.envelopes[this.envelopeCount];\r\n        envelopeSettings.target = makeEmpty ? Config.instrumentAutomationTargets.dictionary[\"none\"].index : target;\r\n        envelopeSettings.index = makeEmpty ? 0 : index;\r\n        envelopeSettings.envelope = envelope;\r\n        this.envelopeCount++;\r\n    }\r\n\r\n    public supportsEnvelopeTarget(target: number, index: number): boolean {\r\n        const automationTarget: AutomationTarget = Config.instrumentAutomationTargets[target];\r\n        if (index >= automationTarget.maxCount) {\r\n            return false;\r\n        }\r\n        if (automationTarget.compatibleInstruments != null && automationTarget.compatibleInstruments.indexOf(this.type) == -1) {\r\n            return false;\r\n        }\r\n        if (automationTarget.effect != null && (this.effects & (1 << automationTarget.effect)) == 0) {\r\n            return false;\r\n        }\r\n        if (automationTarget.isFilter) {\r\n            //if (automationTarget.perNote) {\r\n            let useControlPointCount: number = this.noteFilter.controlPointCount;\r\n            if (this.noteFilterType)\r\n                useControlPointCount = 1;\r\n            if (index >= useControlPointCount) return false;\r\n            //} else {\r\n            //\tif (index >= this.eqFilter.controlPointCount)   return false;\r\n            //}\r\n        }\r\n        return true;\r\n    }\r\n\r\n    public clearInvalidEnvelopeTargets(): void {\r\n        for (let envelopeIndex: number = 0; envelopeIndex < this.envelopeCount; envelopeIndex++) {\r\n            const target: number = this.envelopes[envelopeIndex].target;\r\n            const index: number = this.envelopes[envelopeIndex].index;\r\n            if (!this.supportsEnvelopeTarget(target, index)) {\r\n                this.envelopes[envelopeIndex].target = Config.instrumentAutomationTargets.dictionary[\"none\"].index;\r\n                this.envelopes[envelopeIndex].index = 0;\r\n            }\r\n        }\r\n    }\r\n\r\n    public getTransition(): Transition {\r\n        return effectsIncludeTransition(this.effects) ? Config.transitions[this.transition] :\r\n            (this.type == InstrumentType.mod ? Config.transitions.dictionary[\"interrupt\"] : Config.transitions.dictionary[\"normal\"]);\r\n    }\r\n\r\n    public getFadeInSeconds(): number {\r\n        return (this.type == InstrumentType.drumset) ? 0.0 : Synth.fadeInSettingToSeconds(this.fadeIn);\r\n    }\r\n\r\n    public getFadeOutTicks(): number {\r\n        return (this.type == InstrumentType.drumset) ? Config.drumsetFadeOutTicks : Synth.fadeOutSettingToTicks(this.fadeOut)\r\n    }\r\n\r\n    public getChord(): Chord {\r\n        return effectsIncludeChord(this.effects) ? Config.chords[this.chord] : Config.chords.dictionary[\"simultaneous\"];\r\n    }\r\n\r\n    public getDrumsetEnvelope(pitch: number): Envelope {\r\n        if (this.type != InstrumentType.drumset) throw new Error(\"Can't getDrumsetEnvelope() for non-drumset.\");\r\n        return Config.envelopes[this.drumsetEnvelopes[pitch]];\r\n    }\r\n}\r\n\r\nexport class Channel {\r\n    public octave: number = 0;\r\n    public readonly instruments: Instrument[] = [];\r\n    public readonly patterns: Pattern[] = [];\r\n    public readonly bars: number[] = [];\r\n    public muted: boolean = false;\r\n    public name: string = \"\";\r\n}\r\n\r\nexport class Song {\r\n    private static readonly _format: string = \"UltraBox\";\r\n    private static readonly _oldestBeepboxVersion: number = 2;\r\n    private static readonly _latestBeepboxVersion: number = 9;\r\n    private static readonly _oldestJummBoxVersion: number = 1;\r\n    private static readonly _latestJummBoxVersion: number = 5;\r\n    private static readonly _oldestGoldBoxVersion: number = 1;\r\n    private static readonly _latestGoldBoxVersion: number = 4;\r\n    private static readonly _oldestUltraBoxVersion: number = 1;\r\n    private static readonly _latestUltraBoxVersion: number = 3;\r\n    // One-character variant detection at the start of URL to distinguish variants such as JummBox, Or Goldbox. \"j\" and \"g\" respectively\r\n\t//also \"u\" is ultrabox lol\r\n    private static readonly _variant = 0x75; //\"u\" ~ ultrabox\r\n\r\n    public title: string;\r\n    public scale: number;\r\n    public scaleCustom: boolean[] = [];\r\n    public key: number;\r\n    public octave: number;\r\n    public tempo: number;\r\n    public reverb: number;\r\n    public beatsPerBar: number;\r\n    public barCount: number;\r\n    public patternsPerChannel: number;\r\n    public rhythm: number;\r\n    public layeredInstruments: boolean;\r\n    public patternInstruments: boolean;\r\n    public loopStart: number;\r\n    public loopLength: number;\r\n    public pitchChannelCount: number;\r\n    public noiseChannelCount: number;\r\n    public modChannelCount: number;\r\n    public readonly channels: Channel[] = [];\r\n    public limitDecay: number = 4.0;\r\n    public limitRise: number = 4000.0;\r\n    public compressionThreshold: number = 1.0;\r\n    public limitThreshold: number = 1.0;\r\n    public compressionRatio: number = 1.0;\r\n    public limitRatio: number = 1.0;\r\n    public masterGain: number = 1.0;\r\n    public inVolumeCap: number = 0.0;\r\n    public outVolumeCap: number = 0.0;\r\n\r\n    constructor(string?: string) {\r\n        if (string != undefined) {\r\n            this.fromBase64String(string);\r\n        } else {\r\n            this.initToDefault(true);\r\n        }\r\n    }\r\n\r\n    // Returns the ideal new note volume when dragging (max volume for a normal note, a \"neutral\" value for mod notes based on how they work)\r\n    public getNewNoteVolume = (isMod: boolean, modChannel?: number, modInstrument?: number, modCount?: number): number => {\r\n        if (!isMod || modChannel == undefined || modInstrument == undefined || modCount == undefined)\r\n            return 6;\r\n        else {\r\n            // Sigh, the way pitches count up and the visual ordering in the UI are flipped.\r\n            modCount = Config.modCount - modCount - 1;\r\n\r\n            let vol: number | undefined = Config.modulators[this.channels[modChannel].instruments[modInstrument].modulators[modCount]].newNoteVol;\r\n\r\n            // For tempo, actually use user defined tempo\r\n            let tempoIndex: number = Config.modulators.dictionary[\"tempo\"].index;\r\n            if (this.channels[modChannel].instruments[modInstrument].modulators[modCount] == tempoIndex) {\r\n                vol = this.tempo - Config.modulators[tempoIndex].convertRealFactor;\r\n            }\r\n\r\n            if (vol != undefined)\r\n                return vol;\r\n            else\r\n                return 6;\r\n        }\r\n    }\r\n\r\n\r\n    public getVolumeCap = (isMod: boolean, modChannel?: number, modInstrument?: number, modCount?: number): number => {\r\n        if (!isMod || modChannel == undefined || modInstrument == undefined || modCount == undefined)\r\n            return 6;\r\n        else {\r\n            // Sigh, the way pitches count up and the visual ordering in the UI are flipped.\r\n            modCount = Config.modCount - modCount - 1;\r\n\r\n            let instrument: Instrument = this.channels[modChannel].instruments[modInstrument];\r\n            let modulator = Config.modulators[instrument.modulators[modCount]];\r\n            let cap: number | undefined = modulator.maxRawVol;\r\n\r\n            if (cap != undefined) {\r\n                // For filters, cap is dependent on which filter setting is targeted\r\n                if (modulator.name == \"eq filter\" || modulator.name == \"note filter\") {\r\n                    // type 0: number of filter morphs\r\n                    // type 1/odd: number of filter x positions\r\n                    // type 2/even: number of filter y positions\r\n                    cap = Config.filterMorphCount - 1;\r\n                    if (instrument.modFilterTypes[modCount] > 0 && instrument.modFilterTypes[modCount] % 2) {\r\n                        cap = Config.filterFreqRange;\r\n                    } else if (instrument.modFilterTypes[modCount] > 0) {\r\n                        cap = Config.filterGainRange;\r\n                    }\r\n                }\r\n                return cap;\r\n            }\r\n            else\r\n                return 6;\r\n        }\r\n    }\r\n\r\n    public getVolumeCapForSetting = (isMod: boolean, modSetting: number, filterType?: number): number => {\r\n        if (!isMod)\r\n            return Config.noteSizeMax;\r\n        else {\r\n            let cap: number | undefined = Config.modulators[modSetting].maxRawVol;\r\n            if (cap != undefined) {\r\n\r\n                // For filters, cap is dependent on which filter setting is targeted\r\n                if (filterType != undefined && (Config.modulators[modSetting].name == \"eq filter\" || Config.modulators[modSetting].name == \"note filter\")) {\r\n                    // type 0: number of filter morphs\r\n                    // type 1/odd: number of filter x positions\r\n                    // type 2/even: number of filter y positions\r\n                    cap = Config.filterMorphCount - 1;\r\n                    if (filterType > 0 && filterType % 2) {\r\n                        cap = Config.filterFreqRange;\r\n                    } else if (filterType > 0) {\r\n                        cap = Config.filterGainRange;\r\n                    }\r\n                }\r\n\r\n                return cap;\r\n            }\r\n            else\r\n                return Config.noteSizeMax;\r\n        }\r\n    }\r\n\r\n    public getChannelCount(): number {\r\n        return this.pitchChannelCount + this.noiseChannelCount + this.modChannelCount;\r\n    }\r\n\r\n    public getMaxInstrumentsPerChannel(): number {\r\n        return Math.max(\r\n            this.layeredInstruments ? Config.layeredInstrumentCountMax : Config.instrumentCountMin,\r\n            this.patternInstruments ? Config.patternInstrumentCountMax : Config.instrumentCountMin);\r\n    }\r\n\r\n    public getMaxInstrumentsPerPattern(channelIndex: number): number {\r\n        return this.getMaxInstrumentsPerPatternForChannel(this.channels[channelIndex]);\r\n    }\r\n\r\n    public getMaxInstrumentsPerPatternForChannel(channel: Channel): number {\r\n        return this.layeredInstruments\r\n            ? Math.min(Config.layeredInstrumentCountMax, channel.instruments.length)\r\n            : 1;\r\n    }\r\n\r\n    public getChannelIsNoise(channelIndex: number): boolean {\r\n        return (channelIndex >= this.pitchChannelCount && channelIndex < this.pitchChannelCount + this.noiseChannelCount);\r\n    }\r\n\r\n    public getChannelIsMod(channelIndex: number): boolean {\r\n        return (channelIndex >= this.pitchChannelCount + this.noiseChannelCount);\r\n    }\r\n\r\n    public initToDefault(andResetChannels: boolean = true): void {\r\n        this.scale = 0;\r\n        //this.scaleCustom = [true, false, true, true, false, false, false, true, true, false, true, true];\r\n\tthis.scaleCustom = [true, false, false, false, false, false, false, false, false, false, false, false];\r\n        this.key = 0;\r\n        this.octave = 0;\r\n        this.loopStart = 0;\r\n        this.loopLength = 4;\r\n        this.tempo = 120;\r\n        this.reverb = 0;\r\n        this.beatsPerBar = 8;\r\n        this.barCount = 16;\r\n        this.patternsPerChannel = 8;\r\n        this.rhythm = 3;\r\n        this.layeredInstruments = false;\r\n        this.patternInstruments = false;\r\n\r\n        this.title = \"Untitled\";\r\n        document.title = EditorConfig.versionDisplayName;\r\n\r\n        if (andResetChannels) {\r\n            this.pitchChannelCount = 3;\r\n            this.noiseChannelCount = 1;\r\n            this.modChannelCount = 0;\r\n            for (let channelIndex: number = 0; channelIndex < this.getChannelCount(); channelIndex++) {\r\n                const isNoiseChannel: boolean = channelIndex >= this.pitchChannelCount && channelIndex < this.pitchChannelCount + this.noiseChannelCount;\r\n                const isModChannel: boolean = channelIndex >= this.pitchChannelCount + this.noiseChannelCount;\r\n                if (this.channels.length <= channelIndex) {\r\n                    this.channels[channelIndex] = new Channel();\r\n                }\r\n                const channel: Channel = this.channels[channelIndex];\r\n                channel.octave = Math.max(3 - channelIndex, 0); // [3, 2, 1, 0]; Descending octaves with drums at zero in last channel.\r\n\r\n                for (let pattern: number = 0; pattern < this.patternsPerChannel; pattern++) {\r\n                    if (channel.patterns.length <= pattern) {\r\n                        channel.patterns[pattern] = new Pattern();\r\n                    } else {\r\n                        channel.patterns[pattern].reset();\r\n                    }\r\n                }\r\n                channel.patterns.length = this.patternsPerChannel;\r\n\r\n                for (let instrument: number = 0; instrument < Config.instrumentCountMin; instrument++) {\r\n                    if (channel.instruments.length <= instrument) {\r\n                        channel.instruments[instrument] = new Instrument(isNoiseChannel, isModChannel);\r\n                    }\r\n                    channel.instruments[instrument].setTypeAndReset(isModChannel ? InstrumentType.mod : (isNoiseChannel ? InstrumentType.noise : InstrumentType.chip), isNoiseChannel, isModChannel);\r\n                }\r\n                channel.instruments.length = Config.instrumentCountMin;\r\n\r\n                for (let bar: number = 0; bar < this.barCount; bar++) {\r\n                    channel.bars[bar] = bar < 4 ? 1 : 0;\r\n                }\r\n                channel.bars.length = this.barCount;\r\n            }\r\n            this.channels.length = this.getChannelCount();\r\n        }\r\n    }\r\n\r\n    public toBase64String(): string {\r\n        let bits: BitFieldWriter;\r\n        let buffer: number[] = [];\r\n\r\n        buffer.push(Song._variant);\r\n                 //   buffer.push(base64IntToCharCode[Song._latestGoldBoxVersion]);\r\n\t\t buffer.push(base64IntToCharCode[Song._latestUltraBoxVersion]);\r\n\r\n        // Length of the song name string\r\n        buffer.push(SongTagCode.songTitle);\r\n        var encodedSongTitle: string = encodeURIComponent(this.title);\r\n        buffer.push(base64IntToCharCode[encodedSongTitle.length >> 6], base64IntToCharCode[encodedSongTitle.length & 0x3f]);\r\n\r\n        // Actual encoded string follows\r\n        for (let i: number = 0; i < encodedSongTitle.length; i++) {\r\n            buffer.push(encodedSongTitle.charCodeAt(i));\r\n        }\r\n\r\n        buffer.push(SongTagCode.channelCount, base64IntToCharCode[this.pitchChannelCount], base64IntToCharCode[this.noiseChannelCount], base64IntToCharCode[this.modChannelCount]);\r\n        buffer.push(SongTagCode.scale, base64IntToCharCode[this.scale]);\r\n        if (this.scale == Config.scales[\"dictionary\"][\"Custom\"].index) {\r\n            //for (var i = 1; i < Config.pitchesPerOctave; i++) {\r\n            for (var i = 1; i < 12; i++) {\r\n                //only push 12-note custom scales - will change in the future, but for now this is all I will do\r\n                //microtonal changes\r\n                \r\n                buffer.push(base64IntToCharCode[this.scaleCustom[i]?1:0]) // ineffiecent? yes, all we're going to do for now? hell yes\r\n            }\r\n        }\r\n        buffer.push(SongTagCode.key, base64IntToCharCode[this.key], base64IntToCharCode[this.octave - Config.octaveMin]);\r\n        buffer.push(SongTagCode.loopStart, base64IntToCharCode[this.loopStart >> 6], base64IntToCharCode[this.loopStart & 0x3f]);\r\n        buffer.push(SongTagCode.loopEnd, base64IntToCharCode[(this.loopLength - 1) >> 6], base64IntToCharCode[(this.loopLength - 1) & 0x3f]);\r\n        buffer.push(SongTagCode.tempo, base64IntToCharCode[this.tempo >> 6], base64IntToCharCode[this.tempo & 0x3F]);\r\n        // @TODO: Use Config.octaveMin/Config.octaveMax to figure out how to\r\n        // make this non-negative.\r\n        if (Config.newEDO != undefined) {\r\n            buffer.push(SongTagCode.edo, base64IntToCharCode[Config.newEDO]);\r\n        } else {\r\n            buffer.push(SongTagCode.edo, base64IntToCharCode[12]);\r\n        }\r\n        //microtuning changes\r\n        buffer.push(SongTagCode.beatCount, base64IntToCharCode[this.beatsPerBar - 1]);\r\n        buffer.push(SongTagCode.barCount, base64IntToCharCode[(this.barCount - 1) >> 6], base64IntToCharCode[(this.barCount - 1) & 0x3f]);\r\n        buffer.push(SongTagCode.patternCount, base64IntToCharCode[(this.patternsPerChannel - 1) >> 6], base64IntToCharCode[(this.patternsPerChannel - 1) & 0x3f]);\r\n        buffer.push(SongTagCode.rhythm, base64IntToCharCode[this.rhythm]);\r\n\r\n        // Push limiter settings, but only if they aren't the default!\r\n        buffer.push(SongTagCode.limiterSettings);\r\n        if (this.compressionRatio != 1.0 || this.limitRatio != 1.0 || this.limitRise != 4000.0 || this.limitDecay != 4.0 || this.limitThreshold != 1.0 || this.compressionThreshold != 1.0 || this.masterGain != 1.0) {\r\n            buffer.push(base64IntToCharCode[Math.round(this.compressionRatio < 1 ? this.compressionRatio * 10 : 10 + (this.compressionRatio - 1) * 60)]); // 0 ~ 1.15 uneven, mapped to 0 ~ 20\r\n            buffer.push(base64IntToCharCode[Math.round(this.limitRatio < 1 ? this.limitRatio * 10 : 9 + this.limitRatio)]); // 0 ~ 10 uneven, mapped to 0 ~ 20\r\n            buffer.push(base64IntToCharCode[this.limitDecay]); // directly 1 ~ 30\r\n            buffer.push(base64IntToCharCode[Math.round((this.limitRise - 2000.0) / 250.0)]); // 2000 ~ 10000 by 250, mapped to 0 ~ 32\r\n            buffer.push(base64IntToCharCode[Math.round(this.compressionThreshold * 20)]); // 0 ~ 1.1 by 0.05, mapped to 0 ~ 22\r\n            buffer.push(base64IntToCharCode[Math.round(this.limitThreshold * 20)]); // 0 ~ 2 by 0.05, mapped to 0 ~ 40\r\n            buffer.push(base64IntToCharCode[Math.round(this.masterGain * 50) >> 6], base64IntToCharCode[Math.round(this.masterGain * 50) & 0x3f]); // 0 ~ 5 by 0.02, mapped to 0 ~ 250\r\n        }\r\n        else {\r\n            buffer.push(base64IntToCharCode[0x3f]); // Not using limiter\r\n        }\r\n\r\n        buffer.push(SongTagCode.channelNames);\r\n        for (let channel: number = 0; channel < this.getChannelCount(); channel++) {\r\n            // Length of the channel name string\r\n            var encodedChannelName: string = encodeURIComponent(this.channels[channel].name);\r\n            buffer.push(base64IntToCharCode[encodedChannelName.length >> 6], base64IntToCharCode[encodedChannelName.length & 0x3f]);\r\n\r\n            // Actual encoded string follows\r\n            for (let i: number = 0; i < encodedChannelName.length; i++) {\r\n                buffer.push(encodedChannelName.charCodeAt(i));\r\n            }\r\n        }\r\n\r\n        buffer.push(SongTagCode.instrumentCount, base64IntToCharCode[(<any>this.layeredInstruments << 1) | <any>this.patternInstruments]);\r\n        if (this.layeredInstruments || this.patternInstruments) {\r\n            for (let channelIndex: number = 0; channelIndex < this.getChannelCount(); channelIndex++) {\r\n                buffer.push(base64IntToCharCode[this.channels[channelIndex].instruments.length - Config.instrumentCountMin]);\r\n            }\r\n        }\r\n\r\n        buffer.push(SongTagCode.channelOctave);\r\n        for (let channelIndex: number = 0; channelIndex < this.pitchChannelCount; channelIndex++) {\r\n            buffer.push(base64IntToCharCode[this.channels[channelIndex].octave]);\r\n        }\r\n\r\n        for (let channelIndex: number = 0; channelIndex < this.getChannelCount(); channelIndex++) {\r\n            for (let i: number = 0; i < this.channels[channelIndex].instruments.length; i++) {\r\n                const instrument: Instrument = this.channels[channelIndex].instruments[i];\r\n                buffer.push(SongTagCode.startInstrument, base64IntToCharCode[instrument.type]);\r\n                buffer.push(SongTagCode.volume, base64IntToCharCode[(instrument.volume + Config.volumeRange / 2) >> 6], base64IntToCharCode[(instrument.volume + Config.volumeRange / 2) & 0x3f]);\r\n                buffer.push(SongTagCode.preset, base64IntToCharCode[instrument.preset >> 6], base64IntToCharCode[instrument.preset & 63]);\r\n\r\n                buffer.push(SongTagCode.eqFilter);\r\n                buffer.push(base64IntToCharCode[+instrument.eqFilterType]);\r\n                if (instrument.eqFilterType) {\r\n                    buffer.push(base64IntToCharCode[instrument.eqFilterSimpleCut]);\r\n                    buffer.push(base64IntToCharCode[instrument.eqFilterSimplePeak]);\r\n                }\r\n                else {\r\n                    if (instrument.eqFilter == null) {\r\n                        // Push null filter settings\r\n                        buffer.push(base64IntToCharCode[0]);\r\n                        console.log(\"Null EQ filter settings detected in toBase64String for channelIndex \" + channelIndex + \", instrumentIndex \" + i);\r\n                    } else {\r\n                        buffer.push(base64IntToCharCode[instrument.eqFilter.controlPointCount]);\r\n                        for (let j: number = 0; j < instrument.eqFilter.controlPointCount; j++) {\r\n                            const point: FilterControlPoint = instrument.eqFilter.controlPoints[j];\r\n                            buffer.push(base64IntToCharCode[point.type], base64IntToCharCode[Math.round(point.freq)], base64IntToCharCode[Math.round(point.gain)]);\r\n                        }\r\n                    }\r\n\r\n                    // Push subfilters as well. Skip Index 0, is a copy of the base filter.\r\n                    let usingSubFilterBitfield: number = 0;\r\n                    for (let j: number = 0; j < Config.filterMorphCount - 1; j++) {\r\n                        usingSubFilterBitfield |= (+(instrument.eqSubFilters[j + 1] != null) << j);\r\n                    }\r\n                    // Put subfilter usage into 2 chars (12 bits)\r\n                    buffer.push(base64IntToCharCode[usingSubFilterBitfield >> 6], base64IntToCharCode[usingSubFilterBitfield & 63]);\r\n                    // Put subfilter info in for all used subfilters\r\n                    for (let j: number = 0; j < Config.filterMorphCount - 1; j++) {\r\n                        if (usingSubFilterBitfield & (1 << j)) {\r\n                            buffer.push(base64IntToCharCode[instrument.eqSubFilters[j + 1]!.controlPointCount]);\r\n                            for (let k: number = 0; k < instrument.eqSubFilters[j + 1]!.controlPointCount; k++) {\r\n                                const point: FilterControlPoint = instrument.eqSubFilters[j + 1]!.controlPoints[k];\r\n                                buffer.push(base64IntToCharCode[point.type], base64IntToCharCode[Math.round(point.freq)], base64IntToCharCode[Math.round(point.gain)]);\r\n                            }\r\n                        }\r\n                    }\r\n                }\r\n\r\n                // The list of enabled effects is represented as a 12-bit bitfield using two six-bit characters.\r\n                buffer.push(SongTagCode.effects, base64IntToCharCode[instrument.effects >> 6], base64IntToCharCode[instrument.effects & 63]);\r\n                if (effectsIncludeNoteFilter(instrument.effects)) {\r\n                    buffer.push(base64IntToCharCode[+instrument.noteFilterType]);\r\n                    if (instrument.noteFilterType) {\r\n                        buffer.push(base64IntToCharCode[instrument.noteFilterSimpleCut]);\r\n                        buffer.push(base64IntToCharCode[instrument.noteFilterSimplePeak]);\r\n                    }\r\n                    else {\r\n                        if (instrument.noteFilter == null) {\r\n                            // Push null filter settings\r\n                            buffer.push(base64IntToCharCode[0]);\r\n                            console.log(\"Null note filter settings detected in toBase64String for channelIndex \" + channelIndex + \", instrumentIndex \" + i);\r\n                        }\r\n                        else {\r\n                            buffer.push(base64IntToCharCode[instrument.noteFilter.controlPointCount]);\r\n                            for (let j: number = 0; j < instrument.noteFilter.controlPointCount; j++) {\r\n                                const point: FilterControlPoint = instrument.noteFilter.controlPoints[j];\r\n                                buffer.push(base64IntToCharCode[point.type], base64IntToCharCode[Math.round(point.freq)], base64IntToCharCode[Math.round(point.gain)]);\r\n                            }\r\n                        }\r\n\r\n                        // Push subfilters as well. Skip Index 0, is a copy of the base filter.\r\n                        let usingSubFilterBitfield: number = 0;\r\n                        for (let j: number = 0; j < Config.filterMorphCount - 1; j++) {\r\n                            usingSubFilterBitfield |= (+(instrument.noteSubFilters[j + 1] != null) << j);\r\n                        }\r\n                        // Put subfilter usage into 2 chars (12 bits)\r\n                        buffer.push(base64IntToCharCode[usingSubFilterBitfield >> 6], base64IntToCharCode[usingSubFilterBitfield & 63]);\r\n                        // Put subfilter info in for all used subfilters\r\n                        for (let j: number = 0; j < Config.filterMorphCount - 1; j++) {\r\n                            if (usingSubFilterBitfield & (1 << j)) {\r\n                                buffer.push(base64IntToCharCode[instrument.noteSubFilters[j + 1]!.controlPointCount]);\r\n                                for (let k: number = 0; k < instrument.noteSubFilters[j + 1]!.controlPointCount; k++) {\r\n                                    const point: FilterControlPoint = instrument.noteSubFilters[j + 1]!.controlPoints[k];\r\n                                    buffer.push(base64IntToCharCode[point.type], base64IntToCharCode[Math.round(point.freq)], base64IntToCharCode[Math.round(point.gain)]);\r\n                                }\r\n                            }\r\n                        }\r\n                    }\r\n                }\r\n                if (effectsIncludeTransition(instrument.effects)) {\r\n                    buffer.push(base64IntToCharCode[instrument.transition]);\r\n                }\r\n                if (effectsIncludeChord(instrument.effects)) {\r\n                    buffer.push(base64IntToCharCode[instrument.chord]);\r\n                    // Custom arpeggio speed... only if the instrument arpeggiates.\r\n                    if (instrument.chord == Config.chords.dictionary[\"arpeggio\"].index) {\r\n                        buffer.push(base64IntToCharCode[instrument.arpeggioSpeed]);\r\n                        buffer.push(base64IntToCharCode[+instrument.fastTwoNoteArp]); // Two note arp setting piggybacks on this\r\n                    }\r\n                }\r\n                if (effectsIncludePitchShift(instrument.effects)) {\r\n                    buffer.push(base64IntToCharCode[instrument.pitchShift]);\r\n                }\r\n                if (effectsIncludeDetune(instrument.effects)) {\r\n                    buffer.push(base64IntToCharCode[(instrument.detune - Config.detuneMin) >> 6], base64IntToCharCode[(instrument.detune - Config.detuneMin) & 0x3F]);\r\n                }\r\n                if (effectsIncludeVibrato(instrument.effects)) {\r\n                    buffer.push(base64IntToCharCode[instrument.vibrato]);\r\n                    // Custom vibrato settings\r\n                    if (instrument.vibrato == Config.vibratos.length) {\r\n                        buffer.push(base64IntToCharCode[Math.round(instrument.vibratoDepth * 25)]);\r\n                        buffer.push(base64IntToCharCode[instrument.vibratoSpeed]);\r\n                        buffer.push(base64IntToCharCode[Math.round(instrument.vibratoDelay)]);\r\n                        buffer.push(base64IntToCharCode[instrument.vibratoType]);\r\n                    }\r\n                }\r\n                if (effectsIncludeDistortion(instrument.effects)) {\r\n                    buffer.push(base64IntToCharCode[instrument.distortion]);\r\n                    // Aliasing is tied into distortion for now\r\n                    buffer.push(base64IntToCharCode[+instrument.aliases]);\r\n                }\r\n                if (effectsIncludeBitcrusher(instrument.effects)) {\r\n                    buffer.push(base64IntToCharCode[instrument.bitcrusherFreq], base64IntToCharCode[instrument.bitcrusherQuantization]);\r\n                }\r\n                if (effectsIncludePanning(instrument.effects)) {\r\n                    buffer.push(base64IntToCharCode[instrument.pan >> 6], base64IntToCharCode[instrument.pan & 0x3f]);\r\n                    buffer.push(base64IntToCharCode[instrument.panDelay]);\r\n                }\r\n                if (effectsIncludeChorus(instrument.effects)) {\r\n                    buffer.push(base64IntToCharCode[instrument.chorus]);\r\n                }\r\n                if (effectsIncludeEcho(instrument.effects)) {\r\n                    buffer.push(base64IntToCharCode[instrument.echoSustain], base64IntToCharCode[instrument.echoDelay]);\r\n                }\r\n                if (effectsIncludeReverb(instrument.effects)) {\r\n                    buffer.push(base64IntToCharCode[instrument.reverb]);\r\n                }\r\n\r\n                if (instrument.type != InstrumentType.drumset) {\r\n                    buffer.push(SongTagCode.fadeInOut, base64IntToCharCode[instrument.fadeIn], base64IntToCharCode[instrument.fadeOut]);\r\n                    // Transition info follows transition song tag\r\n                    buffer.push(base64IntToCharCode[+instrument.clicklessTransition]);\r\n                }\r\n\r\n                if (instrument.type == InstrumentType.harmonics || instrument.type == InstrumentType.pickedString) {\r\n                    buffer.push(SongTagCode.harmonics);\r\n                    const harmonicsBits: BitFieldWriter = new BitFieldWriter();\r\n                    for (let i: number = 0; i < Config.harmonicsControlPoints; i++) {\r\n                        harmonicsBits.write(Config.harmonicsControlPointBits, instrument.harmonicsWave.harmonics[i]);\r\n                    }\r\n                    harmonicsBits.encodeBase64(buffer);\r\n                }\r\n\r\n                if (instrument.type == InstrumentType.chip) {\r\n                   \t\t\t\t\t\tif (instrument.chipWave > 186) {\r\n\t\t\t\t\t\t\tbuffer.push(119, base64IntToCharCode[instrument.chipWave - 186]);\t\r\n\t\t\t\t\t\t\tbuffer.push(base64IntToCharCode[3]);\t\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\telse if (instrument.chipWave > 124) {\r\n\t\t\t\t\t\t\tbuffer.push(119, base64IntToCharCode[instrument.chipWave - 124]);\t\r\n\t\t\t\t\t\t\tbuffer.push(base64IntToCharCode[2]);\t\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\telse if (instrument.chipWave > 62) {\r\n\t\t\t\t\t\t\tbuffer.push(119, base64IntToCharCode[instrument.chipWave - 62]);\t\r\n\t\t\t\t\t\t\tbuffer.push(base64IntToCharCode[1]);\t\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\telse {\r\n\t\t\t\t\t\t\tbuffer.push(119, base64IntToCharCode[instrument.chipWave]);\t\r\n\t\t\t\t\t\t\tbuffer.push(base64IntToCharCode[0]);\t\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\tbuffer.push(104, base64IntToCharCode[instrument.unison]);\r\n\r\n\t\t\t\t\t\t// Repurposed for chip wave loop controls.\r\n\t\t\t\t\t\tbuffer.push(SongTagCode.filterResonance);\r\n\t\t\t\t\t\t// The encoding here is as follows:\r\n\t\t\t\t\t\t// 0b11111_1\r\n\t\t\t\t\t\t//         ^-- isUsingAdvancedLoopControls\r\n\t\t\t\t\t\t//   ^^^^^---- chipWaveLoopMode\r\n\t\t\t\t\t\t// This essentially allocates 32 different loop modes,\r\n\t\t\t\t\t\t// which should be plenty.\r\n\t\t\t\t\t\tconst encodedLoopMode: number = (\r\n\t\t\t\t\t\t\t(clamp(0, 31 + 1, instrument.chipWaveLoopMode) << 1)\r\n\t\t\t\t\t\t\t| (instrument.isUsingAdvancedLoopControls ? 1 : 0)\r\n\t\t\t\t\t\t);\r\n\t\t\t\t\t\tbuffer.push(base64IntToCharCode[encodedLoopMode]);\r\n\t\t\t\t\t\t// The same encoding above is used here, but with the release mode\r\n\t\t\t\t\t\t// (which isn't implemented currently), and the backwards toggle.\r\n\t\t\t\t\t\tconst encodedReleaseMode: number = (\r\n\t\t\t\t\t\t\t(clamp(0, 31 + 1, 0) << 1)\r\n\t\t\t\t\t\t\t| (instrument.chipWavePlayBackwards ? 1 : 0)\r\n\t\t\t\t\t\t);\r\n\t\t\t\t\t\tbuffer.push(base64IntToCharCode[encodedReleaseMode]);\r\n\t\t\t\t\t\tencode32BitNumber(buffer, instrument.chipWaveLoopStart);\r\n\t\t\t\t\t\tencode32BitNumber(buffer, instrument.chipWaveLoopEnd);\r\n\t\t\t\t\t\tencode32BitNumber(buffer, instrument.chipWaveStartOffset);\r\n\r\n\t\t\t\t\t //code bookmark\r\n                } else if (instrument.type == InstrumentType.fm || instrument.type == InstrumentType.fm6op) {\r\n                    if (instrument.type == InstrumentType.fm) {\r\n                        buffer.push(SongTagCode.algorithm, base64IntToCharCode[instrument.algorithm]);\r\n                        buffer.push(SongTagCode.feedbackType, base64IntToCharCode[instrument.feedbackType]);\r\n                    } else {\r\n                        buffer.push(SongTagCode.algorithm, base64IntToCharCode[instrument.algorithm6Op]);\r\n                        if (instrument.algorithm6Op == 0) {\r\n                            buffer.push(SongTagCode.chord, base64IntToCharCode[instrument.customAlgorithm.carrierCount]);\r\n                            buffer.push(SongTagCode.effects);\r\n                            for (let o: number = 0; o < instrument.customAlgorithm.modulatedBy.length; o++) {\r\n                                for (let j: number = 0; j < instrument.customAlgorithm.modulatedBy[o].length; j++) {\r\n                                    buffer.push(base64IntToCharCode[instrument.customAlgorithm.modulatedBy[o][j]]);\r\n                                }\r\n                                buffer.push(SongTagCode.operatorWaves);\r\n                            }\r\n                            buffer.push(SongTagCode.effects);\r\n                        }\r\n                        buffer.push(SongTagCode.feedbackType, base64IntToCharCode[instrument.feedbackType6Op]);\r\n                        if (instrument.feedbackType6Op == 0) {\r\n                            buffer.push(SongTagCode.effects);\r\n                            for (let o: number = 0; o < instrument.customFeedbackType.indices.length; o++) {\r\n                                for (let j: number = 0; j < instrument.customFeedbackType.indices[o].length; j++) {\r\n                                    buffer.push(base64IntToCharCode[instrument.customFeedbackType.indices[o][j]]);\r\n                                }\r\n                                buffer.push(SongTagCode.operatorWaves);\r\n                            }\r\n                            buffer.push(SongTagCode.effects);\r\n                        }\r\n                    }\r\n                    buffer.push(SongTagCode.feedbackAmplitude, base64IntToCharCode[instrument.feedbackAmplitude]);\r\n\r\n                    buffer.push(SongTagCode.operatorFrequencies);\r\n                    for (let o: number = 0; o < (instrument.type == InstrumentType.fm6op?6:Config.operatorCount); o++) {\r\n                        buffer.push(base64IntToCharCode[instrument.operators[o].frequency]);\r\n                    }\r\n                    buffer.push(SongTagCode.operatorAmplitudes);\r\n                    for (let o: number = 0; o < (instrument.type == InstrumentType.fm6op ? 6 : Config.operatorCount); o++) {\r\n                        buffer.push(base64IntToCharCode[instrument.operators[o].amplitude]);\r\n                    }\r\n                    buffer.push(SongTagCode.operatorWaves);\r\n                    for (let o: number = 0; o < (instrument.type == InstrumentType.fm6op ? 6 : Config.operatorCount); o++) {\r\n                        buffer.push(base64IntToCharCode[instrument.operators[o].waveform]);\r\n                        // Push pulse width if that type is used\r\n                        if (instrument.operators[o].waveform == 2) {\r\n                            buffer.push(base64IntToCharCode[instrument.operators[o].pulseWidth]);\r\n                        }\r\n                    }\r\n                } else if (instrument.type == InstrumentType.customChipWave) {\r\n                    if (instrument.chipWave > 186) {\r\n\t\t\t\t\t\t\tbuffer.push(119, base64IntToCharCode[instrument.chipWave - 186]);\t\r\n\t\t\t\t\t\t\tbuffer.push(base64IntToCharCode[3]);\t\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\telse if (instrument.chipWave > 124) {\r\n\t\t\t\t\t\t\tbuffer.push(119, base64IntToCharCode[instrument.chipWave - 124]);\t\r\n\t\t\t\t\t\t\tbuffer.push(base64IntToCharCode[2]);\t\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\telse if (instrument.chipWave > 62) {\r\n\t\t\t\t\t\t\tbuffer.push(119, base64IntToCharCode[instrument.chipWave - 62]);\t\r\n\t\t\t\t\t\t\tbuffer.push(base64IntToCharCode[1]);\t\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\telse {\r\n\t\t\t\t\t\t\tbuffer.push(119, base64IntToCharCode[instrument.chipWave]);\t\r\n\t\t\t\t\t\t\tbuffer.push(base64IntToCharCode[0]);\t\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\tbuffer.push(104, base64IntToCharCode[instrument.unison]);\r\n\t\t\t\t\t //code bookmark\r\n                    buffer.push(SongTagCode.customChipWave);\r\n                    // Push custom wave values\r\n                    for (let j: number = 0; j < 64; j++) {\r\n                        buffer.push(base64IntToCharCode[(instrument.customChipWave[j] + 24) as number]);\r\n                    }\r\n                } else if (instrument.type == InstrumentType.noise) {\r\n                    buffer.push(SongTagCode.wave, base64IntToCharCode[instrument.chipNoise]);\r\n                } else if (instrument.type == InstrumentType.spectrum) {\r\n                    buffer.push(SongTagCode.spectrum);\r\n                    const spectrumBits: BitFieldWriter = new BitFieldWriter();\r\n                    for (let i: number = 0; i < Config.spectrumControlPoints; i++) {\r\n                        spectrumBits.write(Config.spectrumControlPointBits, instrument.spectrumWave.spectrum[i]);\r\n                    }\r\n                    spectrumBits.encodeBase64(buffer);\r\n                } else if (instrument.type == InstrumentType.drumset) {\r\n                    buffer.push(SongTagCode.drumsetEnvelopes);\r\n                    for (let j: number = 0; j < Config.drumCount; j++) {\r\n                        buffer.push(base64IntToCharCode[instrument.drumsetEnvelopes[j]]);\r\n                    }\r\n\r\n                    buffer.push(SongTagCode.spectrum);\r\n                    const spectrumBits: BitFieldWriter = new BitFieldWriter();\r\n                    for (let j: number = 0; j < Config.drumCount; j++) {\r\n                        for (let i: number = 0; i < Config.spectrumControlPoints; i++) {\r\n                            spectrumBits.write(Config.spectrumControlPointBits, instrument.drumsetSpectrumWaves[j].spectrum[i]);\r\n                        }\r\n                    }\r\n                    spectrumBits.encodeBase64(buffer);\r\n                } else if (instrument.type == InstrumentType.harmonics) {\r\n                    buffer.push(SongTagCode.unison, base64IntToCharCode[instrument.unison]);\r\n                } else if (instrument.type == InstrumentType.pwm) {\r\n                    buffer.push(SongTagCode.pulseWidth, base64IntToCharCode[instrument.pulseWidth]);\r\n                } else if (instrument.type == InstrumentType.pickedString) {\r\n                    buffer.push(SongTagCode.unison, base64IntToCharCode[instrument.unison]);\r\n                    buffer.push(SongTagCode.stringSustain, base64IntToCharCode[instrument.stringSustain]);\r\n                } else if (instrument.type == InstrumentType.mod) {\r\n                    // Handled down below. Could be moved, but meh.\r\n                } else {\r\n                    throw new Error(\"Unknown instrument type.\");\r\n                }\r\n\r\n                buffer.push(SongTagCode.envelopes, base64IntToCharCode[instrument.envelopeCount]);\r\n                for (let envelopeIndex: number = 0; envelopeIndex < instrument.envelopeCount; envelopeIndex++) {\r\n                    buffer.push(base64IntToCharCode[instrument.envelopes[envelopeIndex].target]);\r\n                    if (Config.instrumentAutomationTargets[instrument.envelopes[envelopeIndex].target].maxCount > 1) {\r\n                        buffer.push(base64IntToCharCode[instrument.envelopes[envelopeIndex].index]);\r\n                    }\r\n                    buffer.push(base64IntToCharCode[instrument.envelopes[envelopeIndex].envelope]);\r\n                }\r\n            }\r\n        }\r\n\r\n        buffer.push(SongTagCode.bars);\r\n        bits = new BitFieldWriter();\r\n        let neededBits: number = 0;\r\n        while ((1 << neededBits) < this.patternsPerChannel + 1) neededBits++;\r\n        for (let channelIndex: number = 0; channelIndex < this.getChannelCount(); channelIndex++) for (let i: number = 0; i < this.barCount; i++) {\r\n            bits.write(neededBits, this.channels[channelIndex].bars[i]);\r\n        }\r\n        bits.encodeBase64(buffer);\r\n\r\n        buffer.push(SongTagCode.patterns);\r\n        bits = new BitFieldWriter();\r\n        const shapeBits: BitFieldWriter = new BitFieldWriter();\r\n        const bitsPerNoteSize: number = Song.getNeededBits(Config.noteSizeMax);\r\n        for (let channelIndex: number = 0; channelIndex < this.getChannelCount(); channelIndex++) {\r\n            const channel: Channel = this.channels[channelIndex];\r\n            const maxInstrumentsPerPattern: number = this.getMaxInstrumentsPerPattern(channelIndex);\r\n            const isNoiseChannel: boolean = this.getChannelIsNoise(channelIndex);\r\n            const isModChannel: boolean = this.getChannelIsMod(channelIndex);\r\n            const neededInstrumentCountBits: number = Song.getNeededBits(maxInstrumentsPerPattern - Config.instrumentCountMin);\r\n            const neededInstrumentIndexBits: number = Song.getNeededBits(channel.instruments.length - 1);\r\n\r\n            // Some info about modulator settings immediately follows in mod channels.\r\n            if (isModChannel) {\r\n                const neededModInstrumentIndexBits: number = Song.getNeededBits(this.getMaxInstrumentsPerChannel() + 2);\r\n                for (let instrumentIndex: number = 0; instrumentIndex < channel.instruments.length; instrumentIndex++) {\r\n\r\n                    let instrument: Instrument = this.channels[channelIndex].instruments[instrumentIndex];\r\n\r\n                    for (let mod: number = 0; mod < Config.modCount; mod++) {\r\n                        const modChannel: number = instrument.modChannels[mod];\r\n                        const modInstrument: number = instrument.modInstruments[mod];\r\n                        const modSetting: number = instrument.modulators[mod];\r\n                        const modFilter: number = instrument.modFilterTypes[mod];\r\n\r\n                        // Still using legacy \"mod status\" format, but doing it manually as it's only used in the URL now.\r\n                        // 0 - For pitch/noise\r\n                        // 1 - (used to be For noise, not needed)\r\n                        // 2 - For song\r\n                        // 3 - None\r\n\r\n                        let status: number = Config.modulators[modSetting].forSong ? 2 : 0;\r\n                        if (modSetting == Config.modulators.dictionary[\"none\"].index)\r\n                            status = 3;\r\n\r\n                        bits.write(2, status);\r\n\r\n                        // Channel/Instrument is only used if the status isn't \"song\" or \"none\".\r\n                        if (status == 0 || status == 1) {\r\n                            bits.write(8, modChannel);\r\n                            bits.write(neededModInstrumentIndexBits, modInstrument);\r\n                        }\r\n\r\n                        // Only used if setting isn't \"none\".\r\n                        if (status != 3) {\r\n                            bits.write(6, modSetting);\r\n                        }\r\n\r\n                        // Write mod filter info, only if this is a filter mod\r\n                        if (Config.modulators[instrument.modulators[mod]].name == \"eq filter\" || Config.modulators[instrument.modulators[mod]].name == \"note filter\") {\r\n                            bits.write(6, modFilter);\r\n                        }\r\n                    }\r\n                }\r\n            }\r\n            const octaveOffset: number = (isNoiseChannel || isModChannel) ? 0 : channel.octave * Config.pitchesPerOctave;\r\n            let lastPitch: number = (isNoiseChannel ? 4 : octaveOffset);\r\n            const recentPitches: number[] = isModChannel ? [0, 1, 2, 3, 4, 5] : (isNoiseChannel ? [4, 6, 7, 2, 3, 8, 0, 10] : [0, 7, 12, 19, 24, -5, -12]);\r\n            const recentShapes: string[] = [];\r\n            for (let i: number = 0; i < recentPitches.length; i++) {\r\n                recentPitches[i] += octaveOffset;\r\n            }\r\n            for (const pattern of channel.patterns) {\r\n                if (this.patternInstruments) {\r\n                    const instrumentCount: number = validateRange(Config.instrumentCountMin, maxInstrumentsPerPattern, pattern.instruments.length);\r\n                    bits.write(neededInstrumentCountBits, instrumentCount - Config.instrumentCountMin);\r\n                    for (let i: number = 0; i < instrumentCount; i++) {\r\n                        bits.write(neededInstrumentIndexBits, pattern.instruments[i]);\r\n                    }\r\n                }\r\n\r\n                if (pattern.notes.length > 0) {\r\n                    bits.write(1, 1);\r\n\r\n                    let curPart: number = 0;\r\n                    for (const note of pattern.notes) {\r\n\r\n                        // For mod channels, a negative offset may be necessary.\r\n                        if (note.start < curPart && isModChannel) {\r\n                            bits.write(2, 0); // rest, then...\r\n                            bits.write(1, 1); // negative offset\r\n                            bits.writePartDuration(curPart - note.start);\r\n                        }\r\n\r\n                        if (note.start > curPart) {\r\n                            bits.write(2, 0); // rest\r\n                            if (isModChannel) bits.write(1, 0); // positive offset, only needed for mod channels\r\n                            bits.writePartDuration(note.start - curPart);\r\n                        }\r\n\r\n                        shapeBits.clear();\r\n\r\n                        // Old format was:\r\n                        // 0: 1 pitch, 10: 2 pitches, 110: 3 pitches, 111: 4 pitches\r\n                        // New format is:\r\n                        //      0: 1 pitch\r\n                        // 1[XXX]: 3 bits of binary signifying 2+ pitches\r\n                        if (note.pitches.length == 1) {\r\n                            shapeBits.write(1, 0);\r\n                        } else {\r\n                            shapeBits.write(1, 1);\r\n                            shapeBits.write(3, note.pitches.length - 2);\r\n                        }\r\n\r\n                        shapeBits.writePinCount(note.pins.length - 1);\r\n\r\n                        if (!isModChannel) {\r\n                            shapeBits.write(bitsPerNoteSize, note.pins[0].size); // volume\r\n                        }\r\n                        else {\r\n                            shapeBits.write(9, note.pins[0].size); // Modulator value. 9 bits for now = 512 max mod value?\r\n                        }\r\n\r\n                        let shapePart: number = 0;\r\n                        let startPitch: number = note.pitches[0];\r\n                        let currentPitch: number = startPitch;\r\n                        const pitchBends: number[] = [];\r\n                        for (let i: number = 1; i < note.pins.length; i++) {\r\n                            const pin: NotePin = note.pins[i];\r\n                            const nextPitch: number = startPitch + pin.interval;\r\n                            if (currentPitch != nextPitch) {\r\n                                shapeBits.write(1, 1);\r\n                                pitchBends.push(nextPitch);\r\n                                currentPitch = nextPitch;\r\n                            } else {\r\n                                shapeBits.write(1, 0);\r\n                            }\r\n                            shapeBits.writePartDuration(pin.time - shapePart);\r\n                            shapePart = pin.time;\r\n                            if (!isModChannel) {\r\n                                shapeBits.write(bitsPerNoteSize, pin.size);\r\n                            } else {\r\n                                shapeBits.write(9, pin.size);\r\n                            }\r\n                        }\r\n\r\n                        const shapeString: string = String.fromCharCode.apply(null, shapeBits.encodeBase64([]));\r\n                        const shapeIndex: number = recentShapes.indexOf(shapeString);\r\n                        if (shapeIndex == -1) {\r\n                            bits.write(2, 1); // new shape\r\n                            bits.concat(shapeBits);\r\n                        } else {\r\n                            bits.write(1, 1); // old shape\r\n                            bits.writeLongTail(0, 0, shapeIndex);\r\n                            recentShapes.splice(shapeIndex, 1);\r\n                        }\r\n                        recentShapes.unshift(shapeString);\r\n                        if (recentShapes.length > 10) recentShapes.pop();\r\n\r\n                        const allPitches: number[] = note.pitches.concat(pitchBends);\r\n                        for (let i: number = 0; i < allPitches.length; i++) {\r\n                            const pitch: number = allPitches[i];\r\n                            const pitchIndex: number = recentPitches.indexOf(pitch);\r\n                            if (pitchIndex == -1) {\r\n                                let interval: number = 0;\r\n                                let pitchIter: number = lastPitch;\r\n                                if (pitchIter < pitch) {\r\n                                    while (pitchIter != pitch) {\r\n                                        pitchIter++;\r\n                                        if (recentPitches.indexOf(pitchIter) == -1) interval++;\r\n                                    }\r\n                                } else {\r\n                                    while (pitchIter != pitch) {\r\n                                        pitchIter--;\r\n                                        if (recentPitches.indexOf(pitchIter) == -1) interval--;\r\n                                    }\r\n                                }\r\n                                bits.write(1, 0);\r\n                                bits.writePitchInterval(interval);\r\n                            } else {\r\n                                bits.write(1, 1);\r\n                                bits.write(4, pitchIndex);\r\n                                recentPitches.splice(pitchIndex, 1);\r\n                            }\r\n                            recentPitches.unshift(pitch);\r\n                            if (recentPitches.length > 16) recentPitches.pop();\r\n\r\n                            if (i == note.pitches.length - 1) {\r\n                                lastPitch = note.pitches[0];\r\n                            } else {\r\n                                lastPitch = pitch;\r\n                            }\r\n                        }\r\n\r\n                        if (note.start == 0) {\r\n                            bits.write(1, note.continuesLastPattern ? 1 : 0);\r\n                        }\r\n\r\n                        curPart = note.end;\r\n                    }\r\n\r\n                    if (curPart < this.beatsPerBar * Config.partsPerBeat + (+isModChannel)) {\r\n                        bits.write(2, 0); // rest\r\n                        if (isModChannel) bits.write(1, 0); // positive offset\r\n                        bits.writePartDuration(this.beatsPerBar * Config.partsPerBeat + (+isModChannel) - curPart);\r\n                    }\r\n                } else {\r\n                    bits.write(1, 0);\r\n                }\r\n            }\r\n        }\r\n        let stringLength: number = bits.lengthBase64();\r\n        let digits: number[] = [];\r\n        while (stringLength > 0) {\r\n            digits.unshift(base64IntToCharCode[stringLength & 0x3f]);\r\n            stringLength = stringLength >> 6;\r\n        }\r\n        buffer.push(base64IntToCharCode[digits.length]);\r\n        Array.prototype.push.apply(buffer, digits); // append digits to buffer.\r\n        bits.encodeBase64(buffer);\r\n\t    \r\n        const maxApplyArgs: number = 64000;\r\n\t    \t\t\t            let customSamplesStr = \"\";\r\n            if(EditorConfig.customSamples != undefined && EditorConfig.customSamples.length > 0){\r\n              customSamplesStr = \"|\" + EditorConfig.customSamples.join(\"|\")\r\n              \r\n          }\r\n\t\t  //samplemark\r\n        if (buffer.length < maxApplyArgs) {\r\n            // Note: Function.apply may break for long argument lists. \r\n                            return String.fromCharCode.apply(null, buffer) + customSamplesStr;\r\n\t\t\t\t//samplemark\r\n        } else {\r\n            let result: string = \"\";\r\n            for (let i: number = 0; i < buffer.length; i += maxApplyArgs) {\r\n                result += String.fromCharCode.apply(null, buffer.slice(i, i + maxApplyArgs));\r\n            }\r\n                          return result + customSamplesStr;\r\n\t\t\t   //samplemark\r\n        }\r\n    }\r\n\r\n    private static _envelopeFromLegacyIndex(legacyIndex: number): Envelope {\r\n        // I swapped the order of \"custom\"/\"steady\", now \"none\"/\"note size\".\r\n        if (legacyIndex == 0) legacyIndex = 1; else if (legacyIndex == 1) legacyIndex = 0;\r\n        return Config.envelopes[clamp(0, Config.envelopes.length, legacyIndex)];\r\n    }\r\n\r\n    public fromBase64String(compressed: string): void {\r\n        if (compressed == null || compressed == \"\") {\r\n            Song._clearSamples();\r\n\r\n            this.initToDefault(true);\r\n            return;\r\n        }\r\n        let charIndex: number = 0;\r\n        // skip whitespace.\r\n        while (compressed.charCodeAt(charIndex) <= CharCode.SPACE) charIndex++;\r\n        // skip hash mark.\r\n        if (compressed.charCodeAt(charIndex) == CharCode.HASH) charIndex++;\r\n        // if it starts with curly brace, treat it as JSON.\r\n        if (compressed.charCodeAt(charIndex) == CharCode.LEFT_CURLY_BRACE) {\r\n            this.fromJsonObject(JSON.parse(charIndex == 0 ? compressed : compressed.substring(charIndex)));\r\n            return;\r\n        }\r\n\r\n        const variantTest: number = compressed.charCodeAt(charIndex);\r\n        let fromBeepBox: boolean;\r\n        let fromJummBox: boolean;\r\n        let fromGoldBox: boolean;\r\n\tlet fromUltraBox: boolean;\r\n\r\n        // Detect variant here. If version doesn't match known variant, assume it is a vanilla string which does not report variant.\r\n        if (variantTest == 0x6A) { //\"j\"\r\n            fromBeepBox = false;\r\n            fromJummBox = true;\r\n            fromGoldBox = false;\r\n\tfromUltraBox = false;\r\n            charIndex++;\r\n        } else if (variantTest == 0x67) { //\"g\"\r\n            fromBeepBox = false;\r\n            fromJummBox = false;\r\n            fromGoldBox = true;\r\n\tfromUltraBox = false;\r\n            charIndex++;\r\n        } else if (variantTest == 0x75) { //\"u\"\r\n                fromBeepBox = false;\r\n                fromJummBox = false;\r\n                fromGoldBox = false;\r\n\t\tfromUltraBox = true;\r\n                charIndex++;\r\n            } else {\r\n            fromBeepBox = true;\r\n            fromJummBox = false;\r\n            fromGoldBox = false;\r\n\tfromUltraBox = false;\r\n        }\r\n\r\n        const version: number = base64CharCodeToInt[compressed.charCodeAt(charIndex++)];\r\n        if (fromBeepBox && (version == -1 || version > Song._latestBeepboxVersion || version < Song._oldestBeepboxVersion)) return;\r\n        if (fromJummBox && (version == -1 || version > Song._latestJummBoxVersion || version < Song._oldestJummBoxVersion)) return;\r\n        if (fromGoldBox && (version == -1 || version > Song._latestGoldBoxVersion || version < Song._oldestGoldBoxVersion)) return;\r\n\tif (fromUltraBox && (version == -1 || version > Song._latestUltraBoxVersion || version < Song._oldestUltraBoxVersion)) return;\r\n        const beforeTwo: boolean = version < 2;\r\n        const beforeThree: boolean = version < 3;\r\n        const beforeFour: boolean = version < 4;\r\n        const beforeFive: boolean = version < 5;\r\n        const beforeSix: boolean = version < 6;\r\n        const beforeSeven: boolean = version < 7;\r\n        const beforeEight: boolean = version < 8;\r\n        const beforeNine: boolean = version < 9;\r\n        this.initToDefault((fromBeepBox && beforeNine) || ((fromJummBox && beforeFive) || (beforeFour && fromGoldBox)));\r\n        const forceSimpleFilter: boolean = (fromBeepBox && beforeNine || fromJummBox && beforeFive);\r\n\r\n        if (fromUltraBox || fromGoldBox) {\r\n            compressed = compressed.replaceAll(\"%7C\", \"|\")\r\n                var compressed_array = compressed.split(\"|\");\r\n                compressed = compressed_array.shift()!;\r\n                if(EditorConfig.customSamples == null || EditorConfig.customSamples.join(\", \") != compressed_array.join(\", \")) {\r\n\r\n                    Song._restoreChipWaveListToDefault();\r\n\r\n                    let willLoadLegacySamples = false;\r\n                    let willLoadNintariboxSamples = false;\r\n                    let willLoadMarioPaintboxSamples = false;\r\n                    const customSampleUrls = [];\r\n                    const customSamplePresets: Preset[] = [];\r\n                    sampleLoadingState.statusTable = {};\r\n                    sampleLoadingState.urlTable = {};\r\n                    sampleLoadingState.totalSamples = 0;\r\n                    sampleLoadingState.samplesLoaded = 0;\r\n                    sampleLoadEvents.dispatchEvent(new SampleLoadedEvent(\r\n                        sampleLoadingState.totalSamples,\r\n                        sampleLoadingState.samplesLoaded\r\n                    ));\r\n                    for (const url of compressed_array) {\r\n                        if (url.toLowerCase() === \"legacysamples\") {\r\n                            if (!willLoadLegacySamples) {\r\n                                willLoadLegacySamples = true;\r\n                                customSampleUrls.push(url);\r\n                                loadBuiltInSamples(0);\r\n                            }\r\n                        } \r\n                        else if (url.toLowerCase() === \"nintariboxsamples\") {\r\n                            if (!willLoadNintariboxSamples) {\r\n                                willLoadNintariboxSamples = true;\r\n                                customSampleUrls.push(url);\r\n                                loadBuiltInSamples(1);\r\n                            }\r\n                        }\r\n                        else if (url.toLowerCase() === \"mariopaintboxsamples\") {\r\n                            if (!willLoadMarioPaintboxSamples) {\r\n                                willLoadMarioPaintboxSamples = true;\r\n                                customSampleUrls.push(url);\r\n                                loadBuiltInSamples(2);\r\n                            }\r\n                        }\r\n                        \r\n                        else {\r\n                            const ok: boolean = Song._parseAndConfigureCustomSample(url, customSampleUrls, customSamplePresets, sampleLoadingState);\r\n                            if (!ok) {\r\n                                continue;\r\n                            }\r\n                        }\r\n                    }\r\n                    if (customSampleUrls.length > 0) {\r\n                        EditorConfig.customSamples = customSampleUrls;\r\n                    }\r\n                    if (customSamplePresets.length > 0) {\r\n                        const customSamplePresetsMap: DictionaryArray<Preset> = toNameMap(customSamplePresets);\r\n                        EditorConfig.presetCategories[EditorConfig.presetCategories.length] = {\r\n                            name: \"Custom Sample Presets\",\r\n                            presets: customSamplePresetsMap,\r\n                            index: EditorConfig.presetCategories.length,\r\n                        };\r\n                        // EditorConfig.presetCategories.splice(1, 0, {\r\n                             // name: \"Custom Sample Presets\",\r\n                             // presets: customSamplePresets,\r\n                             // index: EditorConfig.presetCategories.length,\r\n                        // });\r\n                    }\r\n               \r\n                }\r\n                //samplemark\r\n        }\r\n\r\n        if (beforeThree && fromBeepBox) {\r\n            // Originally, the only instrument transition was \"instant\" and the only drum wave was \"retro\".\r\n            for (const channel of this.channels) {\r\n                channel.instruments[0].transition = Config.transitions.dictionary[\"interrupt\"].index;\r\n                channel.instruments[0].effects |= 1 << EffectType.transition;\r\n            }\r\n            this.channels[3].instruments[0].chipNoise = 0;\r\n        }\r\n\r\n        let legacySettingsCache: LegacySettings[][] | null = null;\r\n        if ((fromBeepBox && beforeNine) || ((fromJummBox && beforeFive) || (beforeFour && fromGoldBox))) {\r\n            // Unfortunately, old versions of BeepBox had a variety of different ways of saving\r\n            // filter-and-envelope-related parameters in the URL, and none of them directly\r\n            // correspond to the new way of saving these parameters. We can approximate the old\r\n            // settings by collecting all the old settings for an instrument and passing them to\r\n            // convertLegacySettings(), so I use this data structure to collect the settings\r\n            // for each instrument if necessary.\r\n            legacySettingsCache = [];\r\n            for (let i: number = legacySettingsCache.length; i < this.getChannelCount(); i++) {\r\n                legacySettingsCache[i] = [];\r\n                for (let j: number = 0; j < Config.instrumentCountMin; j++) legacySettingsCache[i][j] = {};\r\n            }\r\n        }\r\n\r\n        let legacyGlobalReverb: number = 0; // beforeNine reverb was song-global, record that reverb here and adapt it to instruments as needed.\r\n\r\n        let instrumentChannelIterator: number = 0;\r\n        let instrumentIndexIterator: number = -1;\r\n        let command: number;\r\n        let useSlowerArpSpeed: boolean = false;\r\n        let useFastTwoNoteArp: boolean = false;\r\n        while (charIndex < compressed.length) switch (command = compressed.charCodeAt(charIndex++)) {\r\n            case SongTagCode.songTitle: {\r\n                // Length of song name string\r\n                var songNameLength = (base64CharCodeToInt[compressed.charCodeAt(charIndex++)] << 6) + base64CharCodeToInt[compressed.charCodeAt(charIndex++)];\r\n                this.title = decodeURIComponent(compressed.substring(charIndex, charIndex + songNameLength));\r\n                document.title = this.title + \" - \" + EditorConfig.versionDisplayName;\r\n\r\n                charIndex += songNameLength;\r\n            } break;\r\n            case SongTagCode.channelCount: {\r\n                this.pitchChannelCount = base64CharCodeToInt[compressed.charCodeAt(charIndex++)];\r\n                this.noiseChannelCount = base64CharCodeToInt[compressed.charCodeAt(charIndex++)];\r\n                if (fromBeepBox || beforeTwo) {\r\n                    // No mod channel support before jummbox v2\r\n                    this.modChannelCount = 0;\r\n                } else {\r\n                    this.modChannelCount = base64CharCodeToInt[compressed.charCodeAt(charIndex++)];\r\n                }\r\n                this.pitchChannelCount = validateRange(Config.pitchChannelCountMin, Config.pitchChannelCountMax, this.pitchChannelCount);\r\n                this.noiseChannelCount = validateRange(Config.noiseChannelCountMin, Config.noiseChannelCountMax, this.noiseChannelCount);\r\n                this.modChannelCount = validateRange(Config.modChannelCountMin, Config.modChannelCountMax, this.modChannelCount);\r\n\r\n                for (let channelIndex = this.channels.length; channelIndex < this.getChannelCount(); channelIndex++) {\r\n                    this.channels[channelIndex] = new Channel();\r\n                }\r\n                this.channels.length = this.getChannelCount();\r\n                if ((fromBeepBox && beforeNine) || ((fromJummBox && beforeFive) || (beforeFour && fromGoldBox))) {\r\n                    for (let i: number = legacySettingsCache!.length; i < this.getChannelCount(); i++) {\r\n                        legacySettingsCache![i] = [];\r\n                        for (let j: number = 0; j < Config.instrumentCountMin; j++) legacySettingsCache![i][j] = {};\r\n                    }\r\n                }\r\n            } break;\r\n            case SongTagCode.scale: {\r\n                this.scale = base64CharCodeToInt[compressed.charCodeAt(charIndex++)];\r\n                // All the scales were jumbled around by Jummbox. Just convert to free.\r\n                if (this.scale == Config.scales[\"dictionary\"][\"Custom\"].index) {\r\n                    for (var i = 1; i < Config.pitchesPerOctave; i++) {\r\n                        this.scaleCustom[i] = base64CharCodeToInt[compressed.charCodeAt(charIndex++)] == 1; // ineffiecent? yes, all we're going to do for now? hell yes\r\n                    }\r\n                }\r\n                if (fromBeepBox) this.scale = 0;\r\n            } break;\r\n            case SongTagCode.key: {\r\n                if (beforeSeven && fromBeepBox) {\r\n                    this.key = clamp(0, Config.keys.length, 11 - base64CharCodeToInt[compressed.charCodeAt(charIndex++)]);\r\n                    this.octave = 0;\r\n                } else if (fromBeepBox || fromJummBox) {\r\n                    this.key = clamp(0, Config.keys.length, base64CharCodeToInt[compressed.charCodeAt(charIndex++)]);\r\n                    this.octave = 0;\r\n                } else if (fromGoldBox || (beforeThree && fromUltraBox)) {\r\n                    // GoldBox (so far) didn't introduce any new keys, but old\r\n                    // songs made with early versions of UltraBox share the\r\n                    // same URL format, and those can have more keys. This\r\n                    // shouldn't really result in anything other than 0-11 for\r\n                    // the key and 0 for the octave for GoldBox songs.\r\n                    const rawKeyIndex: number = base64CharCodeToInt[compressed.charCodeAt(charIndex++)];\r\n                    const [key, octave]: [number, number] = convertLegacyKeyToKeyAndOctave(rawKeyIndex);\r\n                    this.key = key;\r\n                    this.octave = octave;\r\n                } else {\r\n                    this.key = clamp(0, Config.keys.length, base64CharCodeToInt[compressed.charCodeAt(charIndex++)]);\r\n                    this.octave = clamp(Config.octaveMin, Config.octaveMax + 1, base64CharCodeToInt[compressed.charCodeAt(charIndex++)] + Config.octaveMin);\r\n                }\r\n            } break;\r\n            case SongTagCode.edo: {\r\n                Config.pitchesPerOctave = base64CharCodeToInt[compressed.charCodeAt(charIndex++)];\r\n                Config.newEDO = Config.pitchesPerOctave;\r\n                //Config.pitchesPerOctave = 15;\r\n                Config.maxPitch = Config.pitchOctaves * Config.pitchesPerOctave;\r\n                //Config.justIntonationSemitones = [1.0 / 2.0, 8.0 / 15.0, 9.0 / 16.0, 3.0 / 5.0, 5.0 / 8.0, 2.0 / 3.0, 32.0 / 45.0, 3.0 / 4.0, 4.0 / 5.0, 5.0 / 6.0, 8.0 / 9.0, 15.0 / 16.0, 1.0, 16.0 / 15.0, 9.0 / 8.0, 6.0 / 5.0, 5.0 / 4.0, 4.0 / 3.0, 45.0 / 32.0, 3.0 / 2.0, 8.0 / 5.0, 5.0 / 3.0, 16.0 / 9.0, 15.0 / 8.0, 2.0].map(x => Math.log2(x) * Config.pitchesPerOctave);\r\n                //charIndex+=1;\r\n            } break;\r\n            //microtuning changes\r\n            case SongTagCode.loopStart: {\r\n                if (beforeFive && fromBeepBox) {\r\n                    this.loopStart = base64CharCodeToInt[compressed.charCodeAt(charIndex++)];\r\n                } else {\r\n                    this.loopStart = (base64CharCodeToInt[compressed.charCodeAt(charIndex++)] << 6) + base64CharCodeToInt[compressed.charCodeAt(charIndex++)];\r\n                }\r\n            } break;\r\n            case SongTagCode.loopEnd: {\r\n                if (beforeFive && fromBeepBox) {\r\n                    this.loopLength = base64CharCodeToInt[compressed.charCodeAt(charIndex++)];\r\n                } else {\r\n                    this.loopLength = (base64CharCodeToInt[compressed.charCodeAt(charIndex++)] << 6) + base64CharCodeToInt[compressed.charCodeAt(charIndex++)] + 1;\r\n                }\r\n            } break;\r\n            case SongTagCode.tempo: {\r\n                if (beforeFour && fromBeepBox) {\r\n                    this.tempo = [95, 120, 151, 190][base64CharCodeToInt[compressed.charCodeAt(charIndex++)]];\r\n                } else if (beforeSeven && fromBeepBox) {\r\n                    this.tempo = [88, 95, 103, 111, 120, 130, 140, 151, 163, 176, 190, 206, 222, 240, 259][base64CharCodeToInt[compressed.charCodeAt(charIndex++)]];\r\n                } else {\r\n                    this.tempo = (base64CharCodeToInt[compressed.charCodeAt(charIndex++)] << 6) | (base64CharCodeToInt[compressed.charCodeAt(charIndex++)]);\r\n                }\r\n                this.tempo = clamp(Config.tempoMin, Config.tempoMax + 1, this.tempo);\r\n            } break;\r\n            case SongTagCode.reverb: {\r\n                if (beforeNine && fromBeepBox) {\r\n                    legacyGlobalReverb = base64CharCodeToInt[compressed.charCodeAt(charIndex++)] * 12;\r\n                    legacyGlobalReverb = clamp(0, Config.reverbRange, legacyGlobalReverb);\r\n                } else if ((fromJummBox && beforeFive) || (beforeFour && fromGoldBox)) {\r\n                    legacyGlobalReverb = base64CharCodeToInt[compressed.charCodeAt(charIndex++)];\r\n                    legacyGlobalReverb = clamp(0, Config.reverbRange, legacyGlobalReverb);\r\n                } else {\r\n                    // Do nothing, BeepBox v9+ do not support song-wide reverb - JummBox still does via modulator.\r\n                }\r\n            } break;\r\n            case SongTagCode.beatCount: {\r\n                if (beforeThree && fromBeepBox) {\r\n                    this.beatsPerBar = [6, 7, 8, 9, 10][base64CharCodeToInt[compressed.charCodeAt(charIndex++)]];\r\n                } else {\r\n                    this.beatsPerBar = base64CharCodeToInt[compressed.charCodeAt(charIndex++)] + 1;\r\n                }\r\n                this.beatsPerBar = Math.max(Config.beatsPerBarMin, Math.min(Config.beatsPerBarMax, this.beatsPerBar));\r\n            } break;\r\n            case SongTagCode.barCount: {\r\n                const barCount: number = (base64CharCodeToInt[compressed.charCodeAt(charIndex++)] << 6) + base64CharCodeToInt[compressed.charCodeAt(charIndex++)] + 1;\r\n                this.barCount = validateRange(Config.barCountMin, Config.barCountMax, barCount);\r\n                for (let channelIndex: number = 0; channelIndex < this.getChannelCount(); channelIndex++) {\r\n                    for (let bar = this.channels[channelIndex].bars.length; bar < this.barCount; bar++) {\r\n                        this.channels[channelIndex].bars[bar] = (bar < 4) ? 1 : 0;\r\n                    }\r\n                    this.channels[channelIndex].bars.length = this.barCount;\r\n                }\r\n            } break;\r\n            case SongTagCode.patternCount: {\r\n                let patternsPerChannel: number;\r\n                if (beforeEight && fromBeepBox) {\r\n                    patternsPerChannel = base64CharCodeToInt[compressed.charCodeAt(charIndex++)] + 1;\r\n                } else {\r\n                    patternsPerChannel = (base64CharCodeToInt[compressed.charCodeAt(charIndex++)] << 6) + base64CharCodeToInt[compressed.charCodeAt(charIndex++)] + 1;\r\n                }\r\n                this.patternsPerChannel = validateRange(1, Config.barCountMax, patternsPerChannel);\r\n                const channelCount: number = this.getChannelCount();\r\n                for (let channelIndex: number = 0; channelIndex < channelCount; channelIndex++) {\r\n                    const patterns: Pattern[] = this.channels[channelIndex].patterns;\r\n                    for (let pattern = patterns.length; pattern < this.patternsPerChannel; pattern++) {\r\n                        patterns[pattern] = new Pattern();\r\n                    }\r\n                    patterns.length = this.patternsPerChannel;\r\n                }\r\n            } break;\r\n            case SongTagCode.instrumentCount: {\r\n                if ((beforeNine && fromBeepBox) || ((fromJummBox && beforeFive) || (beforeFour && fromGoldBox))) {\r\n                    const instrumentsPerChannel: number = validateRange(Config.instrumentCountMin, Config.patternInstrumentCountMax, base64CharCodeToInt[compressed.charCodeAt(charIndex++)] + Config.instrumentCountMin);\r\n                    this.layeredInstruments = false;\r\n                    this.patternInstruments = (instrumentsPerChannel > 1);\r\n\r\n                    for (let channelIndex: number = 0; channelIndex < this.getChannelCount(); channelIndex++) {\r\n                        const isNoiseChannel: boolean = channelIndex >= this.pitchChannelCount && channelIndex < this.pitchChannelCount + this.noiseChannelCount;\r\n                        const isModChannel: boolean = channelIndex >= this.pitchChannelCount + this.noiseChannelCount;\r\n\r\n                        for (let instrumentIndex: number = this.channels[channelIndex].instruments.length; instrumentIndex < instrumentsPerChannel; instrumentIndex++) {\r\n                            this.channels[channelIndex].instruments[instrumentIndex] = new Instrument(isNoiseChannel, isModChannel);\r\n                        }\r\n                        this.channels[channelIndex].instruments.length = instrumentsPerChannel;\r\n                        if (beforeSix && fromBeepBox) {\r\n                            for (let instrumentIndex: number = 0; instrumentIndex < instrumentsPerChannel; instrumentIndex++) {\r\n                                this.channels[channelIndex].instruments[instrumentIndex].setTypeAndReset(isNoiseChannel ? InstrumentType.noise : InstrumentType.chip, isNoiseChannel, isModChannel);\r\n                            }\r\n                        }\r\n\r\n                        for (let j: number = legacySettingsCache![channelIndex].length; j < instrumentsPerChannel; j++) {\r\n                            legacySettingsCache![channelIndex][j] = {};\r\n                        }\r\n                    }\r\n                } else {\r\n                    const instrumentsFlagBits: number = base64CharCodeToInt[compressed.charCodeAt(charIndex++)];\r\n                    this.layeredInstruments = (instrumentsFlagBits & (1 << 1)) != 0;\r\n                    this.patternInstruments = (instrumentsFlagBits & (1 << 0)) != 0;\r\n                    for (let channelIndex: number = 0; channelIndex < this.getChannelCount(); channelIndex++) {\r\n                        let instrumentCount: number = 1;\r\n                        if (this.layeredInstruments || this.patternInstruments) {\r\n                            instrumentCount = validateRange(Config.instrumentCountMin, this.getMaxInstrumentsPerChannel(), base64CharCodeToInt[compressed.charCodeAt(charIndex++)] + Config.instrumentCountMin);\r\n                        }\r\n                        const channel: Channel = this.channels[channelIndex];\r\n                        const isNoiseChannel: boolean = this.getChannelIsNoise(channelIndex);\r\n                        const isModChannel: boolean = this.getChannelIsMod(channelIndex);\r\n                        for (let i: number = channel.instruments.length; i < instrumentCount; i++) {\r\n                            channel.instruments[i] = new Instrument(isNoiseChannel, isModChannel);\r\n                        }\r\n                        channel.instruments.length = instrumentCount;\r\n                    }\r\n                }\r\n            } break;\r\n            case SongTagCode.rhythm: {\r\n                if (!fromUltraBox) {\r\n\t\t\tlet newRhythm = base64CharCodeToInt[compressed.charCodeAt(charIndex++)];\t\r\n\t\t\tthis.rhythm = clamp(0, Config.rhythms.length, newRhythm + 2);\r\n\t\t\tif (fromJummBox && beforeThree || fromBeepBox) {\r\n\t\t\t\tif (this.rhythm == 2 || this.rhythm == 3) {\r\n\t\t\t\t\tuseSlowerArpSpeed = true;\r\n\t\t\t\t}\r\n\t\t\t\tif (this.rhythm >= 2) {\r\n\t\t\t\t\tuseFastTwoNoteArp = true;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\t\r\n\t\t} else {\r\n\t\t\tthis.rhythm = base64CharCodeToInt[compressed.charCodeAt(charIndex++)];\r\n\t\t}\r\n\t\t//rhythm fixes\r\n            } break;\r\n            case SongTagCode.channelOctave: {\r\n                if (beforeThree && fromBeepBox) {\r\n                    const channelIndex: number = base64CharCodeToInt[compressed.charCodeAt(charIndex++)];\r\n                    this.channels[channelIndex].octave = clamp(0, Config.pitchOctaves, base64CharCodeToInt[compressed.charCodeAt(charIndex++)] + 1);\r\n                    if (channelIndex >= this.pitchChannelCount) this.channels[channelIndex].octave = 0;\r\n                } else if ((beforeNine && fromBeepBox) || ((fromJummBox && beforeFive) || (beforeFour && fromGoldBox))) {\r\n                    for (let channelIndex: number = 0; channelIndex < this.getChannelCount(); channelIndex++) {\r\n                        this.channels[channelIndex].octave = clamp(0, Config.pitchOctaves, base64CharCodeToInt[compressed.charCodeAt(charIndex++)] + 1);\r\n                        if (channelIndex >= this.pitchChannelCount) this.channels[channelIndex].octave = 0;\r\n                    }\r\n                } else {\r\n                    for (let channelIndex: number = 0; channelIndex < this.pitchChannelCount; channelIndex++) {\r\n                        this.channels[channelIndex].octave = clamp(0, Config.pitchOctaves, base64CharCodeToInt[compressed.charCodeAt(charIndex++)]);\r\n                    }\r\n                    for (let channelIndex: number = this.pitchChannelCount; channelIndex < this.getChannelCount(); channelIndex++) {\r\n                        this.channels[channelIndex].octave = 0;\r\n                    }\r\n                }\r\n            } break;\r\n            case SongTagCode.startInstrument: {\r\n                instrumentIndexIterator++;\r\n                if (instrumentIndexIterator >= this.channels[instrumentChannelIterator].instruments.length) {\r\n                    instrumentChannelIterator++;\r\n                    instrumentIndexIterator = 0;\r\n                }\r\n                validateRange(0, this.channels.length - 1, instrumentChannelIterator);\r\n                const instrument: Instrument = this.channels[instrumentChannelIterator].instruments[instrumentIndexIterator];\r\n                // JB before v5 had custom chip in the place where pickedString is now, and mod one sooner as well. New index is +1 for both.\r\n                let instrumentType: number = validateRange(0, InstrumentType.length - 1, base64CharCodeToInt[compressed.charCodeAt(charIndex++)]);\r\n                if ((fromJummBox && beforeFive) || (beforeFour && fromGoldBox)) {\r\n                    if (instrumentType == InstrumentType.pickedString) {\r\n                        instrumentType = InstrumentType.customChipWave;\r\n                    }\r\n                    else if (instrumentType == InstrumentType.customChipWave) {\r\n                        instrumentType = InstrumentType.mod;\r\n                    }\r\n                }\r\n                instrument.setTypeAndReset(instrumentType, instrumentChannelIterator >= this.pitchChannelCount && instrumentChannelIterator < this.pitchChannelCount + this.noiseChannelCount, instrumentChannelIterator >= this.pitchChannelCount + this.noiseChannelCount);\r\n\r\n                // Anti-aliasing was added in BeepBox 3.0 (v6->v7) and JummBox 1.3 (v1->v2 roughly but some leakage possible)\r\n                if (((beforeSeven && fromBeepBox) || (beforeTwo && fromJummBox)) && (instrumentType == InstrumentType.chip || instrumentType == InstrumentType.customChipWave || instrumentType == InstrumentType.pwm)) {\r\n                    instrument.aliases = true;\r\n                    instrument.distortion = 0;\r\n                    instrument.effects |= 1 << EffectType.distortion;\r\n                }\r\n                if (useSlowerArpSpeed) {\r\n                    instrument.arpeggioSpeed = 9; // x3/4 speed. This used to be tied to rhythm, but now it is decoupled to each instrument's arp speed slider. This flag gets set when importing older songs to keep things consistent.\r\n                }\r\n                if (useFastTwoNoteArp) {\r\n                    instrument.fastTwoNoteArp = true;\r\n                }\r\n\r\n                if (beforeSeven && fromBeepBox) {\r\n                    instrument.effects = 0;\r\n                    // Chip/noise instruments had arpeggio and FM had custom interval but neither\r\n                    // explicitly saved the chorus setting beforeSeven so enable it here.\r\n                    if (instrument.chord != Config.chords.dictionary[\"simultaneous\"].index) {\r\n                        // Enable chord if it was used.\r\n                        instrument.effects |= 1 << EffectType.chord;\r\n                    }\r\n                }\r\n            } break;\r\n            case SongTagCode.preset: {\r\n                const presetValue: number = (base64CharCodeToInt[compressed.charCodeAt(charIndex++)] << 6) | (base64CharCodeToInt[compressed.charCodeAt(charIndex++)]);\r\n                this.channels[instrumentChannelIterator].instruments[instrumentIndexIterator].preset = presetValue;\r\n                // Picked string was inserted before custom chip in JB v5, so bump up preset index.\r\n                if ((fromJummBox && beforeFive) || (beforeFour && fromGoldBox)) {\r\n                    if (this.channels[instrumentChannelIterator].instruments[instrumentIndexIterator].preset == InstrumentType.pickedString) {\r\n                        this.channels[instrumentChannelIterator].instruments[instrumentIndexIterator].preset = InstrumentType.customChipWave;\r\n                    }\r\n                }\r\n            } break;\r\n            case SongTagCode.wave: {\r\n                if (beforeThree && fromBeepBox) {\r\n                    const legacyWaves: number[] = [1, 2, 3, 4, 5, 6, 7, 8, 0];\r\n                    const channelIndex: number = base64CharCodeToInt[compressed.charCodeAt(charIndex++)];\r\n                    const instrument: Instrument = this.channels[channelIndex].instruments[0];\r\n                    instrument.chipWave = clamp(0, Config.chipWaves.length, legacyWaves[base64CharCodeToInt[compressed.charCodeAt(charIndex++)]] | 0);\r\n\r\n                    // Version 2 didn't save any settings for settings for filters, or envelopes,\r\n                    // just waves, so initialize them here I guess.\r\n                    instrument.convertLegacySettings(legacySettingsCache![channelIndex][0], forceSimpleFilter);\r\n\r\n                } else if (beforeSix && fromBeepBox) {\r\n                    const legacyWaves: number[] = [1, 2, 3, 4, 5, 6, 7, 8, 0];\r\n                    for (let channelIndex: number = 0; channelIndex < this.getChannelCount(); channelIndex++) {\r\n                        for (const instrument of this.channels[channelIndex].instruments) {\r\n                            if (channelIndex >= this.pitchChannelCount) {\r\n                                instrument.chipNoise = clamp(0, Config.chipNoises.length, base64CharCodeToInt[compressed.charCodeAt(charIndex++)]);\r\n                            } else {\r\n                                instrument.chipWave = clamp(0, Config.chipWaves.length, legacyWaves[base64CharCodeToInt[compressed.charCodeAt(charIndex++)]] | 0);\r\n                            }\r\n                        }\r\n                    }\r\n                } else if (beforeSeven && fromBeepBox) {\r\n                    const legacyWaves: number[] = [1, 2, 3, 4, 5, 6, 7, 8, 0];\r\n                    if (instrumentChannelIterator >= this.pitchChannelCount) {\r\n                        this.channels[instrumentChannelIterator].instruments[instrumentIndexIterator].chipNoise = clamp(0, Config.chipNoises.length, base64CharCodeToInt[compressed.charCodeAt(charIndex++)]);\r\n                    } else {\r\n                        this.channels[instrumentChannelIterator].instruments[instrumentIndexIterator].chipWave = clamp(0, Config.chipWaves.length, legacyWaves[base64CharCodeToInt[compressed.charCodeAt(charIndex++)]] | 0);\r\n                    }\r\n                } else {\r\n                    if (instrumentChannelIterator >= this.pitchChannelCount) {\r\n                        this.channels[instrumentChannelIterator].instruments[instrumentIndexIterator].chipNoise = clamp(0, Config.chipNoises.length, base64CharCodeToInt[compressed.charCodeAt(charIndex++)]);\r\n                    } else {\t\r\n\t\t\t\tif (fromUltraBox) {\r\n\t\t\t\t\tconst chipWaveReal = base64CharCodeToInt[compressed.charCodeAt(charIndex++)];\r\n\t\t\t\t\tconst chipWaveCounter = base64CharCodeToInt[compressed.charCodeAt(charIndex++)];\r\n\t\t\t\t\r\n\t\t\t\t\tif (chipWaveCounter == 3) {\r\n\t\t\t\t\t\tthis.channels[instrumentChannelIterator].instruments[instrumentIndexIterator].chipWave = clamp(0, Config.chipWaves.length, chipWaveReal + 186);\t\t\t\t\t\t\t\t\t\t\t   \t\t\t\t\t   \t \t\t\t\t\t\t  \t\t\t\t\t\t\t\t\r\n\t\t\t\t\t} else if (chipWaveCounter == 2) {\r\n\t\t\t\t\t\tthis.channels[instrumentChannelIterator].instruments[instrumentIndexIterator].chipWave = clamp(0, Config.chipWaves.length, chipWaveReal + 124);\t\t\t\t\t\t\t\t\t\t\t   \t\t\t\t\t   \t \t\t\t\t\t\t  \t\t\t\t\t\t\t\t\r\n\t\t\t\t\t} else if (chipWaveCounter == 1) {\r\n\t\t\t\t\t\tthis.channels[instrumentChannelIterator].instruments[instrumentIndexIterator].chipWave = clamp(0, Config.chipWaves.length, chipWaveReal + 62);\t\t\t\t\t\t\t\t\t\t\t   \t\t\t\t\t   \t \t\t\t\t\t\t  \t\t\t\t\t\t\t\t\r\n\t\t\t\t\t} else {\r\n\t\t\t\t\t\tthis.channels[instrumentChannelIterator].instruments[instrumentIndexIterator].chipWave = clamp(0, Config.chipWaves.length, chipWaveReal);\t\t\t\t\t\t\t\t\t\t\t   \t\t\t\t\t   \t \t\t\t\t\t\t  \t\t\t\t\t\t\t\t\r\n\t\t\t\t\t}\r\n\t\t\t\t\r\n\t\t\t\t} else {\r\n\t\t\t\t\tthis.channels[instrumentChannelIterator].instruments[instrumentIndexIterator].chipWave = clamp(0, Config.chipWaves.length, base64CharCodeToInt[compressed.charCodeAt(charIndex++)]);\r\n\t\t\t\t}\r\n\t\t }\r\n        \t}\r\n            } break;\r\n\t\t\tcase 120:\r\n\t\t\t\t\t\tif (fromGoldBox && !beforeFour && beforeSix) {\r\n\t\t\t\t\t\t\tconst chipWaveForCompat = base64CharCodeToInt[compressed.charCodeAt(charIndex++)];\r\n\t\t\t\t\t\t\tif ((chipWaveForCompat + 62) > 85) {\r\n\t\t\t\t\t\t\t\tif (document.URL.substring(document.URL.length - 13).toLowerCase() != \"legacysamples\") {\r\n\t\t\t\t\t\t\t\t\tdocument.location.href = document.URL.concat(\"|legacysamples\");\r\n\t\t\t\t\t\t\t\t\tlocation.reload();\r\n\t\t\t\t\t\t\t\t\t//loadBuiltInSamples(0);\r\n\t\t\t\t\t\t\t\t\t//run the loadBuiltInSamples function so it doesn't have to reload\r\n\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t\tif ((chipWaveForCompat + 62) > 78) {\r\n\t\t\t\t\t\t\t\tthis.channels[instrumentChannelIterator].instruments[instrumentIndexIterator].chipWave = clamp(0, Config.chipWaves.length, chipWaveForCompat + 63);\t\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\telse if ((chipWaveForCompat + 62) > 67) {\r\n\t\t\t\t\t\t\t\tthis.channels[instrumentChannelIterator].instruments[instrumentIndexIterator].chipWave = clamp(0, Config.chipWaves.length, chipWaveForCompat + 61);\t\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\telse if ((chipWaveForCompat + 62) == 67) {\r\n\t\t\t\t\t\t\t\tthis.channels[instrumentChannelIterator].instruments[instrumentIndexIterator].chipWave = 40;\t\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\telse {\r\n\t\t\t\t\t\t\t\tthis.channels[instrumentChannelIterator].instruments[instrumentIndexIterator].chipWave = clamp(0, Config.chipWaves.length, chipWaveForCompat + 62);\t\t\t\r\n\t\t\t\t\t\t\t}\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\t//is it more useful to save base64 characters or url length?\r\n\t\t\t\t\tbreak;\r\n            case SongTagCode.eqFilter: {\r\n                if ((beforeNine && fromBeepBox) || (beforeFive && fromJummBox) || (beforeFour && fromGoldBox)) {\r\n                    if (beforeSeven && fromBeepBox) {\r\n                        const legacyToCutoff: number[] = [10, 6, 3, 0, 8, 5, 2];\r\n                        //const pregoldToEnvelope: number[] = [0, 1, 2, 4, 5, 6, 8, 9, 10, 12, 13, 14, 16, 17, 18, 19, 20, 21, 23, 24, 25, 27, 28, 29, 32, 33, 34, 31, 11];\r\n                        const legacyToEnvelope: string[] = [\"none\", \"none\", \"none\", \"none\", \"decay 1\", \"decay 2\", \"decay 3\"];\r\n\r\n                        if (beforeThree && fromBeepBox) {\r\n                            const channelIndex: number = base64CharCodeToInt[compressed.charCodeAt(charIndex++)];\r\n                            const instrument: Instrument = this.channels[channelIndex].instruments[0];\r\n                            const legacySettings: LegacySettings = legacySettingsCache![channelIndex][0];\r\n                            const legacyFilter: number = [1, 3, 4, 5][clamp(0, legacyToCutoff.length, base64CharCodeToInt[compressed.charCodeAt(charIndex++)])];\r\n                            legacySettings.filterCutoff = legacyToCutoff[legacyFilter];\r\n                            legacySettings.filterResonance = 0;\r\n                            legacySettings.filterEnvelope = Config.envelopes.dictionary[legacyToEnvelope[legacyFilter]];\r\n                            instrument.convertLegacySettings(legacySettings, forceSimpleFilter);\r\n                        } else if (beforeSix && fromBeepBox) {\r\n                            for (let channelIndex: number = 0; channelIndex < this.getChannelCount(); channelIndex++) {\r\n                                for (let i: number = 0; i < this.channels[channelIndex].instruments.length; i++) {\r\n                                    const instrument: Instrument = this.channels[channelIndex].instruments[i];\r\n                                    const legacySettings: LegacySettings = legacySettingsCache![channelIndex][i];\r\n                                    const legacyFilter: number = clamp(0, legacyToCutoff.length, base64CharCodeToInt[compressed.charCodeAt(charIndex++)] + 1);\r\n                                    if (channelIndex < this.pitchChannelCount) {\r\n                                        legacySettings.filterCutoff = legacyToCutoff[legacyFilter];\r\n                                        legacySettings.filterResonance = 0;\r\n                                        legacySettings.filterEnvelope = Config.envelopes.dictionary[legacyToEnvelope[legacyFilter]];\r\n                                    } else {\r\n                                        legacySettings.filterCutoff = 10;\r\n                                        legacySettings.filterResonance = 0;\r\n                                        legacySettings.filterEnvelope = Config.envelopes.dictionary[\"none\"];\r\n                                    }\r\n                                    instrument.convertLegacySettings(legacySettings, forceSimpleFilter);\r\n                                }\r\n                            }\r\n                        } else {\r\n                            const legacyFilter: number = clamp(0, legacyToCutoff.length, base64CharCodeToInt[compressed.charCodeAt(charIndex++)]);\r\n                            const instrument: Instrument = this.channels[instrumentChannelIterator].instruments[instrumentIndexIterator];\r\n                            const legacySettings: LegacySettings = legacySettingsCache![instrumentChannelIterator][instrumentIndexIterator];\r\n                            legacySettings.filterCutoff = legacyToCutoff[legacyFilter];\r\n                            legacySettings.filterResonance = 0;\r\n                            legacySettings.filterEnvelope = Config.envelopes.dictionary[legacyToEnvelope[legacyFilter]];\r\n                            instrument.convertLegacySettings(legacySettings, forceSimpleFilter);\r\n                        }\r\n                    } else {\r\n                        const filterCutoffRange: number = 11;\r\n                        const instrument: Instrument = this.channels[instrumentChannelIterator].instruments[instrumentIndexIterator];\r\n                        const legacySettings: LegacySettings = legacySettingsCache![instrumentChannelIterator][instrumentIndexIterator];\r\n                        legacySettings.filterCutoff = clamp(0, filterCutoffRange, base64CharCodeToInt[compressed.charCodeAt(charIndex++)]);\r\n                        instrument.convertLegacySettings(legacySettings, forceSimpleFilter);\r\n                    }\r\n                } else {\r\n                    const instrument: Instrument = this.channels[instrumentChannelIterator].instruments[instrumentIndexIterator];\r\n                    let typeCheck: number = base64CharCodeToInt[compressed.charCodeAt(charIndex++)];\r\n\r\n                    if (fromBeepBox || typeCheck == 0) {\r\n                        instrument.eqFilterType = false;\r\n                        if (fromJummBox || fromGoldBox || fromUltraBox)\r\n                            typeCheck = base64CharCodeToInt[compressed.charCodeAt(charIndex++)]; // Skip to next to get control point count\r\n                        const originalControlPointCount: number = typeCheck;\r\n                        instrument.eqFilter.controlPointCount = clamp(0, Config.filterMaxPoints + 1, originalControlPointCount);\r\n                        for (let i: number = instrument.eqFilter.controlPoints.length; i < instrument.eqFilter.controlPointCount; i++) {\r\n                            instrument.eqFilter.controlPoints[i] = new FilterControlPoint();\r\n                        }\r\n                        for (let i: number = 0; i < instrument.eqFilter.controlPointCount; i++) {\r\n                            const point: FilterControlPoint = instrument.eqFilter.controlPoints[i];\r\n                            point.type = clamp(0, FilterType.length, base64CharCodeToInt[compressed.charCodeAt(charIndex++)]);\r\n                            point.freq = clamp(0, Config.filterFreqRange, base64CharCodeToInt[compressed.charCodeAt(charIndex++)]);\r\n                            point.gain = clamp(0, Config.filterGainRange, base64CharCodeToInt[compressed.charCodeAt(charIndex++)]);\r\n                        }\r\n                        for (let i: number = instrument.eqFilter.controlPointCount; i < originalControlPointCount; i++) {\r\n                            charIndex += 3;\r\n                        }\r\n\r\n                        // Get subfilters as well. Skip Index 0, is a copy of the base filter.\r\n                        instrument.eqSubFilters[0] = instrument.eqFilter;\r\n                        if ((fromJummBox && !beforeFive) || (fromGoldBox && !beforeFour) || fromUltraBox) {\r\n                            let usingSubFilterBitfield: number = (base64CharCodeToInt[compressed.charCodeAt(charIndex++)] << 6) | (base64CharCodeToInt[compressed.charCodeAt(charIndex++)]);\r\n                            for (let j: number = 0; j < Config.filterMorphCount - 1; j++) {\r\n                                if (usingSubFilterBitfield & (1 << j)) {\r\n                                    // Number of control points\r\n                                    const originalSubfilterControlPointCount: number = base64CharCodeToInt[compressed.charCodeAt(charIndex++)];\r\n                                    if (instrument.eqSubFilters[j + 1] == null)\r\n                                        instrument.eqSubFilters[j + 1] = new FilterSettings();\r\n                                    instrument.eqSubFilters[j + 1]!.controlPointCount = clamp(0, Config.filterMaxPoints + 1, originalSubfilterControlPointCount);\r\n                                    for (let i: number = instrument.eqSubFilters[j + 1]!.controlPoints.length; i < instrument.eqSubFilters[j + 1]!.controlPointCount; i++) {\r\n                                        instrument.eqSubFilters[j + 1]!.controlPoints[i] = new FilterControlPoint();\r\n                                    }\r\n                                    for (let i: number = 0; i < instrument.eqSubFilters[j + 1]!.controlPointCount; i++) {\r\n                                        const point: FilterControlPoint = instrument.eqSubFilters[j + 1]!.controlPoints[i];\r\n                                        point.type = clamp(0, FilterType.length, base64CharCodeToInt[compressed.charCodeAt(charIndex++)]);\r\n                                        point.freq = clamp(0, Config.filterFreqRange, base64CharCodeToInt[compressed.charCodeAt(charIndex++)]);\r\n                                        point.gain = clamp(0, Config.filterGainRange, base64CharCodeToInt[compressed.charCodeAt(charIndex++)]);\r\n                                    }\r\n                                    for (let i: number = instrument.eqSubFilters[j + 1]!.controlPointCount; i < originalSubfilterControlPointCount; i++) {\r\n                                        charIndex += 3;\r\n                                    }\r\n                                }\r\n                            }\r\n                        }\r\n                    }\r\n                    else {\r\n                        instrument.eqFilterType = true;\r\n                        instrument.eqFilterSimpleCut = clamp(0, Config.filterSimpleCutRange, base64CharCodeToInt[compressed.charCodeAt(charIndex++)]);\r\n                        instrument.eqFilterSimplePeak = clamp(0, Config.filterSimplePeakRange, base64CharCodeToInt[compressed.charCodeAt(charIndex++)]);\r\n                    }\r\n                }\r\n            } break;\r\n            case SongTagCode.filterResonance: {\r\n                if (fromUltraBox) {\r\n                    if (beforeThree) {\r\n                        // Still have to support the old and bad loop control data format written as a test, sigh.\r\n                        const sampleLoopInfoEncodedLength = decode32BitNumber(compressed, charIndex);\r\n                        charIndex += 6;\r\n                        const sampleLoopInfoEncoded = compressed.slice(charIndex, charIndex + sampleLoopInfoEncodedLength);\r\n                        charIndex += sampleLoopInfoEncodedLength;\r\n                        interface SampleLoopInfo {\r\n                            isUsingAdvancedLoopControls: boolean;\r\n                            chipWaveLoopStart: number;\r\n                            chipWaveLoopEnd: number;\r\n                            chipWaveLoopMode: number;\r\n                            chipWavePlayBackwards: boolean;\r\n                            chipWaveStartOffset: number;\r\n                        }\r\n                        interface SampleLoopInfoEntry {\r\n                            channel: number;\r\n                            instrument: number;\r\n                            info: SampleLoopInfo;\r\n                        }\r\n                        const sampleLoopInfo: SampleLoopInfoEntry[] = JSON.parse(atob(sampleLoopInfoEncoded));\r\n                        for (const entry of sampleLoopInfo) {\r\n                            const channelIndex: number = entry[\"channel\"];\r\n                            const instrumentIndex: number = entry[\"instrument\"];\r\n                            const info: SampleLoopInfo = entry[\"info\"];\r\n                            const instrument: Instrument = this.channels[channelIndex].instruments[instrumentIndex];\r\n                            instrument.isUsingAdvancedLoopControls = info[\"isUsingAdvancedLoopControls\"];\r\n                            instrument.chipWaveLoopStart = info[\"chipWaveLoopStart\"];\r\n                            instrument.chipWaveLoopEnd = info[\"chipWaveLoopEnd\"];\r\n                            instrument.chipWaveLoopMode = info[\"chipWaveLoopMode\"];\r\n                            instrument.chipWavePlayBackwards = info[\"chipWavePlayBackwards\"];\r\n                            instrument.chipWaveStartOffset = info[\"chipWaveStartOffset\"];\r\n                            // @TODO: Whenever chipWaveReleaseMode is implemented, it should be set here to the default.\r\n                        }\r\n                    } else {\r\n                        // Read the new loop control data format.\r\n                        // See Song.toBase64String for details on the encodings used here.\r\n                        const encodedLoopMode: number = base64CharCodeToInt[compressed.charCodeAt(charIndex++)];\r\n                        const isUsingAdvancedLoopControls: boolean = Boolean(encodedLoopMode & 1);\r\n                        const chipWaveLoopMode: number = encodedLoopMode >> 1;\r\n                        const encodedReleaseMode: number = base64CharCodeToInt[compressed.charCodeAt(charIndex++)];\r\n                        const chipWavePlayBackwards: boolean = Boolean(encodedReleaseMode & 1);\r\n                        // const chipWaveReleaseMode: number = encodedReleaseMode >> 1;\r\n                        const chipWaveLoopStart: number = decode32BitNumber(compressed, charIndex);\r\n                        charIndex += 6;\r\n                        const chipWaveLoopEnd: number = decode32BitNumber(compressed, charIndex);\r\n                        charIndex += 6;\r\n                        const chipWaveStartOffset: number = decode32BitNumber(compressed, charIndex);\r\n                        charIndex += 6;\r\n                        const instrument: Instrument = this.channels[instrumentChannelIterator].instruments[instrumentIndexIterator];\r\n                        instrument.isUsingAdvancedLoopControls = isUsingAdvancedLoopControls;\r\n                        instrument.chipWaveLoopStart = chipWaveLoopStart;\r\n                        instrument.chipWaveLoopEnd = chipWaveLoopEnd;\r\n                        instrument.chipWaveLoopMode = chipWaveLoopMode;\r\n                        instrument.chipWavePlayBackwards = chipWavePlayBackwards;\r\n                        instrument.chipWaveStartOffset = chipWaveStartOffset;\r\n                        // instrument.chipWaveReleaseMode = chipWaveReleaseMode;\r\n                    }\r\n                }\r\n                else if (fromGoldBox && !beforeFour && beforeSix) {\r\n                    if (document.URL.substring(document.URL.length - 13).toLowerCase() != \"legacysamples\") {\r\n                            document.location.href = document.URL.concat(\"|legacysamples\");\r\n                            location.reload();\r\n                            //loadBuiltInSamples(0);\r\n                            //run the loadBuiltInSamples function so it doesn't have to reload\r\n                    }\r\n                    this.channels[instrumentChannelIterator].instruments[instrumentIndexIterator].chipWave = clamp(0, Config.chipWaves.length, base64CharCodeToInt[compressed.charCodeAt(charIndex++)] + 125);\t\t\t\t\t\t\r\n                } else if ((beforeNine && fromBeepBox) || ((fromJummBox && beforeFive) || (beforeFour && fromGoldBox))) {\r\n                    const filterResonanceRange: number = 8;\r\n                    const instrument: Instrument = this.channels[instrumentChannelIterator].instruments[instrumentIndexIterator];\r\n                    const legacySettings: LegacySettings = legacySettingsCache![instrumentChannelIterator][instrumentIndexIterator];\r\n                    legacySettings.filterResonance = clamp(0, filterResonanceRange, base64CharCodeToInt[compressed.charCodeAt(charIndex++)]);\r\n                    instrument.convertLegacySettings(legacySettings, forceSimpleFilter);\r\n\r\n                } else {\r\n                    // Do nothing? This song tag code is deprecated for now.\r\n                }\r\n            } break;\r\n            case SongTagCode.drumsetEnvelopes: {\r\n                const instrument: Instrument = this.channels[instrumentChannelIterator].instruments[instrumentIndexIterator];\r\n                const pregoldToEnvelope: number[] = [0, 1, 2, 4, 5, 6, 8, 9, 10, 12, 13, 14, 16, 17, 18, 19, 20, 21, 23, 24, 25, 27, 28, 29, 32, 33, 34, 31, 11];\r\n                if ((beforeNine && fromBeepBox) || (beforeFive && fromJummBox) || (beforeFour && fromGoldBox)) {\r\n                    if((beforeTwo && fromGoldBox) || (!fromGoldBox && !fromUltraBox)){\r\n\r\n                    }\r\n                    if (instrument.type == InstrumentType.drumset) {\r\n                        for (let i: number = 0; i < Config.drumCount; i++) {\r\n                            let aa: number = base64CharCodeToInt[compressed.charCodeAt(charIndex++)];\r\n                            if((beforeTwo && fromGoldBox) || (!fromGoldBox && !fromUltraBox)) aa = pregoldToEnvelope[aa];\r\n                            instrument.drumsetEnvelopes[i] = Song._envelopeFromLegacyIndex(aa).index;\r\n                        }\r\n                    } else {\r\n                        // This used to be used for general filter envelopes.\r\n                        // The presence of an envelope affects how convertLegacySettings\r\n                        // decides the closest possible approximation, so update it.\r\n                        const legacySettings: LegacySettings = legacySettingsCache![instrumentChannelIterator][instrumentIndexIterator];\r\n                        let aa: number = base64CharCodeToInt[compressed.charCodeAt(charIndex++)];\r\n                        if((beforeTwo && fromGoldBox) || (!fromGoldBox && !fromUltraBox)) aa = pregoldToEnvelope[aa];\r\n                        legacySettings.filterEnvelope = Song._envelopeFromLegacyIndex(aa);\r\n                        instrument.convertLegacySettings(legacySettings, forceSimpleFilter);\r\n                    }\r\n                } else {\r\n                    // This tag is now only used for drumset filter envelopes.\r\n                    for (let i: number = 0; i < Config.drumCount; i++) {\r\n                        let aa: number = base64CharCodeToInt[compressed.charCodeAt(charIndex++)];\r\n                        if((beforeTwo && fromGoldBox) || (!fromGoldBox && !fromUltraBox)) aa = pregoldToEnvelope[aa];\r\n                        instrument.drumsetEnvelopes[i] = clamp(0, Config.envelopes.length, aa);\r\n                    }\r\n                }\r\n            } break;\r\n            case SongTagCode.pulseWidth: {\r\n                const instrument: Instrument = this.channels[instrumentChannelIterator].instruments[instrumentIndexIterator];\r\n                instrument.pulseWidth = clamp(0, Config.pulseWidthRange + (+(fromJummBox)) + 1, base64CharCodeToInt[compressed.charCodeAt(charIndex++)]);\r\n                if (fromBeepBox) {\r\n                    // BeepBox formula\r\n                    instrument.pulseWidth = Math.round(Math.pow(0.5, (7 - instrument.pulseWidth) * Config.pulseWidthStepPower) * Config.pulseWidthRange);\r\n\r\n                }\r\n\r\n                if ((beforeNine && fromBeepBox) || (beforeFive && fromJummBox) || (beforeFour && fromGoldBox)) {\r\n                    const pregoldToEnvelope: number[] = [0, 1, 2, 4, 5, 6, 8, 9, 10, 12, 13, 14, 16, 17, 18, 19, 20, 21, 23, 24, 25, 27, 28, 29, 32, 33, 34, 31, 11];\r\n                    const legacySettings: LegacySettings = legacySettingsCache![instrumentChannelIterator][instrumentIndexIterator];\r\n                    let aa: number = base64CharCodeToInt[compressed.charCodeAt(charIndex++)];\r\n                    if((beforeTwo && fromGoldBox) || (!fromGoldBox && !fromUltraBox)) aa = pregoldToEnvelope[aa];\r\n                    legacySettings.pulseEnvelope = Song._envelopeFromLegacyIndex(aa);\r\n                    instrument.convertLegacySettings(legacySettings, forceSimpleFilter);\r\n                }\r\n            } break;\r\n            case SongTagCode.stringSustain: {\r\n                const instrument: Instrument = this.channels[instrumentChannelIterator].instruments[instrumentIndexIterator];\r\n                instrument.stringSustain = clamp(0, Config.stringSustainRange, base64CharCodeToInt[compressed.charCodeAt(charIndex++)]);\r\n            } break;\r\n            case SongTagCode.fadeInOut: {\r\n                if ((beforeNine && fromBeepBox) || ((fromJummBox && beforeFive) || (beforeFour && fromGoldBox))) {\r\n                    // this tag was used for a combination of transition and fade in/out.\r\n                    const legacySettings = [\r\n                        { transition: \"interrupt\", fadeInSeconds: 0.0, fadeOutTicks: -1 },\r\n                        { transition: \"normal\", fadeInSeconds: 0.0, fadeOutTicks: -3 },\r\n                        { transition: \"normal\", fadeInSeconds: 0.025, fadeOutTicks: -3 },\r\n                        { transition: \"slide in pattern\", fadeInSeconds: 0.025, fadeOutTicks: -3 },\r\n                        { transition: \"normal\", fadeInSeconds: 0.04, fadeOutTicks: 6 },\r\n                        { transition: \"normal\", fadeInSeconds: 0.0, fadeOutTicks: 48 },\r\n                        { transition: \"normal\", fadeInSeconds: 0.0125, fadeOutTicks: 72 },\r\n                        { transition: \"normal\", fadeInSeconds: 0.06, fadeOutTicks: 96 },\r\n                        { transition: \"slide in pattern\", fadeInSeconds: 0.025, fadeOutTicks: -3 },\r\n                    ];\r\n                    if (beforeThree && fromBeepBox) {\r\n                        const channelIndex: number = base64CharCodeToInt[compressed.charCodeAt(charIndex++)];\r\n                        const settings = legacySettings[clamp(0, legacySettings.length, base64CharCodeToInt[compressed.charCodeAt(charIndex++)])];\r\n                        const instrument: Instrument = this.channels[channelIndex].instruments[0];\r\n                        instrument.fadeIn = Synth.secondsToFadeInSetting(settings.fadeInSeconds);\r\n                        instrument.fadeOut = Synth.ticksToFadeOutSetting(settings.fadeOutTicks);\r\n                        instrument.transition = Config.transitions.dictionary[settings.transition].index;\r\n                        if (instrument.transition != Config.transitions.dictionary[\"normal\"].index) {\r\n                            // Enable transition if it was used.\r\n                            instrument.effects |= 1 << EffectType.transition;\r\n                        }\r\n                    } else if (beforeSix && fromBeepBox) {\r\n                        for (let channelIndex: number = 0; channelIndex < this.getChannelCount(); channelIndex++) {\r\n                            for (const instrument of this.channels[channelIndex].instruments) {\r\n                                const settings = legacySettings[clamp(0, legacySettings.length, base64CharCodeToInt[compressed.charCodeAt(charIndex++)])];\r\n                                instrument.fadeIn = Synth.secondsToFadeInSetting(settings.fadeInSeconds);\r\n                                instrument.fadeOut = Synth.ticksToFadeOutSetting(settings.fadeOutTicks);\r\n                                instrument.transition = Config.transitions.dictionary[settings.transition].index;\r\n                                if (instrument.transition != Config.transitions.dictionary[\"normal\"].index) {\r\n                                    // Enable transition if it was used.\r\n                                    instrument.effects |= 1 << EffectType.transition;\r\n                                }\r\n                            }\r\n                        }\r\n                    } else if ((beforeFour && !fromGoldBox && !fromUltraBox) || fromBeepBox) {\r\n                        const settings = legacySettings[clamp(0, legacySettings.length, base64CharCodeToInt[compressed.charCodeAt(charIndex++)])];\r\n                        const instrument: Instrument = this.channels[instrumentChannelIterator].instruments[instrumentIndexIterator];\r\n                        instrument.fadeIn = Synth.secondsToFadeInSetting(settings.fadeInSeconds);\r\n                        instrument.fadeOut = Synth.ticksToFadeOutSetting(settings.fadeOutTicks);\r\n                        instrument.transition = Config.transitions.dictionary[settings.transition].index;\r\n                        if (instrument.transition != Config.transitions.dictionary[\"normal\"].index) {\r\n                            // Enable transition if it was used.\r\n                            instrument.effects |= 1 << EffectType.transition;\r\n                        }\r\n                    } else {\r\n                        const settings = legacySettings[clamp(0, legacySettings.length, base64CharCodeToInt[compressed.charCodeAt(charIndex++)])];\r\n                        const instrument: Instrument = this.channels[instrumentChannelIterator].instruments[instrumentIndexIterator];\r\n                        instrument.fadeIn = Synth.secondsToFadeInSetting(settings.fadeInSeconds);\r\n                        instrument.fadeOut = Synth.ticksToFadeOutSetting(settings.fadeOutTicks);\r\n                        instrument.transition = Config.transitions.dictionary[settings.transition].index;\r\n\r\n                        // Read tie-note \r\n                        if (base64CharCodeToInt[compressed.charCodeAt(charIndex++)] > 0) {\r\n                            // Set legacy tie over flag, which is only used to port notes in patterns using this instrument as tying.\r\n                            instrument.legacyTieOver = true;\r\n\r\n                        }\r\n                        instrument.clicklessTransition = base64CharCodeToInt[compressed.charCodeAt(charIndex++)] ? true : false;\r\n\r\n                        if (instrument.transition != Config.transitions.dictionary[\"normal\"].index || instrument.clicklessTransition) {\r\n                            // Enable transition if it was used.\r\n                            instrument.effects |= 1 << EffectType.transition;\r\n                        }\r\n                    }\r\n                } else {\r\n                    const instrument: Instrument = this.channels[instrumentChannelIterator].instruments[instrumentIndexIterator];\r\n                    instrument.fadeIn = clamp(0, Config.fadeInRange, base64CharCodeToInt[compressed.charCodeAt(charIndex++)]);\r\n                    instrument.fadeOut = clamp(0, Config.fadeOutTicks.length, base64CharCodeToInt[compressed.charCodeAt(charIndex++)]);\r\n                    if (fromJummBox||fromGoldBox||fromUltraBox)\r\n                        instrument.clicklessTransition = base64CharCodeToInt[compressed.charCodeAt(charIndex++)] ? true : false;\r\n                }\r\n            } break;\r\n            case SongTagCode.vibrato: {\r\n                if ((beforeNine && fromBeepBox) || ((fromJummBox && beforeFive) || (beforeFour && fromGoldBox))) {\r\n                    if (beforeSeven && fromBeepBox) {\r\n                        if (beforeThree && fromBeepBox) {\r\n                            const legacyEffects: number[] = [0, 3, 2, 0];\r\n                            const legacyEnvelopes: string[] = [\"none\", \"none\", \"none\", \"tremolo2\"];\r\n                            const channelIndex: number = base64CharCodeToInt[compressed.charCodeAt(charIndex++)];\r\n                            const effect: number = clamp(0, legacyEffects.length, base64CharCodeToInt[compressed.charCodeAt(charIndex++)]);\r\n                            const instrument: Instrument = this.channels[channelIndex].instruments[0];\r\n                            const legacySettings: LegacySettings = legacySettingsCache![channelIndex][0];\r\n                            instrument.vibrato = legacyEffects[effect];\r\n                            if (legacySettings.filterEnvelope == undefined || legacySettings.filterEnvelope.type == EnvelopeType.none) {\r\n                                // Imitate the legacy tremolo with a filter envelope.\r\n                                legacySettings.filterEnvelope = Config.envelopes.dictionary[legacyEnvelopes[effect]];\r\n                                instrument.convertLegacySettings(legacySettings, forceSimpleFilter);\r\n                            }\r\n                            if (instrument.vibrato != Config.vibratos.dictionary[\"none\"].index) {\r\n                                // Enable vibrato if it was used.\r\n                                instrument.effects |= 1 << EffectType.vibrato;\r\n                            }\r\n                        } else if (beforeSix && fromBeepBox) {\r\n                            const legacyEffects: number[] = [0, 1, 2, 3, 0, 0];\r\n                            const legacyEnvelopes: string[] = [\"none\", \"none\", \"none\", \"none\", \"tremolo5\", \"tremolo2\"];\r\n                            for (let channelIndex: number = 0; channelIndex < this.getChannelCount(); channelIndex++) {\r\n                                for (let i: number = 0; i < this.channels[channelIndex].instruments.length; i++) {\r\n                                    const effect: number = clamp(0, legacyEffects.length, base64CharCodeToInt[compressed.charCodeAt(charIndex++)]);\r\n                                    const instrument: Instrument = this.channels[channelIndex].instruments[i];\r\n                                    const legacySettings: LegacySettings = legacySettingsCache![channelIndex][i];\r\n                                    instrument.vibrato = legacyEffects[effect];\r\n                                    if (legacySettings.filterEnvelope == undefined || legacySettings.filterEnvelope.type == EnvelopeType.none) {\r\n                                        // Imitate the legacy tremolo with a filter envelope.\r\n                                        legacySettings.filterEnvelope = Config.envelopes.dictionary[legacyEnvelopes[effect]];\r\n                                        instrument.convertLegacySettings(legacySettings, forceSimpleFilter);\r\n                                    }\r\n                                    if (instrument.vibrato != Config.vibratos.dictionary[\"none\"].index) {\r\n                                        // Enable vibrato if it was used.\r\n                                        instrument.effects |= 1 << EffectType.vibrato;\r\n                                    }\r\n                                    if ((legacyGlobalReverb != 0 || ((fromJummBox && beforeFive) || (beforeFour && fromGoldBox))) && !this.getChannelIsNoise(channelIndex)) {\r\n                                        // Enable reverb if it was used globaly before. (Global reverb was added before the effects option so I need to pick somewhere else to initialize instrument reverb, and I picked the vibrato command.)\r\n                                        instrument.effects |= 1 << EffectType.reverb;\r\n                                        instrument.reverb = legacyGlobalReverb;\r\n                                    }\r\n                                }\r\n                            }\r\n                        } else {\r\n                            const legacyEffects: number[] = [0, 1, 2, 3, 0, 0];\r\n                            const legacyEnvelopes: string[] = [\"none\", \"none\", \"none\", \"none\", \"tremolo5\", \"tremolo2\"];\r\n                            const effect: number = clamp(0, legacyEffects.length, base64CharCodeToInt[compressed.charCodeAt(charIndex++)]);\r\n                            const instrument: Instrument = this.channels[instrumentChannelIterator].instruments[instrumentIndexIterator];\r\n                            const legacySettings: LegacySettings = legacySettingsCache![instrumentChannelIterator][instrumentIndexIterator];\r\n                            instrument.vibrato = legacyEffects[effect];\r\n                            if (legacySettings.filterEnvelope == undefined || legacySettings.filterEnvelope.type == EnvelopeType.none) {\r\n                                // Imitate the legacy tremolo with a filter envelope.\r\n                                legacySettings.filterEnvelope = Config.envelopes.dictionary[legacyEnvelopes[effect]];\r\n                                instrument.convertLegacySettings(legacySettings, forceSimpleFilter);\r\n                            }\r\n                            if (instrument.vibrato != Config.vibratos.dictionary[\"none\"].index) {\r\n                                // Enable vibrato if it was used.\r\n                                instrument.effects |= 1 << EffectType.vibrato;\r\n                            }\r\n                            if (legacyGlobalReverb != 0 || ((fromJummBox && beforeFive) || (beforeFour && fromGoldBox))) {\r\n                                // Enable reverb if it was used globaly before. (Global reverb was added before the effects option so I need to pick somewhere else to initialize instrument reverb, and I picked the vibrato command.)\r\n                                instrument.effects |= 1 << EffectType.reverb;\r\n                                instrument.reverb = legacyGlobalReverb;\r\n                            }\r\n                        }\r\n                    } else {\r\n                        const instrument: Instrument = this.channels[instrumentChannelIterator].instruments[instrumentIndexIterator];\r\n                        const vibrato: number = clamp(0, Config.vibratos.length + 1, base64CharCodeToInt[compressed.charCodeAt(charIndex++)]);\r\n                        instrument.vibrato = vibrato;\r\n                        if (instrument.vibrato != Config.vibratos.dictionary[\"none\"].index) {\r\n                            // Enable vibrato if it was used.\r\n                            instrument.effects |= 1 << EffectType.vibrato;\r\n                        }\r\n                        // Custom vibrato\r\n                        if (vibrato == Config.vibratos.length) {\r\n                            instrument.vibratoDepth = clamp(0, Config.modulators.dictionary[\"vibrato depth\"].maxRawVol + 1, base64CharCodeToInt[compressed.charCodeAt(charIndex++)]) / 50;\r\n                            instrument.vibratoSpeed = clamp(0, Config.modulators.dictionary[\"vibrato speed\"].maxRawVol + 1, base64CharCodeToInt[compressed.charCodeAt(charIndex++)]);\r\n                            instrument.vibratoDelay = clamp(0, Config.modulators.dictionary[\"vibrato delay\"].maxRawVol + 1, base64CharCodeToInt[compressed.charCodeAt(charIndex++)]) / 2;\r\n                            instrument.vibratoType = clamp(0, Config.vibratoTypes.length, base64CharCodeToInt[compressed.charCodeAt(charIndex++)]);\r\n                            instrument.effects |= 1 << EffectType.vibrato;\r\n                        }\r\n                        // Enforce standard vibrato settings\r\n                        else {\r\n                            instrument.vibratoDepth = Config.vibratos[instrument.vibrato].amplitude;\r\n                            instrument.vibratoSpeed = 10; // Normal speed\r\n                            instrument.vibratoDelay = Config.vibratos[instrument.vibrato].delayTicks / 2;\r\n                            instrument.vibratoType = Config.vibratos[instrument.vibrato].type;\r\n                        }\r\n                    }\r\n                } else {\r\n                    // Do nothing? This song tag code is deprecated for now.\r\n                }\r\n            } break;\r\n            case SongTagCode.arpeggioSpeed: {\r\n                // Deprecated, but supported for legacy purposes\r\n                if ((fromJummBox && beforeFive) || (beforeFour && fromGoldBox)) {\r\n                    const instrument: Instrument = this.channels[instrumentChannelIterator].instruments[instrumentIndexIterator];\r\n                    instrument.arpeggioSpeed = clamp(0, Config.modulators.dictionary[\"arp speed\"].maxRawVol + 1, base64CharCodeToInt[compressed.charCodeAt(charIndex++)]);\r\n                    instrument.fastTwoNoteArp = base64CharCodeToInt[compressed.charCodeAt(charIndex++)] ? true : false; // Two note arp setting piggybacks on this\r\n                }\r\n                else {\r\n                    // Do nothing, deprecated for now\r\n                }\r\n            } break;\r\n            case SongTagCode.unison: {\r\n                if (beforeThree && fromBeepBox) {\r\n                    const channelIndex: number = base64CharCodeToInt[compressed.charCodeAt(charIndex++)];\r\n                    this.channels[channelIndex].instruments[0].unison = clamp(0, Config.unisons.length, base64CharCodeToInt[compressed.charCodeAt(charIndex++)]);\r\n                } else if (beforeSix && fromBeepBox) {\r\n                    for (let channelIndex: number = 0; channelIndex < this.getChannelCount(); channelIndex++) {\r\n                        for (const instrument of this.channels[channelIndex].instruments) {\r\n                            const originalValue: number = base64CharCodeToInt[compressed.charCodeAt(charIndex++)];\r\n                            let unison: number = clamp(0, Config.unisons.length, originalValue);\r\n                            if (originalValue == 8) {\r\n                                // original \"custom harmony\" now maps to \"hum\" and \"custom interval\".\r\n                                unison = 2;\r\n                                instrument.chord = 3;\r\n                            }\r\n                            instrument.unison = unison;\r\n                        }\r\n                    }\r\n                } else if (beforeSeven && fromBeepBox) {\r\n                    const originalValue: number = base64CharCodeToInt[compressed.charCodeAt(charIndex++)];\r\n                    let unison: number = clamp(0, Config.unisons.length, originalValue);\r\n                    if (originalValue == 8) {\r\n                        // original \"custom harmony\" now maps to \"hum\" and \"custom interval\".\r\n                        unison = 2;\r\n                        this.channels[instrumentChannelIterator].instruments[instrumentIndexIterator].chord = 3;\r\n                    }\r\n                    this.channels[instrumentChannelIterator].instruments[instrumentIndexIterator].unison = unison;\r\n                } else {\r\n                    this.channels[instrumentChannelIterator].instruments[instrumentIndexIterator].unison = clamp(0, Config.unisons.length, base64CharCodeToInt[compressed.charCodeAt(charIndex++)]);\r\n                }\r\n            } break;\r\n            case SongTagCode.chord: {\r\n                if ((beforeNine && fromBeepBox) || ((fromJummBox && beforeFive) || (beforeFour && fromGoldBox))) {\r\n                    const instrument: Instrument = this.channels[instrumentChannelIterator].instruments[instrumentIndexIterator];\r\n                    instrument.chord = clamp(0, Config.chords.length, base64CharCodeToInt[compressed.charCodeAt(charIndex++)]);\r\n                    if (instrument.chord != Config.chords.dictionary[\"simultaneous\"].index) {\r\n                        // Enable chord if it was used.\r\n                        instrument.effects |= 1 << EffectType.chord;\r\n                    }\r\n                } else {\r\n                    // Do nothing? This song tag code is deprecated for now.\r\n                }\r\n            } break;\r\n            case SongTagCode.effects: {\r\n                const instrument: Instrument = this.channels[instrumentChannelIterator].instruments[instrumentIndexIterator];\r\n                if ((beforeNine && fromBeepBox) || ((fromJummBox && beforeFive) || (beforeFour && fromGoldBox))) {\r\n                    instrument.effects = (base64CharCodeToInt[compressed.charCodeAt(charIndex++)] & ((1 << EffectType.length) - 1));\r\n                    if (legacyGlobalReverb == 0 && !((fromJummBox && beforeFive) || (beforeFour && fromGoldBox))) {\r\n                        // Disable reverb if legacy song reverb was zero.\r\n                        instrument.effects &= ~(1 << EffectType.reverb);\r\n                    } else if (effectsIncludeReverb(instrument.effects)) {\r\n                        instrument.reverb = legacyGlobalReverb;\r\n                    }\r\n                    // @jummbus - Enabling pan effect on song import no matter what to make it a default.\r\n                    //if (instrument.pan != Config.panCenter) {\r\n                    instrument.effects |= 1 << EffectType.panning;\r\n                    //}\r\n                    if (instrument.vibrato != Config.vibratos.dictionary[\"none\"].index) {\r\n                        // Enable vibrato if it was used.\r\n                        instrument.effects |= 1 << EffectType.vibrato;\r\n                    }\r\n                    if (instrument.detune != Config.detuneCenter) {\r\n                        // Enable detune if it was used.\r\n                        instrument.effects |= 1 << EffectType.detune;\r\n                    }\r\n                    if (instrument.aliases)\r\n                        instrument.effects |= 1 << EffectType.distortion;\r\n                    else\r\n                        instrument.effects &= ~(1 << EffectType.distortion);\r\n\r\n                    // convertLegacySettings may need to force-enable note filter, call\r\n                    // it again here to make sure that this override takes precedence.\r\n                    const legacySettings: LegacySettings = legacySettingsCache![instrumentChannelIterator][instrumentIndexIterator];\r\n                    instrument.convertLegacySettings(legacySettings, forceSimpleFilter);\r\n                } else {\r\n                    // BeepBox currently uses two base64 characters at 6 bits each for a bitfield representing all the enabled effects.\r\n                    if (EffectType.length > 12) throw new Error();\r\n                    instrument.effects = (base64CharCodeToInt[compressed.charCodeAt(charIndex++)] << 6) | (base64CharCodeToInt[compressed.charCodeAt(charIndex++)]);\r\n\r\n                    if (effectsIncludeNoteFilter(instrument.effects)) {\r\n                        let typeCheck: number = base64CharCodeToInt[compressed.charCodeAt(charIndex++)];\r\n                        if (fromBeepBox || typeCheck == 0) {\r\n                            instrument.noteFilterType = false;\r\n                            if (fromJummBox || fromGoldBox || fromUltraBox)\r\n                                typeCheck = base64CharCodeToInt[compressed.charCodeAt(charIndex++)]; // Skip to next index in jummbox to get actual count\r\n                            instrument.noteFilter.controlPointCount = clamp(0, Config.filterMaxPoints + 1, typeCheck);\r\n                            for (let i: number = instrument.noteFilter.controlPoints.length; i < instrument.noteFilter.controlPointCount; i++) {\r\n                                instrument.noteFilter.controlPoints[i] = new FilterControlPoint();\r\n                            }\r\n                            for (let i: number = 0; i < instrument.noteFilter.controlPointCount; i++) {\r\n                                const point: FilterControlPoint = instrument.noteFilter.controlPoints[i];\r\n                                point.type = clamp(0, FilterType.length, base64CharCodeToInt[compressed.charCodeAt(charIndex++)]);\r\n                                point.freq = clamp(0, Config.filterFreqRange, base64CharCodeToInt[compressed.charCodeAt(charIndex++)]);\r\n                                point.gain = clamp(0, Config.filterGainRange, base64CharCodeToInt[compressed.charCodeAt(charIndex++)]);\r\n                            }\r\n                            for (let i: number = instrument.noteFilter.controlPointCount; i < typeCheck; i++) {\r\n                                charIndex += 3;\r\n                            }\r\n\r\n                            // Get subfilters as well. Skip Index 0, is a copy of the base filter.\r\n                            instrument.noteSubFilters[0] = instrument.noteFilter;\r\n                            if ((fromJummBox && !beforeFive) || (fromGoldBox) || (fromUltraBox)) {\r\n                                let usingSubFilterBitfield: number = (base64CharCodeToInt[compressed.charCodeAt(charIndex++)] << 6) | (base64CharCodeToInt[compressed.charCodeAt(charIndex++)]);\r\n                                for (let j: number = 0; j < Config.filterMorphCount - 1; j++) {\r\n                                    if (usingSubFilterBitfield & (1 << j)) {\r\n                                        // Number of control points\r\n                                        const originalSubfilterControlPointCount: number = base64CharCodeToInt[compressed.charCodeAt(charIndex++)];\r\n                                        if (instrument.noteSubFilters[j + 1] == null)\r\n                                            instrument.noteSubFilters[j + 1] = new FilterSettings();\r\n                                        instrument.noteSubFilters[j + 1]!.controlPointCount = clamp(0, Config.filterMaxPoints + 1, originalSubfilterControlPointCount);\r\n                                        for (let i: number = instrument.noteSubFilters[j + 1]!.controlPoints.length; i < instrument.noteSubFilters[j + 1]!.controlPointCount; i++) {\r\n                                            instrument.noteSubFilters[j + 1]!.controlPoints[i] = new FilterControlPoint();\r\n                                        }\r\n                                        for (let i: number = 0; i < instrument.noteSubFilters[j + 1]!.controlPointCount; i++) {\r\n                                            const point: FilterControlPoint = instrument.noteSubFilters[j + 1]!.controlPoints[i];\r\n                                            point.type = clamp(0, FilterType.length, base64CharCodeToInt[compressed.charCodeAt(charIndex++)]);\r\n                                            point.freq = clamp(0, Config.filterFreqRange, base64CharCodeToInt[compressed.charCodeAt(charIndex++)]);\r\n                                            point.gain = clamp(0, Config.filterGainRange, base64CharCodeToInt[compressed.charCodeAt(charIndex++)]);\r\n                                        }\r\n                                        for (let i: number = instrument.noteSubFilters[j + 1]!.controlPointCount; i < originalSubfilterControlPointCount; i++) {\r\n                                            charIndex += 3;\r\n                                        }\r\n                                    }\r\n                                }\r\n                            }\r\n                        } else {\r\n                            instrument.noteFilterType = true;\r\n                            instrument.noteFilter.reset();\r\n                            instrument.noteFilterSimpleCut = clamp(0, Config.filterSimpleCutRange, base64CharCodeToInt[compressed.charCodeAt(charIndex++)]);\r\n                            instrument.noteFilterSimplePeak = clamp(0, Config.filterSimplePeakRange, base64CharCodeToInt[compressed.charCodeAt(charIndex++)]);\r\n\r\n                        }\r\n                    }\r\n                    if (effectsIncludeTransition(instrument.effects)) {\r\n                        instrument.transition = clamp(0, Config.transitions.length, base64CharCodeToInt[compressed.charCodeAt(charIndex++)]);\r\n                    }\r\n                    if (effectsIncludeChord(instrument.effects)) {\r\n                        instrument.chord = clamp(0, Config.chords.length, base64CharCodeToInt[compressed.charCodeAt(charIndex++)]);\r\n                        // Custom arpeggio speed... only in JB, and only if the instrument arpeggiates.\r\n                        if (instrument.chord == Config.chords.dictionary[\"arpeggio\"].index && (fromJummBox||fromGoldBox||fromUltraBox)) {\r\n                            instrument.arpeggioSpeed = base64CharCodeToInt[compressed.charCodeAt(charIndex++)];\r\n                            instrument.fastTwoNoteArp = (base64CharCodeToInt[compressed.charCodeAt(charIndex++)]) ? true : false;\r\n                        }\r\n                    }\r\n                    if (effectsIncludePitchShift(instrument.effects)) {\r\n                        instrument.pitchShift = clamp(0, Config.pitchShiftRange, base64CharCodeToInt[compressed.charCodeAt(charIndex++)]);\r\n                    }\r\n                    if (effectsIncludeDetune(instrument.effects)) {\r\n                        if (fromBeepBox) {\r\n                            // Convert from BeepBox's formula\r\n                            instrument.detune = clamp(Config.detuneMin, Config.detuneMax + 1, base64CharCodeToInt[compressed.charCodeAt(charIndex++)]);\r\n                            instrument.detune = Math.round((instrument.detune - 9) * (Math.abs(instrument.detune - 9) + 1) / 2 + Config.detuneCenter);\r\n                        } else {\r\n                            instrument.detune = clamp(Config.detuneMin, Config.detuneMax + 1, (base64CharCodeToInt[compressed.charCodeAt(charIndex++)] << 6) + base64CharCodeToInt[compressed.charCodeAt(charIndex++)]);\r\n                        }\r\n                    }\r\n                    if (effectsIncludeVibrato(instrument.effects)) {\r\n                        instrument.vibrato = clamp(0, Config.vibratos.length + 1, base64CharCodeToInt[compressed.charCodeAt(charIndex++)]);\r\n\r\n                        // Custom vibrato\r\n                        if (instrument.vibrato == Config.vibratos.length && (fromJummBox || fromGoldBox || fromUltraBox)) {\r\n                            instrument.vibratoDepth = clamp(0, Config.modulators.dictionary[\"vibrato depth\"].maxRawVol + 1, base64CharCodeToInt[compressed.charCodeAt(charIndex++)]) / 25;\r\n                            instrument.vibratoSpeed = clamp(0, Config.modulators.dictionary[\"vibrato speed\"].maxRawVol + 1, base64CharCodeToInt[compressed.charCodeAt(charIndex++)]);\r\n                            instrument.vibratoDelay = clamp(0, Config.modulators.dictionary[\"vibrato delay\"].maxRawVol + 1, base64CharCodeToInt[compressed.charCodeAt(charIndex++)]);\r\n                            instrument.vibratoType = clamp(0, Config.vibratoTypes.length, base64CharCodeToInt[compressed.charCodeAt(charIndex++)]);\r\n                        }\r\n                        // Enforce standard vibrato settings\r\n                        else {\r\n                            instrument.vibratoDepth = Config.vibratos[instrument.vibrato].amplitude;\r\n                            instrument.vibratoSpeed = 10; // Normal speed\r\n                            instrument.vibratoDelay = Config.vibratos[instrument.vibrato].delayTicks / 2;\r\n                            instrument.vibratoType = Config.vibratos[instrument.vibrato].type;\r\n                        }\r\n                    }\r\n                    if (effectsIncludeDistortion(instrument.effects)) {\r\n                        instrument.distortion = clamp(0, Config.distortionRange, base64CharCodeToInt[compressed.charCodeAt(charIndex++)]);\r\n                        if ((fromJummBox && !beforeFive) || fromGoldBox || fromUltraBox)\r\n                            instrument.aliases = base64CharCodeToInt[compressed.charCodeAt(charIndex++)] ? true : false;\r\n                    }\r\n                    if (effectsIncludeBitcrusher(instrument.effects)) {\r\n                        instrument.bitcrusherFreq = clamp(0, Config.bitcrusherFreqRange, base64CharCodeToInt[compressed.charCodeAt(charIndex++)]);\r\n                        instrument.bitcrusherQuantization = clamp(0, Config.bitcrusherQuantizationRange, base64CharCodeToInt[compressed.charCodeAt(charIndex++)]);\r\n                    }\r\n                    if (effectsIncludePanning(instrument.effects)) {\r\n                        if (fromBeepBox) {\r\n                            // Beepbox has a panMax of 8 (9 total positions), Jummbox has a panMax of 100 (101 total positions)\r\n                            instrument.pan = clamp(0, Config.panMax + 1, Math.round(base64CharCodeToInt[compressed.charCodeAt(charIndex++)] * ((Config.panMax) / 8.0)));\r\n                        }\r\n                        else {\r\n                            instrument.pan = clamp(0, Config.panMax + 1, (base64CharCodeToInt[compressed.charCodeAt(charIndex++)] << 6) + base64CharCodeToInt[compressed.charCodeAt(charIndex++)]);\r\n                        }\r\n\r\n                        // Now, pan delay follows on new versions of jummbox.\r\n                        if ((fromJummBox && !beforeTwo) || fromGoldBox || fromUltraBox)\r\n                            instrument.panDelay = base64CharCodeToInt[compressed.charCodeAt(charIndex++)];\r\n                    }\r\n                    if (effectsIncludeChorus(instrument.effects)) {\r\n                        if (fromBeepBox) {\r\n                            // BeepBox has 4 chorus values vs. JB's 8\r\n                            instrument.chorus = clamp(0, (Config.chorusRange / 2) + 1, base64CharCodeToInt[compressed.charCodeAt(charIndex++)]) * 2;\r\n                        }\r\n                        else {\r\n                            instrument.chorus = clamp(0, Config.chorusRange, base64CharCodeToInt[compressed.charCodeAt(charIndex++)]);\r\n                        }\r\n                    }\r\n                    if (effectsIncludeEcho(instrument.effects)) {\r\n                        instrument.echoSustain = clamp(0, Config.echoSustainRange, base64CharCodeToInt[compressed.charCodeAt(charIndex++)]);\r\n                        instrument.echoDelay = clamp(0, Config.echoDelayRange, base64CharCodeToInt[compressed.charCodeAt(charIndex++)]);\r\n                    }\r\n                    if (effectsIncludeReverb(instrument.effects)) {\r\n                        if (fromBeepBox) {\r\n                            instrument.reverb = clamp(0, Config.reverbRange, Math.round(base64CharCodeToInt[compressed.charCodeAt(charIndex++)] * Config.reverbRange / 3.0));\r\n                        } else {\r\n                            instrument.reverb = clamp(0, Config.reverbRange, base64CharCodeToInt[compressed.charCodeAt(charIndex++)]);\r\n                        }\r\n                    }\r\n                }\r\n                // Clamp the range.\r\n                instrument.effects &= (1 << EffectType.length) - 1;\r\n            } break;\r\n            case SongTagCode.volume: {\r\n                if (beforeThree && fromBeepBox) {\r\n                    const channelIndex: number = base64CharCodeToInt[compressed.charCodeAt(charIndex++)];\r\n                    const instrument: Instrument = this.channels[channelIndex].instruments[0];\r\n                    instrument.volume = Math.round(clamp(-Config.volumeRange / 2, 1, -base64CharCodeToInt[compressed.charCodeAt(charIndex++)] * 5.0));\r\n                } else if (beforeSix && fromBeepBox) {\r\n                    for (let channelIndex: number = 0; channelIndex < this.getChannelCount(); channelIndex++) {\r\n                        for (const instrument of this.channels[channelIndex].instruments) {\r\n                            instrument.volume = Math.round(clamp(-Config.volumeRange / 2, 1, -base64CharCodeToInt[compressed.charCodeAt(charIndex++)] * 5.0));\r\n                        }\r\n                    }\r\n                } else if (beforeSeven && fromBeepBox) {\r\n                    const instrument: Instrument = this.channels[instrumentChannelIterator].instruments[instrumentIndexIterator];\r\n                    instrument.volume = Math.round(clamp(-Config.volumeRange / 2, 1, -base64CharCodeToInt[compressed.charCodeAt(charIndex++)] * 5.0));\r\n                } else if (fromBeepBox) {\r\n                    // Beepbox v9's volume range is 0-7 (0 is max, 7 is mute)\r\n                    const instrument: Instrument = this.channels[instrumentChannelIterator].instruments[instrumentIndexIterator];\r\n                    instrument.volume = Math.round(clamp(-Config.volumeRange / 2, 1, -base64CharCodeToInt[compressed.charCodeAt(charIndex++)] * 25.0 / 7.0));\r\n                } else {\r\n                    const instrument: Instrument = this.channels[instrumentChannelIterator].instruments[instrumentIndexIterator];\r\n                    // Volume is stored in two bytes in jummbox just in case range ever exceeds one byte, e.g. through later waffling on the subject.\r\n                    instrument.volume = Math.round(clamp(-Config.volumeRange / 2, Config.volumeRange / 2 + 1, ((base64CharCodeToInt[compressed.charCodeAt(charIndex++)] << 6) | (base64CharCodeToInt[compressed.charCodeAt(charIndex++)])) - Config.volumeRange / 2));\r\n                }\r\n            } break;\r\n            case SongTagCode.pan: {\r\n                if (beforeNine && fromBeepBox) {\r\n                    // Beepbox has a panMax of 8 (9 total positions), Jummbox has a panMax of 100 (101 total positions)\r\n                    const instrument: Instrument = this.channels[instrumentChannelIterator].instruments[instrumentIndexIterator];\r\n                    instrument.pan = clamp(0, Config.panMax + 1, base64CharCodeToInt[compressed.charCodeAt(charIndex++)] * ((Config.panMax) / 8.0));\r\n                } else if ((fromJummBox && beforeFive) || (beforeFour && fromGoldBox)) {\r\n                    const instrument: Instrument = this.channels[instrumentChannelIterator].instruments[instrumentIndexIterator];\r\n                    instrument.pan = clamp(0, Config.panMax + 1, (base64CharCodeToInt[compressed.charCodeAt(charIndex++)] << 6) + base64CharCodeToInt[compressed.charCodeAt(charIndex++)]);\r\n                    // Pan delay follows on v3 + v4\r\n                    if (fromJummBox && !beforeThree || fromGoldBox || fromUltraBox) {\r\n                        instrument.panDelay = base64CharCodeToInt[compressed.charCodeAt(charIndex++)];\r\n                    }\r\n                } else {\r\n                    // Do nothing? This song tag code is deprecated for now.\r\n                }\r\n            } break;\r\n            case SongTagCode.detune: {\r\n                const instrument: Instrument = this.channels[instrumentChannelIterator].instruments[instrumentIndexIterator];\r\n\r\n                if ((fromJummBox && beforeFive) || (beforeFour && fromGoldBox)) {\r\n                    // Before jummbox v5, detune was -50 to 50. Now it is 0 to 400\r\n                    instrument.detune = clamp(Config.detuneMin, Config.detuneMax + 1, ((base64CharCodeToInt[compressed.charCodeAt(charIndex++)] << 6) + base64CharCodeToInt[compressed.charCodeAt(charIndex++)]) * 4);\r\n                    instrument.effects |= 1 << EffectType.detune;\r\n                } else {\r\n                    // Now in v5, tag code is deprecated and handled thru detune effects.\r\n                }\r\n            } break;\r\n            case SongTagCode.customChipWave: {\r\n                let instrument: Instrument = this.channels[instrumentChannelIterator].instruments[instrumentIndexIterator];\r\n                // Pop custom wave values\r\n                for (let j: number = 0; j < 64; j++) {\r\n                    instrument.customChipWave[j]\r\n                        = clamp(-24, 25, base64CharCodeToInt[compressed.charCodeAt(charIndex++)] - 24);\r\n                }\r\n\r\n                let sum: number = 0.0;\r\n                for (let i: number = 0; i < instrument.customChipWave.length; i++) {\r\n                    sum += instrument.customChipWave[i];\r\n                }\r\n                const average: number = sum / instrument.customChipWave.length;\r\n\r\n                // Perform the integral on the wave. The chipSynth will perform the derivative to get the original wave back but with antialiasing.\r\n                let cumulative: number = 0;\r\n                let wavePrev: number = 0;\r\n                for (let i: number = 0; i < instrument.customChipWave.length; i++) {\r\n                    cumulative += wavePrev;\r\n                    wavePrev = instrument.customChipWave[i] - average;\r\n                    instrument.customChipWaveIntegral[i] = cumulative;\r\n                }\r\n\r\n                // 65th, last sample is for anti-aliasing\r\n                instrument.customChipWaveIntegral[64] = 0.0;\r\n\r\n            } break;\r\n            case SongTagCode.limiterSettings: {\r\n                let nextValue: number = base64CharCodeToInt[compressed.charCodeAt(charIndex++)];\r\n\r\n                // Check if limiter settings are used... if not, restore to default\r\n                if (nextValue == 0x3f) {\r\n                    this.restoreLimiterDefaults();\r\n                }\r\n                else {\r\n                    // Limiter is used, grab values\r\n                    this.compressionRatio = (nextValue < 10 ? nextValue / 10 : (1 + (nextValue - 10) / 60));\r\n                    nextValue = base64CharCodeToInt[compressed.charCodeAt(charIndex++)];\r\n                    this.limitRatio = (nextValue < 10 ? nextValue / 10 : (nextValue - 9));\r\n                    this.limitDecay = base64CharCodeToInt[compressed.charCodeAt(charIndex++)];\r\n                    this.limitRise = (base64CharCodeToInt[compressed.charCodeAt(charIndex++)] * 250.0) + 2000.0;\r\n                    this.compressionThreshold = base64CharCodeToInt[compressed.charCodeAt(charIndex++)] / 20.0;\r\n                    this.limitThreshold = base64CharCodeToInt[compressed.charCodeAt(charIndex++)] / 20.0;\r\n                    this.masterGain = ((base64CharCodeToInt[compressed.charCodeAt(charIndex++)] << 6) + base64CharCodeToInt[compressed.charCodeAt(charIndex++)]) / 50.0;\r\n                }\r\n            } break;\r\n            case SongTagCode.channelNames: {\r\n                for (let channel: number = 0; channel < this.getChannelCount(); channel++) {\r\n                    // Length of channel name string. Due to some crazy Unicode characters this needs to be 2 bytes...\r\n                    var channelNameLength;\r\n                    if (beforeFour && !fromGoldBox && !fromUltraBox)\r\n                        channelNameLength = base64CharCodeToInt[compressed.charCodeAt(charIndex++)]\r\n                    else\r\n                        channelNameLength = ((base64CharCodeToInt[compressed.charCodeAt(charIndex++)] << 6) + base64CharCodeToInt[compressed.charCodeAt(charIndex++)]);\r\n                    this.channels[channel].name = decodeURIComponent(compressed.substring(charIndex, charIndex + channelNameLength));\r\n\r\n                    charIndex += channelNameLength;\r\n                }\r\n            } break;\r\n            case SongTagCode.algorithm: {\r\n                const instrument: Instrument = this.channels[instrumentChannelIterator].instruments[instrumentIndexIterator];\r\n                if (instrument.type == InstrumentType.fm) {\r\n                    instrument.algorithm = clamp(0, Config.algorithms.length, base64CharCodeToInt[compressed.charCodeAt(charIndex++)]);\r\n                }\r\n                else {\r\n                    instrument.algorithm6Op = clamp(0, Config.algorithms6Op.length, base64CharCodeToInt[compressed.charCodeAt(charIndex++)]);\r\n                    instrument.customAlgorithm.fromPreset(instrument.algorithm6Op);\r\n                    if (compressed.charCodeAt(charIndex) == SongTagCode.chord) {\r\n                        let carrierCountTemp = clamp(1, Config.operatorCount + 2+1, base64CharCodeToInt[compressed.charCodeAt(charIndex + 1)]);\r\n                        charIndex++\r\n                        let tempModArray: number[][] = [];\r\n                        if (compressed.charCodeAt(charIndex+1) == SongTagCode.effects) {\r\n                            charIndex++\r\n                            let j: number = 0;\r\n                            charIndex++\r\n                            while (compressed.charCodeAt(charIndex) != SongTagCode.effects) {\r\n                                tempModArray[j] = [];\r\n                                let o: number = 0;\r\n                                while (compressed.charCodeAt(charIndex) != SongTagCode.operatorWaves) {\r\n                                    tempModArray[j][o] = clamp(1, Config.operatorCount + 3, base64CharCodeToInt[compressed.charCodeAt(charIndex)]);\r\n                                    o++\r\n                                    charIndex++\r\n                                }\r\n                                j++;\r\n                                charIndex++\r\n                            }\r\n                            instrument.customAlgorithm.set(carrierCountTemp, tempModArray);\r\n                            charIndex++; //????\r\n                        }\r\n                    }\r\n                }\r\n                if ((beforeNine && fromBeepBox) || (beforeFive && fromJummBox) || (beforeFour && fromGoldBox)) {\r\n                    // The algorithm determines the carrier count, which affects how legacy settings are imported.\r\n                    const legacySettings: LegacySettings = legacySettingsCache![instrumentChannelIterator][instrumentIndexIterator];\r\n                    instrument.convertLegacySettings(legacySettings, forceSimpleFilter);\r\n                }\r\n            } break;\r\n            case SongTagCode.feedbackType: {\r\n                const instrument: Instrument = this.channels[instrumentChannelIterator].instruments[instrumentIndexIterator];\r\n                if (instrument.type == InstrumentType.fm) {\r\n                    instrument.feedbackType = clamp(0, Config.feedbacks.length, base64CharCodeToInt[compressed.charCodeAt(charIndex++)]);\r\n                }\r\n                else {\r\n                    instrument.feedbackType6Op = clamp(0, Config.feedbacks6Op.length, base64CharCodeToInt[compressed.charCodeAt(charIndex++)]);\r\n                    instrument.customFeedbackType.fromPreset(instrument.feedbackType6Op);\r\n                    let tempModArray: number[][] = [];\r\n                    if (compressed.charCodeAt(charIndex) == SongTagCode.effects) {\r\n                        let j: number = 0;\r\n                        charIndex++\r\n                        while (compressed.charCodeAt(charIndex) != SongTagCode.effects) {\r\n                            tempModArray[j] = [];\r\n                            let o: number = 0;\r\n                            while (compressed.charCodeAt(charIndex) != SongTagCode.operatorWaves) {\r\n                                tempModArray[j][o] = clamp(1, Config.operatorCount + 2, base64CharCodeToInt[compressed.charCodeAt(charIndex)]);\r\n                                o++\r\n                                charIndex++\r\n                            }\r\n                            j++;\r\n                            charIndex++\r\n                        }\r\n                        instrument.customFeedbackType.set(tempModArray);\r\n                        charIndex++; //???? weirdly needs to skip the end character or it'll use that next loop instead of like just moving to the next one itself\r\n                    }\r\n                }\r\n\r\n            } break;\r\n            case SongTagCode.feedbackAmplitude: {\r\n                this.channels[instrumentChannelIterator].instruments[instrumentIndexIterator].feedbackAmplitude = clamp(0, Config.operatorAmplitudeMax + 1, base64CharCodeToInt[compressed.charCodeAt(charIndex++)]);\r\n            } break;\r\n            case SongTagCode.feedbackEnvelope: {\r\n                if ((beforeNine && fromBeepBox) || (beforeFive && fromJummBox) || (beforeFour && fromGoldBox)) {\r\n                    const pregoldToEnvelope: number[] = [0, 1, 2, 4, 5, 6, 8, 9, 10, 12, 13, 14, 16, 17, 18, 19, 20, 21, 23, 24, 25, 27, 28, 29, 32, 33, 34, 31, 11];\r\n                    const instrument: Instrument = this.channels[instrumentChannelIterator].instruments[instrumentIndexIterator];\r\n                    const legacySettings: LegacySettings = legacySettingsCache![instrumentChannelIterator][instrumentIndexIterator];\r\n                    \r\n                    let aa:number = base64CharCodeToInt[compressed.charCodeAt(charIndex++)];\r\n                    if ((beforeTwo && fromGoldBox) || (!fromGoldBox && !fromUltraBox)) aa = pregoldToEnvelope[aa];\r\n                    legacySettings.feedbackEnvelope = Song._envelopeFromLegacyIndex(base64CharCodeToInt[aa]);\r\n                    instrument.convertLegacySettings(legacySettings, forceSimpleFilter);\r\n                } else {\r\n                    // Do nothing? This song tag code is deprecated for now.\r\n                }\r\n            } break;\r\n            case SongTagCode.operatorFrequencies: {\r\n                const instrument = this.channels[instrumentChannelIterator].instruments[instrumentIndexIterator];\r\n                            if (beforeThree && fromGoldBox) {\r\n\t\t\t\t\t\t\t\tconst freqToGold3 = [4, 5, 6, 7, 8, 10, 12, 13, 14, 15, 16, 18, 20, 22, 24, 2, 1, 9, 17, 19, 21, 23, 0, 3];\r\n                               \r\n\t\t\t\t\t\t\t\tfor (let o = 0; o < (instrument.type == 10 ? 6 : Config.operatorCount); o++) {\r\n                                    instrument.operators[o].frequency = freqToGold3[clamp(0, freqToGold3.length, base64CharCodeToInt[compressed.charCodeAt(charIndex++)])];\r\n                                }\r\n                            }\r\n\t\t\t\t\t\t\telse if (!fromGoldBox && !fromUltraBox) {\r\n\t\t\t\t\t\t\t\tconst freqToUltraBox = [4, 5, 6, 7, 8, 10, 12, 13, 14, 15, 16, 18, 20, 23, 27, 2, 1, 9, 17, 19, 21, 23, 0, 3];\r\n\t\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t\t\tfor (let o = 0; o < (instrument.type == 10 ? 6 : Config.operatorCount); o++) {\r\n                                    instrument.operators[o].frequency = freqToUltraBox[clamp(0, freqToUltraBox.length, base64CharCodeToInt[compressed.charCodeAt(charIndex++)])];\r\n                                }\r\n\t\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t\t}\r\n                            else {\r\n                                for (let o = 0; o < (instrument.type == 10 ? 6 : Config.operatorCount); o++) {\r\n                                    instrument.operators[o].frequency = clamp(0, Config.operatorFrequencies.length, base64CharCodeToInt[compressed.charCodeAt(charIndex++)]);\r\n                                }\r\n                            }\r\n            } break;\r\n            case SongTagCode.operatorAmplitudes: {\r\n                const instrument: Instrument = this.channels[instrumentChannelIterator].instruments[instrumentIndexIterator];\r\n                for (let o: number = 0; o < (instrument.type == InstrumentType.fm6op ? 6 : Config.operatorCount); o++) {\r\n                    instrument.operators[o].amplitude = clamp(0, Config.operatorAmplitudeMax + 1, base64CharCodeToInt[compressed.charCodeAt(charIndex++)]);\r\n                }\r\n            } break;\r\n            case SongTagCode.envelopes: {\r\n                const pregoldToEnvelope: number[] = [0, 1, 2, 4, 5, 6, 8, 9, 10, 12, 13, 14, 16, 17, 18, 19, 20, 21, 23, 24, 25, 27, 28, 29, 32, 33, 34, 31, 11];\r\n                const instrument: Instrument = this.channels[instrumentChannelIterator].instruments[instrumentIndexIterator];\r\n                if ((beforeNine && fromBeepBox) || (beforeFive && fromJummBox) || (beforeFour && fromGoldBox)) {\r\n                    const legacySettings: LegacySettings = legacySettingsCache![instrumentChannelIterator][instrumentIndexIterator];\r\n                    legacySettings.operatorEnvelopes = [];\r\n                    for (let o: number = 0; o < (instrument.type == InstrumentType.fm6op ? 6 : Config.operatorCount); o++) {\r\n                        let aa:number = base64CharCodeToInt[compressed.charCodeAt(charIndex++)];\r\n                        if ((beforeTwo && fromGoldBox) || (!fromGoldBox && !fromUltraBox)) aa = pregoldToEnvelope[aa];\r\n                        legacySettings.operatorEnvelopes[o] = Song._envelopeFromLegacyIndex(aa);\r\n                    }\r\n                    instrument.convertLegacySettings(legacySettings, forceSimpleFilter);\r\n                } else {\r\n                    const envelopeCount: number = clamp(0, Config.maxEnvelopeCount + 1, base64CharCodeToInt[compressed.charCodeAt(charIndex++)]);\r\n                    for (let i: number = 0; i < envelopeCount; i++) {\r\n                        const target: number = clamp(0, Config.instrumentAutomationTargets.length, base64CharCodeToInt[compressed.charCodeAt(charIndex++)]);\r\n                        let index: number = 0;\r\n                        const maxCount: number = Config.instrumentAutomationTargets[target].maxCount;\r\n                        if (maxCount > 1) {\r\n                            index = clamp(0, maxCount, base64CharCodeToInt[compressed.charCodeAt(charIndex++)]);\r\n                        }\r\n                        let aa:number = base64CharCodeToInt[compressed.charCodeAt(charIndex++)];\r\n                        if ((beforeTwo && fromGoldBox) || (!fromGoldBox && !fromUltraBox)) aa = pregoldToEnvelope[aa];\r\n                        const envelope: number = clamp(0, Config.envelopes.length, aa);\r\n                        instrument.addEnvelope(target, index, envelope);\r\n                    }\r\n                }\r\n            } break;\r\n            case SongTagCode.operatorWaves: {\r\n                const instrument: Instrument = this.channels[instrumentChannelIterator].instruments[instrumentIndexIterator];\r\n\r\n                if (beforeThree && fromGoldBox) {\r\n                    for (let o: number = 0; o < Config.operatorCount; o++) {\r\n                        const pre3To3g = [0, 1, 3, 2, 2, 2, 4, 5];\r\n                        const old: number = clamp(0, pre3To3g.length, base64CharCodeToInt[compressed.charCodeAt(charIndex++)]);\r\n                        if (old == 3) {\r\n                            instrument.operators[o].pulseWidth = 5;\r\n                        } else if (old == 4) {\r\n                            instrument.operators[o].pulseWidth = 4;\r\n                        } else if (old == 5) {\r\n                            instrument.operators[o].pulseWidth = 6;\r\n                        }\r\n                        instrument.operators[o].waveform = pre3To3g[old];\r\n                    }\r\n                } else {\r\n                    for (let o: number = 0; o < (instrument.type == InstrumentType.fm6op ? 6 : Config.operatorCount); o++) {\r\n                        if (fromJummBox) {\r\n                            const jummToG = [0, 1, 3, 2, 4, 5];\r\n                            instrument.operators[o].waveform = jummToG[clamp(0, Config.operatorWaves.length, base64CharCodeToInt[compressed.charCodeAt(charIndex++)])];\r\n                        } else {\r\n                            instrument.operators[o].waveform = clamp(0, Config.operatorWaves.length, base64CharCodeToInt[compressed.charCodeAt(charIndex++)]);\r\n                        }\r\n                        // Pulse width follows, if it is a pulse width operator wave\r\n                        if (instrument.operators[o].waveform == 2) {\r\n                            instrument.operators[o].pulseWidth = clamp(0, Config.pwmOperatorWaves.length, base64CharCodeToInt[compressed.charCodeAt(charIndex++)]);\r\n                        }\r\n                    }\r\n                }\r\n\r\n            } break;\r\n            case SongTagCode.spectrum: {\r\n                const instrument: Instrument = this.channels[instrumentChannelIterator].instruments[instrumentIndexIterator];\r\n                if (instrument.type == InstrumentType.spectrum) {\r\n                    const byteCount: number = Math.ceil(Config.spectrumControlPoints * Config.spectrumControlPointBits / 6)\r\n                    const bits: BitFieldReader = new BitFieldReader(compressed, charIndex, charIndex + byteCount);\r\n                    for (let i: number = 0; i < Config.spectrumControlPoints; i++) {\r\n                        instrument.spectrumWave.spectrum[i] = bits.read(Config.spectrumControlPointBits);\r\n                    }\r\n                    instrument.spectrumWave.markCustomWaveDirty();\r\n                    charIndex += byteCount;\r\n                } else if (instrument.type == InstrumentType.drumset) {\r\n                    const byteCount: number = Math.ceil(Config.drumCount * Config.spectrumControlPoints * Config.spectrumControlPointBits / 6)\r\n                    const bits: BitFieldReader = new BitFieldReader(compressed, charIndex, charIndex + byteCount);\r\n                    for (let j: number = 0; j < Config.drumCount; j++) {\r\n                        for (let i: number = 0; i < Config.spectrumControlPoints; i++) {\r\n                            instrument.drumsetSpectrumWaves[j].spectrum[i] = bits.read(Config.spectrumControlPointBits);\r\n                        }\r\n                        instrument.drumsetSpectrumWaves[j].markCustomWaveDirty();\r\n                    }\r\n                    charIndex += byteCount;\r\n                } else {\r\n                    throw new Error(\"Unhandled instrument type for spectrum song tag code.\");\r\n                }\r\n            } break;\r\n            case SongTagCode.harmonics: {\r\n                const instrument: Instrument = this.channels[instrumentChannelIterator].instruments[instrumentIndexIterator];\r\n                const byteCount: number = Math.ceil(Config.harmonicsControlPoints * Config.harmonicsControlPointBits / 6)\r\n                const bits: BitFieldReader = new BitFieldReader(compressed, charIndex, charIndex + byteCount);\r\n                for (let i: number = 0; i < Config.harmonicsControlPoints; i++) {\r\n                    instrument.harmonicsWave.harmonics[i] = bits.read(Config.harmonicsControlPointBits);\r\n                }\r\n                instrument.harmonicsWave.markCustomWaveDirty();\r\n                charIndex += byteCount;\r\n            } break;\r\n            case SongTagCode.aliases: {\r\n                if ((fromJummBox && beforeFive) || (fromGoldBox && beforeFour)) {\r\n                    const instrument: Instrument = this.channels[instrumentChannelIterator].instruments[instrumentIndexIterator];\r\n                    instrument.aliases = (base64CharCodeToInt[compressed.charCodeAt(charIndex++)]) ? true : false;\r\n                    if (instrument.aliases) {\r\n                        instrument.distortion = 0;\r\n                        instrument.effects |= 1 << EffectType.distortion;\r\n                    }\r\n                } else {\r\n                    // Do nothing, deprecated\r\n                }\r\n            }\r\n                break;\r\n            case SongTagCode.bars: {\r\n                let subStringLength: number;\r\n                if (beforeThree && fromBeepBox) {\r\n                    const channelIndex: number = base64CharCodeToInt[compressed.charCodeAt(charIndex++)];\r\n                    const barCount: number = base64CharCodeToInt[compressed.charCodeAt(charIndex++)];\r\n                    subStringLength = Math.ceil(barCount * 0.5);\r\n                    const bits: BitFieldReader = new BitFieldReader(compressed, charIndex, charIndex + subStringLength);\r\n                    for (let i: number = 0; i < barCount; i++) {\r\n                        this.channels[channelIndex].bars[i] = bits.read(3) + 1;\r\n                    }\r\n                } else if (beforeFive && fromBeepBox) {\r\n                    let neededBits: number = 0;\r\n                    while ((1 << neededBits) < this.patternsPerChannel) neededBits++;\r\n                    subStringLength = Math.ceil(this.getChannelCount() * this.barCount * neededBits / 6);\r\n                    const bits: BitFieldReader = new BitFieldReader(compressed, charIndex, charIndex + subStringLength);\r\n                    for (let channelIndex: number = 0; channelIndex < this.getChannelCount(); channelIndex++) {\r\n                        for (let i: number = 0; i < this.barCount; i++) {\r\n                            this.channels[channelIndex].bars[i] = bits.read(neededBits) + 1;\r\n                        }\r\n                    }\r\n                } else {\r\n                    let neededBits: number = 0;\r\n                    while ((1 << neededBits) < this.patternsPerChannel + 1) neededBits++;\r\n                    subStringLength = Math.ceil(this.getChannelCount() * this.barCount * neededBits / 6);\r\n                    const bits: BitFieldReader = new BitFieldReader(compressed, charIndex, charIndex + subStringLength);\r\n                    for (let channelIndex: number = 0; channelIndex < this.getChannelCount(); channelIndex++) {\r\n                        for (let i: number = 0; i < this.barCount; i++) {\r\n                            this.channels[channelIndex].bars[i] = bits.read(neededBits);\r\n                        }\r\n                    }\r\n                }\r\n                charIndex += subStringLength;\r\n            } break;\r\n            case SongTagCode.patterns: {\r\n                let bitStringLength: number = 0;\r\n                let channelIndex: number;\r\n                let largerChords: boolean = !((beforeFour && fromJummBox) || fromBeepBox);\r\n                let recentPitchBitLength: number = (largerChords ? 4 : 3);\r\n                let recentPitchLength: number = (largerChords ? 16 : 8);\r\n                if (beforeThree && fromBeepBox) {\r\n                    channelIndex = base64CharCodeToInt[compressed.charCodeAt(charIndex++)];\r\n\r\n                    // The old format used the next character to represent the number of patterns in the channel, which is usually eight, the default. \r\n                    charIndex++; //let patternCount: number = base64CharCodeToInt[compressed.charCodeAt(charIndex++)];\r\n\r\n                    bitStringLength = base64CharCodeToInt[compressed.charCodeAt(charIndex++)];\r\n                    bitStringLength = bitStringLength << 6;\r\n                    bitStringLength += base64CharCodeToInt[compressed.charCodeAt(charIndex++)];\r\n                } else {\r\n                    channelIndex = 0;\r\n                    let bitStringLengthLength: number = validateRange(1, 4, base64CharCodeToInt[compressed.charCodeAt(charIndex++)]);\r\n                    while (bitStringLengthLength > 0) {\r\n                        bitStringLength = bitStringLength << 6;\r\n                        bitStringLength += base64CharCodeToInt[compressed.charCodeAt(charIndex++)];\r\n                        bitStringLengthLength--;\r\n                    }\r\n                }\r\n\r\n                const bits: BitFieldReader = new BitFieldReader(compressed, charIndex, charIndex + bitStringLength);\r\n                charIndex += bitStringLength;\r\n\r\n                const bitsPerNoteSize: number = Song.getNeededBits(Config.noteSizeMax);\r\n                let songReverbChannel: number = -1;\r\n                let songReverbInstrument: number = -1;\r\n                let songReverbIndex: number = -1;\r\n\r\n                while (true) {\r\n                    const channel: Channel = this.channels[channelIndex];\r\n                    const isNoiseChannel: boolean = this.getChannelIsNoise(channelIndex);\r\n                    const isModChannel: boolean = this.getChannelIsMod(channelIndex);\r\n\r\n                    const maxInstrumentsPerPattern: number = this.getMaxInstrumentsPerPattern(channelIndex);\r\n                    const neededInstrumentCountBits: number = Song.getNeededBits(maxInstrumentsPerPattern - Config.instrumentCountMin);\r\n\r\n                    const neededInstrumentIndexBits: number = Song.getNeededBits(channel.instruments.length - 1);\r\n\r\n                    // Some info about modulator settings immediately follows in mod channels.\r\n                    if (isModChannel) {\r\n                        let jumfive: boolean = (beforeFive && fromJummBox) || (beforeFour && fromGoldBox)\r\n\r\n                        // 2 more indices for 'all' and 'active'\r\n                        const neededModInstrumentIndexBits: number = (jumfive) ? neededInstrumentIndexBits : Song.getNeededBits(this.getMaxInstrumentsPerChannel() + 2);\r\n\r\n                        for (let instrumentIndex: number = 0; instrumentIndex < channel.instruments.length; instrumentIndex++) {\r\n\r\n                            let instrument: Instrument = channel.instruments[instrumentIndex];\r\n\r\n                            for (let mod: number = 0; mod < Config.modCount; mod++) {\r\n                                // Still using legacy \"mod status\" format, but doing it manually as it's only used in the URL now.\r\n                                // 0 - For pitch/noise\r\n                                // 1 - (used to be For noise, not needed)\r\n                                // 2 - For song\r\n                                // 3 - None\r\n                                let status: number = bits.read(2);\r\n\r\n                                switch (status) {\r\n                                    case 0: // Pitch\r\n                                        instrument.modChannels[mod] = clamp(0, this.pitchChannelCount + this.noiseChannelCount + 1, bits.read(8));\r\n                                        instrument.modInstruments[mod] = clamp(0, this.channels[instrument.modChannels[mod]].instruments.length + 2, bits.read(neededModInstrumentIndexBits));\r\n                                        break;\r\n                                    case 1: // Noise\r\n                                        // Getting a status of 1 means this is legacy mod info. Need to add pitch channel count, as it used to just store noise channel index and not overall channel index\r\n                                        instrument.modChannels[mod] = this.pitchChannelCount + clamp(0, this.noiseChannelCount + 1, bits.read(8));\r\n                                        instrument.modInstruments[mod] = clamp(0, this.channels[instrument.modChannels[mod]].instruments.length + 2, bits.read(neededInstrumentIndexBits));\r\n                                        break;\r\n                                    case 2: // For song\r\n                                        instrument.modChannels[mod] = -1;\r\n                                        break;\r\n                                    case 3: // None\r\n                                        instrument.modChannels[mod] = -2;\r\n                                        break;\r\n                                }\r\n\r\n                                // Mod setting is only used if the status isn't \"none\".\r\n                                if (status != 3) {\r\n                                    instrument.modulators[mod] = bits.read(6);\r\n                                }\r\n\r\n                                if (!jumfive && (Config.modulators[instrument.modulators[mod]].name == \"eq filter\" || Config.modulators[instrument.modulators[mod]].name == \"note filter\")) {\r\n                                    instrument.modFilterTypes[mod] = bits.read(6);\r\n                                }\r\n\r\n                                if (jumfive && instrument.modChannels[mod] >= 0) {\r\n                                    let forNoteFilter: boolean = effectsIncludeNoteFilter(this.channels[instrument.modChannels[mod]].instruments[instrument.modInstruments[mod]].effects);\r\n\r\n                                    // For legacy filter cut/peak, need to denote since scaling must be applied\r\n                                    if (instrument.modulators[mod] == 7) {\r\n                                        // Legacy filter cut index\r\n                                        // Check if there is no filter dot on prospective filter. If so, add a low pass at max possible freq.\r\n\r\n                                        if (forNoteFilter) {\r\n                                            instrument.modulators[mod] = Config.modulators.dictionary[\"note filt cut\"].index;\r\n                                        }\r\n                                        else {\r\n                                            instrument.modulators[mod] = Config.modulators.dictionary[\"eq filt cut\"].index;\r\n                                        }\r\n\r\n                                        instrument.modFilterTypes[mod] = 1; // Dot 1 X\r\n\r\n                                    }\r\n                                    else if (instrument.modulators[mod] == 8) {\r\n                                        // Legacy filter peak index\r\n                                        if (forNoteFilter) {\r\n                                            instrument.modulators[mod] = Config.modulators.dictionary[\"note filt peak\"].index;\r\n                                        }\r\n                                        else {\r\n                                            instrument.modulators[mod] = Config.modulators.dictionary[\"eq filt peak\"].index;\r\n                                        }\r\n\r\n                                        instrument.modFilterTypes[mod] = 2; // Dot 1 Y\r\n                                    }\r\n                                }\r\n                                else if (jumfive) {\r\n                                    // Check for song reverb mod, which must be handled differently now that it is a multiplier\r\n                                    if (instrument.modulators[mod] == Config.modulators.dictionary[\"song reverb\"].index) {\r\n                                        songReverbChannel = channelIndex;\r\n                                        songReverbInstrument = instrumentIndex;\r\n                                        songReverbIndex = mod;\r\n                                    }\r\n                                }\r\n\r\n                                // Based on setting, enable some effects for the modulated instrument. This isn't always set, say if the instrument's pan was right in the center.\r\n                                // Only used on import of old songs, because sometimes an invalid effect can be set in a mod in the new version that is actually unused. In that case,\r\n                                // keeping the mod invalid is better since it preserves the state.\r\n                                if (jumfive && Config.modulators[instrument.modulators[mod]].associatedEffect != EffectType.length) {\r\n                                    this.channels[instrument.modChannels[mod]].instruments[instrument.modInstruments[mod]].effects |= 1 << Config.modulators[instrument.modulators[mod]].associatedEffect;\r\n                                }\r\n                            }\r\n                        }\r\n                    }\r\n\r\n                    // Scalar applied to detune mods since its granularity was upped. Could be repurposed later if any other granularity changes occur.\r\n                    const detuneScaleNotes: number[][] = [];\r\n                    for (let j: number = 0; j < channel.instruments.length; j++) {\r\n                        detuneScaleNotes[j] = [];\r\n                        for (let i: number = 0; i < Config.modCount; i++) {\r\n                            detuneScaleNotes[j][Config.modCount - 1 - i] = 1 + 3 * +(((beforeFive && fromJummBox) || (beforeFour&&fromGoldBox)) && isModChannel && (channel.instruments[j].modulators[i] == Config.modulators.dictionary[\"detune\"].index));\r\n                        }\r\n                    }\r\n                    //const octaveOffset: number = (isNoiseChannel || isModChannel) ? 0 : channel.octave * 12;\r\n                    const octaveOffset: number = (isNoiseChannel || isModChannel) ? 0 : channel.octave * Config.pitchesPerOctave;\r\n                    let lastPitch: number = ((isNoiseChannel || isModChannel) ? 4 : octaveOffset);\r\n                    const recentPitches: number[] = isModChannel ? [0, 1, 2, 3, 4, 5] : (isNoiseChannel ? [4, 6, 7, 2, 3, 8, 0, 10] : [0, 7, 12, 19, 24, -5, -12]);\r\n                    const recentShapes: any[] = [];\r\n                    for (let i: number = 0; i < recentPitches.length; i++) {\r\n                        recentPitches[i] += octaveOffset;\r\n                    }\r\n                    for (let i: number = 0; i < this.patternsPerChannel; i++) {\r\n                        const newPattern: Pattern = channel.patterns[i];\r\n\r\n                        if ((beforeNine && fromBeepBox) || (beforeFive && fromJummBox) || (beforeFour && fromGoldBox)) {\r\n                            newPattern.instruments[0] = validateRange(0, channel.instruments.length - 1, bits.read(neededInstrumentIndexBits));\r\n                            newPattern.instruments.length = 1;\r\n                        } else {\r\n                            if (this.patternInstruments) {\r\n                                const instrumentCount: number = validateRange(Config.instrumentCountMin, maxInstrumentsPerPattern, bits.read(neededInstrumentCountBits) + Config.instrumentCountMin);\r\n                                for (let j: number = 0; j < instrumentCount; j++) {\r\n                                    newPattern.instruments[j] = validateRange(0, channel.instruments.length - 1 + +(isModChannel) * 2, bits.read(neededInstrumentIndexBits));\r\n                                }\r\n                                newPattern.instruments.length = instrumentCount;\r\n                            } else {\r\n                                newPattern.instruments[0] = 0;\r\n                                newPattern.instruments.length = Config.instrumentCountMin;\r\n                            }\r\n                        }\r\n\r\n                        if (!(fromBeepBox && beforeThree) && bits.read(1) == 0) {\r\n                            newPattern.notes.length = 0;\r\n                            continue;\r\n                        }\r\n\r\n                        let curPart: number = 0;\r\n                        const newNotes: Note[] = newPattern.notes;\r\n                        let noteCount: number = 0;\r\n                        // Due to arbitrary note positioning, mod channels don't end the count until curPart actually exceeds the max\r\n                        while (curPart < this.beatsPerBar * Config.partsPerBeat + (+isModChannel)) {\r\n\r\n                            const useOldShape: boolean = bits.read(1) == 1;\r\n                            let newNote: boolean = false;\r\n                            let shapeIndex: number = 0;\r\n                            if (useOldShape) {\r\n                                shapeIndex = validateRange(0, recentShapes.length - 1, bits.readLongTail(0, 0));\r\n                            } else {\r\n                                newNote = bits.read(1) == 1;\r\n                            }\r\n\r\n                            if (!useOldShape && !newNote) {\r\n                                // For mod channels, check if you need to move backward too (notes can appear in any order and offset from each other).\r\n                                if (isModChannel) {\r\n                                    const isBackwards: boolean = bits.read(1) == 1;\r\n                                    const restLength: number = bits.readPartDuration();\r\n                                    if (isBackwards) {\r\n                                        curPart -= restLength;\r\n                                    }\r\n                                    else {\r\n                                        curPart += restLength;\r\n                                    }\r\n                                } else {\r\n                                    const restLength: number = (beforeSeven && fromBeepBox)\r\n                                        ? bits.readLegacyPartDuration() * Config.partsPerBeat / Config.rhythms[this.rhythm].stepsPerBeat\r\n                                        : bits.readPartDuration();\r\n                                    curPart += restLength;\r\n\r\n                                }\r\n                            } else {\r\n                                let shape: any;\r\n                                if (useOldShape) {\r\n                                    shape = recentShapes[shapeIndex];\r\n                                    recentShapes.splice(shapeIndex, 1);\r\n                                } else {\r\n                                    shape = {};\r\n\r\n                                    if (!largerChords) {\r\n                                        // Old format: X 1's followed by a 0 => X+1 pitches, up to 4\r\n                                        shape.pitchCount = 1;\r\n                                        while (shape.pitchCount < 4 && bits.read(1) == 1) shape.pitchCount++;\r\n                                    }\r\n                                    else {\r\n                                        // New format is:\r\n                                        //      0: 1 pitch\r\n                                        // 1[XXX]: 3 bits of binary signifying 2+ pitches\r\n                                        if (bits.read(1) == 1) {\r\n                                            shape.pitchCount = bits.read(3) + 2;\r\n                                        }\r\n                                        else {\r\n                                            shape.pitchCount = 1;\r\n                                        }\r\n                                    }\r\n\r\n                                    shape.pinCount = bits.readPinCount();\r\n                                    if (fromBeepBox) {\r\n                                        shape.initialSize = bits.read(2) * 2;\r\n                                    } else if (!isModChannel) {\r\n                                        shape.initialSize = bits.read(bitsPerNoteSize);\r\n                                    } else {\r\n                                        shape.initialSize = bits.read(9);\r\n                                    }\r\n\r\n                                    shape.pins = [];\r\n                                    shape.length = 0;\r\n                                    shape.bendCount = 0;\r\n                                    for (let j: number = 0; j < shape.pinCount; j++) {\r\n                                        let pinObj: any = {};\r\n                                        pinObj.pitchBend = bits.read(1) == 1;\r\n                                        if (pinObj.pitchBend) shape.bendCount++;\r\n                                        shape.length += (beforeSeven && fromBeepBox)\r\n                                            ? bits.readLegacyPartDuration() * Config.partsPerBeat / Config.rhythms[this.rhythm].stepsPerBeat\r\n                                            : bits.readPartDuration();\r\n                                        pinObj.time = shape.length;\r\n                                        if (fromBeepBox) {\r\n                                            pinObj.size = bits.read(2) * 2;\r\n                                        } else if (!isModChannel) {\r\n                                            pinObj.size = bits.read(bitsPerNoteSize);\r\n                                        }\r\n                                        else {\r\n                                            pinObj.size = bits.read(9);\r\n                                        }\r\n                                        shape.pins.push(pinObj);\r\n                                    }\r\n                                }\r\n                                recentShapes.unshift(shape);\r\n                                if (recentShapes.length > 10) recentShapes.pop(); // TODO: Use Deque?\r\n\r\n                                let note: Note;\r\n                                if (newNotes.length <= noteCount) {\r\n                                    note = new Note(0, curPart, curPart + shape.length, shape.initialSize);\r\n                                    newNotes[noteCount++] = note;\r\n                                } else {\r\n                                    note = newNotes[noteCount++];\r\n                                    note.start = curPart;\r\n                                    note.end = curPart + shape.length;\r\n                                    note.pins[0].size = shape.initialSize;\r\n                                }\r\n\r\n                                let pitch: number;\r\n                                let pitchCount: number = 0;\r\n                                const pitchBends: number[] = []; // TODO: allocate this array only once! keep separate length and iterator index. Use Deque?\r\n                                for (let j: number = 0; j < shape.pitchCount + shape.bendCount; j++) {\r\n                                    const useOldPitch: boolean = bits.read(1) == 1;\r\n                                    if (!useOldPitch) {\r\n                                        const interval: number = bits.readPitchInterval();\r\n                                        pitch = lastPitch;\r\n                                        let intervalIter: number = interval;\r\n                                        while (intervalIter > 0) {\r\n                                            pitch++;\r\n                                            while (recentPitches.indexOf(pitch) != -1) pitch++;\r\n                                            intervalIter--;\r\n                                        }\r\n                                        while (intervalIter < 0) {\r\n                                            pitch--;\r\n                                            while (recentPitches.indexOf(pitch) != -1) pitch--;\r\n                                            intervalIter++;\r\n                                        }\r\n                                    } else {\r\n                                        const pitchIndex: number = validateRange(0, recentPitches.length - 1, bits.read(recentPitchBitLength));\r\n                                        pitch = recentPitches[pitchIndex];\r\n                                        recentPitches.splice(pitchIndex, 1);\r\n                                    }\r\n\r\n                                    recentPitches.unshift(pitch);\r\n                                    if (recentPitches.length > recentPitchLength) recentPitches.pop();\r\n\r\n                                    if (j < shape.pitchCount) {\r\n                                        note.pitches[pitchCount++] = pitch;\r\n                                    } else {\r\n                                        pitchBends.push(pitch);\r\n                                    }\r\n\r\n                                    if (j == shape.pitchCount - 1) {\r\n                                        lastPitch = note.pitches[0];\r\n                                    } else {\r\n                                        lastPitch = pitch;\r\n                                    }\r\n                                }\r\n                                note.pitches.length = pitchCount;\r\n                                pitchBends.unshift(note.pitches[0]); // TODO: Use Deque?\r\n                                if (isModChannel) {\r\n                                    note.pins[0].size *= detuneScaleNotes[newPattern.instruments[0]][note.pitches[0]];\r\n                                }\r\n                                let pinCount: number = 1;\r\n                                for (const pinObj of shape.pins) {\r\n                                    if (pinObj.pitchBend) pitchBends.shift();\r\n\r\n                                    const interval: number = pitchBends[0] - note.pitches[0];\r\n                                    if (note.pins.length <= pinCount) {\r\n                                        if (isModChannel) {\r\n                                            note.pins[pinCount++] = makeNotePin(interval, pinObj.time, pinObj.size * detuneScaleNotes[newPattern.instruments[0]][note.pitches[0]]);\r\n                                        } else {\r\n                                            note.pins[pinCount++] = makeNotePin(interval, pinObj.time, pinObj.size);\r\n                                        }\r\n                                    } else {\r\n                                        const pin: NotePin = note.pins[pinCount++];\r\n                                        pin.interval = interval;\r\n                                        pin.time = pinObj.time;\r\n                                        if (isModChannel) {\r\n                                            pin.size = pinObj.size * detuneScaleNotes[newPattern.instruments[0]][note.pitches[0]];\r\n                                        } else {\r\n                                            pin.size = pinObj.size;\r\n                                        }\r\n                                    }\r\n                                }\r\n                                note.pins.length = pinCount;\r\n\r\n                                if (note.start == 0) {\r\n                                    if (!((beforeNine && fromBeepBox) || (beforeFive && fromJummBox)||(beforeFour&&fromGoldBox))) {\r\n                                        note.continuesLastPattern = (bits.read(1) == 1);\r\n                                    } else {\r\n                                        if ((beforeFour && !fromUltraBox) || fromBeepBox) {\r\n                                            note.continuesLastPattern = false;\r\n                                        } else {\r\n                                            note.continuesLastPattern = channel.instruments[newPattern.instruments[0]].legacyTieOver;\r\n                                        }\r\n                                    }\r\n                                }\r\n\r\n                                curPart = validateRange(0, this.beatsPerBar * Config.partsPerBeat, note.end);\r\n                            }\r\n                        }\r\n                        newNotes.length = noteCount;\r\n                    }\r\n\r\n                    if (beforeThree && fromBeepBox) {\r\n                        break;\r\n                    } else {\r\n                        channelIndex++;\r\n                        if (channelIndex >= this.getChannelCount()) break;\r\n                    }\r\n                } // while (true)\r\n\r\n                // Correction for old JB songs that had song reverb mods. Change all instruments using reverb to max reverb\r\n                if (((fromJummBox && beforeFive)||(beforeFour && fromGoldBox)) && songReverbIndex >= 0) {\r\n                    for (let channelIndex: number = 0; channelIndex < this.channels.length; channelIndex++) {\r\n                        for (let instrumentIndex: number = 0; instrumentIndex < this.channels[channelIndex].instruments.length; instrumentIndex++) {\r\n                            const instrument: Instrument = this.channels[channelIndex].instruments[instrumentIndex];\r\n                            if (effectsIncludeReverb(instrument.effects)) {\r\n                                instrument.reverb = Config.reverbRange - 1;\r\n                            }\r\n                            // Set song reverb via mod to the old setting at song start.\r\n                            if (songReverbChannel == channelIndex && songReverbInstrument == instrumentIndex) {\r\n                                const patternIndex: number = this.channels[channelIndex].bars[0];\r\n                                if (patternIndex > 0) {\r\n                                    // Doesn't work if 1st pattern isn't using the right ins for song reverb...\r\n                                    // Add note to start of pattern\r\n                                    const pattern: Pattern = this.channels[channelIndex].patterns[patternIndex - 1];\r\n                                    let lowestPart: number = 6;\r\n                                    for (const note of pattern.notes) {\r\n                                        if (note.pitches[0] == Config.modCount - 1 - songReverbIndex) {\r\n                                            lowestPart = Math.min(lowestPart, note.start);\r\n                                        }\r\n                                    }\r\n\r\n                                    if (lowestPart > 0) {\r\n                                        pattern.notes.push(new Note(Config.modCount - 1 - songReverbIndex, 0, lowestPart, legacyGlobalReverb));\r\n                                    }\r\n                                }\r\n                                else {\r\n                                    // Add pattern\r\n                                    if (this.channels[channelIndex].patterns.length < Config.barCountMax) {\r\n                                        const pattern: Pattern = new Pattern();\r\n                                        this.channels[channelIndex].patterns.push(pattern);\r\n                                        this.channels[channelIndex].bars[0] = this.channels[channelIndex].patterns.length;\r\n                                        if (this.channels[channelIndex].patterns.length > this.patternsPerChannel) {\r\n                                            for (let chn: number = 0; chn < this.channels.length; chn++) {\r\n                                                if (this.channels[chn].patterns.length <= this.patternsPerChannel) {\r\n                                                    this.channels[chn].patterns.push(new Pattern());\r\n                                                }\r\n                                            }\r\n                                            this.patternsPerChannel++;\r\n                                        }\r\n                                        pattern.instruments.length = 1;\r\n                                        pattern.instruments[0] = songReverbInstrument;\r\n                                        pattern.notes.length = 0;\r\n                                        pattern.notes.push(new Note(Config.modCount - 1 - songReverbIndex, 0, 6, legacyGlobalReverb));\r\n                                    }\r\n                                }\r\n                            }\r\n                        }\r\n                    }\r\n                }\r\n            } break;\r\n            default: {\r\n                throw new Error(\"Unrecognized song tag code \" + String.fromCharCode(command) + \" at index \" + (charIndex - 1) + \" \" + compressed.substring(/*charIndex - 2*/0, charIndex));\r\n            } break;\r\n        }\r\n    }\r\n\r\n    private static _isProperUrl(string: string): boolean {\r\n        try { \r\n            return Boolean(new URL(string)); \r\n        }\r\n        catch(x){ \r\n            return false; \r\n        }\r\n    }\r\n\r\n    // @TODO: Share more of this code with AddSamplesPrompt.\r\n    private static _parseAndConfigureCustomSample(url: string, customSampleUrls: string[], customSamplePresets: Preset[], sampleLoadingState: SampleLoadingState): boolean {\r\n        const defaultIndex: number = 0;\r\n        const defaultIntegratedSamples: Float32Array = Config.chipWaves[defaultIndex].samples;\r\n        const defaultSamples: Float32Array = Config.rawRawChipWaves[defaultIndex].samples;\r\n\r\n        const customSampleUrlIndex: number = customSampleUrls.length;\r\n        customSampleUrls.push(url);\r\n        // This depends on `Config.chipWaves` being the same\r\n        // length as `Config.rawRawChipWaves`.\r\n        const chipWaveIndex: number = Config.chipWaves.length;\r\n\r\n        let urlSliced: string = url;\r\n\r\n        let customSampleRate: number = 44100;\r\n        let isCustomPercussive: boolean = false;\r\n        let customRootKey: number = 60;\r\n        let presetIsUsingAdvancedLoopControls: boolean = false;\r\n        let presetChipWaveLoopStart: number | null = null;\r\n        let presetChipWaveLoopEnd: number | null = null;\r\n        let presetChipWaveStartOffset: number | null = null;\r\n        let presetChipWaveLoopMode: number | null = null;\r\n        let presetChipWavePlayBackwards: boolean = false;\r\n\r\n        let parsedSampleOptions: boolean = false;\r\n        let optionsStartIndex: number = url.indexOf(\"!\");\r\n        let optionsEndIndex: number = -1;\r\n        if (optionsStartIndex === 0) {\r\n            optionsEndIndex = url.indexOf(\"!\", optionsStartIndex + 1);\r\n            if (optionsEndIndex !== -1) {\r\n                const rawOptions: string[] = url.slice(optionsStartIndex + 1, optionsEndIndex).split(\",\");\r\n                for (const rawOption of rawOptions) {\r\n                    const optionCode: string = rawOption.charAt(0);\r\n                    const optionData: string = rawOption.slice(1, rawOption.length);\r\n                    if (optionCode === \"s\") {\r\n                        customSampleRate = clamp(8000, 96000 + 1, parseFloat(optionData));\r\n                    } else if (optionCode === \"r\") {\r\n                        customRootKey = parseFloat(optionData);\r\n                    } else if (optionCode === \"p\") {\r\n                        isCustomPercussive = true;\r\n                    } else if (optionCode === \"a\") {\r\n                        presetIsUsingAdvancedLoopControls = true;\r\n                        presetChipWaveLoopStart = parseInt(optionData);\r\n                    } else if (optionCode === \"b\") {\r\n                        presetIsUsingAdvancedLoopControls = true;\r\n                        presetChipWaveLoopEnd = parseInt(optionData);\r\n                    } else if (optionCode === \"c\") {\r\n                        presetIsUsingAdvancedLoopControls = true;\r\n                        presetChipWaveStartOffset = parseInt(optionData);\r\n                    } else if (optionCode === \"d\") {\r\n                        presetIsUsingAdvancedLoopControls = true;\r\n                        presetChipWaveLoopMode = parseInt(optionData);\r\n                    } else if (optionCode === \"e\") {\r\n                        presetIsUsingAdvancedLoopControls = true;\r\n                        presetChipWavePlayBackwards = true;\r\n                    }\r\n                }\r\n                urlSliced = url.slice(optionsEndIndex + 1, url.length);\r\n                parsedSampleOptions = true;\r\n            }\r\n        }\r\n\r\n        let parsedUrl: URL | null = null;\r\n        if (Song._isProperUrl(urlSliced)) {\r\n            parsedUrl = new URL(urlSliced);\r\n        }\r\n        else {\r\n            alert(url + \" is not a valid url\");\r\n            return false;\r\n        }\r\n\r\n        if (!parsedSampleOptions && parsedUrl != null) {\r\n            if (url.indexOf(\"@\") != -1) {\r\n                //urlSliced = url.slice(url.indexOf(\"@\"), url.indexOf(\"@\"));\r\n                urlSliced = url.replaceAll(\"@\", \"\")\r\n                parsedUrl = new URL(urlSliced);\r\n                isCustomPercussive = true;\t\r\n            }\t\r\n\r\n            function sliceForSampleRate() {\r\n                urlSliced = url.slice(0, url.indexOf(\",\"));\r\n                parsedUrl = new URL(urlSliced);\r\n                customSampleRate = clamp(8000, 96000 + 1, parseFloat(url.slice(url.indexOf(\",\") + 1)));\r\n                //should this be parseFloat or parseInt?\r\n                //ig floats let you do decimals and such, but idk where that would be useful\r\n            }\r\n\r\n            function sliceForRootKey() {\r\n                urlSliced = url.slice(0, url.indexOf(\"!\"));\r\n                parsedUrl = new URL(urlSliced);\r\n                customRootKey = parseFloat(url.slice(url.indexOf(\"!\") + 1));\r\n            }\r\n\r\n\r\n            if (url.indexOf(\",\") != -1 && url.indexOf(\"!\") != -1) {\r\n                if (url.indexOf(\",\") < url.indexOf(\"!\")) {\r\n                    sliceForRootKey();\r\n                    sliceForSampleRate();\r\n                }\r\n                else {\r\n                    sliceForSampleRate();\r\n                    sliceForRootKey();\r\n                }\t\r\n            }\r\n            else {\r\n                if (url.indexOf(\",\") != -1) {\r\n                    sliceForSampleRate();\r\n                }\t\r\n                if (url.indexOf(\"!\") != -1) {\r\n                    sliceForRootKey();\r\n                }\t\r\n            }\r\n        }\r\n        \r\n        if (parsedUrl != null) {\r\n            // Store in the new format.\r\n            let urlWithNamedOptions = urlSliced;\r\n            const namedOptions: string[] = [];\r\n            if (customSampleRate !== 44100) namedOptions.push(\"s\" + customSampleRate);\r\n            if (customRootKey !== 60) namedOptions.push(\"r\" + customRootKey);\r\n            if (isCustomPercussive) namedOptions.push(\"p\");\r\n            if (presetIsUsingAdvancedLoopControls) {\r\n                if (presetChipWaveLoopStart != null) namedOptions.push(\"a\" + presetChipWaveLoopStart);\r\n                if (presetChipWaveLoopEnd != null) namedOptions.push(\"b\" + presetChipWaveLoopEnd);\r\n                if (presetChipWaveStartOffset != null) namedOptions.push(\"c\" + presetChipWaveStartOffset);\r\n                if (presetChipWaveLoopMode != null) namedOptions.push(\"d\" + presetChipWaveLoopMode);\r\n                if (presetChipWavePlayBackwards) namedOptions.push(\"e\");\r\n            }\r\n            if (namedOptions.length > 0) {\r\n                urlWithNamedOptions = \"!\" + namedOptions.join(\",\") + \"!\" + urlSliced;\r\n            }\r\n            customSampleUrls[customSampleUrlIndex] = urlWithNamedOptions;\r\n\r\n            // @TODO: Could also remove known extensions, but it\r\n            // would probably be much better to be able to specify\r\n            // a custom name.\r\n            // @TODO: If for whatever inexplicable reason someone\r\n            // uses an url like `https://example.com`, this will\r\n            // result in an empty name here.\r\n            const name: string = decodeURIComponent(parsedUrl.pathname.replace(/^([^\\/]*\\/)+/, \"\"));\r\n            // @TODO: What to do about samples with the same name?\r\n            // The problem with using the url is that the name is\r\n            // user-facing and long names break assumptions of the\r\n            // UI.\r\n            const expression: number = 1.0;\r\n            Config.chipWaves[chipWaveIndex] = {\r\n                name: name,\r\n                expression: expression,\r\n                isCustomSampled: true,\r\n                isPercussion: isCustomPercussive,\r\n                rootKey: customRootKey,\r\n                sampleRate: customSampleRate,\r\n                samples: defaultIntegratedSamples,\r\n                index: chipWaveIndex,\r\n            };\r\n            Config.rawChipWaves[chipWaveIndex] = {\r\n                name: name,\r\n                expression: expression,\r\n                isCustomSampled: true,\r\n                isPercussion: isCustomPercussive,\r\n                rootKey: customRootKey,\r\n                sampleRate: customSampleRate,\r\n                samples: defaultSamples,\r\n                index: chipWaveIndex,\r\n            };\r\n            Config.rawRawChipWaves[chipWaveIndex] = {\r\n                name: name,\r\n                expression: expression,\r\n                isCustomSampled: true,\r\n                isPercussion: isCustomPercussive,\r\n                rootKey: customRootKey,\r\n                sampleRate: customSampleRate,\r\n                samples: defaultSamples,\r\n                index: chipWaveIndex,\r\n            };\r\n            const customSamplePresetSettings: Dictionary<any> = {\r\n                \"type\": \"chip\",\r\n                \"eqFilter\": [],\r\n                \"effects\": [],\r\n                \"transition\": \"normal\",\r\n                \"fadeInSeconds\": 0,\r\n                \"fadeOutTicks\": -3,\r\n                \"chord\": \"harmony\",\r\n                \"wave\": name,\r\n                \"unison\": \"none\",\r\n                \"envelopes\": [],\r\n            };\r\n            if (presetIsUsingAdvancedLoopControls) {\r\n                customSamplePresetSettings[\"isUsingAdvancedLoopControls\"] = true;\r\n                customSamplePresetSettings[\"chipWaveLoopStart\"] = presetChipWaveLoopStart != null ? presetChipWaveLoopStart : 0;\r\n                customSamplePresetSettings[\"chipWaveLoopEnd\"] = presetChipWaveLoopEnd != null ? presetChipWaveLoopEnd : 2;\r\n                customSamplePresetSettings[\"chipWaveLoopMode\"] = presetChipWaveLoopMode != null ? presetChipWaveLoopMode : 0;\r\n                customSamplePresetSettings[\"chipWavePlayBackwards\"] = presetChipWavePlayBackwards;\r\n                customSamplePresetSettings[\"chipWaveStartOffset\"] = presetChipWaveStartOffset != null ? presetChipWaveStartOffset : 0;\r\n            }\r\n            customSamplePresets.push({\r\n                index: 0, // This should be overwritten by toNameMap, in our caller.\r\n                name: name,\r\n                midiProgram: 80,\r\n                settings: customSamplePresetSettings,\r\n            });\r\n            if (!Config.willReloadForCustomSamples) {\r\n                startLoadingSample(urlSliced, chipWaveIndex, customSampleRate);\r\n            }\r\n            sampleLoadingState.statusTable[chipWaveIndex] = SampleLoadingStatus.loading;\r\n            sampleLoadingState.urlTable[chipWaveIndex] = urlSliced;\r\n            sampleLoadingState.totalSamples++;\r\n        }\r\n\r\n        return true;\r\n    }\r\n\r\n    private static _restoreChipWaveListToDefault(): void {\r\n        Config.chipWaves = toNameMap(Config.chipWaves.slice(0, Config.firstIndexForSamplesInChipWaveList));\r\n        Config.rawChipWaves = toNameMap(Config.rawChipWaves.slice(0, Config.firstIndexForSamplesInChipWaveList));\r\n        Config.rawRawChipWaves = toNameMap(Config.rawRawChipWaves.slice(0, Config.firstIndexForSamplesInChipWaveList));\r\n    }\r\n\r\n    private static _clearSamples(): void {\r\n        EditorConfig.customSamples = null;\r\n\r\n        Song._restoreChipWaveListToDefault();\r\n\r\n        sampleLoadingState.statusTable = {};\r\n        sampleLoadingState.urlTable = {};\r\n        sampleLoadingState.totalSamples = 0;\r\n        sampleLoadingState.samplesLoaded = 0;\r\n        sampleLoadEvents.dispatchEvent(new SampleLoadedEvent(\r\n            sampleLoadingState.totalSamples,\r\n            sampleLoadingState.samplesLoaded\r\n        ));\r\n    }\r\n\r\n    public toJsonObject(enableIntro: boolean = true, loopCount: number = 1, enableOutro: boolean = true): Object {\r\n        const channelArray: Object[] = [];\r\n        for (let channelIndex: number = 0; channelIndex < this.getChannelCount(); channelIndex++) {\r\n            const channel: Channel = this.channels[channelIndex];\r\n            const instrumentArray: Object[] = [];\r\n            const isNoiseChannel: boolean = this.getChannelIsNoise(channelIndex);\r\n            const isModChannel: boolean = this.getChannelIsMod(channelIndex);\r\n            for (const instrument of channel.instruments) {\r\n                instrumentArray.push(instrument.toJsonObject());\r\n            }\r\n\r\n            const patternArray: Object[] = [];\r\n            for (const pattern of channel.patterns) {\r\n                patternArray.push(pattern.toJsonObject(this, channel, isModChannel));\r\n            }\r\n\r\n            const sequenceArray: number[] = [];\r\n            if (enableIntro) for (let i: number = 0; i < this.loopStart; i++) {\r\n                sequenceArray.push(channel.bars[i]);\r\n            }\r\n            for (let l: number = 0; l < loopCount; l++) for (let i: number = this.loopStart; i < this.loopStart + this.loopLength; i++) {\r\n                sequenceArray.push(channel.bars[i]);\r\n            }\r\n            if (enableOutro) for (let i: number = this.loopStart + this.loopLength; i < this.barCount; i++) {\r\n                sequenceArray.push(channel.bars[i]);\r\n            }\r\n\r\n            const channelObject: any = {\r\n                \"type\": isModChannel ? \"mod\" : (isNoiseChannel ? \"drum\" : \"pitch\"),\r\n                \"name\": channel.name,\r\n                \"instruments\": instrumentArray,\r\n                \"patterns\": patternArray,\r\n                \"sequence\": sequenceArray,\r\n            };\r\n            if (!isNoiseChannel) {\r\n                // For compatibility with old versions the octave is offset by one.\r\n                channelObject[\"octaveScrollBar\"] = channel.octave - 1;\r\n            }\r\n            channelArray.push(channelObject);\r\n        }\r\n\r\n        const result: any = {\r\n            \"name\": this.title,\r\n            \"format\": Song._format,\r\n            \"version\": Song._latestUltraBoxVersion,\r\n            \"scale\": Config.scales[this.scale].name,\r\n            \"customScale\": this.scaleCustom,\r\n            \"key\": Config.keys[this.key].name,\r\n            \"keyOctave\": this.octave,\r\n            \"introBars\": this.loopStart,\r\n            \"loopBars\": this.loopLength,\r\n            \"beatsPerBar\": this.beatsPerBar,\r\n            \"ticksPerBeat\": Config.rhythms[this.rhythm].stepsPerBeat,\r\n            \"beatsPerMinute\": this.tempo,\r\n            \"reverb\": this.reverb,\r\n            \"masterGain\": this.masterGain,\r\n            \"compressionThreshold\": this.compressionThreshold,\r\n            \"limitThreshold\": this.limitThreshold,\r\n            \"limitDecay\": this.limitDecay,\r\n            \"limitRise\": this.limitRise,\r\n            \"limitRatio\": this.limitRatio,\r\n            \"compressionRatio\": this.compressionRatio,\r\n            //\"outroBars\": this.barCount - this.loopStart - this.loopLength; // derive this from bar arrays?\r\n            //\"patternCount\": this.patternsPerChannel, // derive this from pattern arrays?\r\n            \"layeredInstruments\": this.layeredInstruments,\r\n            \"patternInstruments\": this.patternInstruments,\r\n            \"channels\": channelArray,\r\n        };\r\n\r\n        if (EditorConfig.customSamples != null && EditorConfig.customSamples.length > 0) {\r\n            result[\"customSamples\"] = EditorConfig.customSamples;\r\n        }\r\n\r\n        return result;\r\n    }\r\n\r\n    public fromJsonObject(jsonObject: any): void {\r\n        this.initToDefault(true);\r\n        if (!jsonObject) return;\r\n\r\n        //const version: number = jsonObject[\"version\"] | 0;\r\n        //if (version > Song._latestVersion) return; // Go ahead and try to parse something from the future I guess? JSON is pretty easy-going!\r\n\r\n        if (jsonObject[\"name\"] != undefined) {\r\n            this.title = jsonObject[\"name\"];\r\n        }\r\n\r\n\t    \t\t\t// if (jsonObject[\"customSamples\"] != undefined && EditorConfig.customSamples == undefined) {\r\n                // EditorConfig.customSamples = atob(jsonObject[\"customSamples\"]);\r\n\t\t\t\t// console.log(EditorConfig.customSamples);\r\n\t\t\t\t// location.reload(); \r\n            // }\r\n\t\t\t//jsonmark\r\n\t\t\t//this doesn't work\r\n\r\n        if (jsonObject[\"customSamples\"] != undefined) {\r\n            const customSamples: string[] = jsonObject[\"customSamples\"];\r\n            if (EditorConfig.customSamples == null || EditorConfig.customSamples.join(\", \") != customSamples.join(\", \")) {\r\n                // Have to duplicate the work done in Song.fromBase64String\r\n                // early here, because Instrument.fromJsonObject depends on the\r\n                // chip wave list having the correct items already in memory.\r\n\r\n                Config.willReloadForCustomSamples = true;\r\n\r\n                Song._restoreChipWaveListToDefault();\r\n\r\n                let willLoadLegacySamples: boolean = false;\r\n                let willLoadNintariboxSamples: boolean = false;\r\n                let willLoadMarioPaintboxSamples: boolean = false;\r\n                const customSampleUrls: string[] = [];\r\n                const customSamplePresets: Preset[] = [];\r\n                for (const url of customSamples) {\r\n                    if (url.toLowerCase() === \"legacysamples\") {\r\n                        if (!willLoadLegacySamples) {\r\n                            willLoadLegacySamples = true;\r\n                            customSampleUrls.push(url);\r\n                            loadBuiltInSamples(0);\r\n                        }\r\n                    } \r\n                    else if (url.toLowerCase() === \"nintariboxsamples\") {\r\n                        if (!willLoadNintariboxSamples) {\r\n                            willLoadNintariboxSamples = true;\r\n                            customSampleUrls.push(url);\r\n                            loadBuiltInSamples(1);\r\n                        }\r\n                    }\r\n                    else if (url.toLowerCase() === \"mariopaintboxsamples\") {\r\n                        if (!willLoadMarioPaintboxSamples) {\r\n                            willLoadMarioPaintboxSamples = true;\r\n                            customSampleUrls.push(url);\r\n                            loadBuiltInSamples(2);\r\n                        }\r\n                    }\r\n                    \r\n                    else {\r\n                        Song._parseAndConfigureCustomSample(url, customSampleUrls, customSamplePresets, sampleLoadingState);\r\n                    }\r\n                }\r\n                if (customSampleUrls.length > 0) {\r\n                    EditorConfig.customSamples = customSampleUrls;\r\n                }\r\n                if (customSamplePresets.length > 0) {\r\n                    const customSamplePresetsMap: DictionaryArray<Preset> = toNameMap(customSamplePresets);\r\n                    EditorConfig.presetCategories[EditorConfig.presetCategories.length] = {\r\n                        name: \"Custom Sample Presets\",\r\n                        presets: customSamplePresetsMap,\r\n                        index: EditorConfig.presetCategories.length,\r\n                    };\r\n                }\r\n            }\r\n        } else {\r\n            // No custom samples, so the only possibility at this point is that\r\n            // we need to load the legacy samples. Let's check whether that's\r\n            // necessary.\r\n            let shouldLoadLegacySamples: boolean = false;\r\n            if (jsonObject[\"channels\"] != undefined) {\r\n                for (let channelIndex: number = 0; channelIndex < jsonObject[\"channels\"].length; channelIndex++) {\r\n                    const channelObject: any = jsonObject[\"channels\"][channelIndex];\r\n                    if (channelObject[\"type\"] !== \"pitch\") {\r\n                        // Legacy samples can only exist in pitch channels.\r\n                        continue;\r\n                    }\r\n                    if (Array.isArray(channelObject[\"instruments\"])) {\r\n                        const instrumentObjects: any[] = channelObject[\"instruments\"];\r\n                        for (let i: number = 0; i < instrumentObjects.length; i++) {\r\n                            const instrumentObject: any = instrumentObjects[i];\r\n                            if (instrumentObject[\"type\"] !== \"chip\") {\r\n                                // Legacy samples can only exist in chip wave\r\n                                // instruments.\r\n                                continue;\r\n                            }\r\n                            if (instrumentObject[\"wave\"] == null) {\r\n                                // This should exist if things got saved\r\n                                // correctly, but if they didn't, skip this.\r\n                                continue;\r\n                            }\r\n                            const waveName: string = instrumentObject[\"wave\"];\r\n                            // @TODO: Avoid this duplication.\r\n                            const names: string[] = [\r\n                                \"paandorasbox kick\",\r\n                                \"paandorasbox snare\",\r\n                                \"paandorasbox piano1\",\r\n                                \"paandorasbox WOW\",\r\n                                \"paandorasbox overdrive\",\r\n                                \"paandorasbox trumpet\",\r\n                                \"paandorasbox saxophone\",\r\n                                \"paandorasbox orchestrahit\",\r\n                                \"paandorasbox detatched violin\",\r\n                                \"paandorasbox synth\",\r\n                                \"paandorasbox sonic3snare\",\r\n                                \"paandorasbox come on\",\r\n                                \"paandorasbox choir\",\r\n                                \"paandorasbox overdriveguitar\",\r\n                                \"paandorasbox flute\",\r\n                                \"paandorasbox legato violin\",\r\n                                \"paandorasbox tremolo violin\",\r\n                                \"paandorasbox amen break\",\r\n                                \"paandorasbox pizzicato violin\",\r\n                                \"paandorasbox tim allen grunt\",\r\n                                \"paandorasbox tuba\",\r\n                                \"paandorasbox loopingcymbal\",\r\n                                \"paandorasbox standardkick\",\r\n                                \"paandorasbox standardsnare\",\r\n                                \"paandorasbox closedhihat\",\r\n                                \"paandorasbox foothihat\",\r\n                                \"paandorasbox openhihat\",\r\n                                \"paandorasbox crashcymbal\",\r\n                                \"paandorasbox pianoC4\",\r\n                                \"paandorasbox liver pad\",\r\n                                \"paandorasbox marimba\",\r\n                                \"paandorasbox susdotwav\",\r\n                                \"paandorasbox wackyboxtts\",\r\n                                \"paandorasbox peppersteak_1\",\r\n                                \"paandorasbox peppersteak_2\",\r\n                                \"paandorasbox vinyl_noise\",\r\n                                \"paandorasbeta slap bass\",\r\n                                \"paandorasbeta HD EB overdrive guitar\",\r\n                                \"paandorasbeta sunsoft bass\",\r\n                                \"paandorasbeta masculine choir\",\r\n                                \"paandorasbeta feminine choir\",\r\n                                \"paandorasbeta tololoche\",\r\n                                \"paandorasbeta harp\",\r\n                                \"paandorasbeta pan flute\",\r\n                                \"paandorasbeta krumhorn\",\r\n                                \"paandorasbeta timpani\",\r\n                                \"paandorasbeta crowd hey\",\r\n                                \"paandorasbeta wario land 4 brass\",\r\n                                \"paandorasbeta wario land 4 rock organ\",\r\n                                \"paandorasbeta wario land 4 DAOW\",\r\n                                \"paandorasbeta wario land 4 hour chime\",\r\n                                \"paandorasbeta wario land 4 tick\",\r\n                                \"paandorasbeta kirby kick\",\r\n                                \"paandorasbeta kirby snare\",\r\n                                \"paandorasbeta kirby bongo\",\r\n                                \"paandorasbeta kirby click\",\r\n                                \"paandorasbeta sonor kick\",\r\n                                \"paandorasbeta sonor snare\",\r\n                                \"paandorasbeta sonor snare (left hand)\",\r\n                                \"paandorasbeta sonor snare (right hand)\",\r\n                                \"paandorasbeta sonor high tom\",\r\n                                \"paandorasbeta sonor low tom\",\r\n                                \"paandorasbeta sonor hihat (closed)\",\r\n                                \"paandorasbeta sonor hihat (half opened)\",\r\n                                \"paandorasbeta sonor hihat (open)\",\r\n                                \"paandorasbeta sonor hihat (open tip)\",\r\n                                \"paandorasbeta sonor hihat (pedal)\",\r\n                                \"paandorasbeta sonor crash\",\r\n                                \"paandorasbeta sonor crash (tip)\",\r\n                                \"paandorasbeta sonor ride\"\r\n                            ];\r\n                            // The difference for these is in the doubled a.\r\n                            const oldNames: string[] = [\r\n                                \"pandoraasbox kick\",\r\n                                \"pandoraasbox snare\",\r\n                                \"pandoraasbox piano1\",\r\n                                \"pandoraasbox WOW\",\r\n                                \"pandoraasbox overdrive\",\r\n                                \"pandoraasbox trumpet\",\r\n                                \"pandoraasbox saxophone\",\r\n                                \"pandoraasbox orchestrahit\",\r\n                                \"pandoraasbox detatched violin\",\r\n                                \"pandoraasbox synth\",\r\n                                \"pandoraasbox sonic3snare\",\r\n                                \"pandoraasbox come on\",\r\n                                \"pandoraasbox choir\",\r\n                                \"pandoraasbox overdriveguitar\",\r\n                                \"pandoraasbox flute\",\r\n                                \"pandoraasbox legato violin\",\r\n                                \"pandoraasbox tremolo violin\",\r\n                                \"pandoraasbox amen break\",\r\n                                \"pandoraasbox pizzicato violin\",\r\n                                \"pandoraasbox tim allen grunt\",\r\n                                \"pandoraasbox tuba\",\r\n                                \"pandoraasbox loopingcymbal\",\r\n                                \"pandoraasbox standardkick\",\r\n                                \"pandoraasbox standardsnare\",\r\n                                \"pandoraasbox closedhihat\",\r\n                                \"pandoraasbox foothihat\",\r\n                                \"pandoraasbox openhihat\",\r\n                                \"pandoraasbox crashcymbal\",\r\n                                \"pandoraasbox pianoC4\",\r\n                                \"pandoraasbox liver pad\",\r\n                                \"pandoraasbox marimba\",\r\n                                \"pandoraasbox susdotwav\",\r\n                                \"pandoraasbox wackyboxtts\",\r\n                                \"pandoraasbox peppersteak_1\",\r\n                                \"pandoraasbox peppersteak_2\",\r\n                                \"pandoraasbox vinyl_noise\",\r\n                                \"pandoraasbeta slap bass\",\r\n                                \"pandoraasbeta HD EB overdrive guitar\",\r\n                                \"pandoraasbeta sunsoft bass\",\r\n                                \"pandoraasbeta masculine choir\",\r\n                                \"pandoraasbeta feminine choir\",\r\n                                \"pandoraasbeta tololoche\",\r\n                                \"pandoraasbeta harp\",\r\n                                \"pandoraasbeta pan flute\",\r\n                                \"pandoraasbeta krumhorn\",\r\n                                \"pandoraasbeta timpani\",\r\n                                \"pandoraasbeta crowd hey\",\r\n                                \"pandoraasbeta wario land 4 brass\",\r\n                                \"pandoraasbeta wario land 4 rock organ\",\r\n                                \"pandoraasbeta wario land 4 DAOW\",\r\n                                \"pandoraasbeta wario land 4 hour chime\",\r\n                                \"pandoraasbeta wario land 4 tick\",\r\n                                \"pandoraasbeta kirby kick\",\r\n                                \"pandoraasbeta kirby snare\",\r\n                                \"pandoraasbeta kirby bongo\",\r\n                                \"pandoraasbeta kirby click\",\r\n                                \"pandoraasbeta sonor kick\",\r\n                                \"pandoraasbeta sonor snare\",\r\n                                \"pandoraasbeta sonor snare (left hand)\",\r\n                                \"pandoraasbeta sonor snare (right hand)\",\r\n                                \"pandoraasbeta sonor high tom\",\r\n                                \"pandoraasbeta sonor low tom\",\r\n                                \"pandoraasbeta sonor hihat (closed)\",\r\n                                \"pandoraasbeta sonor hihat (half opened)\",\r\n                                \"pandoraasbeta sonor hihat (open)\",\r\n                                \"pandoraasbeta sonor hihat (open tip)\",\r\n                                \"pandoraasbeta sonor hihat (pedal)\",\r\n                                \"pandoraasbeta sonor crash\",\r\n                                \"pandoraasbeta sonor crash (tip)\",\r\n                                \"pandoraasbeta sonor ride\"\r\n                            ];\r\n                            // This mirrors paandorasboxWaveNames, which is unprefixed.\r\n                            const veryOldNames: string[] = [\r\n                                \"kick\",\r\n                                \"snare\",\r\n                                \"piano1\",\r\n                                \"WOW\",\r\n                                \"overdrive\",\r\n                                \"trumpet\",\r\n                                \"saxophone\",\r\n                                \"orchestrahit\",\r\n                                \"detatched violin\",\r\n                                \"synth\",\r\n                                \"sonic3snare\",\r\n                                \"come on\",\r\n                                \"choir\",\r\n                                \"overdriveguitar\",\r\n                                \"flute\",\r\n                                \"legato violin\",\r\n                                \"tremolo violin\",\r\n                                \"amen break\",\r\n                                \"pizzicato violin\",\r\n                                \"tim allen grunt\",\r\n                                \"tuba\",\r\n                                \"loopingcymbal\",\r\n                                \"standardkick\",\r\n                                \"standardsnare\",\r\n                                \"closedhihat\",\r\n                                \"foothihat\",\r\n                                \"openhihat\",\r\n                                \"crashcymbal\",\r\n                                \"pianoC4\",\r\n                                \"liver pad\",\r\n                                \"marimba\",\r\n                                \"susdotwav\",\r\n                                \"wackyboxtts\"\r\n                            ];\r\n                            if (names.includes(waveName)) {\r\n                                shouldLoadLegacySamples = true;\r\n                            } else if (oldNames.includes(waveName)) {\r\n                                shouldLoadLegacySamples = true;\r\n                                // If we see one of these old names, update it\r\n                                // to the corresponding new name.\r\n                                instrumentObject[\"wave\"] = names[oldNames.findIndex(x => x === waveName)];\r\n                            } else if (veryOldNames.includes(waveName)) {\r\n                                if (waveName === \"trumpet\" || waveName === \"flute\") {\r\n                                    // @TODO: This isn't exactly correct, but for now, if we see one of these two,\r\n                                    // leave them with the JummBox chip waves. The actual solution here will probably\r\n                                    // involve disambiguation via user input.\r\n                                } else {\r\n                                    // There's no other chip waves with ambiguous names like that, so it should\r\n                                    // be okay to assume we'll need to load the legacy samples now.\r\n                                    shouldLoadLegacySamples = true;\r\n                                    // If we see one of these old names, update it\r\n                                    // to the corresponding new name.\r\n                                    instrumentObject[\"wave\"] = names[veryOldNames.findIndex(x => x === waveName)];\r\n                                }\r\n                            }\r\n                        }\r\n                    }\r\n                }\r\n            }\r\n            if (shouldLoadLegacySamples) {\r\n                Config.willReloadForCustomSamples = true;\r\n\r\n                Song._restoreChipWaveListToDefault();\r\n\r\n                loadBuiltInSamples(0);\r\n                EditorConfig.customSamples = [\"legacySamples\"];\r\n            } else {\r\n                // We don't need to load the legacy samples, but we may have\r\n                // leftover samples in memory. If we do, clear them.\r\n                if (EditorConfig.customSamples != null && EditorConfig.customSamples.length > 0) {\r\n                    // We need to reload anyway in this case, because (for now)\r\n                    // the chip wave lists won't be correctly updated.\r\n                    Config.willReloadForCustomSamples = true;\r\n                    Song._clearSamples();\r\n                }\r\n            }\r\n        }\r\n\r\n        this.scale = 0; // default to free.\r\n        if (jsonObject[\"scale\"] != undefined) {\r\n            const oldScaleNames: Dictionary<string> = {\r\n                \"romani :)\": \"dbl harmonic :)\",\r\n                \"romani :(\": \"dbl harmonic :(\",\r\n                \"enigma\": \"strange\",\r\n            };\r\n            const scaleName: string = (oldScaleNames[jsonObject[\"scale\"]] != undefined) ? oldScaleNames[jsonObject[\"scale\"]] : jsonObject[\"scale\"];\r\n            const scale: number = Config.scales.findIndex(scale => scale.name == scaleName);\r\n            if (scale != -1) this.scale = scale;\r\n            if (this.scale == Config.scales[\"dictionary\"][\"Custom\"].index) {\r\n                if (jsonObject[\"customScale\"] != undefined) {\r\n                    for (var i of jsonObject[\"customScale\"].keys()) {\r\n                        this.scaleCustom[i] = jsonObject[\"customScale\"][i];\r\n                    }\r\n                }\r\n            }\r\n        }\r\n\r\n        if (jsonObject[\"key\"] != undefined) {\r\n            if (typeof (jsonObject[\"key\"]) == \"number\") {\r\n                this.key = ((jsonObject[\"key\"] + 1200) >>> 0) % Config.keys.length;\r\n            } else if (typeof (jsonObject[\"key\"]) == \"string\") {\r\n                const key: string = jsonObject[\"key\"];\r\n                // This conversion code depends on C through B being\r\n                // available as keys, of course.\r\n                if (key === \"C+\") {\r\n                    this.key = 0;\r\n                    this.octave = 1;\r\n                } else if (key === \"G- (actually F#-)\") {\r\n                    this.key = 6;\r\n                    this.octave = -1;\r\n                } else if (key === \"C-\") {\r\n                    this.key = 0;\r\n                    this.octave = -1;\r\n                } else if (key === \"oh no (F-)\") {\r\n                    this.key = 5;\r\n                    this.octave = -1;\r\n                } else {\r\n                    const letter: string = key.charAt(0).toUpperCase();\r\n                    const symbol: string = key.charAt(1).toLowerCase();\r\n                    const letterMap: Readonly<Dictionary<number>> = { \"C\": 0, \"D\": 2, \"E\": 4, \"F\": 5, \"G\": 7, \"A\": 9, \"B\": 11 };\r\n                    const accidentalMap: Readonly<Dictionary<number>> = { \"#\": 1, \"♯\": 1, \"b\": -1, \"♭\": -1 };\r\n                    let index: number | undefined = letterMap[letter];\r\n                    const offset: number | undefined = accidentalMap[symbol];\r\n                    if (index != undefined) {\r\n                        if (offset != undefined) index += offset;\r\n                        if (index < 0) index += 12;\r\n                        index = index % 12;\r\n                        this.key = index;\r\n                    }\r\n                }\r\n            }\r\n        }\r\n\r\n        if (jsonObject[\"beatsPerMinute\"] != undefined) {\r\n            this.tempo = clamp(Config.tempoMin, Config.tempoMax + 1, jsonObject[\"beatsPerMinute\"] | 0);\r\n        }\r\n\r\n        if (jsonObject[\"keyOctave\"] != undefined) {\r\n            this.octave = clamp(Config.octaveMin, Config.octaveMax + 1, jsonObject[\"keyOctave\"] | 0);\r\n        }\r\n\r\n        let legacyGlobalReverb: number = 0; // In older songs, reverb was song-global, record that here and pass it to Instrument.fromJsonObject() for context.\r\n        if (jsonObject[\"reverb\"] != undefined) {\r\n            legacyGlobalReverb = clamp(0, 32, jsonObject[\"reverb\"] | 0);\r\n        }\r\n\r\n        if (jsonObject[\"beatsPerBar\"] != undefined) {\r\n            this.beatsPerBar = Math.max(Config.beatsPerBarMin, Math.min(Config.beatsPerBarMax, jsonObject[\"beatsPerBar\"] | 0));\r\n        }\r\n\r\n        let importedPartsPerBeat: number = 4;\r\n        if (jsonObject[\"ticksPerBeat\"] != undefined) {\r\n            importedPartsPerBeat = (jsonObject[\"ticksPerBeat\"] | 0) || 4;\r\n            this.rhythm = Config.rhythms.findIndex(rhythm => rhythm.stepsPerBeat == importedPartsPerBeat);\r\n            if (this.rhythm == -1) {\r\n                this.rhythm = 1;\r\n            }\r\n        }\r\n\r\n        // Read limiter settings. Ranges and defaults are based on slider settings\r\n\r\n        if (jsonObject[\"masterGain\"] != undefined) {\r\n            this.masterGain = Math.max(0.0, Math.min(5.0, jsonObject[\"masterGain\"] || 0));\r\n        } else {\r\n            this.masterGain = 1.0;\r\n        }\r\n\r\n        if (jsonObject[\"limitThreshold\"] != undefined) {\r\n            this.limitThreshold = Math.max(0.0, Math.min(2.0, jsonObject[\"limitThreshold\"] || 0));\r\n        }\r\n        else {\r\n            this.limitThreshold = 1.0;\r\n        }\r\n\r\n        if (jsonObject[\"compressionThreshold\"] != undefined) {\r\n            this.compressionThreshold = Math.max(0.0, Math.min(1.1, jsonObject[\"compressionThreshold\"] || 0));\r\n        }\r\n        else {\r\n            this.compressionThreshold = 1.0;\r\n        }\r\n\r\n        if (jsonObject[\"limitRise\"] != undefined) {\r\n            this.limitRise = Math.max(2000.0, Math.min(10000.0, jsonObject[\"limitRise\"] || 0));\r\n        }\r\n        else {\r\n            this.limitRise = 4000.0;\r\n        }\r\n\r\n        if (jsonObject[\"limitDecay\"] != undefined) {\r\n            this.limitDecay = Math.max(1.0, Math.min(30.0, jsonObject[\"limitDecay\"] || 0));\r\n        }\r\n        else {\r\n            this.limitDecay = 4.0;\r\n        }\r\n\r\n        if (jsonObject[\"limitRatio\"] != undefined) {\r\n            this.limitRatio = Math.max(0.0, Math.min(11.0, jsonObject[\"limitRatio\"] || 0));\r\n        }\r\n        else {\r\n            this.limitRatio = 1.0;\r\n        }\r\n\r\n        if (jsonObject[\"compressionRatio\"] != undefined) {\r\n            this.compressionRatio = Math.max(0.0, Math.min(1.168, jsonObject[\"compressionRatio\"] || 0));\r\n        }\r\n        else {\r\n            this.compressionRatio = 1.0;\r\n        }\r\n\r\n        let maxInstruments: number = 1;\r\n        let maxPatterns: number = 1;\r\n        let maxBars: number = 1;\r\n        if (jsonObject[\"channels\"] != undefined) {\r\n            for (const channelObject of jsonObject[\"channels\"]) {\r\n                if (channelObject[\"instruments\"]) maxInstruments = Math.max(maxInstruments, channelObject[\"instruments\"].length | 0);\r\n                if (channelObject[\"patterns\"]) maxPatterns = Math.max(maxPatterns, channelObject[\"patterns\"].length | 0);\r\n                if (channelObject[\"sequence\"]) maxBars = Math.max(maxBars, channelObject[\"sequence\"].length | 0);\r\n            }\r\n        }\r\n\r\n        if (jsonObject[\"layeredInstruments\"] != undefined) {\r\n            this.layeredInstruments = !!jsonObject[\"layeredInstruments\"];\r\n        } else {\r\n            this.layeredInstruments = false;\r\n        }\r\n        if (jsonObject[\"patternInstruments\"] != undefined) {\r\n            this.patternInstruments = !!jsonObject[\"patternInstruments\"];\r\n        } else {\r\n            this.patternInstruments = (maxInstruments > 1);\r\n        }\r\n        this.patternsPerChannel = Math.min(maxPatterns, Config.barCountMax);\r\n        this.barCount = Math.min(maxBars, Config.barCountMax);\r\n\r\n        if (jsonObject[\"introBars\"] != undefined) {\r\n            this.loopStart = clamp(0, this.barCount, jsonObject[\"introBars\"] | 0);\r\n        }\r\n        if (jsonObject[\"loopBars\"] != undefined) {\r\n            this.loopLength = clamp(1, this.barCount - this.loopStart + 1, jsonObject[\"loopBars\"] | 0);\r\n        }\r\n\r\n        const newPitchChannels: Channel[] = [];\r\n        const newNoiseChannels: Channel[] = [];\r\n        const newModChannels: Channel[] = [];\r\n        if (jsonObject[\"channels\"] != undefined) {\r\n            for (let channelIndex: number = 0; channelIndex < jsonObject[\"channels\"].length; channelIndex++) {\r\n                let channelObject: any = jsonObject[\"channels\"][channelIndex];\r\n\r\n                const channel: Channel = new Channel();\r\n\r\n                let isNoiseChannel: boolean = false;\r\n                let isModChannel: boolean = false;\r\n                if (channelObject[\"type\"] != undefined) {\r\n                    isNoiseChannel = (channelObject[\"type\"] == \"drum\");\r\n                    isModChannel = (channelObject[\"type\"] == \"mod\");\r\n                } else {\r\n                    // for older files, assume drums are channel 3.\r\n                    isNoiseChannel = (channelIndex >= 3);\r\n                }\r\n                if (isNoiseChannel) {\r\n                    newNoiseChannels.push(channel);\r\n                } else if (isModChannel) {\r\n                    newModChannels.push(channel);\r\n                }\r\n                else {\r\n                    newPitchChannels.push(channel);\r\n                }\r\n\r\n                if (channelObject[\"octaveScrollBar\"] != undefined) {\r\n                    channel.octave = clamp(0, Config.pitchOctaves, (channelObject[\"octaveScrollBar\"] | 0) + 1);\r\n                    if (isNoiseChannel) channel.octave = 0;\r\n                }\r\n\r\n                if (channelObject[\"name\"] != undefined) {\r\n                    channel.name = channelObject[\"name\"];\r\n                }\r\n                else {\r\n                    channel.name = \"\";\r\n                }\r\n\r\n                if (Array.isArray(channelObject[\"instruments\"])) {\r\n                    const instrumentObjects: any[] = channelObject[\"instruments\"];\r\n                    for (let i: number = 0; i < instrumentObjects.length; i++) {\r\n                        if (i >= this.getMaxInstrumentsPerChannel()) break;\r\n                        const instrument: Instrument = new Instrument(isNoiseChannel, isModChannel);\r\n                        channel.instruments[i] = instrument;\r\n                        instrument.fromJsonObject(instrumentObjects[i], isNoiseChannel, isModChannel, false, false, legacyGlobalReverb);\r\n                    }\r\n\r\n                }\r\n\r\n                for (let i: number = 0; i < this.patternsPerChannel; i++) {\r\n                    const pattern: Pattern = new Pattern();\r\n                    channel.patterns[i] = pattern;\r\n\r\n                    let patternObject: any = undefined;\r\n                    if (channelObject[\"patterns\"]) patternObject = channelObject[\"patterns\"][i];\r\n                    if (patternObject == undefined) continue;\r\n\r\n                    pattern.fromJsonObject(patternObject, this, channel, importedPartsPerBeat, isNoiseChannel, isModChannel);\r\n                }\r\n                channel.patterns.length = this.patternsPerChannel;\r\n\r\n                for (let i: number = 0; i < this.barCount; i++) {\r\n                    channel.bars[i] = (channelObject[\"sequence\"] != undefined) ? Math.min(this.patternsPerChannel, channelObject[\"sequence\"][i] >>> 0) : 0;\r\n                }\r\n                channel.bars.length = this.barCount;\r\n            }\r\n        }\r\n\r\n        if (newPitchChannels.length > Config.pitchChannelCountMax) newPitchChannels.length = Config.pitchChannelCountMax;\r\n        if (newNoiseChannels.length > Config.noiseChannelCountMax) newNoiseChannels.length = Config.noiseChannelCountMax;\r\n        if (newModChannels.length > Config.modChannelCountMax) newModChannels.length = Config.modChannelCountMax;\r\n        this.pitchChannelCount = newPitchChannels.length;\r\n        this.noiseChannelCount = newNoiseChannels.length;\r\n        this.modChannelCount = newModChannels.length;\r\n        this.channels.length = 0;\r\n        Array.prototype.push.apply(this.channels, newPitchChannels);\r\n        Array.prototype.push.apply(this.channels, newNoiseChannels);\r\n        Array.prototype.push.apply(this.channels, newModChannels);\r\n\r\n        if (Config.willReloadForCustomSamples) {\r\n            window.location.hash = this.toBase64String();\r\n            // The prompt seems to get stuck if reloading is done too quickly.\r\n            setTimeout(() => { location.reload(); }, 50);\r\n        }\r\n    }\r\n\r\n    public getPattern(channelIndex: number, bar: number): Pattern | null {\r\n        if (bar < 0 || bar >= this.barCount) return null;\r\n        const patternIndex: number = this.channels[channelIndex].bars[bar];\r\n        if (patternIndex == 0) return null;\r\n        return this.channels[channelIndex].patterns[patternIndex - 1];\r\n    }\r\n\r\n    public getBeatsPerMinute(): number {\r\n        return this.tempo;\r\n    }\r\n\r\n    public static getNeededBits(maxValue: number): number {\r\n        return 32 - Math.clz32(Math.ceil(maxValue + 1) - 1);\r\n    }\r\n\r\n    public restoreLimiterDefaults(): void {\r\n        this.compressionRatio = 1.0;\r\n        this.limitRatio = 1.0;\r\n        this.limitRise = 4000.0;\r\n        this.limitDecay = 4.0;\r\n        this.limitThreshold = 1.0;\r\n        this.compressionThreshold = 1.0;\r\n        this.masterGain = 1.0;\r\n    }\r\n}\r\n\r\nclass PickedString {\r\n    public delayLine: Float32Array | null = null;\r\n    public delayIndex: number;\r\n    public allPassSample: number;\r\n    public allPassPrevInput: number;\r\n    public shelfSample: number;\r\n    public shelfPrevInput: number;\r\n    public fractionalDelaySample: number;\r\n    public prevDelayLength: number;\r\n    public delayLengthDelta: number;\r\n    public delayResetOffset: number;\r\n\r\n    public allPassG: number = 0.0;\r\n    public allPassGDelta: number = 0.0;\r\n    public shelfA1: number = 0.0;\r\n    public shelfA1Delta: number = 0.0;\r\n    public shelfB0: number = 0.0;\r\n    public shelfB0Delta: number = 0.0;\r\n    public shelfB1: number = 0.0;\r\n    public shelfB1Delta: number = 0.0;\r\n\r\n    constructor() {\r\n        this.reset();\r\n    }\r\n\r\n    public reset(): void {\r\n        this.delayIndex = -1;\r\n        this.allPassSample = 0.0;\r\n        this.allPassPrevInput = 0.0;\r\n        this.shelfSample = 0.0;\r\n        this.shelfPrevInput = 0.0;\r\n        this.fractionalDelaySample = 0.0;\r\n        this.prevDelayLength = -1.0;\r\n        this.delayResetOffset = 0;\r\n    }\r\n\r\n    public update(synth: Synth, instrumentState: InstrumentState, tone: Tone, stringIndex: number, roundedSamplesPerTick: number, stringDecayStart: number, stringDecayEnd: number): void {\r\n        const allPassCenter: number = 2.0 * Math.PI * Config.pickedStringDispersionCenterFreq / synth.samplesPerSecond;\r\n        const shelfRadians: number = 2.0 * Math.PI * Config.pickedStringShelfHz / synth.samplesPerSecond;\r\n        const decayCurveStart: number = (Math.pow(100.0, stringDecayStart) - 1.0) / 99.0;\r\n        const decayCurveEnd: number = (Math.pow(100.0, stringDecayEnd) - 1.0) / 99.0;\r\n\r\n        const prevDelayLength: number = this.prevDelayLength;\r\n\r\n        const phaseDeltaStart: number = tone.phaseDeltas[stringIndex];\r\n        const phaseDeltaScale: number = tone.phaseDeltaScales[stringIndex];\r\n        const phaseDeltaEnd: number = phaseDeltaStart * Math.pow(phaseDeltaScale, roundedSamplesPerTick);\r\n\r\n        const radiansPerSampleStart: number = Math.PI * 2.0 * phaseDeltaStart;\r\n        const radiansPerSampleEnd: number = Math.PI * 2.0 * phaseDeltaEnd;\r\n\r\n        const centerHarmonicStart: number = radiansPerSampleStart * 2.0;\r\n        const centerHarmonicEnd: number = radiansPerSampleEnd * 2.0;\r\n\r\n        const allPassRadiansStart: number = Math.min(Math.PI, radiansPerSampleStart * Config.pickedStringDispersionFreqMult * Math.pow(allPassCenter / radiansPerSampleStart, Config.pickedStringDispersionFreqScale));\r\n        const allPassRadiansEnd: number = Math.min(Math.PI, radiansPerSampleEnd * Config.pickedStringDispersionFreqMult * Math.pow(allPassCenter / radiansPerSampleEnd, Config.pickedStringDispersionFreqScale));\r\n\r\n        const decayRateStart: number = Math.pow(0.5, decayCurveStart * shelfRadians / radiansPerSampleStart);\r\n        const decayRateEnd: number = Math.pow(0.5, decayCurveEnd * shelfRadians / radiansPerSampleEnd);\r\n        const shelfGainStart: number = Math.pow(decayRateStart, Config.stringDecayRate);\r\n        const shelfGainEnd: number = Math.pow(decayRateEnd, Config.stringDecayRate);\r\n        const expressionDecayStart: number = Math.pow(decayRateStart, 0.002);\r\n        const expressionDecayEnd: number = Math.pow(decayRateEnd, 0.002);\r\n\r\n        Synth.tempFilterStartCoefficients.allPass1stOrderInvertPhaseAbove(allPassRadiansStart);\r\n        synth.tempFrequencyResponse.analyze(Synth.tempFilterStartCoefficients, centerHarmonicStart);\r\n        const allPassGStart: number = Synth.tempFilterStartCoefficients.b[0]; /* same as a[1] */\r\n        const allPassPhaseDelayStart: number = -synth.tempFrequencyResponse.angle() / centerHarmonicStart;\r\n\r\n        Synth.tempFilterEndCoefficients.allPass1stOrderInvertPhaseAbove(allPassRadiansEnd);\r\n        synth.tempFrequencyResponse.analyze(Synth.tempFilterEndCoefficients, centerHarmonicEnd);\r\n        const allPassGEnd: number = Synth.tempFilterEndCoefficients.b[0]; /* same as a[1] */\r\n        const allPassPhaseDelayEnd: number = -synth.tempFrequencyResponse.angle() / centerHarmonicEnd;\r\n\r\n        Synth.tempFilterStartCoefficients.highShelf1stOrder(shelfRadians, shelfGainStart);\r\n        synth.tempFrequencyResponse.analyze(Synth.tempFilterStartCoefficients, centerHarmonicStart);\r\n        const shelfA1Start: number = Synth.tempFilterStartCoefficients.a[1];\r\n        const shelfB0Start: number = Synth.tempFilterStartCoefficients.b[0] * expressionDecayStart;\r\n        const shelfB1Start: number = Synth.tempFilterStartCoefficients.b[1] * expressionDecayStart;\r\n        const shelfPhaseDelayStart: number = -synth.tempFrequencyResponse.angle() / centerHarmonicStart;\r\n\r\n        Synth.tempFilterEndCoefficients.highShelf1stOrder(shelfRadians, shelfGainEnd);\r\n        synth.tempFrequencyResponse.analyze(Synth.tempFilterEndCoefficients, centerHarmonicEnd);\r\n        const shelfA1End: number = Synth.tempFilterEndCoefficients.a[1];\r\n        const shelfB0End: number = Synth.tempFilterEndCoefficients.b[0] * expressionDecayEnd;\r\n        const shelfB1End: number = Synth.tempFilterEndCoefficients.b[1] * expressionDecayEnd;\r\n        const shelfPhaseDelayEnd: number = -synth.tempFrequencyResponse.angle() / centerHarmonicEnd;\r\n\r\n        const periodLengthStart: number = 1.0 / phaseDeltaStart;\r\n        const periodLengthEnd: number = 1.0 / phaseDeltaEnd;\r\n        const minBufferLength: number = Math.ceil(Math.max(periodLengthStart, periodLengthEnd) * 2);\r\n        const delayLength: number = periodLengthStart - allPassPhaseDelayStart - shelfPhaseDelayStart;\r\n        const delayLengthEnd: number = periodLengthEnd - allPassPhaseDelayEnd - shelfPhaseDelayEnd;\r\n\r\n        this.prevDelayLength = delayLength;\r\n        this.delayLengthDelta = (delayLengthEnd - delayLength) / roundedSamplesPerTick;\r\n        this.allPassG = allPassGStart;\r\n        this.shelfA1 = shelfA1Start;\r\n        this.shelfB0 = shelfB0Start;\r\n        this.shelfB1 = shelfB1Start;\r\n        this.allPassGDelta = (allPassGEnd - allPassGStart) / roundedSamplesPerTick;\r\n        this.shelfA1Delta = (shelfA1End - shelfA1Start) / roundedSamplesPerTick;\r\n        this.shelfB0Delta = (shelfB0End - shelfB0Start) / roundedSamplesPerTick;\r\n        this.shelfB1Delta = (shelfB1End - shelfB1Start) / roundedSamplesPerTick;\r\n\r\n        const pitchChanged: boolean = Math.abs(Math.log2(delayLength / prevDelayLength)) > 0.01;\r\n\r\n        const reinitializeImpulse: boolean = (this.delayIndex == -1 || pitchChanged);\r\n        if (this.delayLine == null || this.delayLine.length <= minBufferLength) {\r\n            // The delay line buffer will get reused for other tones so might as well\r\n            // start off with a buffer size that is big enough for most notes.\r\n            const likelyMaximumLength: number = Math.ceil(2 * synth.samplesPerSecond / Instrument.frequencyFromPitch(12));\r\n            const newDelayLine: Float32Array = new Float32Array(Synth.fittingPowerOfTwo(Math.max(likelyMaximumLength, minBufferLength)));\r\n            if (!reinitializeImpulse && this.delayLine != null) {\r\n                // If the tone has already started but the buffer needs to be reallocated,\r\n                // transfer the old data to the new buffer.\r\n                const oldDelayBufferMask: number = (this.delayLine.length - 1) >> 0;\r\n                const startCopyingFromIndex: number = this.delayIndex + this.delayResetOffset;\r\n                this.delayIndex = this.delayLine.length - this.delayResetOffset;\r\n                for (let i: number = 0; i < this.delayLine.length; i++) {\r\n                    newDelayLine[i] = this.delayLine[(startCopyingFromIndex + i) & oldDelayBufferMask];\r\n                }\r\n            }\r\n            this.delayLine = newDelayLine;\r\n        }\r\n        const delayLine: Float32Array = this.delayLine;\r\n        const delayBufferMask: number = (delayLine.length - 1) >> 0;\r\n\r\n        if (reinitializeImpulse) {\r\n            // -1 delay index means the tone was reset.\r\n            // Also, if the pitch changed suddenly (e.g. from seamless or arpeggio) then reset the wave.\r\n\r\n            this.delayIndex = 0;\r\n            this.allPassSample = 0.0;\r\n            this.allPassPrevInput = 0.0;\r\n            this.shelfSample = 0.0;\r\n            this.shelfPrevInput = 0.0;\r\n            this.fractionalDelaySample = 0.0;\r\n\r\n            // Clear away a region of the delay buffer for the new impulse.\r\n            const startImpulseFrom: number = -delayLength;\r\n            const startZerosFrom: number = Math.floor(startImpulseFrom - periodLengthStart / 2);\r\n            const stopZerosAt: number = Math.ceil(startZerosFrom + periodLengthStart * 2);\r\n            this.delayResetOffset = stopZerosAt; // And continue clearing the area in front of the delay line.\r\n            for (let i: number = startZerosFrom; i <= stopZerosAt; i++) {\r\n                delayLine[i & delayBufferMask] = 0.0;\r\n            }\r\n\r\n            const impulseWave: Float32Array = instrumentState.wave!;\r\n            const impulseWaveLength: number = impulseWave.length - 1; // The first sample is duplicated at the end, don't double-count it.\r\n            const impulsePhaseDelta: number = impulseWaveLength / periodLengthStart;\r\n\r\n            const fadeDuration: number = Math.min(periodLengthStart * 0.2, synth.samplesPerSecond * 0.003);\r\n            const startImpulseFromSample: number = Math.ceil(startImpulseFrom);\r\n            const stopImpulseAt: number = startImpulseFrom + periodLengthStart + fadeDuration;\r\n            const stopImpulseAtSample: number = stopImpulseAt;\r\n            let impulsePhase: number = (startImpulseFromSample - startImpulseFrom) * impulsePhaseDelta;\r\n            let prevWaveIntegral: number = 0.0;\r\n            for (let i: number = startImpulseFromSample; i <= stopImpulseAtSample; i++) {\r\n                const impulsePhaseInt: number = impulsePhase | 0;\r\n                const index: number = impulsePhaseInt % impulseWaveLength;\r\n                let nextWaveIntegral: number = impulseWave[index];\r\n                const phaseRatio: number = impulsePhase - impulsePhaseInt;\r\n                nextWaveIntegral += (impulseWave[index + 1] - nextWaveIntegral) * phaseRatio;\r\n                const sample: number = (nextWaveIntegral - prevWaveIntegral) / impulsePhaseDelta;\r\n                const fadeIn: number = Math.min(1.0, (i - startImpulseFrom) / fadeDuration);\r\n                const fadeOut: number = Math.min(1.0, (stopImpulseAt - i) / fadeDuration);\r\n                const combinedFade: number = fadeIn * fadeOut;\r\n                const curvedFade: number = combinedFade * combinedFade * (3.0 - 2.0 * combinedFade); // A cubic sigmoid from 0 to 1.\r\n                delayLine[i & delayBufferMask] += sample * curvedFade;\r\n                prevWaveIntegral = nextWaveIntegral;\r\n                impulsePhase += impulsePhaseDelta;\r\n            }\r\n        }\r\n    }\r\n}\r\n\r\nclass EnvelopeComputer {\r\n    public noteSecondsStart: number = 0.0;\r\n    public noteSecondsEnd: number = 0.0;\r\n    public noteTicksStart: number = 0.0;\r\n    public noteTicksEnd: number = 0.0;\r\n    public noteSizeStart: number = Config.noteSizeMax;\r\n    public noteSizeEnd: number = Config.noteSizeMax;\r\n    public prevNoteSize: number = Config.noteSizeMax;\r\n    public nextNoteSize: number = Config.noteSizeMax;\r\n    private _noteSizeFinal: number = Config.noteSizeMax;\r\n    public prevNoteSecondsStart: number = 0.0;\r\n    public prevNoteSecondsEnd: number = 0.0;\r\n    public prevNoteTicksStart: number = 0.0;\r\n    public prevNoteTicksEnd: number = 0.0;\r\n    private _prevNoteSizeFinal: number = Config.noteSizeMax;\r\n\r\n    public prevSlideStart: boolean = false;\r\n    public prevSlideEnd: boolean = false;\r\n    public nextSlideStart: boolean = false;\r\n    public nextSlideEnd: boolean = false;\r\n    public prevSlideRatioStart: number = 0.0;\r\n    public prevSlideRatioEnd: number = 0.0;\r\n    public nextSlideRatioStart: number = 0.0;\r\n    public nextSlideRatioEnd: number = 0.0;\r\n\r\n    public readonly envelopeStarts: number[] = [];\r\n    public readonly envelopeEnds: number[] = [];\r\n    private readonly _modifiedEnvelopeIndices: number[] = [];\r\n    private _modifiedEnvelopeCount: number = 0;\r\n    public lowpassCutoffDecayVolumeCompensation: number = 1.0;\r\n\r\n    constructor(/*private _perNote: boolean*/) {\r\n        //const length: number = this._perNote ? EnvelopeComputeIndex.length : InstrumentAutomationIndex.length;\r\n        const length: number = EnvelopeComputeIndex.length;\r\n        for (let i: number = 0; i < length; i++) {\r\n            this.envelopeStarts[i] = 1.0;\r\n            this.envelopeEnds[i] = 1.0;\r\n        }\r\n\r\n        this.reset();\r\n    }\r\n\r\n    public reset(): void {\r\n        this.noteSecondsEnd = 0.0;\r\n        this.noteTicksEnd = 0.0;\r\n        this._noteSizeFinal = Config.noteSizeMax;\r\n        this.prevNoteSecondsEnd = 0.0;\r\n        this.prevNoteTicksEnd = 0.0;\r\n        this._prevNoteSizeFinal = Config.noteSizeMax;\r\n        this._modifiedEnvelopeCount = 0;\r\n    }\r\n\r\n    public computeEnvelopes(instrument: Instrument, currentPart: number, tickTimeStart: number, secondsPerTick: number, tone: Tone | null): void {\r\n        const transition: Transition = instrument.getTransition();\r\n        if (tone != null && tone.atNoteStart && !transition.continues && !tone.forceContinueAtStart) {\r\n            this.prevNoteSecondsEnd = this.noteSecondsEnd;\r\n            this.prevNoteTicksEnd = this.noteTicksEnd;\r\n            this._prevNoteSizeFinal = this._noteSizeFinal;\r\n            this.noteSecondsEnd = 0.0;\r\n            this.noteTicksEnd = 0.0;\r\n        }\r\n        if (tone != null) {\r\n            if (tone.note != null) {\r\n                this._noteSizeFinal = tone.note.pins[tone.note.pins.length - 1].size;\r\n            } else {\r\n                this._noteSizeFinal = Config.noteSizeMax;\r\n            }\r\n        }\r\n\r\n        const tickTimeEnd: number = tickTimeStart + 1.0;\r\n        const noteSecondsStart: number = this.noteSecondsEnd;\r\n        const noteSecondsEnd: number = noteSecondsStart + secondsPerTick;\r\n        const noteTicksStart: number = this.noteTicksEnd;\r\n        const noteTicksEnd: number = noteTicksStart + 1.0;\r\n        const prevNoteSecondsStart: number = this.prevNoteSecondsEnd;\r\n        const prevNoteSecondsEnd: number = prevNoteSecondsStart + secondsPerTick;\r\n        const prevNoteTicksStart: number = this.prevNoteTicksEnd;\r\n        const prevNoteTicksEnd: number = prevNoteTicksStart + 1.0;\r\n\r\n        const beatsPerTick: number = 1.0 / (Config.ticksPerPart * Config.partsPerBeat);\r\n        const beatTimeStart: number = beatsPerTick * tickTimeStart;\r\n        const beatTimeEnd: number = beatsPerTick * tickTimeEnd;\r\n\r\n        let noteSizeStart: number = this._noteSizeFinal;\r\n        let noteSizeEnd: number = this._noteSizeFinal;\r\n        let prevNoteSize: number = this._prevNoteSizeFinal;\r\n        let nextNoteSize: number = 0;\r\n        let prevSlideStart: boolean = false;\r\n        let prevSlideEnd: boolean = false;\r\n        let nextSlideStart: boolean = false;\r\n        let nextSlideEnd: boolean = false;\r\n        let prevSlideRatioStart: number = 0.0;\r\n        let prevSlideRatioEnd: number = 0.0;\r\n        let nextSlideRatioStart: number = 0.0;\r\n        let nextSlideRatioEnd: number = 0.0;\r\n        if (tone != null && tone.note != null && !tone.passedEndOfNote) {\r\n            const endPinIndex: number = tone.note.getEndPinIndex(currentPart);\r\n            const startPin: NotePin = tone.note.pins[endPinIndex - 1];\r\n            const endPin: NotePin = tone.note.pins[endPinIndex];\r\n            const startPinTick: number = (tone.note.start + startPin.time) * Config.ticksPerPart;\r\n            const endPinTick: number = (tone.note.start + endPin.time) * Config.ticksPerPart;\r\n            const ratioStart: number = (tickTimeStart - startPinTick) / (endPinTick - startPinTick);\r\n            const ratioEnd: number = (tickTimeEnd - startPinTick) / (endPinTick - startPinTick);\r\n            noteSizeStart = startPin.size + (endPin.size - startPin.size) * ratioStart;\r\n            noteSizeEnd = startPin.size + (endPin.size - startPin.size) * ratioEnd;\r\n\r\n            if (transition.slides) {\r\n                const noteStartTick: number = tone.noteStartPart * Config.ticksPerPart;\r\n                const noteEndTick: number = tone.noteEndPart * Config.ticksPerPart;\r\n                const noteLengthTicks: number = noteEndTick - noteStartTick;\r\n                const maximumSlideTicks: number = noteLengthTicks * 0.5;\r\n                const slideTicks: number = Math.min(maximumSlideTicks, transition.slideTicks);\r\n                if (tone.prevNote != null && !tone.forceContinueAtStart) {\r\n                    if (tickTimeStart - noteStartTick < slideTicks) {\r\n                        prevSlideStart = true;\r\n                        prevSlideRatioStart = 0.5 * (1.0 - (tickTimeStart - noteStartTick) / slideTicks);\r\n                    }\r\n                    if (tickTimeEnd - noteStartTick < slideTicks) {\r\n                        prevSlideEnd = true;\r\n                        prevSlideRatioEnd = 0.5 * (1.0 - (tickTimeEnd - noteStartTick) / slideTicks);\r\n                    }\r\n                }\r\n                if (tone.nextNote != null && !tone.forceContinueAtEnd) {\r\n                    nextNoteSize = tone.nextNote.pins[0].size\r\n                    if (noteEndTick - tickTimeStart < slideTicks) {\r\n                        nextSlideStart = true;\r\n                        nextSlideRatioStart = 0.5 * (1.0 - (noteEndTick - tickTimeStart) / slideTicks);\r\n                    }\r\n                    if (noteEndTick - tickTimeEnd < slideTicks) {\r\n                        nextSlideEnd = true;\r\n                        nextSlideRatioEnd = 0.5 * (1.0 - (noteEndTick - tickTimeEnd) / slideTicks);\r\n                    }\r\n                }\r\n            }\r\n        }\r\n\r\n        let lowpassCutoffDecayVolumeCompensation: number = 1.0;\r\n        let usedNoteSize: boolean = false;\r\n        for (let envelopeIndex: number = 0; envelopeIndex <= instrument.envelopeCount; envelopeIndex++) {\r\n            let automationTarget: AutomationTarget;\r\n            let targetIndex: number;\r\n            let envelope: Envelope;\r\n            if (envelopeIndex == instrument.envelopeCount) {\r\n                if (usedNoteSize /*|| !this._perNote*/) break;\r\n                // Special case: if no other envelopes used note size, default to applying it to note volume.\r\n                automationTarget = Config.instrumentAutomationTargets.dictionary[\"noteVolume\"];\r\n                targetIndex = 0;\r\n                envelope = Config.envelopes.dictionary[\"note size\"];\r\n            } else {\r\n                let envelopeSettings: EnvelopeSettings = instrument.envelopes[envelopeIndex];\r\n                automationTarget = Config.instrumentAutomationTargets[envelopeSettings.target];\r\n                targetIndex = envelopeSettings.index;\r\n                envelope = Config.envelopes[envelopeSettings.envelope];\r\n                if (envelope.type == EnvelopeType.noteSize) usedNoteSize = true;\r\n            }\r\n            if (/*automationTarget.perNote == this._perNote &&*/ automationTarget.computeIndex != null) {\r\n                const computeIndex: number = automationTarget.computeIndex + targetIndex;\r\n                let envelopeStart: number = EnvelopeComputer.computeEnvelope(envelope, noteSecondsStart, beatTimeStart, noteSizeStart);\r\n                let envelopeEnd: number = EnvelopeComputer.computeEnvelope(envelope, noteSecondsEnd, beatTimeEnd, noteSizeEnd);\r\n\r\n                if (prevSlideStart) {\r\n                    const other: number = EnvelopeComputer.computeEnvelope(envelope, prevNoteSecondsStart, beatTimeStart, prevNoteSize);\r\n                    envelopeStart += (other - envelopeStart) * prevSlideRatioStart;\r\n                }\r\n                if (prevSlideEnd) {\r\n                    const other: number = EnvelopeComputer.computeEnvelope(envelope, prevNoteSecondsEnd, beatTimeEnd, prevNoteSize);\r\n                    envelopeEnd += (other - envelopeEnd) * prevSlideRatioEnd;\r\n                }\r\n                if (nextSlideStart) {\r\n                    const other: number = EnvelopeComputer.computeEnvelope(envelope, 0.0, beatTimeStart, nextNoteSize);\r\n                    envelopeStart += (other - envelopeStart) * nextSlideRatioStart;\r\n                }\r\n                if (nextSlideEnd) {\r\n                    const other: number = EnvelopeComputer.computeEnvelope(envelope, 0.0, beatTimeEnd, nextNoteSize);\r\n                    envelopeEnd += (other - envelopeEnd) * nextSlideRatioEnd;\r\n                }\r\n\r\n                this.envelopeStarts[computeIndex] *= envelopeStart;\r\n                this.envelopeEnds[computeIndex] *= envelopeEnd;\r\n                this._modifiedEnvelopeIndices[this._modifiedEnvelopeCount++] = computeIndex;\r\n\r\n                if (automationTarget.isFilter) {\r\n                    const filterSettings: FilterSettings = /*this._perNote ?*/ (instrument.tmpNoteFilterStart != null) ? instrument.tmpNoteFilterStart : instrument.noteFilter /*: instrument.eqFilter*/;\r\n                    if (filterSettings.controlPointCount > targetIndex && filterSettings.controlPoints[targetIndex].type == FilterType.lowPass) {\r\n                        lowpassCutoffDecayVolumeCompensation = Math.max(lowpassCutoffDecayVolumeCompensation, EnvelopeComputer.getLowpassCutoffDecayVolumeCompensation(envelope));\r\n                    }\r\n                }\r\n            }\r\n        }\r\n\r\n        this.noteSecondsStart = noteSecondsStart;\r\n        this.noteSecondsEnd = noteSecondsEnd;\r\n        this.noteTicksStart = noteTicksStart;\r\n        this.noteTicksEnd = noteTicksEnd;\r\n        this.prevNoteSecondsStart = prevNoteSecondsStart;\r\n        this.prevNoteSecondsEnd = prevNoteSecondsEnd;\r\n        this.prevNoteTicksStart = prevNoteTicksStart;\r\n        this.prevNoteTicksEnd = prevNoteTicksEnd;\r\n        this.prevNoteSize = prevNoteSize;\r\n        this.nextNoteSize = nextNoteSize;\r\n        this.noteSizeStart = noteSizeStart;\r\n        this.noteSizeEnd = noteSizeEnd;\r\n        this.prevSlideStart = prevSlideStart;\r\n        this.prevSlideEnd = prevSlideEnd;\r\n        this.nextSlideStart = nextSlideStart;\r\n        this.nextSlideEnd = nextSlideEnd;\r\n        this.prevSlideRatioStart = prevSlideRatioStart;\r\n        this.prevSlideRatioEnd = prevSlideRatioEnd;\r\n        this.nextSlideRatioStart = nextSlideRatioStart;\r\n        this.nextSlideRatioEnd = nextSlideRatioEnd;\r\n        this.lowpassCutoffDecayVolumeCompensation = lowpassCutoffDecayVolumeCompensation;\r\n    }\r\n\r\n    public clearEnvelopes(): void {\r\n        for (let envelopeIndex: number = 0; envelopeIndex < this._modifiedEnvelopeCount; envelopeIndex++) {\r\n            const computeIndex: number = this._modifiedEnvelopeIndices[envelopeIndex];\r\n            this.envelopeStarts[computeIndex] = 1.0;\r\n            this.envelopeEnds[computeIndex] = 1.0;\r\n        }\r\n        this._modifiedEnvelopeCount = 0;\r\n    }\r\n\r\n    public static computeEnvelope(envelope: Envelope, time: number, beats: number, noteSize: number): number {\r\n        switch (envelope.type) {\r\n            case EnvelopeType.noteSize: return Synth.noteSizeToVolumeMult(noteSize);\r\n            case EnvelopeType.none: return 1.0;\r\n            case EnvelopeType.twang: return 1.0 / (1.0 + time * envelope.speed);\r\n            case EnvelopeType.swell: return 1.0 - 1.0 / (1.0 + time * envelope.speed);\r\n            case EnvelopeType.tremolo: return 0.5 - Math.cos(beats * 2.0 * Math.PI * envelope.speed) * 0.5;\r\n            case EnvelopeType.tremolo2: return 0.75 - Math.cos(beats * 2.0 * Math.PI * envelope.speed) * 0.25;\r\n            case EnvelopeType.punch: return Math.max(1.0, 2.0 - time * 10.0);\r\n            case EnvelopeType.flare: const attack: number = 0.25 / Math.sqrt(envelope.speed); return time < attack ? time / attack : 1.0 / (1.0 + (time - attack) * envelope.speed);\r\n            case EnvelopeType.decay: return Math.pow(2, -envelope.speed * time);\r\n            case EnvelopeType.wibble:\r\n                let temp = 0.5 - Math.cos(beats * envelope.speed) * 0.5;\r\n                temp = 1.0 / (1.0 + time * (envelope.speed - (temp / (1.5 / envelope.speed))));\r\n                temp = temp > 0.0 ? temp : 0.0;\r\n                return temp;\r\n            case EnvelopeType.linear: {\r\n                let lin = (1.0 - (time / (16 / envelope.speed)));\r\n                lin = lin > 0.0 ? lin : 0.0;\r\n                return lin;\r\n            }\r\n            case EnvelopeType.rise: {\r\n                let lin = (time / (16 / envelope.speed));\r\n                lin = lin < 1.0 ? lin : 1.0;\r\n                return lin;\r\n            }\r\n            default: throw new Error(\"Unrecognized operator envelope type.\");\r\n        }\r\n\r\n    }\r\n\r\n    public static getLowpassCutoffDecayVolumeCompensation(envelope: Envelope): number {\r\n        // This is a little hokey in the details, but I designed it a while ago and keep it \r\n        // around for compatibility. This decides how much to increase the volume (or\r\n        // expression) to compensate for a decaying lowpass cutoff to maintain perceived\r\n        // volume overall.\r\n        if (envelope.type == EnvelopeType.decay) return 1.25 + 0.025 * envelope.speed;\r\n        if (envelope.type == EnvelopeType.twang) return 1.0 + 0.02 * envelope.speed;\r\n        return 1.0;\r\n    }\r\n}\r\n\r\nclass Tone {\r\n    public instrumentIndex: number;\r\n    public readonly pitches: number[] = Array(Config.maxChordSize+2).fill(0);\r\n    public pitchCount: number = 0;\r\n    public chordSize: number = 0;\r\n    public drumsetPitch: number | null = null;\r\n    public note: Note | null = null;\r\n    public prevNote: Note | null = null;\r\n    public nextNote: Note | null = null;\r\n    public prevNotePitchIndex: number = 0;\r\n    public nextNotePitchIndex: number = 0;\r\n    public freshlyAllocated: boolean = true;\r\n    public atNoteStart: boolean = false;\r\n    public isOnLastTick: boolean = false; // Whether the tone is finished fading out and ready to be freed.\r\n    public passedEndOfNote: boolean = false;\r\n    public forceContinueAtStart: boolean = false;\r\n    public forceContinueAtEnd: boolean = false;\r\n    public noteStartPart: number = 0;\r\n    public noteEndPart: number = 0;\r\n    public ticksSinceReleased: number = 0;\r\n    public liveInputSamplesHeld: number = 0;\r\n    public lastInterval: number = 0;\r\n    public noiseSample: number = 0.0;\r\n    public stringSustainStart: number = 0;\r\n    public stringSustainEnd: number = 0;\r\n    public readonly phases: number[] = [];\r\n    public readonly operatorWaves: OperatorWave[] = [];\r\n    public readonly phaseDeltas: number[] = [];\r\n\t\t\t// advloop addition\r\n        public directions: number[] = [];\r\n        public chipWaveCompletions: number[] = [];\r\n        public chipWavePrevWaves: number[] = [];\r\n        public chipWaveCompletionsLastWave: number[] = [];\r\n           // advloop addition\r\n    public readonly phaseDeltaScales: number[] = [];\r\n    public expression: number = 0.0;\r\n    public expressionDelta: number = 0.0;\r\n    public readonly operatorExpressions: number[] = [];\r\n    public readonly operatorExpressionDeltas: number[] = [];\r\n    public readonly prevPitchExpressions: Array<number | null> = Array(Config.maxPitchOrOperatorCount).fill(null);\r\n    public prevVibrato: number | null = null;\r\n    public prevStringDecay: number | null = null;\r\n    public pulseWidth: number = 0.0;\r\n    public pulseWidthDelta: number = 0.0;\r\n    public readonly pickedStrings: PickedString[] = [];\r\n\r\n    public readonly noteFilters: DynamicBiquadFilter[] = [];\r\n    public noteFilterCount: number = 0;\r\n    public initialNoteFilterInput1: number = 0.0;\r\n    public initialNoteFilterInput2: number = 0.0;\r\n\r\n    public specialIntervalExpressionMult: number = 1.0;\r\n    public readonly feedbackOutputs: number[] = [];\r\n    public feedbackMult: number = 0.0;\r\n    public feedbackDelta: number = 0.0;\r\n    public stereoVolumeLStart: number = 0.0;\r\n    public stereoVolumeRStart: number = 0.0;\r\n    public stereoVolumeLDelta: number = 0.0;\r\n    public stereoVolumeRDelta: number = 0.0;\r\n    public stereoDelayStart: number = 0.0;\r\n    public stereoDelayEnd: number = 0.0;\r\n    public stereoDelayDelta: number = 0.0;\r\n    public customVolumeStart: number = 0.0;\r\n    public customVolumeEnd: number = 0.0;\r\n    public filterResonanceStart: number = 0.0;\r\n    public filterResonanceDelta: number = 0.0;\r\n    public isFirstOrder: boolean = false;\r\n\r\n    public readonly envelopeComputer: EnvelopeComputer = new EnvelopeComputer(/*true*/);\r\n\r\n    constructor() {\r\n        this.reset();\r\n    }\r\n\r\n    public reset(): void {\r\n        this.noiseSample = 0.0;\r\n        for (let i: number = 0; i < Config.maxPitchOrOperatorCount; i++) {\r\n            this.phases[i] = 0.0;\r\n\t\t\t\t\t\t// advloop addition\r\n                this.directions[i] = 1;\r\n                this.chipWaveCompletions[i] = 0;\r\n                this.chipWavePrevWaves[i] = 0;\r\n                this.chipWaveCompletionsLastWave[i] = 0;\r\n                // advloop addition\r\n            this.operatorWaves[i] = Config.operatorWaves[0];\r\n            this.feedbackOutputs[i] = 0.0;\r\n            this.prevPitchExpressions[i] = null;\r\n        }\r\n        for (let i: number = 0; i < this.noteFilterCount; i++) {\r\n            this.noteFilters[i].resetOutput();\r\n        }\r\n        this.noteFilterCount = 0;\r\n        this.initialNoteFilterInput1 = 0.0;\r\n        this.initialNoteFilterInput2 = 0.0;\r\n        this.liveInputSamplesHeld = 0;\r\n        for (const pickedString of this.pickedStrings) {\r\n            pickedString.reset();\r\n        }\r\n        this.envelopeComputer.reset();\r\n        this.prevVibrato = null;\r\n        this.prevStringDecay = null;\r\n        this.drumsetPitch = null;\r\n    }\r\n}\r\n\r\nclass InstrumentState {\r\n    public instrument: Instrument;\r\n\r\n    public awake: boolean = false; // Whether the instrument's effects-processing loop should continue.\r\n    public computed: boolean = false; // Whether the effects-processing parameters are up-to-date for the current synth run.\r\n    public tonesAddedInThisTick: boolean = false; // Whether any instrument tones are currently active.\r\n    public flushingDelayLines: boolean = false; // If no tones were active recently, enter a mode where the delay lines are filled with zeros to reset them for later use.\r\n    public deactivateAfterThisTick: boolean = false; // Whether the instrument is ready to be deactivated because the delay lines, if any, are fully zeroed.\r\n    public attentuationProgress: number = 0.0; // How long since an active tone introduced an input signal to the delay lines, normalized from 0 to 1 based on how long to wait until the delay lines signal will have audibly dissapated.\r\n    public flushedSamples: number = 0; // How many delay line samples have been flushed to zero.\r\n    public readonly activeTones: Deque<Tone> = new Deque<Tone>();\r\n    public readonly activeModTones: Deque<Tone> = new Deque<Tone>();\r\n    public readonly releasedTones: Deque<Tone> = new Deque<Tone>(); // Tones that are in the process of fading out after the corresponding notes ended.\r\n    public readonly liveInputTones: Deque<Tone> = new Deque<Tone>(); // Tones that are initiated by a source external to the loaded song data.\r\n\r\n    public type: InstrumentType = InstrumentType.chip;\r\n    public synthesizer: Function | null = null;\r\n    public wave: Float32Array | null = null;\r\n\t\t\t\t // advloop addition\r\n            public isUsingAdvancedLoopControls = false;\r\n            public chipWaveLoopStart = 0;\r\n            public chipWaveLoopEnd = 0;\r\n            public chipWaveLoopMode = 0;\r\n            public chipWavePlayBackwards = false;\r\n            public chipWaveStartOffset = 0;\r\n            // advloop addition\r\n    public noisePitchFilterMult: number = 1.0;\r\n    public unison: Unison | null = null;\r\n    public chord: Chord | null = null;\r\n    public effects: number = 0;\r\n\r\n    public volumeScale: number = 0;\r\n    public aliases: boolean = false;\r\n\r\n    public eqFilterVolume: number = 1.0;\r\n    public eqFilterVolumeDelta: number = 0.0;\r\n    public mixVolume: number = 1.0;\r\n    public mixVolumeDelta: number = 0.0;\r\n    public delayInputMult: number = 0.0;\r\n    public delayInputMultDelta: number = 0.0;\r\n\r\n    public distortion: number = 0.0;\r\n    public distortionDelta: number = 0.0;\r\n    public distortionDrive: number = 0.0;\r\n    public distortionDriveDelta: number = 0.0;\r\n    public distortionFractionalInput1: number = 0.0;\r\n    public distortionFractionalInput2: number = 0.0;\r\n    public distortionFractionalInput3: number = 0.0;\r\n    public distortionPrevInput: number = 0.0;\r\n    public distortionNextOutput: number = 0.0;\r\n\r\n    public bitcrusherPrevInput: number = 0.0;\r\n    public bitcrusherCurrentOutput: number = 0.0;\r\n    public bitcrusherPhase: number = 1.0;\r\n    public bitcrusherPhaseDelta: number = 0.0;\r\n    public bitcrusherPhaseDeltaScale: number = 1.0;\r\n    public bitcrusherScale: number = 1.0;\r\n    public bitcrusherScaleScale: number = 1.0;\r\n    public bitcrusherFoldLevel: number = 1.0;\r\n    public bitcrusherFoldLevelScale: number = 1.0;\r\n\r\n    public readonly eqFilters: DynamicBiquadFilter[] = [];\r\n    public eqFilterCount: number = 0;\r\n    public initialEqFilterInput1: number = 0.0;\r\n    public initialEqFilterInput2: number = 0.0;\r\n\r\n    public panningDelayLine: Float32Array | null = null;\r\n    public panningDelayPos: number = 0;\r\n    public panningVolumeL: number = 0.0;\r\n    public panningVolumeR: number = 0.0;\r\n    public panningVolumeDeltaL: number = 0.0;\r\n    public panningVolumeDeltaR: number = 0.0;\r\n    public panningOffsetL: number = 0.0;\r\n    public panningOffsetR: number = 0.0;\r\n    public panningOffsetDeltaL: number = 0.0;\r\n    public panningOffsetDeltaR: number = 0.0;\r\n\r\n    public chorusDelayLineL: Float32Array | null = null;\r\n    public chorusDelayLineR: Float32Array | null = null;\r\n    public chorusDelayLineDirty: boolean = false;\r\n    public chorusDelayPos: number = 0;\r\n    public chorusPhase: number = 0;\r\n    public chorusVoiceMult: number = 0;\r\n    public chorusVoiceMultDelta: number = 0;\r\n    public chorusCombinedMult: number = 0;\r\n    public chorusCombinedMultDelta: number = 0;\r\n\r\n    public echoDelayLineL: Float32Array | null = null;\r\n    public echoDelayLineR: Float32Array | null = null;\r\n    public echoDelayLineDirty: boolean = false;\r\n    public echoDelayPos: number = 0;\r\n    public echoDelayOffsetStart: number = 0;\r\n    public echoDelayOffsetEnd: number | null = null;\r\n    public echoDelayOffsetRatio: number = 0.0;\r\n    public echoDelayOffsetRatioDelta: number = 0.0;\r\n    public echoMult: number = 0.0;\r\n    public echoMultDelta: number = 0.0;\r\n    public echoShelfA1: number = 0.0;\r\n    public echoShelfB0: number = 0.0;\r\n    public echoShelfB1: number = 0.0;\r\n    public echoShelfSampleL: number = 0.0;\r\n    public echoShelfSampleR: number = 0.0;\r\n    public echoShelfPrevInputL: number = 0.0;\r\n    public echoShelfPrevInputR: number = 0.0;\r\n\r\n    public reverbDelayLine: Float32Array | null = null;\r\n    public reverbDelayLineDirty: boolean = false;\r\n    public reverbDelayPos: number = 0;\r\n    public reverbMult: number = 0.0;\r\n    public reverbMultDelta: number = 0.0;\r\n    public reverbShelfA1: number = 0.0;\r\n    public reverbShelfB0: number = 0.0;\r\n    public reverbShelfB1: number = 0.0;\r\n    public reverbShelfSample0: number = 0.0;\r\n    public reverbShelfSample1: number = 0.0;\r\n    public reverbShelfSample2: number = 0.0;\r\n    public reverbShelfSample3: number = 0.0;\r\n    public reverbShelfPrevInput0: number = 0.0;\r\n    public reverbShelfPrevInput1: number = 0.0;\r\n    public reverbShelfPrevInput2: number = 0.0;\r\n    public reverbShelfPrevInput3: number = 0.0;\r\n\r\n    //public readonly envelopeComputer: EnvelopeComputer = new EnvelopeComputer(false);\r\n\r\n    public readonly spectrumWave: SpectrumWaveState = new SpectrumWaveState();\r\n    public readonly harmonicsWave: HarmonicsWaveState = new HarmonicsWaveState();\r\n    public readonly drumsetSpectrumWaves: SpectrumWaveState[] = [];\r\n\r\n    constructor() {\r\n        for (let i: number = 0; i < Config.drumCount; i++) {\r\n            this.drumsetSpectrumWaves[i] = new SpectrumWaveState();\r\n        }\r\n    }\r\n\r\n\r\n    public allocateNecessaryBuffers(synth: Synth, instrument: Instrument, samplesPerTick: number): void {\r\n        if (effectsIncludePanning(instrument.effects)) {\r\n            if (this.panningDelayLine == null || this.panningDelayLine.length < synth.panningDelayBufferSize) {\r\n                this.panningDelayLine = new Float32Array(synth.panningDelayBufferSize);\r\n            }\r\n        }\r\n        if (effectsIncludeChorus(instrument.effects)) {\r\n            if (this.chorusDelayLineL == null || this.chorusDelayLineL.length < synth.chorusDelayBufferSize) {\r\n                this.chorusDelayLineL = new Float32Array(synth.chorusDelayBufferSize);\r\n            }\r\n            if (this.chorusDelayLineR == null || this.chorusDelayLineR.length < synth.chorusDelayBufferSize) {\r\n                this.chorusDelayLineR = new Float32Array(synth.chorusDelayBufferSize);\r\n            }\r\n        }\r\n        if (effectsIncludeEcho(instrument.effects)) {\r\n            // account for tempo and delay automation changing delay length during a tick?\r\n            const safeEchoDelaySteps: number = Math.max(Config.echoDelayRange >> 1, (instrument.echoDelay + 1)); // The delay may be very short now, but if it increases later make sure we have enough sample history.\r\n            const baseEchoDelayBufferSize: number = Synth.fittingPowerOfTwo(safeEchoDelaySteps * Config.echoDelayStepTicks * samplesPerTick);\r\n            const safeEchoDelayBufferSize: number = baseEchoDelayBufferSize * 2; // If the tempo or delay changes and we suddenly need a longer delay, make sure that we have enough sample history to accomodate the longer delay.\r\n\r\n            if (this.echoDelayLineL == null || this.echoDelayLineR == null) {\r\n                this.echoDelayLineL = new Float32Array(safeEchoDelayBufferSize);\r\n                this.echoDelayLineR = new Float32Array(safeEchoDelayBufferSize);\r\n            } else if (this.echoDelayLineL.length < safeEchoDelayBufferSize || this.echoDelayLineR.length < safeEchoDelayBufferSize) {\r\n                // The echo delay length may change whlie the song is playing if tempo changes,\r\n                // so buffers may need to be reallocated, but we don't want to lose any echoes\r\n                // so we need to copy the contents of the old buffer to the new one.\r\n                const newDelayLineL: Float32Array = new Float32Array(safeEchoDelayBufferSize);\r\n                const newDelayLineR: Float32Array = new Float32Array(safeEchoDelayBufferSize);\r\n                const oldMask: number = this.echoDelayLineL.length - 1;\r\n\r\n                for (let i = 0; i < this.echoDelayLineL.length; i++) {\r\n                    newDelayLineL[i] = this.echoDelayLineL[(this.echoDelayPos + i) & oldMask];\r\n                    newDelayLineR[i] = this.echoDelayLineL[(this.echoDelayPos + i) & oldMask];\r\n                }\r\n\r\n                this.echoDelayPos = this.echoDelayLineL.length;\r\n                this.echoDelayLineL = newDelayLineL;\r\n                this.echoDelayLineR = newDelayLineR;\r\n            }\r\n        }\r\n        if (effectsIncludeReverb(instrument.effects)) {\r\n            // TODO: Make reverb delay line sample rate agnostic. Maybe just double buffer size for 96KHz? Adjust attenuation and shelf cutoff appropriately?\r\n            if (this.reverbDelayLine == null) {\r\n                this.reverbDelayLine = new Float32Array(Config.reverbDelayBufferSize);\r\n            }\r\n        }\r\n    }\r\n\r\n    public deactivate(): void {\r\n        this.bitcrusherPrevInput = 0.0;\r\n        this.bitcrusherCurrentOutput = 0.0;\r\n        this.bitcrusherPhase = 1.0;\r\n        for (let i: number = 0; i < this.eqFilterCount; i++) {\r\n            this.eqFilters[i].resetOutput();\r\n        }\r\n        this.eqFilterCount = 0;\r\n        this.initialEqFilterInput1 = 0.0;\r\n        this.initialEqFilterInput2 = 0.0;\r\n        this.distortionFractionalInput1 = 0.0;\r\n        this.distortionFractionalInput2 = 0.0;\r\n        this.distortionFractionalInput3 = 0.0;\r\n        this.distortionPrevInput = 0.0;\r\n        this.distortionNextOutput = 0.0;\r\n        this.panningDelayPos = 0;\r\n        if (this.panningDelayLine != null) for (let i: number = 0; i < this.panningDelayLine.length; i++) this.panningDelayLine[i] = 0.0;\r\n        this.echoDelayOffsetEnd = null;\r\n        this.echoShelfSampleL = 0.0;\r\n        this.echoShelfSampleR = 0.0;\r\n        this.echoShelfPrevInputL = 0.0;\r\n        this.echoShelfPrevInputR = 0.0;\r\n        this.reverbShelfSample0 = 0.0;\r\n        this.reverbShelfSample1 = 0.0;\r\n        this.reverbShelfSample2 = 0.0;\r\n        this.reverbShelfSample3 = 0.0;\r\n        this.reverbShelfPrevInput0 = 0.0;\r\n        this.reverbShelfPrevInput1 = 0.0;\r\n        this.reverbShelfPrevInput2 = 0.0;\r\n        this.reverbShelfPrevInput3 = 0.0;\r\n\r\n        this.volumeScale = 1.0;\r\n        this.aliases = false;\r\n\r\n        this.awake = false;\r\n        this.flushingDelayLines = false;\r\n        this.deactivateAfterThisTick = false;\r\n        this.attentuationProgress = 0.0;\r\n        this.flushedSamples = 0;\r\n    }\r\n\r\n    public resetAllEffects(): void {\r\n        this.deactivate();\r\n\r\n        if (this.chorusDelayLineDirty) {\r\n            for (let i: number = 0; i < this.chorusDelayLineL!.length; i++) this.chorusDelayLineL![i] = 0.0;\r\n            for (let i: number = 0; i < this.chorusDelayLineR!.length; i++) this.chorusDelayLineR![i] = 0.0;\r\n        }\r\n        if (this.echoDelayLineDirty) {\r\n            for (let i: number = 0; i < this.echoDelayLineL!.length; i++) this.echoDelayLineL![i] = 0.0;\r\n            for (let i: number = 0; i < this.echoDelayLineR!.length; i++) this.echoDelayLineR![i] = 0.0;\r\n        }\r\n        if (this.reverbDelayLineDirty) {\r\n            for (let i: number = 0; i < this.reverbDelayLine!.length; i++) this.reverbDelayLine![i] = 0.0;\r\n        }\r\n\r\n        this.chorusPhase = 0.0;\r\n    }\r\n\r\n    public compute(synth: Synth, instrument: Instrument, samplesPerTick: number, roundedSamplesPerTick: number, tone: Tone | null, channelIndex: number, instrumentIndex: number): void {\r\n        this.computed = true;\r\n\r\n        this.type = instrument.type;\r\n        this.synthesizer = Synth.getInstrumentSynthFunction(instrument);\r\n        this.unison = Config.unisons[instrument.unison];\r\n        this.chord = instrument.getChord();\r\n        this.noisePitchFilterMult = Config.chipNoises[instrument.chipNoise].pitchFilterMult;\r\n        this.effects = instrument.effects;\t\r\n\r\n        this.aliases = instrument.aliases;\r\n        this.volumeScale = 1.0;\r\n\r\n        this.allocateNecessaryBuffers(synth, instrument, samplesPerTick);\r\n\r\n        const samplesPerSecond: number = synth.samplesPerSecond;\r\n        this.updateWaves(instrument, samplesPerSecond);\r\n\r\n        //const ticksIntoBar: number = synth.getTicksIntoBar();\r\n        //const tickTimeStart: number = ticksIntoBar;\r\n        //const tickTimeEnd:   number = ticksIntoBar + 1.0;\r\n        //const secondsPerTick: number = samplesPerTick / synth.samplesPerSecond;\r\n        //const currentPart: number = synth.getCurrentPart();\r\n        //this.envelopeComputer.computeEnvelopes(instrument, currentPart, tickTimeStart, secondsPerTick, tone);\r\n        //const envelopeStarts: number[] = this.envelopeComputer.envelopeStarts;\r\n        //const envelopeEnds: number[] = this.envelopeComputer.envelopeEnds;\r\n\r\n        const usesDistortion: boolean = effectsIncludeDistortion(this.effects);\r\n        const usesBitcrusher: boolean = effectsIncludeBitcrusher(this.effects);\r\n        const usesPanning: boolean = effectsIncludePanning(this.effects);\r\n        const usesChorus: boolean = effectsIncludeChorus(this.effects);\r\n        const usesEcho: boolean = effectsIncludeEcho(this.effects);\r\n        const usesReverb: boolean = effectsIncludeReverb(this.effects);\r\n\r\n        if (usesDistortion) {\r\n            let useDistortionStart: number = instrument.distortion;\r\n            let useDistortionEnd: number = instrument.distortion;\r\n\r\n            // Check for distortion mods\r\n            if (synth.isModActive(Config.modulators.dictionary[\"distortion\"].index, channelIndex, instrumentIndex)) {\r\n                useDistortionStart = synth.getModValue(Config.modulators.dictionary[\"distortion\"].index, channelIndex, instrumentIndex, false);\r\n                useDistortionEnd = synth.getModValue(Config.modulators.dictionary[\"distortion\"].index, channelIndex, instrumentIndex, true);\r\n            }\r\n\r\n            const distortionSliderStart = Math.min(1.0, /*envelopeStarts[InstrumentAutomationIndex.distortion] **/ useDistortionStart / (Config.distortionRange - 1));\r\n            const distortionSliderEnd = Math.min(1.0, /*envelopeEnds[  InstrumentAutomationIndex.distortion] **/ useDistortionEnd / (Config.distortionRange - 1));\r\n            const distortionStart: number = Math.pow(1.0 - 0.895 * (Math.pow(20.0, distortionSliderStart) - 1.0) / 19.0, 2.0);\r\n            const distortionEnd: number = Math.pow(1.0 - 0.895 * (Math.pow(20.0, distortionSliderEnd) - 1.0) / 19.0, 2.0);\r\n            const distortionDriveStart: number = (1.0 + 2.0 * distortionSliderStart) / Config.distortionBaseVolume;\r\n            const distortionDriveEnd: number = (1.0 + 2.0 * distortionSliderEnd) / Config.distortionBaseVolume;\r\n            this.distortion = distortionStart;\r\n            this.distortionDelta = (distortionEnd - distortionStart) / roundedSamplesPerTick;\r\n            this.distortionDrive = distortionDriveStart;\r\n            this.distortionDriveDelta = (distortionDriveEnd - distortionDriveStart) / roundedSamplesPerTick;\r\n        }\r\n\r\n        if (usesBitcrusher) {\r\n            let freqSettingStart: number = instrument.bitcrusherFreq /** Math.sqrt(envelopeStarts[InstrumentAutomationIndex.bitcrusherFrequency])*/;\r\n            let freqSettingEnd: number = instrument.bitcrusherFreq /** Math.sqrt(envelopeEnds[  InstrumentAutomationIndex.bitcrusherFrequency])*/;\r\n\r\n            // Check for freq crush mods\r\n            if (synth.isModActive(Config.modulators.dictionary[\"freq crush\"].index, channelIndex, instrumentIndex)) {\r\n                freqSettingStart = synth.getModValue(Config.modulators.dictionary[\"freq crush\"].index, channelIndex, instrumentIndex, false);\r\n                freqSettingEnd = synth.getModValue(Config.modulators.dictionary[\"freq crush\"].index, channelIndex, instrumentIndex, true);\r\n            }\r\n\r\n            let quantizationSettingStart: number = instrument.bitcrusherQuantization /** Math.sqrt(envelopeStarts[InstrumentAutomationIndex.bitcrusherQuantization])*/;\r\n            let quantizationSettingEnd: number = instrument.bitcrusherQuantization /** Math.sqrt(envelopeEnds[  InstrumentAutomationIndex.bitcrusherQuantization])*/;\r\n\r\n            // Check for bitcrush mods\r\n            if (synth.isModActive(Config.modulators.dictionary[\"bit crush\"].index, channelIndex, instrumentIndex)) {\r\n                quantizationSettingStart = synth.getModValue(Config.modulators.dictionary[\"bit crush\"].index, channelIndex, instrumentIndex, false);\r\n                quantizationSettingEnd = synth.getModValue(Config.modulators.dictionary[\"bit crush\"].index, channelIndex, instrumentIndex, true);\r\n            }\r\n\r\n            const basePitch: number = Config.keys[synth.song!.key].basePitch + (Config.pitchesPerOctave * synth.song!.octave); // TODO: What if there's a key change mid-song?\r\n            const freqStart: number = Instrument.frequencyFromPitch(basePitch + 60) * Math.pow(2.0, (Config.bitcrusherFreqRange - 1 - freqSettingStart) * Config.bitcrusherOctaveStep);\r\n            const freqEnd: number = Instrument.frequencyFromPitch(basePitch + 60) * Math.pow(2.0, (Config.bitcrusherFreqRange - 1 - freqSettingEnd) * Config.bitcrusherOctaveStep);\r\n            const phaseDeltaStart: number = Math.min(1.0, freqStart / samplesPerSecond);\r\n            const phaseDeltaEnd: number = Math.min(1.0, freqEnd / samplesPerSecond);\r\n            this.bitcrusherPhaseDelta = phaseDeltaStart;\r\n            this.bitcrusherPhaseDeltaScale = Math.pow(phaseDeltaEnd / phaseDeltaStart, 1.0 / roundedSamplesPerTick);\r\n\r\n            const scaleStart: number = 2.0 * Config.bitcrusherBaseVolume * Math.pow(2.0, 1.0 - Math.pow(2.0, (Config.bitcrusherQuantizationRange - 1 - quantizationSettingStart) * 0.5));\r\n            const scaleEnd: number = 2.0 * Config.bitcrusherBaseVolume * Math.pow(2.0, 1.0 - Math.pow(2.0, (Config.bitcrusherQuantizationRange - 1 - quantizationSettingEnd) * 0.5));\r\n            this.bitcrusherScale = scaleStart;\r\n            this.bitcrusherScaleScale = Math.pow(scaleEnd / scaleStart, 1.0 / roundedSamplesPerTick);\r\n\r\n            const foldLevelStart: number = 2.0 * Config.bitcrusherBaseVolume * Math.pow(1.5, Config.bitcrusherQuantizationRange - 1 - quantizationSettingStart);\r\n            const foldLevelEnd: number = 2.0 * Config.bitcrusherBaseVolume * Math.pow(1.5, Config.bitcrusherQuantizationRange - 1 - quantizationSettingEnd);\r\n            this.bitcrusherFoldLevel = foldLevelStart;\r\n            this.bitcrusherFoldLevelScale = Math.pow(foldLevelEnd / foldLevelStart, 1.0 / roundedSamplesPerTick);\r\n        }\r\n\r\n        let eqFilterVolume: number = 1.0; //this.envelopeComputer.lowpassCutoffDecayVolumeCompensation;\r\n        if (instrument.eqFilterType) {\r\n            // Simple EQ filter (old style). For analysis, using random filters from normal style since they are N/A in this context.\r\n            const eqFilterSettingsStart: FilterSettings = instrument.eqFilter;\r\n            if (instrument.eqSubFilters[1] == null)\r\n                instrument.eqSubFilters[1] = new FilterSettings();\r\n            const eqFilterSettingsEnd: FilterSettings = instrument.eqSubFilters[1];\r\n\r\n            // Change location based on slider values\r\n            let startSimpleFreq: number = instrument.eqFilterSimpleCut;\r\n            let startSimpleGain: number = instrument.eqFilterSimplePeak;\r\n            let endSimpleFreq: number = instrument.eqFilterSimpleCut;\r\n            let endSimpleGain: number = instrument.eqFilterSimplePeak;\r\n\r\n            let filterChanges: boolean = false;\r\n\r\n            if (synth.isModActive(Config.modulators.dictionary[\"eq filt cut\"].index, channelIndex, instrumentIndex)) {\r\n                startSimpleFreq = synth.getModValue(Config.modulators.dictionary[\"eq filt cut\"].index, channelIndex, instrumentIndex, false);\r\n                endSimpleFreq = synth.getModValue(Config.modulators.dictionary[\"eq filt cut\"].index, channelIndex, instrumentIndex, true);\r\n                filterChanges = true;\r\n            }\r\n            if (synth.isModActive(Config.modulators.dictionary[\"eq filt peak\"].index, channelIndex, instrumentIndex)) {\r\n                startSimpleGain = synth.getModValue(Config.modulators.dictionary[\"eq filt peak\"].index, channelIndex, instrumentIndex, false);\r\n                endSimpleGain = synth.getModValue(Config.modulators.dictionary[\"eq filt peak\"].index, channelIndex, instrumentIndex, true);\r\n                filterChanges = true;\r\n            }\r\n\r\n            let startPoint: FilterControlPoint;\r\n\r\n            if (filterChanges) {\r\n                eqFilterSettingsStart.convertLegacySettingsForSynth(startSimpleFreq, startSimpleGain);\r\n                eqFilterSettingsEnd.convertLegacySettingsForSynth(endSimpleFreq, endSimpleGain);\r\n\r\n                startPoint = eqFilterSettingsStart.controlPoints[0];\r\n                let endPoint: FilterControlPoint = eqFilterSettingsEnd.controlPoints[0];\r\n\r\n                startPoint.toCoefficients(Synth.tempFilterStartCoefficients, samplesPerSecond, 1.0, 1.0);\r\n                endPoint.toCoefficients(Synth.tempFilterEndCoefficients, samplesPerSecond, 1.0, 1.0);\r\n\r\n                if (this.eqFilters.length < 1) this.eqFilters[0] = new DynamicBiquadFilter();\r\n                this.eqFilters[0].loadCoefficientsWithGradient(Synth.tempFilterStartCoefficients, Synth.tempFilterEndCoefficients, 1.0 / roundedSamplesPerTick, startPoint.type == FilterType.lowPass);\r\n\r\n            } else {\r\n                eqFilterSettingsStart.convertLegacySettingsForSynth(startSimpleFreq, startSimpleGain, true);\r\n\r\n                startPoint = eqFilterSettingsStart.controlPoints[0];\r\n\r\n                startPoint.toCoefficients(Synth.tempFilterStartCoefficients, samplesPerSecond, 1.0, 1.0);\r\n\r\n                if (this.eqFilters.length < 1) this.eqFilters[0] = new DynamicBiquadFilter();\r\n                this.eqFilters[0].loadCoefficientsWithGradient(Synth.tempFilterStartCoefficients, Synth.tempFilterStartCoefficients, 1.0 / roundedSamplesPerTick, startPoint.type == FilterType.lowPass);\r\n\r\n            }\r\n\r\n            eqFilterVolume *= startPoint.getVolumeCompensationMult();\r\n\r\n            this.eqFilterCount = 1;\r\n            eqFilterVolume = Math.min(3.0, eqFilterVolume);\r\n        }\r\n        else {\r\n            const eqFilterSettings: FilterSettings = (instrument.tmpEqFilterStart != null) ? instrument.tmpEqFilterStart : instrument.eqFilter;\r\n            //const eqAllFreqsEnvelopeStart: number = envelopeStarts[InstrumentAutomationIndex.eqFilterAllFreqs];\r\n            //const eqAllFreqsEnvelopeEnd:   number = envelopeEnds[  InstrumentAutomationIndex.eqFilterAllFreqs];\r\n            for (let i: number = 0; i < eqFilterSettings.controlPointCount; i++) {\r\n                //const eqFreqEnvelopeStart: number = envelopeStarts[InstrumentAutomationIndex.eqFilterFreq0 + i];\r\n                //const eqFreqEnvelopeEnd:   number = envelopeEnds[  InstrumentAutomationIndex.eqFilterFreq0 + i];\r\n                //const eqPeakEnvelopeStart: number = envelopeStarts[InstrumentAutomationIndex.eqFilterGain0 + i];\r\n                //const eqPeakEnvelopeEnd:   number = envelopeEnds[  InstrumentAutomationIndex.eqFilterGain0 + i];\r\n                let startPoint: FilterControlPoint = eqFilterSettings.controlPoints[i];\r\n                let endPoint: FilterControlPoint = (instrument.tmpEqFilterEnd != null && instrument.tmpEqFilterEnd.controlPoints[i] != null) ? instrument.tmpEqFilterEnd.controlPoints[i] : eqFilterSettings.controlPoints[i];\r\n\r\n                // If switching dot type, do it all at once and do not try to interpolate since no valid interpolation exists.\r\n                if (startPoint.type != endPoint.type) {\r\n                    startPoint = endPoint;\r\n                }\r\n\r\n                startPoint.toCoefficients(Synth.tempFilterStartCoefficients, samplesPerSecond, /*eqAllFreqsEnvelopeStart * eqFreqEnvelopeStart*/ 1.0, /*eqPeakEnvelopeStart*/ 1.0);\r\n                endPoint.toCoefficients(Synth.tempFilterEndCoefficients, samplesPerSecond, /*eqAllFreqsEnvelopeEnd   * eqFreqEnvelopeEnd*/   1.0, /*eqPeakEnvelopeEnd*/   1.0);\r\n                if (this.eqFilters.length <= i) this.eqFilters[i] = new DynamicBiquadFilter();\r\n                this.eqFilters[i].loadCoefficientsWithGradient(Synth.tempFilterStartCoefficients, Synth.tempFilterEndCoefficients, 1.0 / roundedSamplesPerTick, startPoint.type == FilterType.lowPass);\r\n                eqFilterVolume *= startPoint.getVolumeCompensationMult();\r\n\r\n            }\r\n            this.eqFilterCount = eqFilterSettings.controlPointCount;\r\n            eqFilterVolume = Math.min(3.0, eqFilterVolume);\r\n        }\r\n\r\n        const mainInstrumentVolume: number = Synth.instrumentVolumeToVolumeMult(instrument.volume);\r\n        this.mixVolume = mainInstrumentVolume /** envelopeStarts[InstrumentAutomationIndex.mixVolume]*/;\r\n        let mixVolumeEnd: number = mainInstrumentVolume /** envelopeEnds[  InstrumentAutomationIndex.mixVolume]*/;\r\n\r\n        // Check for mod-related volume delta\r\n        if (synth.isModActive(Config.modulators.dictionary[\"mix volume\"].index, channelIndex, instrumentIndex)) {\r\n            // Linear falloff below 0, normal volume formula above 0. Seems to work best for scaling since the normal volume mult formula has a big gap from -25 to -24.\r\n            const startVal: number = synth.getModValue(Config.modulators.dictionary[\"mix volume\"].index, channelIndex, instrumentIndex, false);\r\n            const endVal: number = synth.getModValue(Config.modulators.dictionary[\"mix volume\"].index, channelIndex, instrumentIndex, true)\r\n            this.mixVolume *= ((startVal <= 0) ? ((startVal + Config.volumeRange / 2) / (Config.volumeRange / 2)) : Synth.instrumentVolumeToVolumeMult(startVal));\r\n            mixVolumeEnd *= ((endVal <= 0) ? ((endVal + Config.volumeRange / 2) / (Config.volumeRange / 2)) : Synth.instrumentVolumeToVolumeMult(endVal));\r\n        }\r\n\r\n        // Check for SONG mod-related volume delta\r\n        if (synth.isModActive(Config.modulators.dictionary[\"song volume\"].index)) {\r\n            this.mixVolume *= (synth.getModValue(Config.modulators.dictionary[\"song volume\"].index, undefined, undefined, false)) / 100.0;\r\n            mixVolumeEnd *= (synth.getModValue(Config.modulators.dictionary[\"song volume\"].index, undefined, undefined, true)) / 100.0;\r\n        }\r\n\r\n        this.mixVolumeDelta = (mixVolumeEnd - this.mixVolume) / roundedSamplesPerTick;\r\n\r\n        let eqFilterVolumeStart: number = eqFilterVolume;\r\n        let eqFilterVolumeEnd: number = eqFilterVolume;\r\n        let delayInputMultStart: number = 1.0;\r\n        let delayInputMultEnd: number = 1.0;\r\n\r\n        if (usesPanning) {\r\n            //const panEnvelopeStart: number = envelopeStarts[InstrumentAutomationIndex.panning] * 2.0 - 1.0;\r\n            //const panEnvelopeEnd:   number = envelopeEnds[  InstrumentAutomationIndex.panning] * 2.0 - 1.0;\r\n\r\n            let usePanStart: number = instrument.pan;\r\n            let usePanEnd: number = instrument.pan;\r\n            // Check for pan mods\r\n            if (synth.isModActive(Config.modulators.dictionary[\"pan\"].index, channelIndex, instrumentIndex)) {\r\n                usePanStart = synth.getModValue(Config.modulators.dictionary[\"pan\"].index, channelIndex, instrumentIndex, false);\r\n                usePanEnd = synth.getModValue(Config.modulators.dictionary[\"pan\"].index, channelIndex, instrumentIndex, true);\r\n            }\r\n\r\n            let panStart: number = Math.max(-1.0, Math.min(1.0, (usePanStart - Config.panCenter) / Config.panCenter /** panEnvelopeStart*/));\r\n            let panEnd: number = Math.max(-1.0, Math.min(1.0, (usePanEnd - Config.panCenter) / Config.panCenter /** panEnvelopeEnd  */));\r\n\r\n            const volumeStartL: number = Math.cos((1 + panStart) * Math.PI * 0.25) * 1.414;\r\n            const volumeStartR: number = Math.cos((1 - panStart) * Math.PI * 0.25) * 1.414;\r\n            const volumeEndL: number = Math.cos((1 + panEnd) * Math.PI * 0.25) * 1.414;\r\n            const volumeEndR: number = Math.cos((1 - panEnd) * Math.PI * 0.25) * 1.414;\r\n            const maxDelaySamples: number = samplesPerSecond * Config.panDelaySecondsMax;\r\n\r\n            let usePanDelayStart: number = instrument.panDelay;\r\n            let usePanDelayEnd: number = instrument.panDelay;\r\n            // Check for pan delay mods\r\n            if (synth.isModActive(Config.modulators.dictionary[\"pan delay\"].index, channelIndex, instrumentIndex)) {\r\n                usePanDelayStart = synth.getModValue(Config.modulators.dictionary[\"pan delay\"].index, channelIndex, instrumentIndex, false);\r\n                usePanDelayEnd = synth.getModValue(Config.modulators.dictionary[\"pan delay\"].index, channelIndex, instrumentIndex, true);\r\n            }\r\n\r\n            const delayStart: number = panStart * usePanDelayStart * maxDelaySamples / 10;\r\n            const delayEnd: number = panEnd * usePanDelayEnd * maxDelaySamples / 10;\r\n            const delayStartL: number = Math.max(0.0, delayStart);\r\n            const delayStartR: number = Math.max(0.0, -delayStart);\r\n            const delayEndL: number = Math.max(0.0, delayEnd);\r\n            const delayEndR: number = Math.max(0.0, -delayEnd);\r\n\r\n            this.panningVolumeL = volumeStartL;\r\n            this.panningVolumeR = volumeStartR;\r\n            this.panningVolumeDeltaL = (volumeEndL - volumeStartL) / roundedSamplesPerTick;\r\n            this.panningVolumeDeltaR = (volumeEndR - volumeStartR) / roundedSamplesPerTick;\r\n            this.panningOffsetL = this.panningDelayPos - delayStartL + synth.panningDelayBufferSize;\r\n            this.panningOffsetR = this.panningDelayPos - delayStartR + synth.panningDelayBufferSize;\r\n            this.panningOffsetDeltaL = (delayEndL - delayStartL) / roundedSamplesPerTick;\r\n            this.panningOffsetDeltaR = (delayEndR - delayStartR) / roundedSamplesPerTick;\r\n        }\r\n\r\n        if (usesChorus) {\r\n            //const chorusEnvelopeStart: number = envelopeStarts[InstrumentAutomationIndex.chorus];\r\n            //const chorusEnvelopeEnd:   number = envelopeEnds[  InstrumentAutomationIndex.chorus];\r\n            let useChorusStart: number = instrument.chorus;\r\n            let useChorusEnd: number = instrument.chorus;\r\n            // Check for chorus mods\r\n            if (synth.isModActive(Config.modulators.dictionary[\"chorus\"].index, channelIndex, instrumentIndex)) {\r\n                useChorusStart = synth.getModValue(Config.modulators.dictionary[\"chorus\"].index, channelIndex, instrumentIndex, false);\r\n                useChorusEnd = synth.getModValue(Config.modulators.dictionary[\"chorus\"].index, channelIndex, instrumentIndex, true);\r\n            }\r\n\r\n            let chorusStart: number = Math.min(1.0, /*chorusEnvelopeStart **/ useChorusStart / (Config.chorusRange - 1));\r\n            let chorusEnd: number = Math.min(1.0, /*chorusEnvelopeEnd   **/ useChorusEnd / (Config.chorusRange - 1));\r\n            chorusStart = chorusStart * 0.6 + (Math.pow(chorusStart, 6.0)) * 0.4;\r\n            chorusEnd = chorusEnd * 0.6 + (Math.pow(chorusEnd, 6.0)) * 0.4;\r\n            const chorusCombinedMultStart = 1.0 / Math.sqrt(3.0 * chorusStart * chorusStart + 1.0);\r\n            const chorusCombinedMultEnd = 1.0 / Math.sqrt(3.0 * chorusEnd * chorusEnd + 1.0);\r\n            this.chorusVoiceMult = chorusStart;\r\n            this.chorusVoiceMultDelta = (chorusEnd - chorusStart) / roundedSamplesPerTick;\r\n            this.chorusCombinedMult = chorusCombinedMultStart;\r\n            this.chorusCombinedMultDelta = (chorusCombinedMultEnd - chorusCombinedMultStart) / roundedSamplesPerTick;\r\n        }\r\n\r\n        let maxEchoMult = 0.0;\r\n        let averageEchoDelaySeconds: number = 0.0;\r\n        if (usesEcho) {\r\n            //const echoSustainEnvelopeStart: number = envelopeStarts[InstrumentAutomationIndex.echoSustain];\r\n            //const echoSustainEnvelopeEnd:   number = envelopeEnds[  InstrumentAutomationIndex.echoSustain];\r\n            let useEchoSustainStart: number = instrument.echoSustain;\r\n            let useEchoSustainEnd: number = instrument.echoSustain;\r\n            // Check for echo mods\r\n            if (synth.isModActive(Config.modulators.dictionary[\"echo\"].index, channelIndex, instrumentIndex)) {\r\n                useEchoSustainStart = Math.max( 0.0, synth.getModValue(Config.modulators.dictionary[\"echo\"].index, channelIndex, instrumentIndex, false) );\r\n                useEchoSustainEnd = Math.max( 0.0, synth.getModValue(Config.modulators.dictionary[\"echo\"].index, channelIndex, instrumentIndex, true) );\r\n            }\r\n            const echoMultStart: number = Math.min(1.0, Math.pow(/*echoSustainEnvelopeStart **/ useEchoSustainStart / Config.echoSustainRange, 1.1)) * 0.9;\r\n            const echoMultEnd: number = Math.min(1.0, Math.pow(/*echoSustainEnvelopeEnd   **/ useEchoSustainEnd / Config.echoSustainRange, 1.1)) * 0.9;\r\n            this.echoMult = echoMultStart;\r\n            this.echoMultDelta = Math.max(0.0, (echoMultEnd - echoMultStart) / roundedSamplesPerTick);\r\n            maxEchoMult = Math.max(echoMultStart, echoMultEnd);\r\n\r\n            // TODO: After computing a tick's settings once for multiple run lengths (which is\r\n            // good for audio worklet threads), compute the echo delay envelopes at tick (or\r\n            // part) boundaries to interpolate between two delay taps.\r\n            //const echoDelayEnvelopeStart:   number = envelopeStarts[InstrumentAutomationIndex.echoDelay];\r\n            //const echoDelayEnvelopeEnd:     number = envelopeEnds[  InstrumentAutomationIndex.echoDelay];\r\n            let useEchoDelayStart: number = instrument.echoDelay;\r\n            let useEchoDelayEnd: number = instrument.echoDelay;\r\n            let ignoreTicks: boolean = false;\r\n            // Check for pan delay mods\r\n            if (synth.isModActive(Config.modulators.dictionary[\"echo delay\"].index, channelIndex, instrumentIndex)) {\r\n                useEchoDelayStart = synth.getModValue(Config.modulators.dictionary[\"echo delay\"].index, channelIndex, instrumentIndex, false);\r\n                useEchoDelayEnd = synth.getModValue(Config.modulators.dictionary[\"echo delay\"].index, channelIndex, instrumentIndex, true);\r\n                ignoreTicks = true;\r\n            }\r\n\r\n            const tmpEchoDelayOffsetStart: number = Math.round((useEchoDelayStart + 1) * Config.echoDelayStepTicks * samplesPerTick);\r\n            const tmpEchoDelayOffsetEnd: number = Math.round((useEchoDelayEnd + 1) * Config.echoDelayStepTicks * samplesPerTick);\r\n            if (this.echoDelayOffsetEnd != null && !ignoreTicks) {\r\n                this.echoDelayOffsetStart = this.echoDelayOffsetEnd;\r\n            } else {\r\n                this.echoDelayOffsetStart = tmpEchoDelayOffsetStart;\r\n            }\r\n\r\n            this.echoDelayOffsetEnd = tmpEchoDelayOffsetEnd;\r\n            averageEchoDelaySeconds = (this.echoDelayOffsetStart + this.echoDelayOffsetEnd) * 0.5 / samplesPerSecond;\r\n\r\n            this.echoDelayOffsetRatio = 0.0;\r\n            this.echoDelayOffsetRatioDelta = 1.0 / roundedSamplesPerTick;\r\n\r\n            const shelfRadians: number = 2.0 * Math.PI * Config.echoShelfHz / synth.samplesPerSecond;\r\n            Synth.tempFilterStartCoefficients.highShelf1stOrder(shelfRadians, Config.echoShelfGain);\r\n            this.echoShelfA1 = Synth.tempFilterStartCoefficients.a[1];\r\n            this.echoShelfB0 = Synth.tempFilterStartCoefficients.b[0];\r\n            this.echoShelfB1 = Synth.tempFilterStartCoefficients.b[1];\r\n        }\r\n\r\n        let maxReverbMult = 0.0;\r\n        if (usesReverb) {\r\n            //const reverbEnvelopeStart: number = envelopeStarts[InstrumentAutomationIndex.reverb];\r\n            //const reverbEnvelopeEnd:   number = envelopeEnds[  InstrumentAutomationIndex.reverb];\r\n\r\n            let useReverbStart: number = instrument.reverb;\r\n            let useReverbEnd: number = instrument.reverb;\r\n\r\n            // Check for mod reverb, instrument level\r\n            if (synth.isModActive(Config.modulators.dictionary[\"reverb\"].index, channelIndex, instrumentIndex)) {\r\n                useReverbStart = synth.getModValue(Config.modulators.dictionary[\"reverb\"].index, channelIndex, instrumentIndex, false);\r\n                useReverbEnd = synth.getModValue(Config.modulators.dictionary[\"reverb\"].index, channelIndex, instrumentIndex, true);\r\n            }\r\n            // Check for mod reverb, song scalar\r\n            if (synth.isModActive(Config.modulators.dictionary[\"song reverb\"].index, channelIndex, instrumentIndex)) {\r\n                useReverbStart *= (synth.getModValue(Config.modulators.dictionary[\"song reverb\"].index, undefined, undefined, false) - Config.modulators.dictionary[\"song reverb\"].convertRealFactor) / Config.reverbRange;\r\n                useReverbEnd *= (synth.getModValue(Config.modulators.dictionary[\"song reverb\"].index, undefined, undefined, true) - Config.modulators.dictionary[\"song reverb\"].convertRealFactor) / Config.reverbRange;\r\n            }\r\n\r\n            const reverbStart: number = Math.min(1.0, Math.pow(/*reverbEnvelopeStart **/ useReverbStart / Config.reverbRange, 0.667)) * 0.425;\r\n            const reverbEnd: number = Math.min(1.0, Math.pow(/*reverbEnvelopeEnd   **/ useReverbEnd / Config.reverbRange, 0.667)) * 0.425;\r\n\r\n            this.reverbMult = reverbStart;\r\n            this.reverbMultDelta = (reverbEnd - reverbStart) / roundedSamplesPerTick;\r\n            maxReverbMult = Math.max(reverbStart, reverbEnd);\r\n\r\n            const shelfRadians: number = 2.0 * Math.PI * Config.reverbShelfHz / synth.samplesPerSecond;\r\n            Synth.tempFilterStartCoefficients.highShelf1stOrder(shelfRadians, Config.reverbShelfGain);\r\n            this.reverbShelfA1 = Synth.tempFilterStartCoefficients.a[1];\r\n            this.reverbShelfB0 = Synth.tempFilterStartCoefficients.b[0];\r\n            this.reverbShelfB1 = Synth.tempFilterStartCoefficients.b[1];\r\n        }\r\n\r\n        if (this.tonesAddedInThisTick) {\r\n            this.attentuationProgress = 0.0;\r\n            this.flushedSamples = 0;\r\n            this.flushingDelayLines = false;\r\n        } else if (!this.flushingDelayLines) {\r\n            // If this instrument isn't playing tones anymore, the volume can fade out by the\r\n            // end of the first tick. It's possible for filters and the panning delay line to\r\n            // continue past the end of the tone but they should have mostly dissipated by the\r\n            // end of the tick anyway.\r\n            if (this.attentuationProgress == 0.0) {\r\n                eqFilterVolumeEnd = 0.0;\r\n            } else {\r\n                eqFilterVolumeStart = 0.0;\r\n                eqFilterVolumeEnd = 0.0;\r\n            }\r\n\r\n            const attenuationThreshold: number = 1.0 / 256.0; // when the delay line signal has attenuated this much, it should be inaudible and should be flushed to zero.\r\n            const halfLifeMult: number = -Math.log2(attenuationThreshold);\r\n            let delayDuration: number = 0.0;\r\n\r\n            if (usesChorus) {\r\n                delayDuration += Config.chorusMaxDelay;\r\n            }\r\n\r\n            if (usesEcho) {\r\n                const attenuationPerSecond: number = Math.pow(maxEchoMult, 1.0 / averageEchoDelaySeconds);\r\n                const halfLife: number = -1.0 / Math.log2(attenuationPerSecond);\r\n                const echoDuration: number = halfLife * halfLifeMult;\r\n                delayDuration += echoDuration;\r\n            }\r\n\r\n            if (usesReverb) {\r\n                const averageMult: number = maxReverbMult * 2.0;\r\n                const averageReverbDelaySeconds: number = (Config.reverbDelayBufferSize / 4.0) / samplesPerSecond;\r\n                const attenuationPerSecond: number = Math.pow(averageMult, 1.0 / averageReverbDelaySeconds);\r\n                const halfLife: number = -1.0 / Math.log2(attenuationPerSecond);\r\n                const reverbDuration: number = halfLife * halfLifeMult;\r\n                delayDuration += reverbDuration;\r\n            }\r\n\r\n            const secondsInTick: number = samplesPerTick / samplesPerSecond;\r\n            const progressInTick: number = secondsInTick / delayDuration;\r\n            const progressAtEndOfTick: number = this.attentuationProgress + progressInTick;\r\n            if (progressAtEndOfTick >= 1.0) {\r\n                delayInputMultEnd = 0.0;\r\n            }\r\n\r\n            this.attentuationProgress = progressAtEndOfTick;\r\n            if (this.attentuationProgress >= 1.0) {\r\n                this.flushingDelayLines = true;\r\n            }\r\n        } else {\r\n            // Flushing delay lines to zero since the signal has mostly dissipated.\r\n            eqFilterVolumeStart = 0.0;\r\n            eqFilterVolumeEnd = 0.0;\r\n            delayInputMultStart = 0.0;\r\n            delayInputMultEnd = 0.0;\r\n\r\n            let totalDelaySamples: number = 0;\r\n            if (usesChorus) totalDelaySamples += synth.chorusDelayBufferSize;\r\n            if (usesEcho) totalDelaySamples += this.echoDelayLineL!.length;\r\n            if (usesReverb) totalDelaySamples += Config.reverbDelayBufferSize;\r\n\r\n            this.flushedSamples += roundedSamplesPerTick;\r\n            if (this.flushedSamples >= totalDelaySamples) {\r\n                this.deactivateAfterThisTick = true;\r\n            }\r\n        }\r\n\r\n        this.eqFilterVolume = eqFilterVolumeStart;\r\n        this.eqFilterVolumeDelta = (eqFilterVolumeEnd - eqFilterVolumeStart) / roundedSamplesPerTick;\r\n        this.delayInputMult = delayInputMultStart;\r\n        this.delayInputMultDelta = (delayInputMultEnd - delayInputMultStart) / roundedSamplesPerTick;\r\n    }\r\n\r\n    public updateWaves(instrument: Instrument, samplesPerSecond: number): void {\r\n        this.volumeScale = 1.0;\r\n        if (instrument.type == InstrumentType.chip) {\r\n            this.wave = (this.aliases) ? Config.rawChipWaves[instrument.chipWave].samples : Config.chipWaves[instrument.chipWave].samples;\r\n\t\t\t\t\t\t // advloop addition\r\n                this.isUsingAdvancedLoopControls = instrument.isUsingAdvancedLoopControls;\r\n                this.chipWaveLoopStart = instrument.chipWaveLoopStart;\r\n                this.chipWaveLoopEnd = instrument.chipWaveLoopEnd;\r\n                this.chipWaveLoopMode = instrument.chipWaveLoopMode;\r\n                this.chipWavePlayBackwards = instrument.chipWavePlayBackwards;\r\n                this.chipWaveStartOffset = instrument.chipWaveStartOffset;\r\n               // advloop addition\r\n        } else if (instrument.type == InstrumentType.customChipWave) {\r\n            this.wave = (this.aliases) ? instrument.customChipWave! : instrument.customChipWaveIntegral!;\r\n            this.volumeScale = 0.05;\r\n        } else if (instrument.type == InstrumentType.noise) {\r\n            this.wave = getDrumWave(instrument.chipNoise, inverseRealFourierTransform, scaleElementsByFactor);\r\n        } else if (instrument.type == InstrumentType.harmonics) {\r\n            this.wave = this.harmonicsWave.getCustomWave(instrument.harmonicsWave, instrument.type);\r\n        } else if (instrument.type == InstrumentType.pickedString) {\r\n            this.wave = this.harmonicsWave.getCustomWave(instrument.harmonicsWave, instrument.type);\r\n        } else if (instrument.type == InstrumentType.spectrum) {\r\n            this.wave = this.spectrumWave.getCustomWave(instrument.spectrumWave, 8);\r\n        } else if (instrument.type == InstrumentType.drumset) {\r\n            for (let i: number = 0; i < Config.drumCount; i++) {\r\n                this.drumsetSpectrumWaves[i].getCustomWave(instrument.drumsetSpectrumWaves[i], InstrumentState._drumsetIndexToSpectrumOctave(i));\r\n            }\r\n            this.wave = null;\r\n        } else {\r\n            this.wave = null;\r\n        }\r\n    }\r\n\r\n    public getDrumsetWave(pitch: number): Float32Array {\r\n        if (this.type == InstrumentType.drumset) {\r\n            return this.drumsetSpectrumWaves[pitch].wave!;\r\n        } else {\r\n            throw new Error(\"Unhandled instrument type in getDrumsetWave\");\r\n        }\r\n    }\r\n\r\n    public static drumsetIndexReferenceDelta(index: number): number {\r\n        return Instrument.frequencyFromPitch(Config.spectrumBasePitch + index * 6) / 44100;\r\n    }\r\n\r\n    private static _drumsetIndexToSpectrumOctave(index: number): number {\r\n        return 15 + Math.log2(InstrumentState.drumsetIndexReferenceDelta(index));\r\n    }\r\n}\r\n\r\nclass ChannelState {\r\n    public readonly instruments: InstrumentState[] = [];\r\n    public muted: boolean = false;\r\n    public singleSeamlessInstrument: number | null = null; // Seamless tones from a pattern with a single instrument can be transferred to a different single seamless instrument in the next pattern.\r\n}\r\n\r\nexport class Synth {\r\n\r\n    private syncSongState(): void {\r\n        const channelCount: number = this.song!.getChannelCount();\r\n        for (let i: number = this.channels.length; i < channelCount; i++) {\r\n            this.channels[i] = new ChannelState();\r\n        }\r\n        this.channels.length = channelCount;\r\n        for (let i: number = 0; i < channelCount; i++) {\r\n            const channel: Channel = this.song!.channels[i];\r\n            const channelState: ChannelState = this.channels[i];\r\n            for (let j: number = channelState.instruments.length; j < channel.instruments.length; j++) {\r\n                channelState.instruments[j] = new InstrumentState();\r\n            }\r\n            channelState.instruments.length = channel.instruments.length;\r\n\r\n            if (channelState.muted != channel.muted) {\r\n                channelState.muted = channel.muted;\r\n                if (channelState.muted) {\r\n                    for (const instrumentState of channelState.instruments) {\r\n                        instrumentState.resetAllEffects();\r\n                    }\r\n                }\r\n            }\r\n        }\r\n    }\r\n\r\n    public warmUpSynthesizer(song: Song | null): void {\r\n        // Don't bother to generate the drum waves unless the song actually\r\n        // uses them, since they may require a lot of computation.\r\n        if (song != null) {\r\n            this.syncSongState();\r\n            const samplesPerTick: number = this.getSamplesPerTick();\r\n            for (let channelIndex: number = 0; channelIndex < song.getChannelCount(); channelIndex++) {\r\n                for (let instrumentIndex: number = 0; instrumentIndex < song.channels[channelIndex].instruments.length; instrumentIndex++) {\r\n                    const instrument: Instrument = song.channels[channelIndex].instruments[instrumentIndex];\r\n                    const instrumentState: InstrumentState = this.channels[channelIndex].instruments[instrumentIndex];\r\n                    Synth.getInstrumentSynthFunction(instrument);\r\n                    instrument.LFOtime = 0;\r\n                    instrument.nextLFOtime = 0;\r\n                    instrument.arpTime = 0;\r\n                    instrument.tmpEqFilterStart = instrument.eqFilter;\r\n                    instrument.tmpEqFilterEnd = null;\r\n                    instrument.tmpNoteFilterStart = instrument.noteFilter;\r\n                    instrument.tmpNoteFilterEnd = null;\r\n                    instrumentState.updateWaves(instrument, this.samplesPerSecond);\r\n                    instrumentState.allocateNecessaryBuffers(this, instrument, samplesPerTick);\r\n                }\r\n\r\n            }\r\n        }\r\n\t    \t\t\t var dummyArray = new Float32Array(1);\r\n        this.isPlayingSong = true;\r\n        this.synthesize(dummyArray, dummyArray, 1, true);\r\n        this.isPlayingSong = false;\r\n\t\t//BUGFIX FROM JUMMBOX\r\n    }\r\n\r\n    public computeLatestModValues(): void {\r\n\r\n        if (this.song != null && this.song.modChannelCount > 0) {\r\n\r\n            // Clear all mod values, and set up temp variables for the time a mod would be set at.\r\n            let latestModTimes: (number | null)[] = [];\r\n            let latestModInsTimes: (number | null)[][][] = [];\r\n            this.modValues = [];\r\n            this.nextModValues = [];\r\n            this.modInsValues = [];\r\n            this.nextModInsValues = [];\r\n            for (let channel: number = 0; channel < this.song.pitchChannelCount + this.song.noiseChannelCount; channel++) {\r\n                latestModInsTimes[channel] = [];\r\n                this.modInsValues[channel] = [];\r\n                this.nextModInsValues[channel] = [];\r\n\r\n                for (let instrument: number = 0; instrument < this.song.channels[channel].instruments.length; instrument++) {\r\n                    this.modInsValues[channel][instrument] = [];\r\n                    this.nextModInsValues[channel][instrument] = [];\r\n                    latestModInsTimes[channel][instrument] = [];\r\n                }\r\n            }\r\n\r\n            // Find out where we're at in the fraction of the current bar.\r\n            let currentPart: number = this.beat * Config.partsPerBeat + this.part;\r\n\r\n            // For mod channels, calculate last set value for each mod\r\n            for (let channelIndex: number = this.song.pitchChannelCount + this.song.noiseChannelCount; channelIndex < this.song.getChannelCount(); channelIndex++) {\r\n                if (!(this.song.channels[channelIndex].muted)) {\r\n\r\n                    let pattern: Pattern | null;\r\n\r\n                    for (let currentBar: number = this.bar; currentBar >= 0; currentBar--) {\r\n                        pattern = this.song.getPattern(channelIndex, currentBar);\r\n\r\n                        if (pattern != null) {\r\n                            let instrumentIdx: number = pattern.instruments[0];\r\n                            let instrument: Instrument = this.song.channels[channelIndex].instruments[instrumentIdx];\r\n                            let latestPinParts: number[] = [];\r\n                            let latestPinValues: number[] = [];\r\n\r\n                            let partsInBar: number = (currentBar == this.bar)\r\n                                ? currentPart\r\n                                : this.findPartsInBar(currentBar);\r\n\r\n                            for (const note of pattern.notes) {\r\n                                if (note.start < partsInBar && (latestPinParts[Config.modCount - 1 - note.pitches[0]] == null || note.end > latestPinParts[Config.modCount - 1 - note.pitches[0]])) {\r\n                                    if (note.end <= partsInBar) {\r\n                                        latestPinParts[Config.modCount - 1 - note.pitches[0]] = note.end;\r\n                                        latestPinValues[Config.modCount - 1 - note.pitches[0]] = note.pins[note.pins.length - 1].size;\r\n                                    }\r\n                                    else {\r\n                                        latestPinParts[Config.modCount - 1 - note.pitches[0]] = partsInBar;\r\n                                        // Find the pin where bar change happens, and compute where pin volume would be at that time\r\n                                        for (let pinIdx = 0; pinIdx < note.pins.length; pinIdx++) {\r\n                                            if (note.pins[pinIdx].time + note.start > partsInBar) {\r\n                                                const transitionLength: number = note.pins[pinIdx].time - note.pins[pinIdx - 1].time;\r\n                                                const toNextBarLength: number = partsInBar - note.start - note.pins[pinIdx - 1].time;\r\n                                                const deltaVolume: number = note.pins[pinIdx].size - note.pins[pinIdx - 1].size;\r\n\r\n                                                latestPinValues[Config.modCount - 1 - note.pitches[0]] = Math.round(note.pins[pinIdx - 1].size + deltaVolume * toNextBarLength / transitionLength);\r\n                                                pinIdx = note.pins.length;\r\n                                            }\r\n                                        }\r\n                                    }\r\n                                }\r\n                            }\r\n\r\n                            // Set modulator value, if it wasn't set in another pattern already scanned\r\n                            for (let mod: number = 0; mod < Config.modCount; mod++) {\r\n                                if (latestPinParts[mod] != null) {\r\n                                    if (Config.modulators[instrument.modulators[mod]].forSong) {\r\n                                        if (latestModTimes[instrument.modulators[mod]] == null || currentBar * Config.partsPerBeat * this.song.beatsPerBar + latestPinParts[mod] > (latestModTimes[instrument.modulators[mod]] as number)) {\r\n                                            this.setModValue(latestPinValues[mod], latestPinValues[mod], mod, instrument.modChannels[mod], instrument.modInstruments[mod], instrument.modulators[mod]);\r\n                                            latestModTimes[instrument.modulators[mod]] = currentBar * Config.partsPerBeat * this.song.beatsPerBar + latestPinParts[mod];\r\n                                        }\r\n                                    }\r\n                                    else {\r\n                                        // Generate list of used instruments\r\n                                        let usedInstruments: number[] = [];\r\n                                        // All\r\n                                        if (instrument.modInstruments[mod] == this.song.channels[instrument.modChannels[mod]].instruments.length) {\r\n                                            for (let i: number = 0; i < this.song.channels[instrument.modChannels[mod]].instruments.length; i++) {\r\n                                                usedInstruments.push(i);\r\n                                            }\r\n                                        }\r\n                                        // Active\r\n                                        else if (instrument.modInstruments[mod] > this.song.channels[instrument.modChannels[mod]].instruments.length) {\r\n                                            const tgtPattern: Pattern | null = this.song.getPattern(instrument.modChannels[mod], currentBar);\r\n                                            if (tgtPattern != null)\r\n                                                usedInstruments = tgtPattern.instruments;\r\n                                        } else {\r\n                                            usedInstruments.push(instrument.modInstruments[mod]);\r\n                                        }\r\n                                        for (let instrumentIndex: number = 0; instrumentIndex < usedInstruments.length; instrumentIndex++) {\r\n                                            // Iterate through all used instruments by this modulator\r\n                                            // Special indices for mod filter targets, since they control multiple things.\r\n                                            const eqFilterParam: boolean = instrument.modulators[mod] == Config.modulators.dictionary[\"eq filter\"].index;\r\n                                            const noteFilterParam: boolean = instrument.modulators[mod] == Config.modulators.dictionary[\"note filter\"].index\r\n                                            let modulatorAdjust: number = instrument.modulators[mod];\r\n                                            if (eqFilterParam) {\r\n                                                modulatorAdjust = Config.modulators.length + instrument.modFilterTypes[mod];\r\n                                            } else if (noteFilterParam) {\r\n                                                // Skip all possible indices for eq filter\r\n                                                modulatorAdjust = Config.modulators.length + 1 + (2 * Config.filterMaxPoints) + instrument.modFilterTypes[mod];\r\n                                            }\r\n\r\n                                            if (latestModInsTimes[instrument.modChannels[mod]][usedInstruments[instrumentIndex]][modulatorAdjust] == null\r\n                                                || currentBar * Config.partsPerBeat * this.song.beatsPerBar + latestPinParts[mod] > latestModInsTimes[instrument.modChannels[mod]][usedInstruments[instrumentIndex]][modulatorAdjust]!) {\r\n\r\n                                                if (eqFilterParam) {\r\n                                                    let tgtInstrument: Instrument = this.song.channels[instrument.modChannels[mod]].instruments[usedInstruments[instrumentIndex]];\r\n                                                    if (instrument.modFilterTypes[mod] == 0) {\r\n                                                        tgtInstrument.tmpEqFilterStart = tgtInstrument.eqSubFilters[latestPinValues[mod]];\r\n                                                    } else {\r\n                                                        for (let i: number = 0; i < Config.filterMorphCount; i++) {\r\n                                                            if (tgtInstrument.tmpEqFilterStart == tgtInstrument.eqSubFilters[i]) {\r\n                                                                tgtInstrument.tmpEqFilterStart = new FilterSettings();\r\n                                                                tgtInstrument.tmpEqFilterStart.fromJsonObject(tgtInstrument.eqSubFilters[i]!.toJsonObject());\r\n                                                                i = Config.filterMorphCount;\r\n                                                            }\r\n                                                        }\r\n                                                        if (Math.floor((instrument.modFilterTypes[mod] - 1) / 2) < tgtInstrument.tmpEqFilterStart!.controlPointCount) {\r\n                                                            if (instrument.modFilterTypes[mod] % 2)\r\n                                                                tgtInstrument.tmpEqFilterStart!.controlPoints[Math.floor((instrument.modFilterTypes[mod] - 1) / 2)].freq = latestPinValues[mod];\r\n                                                            else\r\n                                                                tgtInstrument.tmpEqFilterStart!.controlPoints[Math.floor((instrument.modFilterTypes[mod] - 1) / 2)].gain = latestPinValues[mod];\r\n                                                        }\r\n                                                    }\r\n                                                    tgtInstrument.tmpEqFilterEnd = tgtInstrument.tmpEqFilterStart;\r\n                                                } else if (noteFilterParam) {\r\n                                                    let tgtInstrument: Instrument = this.song.channels[instrument.modChannels[mod]].instruments[usedInstruments[instrumentIndex]];\r\n                                                    if (instrument.modFilterTypes[mod] == 0) {\r\n                                                        tgtInstrument.tmpNoteFilterStart = tgtInstrument.noteSubFilters[latestPinValues[mod]];\r\n                                                    } else {\r\n                                                        for (let i: number = 0; i < Config.filterMorphCount; i++) {\r\n                                                            if (tgtInstrument.tmpNoteFilterStart == tgtInstrument.noteSubFilters[i]) {\r\n                                                                tgtInstrument.tmpNoteFilterStart = new FilterSettings();\r\n                                                                tgtInstrument.tmpNoteFilterStart.fromJsonObject(tgtInstrument.noteSubFilters[i]!.toJsonObject());\r\n                                                                i = Config.filterMorphCount;\r\n                                                            }\r\n                                                        }\r\n                                                        if (Math.floor((instrument.modFilterTypes[mod] - 1) / 2) < tgtInstrument.tmpNoteFilterStart!.controlPointCount) {\r\n                                                            if (instrument.modFilterTypes[mod] % 2)\r\n                                                                tgtInstrument.tmpNoteFilterStart!.controlPoints[Math.floor((instrument.modFilterTypes[mod] - 1) / 2)].freq = latestPinValues[mod];\r\n                                                            else\r\n                                                                tgtInstrument.tmpNoteFilterStart!.controlPoints[Math.floor((instrument.modFilterTypes[mod] - 1) / 2)].gain = latestPinValues[mod];\r\n                                                        }\r\n                                                    }\r\n                                                    tgtInstrument.tmpNoteFilterEnd = tgtInstrument.tmpNoteFilterStart;\r\n                                                }\r\n                                                else this.setModValue(latestPinValues[mod], latestPinValues[mod], mod, instrument.modChannels[mod], usedInstruments[instrumentIndex], modulatorAdjust);\r\n\r\n                                                latestModInsTimes[instrument.modChannels[mod]][usedInstruments[instrumentIndex]][modulatorAdjust] = currentBar * Config.partsPerBeat * this.song.beatsPerBar + latestPinParts[mod];\r\n                                            }\r\n                                        }\r\n                                    }\r\n                                }\r\n                            }\r\n                        }\r\n                    }\r\n                }\r\n            }\r\n        }\r\n    }\r\n\r\n    // Detects if a modulator is set, but not valid for the current effects/instrument type/filter type\r\n    // Note, setting 'none' or the intermediary steps when clicking to add a mod, like an unset channel/unset instrument, counts as valid.\r\n    // TODO: This kind of check is mirrored in SongEditor.ts' whenUpdated. Creates a lot of redundancy for adding new mods. Can be moved into new properties for mods, to avoid this later.\r\n    public determineInvalidModulators(instrument: Instrument): void {\r\n        if (this.song == null)\r\n            return;\r\n        for (let mod: number = 0; mod < Config.modCount; mod++) {\r\n            instrument.invalidModulators[mod] = true;\r\n            // For song modulator, valid if any setting used\r\n            if (instrument.modChannels[mod] == -1) {\r\n                if (instrument.modulators[mod] != 0)\r\n                    instrument.invalidModulators[mod] = false;\r\n                continue;\r\n            }\r\n            const channel: Channel | null = this.song.channels[instrument.modChannels[mod]];\r\n            if (channel == null) continue;\r\n            let tgtInstrumentList: Instrument[] = [];\r\n            if (instrument.modInstruments[mod] >= channel.instruments.length) { // All or active\r\n                tgtInstrumentList = channel.instruments;\r\n            } else {\r\n                tgtInstrumentList = [channel.instruments[instrument.modInstruments[mod]]];\r\n            }\r\n            for (let i: number = 0; i < tgtInstrumentList.length; i++) {\r\n                const tgtInstrument: Instrument | null = tgtInstrumentList[i];\r\n                if (tgtInstrument == null) continue;\r\n                const str: string = Config.modulators[instrument.modulators[mod]].name;\r\n                // Check effects\r\n                if (!((Config.modulators[instrument.modulators[mod]].associatedEffect != EffectType.length && !(tgtInstrument.effects & (1 << Config.modulators[instrument.modulators[mod]].associatedEffect)))\r\n                    // Instrument type specific\r\n                    || ((tgtInstrument.type != InstrumentType.fm && tgtInstrument.type != InstrumentType.fm6op) && (str == \"fm slider 1\" || str == \"fm slider 2\" || str == \"fm slider 3\" || str == \"fm slider 4\" || str == \"fm feedback\"))\r\n                    || tgtInstrument.type != InstrumentType.fm6op && (str == \"fm slider 5\" || str == \"fm slider 6\")\r\n                    || (tgtInstrument.type != InstrumentType.pwm && (str == \"pulse width\"))\r\n                    // Arp check\r\n                    || (!tgtInstrument.getChord().arpeggiates && (str == \"arp speed\" || str == \"reset arp\"))\r\n                    // EQ Filter check\r\n                    || (tgtInstrument.eqFilterType && str == \"eq filter\")\r\n                    || (!tgtInstrument.eqFilterType && (str == \"eq filt cut\" || str == \"eq filt peak\"))\r\n                    || (str == \"eq filter\" && Math.floor((instrument.modFilterTypes[mod] + 1) / 2) > tgtInstrument.eqFilter.controlPointCount)\r\n                    // Note Filter check\r\n                    || (tgtInstrument.noteFilterType && str == \"note filter\")\r\n                    || (!tgtInstrument.noteFilterType && (str == \"note filt cut\" || str == \"note filt peak\"))\r\n                    || (str == \"note filter\" && Math.floor((instrument.modFilterTypes[mod] + 1) / 2) > tgtInstrument.noteFilter.controlPointCount))) {\r\n\r\n                    instrument.invalidModulators[mod] = false;\r\n                    i = tgtInstrumentList.length;\r\n                }\r\n            }\r\n\r\n        }\r\n    }\r\n\r\n    private static operatorAmplitudeCurve(amplitude: number): number {\r\n        return (Math.pow(16.0, amplitude / 15.0) - 1.0) / 15.0;\r\n    }\r\n\r\n    public samplesPerSecond: number = 44100;\r\n    public panningDelayBufferSize: number;\r\n    public panningDelayBufferMask: number;\r\n    public chorusDelayBufferSize: number;\r\n    public chorusDelayBufferMask: number;\r\n    // TODO: reverb\r\n\r\n    public song: Song | null = null;\r\n    public preferLowerLatency: boolean = false; // enable when recording performances from keyboard or MIDI. Takes effect next time you activate audio.\r\n    public anticipatePoorPerformance: boolean = false; // enable on mobile devices to reduce audio stutter glitches. Takes effect next time you activate audio.\r\n    public liveInputDuration: number = 0;\r\n    public liveInputStarted: boolean = false;\r\n    public liveInputPitches: number[] = [];\r\n    public liveInputChannel: number = 0;\r\n    public liveInputInstruments: number[] = [];\r\n    public loopRepeatCount: number = -1;\r\n    public volume: number = 1.0;\r\n    public oscRefreshEventTimer: number = 0;\r\n    public oscEnabled: boolean = true;\r\n    public enableMetronome: boolean = false;\r\n    public countInMetronome: boolean = false;\r\n    public renderingSong: boolean = false;\r\n\r\n    private wantToSkip: boolean = false;\r\n    private playheadInternal: number = 0.0;\r\n    private bar: number = 0;\r\n    private prevBar: number | null = null;\r\n    private nextBar: number | null = null;\r\n    private beat: number = 0;\r\n    private part: number = 0;\r\n    private tick: number = 0;\r\n    public isAtStartOfTick: boolean = true;\r\n    public isAtEndOfTick: boolean = true;\r\n    public tickSampleCountdown: number = 0;\r\n    private modValues: (number | null)[] = [];\r\n    private modInsValues: (number | null)[][][] = [];\r\n    private nextModValues: (number | null)[] = [];\r\n    private nextModInsValues: (number | null)[][][] = [];\r\n    private isPlayingSong: boolean = false;\r\n    private isRecording: boolean = false;\r\n    private liveInputEndTime: number = 0.0;\r\n    private browserAutomaticallyClearsAudioBuffer: boolean = true; // Assume true until proven otherwise. Older Chrome does not clear the buffer so it needs to be cleared manually.\r\n\r\n    public static readonly tempFilterStartCoefficients: FilterCoefficients = new FilterCoefficients();\r\n    public static readonly tempFilterEndCoefficients: FilterCoefficients = new FilterCoefficients();\r\n    private tempDrumSetControlPoint: FilterControlPoint = new FilterControlPoint();\r\n    public tempFrequencyResponse: FrequencyResponse = new FrequencyResponse();\r\n\r\n    private static readonly fmSynthFunctionCache: Dictionary<Function> = {};\r\n    private static readonly fm6SynthFunctionCache: Dictionary<Function> = {};\r\n    private static readonly effectsFunctionCache: Function[] = Array(1 << 7).fill(undefined); // keep in sync with the number of post-process effects.\r\n    private static readonly pickedStringFunctionCache: Function[] = Array(3).fill(undefined); // keep in sync with the number of unison voices.\r\n\r\n    private readonly channels: ChannelState[] = [];\r\n    private readonly tonePool: Deque<Tone> = new Deque<Tone>();\r\n    private readonly tempMatchedPitchTones: Array<Tone | null> = Array(Config.maxChordSize).fill(null);\r\n\r\n    private startedMetronome: boolean = false;\r\n    private metronomeSamplesRemaining: number = -1;\r\n    private metronomeAmplitude: number = 0.0;\r\n    private metronomePrevAmplitude: number = 0.0;\r\n    private metronomeFilter: number = 0.0;\r\n    private limit: number = 0.0;\r\n\r\n    private tempMonoInstrumentSampleBuffer: Float32Array | null = null;\r\n\r\n    private audioCtx: any | null = null;\r\n    private scriptNode: any | null = null;\r\n\r\n    public get playing(): boolean {\r\n        return this.isPlayingSong;\r\n    }\r\n\r\n    public get recording(): boolean {\r\n        return this.isRecording;\r\n    }\r\n\r\n    public get playhead(): number {\r\n        return this.playheadInternal;\r\n    }\r\n\r\n    public set playhead(value: number) {\r\n        if (this.song != null) {\r\n            this.playheadInternal = Math.max(0, Math.min(this.song.barCount, value));\r\n            let remainder: number = this.playheadInternal;\r\n            this.bar = Math.floor(remainder);\r\n            remainder = this.song.beatsPerBar * (remainder - this.bar);\r\n            this.beat = Math.floor(remainder);\r\n            remainder = Config.partsPerBeat * (remainder - this.beat);\r\n            this.part = Math.floor(remainder);\r\n            remainder = Config.ticksPerPart * (remainder - this.part);\r\n            this.tick = Math.floor(remainder);\r\n            this.tickSampleCountdown = 0;\r\n            this.isAtStartOfTick = true;\r\n            this.prevBar = null;\r\n        }\r\n    }\r\n\r\n    public getSamplesPerBar(): number {\r\n        if (this.song == null) throw new Error();\r\n        return this.getSamplesPerTick() * Config.ticksPerPart * Config.partsPerBeat * this.song.beatsPerBar;\r\n    }\r\n\r\n    public getTicksIntoBar(): number {\r\n        return (this.beat * Config.partsPerBeat + this.part) * Config.ticksPerPart + this.tick;\r\n    }\r\n    public getCurrentPart(): number {\r\n        return (this.beat * Config.partsPerBeat + this.part);\r\n    }\r\n\r\n    private findPartsInBar(bar: number): number {\r\n        if (this.song == null) return 0;\r\n        let partsInBar: number = Config.partsPerBeat * this.song.beatsPerBar;\r\n        for (let channel: number = this.song.pitchChannelCount + this.song.noiseChannelCount; channel < this.song.getChannelCount(); channel++) {\r\n            let pattern: Pattern | null = this.song.getPattern(channel, bar);\r\n            if (pattern != null) {\r\n                let instrument: Instrument = this.song.channels[channel].instruments[pattern.instruments[0]];\r\n                for (let mod: number = 0; mod < Config.modCount; mod++) {\r\n                    if (instrument.modulators[mod] == Config.modulators.dictionary[\"next bar\"].index) {\r\n                        for (const note of pattern.notes) {\r\n                            if (note.pitches[0] == (Config.modCount - 1 - mod)) {\r\n                                // Find the earliest next bar note.\r\n                                if (partsInBar > note.start)\r\n                                    partsInBar = note.start;\r\n                            }\r\n                        }\r\n                    }\r\n                }\r\n            }\r\n        }\r\n        return partsInBar;\r\n    }\r\n\r\n    // Returns the total samples in the song\r\n    public getTotalSamples(enableIntro: boolean, enableOutro: boolean, loop: number): number {\r\n        if (this.song == null)\r\n            return -1;\r\n\r\n        // Compute the window to be checked (start bar to end bar)\r\n        let startBar: number = enableIntro ? 0 : this.song.loopStart;\r\n        let endBar: number = enableOutro ? this.song.barCount : (this.song.loopStart + this.song.loopLength);\r\n        let hasTempoMods: boolean = false;\r\n        let hasNextBarMods: boolean = false;\r\n        let prevTempo: number = this.song.tempo;\r\n\r\n        // Determine if any tempo or next bar mods happen anywhere in the window\r\n        for (let channel: number = this.song.pitchChannelCount + this.song.noiseChannelCount; channel < this.song.getChannelCount(); channel++) {\r\n            for (let bar: number = startBar; bar < endBar; bar++) {\r\n                let pattern: Pattern | null = this.song.getPattern(channel, bar);\r\n                if (pattern != null) {\r\n                    let instrument: Instrument = this.song.channels[channel].instruments[pattern.instruments[0]];\r\n                    for (let mod: number = 0; mod < Config.modCount; mod++) {\r\n                        if (instrument.modulators[mod] == Config.modulators.dictionary[\"tempo\"].index) {\r\n                            hasTempoMods = true;\r\n                        }\r\n                        if (instrument.modulators[mod] == Config.modulators.dictionary[\"next bar\"].index) {\r\n                            hasNextBarMods = true;\r\n                        }\r\n                    }\r\n                }\r\n            }\r\n        }\r\n\r\n        // If intro is not zero length, determine what the \"entry\" tempo is going into the start part, by looking at mods that came before...\r\n        if (startBar > 0) {\r\n            let latestTempoPin: number | null = null;\r\n            let latestTempoValue: number = 0;\r\n\r\n            for (let bar: number = startBar - 1; bar >= 0; bar--) {\r\n                for (let channel: number = this.song.pitchChannelCount + this.song.noiseChannelCount; channel < this.song.getChannelCount(); channel++) {\r\n                    let pattern = this.song.getPattern(channel, bar);\r\n\r\n                    if (pattern != null) {\r\n                        let instrumentIdx: number = pattern.instruments[0];\r\n                        let instrument: Instrument = this.song.channels[channel].instruments[instrumentIdx];\r\n\r\n                        let partsInBar: number = this.findPartsInBar(bar);\r\n\r\n                        for (const note of pattern.notes) {\r\n                            if (instrument.modulators[Config.modCount - 1 - note.pitches[0]] == Config.modulators.dictionary[\"tempo\"].index) {\r\n                                if (note.start < partsInBar && (latestTempoPin == null || note.end > latestTempoPin)) {\r\n                                    if (note.end <= partsInBar) {\r\n                                        latestTempoPin = note.end;\r\n                                        latestTempoValue = note.pins[note.pins.length - 1].size;\r\n                                    }\r\n                                    else {\r\n                                        latestTempoPin = partsInBar;\r\n                                        // Find the pin where bar change happens, and compute where pin volume would be at that time\r\n                                        for (let pinIdx = 0; pinIdx < note.pins.length; pinIdx++) {\r\n                                            if (note.pins[pinIdx].time + note.start > partsInBar) {\r\n                                                const transitionLength: number = note.pins[pinIdx].time - note.pins[pinIdx - 1].time;\r\n                                                const toNextBarLength: number = partsInBar - note.start - note.pins[pinIdx - 1].time;\r\n                                                const deltaVolume: number = note.pins[pinIdx].size - note.pins[pinIdx - 1].size;\r\n\r\n                                                latestTempoValue = Math.round(note.pins[pinIdx - 1].size + deltaVolume * toNextBarLength / transitionLength);\r\n                                                pinIdx = note.pins.length;\r\n                                            }\r\n                                        }\r\n                                    }\r\n                                }\r\n                            }\r\n                        }\r\n                    }\r\n                }\r\n\r\n                // Done once you process a pattern where tempo mods happened, since the search happens backward\r\n                if (latestTempoPin != null) {\r\n                    prevTempo = latestTempoValue + Config.modulators.dictionary[\"tempo\"].convertRealFactor;\r\n                    bar = -1;\r\n                }\r\n            }\r\n        }\r\n\r\n        if (hasTempoMods || hasNextBarMods) {\r\n            // Run from start bar to end bar and observe looping, computing average tempo across each bar\r\n            let bar: number = startBar;\r\n            let ended: boolean = false;\r\n            let totalSamples: number = 0;\r\n\r\n            while (!ended) {\r\n                // Compute the subsection of the pattern that will play\r\n                let partsInBar: number = Config.partsPerBeat * this.song.beatsPerBar;\r\n                let currentPart: number = 0;\r\n\r\n                if (hasNextBarMods) {\r\n                    partsInBar = this.findPartsInBar(bar);\r\n                }\r\n\r\n                // Compute average tempo in this tick window, or use last tempo if nothing happened\r\n                if (hasTempoMods) {\r\n                    let foundMod: boolean = false;\r\n                    for (let channel: number = this.song.pitchChannelCount + this.song.noiseChannelCount; channel < this.song.getChannelCount(); channel++) {\r\n                        if (foundMod == false) {\r\n                            let pattern: Pattern | null = this.song.getPattern(channel, bar);\r\n                            if (pattern != null) {\r\n                                let instrument: Instrument = this.song.channels[channel].instruments[pattern.instruments[0]];\r\n                                for (let mod: number = 0; mod < Config.modCount; mod++) {\r\n                                    if (foundMod == false && instrument.modulators[mod] == Config.modulators.dictionary[\"tempo\"].index\r\n                                        && pattern.notes.find(n => n.pitches[0] == (Config.modCount - 1 - mod))) {\r\n                                        // Only the first tempo mod instrument for this bar will be checked (well, the first with a note in this bar).\r\n                                        foundMod = true;\r\n                                        // Need to re-sort the notes by start time to make the next part much less painful.\r\n                                        pattern.notes.sort(function (a, b) { return (a.start == b.start) ? a.pitches[0] - b.pitches[0] : a.start - b.start; });\r\n                                        for (const note of pattern.notes) {\r\n                                            if (note.pitches[0] == (Config.modCount - 1 - mod)) {\r\n                                                // Compute samples up to this note\r\n                                                totalSamples += (Math.min(partsInBar - currentPart, note.start - currentPart)) * Config.ticksPerPart * this.getSamplesPerTickSpecificBPM(prevTempo);\r\n\r\n                                                if (note.start < partsInBar) {\r\n                                                    for (let pinIdx: number = 1; pinIdx < note.pins.length; pinIdx++) {\r\n                                                        // Compute samples up to this pin\r\n                                                        if (note.pins[pinIdx - 1].time + note.start <= partsInBar) {\r\n                                                            const tickLength: number = Config.ticksPerPart * Math.min(partsInBar - (note.start + note.pins[pinIdx - 1].time), note.pins[pinIdx].time - note.pins[pinIdx - 1].time);\r\n                                                            const prevPinTempo: number = note.pins[pinIdx - 1].size + Config.modulators.dictionary[\"tempo\"].convertRealFactor;\r\n                                                            let currPinTempo: number = note.pins[pinIdx].size + Config.modulators.dictionary[\"tempo\"].convertRealFactor;\r\n                                                            if (note.pins[pinIdx].time + note.start > partsInBar) {\r\n                                                                // Compute an intermediary tempo since bar changed over mid-pin. Maybe I'm deep in \"what if\" territory now!\r\n                                                                currPinTempo = note.pins[pinIdx - 1].size + (note.pins[pinIdx].size - note.pins[pinIdx - 1].size) * (partsInBar - (note.start + note.pins[pinIdx - 1].time)) / (note.pins[pinIdx].time - note.pins[pinIdx - 1].time) + Config.modulators.dictionary[\"tempo\"].convertRealFactor;\r\n                                                            }\r\n                                                            let bpmScalar: number = Config.partsPerBeat * Config.ticksPerPart / 60;\r\n\r\n                                                            if (currPinTempo != prevPinTempo) {\r\n\r\n                                                                // Definite integral of SamplesPerTick w/r/t beats to find total samples from start point to end point for a variable tempo\r\n                                                                // The starting formula is\r\n                                                                // SamplesPerTick = SamplesPerSec / ((PartsPerBeat * TicksPerPart) / SecPerMin) * BeatsPerMin )\r\n                                                                //\r\n                                                                // This is an expression of samples per tick \"instantaneously\", and it can be multiplied by a number of ticks to get a sample count.\r\n                                                                // But this isn't the full story. BeatsPerMin, e.g. tempo, changes throughout the interval so it has to be expressed in terms of ticks, \"t\"\r\n                                                                // ( Also from now on PartsPerBeat, TicksPerPart, and SecPerMin are combined into one scalar, called \"BPMScalar\" )\r\n                                                                // Substituting BPM for a step variable that moves with respect to the current tick, we get\r\n                                                                // SamplesPerTick = SamplesPerSec / (BPMScalar * ( (EndTempo - StartTempo / TickLength) * t + StartTempo ) )\r\n                                                                //\r\n                                                                // When this equation is integrated from 0 to TickLength with respect to t, we get the following expression:\r\n                                                                //   Samples = - SamplesPerSec * TickLength * ( log( BPMScalar * EndTempo * TickLength ) - log( BPMScalar * StartTempo * TickLength ) ) / BPMScalar * ( StartTempo - EndTempo )\r\n\r\n                                                                totalSamples += - this.samplesPerSecond * tickLength * (Math.log(bpmScalar * currPinTempo * tickLength) - Math.log(bpmScalar * prevPinTempo * tickLength)) / (bpmScalar * (prevPinTempo - currPinTempo));\r\n\r\n                                                            }\r\n                                                            else {\r\n\r\n                                                                // No tempo change between the two pins.\r\n                                                                totalSamples += tickLength * this.getSamplesPerTickSpecificBPM(currPinTempo);\r\n\r\n                                                            }\r\n                                                            prevTempo = currPinTempo;\r\n                                                        }\r\n                                                        currentPart = Math.min(note.start + note.pins[pinIdx].time, partsInBar);\r\n                                                    }\r\n                                                }\r\n                                            }\r\n                                        }\r\n                                    }\r\n                                }\r\n                            }\r\n                        }\r\n                    }\r\n                }\r\n\r\n                // Compute samples for the rest of the bar\r\n                totalSamples += (partsInBar - currentPart) * Config.ticksPerPart * this.getSamplesPerTickSpecificBPM(prevTempo);\r\n\r\n                bar++;\r\n                if (loop != 0 && bar == this.song.loopStart + this.song.loopLength) {\r\n                    bar = this.song.loopStart;\r\n                    if (loop > 0) loop--;\r\n                }\r\n                if (bar >= endBar) {\r\n                    ended = true;\r\n                }\r\n            }\r\n\r\n            return Math.ceil(totalSamples);\r\n        }\r\n        else {\r\n            // No tempo or next bar mods... phew! Just calculate normally.\r\n            return this.getSamplesPerBar() * this.getTotalBars(enableIntro, enableOutro, loop);\r\n        }\r\n    }\r\n\r\n    public getTotalBars(enableIntro: boolean, enableOutro: boolean, useLoopCount: number = this.loopRepeatCount): number {\r\n        if (this.song == null) throw new Error();\r\n        let bars: number = this.song.loopLength * (useLoopCount + 1);\r\n        if (enableIntro) bars += this.song.loopStart;\r\n        if (enableOutro) bars += this.song.barCount - (this.song.loopStart + this.song.loopLength);\r\n        return bars;\r\n    }\r\n\r\n    constructor(song: Song | string | null = null) {\r\n        this.computeDelayBufferSizes();\r\n        if (song != null) this.setSong(song);\r\n    }\r\n\r\n    public setSong(song: Song | string): void {\r\n        if (typeof (song) == \"string\") {\r\n            this.song = new Song(song);\r\n        } else if (song instanceof Song) {\r\n            this.song = song;\r\n        }\r\n        this.prevBar = null;\r\n    }\r\n\r\n    private computeDelayBufferSizes(): void {\r\n        this.panningDelayBufferSize = Synth.fittingPowerOfTwo(this.samplesPerSecond * Config.panDelaySecondsMax);\r\n        this.panningDelayBufferMask = this.panningDelayBufferSize - 1;\r\n        this.chorusDelayBufferSize = Synth.fittingPowerOfTwo(this.samplesPerSecond * Config.chorusMaxDelay);\r\n        this.chorusDelayBufferMask = this.chorusDelayBufferSize - 1;\r\n    }\r\n\r\n    private activateAudio(): void {\r\n        const bufferSize: number = this.anticipatePoorPerformance ? (this.preferLowerLatency ? 2048 : 4096) : (this.preferLowerLatency ? 512 : 2048);\r\n        if (this.audioCtx == null || this.scriptNode == null || this.scriptNode.bufferSize != bufferSize) {\r\n            if (this.scriptNode != null) this.deactivateAudio();\r\n            const latencyHint: string = this.anticipatePoorPerformance ? (this.preferLowerLatency ? \"balanced\" : \"playback\") : (this.preferLowerLatency ? \"interactive\" : \"balanced\");\r\n            this.audioCtx = this.audioCtx || new (window.AudioContext || window.webkitAudioContext)({ latencyHint: latencyHint });\r\n            this.samplesPerSecond = this.audioCtx.sampleRate;\r\n            this.scriptNode = this.audioCtx.createScriptProcessor ? this.audioCtx.createScriptProcessor(bufferSize, 0, 2) : this.audioCtx.createJavaScriptNode(bufferSize, 0, 2); // bufferSize samples per callback buffer, 0 input channels, 2 output channels (left/right)\r\n            this.scriptNode.onaudioprocess = this.audioProcessCallback;\r\n            this.scriptNode.channelCountMode = 'explicit';\r\n            this.scriptNode.channelInterpretation = 'speakers';\r\n            this.scriptNode.connect(this.audioCtx.destination);\r\n\r\n            this.computeDelayBufferSizes();\r\n        }\r\n        this.audioCtx.resume();\r\n    }\r\n\r\n    private deactivateAudio(): void {\r\n        if (this.audioCtx != null && this.scriptNode != null) {\r\n            this.scriptNode.disconnect(this.audioCtx.destination);\r\n            this.scriptNode = null;\r\n            if (this.audioCtx.close) this.audioCtx.close(); // firefox is missing this function?\r\n            this.audioCtx = null;\r\n        }\r\n    }\r\n\r\n    public maintainLiveInput(): void {\r\n        this.activateAudio();\r\n        this.liveInputEndTime = performance.now() + 10000.0;\r\n    }\r\n\r\n    public play(): void {\r\n        if (this.isPlayingSong) return;\r\n\t    \t\t\t this.computeLatestModValues();\r\n        this.warmUpSynthesizer(this.song);\r\n\t\t//BUGFIX FROM JUMMBOX\r\n        this.isPlayingSong = true;\r\n        this.activateAudio();\r\n                   //this.warmUpSynthesizer(this.song);\r\n           // this.computeLatestModValues();\r\n    }\r\n\r\n    public pause(): void {\r\n        if (!this.isPlayingSong) return;\r\n        this.isPlayingSong = false;\r\n        this.isRecording = false;\r\n        this.modValues = [];\r\n        this.nextModValues = [];\r\n        if (this.song != null) {\r\n            this.song.inVolumeCap = 0.0;\r\n            this.song.outVolumeCap = 0.0;\r\n            for (let channelIndex: number = 0; channelIndex < this.song.pitchChannelCount + this.song.noiseChannelCount; channelIndex++) {\r\n                this.modInsValues[channelIndex] = [];\r\n                this.nextModInsValues[channelIndex] = [];\r\n            }\r\n        }\r\n    }\r\n\r\n    public startRecording(): void {\r\n        this.preferLowerLatency = true;\r\n        this.isRecording = true;\r\n        this.play();\r\n    }\r\n\r\n    public resetEffects(): void {\r\n        this.limit = 0.0;\r\n        this.freeAllTones();\r\n        if (this.song != null) {\r\n            for (const channelState of this.channels) {\r\n                for (const instrumentState of channelState.instruments) {\r\n                    instrumentState.resetAllEffects();\r\n                }\r\n            }\r\n        }\r\n    }\r\n\r\n    public setModValue(volumeStart: number, volumeEnd: number, mod: number, channelIndex: number, instrumentIndex: number, setting: number): number {\r\n        let val: number = volumeStart + Config.modulators[setting].convertRealFactor;\r\n        let nextVal: number = volumeEnd + Config.modulators[setting].convertRealFactor;\r\n        if (Config.modulators[setting].forSong) {\r\n            if (this.modValues[setting] == null || this.modValues[setting] != val || this.nextModValues[setting] != nextVal) {\r\n                this.modValues[setting] = val;\r\n                this.nextModValues[setting] = nextVal;\r\n            }\r\n        } else {\r\n            if (this.modInsValues[channelIndex][instrumentIndex][setting] == null\r\n                || this.modInsValues[channelIndex][instrumentIndex][setting] != val\r\n                || this.nextModInsValues[channelIndex][instrumentIndex][setting] != nextVal) {\r\n                this.modInsValues[channelIndex][instrumentIndex][setting] = val;\r\n                this.nextModInsValues[channelIndex][instrumentIndex][setting] = nextVal;\r\n            }\r\n        }\r\n\r\n        return val;\r\n    }\r\n\r\n    public getModValue(setting: number, channel?: number | null, instrument?: number | null, nextVal?: boolean): number {\r\n        const forSong: boolean = Config.modulators[setting].forSong;\r\n        if (forSong) {\r\n            if (this.modValues[setting] != null && this.nextModValues[setting] != null) {\r\n                return nextVal ? this.nextModValues[setting]! : this.modValues[setting]!;\r\n            }\r\n        } else if (channel != undefined && instrument != undefined) {\r\n            if (this.modInsValues[channel][instrument][setting] != null && this.nextModInsValues[channel][instrument][setting] != null) {\r\n                return nextVal ? this.nextModInsValues[channel][instrument][setting]! : this.modInsValues[channel][instrument][setting]!;\r\n            }\r\n        }\r\n        return -1;\r\n    }\r\n\r\n    // Checks if any mod is active for the given channel/instrument OR if any mod is active for the song scope. Could split the logic if needed later.\r\n    public isAnyModActive(channel: number, instrument: number): boolean {\r\n        for (let setting: number = 0; setting < Config.modulators.length; setting++) {\r\n            if ((this.modValues != undefined && this.modValues[setting] != null)\r\n                || (this.modInsValues != undefined && this.modInsValues[channel] != undefined && this.modInsValues[channel][instrument] != undefined && this.modInsValues[channel][instrument][setting] != null)) {\r\n                return true;\r\n            }\r\n        }\r\n        return false;\r\n    }\r\n\r\n    public unsetMod(setting: number, channel?: number, instrument?: number) {\r\n        if (this.isModActive(setting) || (channel != undefined && instrument != undefined && this.isModActive(setting, channel, instrument))) {\r\n            this.modValues[setting] = null;\r\n            this.nextModValues[setting] = null;\r\n            if (channel != undefined && instrument != undefined) {\r\n                this.modInsValues[channel][instrument][setting] = null;\r\n                this.nextModInsValues[channel][instrument][setting] = null;\r\n            }\r\n        }\r\n    }\r\n\r\n    public isFilterModActive(forNoteFilter: boolean, channelIdx: number, instrumentIdx: number) {\r\n        const instrument: Instrument = this.song!.channels[channelIdx].instruments[instrumentIdx];\r\n\r\n        if (forNoteFilter) {\r\n            if (instrument.noteFilterType)\r\n                return false;\r\n            if (instrument.tmpNoteFilterEnd != null)\r\n                return true;\r\n        }\r\n        else {\r\n            if (instrument.eqFilterType)\r\n                return false;\r\n            if (instrument.tmpEqFilterEnd != null)\r\n                return true;\r\n        }\r\n        return false\r\n    }\r\n\r\n    public isModActive(setting: number, channel?: number, instrument?: number): boolean {\r\n        const forSong: boolean = Config.modulators[setting].forSong;\r\n        if (forSong) {\r\n            return (this.modValues != undefined && this.modValues[setting] != null);\r\n        } else if (channel != undefined && instrument != undefined && this.modInsValues != undefined && this.modInsValues[channel] != null && this.modInsValues[channel][instrument] != null) {\r\n            return (this.modInsValues[channel][instrument][setting] != null);\r\n        }\r\n        return false;\r\n    }\r\n\r\n    public snapToStart(): void {\r\n        this.bar = 0;\r\n        this.resetEffects();\r\n        this.snapToBar();\r\n    }\r\n\r\n    public goToBar(bar: number): void {\r\n        this.bar = bar;\r\n        this.resetEffects();\r\n        this.playheadInternal = this.bar;\r\n    }\r\n\r\n    public snapToBar(): void {\r\n        this.playheadInternal = this.bar;\r\n        this.beat = 0;\r\n        this.part = 0;\r\n        this.tick = 0;\r\n        this.tickSampleCountdown = 0;\r\n    }\r\n\r\n    public jumpIntoLoop(): void {\r\n        if (!this.song) return;\r\n        if (this.bar < this.song.loopStart || this.bar >= this.song.loopStart + this.song.loopLength) {\r\n            const oldBar: number = this.bar;\r\n            this.bar = this.song.loopStart;\r\n            this.playheadInternal += this.bar - oldBar;\r\n\r\n            if (this.playing)\r\n                this.computeLatestModValues();\r\n        }\r\n    }\r\n\r\n    public goToNextBar(): void {\r\n        if (!this.song) return;\r\n        this.prevBar = this.bar;\r\n        const oldBar: number = this.bar;\r\n        this.bar++;\r\n        if (this.bar >= this.song.barCount) {\r\n            this.bar = 0;\r\n        }\r\n        this.playheadInternal += this.bar - oldBar;\r\n\r\n        if (this.playing)\r\n            this.computeLatestModValues();\r\n    }\r\n\r\n    public goToPrevBar(): void {\r\n        if (!this.song) return;\r\n        this.prevBar = null;\r\n        const oldBar: number = this.bar;\r\n        this.bar--;\r\n        if (this.bar < 0 || this.bar >= this.song.barCount) {\r\n            this.bar = this.song.barCount - 1;\r\n        }\r\n        this.playheadInternal += this.bar - oldBar;\r\n\r\n        if (this.playing)\r\n            this.computeLatestModValues();\r\n    }\r\n\r\n    private getNextBar(): number {\r\n        let nextBar: number = this.bar + 1;\r\n        if (this.isRecording) {\r\n            if (nextBar >= this.song!.barCount) {\r\n                nextBar = this.song!.barCount - 1;\r\n            }\r\n        } else if (this.loopRepeatCount != 0 && nextBar == this.song!.loopStart + this.song!.loopLength) {\r\n            nextBar = this.song!.loopStart;\r\n        }\r\n        return nextBar;\r\n    }\r\n\r\n    public skipBar(): void {\r\n        if (!this.song) return;\r\n        const samplesPerTick: number = this.getSamplesPerTick();\r\n        this.bar++;\r\n        this.beat = 0;\r\n        this.part = 0;\r\n        this.tick = 0;\r\n        this.tickSampleCountdown = samplesPerTick;\r\n\t    \t\t\tthis.isAtStartOfTick = true;\r\n\t\t\t//BUGFIX FROM JUMMBOX\r\n\r\n        if (this.loopRepeatCount != 0 && this.bar == this.song.loopStart + this.song.loopLength) {\r\n            this.bar = this.song.loopStart;\r\n            if (this.loopRepeatCount > 0) this.loopRepeatCount--;\r\n        }\r\n\r\n    }\r\n\r\n    private audioProcessCallback = (audioProcessingEvent: any): void => {\r\n        const outputBuffer = audioProcessingEvent.outputBuffer;\r\n        const outputDataL: Float32Array = outputBuffer.getChannelData(0);\r\n        const outputDataR: Float32Array = outputBuffer.getChannelData(1);\r\n\r\n        if (this.browserAutomaticallyClearsAudioBuffer && (outputDataL[0] != 0.0 || outputDataR[0] != 0.0 || outputDataL[outputBuffer.length - 1] != 0.0 || outputDataR[outputBuffer.length - 1] != 0.0)) {\r\n            // If the buffer is ever initially nonzero, then this must be an older browser that doesn't automatically clear the audio buffer.\r\n            this.browserAutomaticallyClearsAudioBuffer = false;\r\n        }\r\n        if (!this.browserAutomaticallyClearsAudioBuffer) {\r\n            // If this browser does not clear the buffer automatically, do so manually before continuing.\r\n            const length: number = outputBuffer.length;\r\n            for (let i: number = 0; i < length; i++) {\r\n                outputDataL[i] = 0.0;\r\n                outputDataR[i] = 0.0;\r\n            }\r\n        }\r\n\r\n        if (!this.isPlayingSong && performance.now() >= this.liveInputEndTime) {\r\n            this.deactivateAudio();\r\n        } else {\r\n            this.synthesize(outputDataL, outputDataR, outputBuffer.length, this.isPlayingSong);\r\n\r\n            if (this.oscEnabled) {\r\n                if (this.oscRefreshEventTimer <= 0) {\r\n                    events.raise(\"oscillascopeUpdate\", outputDataL, outputDataR);\r\n                    this.oscRefreshEventTimer = 2;\r\n                } else {\r\n                    this.oscRefreshEventTimer--;\r\n                }\r\n            }\r\n        }\r\n    }\r\n\r\n    public synthesize(outputDataL: Float32Array, outputDataR: Float32Array, outputBufferLength: number, playSong: boolean = true): void {\r\n        if (this.song == null) {\r\n            for (let i: number = 0; i < outputBufferLength; i++) {\r\n                outputDataL[i] = 0.0;\r\n                outputDataR[i] = 0.0;\r\n            }\r\n            this.deactivateAudio();\r\n            return;\r\n        }\r\n\r\n        const song: Song = this.song;\r\n        this.song.inVolumeCap = 0.0 // Reset volume cap for this run\r\n        this.song.outVolumeCap = 0.0;\r\n\r\n        let samplesPerTick: number = this.getSamplesPerTick();\r\n        let ended: boolean = false;\r\n\r\n        // Check the bounds of the playhead:\r\n        if (this.tickSampleCountdown <= 0 || this.tickSampleCountdown > samplesPerTick) {\r\n            this.tickSampleCountdown = samplesPerTick;\r\n            this.isAtStartOfTick = true;\r\n        }\r\n        if (playSong) {\r\n            if (this.beat >= song.beatsPerBar) {\r\n                this.beat = 0;\r\n                this.part = 0;\r\n                this.tick = 0;\r\n                this.tickSampleCountdown = samplesPerTick;\r\n                this.isAtStartOfTick = true;\r\n\r\n                this.prevBar = this.bar;\r\n                this.bar = this.getNextBar();\r\n                if (this.bar <= this.prevBar && this.loopRepeatCount > 0) this.loopRepeatCount--;\r\n\r\n            }\r\n            if (this.bar >= song.barCount) {\r\n                this.bar = 0;\r\n                if (this.loopRepeatCount != -1) {\r\n                    ended = true;\r\n                    this.pause();\r\n                }\r\n            }\r\n        }\r\n\r\n        //const synthStartTime: number = performance.now();\r\n\r\n        this.syncSongState();\r\n\r\n        if (this.tempMonoInstrumentSampleBuffer == null || this.tempMonoInstrumentSampleBuffer.length < outputBufferLength) {\r\n            this.tempMonoInstrumentSampleBuffer = new Float32Array(outputBufferLength);\r\n        }\r\n\r\n        // Post processing parameters:\r\n        const volume: number = +this.volume;\r\n        const limitDecay: number = 1.0 - Math.pow(0.5, 4.0 / this.samplesPerSecond);\r\n        const limitRise: number = 1.0 - Math.pow(0.5, 4000.0 / this.samplesPerSecond);\r\n        let limit: number = +this.limit;\r\n\t    \t\t\tlet skippedBars = [];\r\n        let firstSkippedBufferIndex = -1;\r\n\t\t//BUGFIX FROM JUMMBOX\r\n\r\n        let bufferIndex: number = 0;\r\n        while (bufferIndex < outputBufferLength && !ended) {\r\n\r\n            this.nextBar = this.getNextBar();\r\n            if (this.nextBar >= song.barCount) this.nextBar = null;\r\n\r\n            const samplesLeftInBuffer: number = outputBufferLength - bufferIndex;\r\n            const samplesLeftInTick: number = Math.ceil(this.tickSampleCountdown);\r\n            const runLength: number = Math.min(samplesLeftInTick, samplesLeftInBuffer);\r\n            const runEnd: number = bufferIndex + runLength;\r\n\r\n            // Handle mod synth\r\n            if (this.isPlayingSong || this.renderingSong) {\r\n                for (let channelIndex: number = song.pitchChannelCount + song.noiseChannelCount; channelIndex < song.getChannelCount(); channelIndex++) {\r\n                    const channel: Channel = song.channels[channelIndex];\r\n                    const channelState: ChannelState = this.channels[channelIndex];\r\n\r\n                    this.determineCurrentActiveTones(song, channelIndex, samplesPerTick, playSong);\r\n\r\n                    for (let instrumentIndex: number = 0; instrumentIndex < channel.instruments.length; instrumentIndex++) {\r\n                        const instrumentState: InstrumentState = channelState.instruments[instrumentIndex];\r\n\r\n                        for (let i: number = 0; i < instrumentState.activeModTones.count(); i++) {\r\n                            const tone: Tone = instrumentState.activeModTones.get(i);\r\n                            this.playModTone(song, channelIndex, samplesPerTick, bufferIndex, runLength, tone, false, false);\r\n                        }\r\n                    }\r\n                }\r\n            }\r\n\r\n            // Handle next bar mods if they were set\r\n            if (this.wantToSkip) {\r\n\t\t    \t\t\t\t\t// Unable to continue, as we have skipped back to a previously visited bar without generating new samples, which means we are infinitely skipping.\r\n                // In this case processing will return before the designated number of samples are processed. In other words, silence will be generated.\r\n                let barVisited = skippedBars.includes(this.bar);\r\n                if (barVisited && bufferIndex == firstSkippedBufferIndex)\r\n                    return;\r\n                if (firstSkippedBufferIndex == -1) {\r\n                    firstSkippedBufferIndex = bufferIndex;\r\n                }\r\n                if (!barVisited)\r\n                    skippedBars.push(this.bar);\r\n\t\t\t\t//BUGFIX FROM JUMMBOX\r\n                this.wantToSkip = false;\r\n                this.skipBar();\r\n\t\t    \t\t\t\t\tcontinue;\r\n\t\t\t\t\t//BUGFIX FROM JUMMBOX\r\n            }\r\n\r\n            for (let channelIndex: number = 0; channelIndex < song.pitchChannelCount + song.noiseChannelCount; channelIndex++) {\r\n                const channel: Channel = song.channels[channelIndex];\r\n                const channelState: ChannelState = this.channels[channelIndex];\r\n\r\n                if (this.isAtStartOfTick) {\r\n                    this.determineCurrentActiveTones(song, channelIndex, samplesPerTick, playSong && !this.countInMetronome);\r\n                    this.determineLiveInputTones(song, channelIndex, samplesPerTick);\r\n                }\r\n                for (let instrumentIndex: number = 0; instrumentIndex < channel.instruments.length; instrumentIndex++) {\r\n                    const instrument: Instrument = channel.instruments[instrumentIndex];\r\n                    const instrumentState: InstrumentState = channelState.instruments[instrumentIndex];\r\n\r\n                    if (this.isAtStartOfTick) {\r\n                        let tonesPlayedInThisInstrument: number = instrumentState.activeTones.count() + instrumentState.liveInputTones.count();\r\n\r\n                        for (let i: number = 0; i < instrumentState.releasedTones.count(); i++) {\r\n                            const tone: Tone = instrumentState.releasedTones.get(i);\r\n                            if (tone.ticksSinceReleased >= Math.abs(instrument.getFadeOutTicks())) {\r\n                                this.freeReleasedTone(instrumentState, i);\r\n                                i--;\r\n                                continue;\r\n                            }\r\n                            const shouldFadeOutFast: boolean = (tonesPlayedInThisInstrument >= Config.maximumTonesPerChannel);\r\n                            this.computeTone(song, channelIndex, samplesPerTick, tone, true, shouldFadeOutFast);\r\n                            tonesPlayedInThisInstrument++;\r\n                        }\r\n\r\n                        if (instrumentState.awake) {\r\n                            if (!instrumentState.computed) {\r\n                                instrumentState.compute(this, instrument, samplesPerTick, Math.ceil(samplesPerTick), null, channelIndex, instrumentIndex);\r\n                            }\r\n\r\n                            instrumentState.computed = false;\r\n                            //instrumentState.envelopeComputer.clearEnvelopes();\r\n                        }\r\n                    }\r\n\r\n                    for (let i: number = 0; i < instrumentState.activeTones.count(); i++) {\r\n                        const tone: Tone = instrumentState.activeTones.get(i);\r\n                        this.playTone(channelIndex, bufferIndex, runLength, tone);\r\n                    }\r\n\r\n                    for (let i: number = 0; i < instrumentState.liveInputTones.count(); i++) {\r\n                        const tone: Tone = instrumentState.liveInputTones.get(i);\r\n                        this.playTone(channelIndex, bufferIndex, runLength, tone);\r\n                    }\r\n\r\n                    for (let i: number = 0; i < instrumentState.releasedTones.count(); i++) {\r\n                        const tone: Tone = instrumentState.releasedTones.get(i);\r\n                        this.playTone(channelIndex, bufferIndex, runLength, tone);\r\n                    }\r\n\r\n                    if (instrumentState.awake) {\r\n                        Synth.effectsSynth(this, outputDataL, outputDataR, bufferIndex, runLength, instrumentState);\r\n                    }\r\n\r\n                    // Update LFO time for instruments (used to be deterministic based on bar position but now vibrato/arp speed messes that up!)\r\n\r\n                    const tickSampleCountdown: number = this.tickSampleCountdown;\r\n                    const startRatio: number = 1.0 - (tickSampleCountdown) / samplesPerTick;\r\n                    const endRatio: number = 1.0 - (tickSampleCountdown - runLength) / samplesPerTick;\r\n                    const ticksIntoBar: number = (this.beat * Config.partsPerBeat + this.part) * Config.ticksPerPart + this.tick;\r\n                    const partTimeTickStart: number = (ticksIntoBar) / Config.ticksPerPart;\r\n                    const partTimeTickEnd: number = (ticksIntoBar + 1) / Config.ticksPerPart;\r\n                    const partTimeStart: number = partTimeTickStart + (partTimeTickEnd - partTimeTickStart) * startRatio;\r\n                    const partTimeEnd: number = partTimeTickStart + (partTimeTickEnd - partTimeTickStart) * endRatio;\r\n                    let useVibratoSpeed: number = instrument.vibratoSpeed;\r\n\r\n                    instrument.LFOtime = instrument.nextLFOtime;\r\n\r\n                    if (this.isModActive(Config.modulators.dictionary[\"vibrato speed\"].index, channelIndex, instrumentIndex)) {\r\n                        useVibratoSpeed = this.getModValue(Config.modulators.dictionary[\"vibrato speed\"].index, channelIndex, instrumentIndex);\r\n                    }\r\n\r\n                    if (useVibratoSpeed == 0) {\r\n                        instrument.LFOtime = 0;\r\n                        instrument.nextLFOtime = 0;\r\n                    }\r\n                    else {\r\n                        instrument.nextLFOtime += useVibratoSpeed * 0.1 * (partTimeEnd - partTimeStart);\r\n                    }\r\n                }\r\n            }\r\n\r\n            if (this.enableMetronome || this.countInMetronome) {\r\n                if (this.part == 0) {\r\n                    if (!this.startedMetronome) {\r\n                        const midBeat: boolean = (song.beatsPerBar > 4 && (song.beatsPerBar % 2 == 0) && this.beat == song.beatsPerBar / 2);\r\n                        const periods: number = (this.beat == 0) ? 8 : midBeat ? 6 : 4;\r\n                        const hz: number = (this.beat == 0) ? 1600 : midBeat ? 1200 : 800;\r\n                        const amplitude: number = (this.beat == 0) ? 0.06 : midBeat ? 0.05 : 0.04;\r\n                        const samplesPerPeriod: number = this.samplesPerSecond / hz;\r\n                        const radiansPerSample: number = Math.PI * 2.0 / samplesPerPeriod;\r\n                        this.metronomeSamplesRemaining = Math.floor(samplesPerPeriod * periods);\r\n                        this.metronomeFilter = 2.0 * Math.cos(radiansPerSample);\r\n                        this.metronomeAmplitude = amplitude * Math.sin(radiansPerSample);\r\n                        this.metronomePrevAmplitude = 0.0;\r\n\r\n                        this.startedMetronome = true;\r\n                    }\r\n                    if (this.metronomeSamplesRemaining > 0) {\r\n                        const stopIndex: number = Math.min(runEnd, bufferIndex + this.metronomeSamplesRemaining);\r\n                        this.metronomeSamplesRemaining -= stopIndex - bufferIndex;\r\n                        for (let i: number = bufferIndex; i < stopIndex; i++) {\r\n                            outputDataL[i] += this.metronomeAmplitude;\r\n                            outputDataR[i] += this.metronomeAmplitude;\r\n                            const tempAmplitude: number = this.metronomeFilter * this.metronomeAmplitude - this.metronomePrevAmplitude;\r\n                            this.metronomePrevAmplitude = this.metronomeAmplitude;\r\n                            this.metronomeAmplitude = tempAmplitude;\r\n                        }\r\n                    }\r\n                } else {\r\n                    this.startedMetronome = false;\r\n                }\r\n            }\r\n\r\n            // Post processing:\r\n            for (let i: number = bufferIndex; i < runEnd; i++) {\r\n                // A compressor/limiter.\r\n                const sampleL = outputDataL[i] * song.masterGain * song.masterGain;\r\n                const sampleR = outputDataR[i] * song.masterGain * song.masterGain;\r\n                const absL: number = sampleL < 0.0 ? -sampleL : sampleL;\r\n                const absR: number = sampleR < 0.0 ? -sampleR : sampleR;\r\n                const abs: number = absL > absR ? absL : absR;\r\n                this.song.inVolumeCap = (this.song.inVolumeCap > abs ? this.song.inVolumeCap : abs); // Analytics, spit out raw input volume\r\n                // Determines which formula to use. 0 when volume is between [0, compressionThreshold], 1 when between (compressionThreshold, limitThreshold], 2 above\r\n                const limitRange: number = (+(abs > song.compressionThreshold)) + (+(abs > song.limitThreshold));\r\n                // Determine the target amplification based on the range of the curve\r\n                const limitTarget: number =\r\n                    (+(limitRange == 0)) * (((abs + 1 - song.compressionThreshold) * 0.8 + 0.25) * song.compressionRatio + 1.05 * (1 - song.compressionRatio))\r\n                    + (+(limitRange == 1)) * (1.05)\r\n                    + (+(limitRange == 2)) * (1.05 * ((abs + 1 - song.limitThreshold) * song.limitRatio + (1 - song.limitThreshold)));\r\n                // Move the limit towards the target\r\n                limit += ((limitTarget - limit) * (limit < limitTarget ? limitRise : limitDecay));\r\n                const limitedVolume = volume / (limit >= 1 ? limit * 1.05 : limit * 0.8 + 0.25);\r\n                outputDataL[i] = sampleL * limitedVolume;\r\n                outputDataR[i] = sampleR * limitedVolume;\r\n\r\n                this.song.outVolumeCap = (this.song.outVolumeCap > abs * limitedVolume ? this.song.outVolumeCap : abs * limitedVolume); // Analytics, spit out limited output volume\r\n            }\r\n\r\n            bufferIndex += runLength;\r\n\r\n            this.isAtStartOfTick = false;\r\n            this.tickSampleCountdown -= runLength;\r\n            if (this.tickSampleCountdown <= 0) {\r\n                this.isAtStartOfTick = true;\r\n\r\n                // Track how long tones have been released, and free them if there are too many.\r\n                // Also reset awake InstrumentStates that didn't have any Tones during this tick.\r\n                for (const channelState of this.channels) {\r\n                    for (const instrumentState of channelState.instruments) {\r\n                        for (let i: number = 0; i < instrumentState.releasedTones.count(); i++) {\r\n                            const tone: Tone = instrumentState.releasedTones.get(i);\r\n                            if (tone.isOnLastTick) {\r\n                                this.freeReleasedTone(instrumentState, i);\r\n                                i--;\r\n                            } else {\r\n                                tone.ticksSinceReleased++;\r\n                            }\r\n                        }\r\n                        if (instrumentState.deactivateAfterThisTick) {\r\n                            instrumentState.deactivate();\r\n                        }\r\n                        instrumentState.tonesAddedInThisTick = false;\r\n                    }\r\n                }\r\n\r\n                // Update arpeggio time, which is used to calculate arpeggio position\r\n                for (let channel: number = 0; channel < this.song.pitchChannelCount + this.song.noiseChannelCount; channel++) {\r\n                    for (let instrumentIdx: number = 0; instrumentIdx < this.song.channels[channel].instruments.length; instrumentIdx++) {\r\n                        let instrument: Instrument = this.song.channels[channel].instruments[instrumentIdx];\r\n                        let useArpeggioSpeed: number = instrument.arpeggioSpeed;\r\n                        if (this.isModActive(Config.modulators.dictionary[\"arp speed\"].index, channel, instrumentIdx)) {\r\n                            useArpeggioSpeed = this.getModValue(Config.modulators.dictionary[\"arp speed\"].index, channel, instrumentIdx, false);\r\n                            if (Number.isInteger(useArpeggioSpeed)) {\r\n                                instrument.arpTime += Config.arpSpeedScale[useArpeggioSpeed];\r\n                            } else {\r\n                                // Linear interpolate arpeggio values\r\n                                instrument.arpTime += (1 - (useArpeggioSpeed % 1)) * Config.arpSpeedScale[Math.floor(useArpeggioSpeed)] + (useArpeggioSpeed % 1) * Config.arpSpeedScale[Math.ceil(useArpeggioSpeed)];\r\n                            }\r\n                        }\r\n                        else {\r\n                            instrument.arpTime += Config.arpSpeedScale[useArpeggioSpeed];\r\n                        }\r\n                    }\r\n                }\r\n\r\n                // Update next-used filters after each run\r\n                for (let channel: number = 0; channel < this.song.pitchChannelCount + this.song.noiseChannelCount; channel++) {\r\n                    for (let instrumentIdx: number = 0; instrumentIdx < this.song.channels[channel].instruments.length; instrumentIdx++) {\r\n                        let instrument: Instrument = this.song.channels[channel].instruments[instrumentIdx];\r\n                        if (instrument.tmpEqFilterEnd != null) {\r\n                            instrument.tmpEqFilterStart = instrument.tmpEqFilterEnd;\r\n                        } else {\r\n                            instrument.tmpEqFilterStart = instrument.eqFilter;\r\n                        }\r\n                        if (instrument.tmpNoteFilterEnd != null) {\r\n                            instrument.tmpNoteFilterStart = instrument.tmpNoteFilterEnd;\r\n                        } else {\r\n                            instrument.tmpNoteFilterStart = instrument.noteFilter;\r\n                        }\r\n                    }\r\n                }\r\n\r\n                this.tick++;\r\n                this.tickSampleCountdown += samplesPerTick;\r\n                if (this.tick == Config.ticksPerPart) {\r\n                    this.tick = 0;\r\n                    this.part++;\r\n                    this.liveInputDuration--;\r\n\r\n                    if (this.part == Config.partsPerBeat) {\r\n                        this.part = 0;\r\n\r\n                        if (playSong) {\r\n                            this.beat++;\r\n                            if (this.beat == song.beatsPerBar) {\r\n                                // bar changed, reset for next bar:\r\n                                this.beat = 0;\r\n\r\n                                if (this.countInMetronome) {\r\n                                    this.countInMetronome = false;\r\n                                } else {\r\n                                    this.prevBar = this.bar;\r\n                                    this.bar = this.getNextBar();\r\n                                    if (this.bar <= this.prevBar && this.loopRepeatCount > 0) this.loopRepeatCount--;\r\n\r\n                                    if (this.bar >= song.barCount) {\r\n                                        this.bar = 0;\r\n                                        if (this.loopRepeatCount != -1) {\r\n                                            ended = true;\r\n                                            this.resetEffects();\r\n                                            this.pause();\r\n                                        }\r\n                                    }\r\n                                }\r\n                            }\r\n                        }\r\n                    }\r\n                }\r\n            }\r\n\r\n            // Update mod values so that next values copy to current values\r\n            for (let setting: number = 0; setting < Config.modulators.length; setting++) {\r\n                if (this.nextModValues != null && this.nextModValues[setting] != null)\r\n                    this.modValues[setting] = this.nextModValues[setting];\r\n            }\r\n\r\n            // Set samples per tick if song tempo mods changed it\r\n            if (this.isModActive(Config.modulators.dictionary[\"tempo\"].index)) {\r\n                samplesPerTick = this.getSamplesPerTick();\r\n                this.tickSampleCountdown = Math.min(this.tickSampleCountdown, samplesPerTick);\r\n            }\r\n\r\n            // Bound LFO times to be within their period (to keep values from getting large)\r\n            // I figured this modulo math probably doesn't have to happen every LFO tick.\r\n            for (let channel: number = 0; channel < this.song.pitchChannelCount; channel++) {\r\n                for (let instrument of this.song.channels[channel].instruments) {\r\n                    instrument.nextLFOtime = (instrument.nextLFOtime % (Config.vibratoTypes[instrument.vibratoType].period / (Config.ticksPerPart * samplesPerTick / this.samplesPerSecond)));\r\n                    instrument.arpTime = (instrument.arpTime % (2520 * Config.ticksPerArpeggio)); // 2520 = LCM of 4, 5, 6, 7, 8, 9 (arp sizes)\r\n                }\r\n            }\r\n\r\n            for (let setting: number = 0; setting < Config.modulators.length; setting++) {\r\n                for (let channel: number = 0; channel < this.song.pitchChannelCount + this.song.noiseChannelCount; channel++) {\r\n                    for (let instrument: number = 0; instrument < this.song.getMaxInstrumentsPerChannel(); instrument++) {\r\n                        if (this.nextModInsValues != null && this.nextModInsValues[channel] != null && this.nextModInsValues[channel][instrument] != null && this.nextModInsValues[channel][instrument][setting] != null) {\r\n                            this.modInsValues[channel][instrument][setting] = this.nextModInsValues[channel][instrument][setting];\r\n                        }\r\n                    }\r\n                }\r\n            }\r\n        }\r\n\r\n        // Optimization: Avoid persistent reverb values in the float denormal range.\r\n        if (!Number.isFinite(limit) || Math.abs(limit) < epsilon) limit = 0.0;\r\n        this.limit = limit;\r\n\r\n        if (playSong && !this.countInMetronome) {\r\n            this.playheadInternal = (((this.tick + 1.0 - this.tickSampleCountdown / samplesPerTick) / 2.0 + this.part) / Config.partsPerBeat + this.beat) / song.beatsPerBar + this.bar;\r\n        }\r\n\r\n        /*\r\n        const synthDuration: number = performance.now() - synthStartTime;\r\n        // Performance measurements:\r\n        samplesAccumulated += outputBufferLength;\r\n        samplePerformance += synthDuration;\r\n    \t\r\n        if (samplesAccumulated >= 44100 * 4) {\r\n            const secondsGenerated = samplesAccumulated / 44100;\r\n            const secondsRequired = samplePerformance / 1000;\r\n            const ratio = secondsRequired / secondsGenerated;\r\n            console.log(ratio);\r\n            samplePerformance = 0;\r\n            samplesAccumulated = 0;\r\n        }\r\n        */\r\n    }\r\n\r\n    private freeTone(tone: Tone): void {\r\n        this.tonePool.pushBack(tone);\r\n    }\r\n\r\n    private newTone(): Tone {\r\n        if (this.tonePool.count() > 0) {\r\n            const tone: Tone = this.tonePool.popBack();\r\n            tone.freshlyAllocated = true;\r\n            return tone;\r\n        }\r\n        return new Tone();\r\n    }\r\n\r\n    private releaseTone(instrumentState: InstrumentState, tone: Tone): void {\r\n        instrumentState.releasedTones.pushFront(tone);\r\n        tone.atNoteStart = false;\r\n        tone.passedEndOfNote = true;\r\n    }\r\n\r\n    private freeReleasedTone(instrumentState: InstrumentState, toneIndex: number): void {\r\n        this.freeTone(instrumentState.releasedTones.get(toneIndex));\r\n        instrumentState.releasedTones.remove(toneIndex);\r\n    }\r\n\r\n    public freeAllTones(): void {\r\n        for (const channelState of this.channels) {\r\n            for (const instrumentState of channelState.instruments) {\r\n                while (instrumentState.activeTones.count() > 0) this.freeTone(instrumentState.activeTones.popBack());\r\n                while (instrumentState.activeModTones.count() > 0) this.freeTone(instrumentState.activeModTones.popBack());\r\n                while (instrumentState.releasedTones.count() > 0) this.freeTone(instrumentState.releasedTones.popBack());\r\n                while (instrumentState.liveInputTones.count() > 0) this.freeTone(instrumentState.liveInputTones.popBack());\r\n            }\r\n        }\r\n    }\r\n\r\n    private determineLiveInputTones(song: Song, channelIndex: number, samplesPerTick: number): void {\r\n        const channel: Channel = song.channels[channelIndex];\r\n        const channelState: ChannelState = this.channels[channelIndex];\r\n        const pitches: number[] = this.liveInputPitches;\r\n\r\n        for (let instrumentIndex: number = 0; instrumentIndex < channel.instruments.length; instrumentIndex++) {\r\n            const instrumentState: InstrumentState = channelState.instruments[instrumentIndex];\r\n            const toneList: Deque<Tone> = instrumentState.liveInputTones;\r\n            let toneCount: number = 0;\r\n            if (this.liveInputDuration > 0 && channelIndex == this.liveInputChannel && pitches.length > 0 && this.liveInputInstruments.indexOf(instrumentIndex) != -1) {\r\n                const instrument: Instrument = channel.instruments[instrumentIndex];\r\n\r\n                if (instrument.getChord().singleTone) {\r\n                    let tone: Tone;\r\n                    if (toneList.count() <= toneCount) {\r\n                        tone = this.newTone();\r\n                        toneList.pushBack(tone);\r\n                    } else if (!instrument.getTransition().isSeamless && this.liveInputStarted) {\r\n                        this.releaseTone(instrumentState, toneList.get(toneCount));\r\n                        tone = this.newTone();\r\n                        toneList.set(toneCount, tone);\r\n                    } else {\r\n                        tone = toneList.get(toneCount);\r\n                    }\r\n                    toneCount++;\r\n\r\n                    for (let i: number = 0; i < pitches.length; i++) {\r\n                        tone.pitches[i] = pitches[i];\r\n                    }\r\n                    tone.pitchCount = pitches.length;\r\n                    tone.chordSize = 1;\r\n                    tone.instrumentIndex = instrumentIndex;\r\n                    tone.note = tone.prevNote = tone.nextNote = null;\r\n                    tone.atNoteStart = this.liveInputStarted;\r\n                    tone.forceContinueAtStart = false;\r\n                    tone.forceContinueAtEnd = false;\r\n                    this.computeTone(song, channelIndex, samplesPerTick, tone, false, false);\r\n                } else {\r\n                    //const transition: Transition = instrument.getTransition();\r\n\r\n                    this.moveTonesIntoOrderedTempMatchedList(toneList, pitches);\r\n\r\n                    for (let i: number = 0; i < pitches.length; i++) {\r\n                        //const strumOffsetParts: number = i * instrument.getChord().strumParts;\r\n\r\n                        let tone: Tone;\r\n                        if (this.tempMatchedPitchTones[toneCount] != null) {\r\n                            tone = this.tempMatchedPitchTones[toneCount]!;\r\n                            this.tempMatchedPitchTones[toneCount] = null;\r\n                            if (tone.pitchCount != 1 || tone.pitches[0] != pitches[i]) {\r\n                                this.releaseTone(instrumentState, tone);\r\n                                tone = this.newTone();\r\n                            }\r\n                            toneList.pushBack(tone);\r\n                        } else {\r\n                            tone = this.newTone();\r\n                            toneList.pushBack(tone);\r\n                        }\r\n                        toneCount++;\r\n\r\n                        tone.pitches[0] = pitches[i];\r\n                        tone.pitchCount = 1;\r\n                        tone.chordSize = pitches.length;\r\n                        tone.instrumentIndex = instrumentIndex;\r\n                        tone.note = tone.prevNote = tone.nextNote = null;\r\n                        tone.atNoteStart = this.liveInputStarted;\r\n                        tone.forceContinueAtStart = false;\r\n                        tone.forceContinueAtEnd = false;\r\n                        this.computeTone(song, channelIndex, samplesPerTick, tone, false, false);\r\n                    }\r\n                }\r\n            }\r\n\r\n            while (toneList.count() > toneCount) {\r\n                this.releaseTone(instrumentState, toneList.popBack());\r\n            }\r\n\r\n            this.clearTempMatchedPitchTones(toneCount, instrumentState);\r\n        }\r\n\r\n        this.liveInputStarted = false;\r\n    }\r\n\r\n    // Returns the chord type of the instrument in the adjacent pattern if it is compatible for a\r\n    // seamless transition across patterns, otherwise returns null.\r\n    private adjacentPatternHasCompatibleInstrumentTransition(song: Song, channel: Channel, pattern: Pattern, otherPattern: Pattern, instrumentIndex: number, transition: Transition, chord: Chord, note: Note, otherNote: Note, forceContinue: boolean): Chord | null {\r\n        if (song.patternInstruments && otherPattern.instruments.indexOf(instrumentIndex) == -1) {\r\n            // The adjacent pattern does not contain the same instrument as the current pattern.\r\n\r\n            if (pattern.instruments.length > 1 || otherPattern.instruments.length > 1) {\r\n                // The current or adjacent pattern contains more than one instrument, don't bother\r\n                // trying to connect them.\r\n                return null;\r\n            }\r\n            // Otherwise, the two patterns each contain one instrument, but not the same instrument.\r\n            // Try to connect them.\r\n            const otherInstrument: Instrument = channel.instruments[otherPattern.instruments[0]];\r\n\r\n            if (forceContinue) {\r\n                // Even non-seamless instruments can be connected across patterns if forced.\r\n                return otherInstrument.getChord();\r\n            }\r\n\r\n            // Otherwise, check that both instruments are seamless across patterns.\r\n            const otherTransition: Transition = otherInstrument.getTransition();\r\n            if (transition.includeAdjacentPatterns && otherTransition.includeAdjacentPatterns && otherTransition.slides == transition.slides) {\r\n                return otherInstrument.getChord();\r\n            } else {\r\n                return null;\r\n            }\r\n        } else {\r\n            // If both patterns contain the same instrument, check that it is seamless across patterns.\r\n            return (forceContinue || transition.includeAdjacentPatterns) ? chord : null;\r\n        }\r\n    }\r\n\r\n    public static adjacentNotesHaveMatchingPitches(firstNote: Note, secondNote: Note): boolean {\r\n        if (firstNote.pitches.length != secondNote.pitches.length) return false;\r\n        const firstNoteInterval: number = firstNote.pins[firstNote.pins.length - 1].interval;\r\n        for (const pitch of firstNote.pitches) {\r\n            if (secondNote.pitches.indexOf(pitch + firstNoteInterval) == -1) return false;\r\n        }\r\n        return true;\r\n    }\r\n\r\n    private moveTonesIntoOrderedTempMatchedList(toneList: Deque<Tone>, notePitches: number[]): void {\r\n        // The tones are about to seamlessly transition to a new note. The pitches\r\n        // from the old note may or may not match any of the pitches in the new\r\n        // note, and not necessarily in order, but if any do match, they'll sound\r\n        // better if those tones continue to have the same pitch. Attempt to find\r\n        // the right spot for each old tone in the new chord if possible.\r\n\r\n        for (let i: number = 0; i < toneList.count(); i++) {\r\n            const tone: Tone = toneList.get(i);\r\n            const pitch: number = tone.pitches[0] + tone.lastInterval;\r\n            for (let j: number = 0; j < notePitches.length; j++) {\r\n                if (notePitches[j] == pitch) {\r\n                    this.tempMatchedPitchTones[j] = tone;\r\n                    toneList.remove(i);\r\n                    i--;\r\n                    break;\r\n                }\r\n            }\r\n        }\r\n\r\n        // Any tones that didn't get matched should just fill in the gaps.\r\n        while (toneList.count() > 0) {\r\n            const tone: Tone = toneList.popFront();\r\n            for (let j: number = 0; j < this.tempMatchedPitchTones.length; j++) {\r\n                if (this.tempMatchedPitchTones[j] == null) {\r\n                    this.tempMatchedPitchTones[j] = tone;\r\n                    break;\r\n                }\r\n            }\r\n        }\r\n    }\r\n\r\n    private determineCurrentActiveTones(song: Song, channelIndex: number, samplesPerTick: number, playSong: boolean): void {\r\n        const channel: Channel = song.channels[channelIndex];\r\n        const channelState: ChannelState = this.channels[channelIndex];\r\n        const pattern: Pattern | null = song.getPattern(channelIndex, this.bar);\r\n        const currentPart: number = this.getCurrentPart();\r\n        const currentTick: number = this.tick + Config.ticksPerPart * currentPart;\r\n\r\n        if (playSong && song.getChannelIsMod(channelIndex)) {\r\n\r\n            // For mod channels, notes aren't strictly arranged chronologically. Also, each pitch value could play or not play at a given time. So... a bit more computation involved!\r\n            // The same transition logic should apply though, even though it isn't really used by mod channels.\r\n            let notes: (Note | null)[] = [];\r\n            let prevNotes: (Note | null)[] = [];\r\n            let nextNotes: (Note | null)[] = [];\r\n            let fillCount: number = Config.modCount;\r\n            while (fillCount--) {\r\n                notes.push(null);\r\n                prevNotes.push(null);\r\n                nextNotes.push(null);\r\n            }\r\n\r\n            if (pattern != null && !channel.muted) {\r\n                for (let i: number = 0; i < pattern.notes.length; i++) {\r\n                    if (pattern.notes[i].end <= currentPart) {\r\n                        // Actually need to check which note starts closer to the start of this note.\r\n                        if (prevNotes[pattern.notes[i].pitches[0]] == null || pattern.notes[i].end > (prevNotes[pattern.notes[i].pitches[0]] as Note).start) {\r\n                            prevNotes[pattern.notes[i].pitches[0]] = pattern.notes[i];\r\n                        }\r\n                    }\r\n                    else if (pattern.notes[i].start <= currentPart && pattern.notes[i].end > currentPart) {\r\n                        notes[pattern.notes[i].pitches[0]] = pattern.notes[i];\r\n                    }\r\n                    else if (pattern.notes[i].start > currentPart) {\r\n                        // Actually need to check which note starts closer to the end of this note.\r\n                        if (nextNotes[pattern.notes[i].pitches[0]] == null || pattern.notes[i].start < (nextNotes[pattern.notes[i].pitches[0]] as Note).start) {\r\n                            nextNotes[pattern.notes[i].pitches[0]] = pattern.notes[i];\r\n                        }\r\n                    }\r\n                }\r\n            }\r\n\r\n            let modToneCount: number = 0;\r\n            const newInstrumentIndex: number = (song.patternInstruments && (pattern != null)) ? pattern!.instruments[0] : 0;\r\n            const instrumentState: InstrumentState = channelState.instruments[newInstrumentIndex];\r\n            const toneList: Deque<Tone> = instrumentState.activeModTones;\r\n            for (let mod: number = 0; mod < Config.modCount; mod++) {\r\n                if (notes[mod] != null) {\r\n                    if (prevNotes[mod] != null && (prevNotes[mod] as Note).end != (notes[mod] as Note).start) prevNotes[mod] = null;\r\n                    if (nextNotes[mod] != null && (nextNotes[mod] as Note).start != (notes[mod] as Note).end) nextNotes[mod] = null;\r\n\r\n                }\r\n\r\n                if (channelState.singleSeamlessInstrument != null && channelState.singleSeamlessInstrument != newInstrumentIndex && channelState.singleSeamlessInstrument < channelState.instruments.length) {\r\n                    const sourceInstrumentState: InstrumentState = channelState.instruments[channelState.singleSeamlessInstrument];\r\n                    const destInstrumentState: InstrumentState = channelState.instruments[newInstrumentIndex];\r\n                    while (sourceInstrumentState.activeModTones.count() > 0) {\r\n                        destInstrumentState.activeModTones.pushFront(sourceInstrumentState.activeModTones.popBack());\r\n                    }\r\n                }\r\n                channelState.singleSeamlessInstrument = newInstrumentIndex;\r\n\r\n                if (notes[mod] != null) {\r\n                    let prevNoteForThisInstrument: Note | null = prevNotes[mod];\r\n                    let nextNoteForThisInstrument: Note | null = nextNotes[mod];\r\n\r\n                    let forceContinueAtStart: boolean = false;\r\n                    let forceContinueAtEnd: boolean = false;\r\n                    const atNoteStart: boolean = (Config.ticksPerPart * notes[mod]!.start == currentTick) && this.isAtStartOfTick;\r\n                    let tone: Tone;\r\n                    if (toneList.count() <= modToneCount) {\r\n                        tone = this.newTone();\r\n                        toneList.pushBack(tone);\r\n                    } else if (atNoteStart && (prevNoteForThisInstrument == null)) {\r\n                        const oldTone: Tone = toneList.get(modToneCount);\r\n                        if (oldTone.isOnLastTick) {\r\n                            this.freeTone(oldTone);\r\n                        } else {\r\n                            this.releaseTone(instrumentState, oldTone);\r\n                        }\r\n                        tone = this.newTone();\r\n                        toneList.set(modToneCount, tone);\r\n                    } else {\r\n                        tone = toneList.get(modToneCount);\r\n                    }\r\n                    modToneCount++;\r\n\r\n                    for (let i: number = 0; i < notes[mod]!.pitches.length; i++) {\r\n                        tone.pitches[i] = notes[mod]!.pitches[i];\r\n                    }\r\n                    tone.pitchCount = notes[mod]!.pitches.length;\r\n                    tone.chordSize = 1;\r\n                    tone.instrumentIndex = newInstrumentIndex;\r\n                    tone.note = notes[mod];\r\n                    tone.noteStartPart = notes[mod]!.start;\r\n                    tone.noteEndPart = notes[mod]!.end;\r\n                    tone.prevNote = prevNoteForThisInstrument;\r\n                    tone.nextNote = nextNoteForThisInstrument;\r\n                    tone.prevNotePitchIndex = 0;\r\n                    tone.nextNotePitchIndex = 0;\r\n                    tone.atNoteStart = atNoteStart;\r\n                    tone.passedEndOfNote = false;\r\n                    tone.forceContinueAtStart = forceContinueAtStart;\r\n                    tone.forceContinueAtEnd = forceContinueAtEnd;\r\n                }\r\n            }\r\n            // Automatically free or release seamless tones if there's no new note to take over.\r\n            while (toneList.count() > modToneCount) {\r\n                const tone: Tone = toneList.popBack();\r\n                const channel: Channel = song.channels[channelIndex];\r\n                if (tone.instrumentIndex < channel.instruments.length && !tone.isOnLastTick) {\r\n                    const instrumentState: InstrumentState = this.channels[channelIndex].instruments[tone.instrumentIndex];\r\n                    this.releaseTone(instrumentState, tone);\r\n                } else {\r\n                    this.freeTone(tone);\r\n                }\r\n            }\r\n\r\n        }\r\n        else if (!song.getChannelIsMod(channelIndex)) {\r\n\r\n            let note: Note | null = null;\r\n            let prevNote: Note | null = null;\r\n            let nextNote: Note | null = null;\r\n\r\n            if (playSong && pattern != null && !channel.muted && (!this.isRecording || this.liveInputChannel != channelIndex)) {\r\n                for (let i: number = 0; i < pattern.notes.length; i++) {\r\n                    if (pattern.notes[i].end <= currentPart) {\r\n                        prevNote = pattern.notes[i];\r\n                    } else if (pattern.notes[i].start <= currentPart && pattern.notes[i].end > currentPart) {\r\n                        note = pattern.notes[i];\r\n                    } else if (pattern.notes[i].start > currentPart) {\r\n                        nextNote = pattern.notes[i];\r\n                        break;\r\n                    }\r\n                }\r\n\r\n                if (note != null) {\r\n                    if (prevNote != null && prevNote.end != note.start) prevNote = null;\r\n                    if (nextNote != null && nextNote.start != note.end) nextNote = null;\r\n                }\r\n            }\r\n\r\n            // Seamless tones from a pattern with a single instrument can be transferred to a different single seamless instrument in the next pattern.\r\n            if (pattern != null && (!song.layeredInstruments || channel.instruments.length == 1 || (song.patternInstruments && pattern.instruments.length == 1))) {\r\n                const newInstrumentIndex: number = song.patternInstruments ? pattern.instruments[0] : 0;\r\n                if (channelState.singleSeamlessInstrument != null && channelState.singleSeamlessInstrument != newInstrumentIndex && channelState.singleSeamlessInstrument < channelState.instruments.length) {\r\n                    const sourceInstrumentState: InstrumentState = channelState.instruments[channelState.singleSeamlessInstrument];\r\n                    const destInstrumentState: InstrumentState = channelState.instruments[newInstrumentIndex];\r\n                    while (sourceInstrumentState.activeTones.count() > 0) {\r\n                        destInstrumentState.activeTones.pushFront(sourceInstrumentState.activeTones.popBack());\r\n                    }\r\n                }\r\n                channelState.singleSeamlessInstrument = newInstrumentIndex;\r\n            } else {\r\n                channelState.singleSeamlessInstrument = null;\r\n            }\r\n\r\n            for (let instrumentIndex: number = 0; instrumentIndex < channel.instruments.length; instrumentIndex++) {\r\n                const instrumentState: InstrumentState = channelState.instruments[instrumentIndex];\r\n                const toneList: Deque<Tone> = instrumentState.activeTones;\r\n                let toneCount: number = 0;\r\n                if ((note != null) && (!song.patternInstruments || (pattern!.instruments.indexOf(instrumentIndex) != -1))) {\r\n                    const instrument: Instrument = channel.instruments[instrumentIndex];\r\n                    let prevNoteForThisInstrument: Note | null = prevNote;\r\n                    let nextNoteForThisInstrument: Note | null = nextNote;\r\n\r\n                    const partsPerBar: Number = Config.partsPerBeat * song.beatsPerBar;\r\n                    const transition: Transition = instrument.getTransition();\r\n                    const chord: Chord = instrument.getChord();\r\n                    let forceContinueAtStart: boolean = false;\r\n                    let forceContinueAtEnd: boolean = false;\r\n                    let tonesInPrevNote: number = 0;\r\n                    let tonesInNextNote: number = 0;\r\n                    if (note.start == 0) {\r\n                        // If the beginning of the note coincides with the beginning of the pattern,\r\n                        let prevPattern: Pattern | null = (this.prevBar == null) ? null : song.getPattern(channelIndex, this.prevBar);\r\n                        if (prevPattern != null) {\r\n                            const lastNote: Note | null = (prevPattern.notes.length <= 0) ? null : prevPattern.notes[prevPattern.notes.length - 1];\r\n                            if (lastNote != null && lastNote.end == partsPerBar) {\r\n                                const patternForcesContinueAtStart: boolean = note.continuesLastPattern && Synth.adjacentNotesHaveMatchingPitches(lastNote, note);\r\n                                const chordOfCompatibleInstrument: Chord | null = this.adjacentPatternHasCompatibleInstrumentTransition(song, channel, pattern!, prevPattern, instrumentIndex, transition, chord, note, lastNote, patternForcesContinueAtStart);\r\n                                if (chordOfCompatibleInstrument != null) {\r\n                                    prevNoteForThisInstrument = lastNote;\r\n                                    tonesInPrevNote = chordOfCompatibleInstrument.singleTone ? 1 : prevNoteForThisInstrument.pitches.length\r\n                                    forceContinueAtStart = patternForcesContinueAtStart;\r\n                                }\r\n                            }\r\n                        }\r\n                    } else if (prevNoteForThisInstrument != null) {\r\n                        tonesInPrevNote = chord.singleTone ? 1 : prevNoteForThisInstrument.pitches.length\r\n                    }\r\n                    if (note.end == partsPerBar) {\r\n                        // If the end of the note coincides with the end of the pattern, look for an\r\n                        // adjacent note at the beginning of the next pattern.\r\n                        let nextPattern: Pattern | null = (this.nextBar == null) ? null : song.getPattern(channelIndex, this.nextBar);\r\n                        if (nextPattern != null) {\r\n                            const firstNote: Note | null = (nextPattern.notes.length <= 0) ? null : nextPattern.notes[0];\r\n                            if (firstNote != null && firstNote.start == 0) {\r\n                                const nextPatternForcesContinueAtStart: boolean = firstNote.continuesLastPattern && Synth.adjacentNotesHaveMatchingPitches(note, firstNote);\r\n                                const chordOfCompatibleInstrument: Chord | null = this.adjacentPatternHasCompatibleInstrumentTransition(song, channel, pattern!, nextPattern, instrumentIndex, transition, chord, note, firstNote, nextPatternForcesContinueAtStart);\r\n                                if (chordOfCompatibleInstrument != null) {\r\n                                    nextNoteForThisInstrument = firstNote;\r\n                                    tonesInNextNote = chordOfCompatibleInstrument.singleTone ? 1 : nextNoteForThisInstrument.pitches.length\r\n                                    forceContinueAtEnd = nextPatternForcesContinueAtStart;\r\n                                }\r\n                            }\r\n                        }\r\n                    } else if (nextNoteForThisInstrument != null) {\r\n                        tonesInNextNote = chord.singleTone ? 1 : nextNoteForThisInstrument.pitches.length\r\n                    }\r\n\r\n                    if (chord.singleTone) {\r\n                        const atNoteStart: boolean = (Config.ticksPerPart * note.start == currentTick);\r\n                        let tone: Tone;\r\n                        if (toneList.count() <= toneCount) {\r\n                            tone = this.newTone();\r\n                            toneList.pushBack(tone);\r\n                        } else if (atNoteStart && ((!(transition.isSeamless || instrument.clicklessTransition) && !forceContinueAtStart) || prevNoteForThisInstrument == null)) {\r\n                            const oldTone: Tone = toneList.get(toneCount);\r\n                            if (oldTone.isOnLastTick) {\r\n                                this.freeTone(oldTone);\r\n                            } else {\r\n                                this.releaseTone(instrumentState, oldTone);\r\n                            }\r\n                            tone = this.newTone();\r\n                            toneList.set(toneCount, tone);\r\n                        } else {\r\n                            tone = toneList.get(toneCount);\r\n                        }\r\n                        toneCount++;\r\n\r\n                        for (let i: number = 0; i < note.pitches.length; i++) {\r\n                            tone.pitches[i] = note.pitches[i];\r\n                        }\r\n                        tone.pitchCount = note.pitches.length;\r\n                        tone.chordSize = 1;\r\n                        tone.instrumentIndex = instrumentIndex;\r\n                        tone.note = note;\r\n                        tone.noteStartPart = note.start;\r\n                        tone.noteEndPart = note.end;\r\n                        tone.prevNote = prevNoteForThisInstrument;\r\n                        tone.nextNote = nextNoteForThisInstrument;\r\n                        tone.prevNotePitchIndex = 0;\r\n                        tone.nextNotePitchIndex = 0;\r\n                        tone.atNoteStart = atNoteStart;\r\n                        tone.passedEndOfNote = false;\r\n                        tone.forceContinueAtStart = forceContinueAtStart;\r\n                        tone.forceContinueAtEnd = forceContinueAtEnd;\r\n                        this.computeTone(song, channelIndex, samplesPerTick, tone, false, false);\r\n                    } else {\r\n                        const transition: Transition = instrument.getTransition();\r\n\r\n                        if (((transition.isSeamless && !transition.slides && chord.strumParts == 0) || forceContinueAtStart) && (Config.ticksPerPart * note.start == currentTick) && prevNoteForThisInstrument != null) {\r\n                            this.moveTonesIntoOrderedTempMatchedList(toneList, note.pitches);\r\n                        }\r\n\r\n                        let strumOffsetParts: number = 0;\r\n                        for (let i: number = 0; i < note.pitches.length; i++) {\r\n\r\n                            let prevNoteForThisTone: Note | null = (tonesInPrevNote > i) ? prevNoteForThisInstrument : null;\r\n                            let noteForThisTone: Note = note;\r\n                            let nextNoteForThisTone: Note | null = (tonesInNextNote > i) ? nextNoteForThisInstrument : null;\r\n                            let noteStartPart: number = noteForThisTone.start + strumOffsetParts;\r\n                            let passedEndOfNote: boolean = false;\r\n\r\n                            // Strumming may mean that a note's actual start time may be after the\r\n                            // note's displayed start time. If the note start hasn't been reached yet,\r\n                            // carry over the previous tone if available and seamless, otherwise skip\r\n                            // the new tone until it is ready to start.\r\n                            if (noteStartPart > currentPart) {\r\n                                if (toneList.count() > i && (transition.isSeamless || forceContinueAtStart) && prevNoteForThisTone != null) {\r\n                                    // Continue the previous note's chord until the current one takes over.\r\n                                    nextNoteForThisTone = noteForThisTone;\r\n                                    noteForThisTone = prevNoteForThisTone;\r\n                                    prevNoteForThisTone = null;\r\n                                    noteStartPart = noteForThisTone.start + strumOffsetParts;\r\n                                    passedEndOfNote = true;\r\n                                } else {\r\n                                    // This and the rest of the tones in the chord shouldn't start yet.\r\n                                    break;\r\n                                }\r\n                            }\r\n\r\n                            let noteEndPart: number = noteForThisTone.end;\r\n                            if ((transition.isSeamless || forceContinueAtStart) && nextNoteForThisTone != null) {\r\n                                noteEndPart = Math.min(Config.partsPerBeat * this.song!.beatsPerBar, noteEndPart + strumOffsetParts);\r\n                            }\r\n                            if ((!transition.continues && !forceContinueAtStart) || prevNoteForThisTone == null) {\r\n                                strumOffsetParts += chord.strumParts;\r\n                            }\r\n\r\n                            const atNoteStart: boolean = (Config.ticksPerPart * noteStartPart == currentTick);\r\n                            let tone: Tone;\r\n                            if (this.tempMatchedPitchTones[toneCount] != null) {\r\n                                tone = this.tempMatchedPitchTones[toneCount]!;\r\n                                this.tempMatchedPitchTones[toneCount] = null;\r\n                                toneList.pushBack(tone);\r\n                            } else if (toneList.count() <= toneCount) {\r\n                                tone = this.newTone();\r\n                                toneList.pushBack(tone);\r\n                            } else if (atNoteStart && ((!transition.isSeamless && !forceContinueAtStart) || prevNoteForThisTone == null)) {\r\n                                const oldTone: Tone = toneList.get(toneCount);\r\n                                if (oldTone.isOnLastTick) {\r\n                                    this.freeTone(oldTone);\r\n                                } else {\r\n                                    this.releaseTone(instrumentState, oldTone);\r\n                                }\r\n                                tone = this.newTone();\r\n                                toneList.set(toneCount, tone);\r\n                            } else {\r\n                                tone = toneList.get(toneCount);\r\n                            }\r\n                            toneCount++;\r\n\r\n                            tone.pitches[0] = noteForThisTone.pitches[i];\r\n                            tone.pitchCount = 1;\r\n                            tone.chordSize = noteForThisTone.pitches.length;\r\n                            tone.instrumentIndex = instrumentIndex;\r\n                            tone.note = noteForThisTone;\r\n                            tone.noteStartPart = noteStartPart;\r\n                            tone.noteEndPart = noteEndPart;\r\n                            tone.prevNote = prevNoteForThisTone;\r\n                            tone.nextNote = nextNoteForThisTone;\r\n                            tone.prevNotePitchIndex = i;\r\n                            tone.nextNotePitchIndex = i;\r\n                            tone.atNoteStart = atNoteStart;\r\n                            tone.passedEndOfNote = passedEndOfNote;\r\n                            tone.forceContinueAtStart = forceContinueAtStart && prevNoteForThisTone != null;\r\n                            tone.forceContinueAtEnd = forceContinueAtEnd && nextNoteForThisTone != null;\r\n                            this.computeTone(song, channelIndex, samplesPerTick, tone, false, false);\r\n                        }\r\n                    }\r\n                }\r\n                // Automatically free or release seamless tones if there's no new note to take over.\r\n                while (toneList.count() > toneCount) {\r\n                    const tone: Tone = toneList.popBack();\r\n                    const channel: Channel = song.channels[channelIndex];\r\n                    if (tone.instrumentIndex < channel.instruments.length && !tone.isOnLastTick) {\r\n                        const instrumentState: InstrumentState = channelState.instruments[tone.instrumentIndex];\r\n                        this.releaseTone(instrumentState, tone);\r\n                    } else {\r\n                        this.freeTone(tone);\r\n                    }\r\n                }\r\n\r\n                this.clearTempMatchedPitchTones(toneCount, instrumentState);\r\n            }\r\n        }\r\n    }\r\n\r\n    private clearTempMatchedPitchTones(toneCount: number, instrumentState: InstrumentState): void {\r\n        for (let i: number = toneCount; i < this.tempMatchedPitchTones.length; i++) {\r\n            const oldTone: Tone | null = this.tempMatchedPitchTones[i];\r\n            if (oldTone != null) {\r\n                if (oldTone.isOnLastTick) {\r\n                    this.freeTone(oldTone);\r\n                } else {\r\n                    this.releaseTone(instrumentState, oldTone);\r\n                }\r\n                this.tempMatchedPitchTones[i] = null;\r\n            }\r\n        }\r\n    }\r\n\r\n\r\n    private playTone(channelIndex: number, bufferIndex: number, runLength: number, tone: Tone): void {\r\n        const channelState: ChannelState = this.channels[channelIndex];\r\n        const instrumentState: InstrumentState = channelState.instruments[tone.instrumentIndex];\r\n\r\n        if (instrumentState.synthesizer != null) instrumentState.synthesizer!(this, bufferIndex, runLength, tone, instrumentState);\r\n        tone.envelopeComputer.clearEnvelopes();\r\n    }\r\n\r\n    // Computes mod note position at the start and end of the window and \"plays\" the mod tone, setting appropriate mod data.\r\n    private playModTone(song: Song, channelIndex: number, samplesPerTick: number, bufferIndex: number, roundedSamplesPerTick: number, tone: Tone, released: boolean, shouldFadeOutFast: boolean): void {\r\n        const channel: Channel = song.channels[channelIndex];\r\n        const instrument: Instrument = channel.instruments[tone.instrumentIndex];\r\n\r\n        if (tone.note != null) {\r\n            const ticksIntoBar: number = this.getTicksIntoBar();\r\n            const partTimeTickStart: number = (ticksIntoBar) / Config.ticksPerPart;\r\n            const partTimeTickEnd: number = (ticksIntoBar + 1) / Config.ticksPerPart;\r\n            const tickSampleCountdown: number = this.tickSampleCountdown;\r\n            const startRatio: number = 1.0 - (tickSampleCountdown) / samplesPerTick;\r\n            const endRatio: number = 1.0 - (tickSampleCountdown - roundedSamplesPerTick) / samplesPerTick;\r\n            const partTimeStart: number = partTimeTickStart + (partTimeTickEnd - partTimeTickStart) * startRatio;\r\n            const partTimeEnd: number = partTimeTickStart + (partTimeTickEnd - partTimeTickStart) * endRatio;\r\n            const tickTimeStart: number = Config.ticksPerPart * partTimeStart;\r\n            const tickTimeEnd: number = Config.ticksPerPart * partTimeEnd;\r\n            const endPinIndex: number = tone.note.getEndPinIndex(this.getCurrentPart());\r\n            const startPin: NotePin = tone.note.pins[endPinIndex - 1];\r\n            const endPin: NotePin = tone.note.pins[endPinIndex];\r\n            const startPinTick: number = (tone.note.start + startPin.time) * Config.ticksPerPart;\r\n            const endPinTick: number = (tone.note.start + endPin.time) * Config.ticksPerPart;\r\n            const ratioStart: number = (tickTimeStart - startPinTick) / (endPinTick - startPinTick);\r\n            const ratioEnd: number = (tickTimeEnd - startPinTick) / (endPinTick - startPinTick);\r\n            tone.expression = startPin.size + (endPin.size - startPin.size) * ratioStart;\r\n            tone.expressionDelta = (startPin.size + (endPin.size - startPin.size) * ratioEnd) - tone.expression;\r\n\r\n            Synth.modSynth(this, bufferIndex, roundedSamplesPerTick, tone, instrument);\r\n        }\r\n    }\r\n\r\n    private static computeChordExpression(chordSize: number): number {\r\n        return 1.0 / ((chordSize - 1) * 0.25 + 1.0);\r\n    }\r\n\r\n    private computeTone(song: Song, channelIndex: number, samplesPerTick: number, tone: Tone, released: boolean, shouldFadeOutFast: boolean): void {\r\n        const roundedSamplesPerTick: number = Math.ceil(samplesPerTick);\r\n        const channel: Channel = song.channels[channelIndex];\r\n        const channelState: ChannelState = this.channels[channelIndex];\r\n        const instrument: Instrument = channel.instruments[tone.instrumentIndex];\r\n        const instrumentState: InstrumentState = channelState.instruments[tone.instrumentIndex];\r\n        instrumentState.awake = true;\r\n        instrumentState.tonesAddedInThisTick = true;\r\n        if (!instrumentState.computed) {\r\n            instrumentState.compute(this, instrument, samplesPerTick, roundedSamplesPerTick, tone, channelIndex, tone.instrumentIndex);\r\n        }\r\n        const transition: Transition = instrument.getTransition();\r\n        const chord: Chord = instrument.getChord();\r\n        const chordExpression: number = chord.singleTone ? 1.0 : Synth.computeChordExpression(tone.chordSize);\r\n        const isNoiseChannel: boolean = song.getChannelIsNoise(channelIndex);\r\n        const intervalScale: number = isNoiseChannel ? Config.noiseInterval : 1;\r\n        const secondsPerPart: number = Config.ticksPerPart * samplesPerTick / this.samplesPerSecond;\r\n        const sampleTime: number = 1.0 / this.samplesPerSecond;\r\n        const beatsPerPart: number = 1.0 / Config.partsPerBeat;\r\n        const ticksIntoBar: number = this.getTicksIntoBar();\r\n        const partTimeStart: number = (ticksIntoBar) / Config.ticksPerPart;\r\n        const partTimeEnd: number = (ticksIntoBar + 1.0) / Config.ticksPerPart;\r\n        const currentPart: number = this.getCurrentPart();\r\n\r\n        let specialIntervalMult: number = 1.0;\r\n        tone.specialIntervalExpressionMult = 1.0;\r\n\r\n        //if (synth.isModActive(ModSetting.mstPan, channelIndex, tone.instrumentIndex)) {\r\n        //    startPan = synth.getModValue(ModSetting.mstPan, false, channel, instrumentIdx, false);\r\n        //    endPan = synth.getModValue(ModSetting.mstPan, false, channel, instrumentIdx, true);\r\n        //}\r\n\r\n        let toneIsOnLastTick: boolean = shouldFadeOutFast;\r\n        let intervalStart: number = 0.0;\r\n        let intervalEnd: number = 0.0;\r\n        let fadeExpressionStart: number = 1.0;\r\n        let fadeExpressionEnd: number = 1.0;\r\n        let chordExpressionStart: number = chordExpression;\r\n        let chordExpressionEnd: number = chordExpression;\r\n\r\n        let expressionReferencePitch: number = 16; // A low \"E\" as a MIDI pitch.\r\n        let basePitch: number = Config.keys[song.key].basePitch + (Config.pitchesPerOctave * song.octave);\r\n        let baseExpression: number = 1.0;\r\n        let pitchDamping: number = 48;\r\n        if (instrument.type == InstrumentType.spectrum) {\r\n            baseExpression = Config.spectrumBaseExpression;\r\n            if (isNoiseChannel) {\r\n                basePitch = Config.spectrumBasePitch;\r\n                baseExpression *= 2.0; // Note: spectrum is louder for drum channels than pitch channels!\r\n            }\r\n            expressionReferencePitch = Config.spectrumBasePitch;\r\n            pitchDamping = 28;\r\n        } else if (instrument.type == InstrumentType.drumset) {\r\n            basePitch = Config.spectrumBasePitch;\r\n            baseExpression = Config.drumsetBaseExpression;\r\n            expressionReferencePitch = basePitch;\r\n        } else if (instrument.type == InstrumentType.noise) {\r\n            basePitch = Config.chipNoises[instrument.chipNoise].basePitch;\r\n            baseExpression = Config.noiseBaseExpression;\r\n            expressionReferencePitch = basePitch;\r\n            pitchDamping = Config.chipNoises[instrument.chipNoise].isSoft ? 24.0 : 60.0;\r\n        } else if (instrument.type == InstrumentType.fm || instrument.type == InstrumentType.fm6op) {\r\n            baseExpression = Config.fmBaseExpression;\r\n        } else if (instrument.type == InstrumentType.chip){\r\n                baseExpression = Config.chipBaseExpression;\r\n\t\t\t\tif (Config.chipWaves[instrument.chipWave].isCustomSampled) {\r\n\t\t\t\t\tif (Config.chipWaves[instrument.chipWave].isPercussion){\r\n\t\t\t\t\t\tbasePitch = -84.37 + Math.log2(Config.chipWaves[instrument.chipWave].samples.length/Config.chipWaves[instrument.chipWave].sampleRate!) * -12 - (-60 + Config.chipWaves[instrument.chipWave].rootKey!);\r\n\t\t\t\t\t}\r\n\t\t\t\t\t\r\n\t\t\t\t\telse {\r\n\t\t\t\t\t\tbasePitch += -96.37 + Math.log2(Config.chipWaves[instrument.chipWave].samples.length/Config.chipWaves[instrument.chipWave].sampleRate!) * -12 - (-60 + Config.chipWaves[instrument.chipWave].rootKey!); \r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t\telse {\r\n\t\t\t\t\tif (Config.chipWaves[instrument.chipWave].isSampled && !Config.chipWaves[instrument.chipWave].isPercussion) {\r\n\t\t\t\t\t\tbasePitch = basePitch - 63 + Config.chipWaves[instrument.chipWave].extraSampleDetune!\r\n\t\t\t\t\t}\r\n\t\t\t\t\telse if (Config.chipWaves[instrument.chipWave].isSampled && Config.chipWaves[instrument.chipWave].isPercussion) {\r\n\t\t\t\t\tbasePitch = -51 + Config.chipWaves[instrument.chipWave].extraSampleDetune!;\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n            } else if (instrument.type == InstrumentType.customChipWave) {\r\n            baseExpression = Config.chipBaseExpression;\r\n        } else if (instrument.type == InstrumentType.harmonics) {\r\n            baseExpression = Config.harmonicsBaseExpression;\r\n        } else if (instrument.type == InstrumentType.pwm) {\r\n            baseExpression = Config.pwmBaseExpression;\r\n        } else if (instrument.type == InstrumentType.pickedString) {\r\n            baseExpression = Config.pickedStringBaseExpression;\r\n        } else if (instrument.type == InstrumentType.mod) {\r\n            baseExpression = 1.0;\r\n            expressionReferencePitch = 0;\r\n            pitchDamping = 1.0;\r\n            basePitch = 0;\r\n        } else {\r\n            throw new Error(\"Unknown instrument type in computeTone.\");\r\n        }\r\n\r\n        if ((tone.atNoteStart && !transition.isSeamless && !tone.forceContinueAtStart) || tone.freshlyAllocated) {\r\n            tone.reset();\r\n\t\t\t\t\t\t // advloop addition\r\n                const chipWaveLength = Config.rawRawChipWaves[instrument.chipWave].samples.length - 1;\r\n                const firstOffset = instrument.chipWaveStartOffset / chipWaveLength;\r\n                // const lastOffset = (chipWaveLength - 0.01) / chipWaveLength;\r\n                // @TODO: This is silly and I should actually figure out how to\r\n                // properly keep lastOffset as 1.0 and not get it wrapped back\r\n                // to 0 once it's in `Synth.loopableChipSynth`.\r\n                const lastOffset = 0.999999999999999;\r\n                for (let i = 0; i < Config.maxPitchOrOperatorCount; i++) {\r\n                    tone.phases[i] = instrument.chipWavePlayBackwards ? Math.max(0, Math.min(lastOffset, firstOffset)) : Math.max(0, firstOffset);\r\n                    tone.directions[i] = instrument.chipWavePlayBackwards ? -1 : 1;\r\n                    tone.chipWaveCompletions[i] = 0;\r\n                    tone.chipWavePrevWaves[i] = 0;\r\n                    tone.chipWaveCompletionsLastWave[i] = 0;\r\n                }\r\n                // console.log(tone.directions);\r\n                // advloop addition\r\n        }\r\n        tone.freshlyAllocated = false;\r\n\r\n        for (let i: number = 0; i < Config.maxPitchOrOperatorCount; i++) {\r\n            tone.phaseDeltas[i] = 0.0;\r\n            tone.phaseDeltaScales[i] = 0.0;\r\n            tone.operatorExpressions[i] = 0.0;\r\n            tone.operatorExpressionDeltas[i] = 0.0;\r\n        }\r\n        tone.expression = 0.0;\r\n        tone.expressionDelta = 0.0;\r\n        for (let i: number = 0; i < Config.operatorCount; i++) {\r\n            tone.operatorWaves[i] = Synth.getOperatorWave(instrument.operators[i].waveform, instrument.operators[i].pulseWidth);\r\n        }\r\n\r\n        if (released) {\r\n            const startTicksSinceReleased: number = tone.ticksSinceReleased;\r\n            const endTicksSinceReleased: number = tone.ticksSinceReleased + 1.0;\r\n            intervalStart = intervalEnd = tone.lastInterval;\r\n            const fadeOutTicks: number = Math.abs(instrument.getFadeOutTicks());\r\n            fadeExpressionStart = Synth.noteSizeToVolumeMult((1.0 - startTicksSinceReleased / fadeOutTicks) * Config.noteSizeMax);\r\n            fadeExpressionEnd = Synth.noteSizeToVolumeMult((1.0 - endTicksSinceReleased / fadeOutTicks) * Config.noteSizeMax);\r\n\r\n            if (shouldFadeOutFast) {\r\n                fadeExpressionEnd = 0.0;\r\n            }\r\n\r\n            if (tone.ticksSinceReleased + 1 >= fadeOutTicks) toneIsOnLastTick = true;\r\n        } else if (tone.note == null) {\r\n            fadeExpressionStart = fadeExpressionEnd = 1.0;\r\n            tone.lastInterval = 0;\r\n            tone.ticksSinceReleased = 0;\r\n            tone.liveInputSamplesHeld += roundedSamplesPerTick;\r\n        } else {\r\n            const note: Note = tone.note;\r\n            const nextNote: Note | null = tone.nextNote;\r\n\r\n            const noteStartPart: number = tone.noteStartPart;\r\n            const noteEndPart: number = tone.noteEndPart;\r\n\r\n\r\n            const endPinIndex: number = note.getEndPinIndex(currentPart);\r\n            const startPin: NotePin = note.pins[endPinIndex - 1];\r\n            const endPin: NotePin = note.pins[endPinIndex];\r\n            const noteStartTick: number = noteStartPart * Config.ticksPerPart;\r\n            const noteEndTick: number = noteEndPart * Config.ticksPerPart;\r\n            const pinStart: number = (note.start + startPin.time) * Config.ticksPerPart;\r\n            const pinEnd: number = (note.start + endPin.time) * Config.ticksPerPart;\r\n\r\n            tone.ticksSinceReleased = 0;\r\n\r\n            const tickTimeStart: number = currentPart * Config.ticksPerPart + this.tick;\r\n            const tickTimeEnd: number = tickTimeStart + 1.0;\r\n            const noteTicksPassedTickStart: number = tickTimeStart - noteStartTick;\r\n            const noteTicksPassedTickEnd: number = tickTimeEnd - noteStartTick;\r\n            const pinRatioStart: number = Math.min(1.0, (tickTimeStart - pinStart) / (pinEnd - pinStart));\r\n            const pinRatioEnd: number = Math.min(1.0, (tickTimeEnd - pinStart) / (pinEnd - pinStart));\r\n            fadeExpressionStart = 1.0;\r\n            fadeExpressionEnd = 1.0;\r\n            intervalStart = startPin.interval + (endPin.interval - startPin.interval) * pinRatioStart;\r\n            intervalEnd = startPin.interval + (endPin.interval - startPin.interval) * pinRatioEnd;\r\n            tone.lastInterval = intervalEnd;\r\n\r\n            if ((!transition.isSeamless && !tone.forceContinueAtEnd) || nextNote == null) {\r\n                const fadeOutTicks: number = -instrument.getFadeOutTicks();\r\n                if (fadeOutTicks > 0.0) {\r\n                    // If the tone should fade out before the end of the note, do so here.\r\n                    const noteLengthTicks: number = noteEndTick - noteStartTick;\r\n                    fadeExpressionStart *= Math.min(1.0, (noteLengthTicks - noteTicksPassedTickStart) / fadeOutTicks);\r\n                    fadeExpressionEnd *= Math.min(1.0, (noteLengthTicks - noteTicksPassedTickEnd) / fadeOutTicks);\r\n                    if (tickTimeEnd >= noteStartTick + noteLengthTicks) toneIsOnLastTick = true;\r\n                }\r\n            }\r\n\r\n        }\r\n\r\n        tone.isOnLastTick = toneIsOnLastTick;\r\n\r\n        let tmpNoteFilter: FilterSettings = instrument.noteFilter;\r\n        let startPoint: FilterControlPoint;\r\n        let endPoint: FilterControlPoint;\r\n\r\n        if (instrument.noteFilterType) {\r\n            // Simple EQ filter (old style). For analysis, using random filters from normal style since they are N/A in this context.\r\n            const noteFilterSettingsStart: FilterSettings = instrument.noteFilter;\r\n            if (instrument.noteSubFilters[1] == null)\r\n                instrument.noteSubFilters[1] = new FilterSettings();\r\n            const noteFilterSettingsEnd: FilterSettings = instrument.noteSubFilters[1];\r\n\r\n            // Change location based on slider values\r\n            let startSimpleFreq: number = instrument.noteFilterSimpleCut;\r\n            let startSimpleGain: number = instrument.noteFilterSimplePeak;\r\n            let endSimpleFreq: number = instrument.noteFilterSimpleCut;\r\n            let endSimpleGain: number = instrument.noteFilterSimplePeak;\r\n            let filterChanges: boolean = false;\r\n\r\n            if (this.isModActive(Config.modulators.dictionary[\"note filt cut\"].index, channelIndex, tone.instrumentIndex)) {\r\n                startSimpleFreq = this.getModValue(Config.modulators.dictionary[\"note filt cut\"].index, channelIndex, tone.instrumentIndex, false);\r\n                endSimpleFreq = this.getModValue(Config.modulators.dictionary[\"note filt cut\"].index, channelIndex, tone.instrumentIndex, true);\r\n                filterChanges = true;\r\n            }\r\n            if (this.isModActive(Config.modulators.dictionary[\"note filt peak\"].index, channelIndex, tone.instrumentIndex)) {\r\n                startSimpleGain = this.getModValue(Config.modulators.dictionary[\"note filt peak\"].index, channelIndex, tone.instrumentIndex, false);\r\n                endSimpleGain = this.getModValue(Config.modulators.dictionary[\"note filt peak\"].index, channelIndex, tone.instrumentIndex, true);\r\n                filterChanges = true;\r\n            }\r\n\r\n            noteFilterSettingsStart.convertLegacySettingsForSynth(startSimpleFreq, startSimpleGain, !filterChanges);\r\n            noteFilterSettingsEnd.convertLegacySettingsForSynth(endSimpleFreq, endSimpleGain, !filterChanges);\r\n\r\n            startPoint = noteFilterSettingsStart.controlPoints[0];\r\n            endPoint = noteFilterSettingsEnd.controlPoints[0];\r\n\r\n            // Temporarily override so that envelope computer uses appropriate computed note filter\r\n            instrument.noteFilter = noteFilterSettingsStart;\r\n            instrument.tmpNoteFilterStart = noteFilterSettingsStart;\r\n        }\r\n\r\n        // Compute envelopes *after* resetting the tone, otherwise the envelope computer gets reset too!\r\n        const envelopeComputer: EnvelopeComputer = tone.envelopeComputer;\r\n        envelopeComputer.computeEnvelopes(instrument, currentPart, Config.ticksPerPart * partTimeStart, samplesPerTick / this.samplesPerSecond, tone);\r\n        const envelopeStarts: number[] = tone.envelopeComputer.envelopeStarts;\r\n        const envelopeEnds: number[] = tone.envelopeComputer.envelopeEnds;\r\n        instrument.noteFilter = tmpNoteFilter;\r\n\r\n        if (tone.note != null && transition.slides) {\r\n            // Slide interval and chordExpression at the start and/or end of the note if necessary.\r\n            const prevNote: Note | null = tone.prevNote;\r\n            const nextNote: Note | null = tone.nextNote;\r\n            if (prevNote != null) {\r\n                const intervalDiff: number = prevNote.pitches[tone.prevNotePitchIndex] + prevNote.pins[prevNote.pins.length - 1].interval - tone.pitches[0];\r\n                if (envelopeComputer.prevSlideStart) intervalStart += intervalDiff * envelopeComputer.prevSlideRatioStart;\r\n                if (envelopeComputer.prevSlideEnd) intervalEnd += intervalDiff * envelopeComputer.prevSlideRatioEnd;\r\n                if (!chord.singleTone) {\r\n                    const chordSizeDiff: number = prevNote.pitches.length - tone.chordSize;\r\n                    if (envelopeComputer.prevSlideStart) chordExpressionStart = Synth.computeChordExpression(tone.chordSize + chordSizeDiff * envelopeComputer.prevSlideRatioStart);\r\n                    if (envelopeComputer.prevSlideEnd) chordExpressionEnd = Synth.computeChordExpression(tone.chordSize + chordSizeDiff * envelopeComputer.prevSlideRatioEnd);\r\n                }\r\n            }\r\n            if (nextNote != null) {\r\n                const intervalDiff: number = nextNote.pitches[tone.nextNotePitchIndex] - (tone.pitches[0] + tone.note.pins[tone.note.pins.length - 1].interval);\r\n                if (envelopeComputer.nextSlideStart) intervalStart += intervalDiff * envelopeComputer.nextSlideRatioStart;\r\n                if (envelopeComputer.nextSlideEnd) intervalEnd += intervalDiff * envelopeComputer.nextSlideRatioEnd;\r\n                if (!chord.singleTone) {\r\n                    const chordSizeDiff: number = nextNote.pitches.length - tone.chordSize;\r\n                    if (envelopeComputer.nextSlideStart) chordExpressionStart = Synth.computeChordExpression(tone.chordSize + chordSizeDiff * envelopeComputer.nextSlideRatioStart);\r\n                    if (envelopeComputer.nextSlideEnd) chordExpressionEnd = Synth.computeChordExpression(tone.chordSize + chordSizeDiff * envelopeComputer.nextSlideRatioEnd);\r\n                }\r\n            }\r\n        }\r\n\r\n        if (effectsIncludePitchShift(instrument.effects)) {\r\n            let pitchShift: number = Config.justIntonationSemitones[instrument.pitchShift] / intervalScale;\r\n            let pitchShiftScalarStart: number = 1.0;\r\n            let pitchShiftScalarEnd: number = 1.0;\r\n            if (this.isModActive(Config.modulators.dictionary[\"pitch shift\"].index, channelIndex, tone.instrumentIndex)) {\r\n                pitchShift = Config.justIntonationSemitones[Config.justIntonationSemitones.length - 1];\r\n                pitchShiftScalarStart = (this.getModValue(Config.modulators.dictionary[\"pitch shift\"].index, channelIndex, tone.instrumentIndex, false)) / (Config.pitchShiftCenter);\r\n                pitchShiftScalarEnd = (this.getModValue(Config.modulators.dictionary[\"pitch shift\"].index, channelIndex, tone.instrumentIndex, true)) / (Config.pitchShiftCenter);\r\n            }\r\n            const envelopeStart: number = envelopeStarts[EnvelopeComputeIndex.pitchShift];\r\n            const envelopeEnd: number = envelopeEnds[EnvelopeComputeIndex.pitchShift];\r\n            intervalStart += pitchShift * envelopeStart * pitchShiftScalarStart;\r\n            intervalEnd += pitchShift * envelopeEnd * pitchShiftScalarEnd;\r\n        }\r\n        if (effectsIncludeDetune(instrument.effects) || this.isModActive(Config.modulators.dictionary[\"song detune\"].index, channelIndex, tone.instrumentIndex)) {\r\n            const envelopeStart: number = envelopeStarts[EnvelopeComputeIndex.detune];\r\n            const envelopeEnd: number = envelopeEnds[EnvelopeComputeIndex.detune];\r\n            let modDetuneStart: number = instrument.detune;\r\n            let modDetuneEnd: number = instrument.detune;\r\n            if (this.isModActive(Config.modulators.dictionary[\"detune\"].index, channelIndex, tone.instrumentIndex)) {\r\n                modDetuneStart = this.getModValue(Config.modulators.dictionary[\"detune\"].index, channelIndex, tone.instrumentIndex, false) + Config.detuneCenter;\r\n                modDetuneEnd = this.getModValue(Config.modulators.dictionary[\"detune\"].index, channelIndex, tone.instrumentIndex, true) + Config.detuneCenter;\r\n            }\r\n            if (this.isModActive(Config.modulators.dictionary[\"song detune\"].index, channelIndex, tone.instrumentIndex)) {\r\n                modDetuneStart += 4 * this.getModValue(Config.modulators.dictionary[\"song detune\"].index, channelIndex, tone.instrumentIndex, false);\r\n                modDetuneEnd += 4 * this.getModValue(Config.modulators.dictionary[\"song detune\"].index, channelIndex, tone.instrumentIndex, true);\r\n            }\r\n            intervalStart += Synth.detuneToCents((modDetuneStart) * envelopeStart) * Config.pitchesPerOctave / (12.0 * 100.0);\r\n            intervalEnd += Synth.detuneToCents((modDetuneEnd) * envelopeEnd) * Config.pitchesPerOctave / (12.0 * 100.0);\r\n        }\r\n\r\n        if (effectsIncludeVibrato(instrument.effects)) {\r\n            let delayTicks: number;\r\n            let vibratoAmplitudeStart: number;\r\n            let vibratoAmplitudeEnd: number;\r\n            // Custom vibrato\r\n            if (instrument.vibrato == Config.vibratos.length) {\r\n                delayTicks = instrument.vibratoDelay * 2; // Delay was changed from parts to ticks in BB v9\r\n                // Special case: if vibrato delay is max, NEVER vibrato.\r\n                if (instrument.vibratoDelay == Config.modulators.dictionary[\"vibrato delay\"].maxRawVol)\r\n                    delayTicks = Number.POSITIVE_INFINITY;\r\n                vibratoAmplitudeStart = instrument.vibratoDepth;\r\n                vibratoAmplitudeEnd = vibratoAmplitudeStart;\r\n            } else {\r\n                delayTicks = Config.vibratos[instrument.vibrato].delayTicks;\r\n                vibratoAmplitudeStart = Config.vibratos[instrument.vibrato].amplitude;\r\n                vibratoAmplitudeEnd = vibratoAmplitudeStart;\r\n            }\r\n\r\n            if (this.isModActive(Config.modulators.dictionary[\"vibrato delay\"].index, channelIndex, tone.instrumentIndex)) {\r\n                delayTicks = this.getModValue(Config.modulators.dictionary[\"vibrato delay\"].index, channelIndex, tone.instrumentIndex, false) * 2; // Delay was changed from parts to ticks in BB v9\r\n                if (delayTicks == Config.modulators.dictionary[\"vibrato delay\"].maxRawVol * 2)\r\n                    delayTicks = Number.POSITIVE_INFINITY;\r\n\r\n            }\r\n\r\n            if (this.isModActive(Config.modulators.dictionary[\"vibrato depth\"].index, channelIndex, tone.instrumentIndex)) {\r\n                vibratoAmplitudeStart = this.getModValue(Config.modulators.dictionary[\"vibrato depth\"].index, channelIndex, tone.instrumentIndex, false) / 25;\r\n                vibratoAmplitudeEnd = this.getModValue(Config.modulators.dictionary[\"vibrato depth\"].index, channelIndex, tone.instrumentIndex, true) / 25;\r\n            }\r\n\r\n\r\n            // To maintain pitch continuity, (mostly for picked string which retriggers impulse\r\n            // otherwise) remember the vibrato at the end of this run and reuse it at the start\r\n            // of the next run if available.\r\n            let vibratoStart: number;\r\n            if (tone.prevVibrato != null) {\r\n                vibratoStart = tone.prevVibrato;\r\n            } else {\r\n                let lfoStart: number = Synth.getLFOAmplitude(instrument, secondsPerPart * instrument.LFOtime);\r\n                const vibratoDepthEnvelopeStart: number = envelopeStarts[EnvelopeComputeIndex.vibratoDepth];\r\n                vibratoStart = vibratoAmplitudeStart * lfoStart * vibratoDepthEnvelopeStart;\r\n                if (delayTicks > 0.0) {\r\n                    const ticksUntilVibratoStart: number = delayTicks - envelopeComputer.noteTicksStart;\r\n                    vibratoStart *= Math.max(0.0, Math.min(1.0, 1.0 - ticksUntilVibratoStart / 2.0));\r\n                }\r\n            }\r\n\r\n            let lfoEnd: number = Synth.getLFOAmplitude(instrument, secondsPerPart * instrument.nextLFOtime);\r\n            const vibratoDepthEnvelopeEnd: number = envelopeEnds[EnvelopeComputeIndex.vibratoDepth];\r\n            if (instrument.type != InstrumentType.mod) {\r\n                let vibratoEnd: number = vibratoAmplitudeEnd * lfoEnd * vibratoDepthEnvelopeEnd;\r\n                if (delayTicks > 0.0) {\r\n                    const ticksUntilVibratoEnd: number = delayTicks - envelopeComputer.noteTicksEnd;\r\n                    vibratoEnd *= Math.max(0.0, Math.min(1.0, 1.0 - ticksUntilVibratoEnd / 2.0));\r\n                }\r\n\r\n                tone.prevVibrato = vibratoEnd;\r\n\r\n                intervalStart += vibratoStart;\r\n                intervalEnd += vibratoEnd;\r\n            }\r\n        }\r\n\r\n        if ((!transition.isSeamless && !tone.forceContinueAtStart) || tone.prevNote == null) {\r\n            // Fade in the beginning of the note.\r\n            const fadeInSeconds: number = instrument.getFadeInSeconds();\r\n            if (fadeInSeconds > 0.0) {\r\n                fadeExpressionStart *= Math.min(1.0, envelopeComputer.noteSecondsStart / fadeInSeconds);\r\n                fadeExpressionEnd *= Math.min(1.0, envelopeComputer.noteSecondsEnd / fadeInSeconds);\r\n            }\r\n        }\r\n\r\n\r\n        if (instrument.type == InstrumentType.drumset && tone.drumsetPitch == null) {\r\n            // It's possible that the note will change while the user is editing it,\r\n            // but the tone's pitches don't get updated because the tone has already\r\n            // ended and is fading out. To avoid an array index out of bounds error, clamp the pitch.\r\n            tone.drumsetPitch = tone.pitches[0];\r\n            if (tone.note != null) tone.drumsetPitch += tone.note.pickMainInterval();\r\n            tone.drumsetPitch = Math.max(0, Math.min(Config.drumCount - 1, tone.drumsetPitch));\r\n        }\r\n\r\n        let noteFilterExpression: number = envelopeComputer.lowpassCutoffDecayVolumeCompensation;\r\n        if (!effectsIncludeNoteFilter(instrument.effects)) {\r\n            tone.noteFilterCount = 0;\r\n        } else {\r\n\r\n            const noteAllFreqsEnvelopeStart: number = envelopeStarts[EnvelopeComputeIndex.noteFilterAllFreqs];\r\n            const noteAllFreqsEnvelopeEnd: number = envelopeEnds[EnvelopeComputeIndex.noteFilterAllFreqs];\r\n\r\n            // Simple note filter\r\n            if (instrument.noteFilterType) {\r\n                const noteFreqEnvelopeStart: number = envelopeStarts[EnvelopeComputeIndex.noteFilterFreq0];\r\n                const noteFreqEnvelopeEnd: number = envelopeEnds[EnvelopeComputeIndex.noteFilterFreq0];\r\n                const notePeakEnvelopeStart: number = envelopeStarts[EnvelopeComputeIndex.noteFilterGain0];\r\n                const notePeakEnvelopeEnd: number = envelopeEnds[EnvelopeComputeIndex.noteFilterGain0];\r\n\r\n                startPoint!.toCoefficients(Synth.tempFilterStartCoefficients, this.samplesPerSecond, noteAllFreqsEnvelopeStart * noteFreqEnvelopeStart, notePeakEnvelopeStart);\r\n                endPoint!.toCoefficients(Synth.tempFilterEndCoefficients, this.samplesPerSecond, noteAllFreqsEnvelopeEnd * noteFreqEnvelopeEnd, notePeakEnvelopeEnd);\r\n\r\n                if (tone.noteFilters.length < 1) tone.noteFilters[0] = new DynamicBiquadFilter();\r\n                tone.noteFilters[0].loadCoefficientsWithGradient(Synth.tempFilterStartCoefficients, Synth.tempFilterEndCoefficients, 1.0 / roundedSamplesPerTick, startPoint!.type == FilterType.lowPass);\r\n                noteFilterExpression *= startPoint!.getVolumeCompensationMult();\r\n\r\n                tone.noteFilterCount = 1;\r\n            }\r\n            else {\r\n                const noteFilterSettings: FilterSettings = (instrument.tmpNoteFilterStart != null) ? instrument.tmpNoteFilterStart : instrument.noteFilter;\r\n\r\n                for (let i: number = 0; i < noteFilterSettings.controlPointCount; i++) {\r\n                    const noteFreqEnvelopeStart: number = envelopeStarts[EnvelopeComputeIndex.noteFilterFreq0 + i];\r\n                    const noteFreqEnvelopeEnd: number = envelopeEnds[EnvelopeComputeIndex.noteFilterFreq0 + i];\r\n                    const notePeakEnvelopeStart: number = envelopeStarts[EnvelopeComputeIndex.noteFilterGain0 + i];\r\n                    const notePeakEnvelopeEnd: number = envelopeEnds[EnvelopeComputeIndex.noteFilterGain0 + i];\r\n                    let startPoint: FilterControlPoint = noteFilterSettings.controlPoints[i];\r\n                    const endPoint: FilterControlPoint = (instrument.tmpNoteFilterEnd != null && instrument.tmpNoteFilterEnd.controlPoints[i] != null) ? instrument.tmpNoteFilterEnd.controlPoints[i] : noteFilterSettings.controlPoints[i];\r\n\r\n                    // If switching dot type, do it all at once and do not try to interpolate since no valid interpolation exists.\r\n                    if (startPoint.type != endPoint.type) {\r\n                        startPoint = endPoint;\r\n                    }\r\n\r\n                    startPoint.toCoefficients(Synth.tempFilterStartCoefficients, this.samplesPerSecond, noteAllFreqsEnvelopeStart * noteFreqEnvelopeStart, notePeakEnvelopeStart);\r\n                    endPoint.toCoefficients(Synth.tempFilterEndCoefficients, this.samplesPerSecond, noteAllFreqsEnvelopeEnd * noteFreqEnvelopeEnd, notePeakEnvelopeEnd);\r\n                    if (tone.noteFilters.length <= i) tone.noteFilters[i] = new DynamicBiquadFilter();\r\n                    tone.noteFilters[i].loadCoefficientsWithGradient(Synth.tempFilterStartCoefficients, Synth.tempFilterEndCoefficients, 1.0 / roundedSamplesPerTick, startPoint.type == FilterType.lowPass);\r\n                    noteFilterExpression *= startPoint.getVolumeCompensationMult();\r\n                }\r\n                tone.noteFilterCount = noteFilterSettings.controlPointCount;\r\n            }\r\n        }\r\n\r\n        if (instrument.type == InstrumentType.drumset) {\r\n            const drumsetFilterEnvelope: Envelope = instrument.getDrumsetEnvelope(tone.drumsetPitch!);\r\n            // If the drumset lowpass cutoff decays, compensate by increasing expression.\r\n            noteFilterExpression *= EnvelopeComputer.getLowpassCutoffDecayVolumeCompensation(drumsetFilterEnvelope)\r\n\r\n            // Drumset filters use the same envelope timing as the rest of the envelopes, but do not include support for slide transitions.\r\n            let drumsetFilterEnvelopeStart: number = EnvelopeComputer.computeEnvelope(drumsetFilterEnvelope, envelopeComputer.noteSecondsStart, beatsPerPart * partTimeStart, envelopeComputer.noteSizeStart);\r\n            let drumsetFilterEnvelopeEnd: number = EnvelopeComputer.computeEnvelope(drumsetFilterEnvelope, envelopeComputer.noteSecondsEnd, beatsPerPart * partTimeEnd, envelopeComputer.noteSizeEnd);\r\n\r\n            // Apply slide interpolation to drumset envelope.\r\n            if (envelopeComputer.prevSlideStart) {\r\n                const other: number = EnvelopeComputer.computeEnvelope(drumsetFilterEnvelope, envelopeComputer.prevNoteSecondsStart, beatsPerPart * partTimeStart, envelopeComputer.prevNoteSize);\r\n                drumsetFilterEnvelopeStart += (other - drumsetFilterEnvelopeStart) * envelopeComputer.prevSlideRatioStart;\r\n            }\r\n            if (envelopeComputer.prevSlideEnd) {\r\n                const other: number = EnvelopeComputer.computeEnvelope(drumsetFilterEnvelope, envelopeComputer.prevNoteSecondsEnd, beatsPerPart * partTimeEnd, envelopeComputer.prevNoteSize);\r\n                drumsetFilterEnvelopeEnd += (other - drumsetFilterEnvelopeEnd) * envelopeComputer.prevSlideRatioEnd;\r\n            }\r\n            if (envelopeComputer.nextSlideStart) {\r\n                const other: number = EnvelopeComputer.computeEnvelope(drumsetFilterEnvelope, 0.0, beatsPerPart * partTimeStart, envelopeComputer.nextNoteSize);\r\n                drumsetFilterEnvelopeStart += (other - drumsetFilterEnvelopeStart) * envelopeComputer.nextSlideRatioStart;\r\n            }\r\n            if (envelopeComputer.nextSlideEnd) {\r\n                const other: number = EnvelopeComputer.computeEnvelope(drumsetFilterEnvelope, 0.0, beatsPerPart * partTimeEnd, envelopeComputer.nextNoteSize);\r\n                drumsetFilterEnvelopeEnd += (other - drumsetFilterEnvelopeEnd) * envelopeComputer.nextSlideRatioEnd;\r\n            }\r\n\r\n            const point: FilterControlPoint = this.tempDrumSetControlPoint;\r\n            point.type = FilterType.lowPass;\r\n            point.gain = FilterControlPoint.getRoundedSettingValueFromLinearGain(0.5);\r\n            point.freq = FilterControlPoint.getRoundedSettingValueFromHz(8000.0);\r\n            // Drumset envelopes are warped to better imitate the legacy simplified 2nd order lowpass at ~48000Hz that I used to use.\r\n            point.toCoefficients(Synth.tempFilterStartCoefficients, this.samplesPerSecond, drumsetFilterEnvelopeStart * (1.0 + drumsetFilterEnvelopeStart), 1.0);\r\n            point.toCoefficients(Synth.tempFilterEndCoefficients, this.samplesPerSecond, drumsetFilterEnvelopeEnd * (1.0 + drumsetFilterEnvelopeEnd), 1.0);\r\n            if (tone.noteFilters.length == tone.noteFilterCount) tone.noteFilters[tone.noteFilterCount] = new DynamicBiquadFilter();\r\n            tone.noteFilters[tone.noteFilterCount].loadCoefficientsWithGradient(Synth.tempFilterStartCoefficients, Synth.tempFilterEndCoefficients, 1.0 / roundedSamplesPerTick, true);\r\n            tone.noteFilterCount++;\r\n        }\r\n\r\n        noteFilterExpression = Math.min(3.0, noteFilterExpression);\r\n\r\n        if (instrument.type == InstrumentType.fm || instrument.type == InstrumentType.fm6op) {\r\n            // phase modulation!\r\n\r\n            let sineExpressionBoost: number = 1.0;\r\n            let totalCarrierExpression: number = 0.0;\r\n\r\n            let arpeggioInterval: number = 0;\r\n            const arpeggiates: boolean = chord.arpeggiates;\r\n            if (tone.pitchCount > 1 && arpeggiates) {\r\n                const arpeggio: number = Math.floor(instrument.arpTime / Config.ticksPerArpeggio);\r\n                arpeggioInterval = tone.pitches[getArpeggioPitchIndex(tone.pitchCount, instrument.fastTwoNoteArp, arpeggio)] - tone.pitches[0];\r\n            }\r\n\r\n\r\n            const carrierCount: number = (instrument.type == InstrumentType.fm6op ? instrument.customAlgorithm.carrierCount : Config.algorithms[instrument.algorithm].carrierCount);\r\n            for (let i: number = 0; i < (instrument.type == InstrumentType.fm6op? 6 : Config.operatorCount); i++) {\r\n\r\n                const associatedCarrierIndex: number = (instrument.type == InstrumentType.fm6op ? instrument.customAlgorithm.associatedCarrier[i]-1:Config.algorithms[instrument.algorithm].associatedCarrier[i] - 1);\r\n                const pitch: number = tone.pitches[arpeggiates ? 0 : ((i < tone.pitchCount) ? i : ((associatedCarrierIndex < tone.pitchCount) ? associatedCarrierIndex : 0))];\r\n                const freqMult = Config.operatorFrequencies[instrument.operators[i].frequency].mult;\r\n                const interval = Config.operatorCarrierInterval[associatedCarrierIndex] + arpeggioInterval;\r\n                const pitchStart: number = basePitch + (pitch + intervalStart) * intervalScale + interval;\r\n                const pitchEnd: number = basePitch + (pitch + intervalEnd) * intervalScale + interval;\r\n                const baseFreqStart: number = Instrument.frequencyFromPitch(pitchStart);\r\n                const baseFreqEnd: number = Instrument.frequencyFromPitch(pitchEnd);\r\n                const hzOffset: number = Config.operatorFrequencies[instrument.operators[i].frequency].hzOffset;\r\n                const targetFreqStart: number = freqMult * baseFreqStart + hzOffset;\r\n                const targetFreqEnd: number = freqMult * baseFreqEnd + hzOffset;\r\n\r\n                \r\n                const freqEnvelopeStart: number = envelopeStarts[EnvelopeComputeIndex.operatorFrequency0 + i];\r\n                const freqEnvelopeEnd: number = envelopeEnds[EnvelopeComputeIndex.operatorFrequency0 + i];\r\n                let freqStart: number;\r\n                let freqEnd: number;\r\n                if (freqEnvelopeStart != 1.0 || freqEnvelopeEnd != 1.0) {\r\n                    freqStart = Math.pow(2.0, Math.log2(targetFreqStart / baseFreqStart) * freqEnvelopeStart) * baseFreqStart;\r\n                    freqEnd = Math.pow(2.0, Math.log2(targetFreqEnd / baseFreqEnd) * freqEnvelopeEnd) * baseFreqEnd;\r\n                } else {\r\n                    freqStart = targetFreqStart;\r\n                    freqEnd = targetFreqEnd;\r\n                }\r\n                tone.phaseDeltas[i] = freqStart * sampleTime;\r\n                tone.phaseDeltaScales[i] = Math.pow(freqEnd / freqStart, 1.0 / roundedSamplesPerTick);\r\n\r\n                let amplitudeStart: number = instrument.operators[i].amplitude;\r\n                let amplitudeEnd: number = instrument.operators[i].amplitude;\r\n                if (i < 4){\r\n                    if (this.isModActive(Config.modulators.dictionary[\"fm slider 1\"].index + i, channelIndex, tone.instrumentIndex)) {\r\n                        amplitudeStart *= this.getModValue(Config.modulators.dictionary[\"fm slider 1\"].index + i, channelIndex, tone.instrumentIndex, false) / 15.0;\r\n                        amplitudeEnd *= this.getModValue(Config.modulators.dictionary[\"fm slider 1\"].index + i, channelIndex, tone.instrumentIndex, true) / 15.0;\r\n                    }\r\n                } else {\r\n                    if (this.isModActive(Config.modulators.dictionary[\"fm slider 5\"].index + i-4, channelIndex, tone.instrumentIndex)) {\r\n                        amplitudeStart *= this.getModValue(Config.modulators.dictionary[\"fm slider 5\"].index + i-4, channelIndex, tone.instrumentIndex, false) / 15.0;\r\n                        amplitudeEnd *= this.getModValue(Config.modulators.dictionary[\"fm slider 5\"].index + i-4, channelIndex, tone.instrumentIndex, true) / 15.0;\r\n                    }\r\n                }\r\n\r\n                const amplitudeCurveStart: number = Synth.operatorAmplitudeCurve(amplitudeStart);\r\n                const amplitudeCurveEnd: number = Synth.operatorAmplitudeCurve(amplitudeEnd);\r\n                const amplitudeMultStart: number = amplitudeCurveStart * Config.operatorFrequencies[instrument.operators[i].frequency].amplitudeSign;\r\n                const amplitudeMultEnd: number = amplitudeCurveEnd * Config.operatorFrequencies[instrument.operators[i].frequency].amplitudeSign;\r\n\r\n                let expressionStart: number = amplitudeMultStart;\r\n                let expressionEnd: number = amplitudeMultEnd;\r\n\r\n\r\n                if (i < carrierCount) {\r\n                    // carrier\r\n                    let pitchExpressionStart: number;\r\n                    if (tone.prevPitchExpressions[i] != null) {\r\n                        pitchExpressionStart = tone.prevPitchExpressions[i]!;\r\n                    } else {\r\n                        pitchExpressionStart = Math.pow(2.0, -(pitchStart - expressionReferencePitch) / pitchDamping);\r\n                    }\r\n                    const pitchExpressionEnd: number = Math.pow(2.0, -(pitchEnd - expressionReferencePitch) / pitchDamping);\r\n                    tone.prevPitchExpressions[i] = pitchExpressionEnd;\r\n                    expressionStart *= pitchExpressionStart;\r\n                    expressionEnd *= pitchExpressionEnd;\r\n\r\n                    totalCarrierExpression += amplitudeCurveEnd;\r\n                } else {\r\n                    // modulator\r\n                    expressionStart *= Config.sineWaveLength * 1.5;\r\n                    expressionEnd *= Config.sineWaveLength * 1.5;\r\n\r\n                    sineExpressionBoost *= 1.0 - Math.min(1.0, instrument.operators[i].amplitude / 15);\r\n                }\r\n\r\n                expressionStart *= envelopeStarts[EnvelopeComputeIndex.operatorAmplitude0 + i];\r\n                expressionEnd *= envelopeEnds[EnvelopeComputeIndex.operatorAmplitude0 + i];\r\n\r\n                // Check for mod-related volume delta\r\n                // @jummbus - This amplification is also applied to modulator FM operators which distorts the sound.\r\n                // The fix is to apply this only to carriers, but as this is a legacy bug and it can cause some interesting sounds, it's left in.\r\n                // You can use the mix volume modulator instead to avoid this effect.\r\n\r\n                if (this.isModActive(Config.modulators.dictionary[\"note volume\"].index, channelIndex, tone.instrumentIndex)) {\r\n                    // Linear falloff below 0, normal volume formula above 0. Seems to work best for scaling since the normal volume mult formula has a big gap from -25 to -24.\r\n                    const startVal: number = this.getModValue(Config.modulators.dictionary[\"note volume\"].index, channelIndex, tone.instrumentIndex, false);\r\n                    const endVal: number = this.getModValue(Config.modulators.dictionary[\"note volume\"].index, channelIndex, tone.instrumentIndex, true);\r\n                    expressionStart *= ((startVal <= 0) ? ((startVal + Config.volumeRange / 2) / (Config.volumeRange / 2)) : Synth.instrumentVolumeToVolumeMult(startVal));\r\n                    expressionEnd *= ((endVal <= 0) ? ((endVal + Config.volumeRange / 2) / (Config.volumeRange / 2)) : Synth.instrumentVolumeToVolumeMult(endVal));\r\n                }\r\n\r\n                tone.operatorExpressions[i] = expressionStart;\r\n                tone.operatorExpressionDeltas[i] = (expressionEnd - expressionStart) / roundedSamplesPerTick;\r\n\r\n            }\r\n\r\n            sineExpressionBoost *= (Math.pow(2.0, (2.0 - 1.4 * instrument.feedbackAmplitude / 15.0)) - 1.0) / 3.0;\r\n            sineExpressionBoost *= 1.0 - Math.min(1.0, Math.max(0.0, totalCarrierExpression - 1) / 2.0);\r\n            sineExpressionBoost = 1.0 + sineExpressionBoost * 3.0;\r\n            const expressionStart: number = baseExpression * sineExpressionBoost * noteFilterExpression * fadeExpressionStart * chordExpressionStart * envelopeStarts[EnvelopeComputeIndex.noteVolume];\r\n            const expressionEnd: number = baseExpression * sineExpressionBoost * noteFilterExpression * fadeExpressionEnd * chordExpressionEnd * envelopeEnds[EnvelopeComputeIndex.noteVolume];\r\n            tone.expression = expressionStart;\r\n            tone.expressionDelta = (expressionEnd - expressionStart) / roundedSamplesPerTick;\r\n\r\n\r\n            let useFeedbackAmplitudeStart: number = instrument.feedbackAmplitude;\r\n            let useFeedbackAmplitudeEnd: number = instrument.feedbackAmplitude;\r\n            if (this.isModActive(Config.modulators.dictionary[\"fm feedback\"].index, channelIndex, tone.instrumentIndex)) {\r\n                useFeedbackAmplitudeStart *= this.getModValue(Config.modulators.dictionary[\"fm feedback\"].index, channelIndex, tone.instrumentIndex, false) / 15.0;\r\n                useFeedbackAmplitudeEnd *= this.getModValue(Config.modulators.dictionary[\"fm feedback\"].index, channelIndex, tone.instrumentIndex, true) / 15.0;\r\n            }\r\n\r\n            let feedbackAmplitudeStart: number = Config.sineWaveLength * 0.3 * useFeedbackAmplitudeStart / 15.0;\r\n            const feedbackAmplitudeEnd: number = Config.sineWaveLength * 0.3 * useFeedbackAmplitudeEnd / 15.0;\r\n\r\n            let feedbackStart: number = feedbackAmplitudeStart * envelopeStarts[EnvelopeComputeIndex.feedbackAmplitude];\r\n            let feedbackEnd: number = feedbackAmplitudeEnd * envelopeEnds[EnvelopeComputeIndex.feedbackAmplitude];\r\n            tone.feedbackMult = feedbackStart;\r\n            tone.feedbackDelta = (feedbackEnd - feedbackStart) / roundedSamplesPerTick;\r\n\r\n\r\n        } else {\r\n            const basePhaseDeltaScale: number = Math.pow(2.0, ((intervalEnd - intervalStart) * intervalScale / 12.0) / roundedSamplesPerTick);\r\n\r\n            let pitch: number = tone.pitches[0];\r\n            if (tone.pitchCount > 1 && (chord.arpeggiates || chord.customInterval)) {\r\n                const arpeggio: number = Math.floor(instrument.arpTime / Config.ticksPerArpeggio);\r\n                if (chord.customInterval) {\r\n                    const intervalOffset: number = tone.pitches[1 + getArpeggioPitchIndex(tone.pitchCount - 1, instrument.fastTwoNoteArp, arpeggio)] - tone.pitches[0];\r\n                    specialIntervalMult = Math.pow(2.0, intervalOffset / 12.0);\r\n                    tone.specialIntervalExpressionMult = Math.pow(2.0, -intervalOffset / pitchDamping);\r\n                } else {\r\n                    pitch = tone.pitches[getArpeggioPitchIndex(tone.pitchCount, instrument.fastTwoNoteArp, arpeggio)];\r\n                }\r\n            }\r\n\r\n            const startPitch: number = basePitch + (pitch + intervalStart) * intervalScale;\r\n            const endPitch: number = basePitch + (pitch + intervalEnd) * intervalScale;\r\n            let pitchExpressionStart: number;\r\n            // TODO: use the second element of prevPitchExpressions for the unison voice, compute a separate expression delta for it.\r\n            if (tone.prevPitchExpressions[0] != null) {\r\n                pitchExpressionStart = tone.prevPitchExpressions[0]!;\r\n            } else {\r\n                pitchExpressionStart = Math.pow(2.0, -(startPitch - expressionReferencePitch) / pitchDamping);\r\n            }\r\n            const pitchExpressionEnd: number = Math.pow(2.0, -(endPitch - expressionReferencePitch) / pitchDamping);\r\n            tone.prevPitchExpressions[0] = pitchExpressionEnd;\r\n            let settingsExpressionMult: number = baseExpression * noteFilterExpression;\r\n\r\n            if (instrument.type == InstrumentType.noise) {\r\n                settingsExpressionMult *= Config.chipNoises[instrument.chipNoise].expression;\r\n            }\r\n            if (instrument.type == InstrumentType.chip) {\r\n                settingsExpressionMult *= Config.chipWaves[instrument.chipWave].expression;\r\n            }\r\n            if (instrument.type == InstrumentType.pwm) {\r\n                const basePulseWidth: number = getPulseWidthRatio(instrument.pulseWidth);\r\n\r\n                // Check for PWM mods to this instrument\r\n                let pulseWidthModStart: number = basePulseWidth;\r\n                let pulseWidthModEnd: number = basePulseWidth;\r\n                if (this.isModActive(Config.modulators.dictionary[\"pulse width\"].index, channelIndex, tone.instrumentIndex)) {\r\n                    pulseWidthModStart = (this.getModValue(Config.modulators.dictionary[\"pulse width\"].index, channelIndex, tone.instrumentIndex, false)) / (Config.pulseWidthRange * 2);\r\n                    pulseWidthModEnd = (this.getModValue(Config.modulators.dictionary[\"pulse width\"].index, channelIndex, tone.instrumentIndex, true)) / (Config.pulseWidthRange * 2);\r\n                }\r\n\r\n                const pulseWidthStart: number = pulseWidthModStart * envelopeStarts[EnvelopeComputeIndex.pulseWidth];\r\n                const pulseWidthEnd: number = pulseWidthModEnd * envelopeEnds[EnvelopeComputeIndex.pulseWidth];\r\n                tone.pulseWidth = pulseWidthStart;\r\n                tone.pulseWidthDelta = (pulseWidthEnd - pulseWidthStart) / roundedSamplesPerTick;\r\n            }\r\n            if (instrument.type == InstrumentType.pickedString) {\r\n                // Check for sustain mods\r\n                let useSustainStart: number = instrument.stringSustain;\r\n                let useSustainEnd: number = instrument.stringSustain;\r\n                if (this.isModActive(Config.modulators.dictionary[\"sustain\"].index, channelIndex, tone.instrumentIndex)) {\r\n                    useSustainStart = this.getModValue(Config.modulators.dictionary[\"sustain\"].index, channelIndex, tone.instrumentIndex, false);\r\n                    useSustainEnd = this.getModValue(Config.modulators.dictionary[\"sustain\"].index, channelIndex, tone.instrumentIndex, true);\r\n                }\r\n\r\n                tone.stringSustainStart = useSustainStart;\r\n                tone.stringSustainEnd = useSustainEnd;\r\n\r\n                // Increase expression to compensate for string decay.\r\n                settingsExpressionMult *= Math.pow(2.0, 0.7 * (1.0 - useSustainStart / (Config.stringSustainRange - 1)));\r\n\r\n            }\r\n\r\n            const startFreq: number = Instrument.frequencyFromPitch(startPitch);\r\n            if (instrument.type == InstrumentType.chip || instrument.type == InstrumentType.customChipWave || instrument.type == InstrumentType.harmonics || instrument.type == InstrumentType.pickedString) {\r\n                // These instruments have two waves at different frequencies for the unison feature.\r\n                const unison: Unison = Config.unisons[instrument.unison];\r\n                const voiceCountExpression: number = (instrument.type == InstrumentType.pickedString) ? 1 : unison.voices / 2.0;\r\n                settingsExpressionMult *= unison.expression * voiceCountExpression;\r\n                const unisonEnvelopeStart = envelopeStarts[EnvelopeComputeIndex.unison];\r\n                const unisonEnvelopeEnd = envelopeEnds[EnvelopeComputeIndex.unison];\r\n                const unisonAStart: number = Math.pow(2.0, (unison.offset + unison.spread) * unisonEnvelopeStart / 12.0);\r\n                const unisonAEnd: number = Math.pow(2.0, (unison.offset + unison.spread) * unisonEnvelopeEnd / 12.0);\r\n                const unisonBStart: number = Math.pow(2.0, (unison.offset - unison.spread) * unisonEnvelopeStart / 12.0) * specialIntervalMult;\r\n                const unisonBEnd: number = Math.pow(2.0, (unison.offset - unison.spread) * unisonEnvelopeEnd / 12.0) * specialIntervalMult;\r\n                tone.phaseDeltas[0] = startFreq * sampleTime * unisonAStart;\r\n                tone.phaseDeltas[1] = startFreq * sampleTime * unisonBStart;\r\n                tone.phaseDeltaScales[0] = basePhaseDeltaScale * Math.pow(unisonAEnd / unisonAStart, 1.0 / roundedSamplesPerTick);\r\n                tone.phaseDeltaScales[1] = basePhaseDeltaScale * Math.pow(unisonBEnd / unisonBStart, 1.0 / roundedSamplesPerTick);\r\n            } else {\r\n                tone.phaseDeltas[0] = startFreq * sampleTime;\r\n                tone.phaseDeltaScales[0] = basePhaseDeltaScale;\r\n            }\r\n\r\n            let expressionStart: number = settingsExpressionMult * fadeExpressionStart * chordExpressionStart * pitchExpressionStart * envelopeStarts[EnvelopeComputeIndex.noteVolume];\r\n            let expressionEnd: number = settingsExpressionMult * fadeExpressionEnd * chordExpressionEnd * pitchExpressionEnd * envelopeEnds[EnvelopeComputeIndex.noteVolume];\r\n\r\n            // Check for mod-related volume delta\r\n            if (this.isModActive(Config.modulators.dictionary[\"note volume\"].index, channelIndex, tone.instrumentIndex)) {\r\n                // Linear falloff below 0, normal volume formula above 0. Seems to work best for scaling since the normal volume mult formula has a big gap from -25 to -24.\r\n                const startVal: number = this.getModValue(Config.modulators.dictionary[\"note volume\"].index, channelIndex, tone.instrumentIndex, false);\r\n                const endVal: number = this.getModValue(Config.modulators.dictionary[\"note volume\"].index, channelIndex, tone.instrumentIndex, true)\r\n                expressionStart *= ((startVal <= 0) ? ((startVal + Config.volumeRange / 2) / (Config.volumeRange / 2)) : Synth.instrumentVolumeToVolumeMult(startVal));\r\n                expressionEnd *= ((endVal <= 0) ? ((endVal + Config.volumeRange / 2) / (Config.volumeRange / 2)) : Synth.instrumentVolumeToVolumeMult(endVal));\r\n            }\r\n\r\n            tone.expression = expressionStart;\r\n            tone.expressionDelta = (expressionEnd - expressionStart) / roundedSamplesPerTick;\r\n\r\n\r\n            if (instrument.type == InstrumentType.pickedString) {\r\n                let stringDecayStart: number;\r\n                if (tone.prevStringDecay != null) {\r\n                    stringDecayStart = tone.prevStringDecay;\r\n                } else {\r\n                    const sustainEnvelopeStart: number = tone.envelopeComputer.envelopeStarts[EnvelopeComputeIndex.stringSustain];\r\n                    stringDecayStart = 1.0 - Math.min(1.0, sustainEnvelopeStart * tone.stringSustainStart / (Config.stringSustainRange - 1));\r\n                }\r\n                const sustainEnvelopeEnd: number = tone.envelopeComputer.envelopeEnds[EnvelopeComputeIndex.stringSustain];\r\n                let stringDecayEnd: number = 1.0 - Math.min(1.0, sustainEnvelopeEnd * tone.stringSustainEnd / (Config.stringSustainRange - 1));\r\n                tone.prevStringDecay = stringDecayEnd;\r\n\r\n                const unison: Unison = Config.unisons[instrument.unison];\r\n                for (let i: number = tone.pickedStrings.length; i < unison.voices; i++) {\r\n                    tone.pickedStrings[i] = new PickedString();\r\n                }\r\n\r\n                if (tone.atNoteStart && !transition.continues && !tone.forceContinueAtStart) {\r\n                    for (const pickedString of tone.pickedStrings) {\r\n                        // Force the picked string to retrigger the attack impulse at the start of the note.\r\n                        pickedString.delayIndex = -1;\r\n                    }\r\n                }\r\n\r\n                for (let i: number = 0; i < unison.voices; i++) {\r\n                    tone.pickedStrings[i].update(this, instrumentState, tone, i, roundedSamplesPerTick, stringDecayStart, stringDecayEnd);\r\n                }\r\n            }\r\n        }\r\n    }\r\n\r\n    public static getLFOAmplitude(instrument: Instrument, secondsIntoBar: number): number {\r\n        let effect: number = 0.0;\r\n        for (const vibratoPeriodSeconds of Config.vibratoTypes[instrument.vibratoType].periodsSeconds) {\r\n            effect += Math.sin(Math.PI * 2.0 * secondsIntoBar / vibratoPeriodSeconds);\r\n        }\r\n        return effect;\r\n    }\r\n\r\n\r\n    public static getInstrumentSynthFunction(instrument: Instrument): Function {\r\n        if (instrument.type == InstrumentType.fm) {\r\n            const fingerprint: string = instrument.algorithm + \"_\" + instrument.feedbackType;\r\n            if (Synth.fmSynthFunctionCache[fingerprint] == undefined) {\r\n                const synthSource: string[] = [];\r\n\r\n                for (const line of Synth.fmSourceTemplate) {\r\n                    if (line.indexOf(\"// CARRIER OUTPUTS\") != -1) {\r\n                        const outputs: string[] = [];\r\n                        for (let j: number = 0; j < Config.algorithms[instrument.algorithm].carrierCount; j++) {\r\n                            outputs.push(\"operator\" + j + \"Scaled\");\r\n                        }\r\n                        synthSource.push(line.replace(\"/*operator#Scaled*/\", outputs.join(\" + \")));\r\n                    } else if (line.indexOf(\"// INSERT OPERATOR COMPUTATION HERE\") != -1) {\r\n                        for (let j: number = Config.operatorCount - 1; j >= 0; j--) {\r\n                            for (const operatorLine of Synth.operatorSourceTemplate) {\r\n                                if (operatorLine.indexOf(\"/* + operator@Scaled*/\") != -1) {\r\n                                    let modulators = \"\";\r\n                                    for (const modulatorNumber of Config.algorithms[instrument.algorithm].modulatedBy[j]) {\r\n                                        modulators += \" + operator\" + (modulatorNumber - 1) + \"Scaled\";\r\n                                    }\r\n\r\n                                    const feedbackIndices: ReadonlyArray<number> = Config.feedbacks[instrument.feedbackType].indices[j];\r\n                                    if (feedbackIndices.length > 0) {\r\n                                        modulators += \" + feedbackMult * (\";\r\n                                        const feedbacks: string[] = [];\r\n                                        for (const modulatorNumber of feedbackIndices) {\r\n                                            feedbacks.push(\"operator\" + (modulatorNumber - 1) + \"Output\");\r\n                                        }\r\n                                        modulators += feedbacks.join(\" + \") + \")\";\r\n                                    }\r\n                                    synthSource.push(operatorLine.replace(/\\#/g, j + \"\").replace(\"/* + operator@Scaled*/\", modulators));\r\n                                } else {\r\n                                    synthSource.push(operatorLine.replace(/\\#/g, j + \"\"));\r\n                                }\r\n                            }\r\n                        }\r\n                    } else if (line.indexOf(\"#\") != -1) {\r\n                        for (let j: number = 0; j < Config.operatorCount; j++) {\r\n                            synthSource.push(line.replace(/\\#/g, j + \"\"));\r\n                        }\r\n                    } else {\r\n                        synthSource.push(line);\r\n                    }\r\n                }\r\n\r\n                //console.log(synthSource.join(\"\\n\"));\r\n\r\n                Synth.fmSynthFunctionCache[fingerprint] = new Function(\"synth\", \"bufferIndex\", \"roundedSamplesPerTick\", \"tone\", \"instrumentState\", synthSource.join(\"\\n\"));\r\n            }\r\n            return Synth.fmSynthFunctionCache[fingerprint];\r\n        } else if (instrument.type == InstrumentType.chip) {\r\n\t\t                 // advloop addition\r\n                if (instrument.isUsingAdvancedLoopControls) {\r\n                    return Synth.loopableChipSynth;\r\n                }\r\n                // advloop addition\r\n            return Synth.chipSynth;\r\n        } else if (instrument.type == InstrumentType.customChipWave) {\r\n            return Synth.chipSynth;\r\n        } else if (instrument.type == InstrumentType.harmonics) {\r\n            return Synth.harmonicsSynth;\r\n        } else if (instrument.type == InstrumentType.pwm) {\r\n            return Synth.pulseWidthSynth;\r\n        } else if (instrument.type == InstrumentType.pickedString) {\r\n            return Synth.pickedStringSynth;\r\n        } else if (instrument.type == InstrumentType.noise) {\r\n            return Synth.noiseSynth;\r\n        } else if (instrument.type == InstrumentType.spectrum) {\r\n            return Synth.spectrumSynth;\r\n        } else if (instrument.type == InstrumentType.drumset) {\r\n            return Synth.drumsetSynth;\r\n        } else if (instrument.type == InstrumentType.mod) {\r\n            return Synth.modSynth;\r\n        } else if (instrument.type == InstrumentType.fm6op) {\r\n            const fingerprint: string = instrument.customAlgorithm.name + \"_\" + instrument.customFeedbackType.name;\r\n            if (Synth.fm6SynthFunctionCache[fingerprint] == undefined) {\r\n                const synthSource: string[] = [];\r\n\r\n                for (const line of Synth.fmSourceTemplate) {\r\n                    if (line.indexOf(\"// CARRIER OUTPUTS\") != -1) {\r\n                        const outputs: string[] = [];\r\n                        for (let j: number = 0; j < instrument.customAlgorithm.carrierCount; j++) {\r\n                            outputs.push(\"operator\" + j + \"Scaled\");\r\n                        }\r\n                        synthSource.push(line.replace(\"/*operator#Scaled*/\", outputs.join(\" + \")));\r\n                    } else if (line.indexOf(\"// INSERT OPERATOR COMPUTATION HERE\") != -1) {\r\n                        for (let j: number = Config.operatorCount+2 - 1; j >= 0; j--) {\r\n                            for (const operatorLine of Synth.operatorSourceTemplate) {\r\n                                if (operatorLine.indexOf(\"/* + operator@Scaled*/\") != -1) {\r\n                                    let modulators = \"\";\r\n                                    for (const modulatorNumber of instrument.customAlgorithm.modulatedBy[j]) {\r\n                                        modulators += \" + operator\" + (modulatorNumber - 1) + \"Scaled\";\r\n                                    }\r\n\r\n                                    const feedbackIndices: ReadonlyArray<number> = instrument.customFeedbackType.indices[j];\r\n                                    if (feedbackIndices.length > 0) {\r\n                                        modulators += \" + feedbackMult * (\";\r\n                                        const feedbacks: string[] = [];\r\n                                        for (const modulatorNumber of feedbackIndices) {\r\n                                            feedbacks.push(\"operator\" + (modulatorNumber - 1) + \"Output\");\r\n                                        }\r\n                                        modulators += feedbacks.join(\" + \") + \")\";\r\n                                    }\r\n                                    synthSource.push(operatorLine.replace(/\\#/g, j + \"\").replace(\"/* + operator@Scaled*/\", modulators));\r\n                                } else {\r\n                                    synthSource.push(operatorLine.replace(/\\#/g, j + \"\"));\r\n                                }\r\n                            }\r\n                        }\r\n                    } else if (line.indexOf(\"#\") != -1) {\r\n                        for (let j = 0; j < Config.operatorCount+2; j++) {\r\n                            synthSource.push(line.replace(/\\#/g, j + \"\"));\r\n                        }\r\n                    } else {\r\n                        synthSource.push(line);\r\n                    }\r\n                }\r\n\r\n                //console.log(synthSource.join(\"\\n\"));\r\n\r\n                Synth.fm6SynthFunctionCache[fingerprint] = new Function(\"synth\", \"bufferIndex\", \"roundedSamplesPerTick\", \"tone\", \"instrumentState\", synthSource.join(\"\\n\"));\r\n            }\r\n            return Synth.fm6SynthFunctionCache[fingerprint];\r\n        }else{\r\n            throw new Error(\"Unrecognized instrument type: \" + instrument.type);\r\n        }\r\n    }\r\n// advloop addition\r\n        static wrap(x: number, b: number): number {\r\n            return (x % b + b) % b;\r\n        }\r\n        static loopableChipSynth(synth: Synth, bufferIndex: number, roundedSamplesPerTick: number, tone: Tone, instrumentState: InstrumentState): void {\r\n            // @TODO:\r\n            // - Add another loop mode to be used when the tone is released.\r\n            //   \"Rel. Mode\"?\r\n            //   Options:\r\n            //   - Use Loop Mode\r\n            //   - Loop\r\n            //   - Ping-Pong\r\n            //   - Play Once\r\n            //   - Loop Sample\r\n            //     This uses 0 and the sample length as loop points.\r\n            //   - Ping-Pong Sample\r\n            //     This uses 0 and the sample length as loop points.\r\n            // - Needs a fancy waveform view to pick sample points.\r\n            // - Make the relationship between \"Offset\" and \"Backwards\" less\r\n            //   awkward.\r\n            // - Longer declicking? This is more difficult than I thought.\r\n            //   When determining this automatically is difficult (or the input\r\n            //   samples are expected to vary too much), this is left up to the\r\n            //   user.\r\n            const aliases: boolean = (effectsIncludeDistortion(instrumentState.effects) && instrumentState.aliases);\r\n            // const aliases = false;\r\n            const data: Float32Array = synth.tempMonoInstrumentSampleBuffer!;\r\n            const wave: Float32Array = instrumentState.wave!;\r\n            const volumeScale: number = instrumentState.volumeScale;\r\n            const waveLength: number = (aliases && instrumentState.type == 8) ? wave.length : wave.length - 1;\r\n            let chipWaveLoopEnd: number = Math.max(0, Math.min(waveLength, instrumentState.chipWaveLoopEnd));\r\n            let chipWaveLoopStart: number = Math.max(0, Math.min(chipWaveLoopEnd - 1, instrumentState.chipWaveLoopStart));\r\n\t\t\t// @TODO: This is where to set things up for the release loop mode.\r\n           // const ticksSinceReleased = tone.ticksSinceReleased;\r\n            // if (ticksSinceReleased > 0) {\r\n            //     chipWaveLoopStart = 0;\r\n            //     chipWaveLoopEnd = waveLength - 1;\r\n            // }\r\n            let chipWaveLoopLength: number = chipWaveLoopEnd - chipWaveLoopStart;\r\n\t\t\tif (chipWaveLoopLength < 2) {\r\n                chipWaveLoopStart = 0;\r\n                chipWaveLoopEnd = waveLength;\r\n                chipWaveLoopLength = waveLength;\r\n            }\r\n            const chipWaveLoopMode: number = instrumentState.chipWaveLoopMode;\r\n            const chipWavePlayBackwards: boolean = instrumentState.chipWavePlayBackwards;\r\n            const unisonSign: number = tone.specialIntervalExpressionMult * instrumentState.unison!.sign;\r\n            if (instrumentState.unison!.voices == 1 && !instrumentState.chord!.customInterval)\r\n                tone.phases[1] = tone.phases[0];\r\n            let phaseDeltaA: number = tone.phaseDeltas[0] * waveLength;\r\n            let phaseDeltaB: number = tone.phaseDeltas[1] * waveLength;\r\n            let directionA: number = tone.directions[0];\r\n            let directionB: number = tone.directions[1];\r\n            let chipWaveCompletionA: number = tone.chipWaveCompletions[0];\r\n            let chipWaveCompletionB: number = tone.chipWaveCompletions[1];\r\n            if (chipWaveLoopMode === 3 || chipWaveLoopMode === 2 || chipWaveLoopMode === 0) {\r\n                // If playing once or looping, we force the correct direction,\r\n                // since it shouldn't really change. This is mostly so that if\r\n                // the mode is changed midway through playback, it won't get\r\n                // stuck on the wrong direction.\r\n                if (!chipWavePlayBackwards) {\r\n                    directionA = 1;\r\n                    directionB = 1;\r\n                } else {\r\n                    directionA = -1;\r\n                    directionB = -1;\r\n                }\r\n            }\r\n            if (chipWaveLoopMode === 0 || chipWaveLoopMode === 1) {\r\n                // If looping or ping-ponging, we clear the completion status,\r\n                // as it's not relevant anymore. This is mostly so that if the\r\n                // mode is changed midway through playback, it won't get stuck\r\n                // on zero volume.\r\n                chipWaveCompletionA = 0;\r\n                chipWaveCompletionB = 0;\r\n            }\r\n            let lastWaveA: number = tone.chipWaveCompletionsLastWave[0];\r\n            let lastWaveB: number = tone.chipWaveCompletionsLastWave[1];\r\n            const chipWaveCompletionFadeLength: number = 1000;\r\n            const phaseDeltaScaleA: number = +tone.phaseDeltaScales[0];\r\n            const phaseDeltaScaleB: number = +tone.phaseDeltaScales[1];\r\n            let expression: number = +tone.expression;\r\n            const expressionDelta: number = +tone.expressionDelta;\r\n            let phaseA: number = Synth.wrap(tone.phases[0], 1) * waveLength;\r\n            let phaseB: number = Synth.wrap(tone.phases[1], 1) * waveLength;\r\n            let prevWaveIntegralA: number = 0;\r\n            let prevWaveIntegralB: number = 0;\r\n            if (!aliases) {\r\n                const phaseAInt = Math.floor(phaseA);\r\n                const phaseBInt = Math.floor(phaseB);\r\n                const indexA = Synth.wrap(phaseAInt, waveLength);\r\n               const indexB = Synth.wrap(phaseBInt, waveLength);\r\n                const phaseRatioA = phaseA - phaseAInt;\r\n                const phaseRatioB = phaseB - phaseBInt;\r\n                prevWaveIntegralA = +wave[indexA];\r\n                prevWaveIntegralB = +wave[indexB];\r\n                prevWaveIntegralA += (wave[Synth.wrap(indexA + 1, waveLength)] - prevWaveIntegralA) * phaseRatioA;\r\n                prevWaveIntegralB += (wave[Synth.wrap(indexB + 1, waveLength)] - prevWaveIntegralB) * phaseRatioB;\r\n           }\r\n            const filters = tone.noteFilters;\r\n            const filterCount: number = tone.noteFilterCount | 0;\r\n            let initialFilterInput1: number = +tone.initialNoteFilterInput1;\r\n            let initialFilterInput2: number = +tone.initialNoteFilterInput2;\r\n            const applyFilters: Function = Synth.applyFilters;\r\n            const stopIndex: number = bufferIndex + roundedSamplesPerTick;\r\n            let prevWaveA: number = tone.chipWavePrevWaves[0];\r\n            let prevWaveB: number = tone.chipWavePrevWaves[1];\r\n            for (let sampleIndex: number = bufferIndex; sampleIndex < stopIndex; sampleIndex++) {\r\n                if (chipWaveCompletionA > 0 && chipWaveCompletionA < chipWaveCompletionFadeLength) {\r\n                    chipWaveCompletionA++;\r\n                }\r\n                if (chipWaveCompletionB > 0 && chipWaveCompletionB < chipWaveCompletionFadeLength) {\r\n                    chipWaveCompletionB++;\r\n                }\r\n               let wrapped: number = 0;\r\n                phaseA += phaseDeltaA * directionA;\r\n                phaseB += phaseDeltaB * directionB;\r\n                if (chipWaveLoopMode === 2) {\r\n                    // once\r\n                    if (directionA === 1) {\r\n                        if (phaseA > waveLength) {\r\n                            if (chipWaveCompletionA <= 0) {\r\n                                lastWaveA = prevWaveA;\r\n                                chipWaveCompletionA++;\r\n                            }\r\n                            wrapped = 1;\r\n                        }\r\n                    } else if (directionA === -1) {\r\n                        if (phaseA < 0) {\r\n                            if (chipWaveCompletionA <= 0) {\r\n                                lastWaveA = prevWaveA;\r\n                                chipWaveCompletionA++;\r\n                            }\r\n                            wrapped = 1;\r\n                        }\r\n                    }\r\n                    if (directionB === 1) {\r\n                        if (phaseB > waveLength) {\r\n                            if (chipWaveCompletionB <= 0) {\r\n                                lastWaveB = prevWaveB;\r\n                                chipWaveCompletionB++;\r\n                            }\r\n                            wrapped = 1;\r\n                        }\r\n                    } else if (directionA === -1) {\r\n                        if (phaseB < 0) {\r\n                            if (chipWaveCompletionB <= 0) {\r\n                                lastWaveB = prevWaveB;\r\n                                chipWaveCompletionB++;\r\n                            }\r\n                            wrapped = 1;\r\n                        }\r\n                    }\r\n                } else if (chipWaveLoopMode === 3) {\r\n                    // loop once\r\n                    if (directionA === 1) {\r\n                        if (phaseA > chipWaveLoopEnd) {\r\n                            if (chipWaveCompletionA <= 0) {\r\n                                lastWaveA = prevWaveA;\r\n                                chipWaveCompletionA++;\r\n                            }\r\n                            wrapped = 1;\r\n                        }\r\n                    } else if (directionA === -1) {\r\n                        if (phaseA < chipWaveLoopStart) {\r\n                            if (chipWaveCompletionA <= 0) {\r\n                                lastWaveA = prevWaveA;\r\n                                chipWaveCompletionA++;\r\n                            }\r\n                            wrapped = 1;\r\n                        }\r\n                    }\r\n                    if (directionB === 1) {\r\n                        if (phaseB > chipWaveLoopEnd) {\r\n                            if (chipWaveCompletionB <= 0) {\r\n                                lastWaveB = prevWaveB;\r\n                                chipWaveCompletionB++;\r\n                            }\r\n                            wrapped = 1;\r\n                        }\r\n                    } else if (directionA === -1) {\r\n                        if (phaseB < chipWaveLoopStart) {\r\n                            if (chipWaveCompletionB <= 0) {\r\n                                lastWaveB = prevWaveB;\r\n                                chipWaveCompletionB++;\r\n                            }\r\n                            wrapped = 1;\r\n                        }\r\n                    }\r\n                } else if (chipWaveLoopMode === 0) {\r\n                    // loop\r\n                    if (directionA === 1) {\r\n                        if (phaseA > chipWaveLoopEnd) {\r\n                            phaseA = chipWaveLoopStart + Synth.wrap(phaseA - chipWaveLoopEnd, chipWaveLoopLength);\r\n                            // phaseA = chipWaveLoopStart;\r\n                            wrapped = 1;\r\n                        }\r\n                    } else if (directionA === -1) {\r\n                        if (phaseA < chipWaveLoopStart) {\r\n                            phaseA = chipWaveLoopEnd - Synth.wrap(chipWaveLoopStart - phaseA, chipWaveLoopLength);\r\n                            // phaseA = chipWaveLoopEnd;\r\n                            wrapped = 1;\r\n                        }\r\n                    }\r\n                    if (directionB === 1) {\r\n                        if (phaseB > chipWaveLoopEnd) {\r\n                            phaseB = chipWaveLoopStart + Synth.wrap(phaseB - chipWaveLoopEnd, chipWaveLoopLength);\r\n                            // phaseB = chipWaveLoopStart;\r\n                            wrapped = 1;\r\n                        }\r\n                    } else if (directionB === -1) {\r\n                        if (phaseB < chipWaveLoopStart) {\r\n                            phaseB = chipWaveLoopEnd - Synth.wrap(chipWaveLoopStart - phaseB, chipWaveLoopLength);\r\n                            // phaseB = chipWaveLoopEnd;\r\n                            wrapped = 1;\r\n                        }\r\n                    }\r\n                } else if (chipWaveLoopMode === 1) {\r\n                    // ping-pong\r\n                    if (directionA === 1) {\r\n                        if (phaseA > chipWaveLoopEnd) {\r\n                            phaseA = chipWaveLoopEnd - Synth.wrap(phaseA - chipWaveLoopEnd, chipWaveLoopLength);\r\n                            // phaseA = chipWaveLoopEnd;\r\n                            directionA = -1;\r\n                           wrapped = 1;\r\n                        }\r\n                    } else if (directionA === -1) {\r\n                        if (phaseA < chipWaveLoopStart) {\r\n                            phaseA = chipWaveLoopStart + Synth.wrap(chipWaveLoopStart - phaseA, chipWaveLoopLength);\r\n                            // phaseA = chipWaveLoopStart;\r\n                            directionA = 1;\r\n                           wrapped = 1;\r\n                        }\r\n                    }\r\n                    if (directionB === 1) {\r\n                        if (phaseB > chipWaveLoopEnd) {\r\n                            phaseB = chipWaveLoopEnd - Synth.wrap(phaseB - chipWaveLoopEnd, chipWaveLoopLength);\r\n                            // phaseB = chipWaveLoopEnd;\r\n                            directionB = -1;\r\n                            wrapped = 1;\r\n                        }\r\n                    } else if (directionB === -1) {\r\n                        if (phaseB < chipWaveLoopStart) {\r\n                            phaseB = chipWaveLoopStart + Synth.wrap(chipWaveLoopStart - phaseB, chipWaveLoopLength);\r\n                            // phaseB = chipWaveLoopStart;\r\n                            directionB = 1;\r\n                            wrapped = 1;\r\n                        }\r\n                    }\r\n               }\r\n                let waveA = 0;\r\n                let waveB = 0;\r\n                let inputSample = 0;\r\n                if (aliases) {\r\n                    waveA = wave[Synth.wrap(Math.floor(phaseA), waveLength)];\r\n                    waveB = wave[Synth.wrap(Math.floor(phaseB), waveLength)];\r\n                    prevWaveA = waveA;\r\n                    prevWaveB = waveB;\r\n                    const completionFadeA: number = chipWaveCompletionA > 0 ? ((chipWaveCompletionFadeLength - Math.min(chipWaveCompletionA, chipWaveCompletionFadeLength)) / chipWaveCompletionFadeLength) : 1;\r\n                    const completionFadeB: number = chipWaveCompletionB > 0 ? ((chipWaveCompletionFadeLength - Math.min(chipWaveCompletionB, chipWaveCompletionFadeLength)) / chipWaveCompletionFadeLength) : 1;\r\n                    inputSample = 0;\r\n                    if (chipWaveCompletionA > 0) {\r\n                        inputSample += lastWaveA * completionFadeA;\r\n                    } else {\r\n                        inputSample += waveA;\r\n                    }\r\n                    if (chipWaveCompletionB > 0) {\r\n                        inputSample += lastWaveB * completionFadeB;\r\n                    } else {\r\n                        inputSample += waveB;\r\n                    }\r\n                }\r\n                else {\r\n                    const phaseAInt = Math.floor(phaseA);\r\n                    const phaseBInt = Math.floor(phaseB);\r\n                    const indexA = Synth.wrap(phaseAInt, waveLength);\r\n                    const indexB = Synth.wrap(phaseBInt, waveLength);\r\n                    let nextWaveIntegralA = wave[indexA];\r\n                    let nextWaveIntegralB = wave[indexB];\r\n                    const phaseRatioA = phaseA - phaseAInt;\r\n                    const phaseRatioB = phaseB - phaseBInt;\r\n                    nextWaveIntegralA += (wave[Synth.wrap(indexA + 1, waveLength)] - nextWaveIntegralA) * phaseRatioA;\r\n                    nextWaveIntegralB += (wave[Synth.wrap(indexB + 1, waveLength)] - nextWaveIntegralB) * phaseRatioB;\r\n                    if (!(chipWaveLoopMode === 0 && chipWaveLoopStart === 0 && chipWaveLoopEnd === waveLength) && wrapped !== 0) {\r\n                        let pwia = 0;\r\n                        let pwib = 0;\r\n                        const phaseA_ = Math.max(0, phaseA - phaseDeltaA * directionA);\r\n                        const phaseB_ = Math.max(0, phaseB - phaseDeltaB * directionB);\r\n                        const phaseAInt = Math.floor(phaseA_);\r\n                        const phaseBInt = Math.floor(phaseB_);\r\n                        const indexA = Synth.wrap(phaseAInt, waveLength);\r\n                        const indexB = Synth.wrap(phaseBInt, waveLength);\r\n                        pwia = wave[indexA];\r\n                        pwib = wave[indexB];\r\n                        pwia += (wave[Synth.wrap(indexA + 1, waveLength)] - pwia) * (phaseA_ - phaseAInt) * directionA;\r\n                        pwib += (wave[Synth.wrap(indexB + 1, waveLength)] - pwib) * (phaseB_ - phaseBInt) * directionB;\r\n                        prevWaveIntegralA = pwia;\r\n                        prevWaveIntegralB = pwib;\r\n\t\t\t\t   }\r\n                   if (chipWaveLoopMode === 1 && wrapped !== 0) {\r\n                       waveA = prevWaveA;\r\n                       waveB = prevWaveB;\r\n                   } else {\r\n                       waveA = (nextWaveIntegralA - prevWaveIntegralA) / (phaseDeltaA * directionA);\r\n                       waveB = (nextWaveIntegralB - prevWaveIntegralB) / (phaseDeltaB * directionB);\r\n                   }\r\n                   prevWaveA = waveA;\r\n                   prevWaveB = waveB;\r\n\t\t\t\t   prevWaveIntegralA = nextWaveIntegralA;\r\n\t\t\t\t   prevWaveIntegralB = nextWaveIntegralB;\r\n                    const completionFadeA = chipWaveCompletionA > 0 ? ((chipWaveCompletionFadeLength - Math.min(chipWaveCompletionA, chipWaveCompletionFadeLength)) / chipWaveCompletionFadeLength) : 1;\r\n                    const completionFadeB = chipWaveCompletionB > 0 ? ((chipWaveCompletionFadeLength - Math.min(chipWaveCompletionB, chipWaveCompletionFadeLength)) / chipWaveCompletionFadeLength) : 1;\r\n                    if (chipWaveCompletionA > 0) {\r\n                        inputSample += lastWaveA * completionFadeA;\r\n                    } else {\r\n                        inputSample += waveA;\r\n                    }\r\n                    if (chipWaveCompletionB > 0) {\r\n                        inputSample += lastWaveB * completionFadeB;\r\n                    } else {\r\n                        inputSample += waveB * unisonSign;\r\n                    }\r\n                }\r\n                const sample = applyFilters(inputSample * volumeScale, initialFilterInput1, initialFilterInput2, filterCount, filters);\r\n                initialFilterInput2 = initialFilterInput1;\r\n                initialFilterInput1 = inputSample * volumeScale;\r\n                phaseDeltaA *= phaseDeltaScaleA;\r\n                phaseDeltaB *= phaseDeltaScaleB;\r\n                const output = sample * expression;\r\n                expression += expressionDelta;\r\n                data[sampleIndex] += output;\r\n            }\r\n            tone.phases[0] = phaseA / waveLength;\r\n            tone.phases[1] = phaseB / waveLength;\r\n            tone.phaseDeltas[0] = phaseDeltaA / waveLength;\r\n            tone.phaseDeltas[1] = phaseDeltaB / waveLength;\r\n            tone.directions[0] = directionA;\r\n            tone.directions[1] = directionB;\r\n            tone.chipWaveCompletions[0] = chipWaveCompletionA;\r\n            tone.chipWaveCompletions[1] = chipWaveCompletionB;\r\n            tone.chipWavePrevWaves[0] = prevWaveA;\r\n            tone.chipWavePrevWaves[1] = prevWaveB;\r\n            tone.chipWaveCompletionsLastWave[0] = lastWaveA;\r\n            tone.chipWaveCompletionsLastWave[1] = lastWaveB;\r\n            tone.expression = expression;\r\n            synth.sanitizeFilters(filters);\r\n            tone.initialNoteFilterInput1 = initialFilterInput1;\r\n            tone.initialNoteFilterInput2 = initialFilterInput2;\r\n        }\r\n        // advloop addition\r\n    private static chipSynth(synth: Synth, bufferIndex: number, roundedSamplesPerTick: number, tone: Tone, instrumentState: InstrumentState): void {\r\n        const aliases: boolean = (effectsIncludeDistortion(instrumentState.effects) && instrumentState.aliases);\r\n        const data: Float32Array = synth.tempMonoInstrumentSampleBuffer!;\r\n        const wave: Float32Array = instrumentState.wave!;\r\n        const volumeScale = instrumentState.volumeScale;\r\n\r\n        const waveLength = (aliases && instrumentState.type == 8) ? wave.length : wave.length - 1;\r\n\t\t\t//BUGFIX FROM JUMMBOX\r\n\r\n        const unisonSign: number = tone.specialIntervalExpressionMult * instrumentState.unison!.sign;\r\n        if (instrumentState.unison!.voices == 1 && !instrumentState.chord!.customInterval) tone.phases[1] = tone.phases[0];\r\n        let phaseDeltaA: number = tone.phaseDeltas[0] * waveLength;\r\n        let phaseDeltaB: number = tone.phaseDeltas[1] * waveLength;\r\n        const phaseDeltaScaleA: number = +tone.phaseDeltaScales[0];\r\n        const phaseDeltaScaleB: number = +tone.phaseDeltaScales[1];\r\n        let expression: number = +tone.expression;\r\n        const expressionDelta: number = +tone.expressionDelta;\r\n        let phaseA: number = (tone.phases[0] % 1) * waveLength;\r\n        let phaseB: number = (tone.phases[1] % 1) * waveLength;\r\n\r\n        const filters: DynamicBiquadFilter[] = tone.noteFilters;\r\n        const filterCount: number = tone.noteFilterCount | 0;\r\n        let initialFilterInput1: number = +tone.initialNoteFilterInput1;\r\n        let initialFilterInput2: number = +tone.initialNoteFilterInput2;\r\n        const applyFilters: Function = Synth.applyFilters;\r\n        let prevWaveIntegralA: number = 0;\r\n        let prevWaveIntegralB: number = 0;\r\n\r\n        if (!aliases) {\r\n            const phaseAInt: number = phaseA | 0;\r\n            const phaseBInt: number = phaseB | 0;\r\n            const indexA: number = phaseAInt % waveLength;\r\n            const indexB: number = phaseBInt % waveLength;\r\n            const phaseRatioA: number = phaseA - phaseAInt;\r\n            const phaseRatioB: number = phaseB - phaseBInt;\r\n            prevWaveIntegralA = +wave[indexA];\r\n            prevWaveIntegralB = +wave[indexB];\r\n            prevWaveIntegralA += (wave[indexA + 1] - prevWaveIntegralA) * phaseRatioA;\r\n            prevWaveIntegralB += (wave[indexB + 1] - prevWaveIntegralB) * phaseRatioB;\r\n        }\r\n\r\n        const stopIndex: number = bufferIndex + roundedSamplesPerTick;\r\n        for (let sampleIndex: number = bufferIndex; sampleIndex < stopIndex; sampleIndex++) {\r\n\r\n            phaseA += phaseDeltaA;\r\n            phaseB += phaseDeltaB;\r\n\r\n            let waveA: number;\r\n            let waveB: number;\r\n            let inputSample: number;\r\n\r\n            if (aliases) {\r\n                waveA = wave[(0 | phaseA) % waveLength];\r\n                waveB = wave[(0 | phaseB) % waveLength];\r\n                inputSample = waveA + waveB;\r\n            } else {\r\n                const phaseAInt: number = phaseA | 0;\r\n                const phaseBInt: number = phaseB | 0;\r\n                const indexA: number = phaseAInt % waveLength;\r\n                const indexB: number = phaseBInt % waveLength;\r\n                let nextWaveIntegralA: number = wave[indexA];\r\n                let nextWaveIntegralB: number = wave[indexB];\r\n                const phaseRatioA: number = phaseA - phaseAInt;\r\n                const phaseRatioB: number = phaseB - phaseBInt;\r\n                nextWaveIntegralA += (wave[indexA + 1] - nextWaveIntegralA) * phaseRatioA;\r\n                nextWaveIntegralB += (wave[indexB + 1] - nextWaveIntegralB) * phaseRatioB;\r\n                waveA = (nextWaveIntegralA - prevWaveIntegralA) / phaseDeltaA;\r\n                waveB = (nextWaveIntegralB - prevWaveIntegralB) / phaseDeltaB;\r\n                prevWaveIntegralA = nextWaveIntegralA;\r\n                prevWaveIntegralB = nextWaveIntegralB;\r\n                inputSample = waveA + waveB * unisonSign;\r\n            }\r\n\r\n            const sample: number = applyFilters(inputSample * volumeScale, initialFilterInput1, initialFilterInput2, filterCount, filters);\r\n\t\t//BUGFIX FROM JUMMBOX\r\n            initialFilterInput2 = initialFilterInput1;\r\n            initialFilterInput1 = inputSample * volumeScale;\r\n\r\n            phaseDeltaA *= phaseDeltaScaleA;\r\n            phaseDeltaB *= phaseDeltaScaleB;\r\n\r\n            const output: number = sample * expression;\r\n\t\t//BUGFIX FROM JUMMBOX\r\n            expression += expressionDelta;\r\n\r\n            data[sampleIndex] += output;\r\n        }\r\n\r\n        tone.phases[0] = phaseA / waveLength;\r\n        tone.phases[1] = phaseB / waveLength;\r\n        tone.phaseDeltas[0] = phaseDeltaA / waveLength;\r\n        tone.phaseDeltas[1] = phaseDeltaB / waveLength;\r\n        tone.expression = expression;\r\n\r\n        synth.sanitizeFilters(filters);\r\n        tone.initialNoteFilterInput1 = initialFilterInput1;\r\n        tone.initialNoteFilterInput2 = initialFilterInput2;\r\n    }\r\n\r\n    private static harmonicsSynth(synth: Synth, bufferIndex: number, roundedSamplesPerTick: number, tone: Tone, instrumentState: InstrumentState): void {\r\n        const data: Float32Array = synth.tempMonoInstrumentSampleBuffer!;\r\n        const wave: Float32Array = instrumentState.wave!;\r\n        const waveLength: number = wave.length - 1; // The first sample is duplicated at the end, don't double-count it.\r\n\r\n        const unisonSign: number = tone.specialIntervalExpressionMult * instrumentState.unison!.sign;\r\n        if (instrumentState.unison!.voices == 1 && !instrumentState.chord!.customInterval) tone.phases[1] = tone.phases[0];\r\n        let phaseDeltaA: number = tone.phaseDeltas[0] * waveLength;\r\n        let phaseDeltaB: number = tone.phaseDeltas[1] * waveLength;\r\n        const phaseDeltaScaleA: number = +tone.phaseDeltaScales[0];\r\n        const phaseDeltaScaleB: number = +tone.phaseDeltaScales[1];\r\n        let expression: number = +tone.expression;\r\n        const expressionDelta: number = +tone.expressionDelta;\r\n        let phaseA: number = (tone.phases[0] % 1) * waveLength;\r\n        let phaseB: number = (tone.phases[1] % 1) * waveLength;\r\n\r\n        const filters: DynamicBiquadFilter[] = tone.noteFilters;\r\n        const filterCount: number = tone.noteFilterCount | 0;\r\n        let initialFilterInput1: number = +tone.initialNoteFilterInput1;\r\n        let initialFilterInput2: number = +tone.initialNoteFilterInput2;\r\n        const applyFilters: Function = Synth.applyFilters;\r\n\r\n        const phaseAInt: number = phaseA | 0;\r\n        const phaseBInt: number = phaseB | 0;\r\n        const indexA: number = phaseAInt % waveLength;\r\n        const indexB: number = phaseBInt % waveLength;\r\n        const phaseRatioA: number = phaseA - phaseAInt;\r\n        const phaseRatioB: number = phaseB - phaseBInt;\r\n        let prevWaveIntegralA: number = +wave[indexA];\r\n        let prevWaveIntegralB: number = +wave[indexB];\r\n        prevWaveIntegralA += (wave[indexA + 1] - prevWaveIntegralA) * phaseRatioA;\r\n        prevWaveIntegralB += (wave[indexB + 1] - prevWaveIntegralB) * phaseRatioB;\r\n\r\n        const stopIndex: number = bufferIndex + roundedSamplesPerTick;\r\n        for (let sampleIndex: number = bufferIndex; sampleIndex < stopIndex; sampleIndex++) {\r\n\r\n            phaseA += phaseDeltaA;\r\n            phaseB += phaseDeltaB;\r\n\r\n            const phaseAInt: number = phaseA | 0;\r\n            const phaseBInt: number = phaseB | 0;\r\n            const indexA: number = phaseAInt % waveLength;\r\n            const indexB: number = phaseBInt % waveLength;\r\n            let nextWaveIntegralA: number = wave[indexA];\r\n            let nextWaveIntegralB: number = wave[indexB];\r\n            const phaseRatioA: number = phaseA - phaseAInt;\r\n            const phaseRatioB: number = phaseB - phaseBInt;\r\n            nextWaveIntegralA += (wave[indexA + 1] - nextWaveIntegralA) * phaseRatioA;\r\n            nextWaveIntegralB += (wave[indexB + 1] - nextWaveIntegralB) * phaseRatioB;\r\n            const waveA: number = (nextWaveIntegralA - prevWaveIntegralA) / phaseDeltaA;\r\n            const waveB: number = (nextWaveIntegralB - prevWaveIntegralB) / phaseDeltaB;\r\n            prevWaveIntegralA = nextWaveIntegralA;\r\n            prevWaveIntegralB = nextWaveIntegralB;\r\n\r\n            const inputSample: number = waveA + waveB * unisonSign;\r\n            const sample: number = applyFilters(inputSample, initialFilterInput1, initialFilterInput2, filterCount, filters);\r\n            initialFilterInput2 = initialFilterInput1;\r\n            initialFilterInput1 = inputSample;\r\n\r\n            phaseDeltaA *= phaseDeltaScaleA;\r\n            phaseDeltaB *= phaseDeltaScaleB;\r\n\r\n            const output: number = sample * expression;\r\n            expression += expressionDelta;\r\n\r\n            data[sampleIndex] += output;\r\n        }\r\n\r\n        tone.phases[0] = phaseA / waveLength;\r\n        tone.phases[1] = phaseB / waveLength;\r\n        tone.phaseDeltas[0] = phaseDeltaA / waveLength;\r\n        tone.phaseDeltas[1] = phaseDeltaB / waveLength;\r\n        tone.expression = expression;\r\n\r\n        synth.sanitizeFilters(filters);\r\n        tone.initialNoteFilterInput1 = initialFilterInput1;\r\n        tone.initialNoteFilterInput2 = initialFilterInput2;\r\n    }\r\n\r\n    private static pickedStringSynth(synth: Synth, bufferIndex: number, roundedSamplesPerTick: number, tone: Tone, instrumentState: InstrumentState): void {\r\n        // This algorithm is similar to the Karpluss-Strong algorithm in principle, but with an\r\n        // all-pass filter for dispersion and with more control over the impulse harmonics.\r\n        // The source code is processed as a string before being compiled, in order to\r\n        // handle the unison feature. If unison is disabled or set to none, then only one\r\n        // string voice is required, otherwise two string voices are required. We only want\r\n        // to compute the minimum possible number of string voices, so omit the code for\r\n        // processing extra ones if possible. Any line containing a \"#\" is duplicated for\r\n        // each required voice, replacing the \"#\" with the voice index.\r\n\r\n        const voiceCount: number = instrumentState.unison!.voices;\r\n        let pickedStringFunction: Function = Synth.pickedStringFunctionCache[voiceCount];\r\n        if (pickedStringFunction == undefined) {\r\n            let pickedStringSource: string = \"\";\r\n\r\n            pickedStringSource += `\r\n\t\t\t\tconst Config = beepbox.Config;\r\n\t\t\t\tconst Synth = beepbox.Synth;\r\n\t\t\t\tconst data = synth.tempMonoInstrumentSampleBuffer;\r\n\t\t\t\t\r\n\t\t\t\tlet pickedString# = tone.pickedStrings[#];\r\n\t\t\t\tlet allPassSample# = +pickedString#.allPassSample;\r\n\t\t\t\tlet allPassPrevInput# = +pickedString#.allPassPrevInput;\r\n\t\t\t\tlet shelfSample# = +pickedString#.shelfSample;\r\n\t\t\t\tlet shelfPrevInput# = +pickedString#.shelfPrevInput;\r\n\t\t\t\tlet fractionalDelaySample# = +pickedString#.fractionalDelaySample;\r\n\t\t\t\tconst delayLine# = pickedString#.delayLine;\r\n\t\t\t\tconst delayBufferMask# = (delayLine#.length - 1) >> 0;\r\n\t\t\t\tlet delayIndex# = pickedString#.delayIndex|0;\r\n\t\t\t\tdelayIndex# = (delayIndex# & delayBufferMask#) + delayLine#.length;\r\n\t\t\t\tlet delayLength# = +pickedString#.prevDelayLength;\r\n\t\t\t\tconst delayLengthDelta# = +pickedString#.delayLengthDelta;\r\n\t\t\t\tlet allPassG# = +pickedString#.allPassG;\r\n\t\t\t\tlet shelfA1# = +pickedString#.shelfA1;\r\n\t\t\t\tlet shelfB0# = +pickedString#.shelfB0;\r\n\t\t\t\tlet shelfB1# = +pickedString#.shelfB1;\r\n\t\t\t\tconst allPassGDelta# = +pickedString#.allPassGDelta;\r\n\t\t\t\tconst shelfA1Delta# = +pickedString#.shelfA1Delta;\r\n\t\t\t\tconst shelfB0Delta# = +pickedString#.shelfB0Delta;\r\n\t\t\t\tconst shelfB1Delta# = +pickedString#.shelfB1Delta;\r\n\t\t\t\t\r\n\t\t\t\tlet expression = +tone.expression;\r\n\t\t\t\tconst expressionDelta = +tone.expressionDelta;\r\n\t\t\t\t\r\n\t\t\t\tconst unisonSign = tone.specialIntervalExpressionMult * instrumentState.unison.sign;\r\n\t\t\t\tconst delayResetOffset# = pickedString#.delayResetOffset|0;\r\n\t\t\t\t\r\n\t\t\t\tconst filters = tone.noteFilters;\r\n\t\t\t\tconst filterCount = tone.noteFilterCount|0;\r\n\t\t\t\tlet initialFilterInput1 = +tone.initialNoteFilterInput1;\r\n\t\t\t\tlet initialFilterInput2 = +tone.initialNoteFilterInput2;\r\n\t\t\t\tconst applyFilters = Synth.applyFilters;\r\n\t\t\t\t\r\n\t\t\t\tconst stopIndex = bufferIndex + runLength;\r\n\t\t\t\tfor (let sampleIndex = bufferIndex; sampleIndex < stopIndex; sampleIndex++) {\r\n\t\t\t\t\tconst targetSampleTime# = delayIndex# - delayLength#;\r\n\t\t\t\t\tconst lowerIndex# = (targetSampleTime# + 0.125) | 0; // Offset to improve stability of all-pass filter.\r\n\t\t\t\t\tconst upperIndex# = lowerIndex# + 1;\r\n\t\t\t\t\tconst fractionalDelay# = upperIndex# - targetSampleTime#;\r\n\t\t\t\t\tconst fractionalDelayG# = (1.0 - fractionalDelay#) / (1.0 + fractionalDelay#); // Inlined version of FilterCoefficients.prototype.allPass1stOrderFractionalDelay\r\n\t\t\t\t\tconst prevInput# = delayLine#[lowerIndex# & delayBufferMask#];\r\n\t\t\t\t\tconst input# = delayLine#[upperIndex# & delayBufferMask#];\r\n\t\t\t\t\tfractionalDelaySample# = fractionalDelayG# * input# + prevInput# - fractionalDelayG# * fractionalDelaySample#;\r\n\t\t\t\t\t\r\n\t\t\t\t\tallPassSample# = fractionalDelaySample# * allPassG# + allPassPrevInput# - allPassG# * allPassSample#;\r\n\t\t\t\t\tallPassPrevInput# = fractionalDelaySample#;\r\n\t\t\t\t\t\r\n\t\t\t\t\tshelfSample# = shelfB0# * allPassSample# + shelfB1# * shelfPrevInput# - shelfA1# * shelfSample#;\r\n\t\t\t\t\tshelfPrevInput# = allPassSample#;\r\n\t\t\t\t\t\r\n\t\t\t\t\tdelayLine#[delayIndex# & delayBufferMask#] += shelfSample#;\r\n\t\t\t\t\tdelayLine#[(delayIndex# + delayResetOffset#) & delayBufferMask#] = 0.0;\r\n\t\t\t\t\tdelayIndex#++;\r\n\t\t\t\t\t\r\n\t\t\t\t\tconst inputSample = (`\r\n\r\n            const sampleList: string[] = [];\r\n            for (let voice: number = 0; voice < voiceCount; voice++) {\r\n                sampleList.push(\"fractionalDelaySample\" + voice + (voice == 1 ? \" * unisonSign\" : \"\"));\r\n            }\r\n\r\n            pickedStringSource += sampleList.join(\" + \");\r\n\r\n            pickedStringSource += `) * expression;\r\n\t\t\t\t\tconst sample = applyFilters(inputSample, initialFilterInput1, initialFilterInput2, filterCount, filters);\r\n\t\t\t\t\tinitialFilterInput2 = initialFilterInput1;\r\n\t\t\t\t\tinitialFilterInput1 = inputSample;\r\n\t\t\t\t\tdata[sampleIndex] += sample;\r\n\t\t\t\t\t\r\n\t\t\t\t\texpression += expressionDelta;\r\n\t\t\t\t\tdelayLength# += delayLengthDelta#;\r\n\t\t\t\t\tallPassG# += allPassGDelta#;\r\n\t\t\t\t\tshelfA1# += shelfA1Delta#;\r\n\t\t\t\t\tshelfB0# += shelfB0Delta#;\r\n\t\t\t\t\tshelfB1# += shelfB1Delta#;\r\n\t\t\t\t}\r\n\t\t\t\t\r\n\t\t\t\t// Avoid persistent denormal or NaN values in the delay buffers and filter history.\r\n\t\t\t\tconst epsilon = (1.0e-24);\r\n\t\t\t\tif (!Number.isFinite(allPassSample#) || Math.abs(allPassSample#) < epsilon) allPassSample# = 0.0;\r\n\t\t\t\tif (!Number.isFinite(allPassPrevInput#) || Math.abs(allPassPrevInput#) < epsilon) allPassPrevInput# = 0.0;\r\n\t\t\t\tif (!Number.isFinite(shelfSample#) || Math.abs(shelfSample#) < epsilon) shelfSample# = 0.0;\r\n\t\t\t\tif (!Number.isFinite(shelfPrevInput#) || Math.abs(shelfPrevInput#) < epsilon) shelfPrevInput# = 0.0;\r\n\t\t\t\tif (!Number.isFinite(fractionalDelaySample#) || Math.abs(fractionalDelaySample#) < epsilon) fractionalDelaySample# = 0.0;\r\n\t\t\t\tpickedString#.allPassSample = allPassSample#;\r\n\t\t\t\tpickedString#.allPassPrevInput = allPassPrevInput#;\r\n\t\t\t\tpickedString#.shelfSample = shelfSample#;\r\n\t\t\t\tpickedString#.shelfPrevInput = shelfPrevInput#;\r\n\t\t\t\tpickedString#.fractionalDelaySample = fractionalDelaySample#;\r\n\t\t\t\tpickedString#.delayIndex = delayIndex#;\r\n\t\t\t\tpickedString#.prevDelayLength = delayLength#;\r\n\t\t\t\tpickedString#.allPassG = allPassG#;\r\n\t\t\t\tpickedString#.shelfA1 = shelfA1#;\r\n\t\t\t\tpickedString#.shelfB0 = shelfB0#;\r\n\t\t\t\tpickedString#.shelfB1 = shelfB1#;\r\n\t\t\t\t\r\n\t\t\t\ttone.expression = expression;\r\n\t\t\t\t\r\n\t\t\t\tsynth.sanitizeFilters(filters);\r\n\t\t\t\ttone.initialNoteFilterInput1 = initialFilterInput1;\r\n\t\t\t\ttone.initialNoteFilterInput2 = initialFilterInput2;`\r\n\r\n            // Duplicate lines containing \"#\" for each voice and replace the \"#\" with the voice index.\r\n            pickedStringSource = pickedStringSource.replace(/^.*\\#.*$/mg, line => {\r\n                const lines = [];\r\n                for (let voice: number = 0; voice < voiceCount; voice++) {\r\n                    lines.push(line.replace(/\\#/g, String(voice)));\r\n                }\r\n                return lines.join(\"\\n\");\r\n            });\r\n\r\n            //console.log(pickedStringSource);\r\n            pickedStringFunction = new Function(\"synth\", \"bufferIndex\", \"runLength\", \"tone\", \"instrumentState\", pickedStringSource);\r\n            Synth.pickedStringFunctionCache[voiceCount] = pickedStringFunction;\r\n        }\r\n\r\n        pickedStringFunction(synth, bufferIndex, roundedSamplesPerTick, tone, instrumentState);\r\n    }\r\n\r\n    private static effectsSynth(synth: Synth, outputDataL: Float32Array, outputDataR: Float32Array, bufferIndex: number, runLength: number, instrumentState: InstrumentState): void {\r\n        // TODO: If automation is involved, don't assume sliders will stay at zero.\r\n        // @jummbus - ^ Correct, removed the non-zero checks as modulation can change them.\r\n\r\n        const usesDistortion: boolean = effectsIncludeDistortion(instrumentState.effects);\r\n        const usesBitcrusher: boolean = effectsIncludeBitcrusher(instrumentState.effects);\r\n        const usesEqFilter: boolean = instrumentState.eqFilterCount > 0;\r\n        const usesPanning: boolean = effectsIncludePanning(instrumentState.effects);\r\n        const usesChorus: boolean = effectsIncludeChorus(instrumentState.effects);\r\n        const usesEcho: boolean = effectsIncludeEcho(instrumentState.effects);\r\n        const usesReverb: boolean = effectsIncludeReverb(instrumentState.effects);\r\n        let signature: number = 0; if (usesDistortion) signature = signature | 1;\r\n        signature = signature << 1; if (usesBitcrusher) signature = signature | 1;\r\n        signature = signature << 1; if (usesEqFilter) signature = signature | 1;\r\n        signature = signature << 1; if (usesPanning) signature = signature | 1;\r\n        signature = signature << 1; if (usesChorus) signature = signature | 1;\r\n        signature = signature << 1; if (usesEcho) signature = signature | 1;\r\n        signature = signature << 1; if (usesReverb) signature = signature | 1;\r\n\r\n        let effectsFunction: Function = Synth.effectsFunctionCache[signature];\r\n        if (effectsFunction == undefined) {\r\n            let effectsSource: string = \"\";\r\n\r\n            const usesDelays: boolean = usesChorus || usesReverb || usesEcho;\r\n\r\n            effectsSource += `\r\n\t\t\t\tconst Config = beepbox.Config;\r\n\t\t\t\tconst tempMonoInstrumentSampleBuffer = synth.tempMonoInstrumentSampleBuffer;\r\n\t\t\t\t\r\n\t\t\t\tlet mixVolume = +instrumentState.mixVolume;\r\n\t\t\t\tconst mixVolumeDelta = +instrumentState.mixVolumeDelta;`\r\n\r\n            if (usesDelays) {\r\n                effectsSource += `\r\n\t\t\t\t\r\n\t\t\t\tlet delayInputMult = +instrumentState.delayInputMult;\r\n\t\t\t\tconst delayInputMultDelta = +instrumentState.delayInputMultDelta;`\r\n            }\r\n\r\n            if (usesDistortion) {\r\n                // Distortion can sometimes create noticeable aliasing.\r\n                // It seems the established industry best practice for distortion antialiasing\r\n                // is to upsample the inputs (\"zero stuffing\" followed by a brick wall lowpass\r\n                // at the original nyquist frequency), perform the distortion, then downsample\r\n                // (the lowpass again followed by dropping in-between samples). This is\r\n                // \"mathematically correct\" in that it preserves only the intended frequencies,\r\n                // but it has several unfortunate tradeoffs depending on the choice of filter,\r\n                // introducing latency and/or time smearing, since no true brick wall filter\r\n                // exists. For the time being, I've opted to instead generate in-between input\r\n                // samples using fractional delay all-pass filters, and after distorting them,\r\n                // I \"downsample\" these with a simple weighted sum.\r\n\r\n                effectsSource += `\r\n\t\t\t\t\r\n\t\t\t\tconst distortionBaseVolume = +Config.distortionBaseVolume;\r\n\t\t\t\tlet distortion = instrumentState.distortion;\r\n\t\t\t\tconst distortionDelta = instrumentState.distortionDelta;\r\n\t\t\t\tlet distortionDrive = instrumentState.distortionDrive;\r\n\t\t\t\tconst distortionDriveDelta = instrumentState.distortionDriveDelta;\r\n\t\t\t\tconst distortionFractionalResolution = 4.0;\r\n\t\t\t\tconst distortionOversampleCompensation = distortionBaseVolume / distortionFractionalResolution;\r\n\t\t\t\tconst distortionFractionalDelay1 = 1.0 / distortionFractionalResolution;\r\n\t\t\t\tconst distortionFractionalDelay2 = 2.0 / distortionFractionalResolution;\r\n\t\t\t\tconst distortionFractionalDelay3 = 3.0 / distortionFractionalResolution;\r\n\t\t\t\tconst distortionFractionalDelayG1 = (1.0 - distortionFractionalDelay1) / (1.0 + distortionFractionalDelay1); // Inlined version of FilterCoefficients.prototype.allPass1stOrderFractionalDelay\r\n\t\t\t\tconst distortionFractionalDelayG2 = (1.0 - distortionFractionalDelay2) / (1.0 + distortionFractionalDelay2); // Inlined version of FilterCoefficients.prototype.allPass1stOrderFractionalDelay\r\n\t\t\t\tconst distortionFractionalDelayG3 = (1.0 - distortionFractionalDelay3) / (1.0 + distortionFractionalDelay3); // Inlined version of FilterCoefficients.prototype.allPass1stOrderFractionalDelay\r\n\t\t\t\tconst distortionNextOutputWeight1 = Math.cos(Math.PI * distortionFractionalDelay1) * 0.5 + 0.5;\r\n\t\t\t\tconst distortionNextOutputWeight2 = Math.cos(Math.PI * distortionFractionalDelay2) * 0.5 + 0.5;\r\n\t\t\t\tconst distortionNextOutputWeight3 = Math.cos(Math.PI * distortionFractionalDelay3) * 0.5 + 0.5;\r\n\t\t\t\tconst distortionPrevOutputWeight1 = 1.0 - distortionNextOutputWeight1;\r\n\t\t\t\tconst distortionPrevOutputWeight2 = 1.0 - distortionNextOutputWeight2;\r\n\t\t\t\tconst distortionPrevOutputWeight3 = 1.0 - distortionNextOutputWeight3;\r\n\t\t\t\t\r\n\t\t\t\tlet distortionFractionalInput1 = +instrumentState.distortionFractionalInput1;\r\n\t\t\t\tlet distortionFractionalInput2 = +instrumentState.distortionFractionalInput2;\r\n\t\t\t\tlet distortionFractionalInput3 = +instrumentState.distortionFractionalInput3;\r\n\t\t\t\tlet distortionPrevInput = +instrumentState.distortionPrevInput;\r\n\t\t\t\tlet distortionNextOutput = +instrumentState.distortionNextOutput;`\r\n            }\r\n\r\n            if (usesBitcrusher) {\r\n                effectsSource += `\r\n\t\t\t\t\r\n\t\t\t\tlet bitcrusherPrevInput = +instrumentState.bitcrusherPrevInput;\r\n\t\t\t\tlet bitcrusherCurrentOutput = +instrumentState.bitcrusherCurrentOutput;\r\n\t\t\t\tlet bitcrusherPhase = +instrumentState.bitcrusherPhase;\r\n\t\t\t\tlet bitcrusherPhaseDelta = +instrumentState.bitcrusherPhaseDelta;\r\n\t\t\t\tconst bitcrusherPhaseDeltaScale = +instrumentState.bitcrusherPhaseDeltaScale;\r\n\t\t\t\tlet bitcrusherScale = +instrumentState.bitcrusherScale;\r\n\t\t\t\tconst bitcrusherScaleScale = +instrumentState.bitcrusherScaleScale;\r\n\t\t\t\tlet bitcrusherFoldLevel = +instrumentState.bitcrusherFoldLevel;\r\n\t\t\t\tconst bitcrusherFoldLevelScale = +instrumentState.bitcrusherFoldLevelScale;`\r\n            }\r\n\r\n            if (usesEqFilter) {\r\n                effectsSource += `\r\n\t\t\t\t\r\n\t\t\t\tlet filters = instrumentState.eqFilters;\r\n\t\t\t\tconst filterCount = instrumentState.eqFilterCount|0;\r\n\t\t\t\tlet initialFilterInput1 = +instrumentState.initialEqFilterInput1;\r\n\t\t\t\tlet initialFilterInput2 = +instrumentState.initialEqFilterInput2;\r\n\t\t\t\tconst applyFilters = beepbox.Synth.applyFilters;`\r\n            }\r\n\r\n            // The eq filter volume is also used to fade out the instrument state, so always include it.\r\n            effectsSource += `\r\n\t\t\t\t\r\n\t\t\t\tlet eqFilterVolume = +instrumentState.eqFilterVolume;\r\n\t\t\t\tconst eqFilterVolumeDelta = +instrumentState.eqFilterVolumeDelta;`\r\n\r\n            if (usesPanning) {\r\n                effectsSource += `\r\n\t\t\t\t\r\n\t\t\t\tconst panningMask = synth.panningDelayBufferMask >>> 0;\r\n\t\t\t\tconst panningDelayLine = instrumentState.panningDelayLine;\r\n\t\t\t\tlet panningDelayPos = instrumentState.panningDelayPos & panningMask;\r\n\t\t\t\tlet   panningVolumeL      = +instrumentState.panningVolumeL;\r\n\t\t\t\tlet   panningVolumeR      = +instrumentState.panningVolumeR;\r\n\t\t\t\tconst panningVolumeDeltaL = +instrumentState.panningVolumeDeltaL;\r\n\t\t\t\tconst panningVolumeDeltaR = +instrumentState.panningVolumeDeltaR;\r\n\t\t\t\tlet   panningOffsetL      = +instrumentState.panningOffsetL;\r\n\t\t\t\tlet   panningOffsetR      = +instrumentState.panningOffsetR;\r\n\t\t\t\tconst panningOffsetDeltaL = 1.0 - instrumentState.panningOffsetDeltaL;\r\n\t\t\t\tconst panningOffsetDeltaR = 1.0 - instrumentState.panningOffsetDeltaR;`\r\n            }\r\n\r\n            if (usesChorus) {\r\n                effectsSource += `\r\n\t\t\t\t\r\n\t\t\t\tconst chorusMask = synth.chorusDelayBufferMask >>> 0;\r\n\t\t\t\tconst chorusDelayLineL = instrumentState.chorusDelayLineL;\r\n\t\t\t\tconst chorusDelayLineR = instrumentState.chorusDelayLineR;\r\n\t\t\t\tinstrumentState.chorusDelayLineDirty = true;\r\n\t\t\t\tlet chorusDelayPos = instrumentState.chorusDelayPos & chorusMask;\r\n\t\t\t\t\r\n\t\t\t\tlet chorusVoiceMult = +instrumentState.chorusVoiceMult;\r\n\t\t\t\tconst chorusVoiceMultDelta = +instrumentState.chorusVoiceMultDelta;\r\n\t\t\t\tlet chorusCombinedMult = +instrumentState.chorusCombinedMult;\r\n\t\t\t\tconst chorusCombinedMultDelta = +instrumentState.chorusCombinedMultDelta;\r\n\t\t\t\t\r\n\t\t\t\tconst chorusDuration = +beepbox.Config.chorusPeriodSeconds;\r\n\t\t\t\tconst chorusAngle = Math.PI * 2.0 / (chorusDuration * synth.samplesPerSecond);\r\n\t\t\t\tconst chorusRange = synth.samplesPerSecond * beepbox.Config.chorusDelayRange;\r\n\t\t\t\tconst chorusOffset0 = synth.chorusDelayBufferSize - beepbox.Config.chorusDelayOffsets[0][0] * chorusRange;\r\n\t\t\t\tconst chorusOffset1 = synth.chorusDelayBufferSize - beepbox.Config.chorusDelayOffsets[0][1] * chorusRange;\r\n\t\t\t\tconst chorusOffset2 = synth.chorusDelayBufferSize - beepbox.Config.chorusDelayOffsets[0][2] * chorusRange;\r\n\t\t\t\tconst chorusOffset3 = synth.chorusDelayBufferSize - beepbox.Config.chorusDelayOffsets[1][0] * chorusRange;\r\n\t\t\t\tconst chorusOffset4 = synth.chorusDelayBufferSize - beepbox.Config.chorusDelayOffsets[1][1] * chorusRange;\r\n\t\t\t\tconst chorusOffset5 = synth.chorusDelayBufferSize - beepbox.Config.chorusDelayOffsets[1][2] * chorusRange;\r\n\t\t\t\tlet chorusPhase = instrumentState.chorusPhase % (Math.PI * 2.0);\r\n\t\t\t\tlet chorusTap0Index = chorusDelayPos + chorusOffset0 - chorusRange * Math.sin(chorusPhase + beepbox.Config.chorusPhaseOffsets[0][0]);\r\n\t\t\t\tlet chorusTap1Index = chorusDelayPos + chorusOffset1 - chorusRange * Math.sin(chorusPhase + beepbox.Config.chorusPhaseOffsets[0][1]);\r\n\t\t\t\tlet chorusTap2Index = chorusDelayPos + chorusOffset2 - chorusRange * Math.sin(chorusPhase + beepbox.Config.chorusPhaseOffsets[0][2]);\r\n\t\t\t\tlet chorusTap3Index = chorusDelayPos + chorusOffset3 - chorusRange * Math.sin(chorusPhase + beepbox.Config.chorusPhaseOffsets[1][0]);\r\n\t\t\t\tlet chorusTap4Index = chorusDelayPos + chorusOffset4 - chorusRange * Math.sin(chorusPhase + beepbox.Config.chorusPhaseOffsets[1][1]);\r\n\t\t\t\tlet chorusTap5Index = chorusDelayPos + chorusOffset5 - chorusRange * Math.sin(chorusPhase + beepbox.Config.chorusPhaseOffsets[1][2]);\r\n\t\t\t\tchorusPhase += chorusAngle * runLength;\r\n\t\t\t\tconst chorusTap0End = chorusDelayPos + chorusOffset0 - chorusRange * Math.sin(chorusPhase + beepbox.Config.chorusPhaseOffsets[0][0]) + runLength;\r\n\t\t\t\tconst chorusTap1End = chorusDelayPos + chorusOffset1 - chorusRange * Math.sin(chorusPhase + beepbox.Config.chorusPhaseOffsets[0][1]) + runLength;\r\n\t\t\t\tconst chorusTap2End = chorusDelayPos + chorusOffset2 - chorusRange * Math.sin(chorusPhase + beepbox.Config.chorusPhaseOffsets[0][2]) + runLength;\r\n\t\t\t\tconst chorusTap3End = chorusDelayPos + chorusOffset3 - chorusRange * Math.sin(chorusPhase + beepbox.Config.chorusPhaseOffsets[1][0]) + runLength;\r\n\t\t\t\tconst chorusTap4End = chorusDelayPos + chorusOffset4 - chorusRange * Math.sin(chorusPhase + beepbox.Config.chorusPhaseOffsets[1][1]) + runLength;\r\n\t\t\t\tconst chorusTap5End = chorusDelayPos + chorusOffset5 - chorusRange * Math.sin(chorusPhase + beepbox.Config.chorusPhaseOffsets[1][2]) + runLength;\r\n\t\t\t\tconst chorusTap0Delta = (chorusTap0End - chorusTap0Index) / runLength;\r\n\t\t\t\tconst chorusTap1Delta = (chorusTap1End - chorusTap1Index) / runLength;\r\n\t\t\t\tconst chorusTap2Delta = (chorusTap2End - chorusTap2Index) / runLength;\r\n\t\t\t\tconst chorusTap3Delta = (chorusTap3End - chorusTap3Index) / runLength;\r\n\t\t\t\tconst chorusTap4Delta = (chorusTap4End - chorusTap4Index) / runLength;\r\n\t\t\t\tconst chorusTap5Delta = (chorusTap5End - chorusTap5Index) / runLength;`\r\n            }\r\n\r\n            if (usesEcho) {\r\n                effectsSource += `\r\n\t\t\t\t\r\n\t\t\t\tlet echoMult = +instrumentState.echoMult;\r\n\t\t\t\tconst echoMultDelta = +instrumentState.echoMultDelta;\r\n\t\t\t\t\r\n\t\t\t\tconst echoDelayLineL = instrumentState.echoDelayLineL;\r\n\t\t\t\tconst echoDelayLineR = instrumentState.echoDelayLineR;\r\n\t\t\t\tconst echoMask = (echoDelayLineL.length - 1) >>> 0;\r\n\t\t\t\tinstrumentState.echoDelayLineDirty = true;\r\n\t\t\t\t\r\n\t\t\t\tlet echoDelayPos = instrumentState.echoDelayPos & echoMask;\r\n\t\t\t\tconst echoDelayOffsetStart = (echoDelayLineL.length - instrumentState.echoDelayOffsetStart) & echoMask;\r\n\t\t\t\tconst echoDelayOffsetEnd   = (echoDelayLineL.length - instrumentState.echoDelayOffsetEnd) & echoMask;\r\n\t\t\t\tlet echoDelayOffsetRatio = +instrumentState.echoDelayOffsetRatio;\r\n\t\t\t\tconst echoDelayOffsetRatioDelta = +instrumentState.echoDelayOffsetRatioDelta;\r\n\t\t\t\t\r\n\t\t\t\tconst echoShelfA1 = +instrumentState.echoShelfA1;\r\n\t\t\t\tconst echoShelfB0 = +instrumentState.echoShelfB0;\r\n\t\t\t\tconst echoShelfB1 = +instrumentState.echoShelfB1;\r\n\t\t\t\tlet echoShelfSampleL = +instrumentState.echoShelfSampleL;\r\n\t\t\t\tlet echoShelfSampleR = +instrumentState.echoShelfSampleR;\r\n\t\t\t\tlet echoShelfPrevInputL = +instrumentState.echoShelfPrevInputL;\r\n\t\t\t\tlet echoShelfPrevInputR = +instrumentState.echoShelfPrevInputR;`\r\n            }\r\n\r\n            if (usesReverb) {\r\n                effectsSource += `\r\n\t\t\t\t\r\n\t\t\t\tconst reverbMask = Config.reverbDelayBufferMask >>> 0; //TODO: Dynamic reverb buffer size.\r\n\t\t\t\tconst reverbDelayLine = instrumentState.reverbDelayLine;\r\n\t\t\t\tinstrumentState.reverbDelayLineDirty = true;\r\n\t\t\t\tlet reverbDelayPos = instrumentState.reverbDelayPos & reverbMask;\r\n\t\t\t\t\r\n\t\t\t\tlet reverb = +instrumentState.reverbMult;\r\n\t\t\t\tconst reverbDelta = +instrumentState.reverbMultDelta;\r\n\t\t\t\t\r\n\t\t\t\tconst reverbShelfA1 = +instrumentState.reverbShelfA1;\r\n\t\t\t\tconst reverbShelfB0 = +instrumentState.reverbShelfB0;\r\n\t\t\t\tconst reverbShelfB1 = +instrumentState.reverbShelfB1;\r\n\t\t\t\tlet reverbShelfSample0 = +instrumentState.reverbShelfSample0;\r\n\t\t\t\tlet reverbShelfSample1 = +instrumentState.reverbShelfSample1;\r\n\t\t\t\tlet reverbShelfSample2 = +instrumentState.reverbShelfSample2;\r\n\t\t\t\tlet reverbShelfSample3 = +instrumentState.reverbShelfSample3;\r\n\t\t\t\tlet reverbShelfPrevInput0 = +instrumentState.reverbShelfPrevInput0;\r\n\t\t\t\tlet reverbShelfPrevInput1 = +instrumentState.reverbShelfPrevInput1;\r\n\t\t\t\tlet reverbShelfPrevInput2 = +instrumentState.reverbShelfPrevInput2;\r\n\t\t\t\tlet reverbShelfPrevInput3 = +instrumentState.reverbShelfPrevInput3;`\r\n            }\r\n\r\n            effectsSource += `\r\n\t\t\t\t\r\n\t\t\t\tconst stopIndex = bufferIndex + runLength;\r\n\t\t\t\tfor (let sampleIndex = bufferIndex; sampleIndex < stopIndex; sampleIndex++) {\r\n\t\t\t\t\tlet sample = tempMonoInstrumentSampleBuffer[sampleIndex];\r\n\t\t\t\t\ttempMonoInstrumentSampleBuffer[sampleIndex] = 0.0;`\r\n\r\n            if (usesDistortion) {\r\n                effectsSource += `\r\n\t\t\t\t\t\r\n\t\t\t\t\tconst distortionReverse = 1.0 - distortion;\r\n\t\t\t\t\tconst distortionNextInput = sample * distortionDrive;\r\n\t\t\t\t\tsample = distortionNextOutput;\r\n\t\t\t\t\tdistortionNextOutput = distortionNextInput / (distortionReverse * Math.abs(distortionNextInput) + distortion);\r\n\t\t\t\t\tdistortionFractionalInput1 = distortionFractionalDelayG1 * distortionNextInput + distortionPrevInput - distortionFractionalDelayG1 * distortionFractionalInput1;\r\n\t\t\t\t\tdistortionFractionalInput2 = distortionFractionalDelayG2 * distortionNextInput + distortionPrevInput - distortionFractionalDelayG2 * distortionFractionalInput2;\r\n\t\t\t\t\tdistortionFractionalInput3 = distortionFractionalDelayG3 * distortionNextInput + distortionPrevInput - distortionFractionalDelayG3 * distortionFractionalInput3;\r\n\t\t\t\t\tconst distortionOutput1 = distortionFractionalInput1 / (distortionReverse * Math.abs(distortionFractionalInput1) + distortion);\r\n\t\t\t\t\tconst distortionOutput2 = distortionFractionalInput2 / (distortionReverse * Math.abs(distortionFractionalInput2) + distortion);\r\n\t\t\t\t\tconst distortionOutput3 = distortionFractionalInput3 / (distortionReverse * Math.abs(distortionFractionalInput3) + distortion);\r\n\t\t\t\t\tdistortionNextOutput += distortionOutput1 * distortionNextOutputWeight1 + distortionOutput2 * distortionNextOutputWeight2 + distortionOutput3 * distortionNextOutputWeight3;\r\n\t\t\t\t\tsample += distortionOutput1 * distortionPrevOutputWeight1 + distortionOutput2 * distortionPrevOutputWeight2 + distortionOutput3 * distortionPrevOutputWeight3;\r\n\t\t\t\t\tsample *= distortionOversampleCompensation;\r\n\t\t\t\t\tdistortionPrevInput = distortionNextInput;\r\n\t\t\t\t\tdistortion += distortionDelta;\r\n\t\t\t\t\tdistortionDrive += distortionDriveDelta;`\r\n            }\r\n\r\n            if (usesBitcrusher) {\r\n                effectsSource += `\r\n\t\t\t\t\t\r\n\t\t\t\t\tbitcrusherPhase += bitcrusherPhaseDelta;\r\n\t\t\t\t\tif (bitcrusherPhase < 1.0) {\r\n\t\t\t\t\t\tbitcrusherPrevInput = sample;\r\n\t\t\t\t\t\tsample = bitcrusherCurrentOutput;\r\n\t\t\t\t\t} else {\r\n\t\t\t\t\t\tbitcrusherPhase = bitcrusherPhase % 1.0;\r\n\t\t\t\t\t\tconst ratio = bitcrusherPhase / bitcrusherPhaseDelta;\r\n\t\t\t\t\t\t\r\n\t\t\t\t\t\tconst lerpedInput = sample + (bitcrusherPrevInput - sample) * ratio;\r\n\t\t\t\t\t\tbitcrusherPrevInput = sample;\r\n\t\t\t\t\t\t\r\n\t\t\t\t\t\tconst bitcrusherWrapLevel = bitcrusherFoldLevel * 4.0;\r\n\t\t\t\t\t\tconst wrappedSample = (((lerpedInput + bitcrusherFoldLevel) % bitcrusherWrapLevel) + bitcrusherWrapLevel) % bitcrusherWrapLevel;\r\n\t\t\t\t\t\tconst foldedSample = bitcrusherFoldLevel - Math.abs(bitcrusherFoldLevel * 2.0 - wrappedSample);\r\n\t\t\t\t\t\tconst scaledSample = foldedSample / bitcrusherScale;\r\n\t\t\t\t\t\tconst oldValue = bitcrusherCurrentOutput;\r\n\t\t\t\t\t\tconst newValue = (((scaledSample > 0 ? scaledSample + 1 : scaledSample)|0)-.5) * bitcrusherScale;\r\n\t\t\t\t\t\t\r\n\t\t\t\t\t\tsample = oldValue + (newValue - oldValue) * ratio;\r\n\t\t\t\t\t\tbitcrusherCurrentOutput = newValue;\r\n\t\t\t\t\t}\r\n\t\t\t\t\tbitcrusherPhaseDelta *= bitcrusherPhaseDeltaScale;\r\n\t\t\t\t\tbitcrusherScale *= bitcrusherScaleScale;\r\n\t\t\t\t\tbitcrusherFoldLevel *= bitcrusherFoldLevelScale;`\r\n            }\r\n\r\n            if (usesEqFilter) {\r\n                effectsSource += `\r\n\t\t\t\t\t\r\n\t\t\t\t\tconst inputSample = sample;\r\n\t\t\t\t\tsample = applyFilters(inputSample, initialFilterInput1, initialFilterInput2, filterCount, filters);\r\n\t\t\t\t\tinitialFilterInput2 = initialFilterInput1;\r\n\t\t\t\t\tinitialFilterInput1 = inputSample;`\r\n            }\r\n\r\n            // The eq filter volume is also used to fade out the instrument state, so always include it.\r\n            effectsSource += `\r\n\t\t\t\t\t\r\n\t\t\t\t\tsample *= eqFilterVolume;\r\n\t\t\t\t\teqFilterVolume += eqFilterVolumeDelta;`\r\n\r\n            if (usesPanning) {\r\n                effectsSource += `\r\n\t\t\t\t\t\r\n\t\t\t\t\tpanningDelayLine[panningDelayPos] = sample;\r\n\t\t\t\t\tconst panningRatioL  = panningOffsetL % 1;\r\n\t\t\t\t\tconst panningRatioR  = panningOffsetR % 1;\r\n\t\t\t\t\tconst panningTapLA   = panningDelayLine[(panningOffsetL) & panningMask];\r\n\t\t\t\t\tconst panningTapLB   = panningDelayLine[(panningOffsetL + 1) & panningMask];\r\n\t\t\t\t\tconst panningTapRA   = panningDelayLine[(panningOffsetR) & panningMask];\r\n\t\t\t\t\tconst panningTapRB   = panningDelayLine[(panningOffsetR + 1) & panningMask];\r\n\t\t\t\t\tconst panningTapL    = panningTapLA + (panningTapLB - panningTapLA) * panningRatioL;\r\n\t\t\t\t\tconst panningTapR    = panningTapRA + (panningTapRB - panningTapRA) * panningRatioR;\r\n\t\t\t\t\tlet sampleL = panningTapL * panningVolumeL;\r\n\t\t\t\t\tlet sampleR = panningTapR * panningVolumeR;\r\n\t\t\t\t\tpanningDelayPos = (panningDelayPos + 1) & panningMask;\r\n\t\t\t\t\tpanningVolumeL += panningVolumeDeltaL;\r\n\t\t\t\t\tpanningVolumeR += panningVolumeDeltaR;\r\n\t\t\t\t\tpanningOffsetL += panningOffsetDeltaL;\r\n\t\t\t\t\tpanningOffsetR += panningOffsetDeltaR;`\r\n            } else {\r\n                effectsSource += `\r\n\t\t\t\t\t\r\n\t\t\t\t\tlet sampleL = sample;\r\n\t\t\t\t\tlet sampleR = sample;`\r\n            }\r\n\r\n            if (usesChorus) {\r\n                effectsSource += `\r\n\t\t\t\t\t\r\n\t\t\t\t\tconst chorusTap0Ratio = chorusTap0Index % 1;\r\n\t\t\t\t\tconst chorusTap1Ratio = chorusTap1Index % 1;\r\n\t\t\t\t\tconst chorusTap2Ratio = chorusTap2Index % 1;\r\n\t\t\t\t\tconst chorusTap3Ratio = chorusTap3Index % 1;\r\n\t\t\t\t\tconst chorusTap4Ratio = chorusTap4Index % 1;\r\n\t\t\t\t\tconst chorusTap5Ratio = chorusTap5Index % 1;\r\n\t\t\t\t\tconst chorusTap0A = chorusDelayLineL[(chorusTap0Index) & chorusMask];\r\n\t\t\t\t\tconst chorusTap0B = chorusDelayLineL[(chorusTap0Index + 1) & chorusMask];\r\n\t\t\t\t\tconst chorusTap1A = chorusDelayLineL[(chorusTap1Index) & chorusMask];\r\n\t\t\t\t\tconst chorusTap1B = chorusDelayLineL[(chorusTap1Index + 1) & chorusMask];\r\n\t\t\t\t\tconst chorusTap2A = chorusDelayLineL[(chorusTap2Index) & chorusMask];\r\n\t\t\t\t\tconst chorusTap2B = chorusDelayLineL[(chorusTap2Index + 1) & chorusMask];\r\n\t\t\t\t\tconst chorusTap3A = chorusDelayLineR[(chorusTap3Index) & chorusMask];\r\n\t\t\t\t\tconst chorusTap3B = chorusDelayLineR[(chorusTap3Index + 1) & chorusMask];\r\n\t\t\t\t\tconst chorusTap4A = chorusDelayLineR[(chorusTap4Index) & chorusMask];\r\n\t\t\t\t\tconst chorusTap4B = chorusDelayLineR[(chorusTap4Index + 1) & chorusMask];\r\n\t\t\t\t\tconst chorusTap5A = chorusDelayLineR[(chorusTap5Index) & chorusMask];\r\n\t\t\t\t\tconst chorusTap5B = chorusDelayLineR[(chorusTap5Index + 1) & chorusMask];\r\n\t\t\t\t\tconst chorusTap0 = chorusTap0A + (chorusTap0B - chorusTap0A) * chorusTap0Ratio;\r\n\t\t\t\t\tconst chorusTap1 = chorusTap1A + (chorusTap1B - chorusTap1A) * chorusTap1Ratio;\r\n\t\t\t\t\tconst chorusTap2 = chorusTap2A + (chorusTap2B - chorusTap2A) * chorusTap2Ratio;\r\n\t\t\t\t\tconst chorusTap3 = chorusTap3A + (chorusTap3B - chorusTap3A) * chorusTap3Ratio;\r\n\t\t\t\t\tconst chorusTap4 = chorusTap4A + (chorusTap4B - chorusTap4A) * chorusTap4Ratio;\r\n\t\t\t\t\tconst chorusTap5 = chorusTap5A + (chorusTap5B - chorusTap5A) * chorusTap5Ratio;\r\n\t\t\t\t\tchorusDelayLineL[chorusDelayPos] = sampleL * delayInputMult;\r\n\t\t\t\t\tchorusDelayLineR[chorusDelayPos] = sampleR * delayInputMult;\r\n\t\t\t\t\tsampleL = chorusCombinedMult * (sampleL + chorusVoiceMult * (chorusTap1 - chorusTap0 - chorusTap2));\r\n\t\t\t\t\tsampleR = chorusCombinedMult * (sampleR + chorusVoiceMult * (chorusTap4 - chorusTap3 - chorusTap5));\r\n\t\t\t\t\tchorusDelayPos = (chorusDelayPos + 1) & chorusMask;\r\n\t\t\t\t\tchorusTap0Index += chorusTap0Delta;\r\n\t\t\t\t\tchorusTap1Index += chorusTap1Delta;\r\n\t\t\t\t\tchorusTap2Index += chorusTap2Delta;\r\n\t\t\t\t\tchorusTap3Index += chorusTap3Delta;\r\n\t\t\t\t\tchorusTap4Index += chorusTap4Delta;\r\n\t\t\t\t\tchorusTap5Index += chorusTap5Delta;\r\n\t\t\t\t\tchorusVoiceMult += chorusVoiceMultDelta;\r\n\t\t\t\t\tchorusCombinedMult += chorusCombinedMultDelta;`\r\n            }\r\n\r\n            if (usesEcho) {\r\n                effectsSource += `\r\n\t\t\t\t\t\r\n\t\t\t\t\tconst echoTapStartIndex = (echoDelayPos + echoDelayOffsetStart) & echoMask;\r\n\t\t\t\t\tconst echoTapEndIndex   = (echoDelayPos + echoDelayOffsetEnd  ) & echoMask;\r\n\t\t\t\t\tconst echoTapStartL = echoDelayLineL[echoTapStartIndex];\r\n\t\t\t\t\tconst echoTapEndL   = echoDelayLineL[echoTapEndIndex];\r\n\t\t\t\t\tconst echoTapStartR = echoDelayLineR[echoTapStartIndex];\r\n\t\t\t\t\tconst echoTapEndR   = echoDelayLineR[echoTapEndIndex];\r\n\t\t\t\t\tconst echoTapL = (echoTapStartL + (echoTapEndL - echoTapStartL) * echoDelayOffsetRatio) * echoMult;\r\n\t\t\t\t\tconst echoTapR = (echoTapStartR + (echoTapEndR - echoTapStartR) * echoDelayOffsetRatio) * echoMult;\r\n\t\t\t\t\t\r\n\t\t\t\t\techoShelfSampleL = echoShelfB0 * echoTapL + echoShelfB1 * echoShelfPrevInputL - echoShelfA1 * echoShelfSampleL;\r\n\t\t\t\t\techoShelfSampleR = echoShelfB0 * echoTapR + echoShelfB1 * echoShelfPrevInputR - echoShelfA1 * echoShelfSampleR;\r\n\t\t\t\t\techoShelfPrevInputL = echoTapL;\r\n\t\t\t\t\techoShelfPrevInputR = echoTapR;\r\n\t\t\t\t\tsampleL += echoShelfSampleL;\r\n\t\t\t\t\tsampleR += echoShelfSampleR;\r\n\t\t\t\t\t\r\n\t\t\t\t\techoDelayLineL[echoDelayPos] = sampleL * delayInputMult;\r\n\t\t\t\t\techoDelayLineR[echoDelayPos] = sampleR * delayInputMult;\r\n\t\t\t\t\techoDelayPos = (echoDelayPos + 1) & echoMask;\r\n\t\t\t\t\techoDelayOffsetRatio += echoDelayOffsetRatioDelta;\r\n\t\t\t\t\techoMult += echoMultDelta;\r\n                    `\r\n            }\r\n\r\n            if (usesReverb) {\r\n                effectsSource += `\r\n\t\t\t\t\t\r\n\t\t\t\t\t// Reverb, implemented using a feedback delay network with a Hadamard matrix and lowpass filters.\r\n\t\t\t\t\t// good ratios:    0.555235 + 0.618033 + 0.818 +   1.0 = 2.991268\r\n\t\t\t\t\t// Delay lengths:  3041     + 3385     + 4481  +  5477 = 16384 = 2^14\r\n\t\t\t\t\t// Buffer offsets: 3041    -> 6426   -> 10907 -> 16384\r\n\t\t\t\t\tconst reverbDelayPos1 = (reverbDelayPos +  3041) & reverbMask;\r\n\t\t\t\t\tconst reverbDelayPos2 = (reverbDelayPos +  6426) & reverbMask;\r\n\t\t\t\t\tconst reverbDelayPos3 = (reverbDelayPos + 10907) & reverbMask;\r\n\t\t\t\t\tconst reverbSample0 = (reverbDelayLine[reverbDelayPos]);\r\n\t\t\t\t\tconst reverbSample1 = reverbDelayLine[reverbDelayPos1];\r\n\t\t\t\t\tconst reverbSample2 = reverbDelayLine[reverbDelayPos2];\r\n\t\t\t\t\tconst reverbSample3 = reverbDelayLine[reverbDelayPos3];\r\n\t\t\t\t\tconst reverbTemp0 = -(reverbSample0 + sampleL) + reverbSample1;\r\n\t\t\t\t\tconst reverbTemp1 = -(reverbSample0 + sampleR) - reverbSample1;\r\n\t\t\t\t\tconst reverbTemp2 = -reverbSample2 + reverbSample3;\r\n\t\t\t\t\tconst reverbTemp3 = -reverbSample2 - reverbSample3;\r\n\t\t\t\t\tconst reverbShelfInput0 = (reverbTemp0 + reverbTemp2) * reverb;\r\n\t\t\t\t\tconst reverbShelfInput1 = (reverbTemp1 + reverbTemp3) * reverb;\r\n\t\t\t\t\tconst reverbShelfInput2 = (reverbTemp0 - reverbTemp2) * reverb;\r\n\t\t\t\t\tconst reverbShelfInput3 = (reverbTemp1 - reverbTemp3) * reverb;\r\n\t\t\t\t\treverbShelfSample0 = reverbShelfB0 * reverbShelfInput0 + reverbShelfB1 * reverbShelfPrevInput0 - reverbShelfA1 * reverbShelfSample0;\r\n\t\t\t\t\treverbShelfSample1 = reverbShelfB0 * reverbShelfInput1 + reverbShelfB1 * reverbShelfPrevInput1 - reverbShelfA1 * reverbShelfSample1;\r\n\t\t\t\t\treverbShelfSample2 = reverbShelfB0 * reverbShelfInput2 + reverbShelfB1 * reverbShelfPrevInput2 - reverbShelfA1 * reverbShelfSample2;\r\n\t\t\t\t\treverbShelfSample3 = reverbShelfB0 * reverbShelfInput3 + reverbShelfB1 * reverbShelfPrevInput3 - reverbShelfA1 * reverbShelfSample3;\r\n\t\t\t\t\treverbShelfPrevInput0 = reverbShelfInput0;\r\n\t\t\t\t\treverbShelfPrevInput1 = reverbShelfInput1;\r\n\t\t\t\t\treverbShelfPrevInput2 = reverbShelfInput2;\r\n\t\t\t\t\treverbShelfPrevInput3 = reverbShelfInput3;\r\n\t\t\t\t\treverbDelayLine[reverbDelayPos1] = reverbShelfSample0 * delayInputMult;\r\n\t\t\t\t\treverbDelayLine[reverbDelayPos2] = reverbShelfSample1 * delayInputMult;\r\n\t\t\t\t\treverbDelayLine[reverbDelayPos3] = reverbShelfSample2 * delayInputMult;\r\n\t\t\t\t\treverbDelayLine[reverbDelayPos ] = reverbShelfSample3 * delayInputMult;\r\n\t\t\t\t\treverbDelayPos = (reverbDelayPos + 1) & reverbMask;\r\n\t\t\t\t\tsampleL += reverbSample1 + reverbSample2 + reverbSample3;\r\n\t\t\t\t\tsampleR += reverbSample0 + reverbSample2 - reverbSample3;\r\n\t\t\t\t\treverb += reverbDelta;`\r\n            }\r\n\r\n            effectsSource += `\r\n\t\t\t\t\t\r\n\t\t\t\t\toutputDataL[sampleIndex] += sampleL * mixVolume;\r\n\t\t\t\t\toutputDataR[sampleIndex] += sampleR * mixVolume;\r\n\t\t\t\t\tmixVolume += mixVolumeDelta;`\r\n\r\n            if (usesDelays) {\r\n                effectsSource += `\r\n\t\t\t\t\t\r\n\t\t\t\t\tdelayInputMult += delayInputMultDelta;`\r\n            }\r\n\r\n            effectsSource += `\r\n\t\t\t\t}\r\n\t\t\t\t\r\n\t\t\t\tinstrumentState.mixVolume = mixVolume;\r\n\t\t\t\tinstrumentState.eqFilterVolume = eqFilterVolume;\r\n\t\t\t\t\r\n\t\t\t\t// Avoid persistent denormal or NaN values in the delay buffers and filter history.\r\n\t\t\t\tconst epsilon = (1.0e-24);`\r\n\r\n            if (usesDelays) {\r\n                effectsSource += `\r\n\t\t\t\t\r\n\t\t\t\tinstrumentState.delayInputMult = delayInputMult;`\r\n            }\r\n\r\n            if (usesDistortion) {\r\n                effectsSource += `\r\n\t\t\t\t\r\n\t\t\t\tinstrumentState.distortion = distortion;\r\n\t\t\t\tinstrumentState.distortionDrive = distortionDrive;\r\n\t\t\t\t\r\n\t\t\t\tif (!Number.isFinite(distortionFractionalInput1) || Math.abs(distortionFractionalInput1) < epsilon) distortionFractionalInput1 = 0.0;\r\n\t\t\t\tif (!Number.isFinite(distortionFractionalInput2) || Math.abs(distortionFractionalInput2) < epsilon) distortionFractionalInput2 = 0.0;\r\n\t\t\t\tif (!Number.isFinite(distortionFractionalInput3) || Math.abs(distortionFractionalInput3) < epsilon) distortionFractionalInput3 = 0.0;\r\n\t\t\t\tif (!Number.isFinite(distortionPrevInput) || Math.abs(distortionPrevInput) < epsilon) distortionPrevInput = 0.0;\r\n\t\t\t\tif (!Number.isFinite(distortionNextOutput) || Math.abs(distortionNextOutput) < epsilon) distortionNextOutput = 0.0;\r\n\t\t\t\t\r\n\t\t\t\tinstrumentState.distortionFractionalInput1 = distortionFractionalInput1;\r\n\t\t\t\tinstrumentState.distortionFractionalInput2 = distortionFractionalInput2;\r\n\t\t\t\tinstrumentState.distortionFractionalInput3 = distortionFractionalInput3;\r\n\t\t\t\tinstrumentState.distortionPrevInput = distortionPrevInput;\r\n\t\t\t\tinstrumentState.distortionNextOutput = distortionNextOutput;`\r\n            }\r\n\r\n            if (usesBitcrusher) {\r\n                effectsSource += `\r\n\t\t\t\t\t\r\n\t\t\t\tif (Math.abs(bitcrusherPrevInput) < epsilon) bitcrusherPrevInput = 0.0;\r\n\t\t\t\tif (Math.abs(bitcrusherCurrentOutput) < epsilon) bitcrusherCurrentOutput = 0.0;\r\n\t\t\t\tinstrumentState.bitcrusherPrevInput = bitcrusherPrevInput;\r\n\t\t\t\tinstrumentState.bitcrusherCurrentOutput = bitcrusherCurrentOutput;\r\n\t\t\t\tinstrumentState.bitcrusherPhase = bitcrusherPhase;\r\n\t\t\t\tinstrumentState.bitcrusherPhaseDelta = bitcrusherPhaseDelta;\r\n\t\t\t\tinstrumentState.bitcrusherScale = bitcrusherScale;\r\n\t\t\t\tinstrumentState.bitcrusherFoldLevel = bitcrusherFoldLevel;`\r\n\r\n            }\r\n\r\n            if (usesEqFilter) {\r\n                effectsSource += `\r\n\t\t\t\t\t\r\n\t\t\t\tsynth.sanitizeFilters(filters);\r\n\t\t\t\t// The filter input here is downstream from another filter so we\r\n\t\t\t\t// better make sure it's safe too.\r\n\t\t\t\tif (!(initialFilterInput1 < 100) || !(initialFilterInput2 < 100)) {\r\n\t\t\t\t\tinitialFilterInput1 = 0.0;\r\n\t\t\t\t\tinitialFilterInput2 = 0.0;\r\n\t\t\t\t}\r\n\t\t\t\tif (Math.abs(initialFilterInput1) < epsilon) initialFilterInput1 = 0.0;\r\n\t\t\t\tif (Math.abs(initialFilterInput2) < epsilon) initialFilterInput2 = 0.0;\r\n\t\t\t\tinstrumentState.initialEqFilterInput1 = initialFilterInput1;\r\n\t\t\t\tinstrumentState.initialEqFilterInput2 = initialFilterInput2;`\r\n            }\r\n\r\n            if (usesPanning) {\r\n                effectsSource += `\r\n\t\t\t\t\r\n\t\t\t\tbeepbox.Synth.sanitizeDelayLine(panningDelayLine, panningDelayPos, panningMask);\r\n\t\t\t\tinstrumentState.panningDelayPos = panningDelayPos;\r\n\t\t\t\tinstrumentState.panningVolumeL = panningVolumeL;\r\n\t\t\t\tinstrumentState.panningVolumeR = panningVolumeR;\r\n\t\t\t\tinstrumentState.panningOffsetL = panningOffsetL;\r\n\t\t\t\tinstrumentState.panningOffsetR = panningOffsetR;`\r\n            }\r\n\r\n            if (usesChorus) {\r\n                effectsSource += `\r\n\t\t\t\t\r\n\t\t\t\tbeepbox.Synth.sanitizeDelayLine(chorusDelayLineL, chorusDelayPos, chorusMask);\r\n\t\t\t\tbeepbox.Synth.sanitizeDelayLine(chorusDelayLineR, chorusDelayPos, chorusMask);\r\n\t\t\t\tinstrumentState.chorusPhase = chorusPhase;\r\n\t\t\t\tinstrumentState.chorusDelayPos = chorusDelayPos;\r\n\t\t\t\tinstrumentState.chorusVoiceMult = chorusVoiceMult;\r\n\t\t\t\tinstrumentState.chorusCombinedMult = chorusCombinedMult;`\r\n            }\r\n\r\n            if (usesEcho) {\r\n                effectsSource += `\r\n\t\t\t\t\r\n\t\t\t\tbeepbox.Synth.sanitizeDelayLine(echoDelayLineL, echoDelayPos, echoMask);\r\n\t\t\t\tbeepbox.Synth.sanitizeDelayLine(echoDelayLineR, echoDelayPos, echoMask);\r\n\t\t\t\tinstrumentState.echoDelayPos = echoDelayPos;\r\n\t\t\t\tinstrumentState.echoMult = echoMult;\r\n\t\t\t\tinstrumentState.echoDelayOffsetRatio = echoDelayOffsetRatio;\r\n\t\t\t\t\r\n\t\t\t\tif (!Number.isFinite(echoShelfSampleL) || Math.abs(echoShelfSampleL) < epsilon) echoShelfSampleL = 0.0;\r\n\t\t\t\tif (!Number.isFinite(echoShelfSampleR) || Math.abs(echoShelfSampleR) < epsilon) echoShelfSampleR = 0.0;\r\n\t\t\t\tif (!Number.isFinite(echoShelfPrevInputL) || Math.abs(echoShelfPrevInputL) < epsilon) echoShelfPrevInputL = 0.0;\r\n\t\t\t\tif (!Number.isFinite(echoShelfPrevInputR) || Math.abs(echoShelfPrevInputR) < epsilon) echoShelfPrevInputR = 0.0;\r\n\t\t\t\tinstrumentState.echoShelfSampleL = echoShelfSampleL;\r\n\t\t\t\tinstrumentState.echoShelfSampleR = echoShelfSampleR;\r\n\t\t\t\tinstrumentState.echoShelfPrevInputL = echoShelfPrevInputL;\r\n\t\t\t\tinstrumentState.echoShelfPrevInputR = echoShelfPrevInputR;`\r\n            }\r\n\r\n            if (usesReverb) {\r\n                effectsSource += `\r\n\t\t\t\t\r\n\t\t\t\tbeepbox.Synth.sanitizeDelayLine(reverbDelayLine, reverbDelayPos        , reverbMask);\r\n\t\t\t\tbeepbox.Synth.sanitizeDelayLine(reverbDelayLine, reverbDelayPos +  3041, reverbMask);\r\n\t\t\t\tbeepbox.Synth.sanitizeDelayLine(reverbDelayLine, reverbDelayPos +  6426, reverbMask);\r\n\t\t\t\tbeepbox.Synth.sanitizeDelayLine(reverbDelayLine, reverbDelayPos + 10907, reverbMask);\r\n\t\t\t\tinstrumentState.reverbDelayPos = reverbDelayPos;\r\n\t\t\t\tinstrumentState.reverbMult = reverb;\r\n\t\t\t\t\r\n\t\t\t\tif (!Number.isFinite(reverbShelfSample0) || Math.abs(reverbShelfSample0) < epsilon) reverbShelfSample0 = 0.0;\r\n\t\t\t\tif (!Number.isFinite(reverbShelfSample1) || Math.abs(reverbShelfSample1) < epsilon) reverbShelfSample1 = 0.0;\r\n\t\t\t\tif (!Number.isFinite(reverbShelfSample2) || Math.abs(reverbShelfSample2) < epsilon) reverbShelfSample2 = 0.0;\r\n\t\t\t\tif (!Number.isFinite(reverbShelfSample3) || Math.abs(reverbShelfSample3) < epsilon) reverbShelfSample3 = 0.0;\r\n\t\t\t\tif (!Number.isFinite(reverbShelfPrevInput0) || Math.abs(reverbShelfPrevInput0) < epsilon) reverbShelfPrevInput0 = 0.0;\r\n\t\t\t\tif (!Number.isFinite(reverbShelfPrevInput1) || Math.abs(reverbShelfPrevInput1) < epsilon) reverbShelfPrevInput1 = 0.0;\r\n\t\t\t\tif (!Number.isFinite(reverbShelfPrevInput2) || Math.abs(reverbShelfPrevInput2) < epsilon) reverbShelfPrevInput2 = 0.0;\r\n\t\t\t\tif (!Number.isFinite(reverbShelfPrevInput3) || Math.abs(reverbShelfPrevInput3) < epsilon) reverbShelfPrevInput3 = 0.0;\r\n\t\t\t\tinstrumentState.reverbShelfSample0 = reverbShelfSample0;\r\n\t\t\t\tinstrumentState.reverbShelfSample1 = reverbShelfSample1;\r\n\t\t\t\tinstrumentState.reverbShelfSample2 = reverbShelfSample2;\r\n\t\t\t\tinstrumentState.reverbShelfSample3 = reverbShelfSample3;\r\n\t\t\t\tinstrumentState.reverbShelfPrevInput0 = reverbShelfPrevInput0;\r\n\t\t\t\tinstrumentState.reverbShelfPrevInput1 = reverbShelfPrevInput1;\r\n\t\t\t\tinstrumentState.reverbShelfPrevInput2 = reverbShelfPrevInput2;\r\n\t\t\t\tinstrumentState.reverbShelfPrevInput3 = reverbShelfPrevInput3;`\r\n            }\r\n\r\n            //console.log(effectsSource);\r\n            effectsFunction = new Function(\"synth\", \"outputDataL\", \"outputDataR\", \"bufferIndex\", \"runLength\", \"instrumentState\", effectsSource);\r\n            Synth.effectsFunctionCache[signature] = effectsFunction;\r\n        }\r\n\r\n        effectsFunction(synth, outputDataL, outputDataR, bufferIndex, runLength, instrumentState);\r\n    }\r\n\r\n    private static pulseWidthSynth(synth: Synth, bufferIndex: number, roundedSamplesPerTick: number, tone: Tone, instrument: Instrument): void {\r\n        const data: Float32Array = synth.tempMonoInstrumentSampleBuffer!;\r\n\r\n        let phaseDelta: number = tone.phaseDeltas[0];\r\n        const phaseDeltaScale: number = +tone.phaseDeltaScales[0];\r\n        let expression: number = +tone.expression;\r\n        const expressionDelta: number = +tone.expressionDelta;\r\n        let phase: number = (tone.phases[0] % 1);\r\n\r\n        let pulseWidth: number = tone.pulseWidth;\r\n        const pulseWidthDelta: number = tone.pulseWidthDelta;\r\n\r\n        const filters: DynamicBiquadFilter[] = tone.noteFilters;\r\n        const filterCount: number = tone.noteFilterCount | 0;\r\n        let initialFilterInput1: number = +tone.initialNoteFilterInput1;\r\n        let initialFilterInput2: number = +tone.initialNoteFilterInput2;\r\n        const applyFilters: Function = Synth.applyFilters;\r\n\r\n        const stopIndex: number = bufferIndex + roundedSamplesPerTick;\r\n        for (let sampleIndex: number = bufferIndex; sampleIndex < stopIndex; sampleIndex++) {\r\n\r\n            const sawPhaseA: number = phase % 1;\r\n            const sawPhaseB: number = (phase + pulseWidth) % 1;\r\n\r\n            let pulseWave: number = sawPhaseB - sawPhaseA;\r\n\r\n            // This is a PolyBLEP, which smooths out discontinuities at any frequency to reduce aliasing. \r\n            if (!instrument.aliases) {\r\n                if (sawPhaseA < phaseDelta) {\r\n                    var t = sawPhaseA / phaseDelta;\r\n                    pulseWave += (t + t - t * t - 1) * 0.5;\r\n                } else if (sawPhaseA > 1.0 - phaseDelta) {\r\n                    var t = (sawPhaseA - 1.0) / phaseDelta;\r\n                    pulseWave += (t + t + t * t + 1) * 0.5;\r\n                }\r\n                if (sawPhaseB < phaseDelta) {\r\n                    var t = sawPhaseB / phaseDelta;\r\n                    pulseWave -= (t + t - t * t - 1) * 0.5;\r\n                } else if (sawPhaseB > 1.0 - phaseDelta) {\r\n                    var t = (sawPhaseB - 1.0) / phaseDelta;\r\n                    pulseWave -= (t + t + t * t + 1) * 0.5;\r\n                }\r\n            }\r\n\r\n            const inputSample: number = pulseWave;\r\n            const sample: number = applyFilters(inputSample, initialFilterInput1, initialFilterInput2, filterCount, filters);\r\n            initialFilterInput2 = initialFilterInput1;\r\n            initialFilterInput1 = inputSample;\r\n\r\n            phase += phaseDelta;\r\n            phaseDelta *= phaseDeltaScale;\r\n            pulseWidth += pulseWidthDelta;\r\n\r\n            const output: number = sample * expression;\r\n            expression += expressionDelta;\r\n\r\n            data[sampleIndex] += output;\r\n        }\r\n\r\n        tone.phases[0] = phase;\r\n        tone.phaseDeltas[0] = phaseDelta;\r\n        tone.expression = expression;\r\n        tone.pulseWidth = pulseWidth;\r\n\r\n        synth.sanitizeFilters(filters);\r\n        tone.initialNoteFilterInput1 = initialFilterInput1;\r\n        tone.initialNoteFilterInput2 = initialFilterInput2;\r\n    }\r\n\r\n    private static fmSourceTemplate: string[] = (`\r\n\t\tconst data = synth.tempMonoInstrumentSampleBuffer;\r\n\t\tconst sineWave = beepbox.Config.sineWave;\r\n\t\t\t\r\n\t\t// I'm adding 1000 to the phase to ensure that it's never negative even when modulated by other waves because negative numbers don't work with the modulus operator very well.\r\n\t\tlet operator#Phase       = +((tone.phases[#] % 1) + 1000) * ` + Config.sineWaveLength + `;\r\n\t\tlet operator#PhaseDelta  = +tone.phaseDeltas[#] * ` + Config.sineWaveLength + `;\r\n\t\tlet operator#PhaseDeltaScale = +tone.phaseDeltaScales[#];\r\n\t\tlet operator#OutputMult  = +tone.operatorExpressions[#];\r\n\t\tconst operator#OutputDelta = +tone.operatorExpressionDeltas[#];\r\n\t\tlet operator#Output      = +tone.feedbackOutputs[#];\r\n        const operator#Wave      = tone.operatorWaves[#].samples;\r\n\t\tlet feedbackMult         = +tone.feedbackMult;\r\n\t\tconst feedbackDelta        = +tone.feedbackDelta;\r\n        let expression = +tone.expression;\r\n\t\tconst expressionDelta = +tone.expressionDelta;\r\n\t\t\r\n\t\tconst filters = tone.noteFilters;\r\n\t\tconst filterCount = tone.noteFilterCount|0;\r\n\t\tlet initialFilterInput1 = +tone.initialNoteFilterInput1;\r\n\t\tlet initialFilterInput2 = +tone.initialNoteFilterInput2;\r\n\t\tconst applyFilters = beepbox.Synth.applyFilters;\r\n\t\t\r\n\t\tconst stopIndex = bufferIndex + roundedSamplesPerTick;\r\n\t\tfor (let sampleIndex = bufferIndex; sampleIndex < stopIndex; sampleIndex++) {\r\n\t\t\t\t// INSERT OPERATOR COMPUTATION HERE\r\n\t\t\t\tconst fmOutput = (/*operator#Scaled*/); // CARRIER OUTPUTS\r\n\t\t\t\t\r\n\t\t\tconst inputSample = fmOutput;\r\n\t\t\tconst sample = applyFilters(inputSample, initialFilterInput1, initialFilterInput2, filterCount, filters);\r\n\t\t\tinitialFilterInput2 = initialFilterInput1;\r\n\t\t\tinitialFilterInput1 = inputSample;\r\n\t\t\t\t\r\n\t\t\t\tfeedbackMult += feedbackDelta;\r\n\t\t\t\toperator#OutputMult += operator#OutputDelta;\r\n\t\t\t\toperator#Phase += operator#PhaseDelta;\r\n\t\t\toperator#PhaseDelta *= operator#PhaseDeltaScale;\r\n\t\t\t\r\n\t\t\tconst output = sample * expression;\r\n\t\t\texpression += expressionDelta;\r\n\r\n\t\t\tdata[sampleIndex] += output;\r\n\t\t\t}\r\n\t\t\t\r\n\t\t\ttone.phases[#] = operator#Phase / ` + Config.sineWaveLength + `;\r\n\t\t\ttone.phaseDeltas[#] = operator#PhaseDelta / ` + Config.sineWaveLength + `;\r\n\t\t\ttone.operatorExpressions[#] = operator#OutputMult;\r\n\t\t    tone.feedbackOutputs[#] = operator#Output;\r\n\t\t    tone.feedbackMult = feedbackMult;\r\n\t\t    tone.expression = expression;\r\n\t\t\t\r\n\t\tsynth.sanitizeFilters(filters);\r\n\t\ttone.initialNoteFilterInput1 = initialFilterInput1;\r\n\t\ttone.initialNoteFilterInput2 = initialFilterInput2;\r\n\t\t`).split(\"\\n\");\r\n\r\n    private static operatorSourceTemplate: string[] = (`\r\n\t\t\t\tconst operator#PhaseMix = operator#Phase/* + operator@Scaled*/;\r\n\t\t\t\tconst operator#PhaseInt = operator#PhaseMix|0;\r\n\t\t\t\tconst operator#Index    = operator#PhaseInt & ` + Config.sineWaveMask + `;\r\n                const operator#Sample   = operator#Wave[operator#Index];\r\n                operator#Output         = operator#Sample + (operator#Wave[operator#Index + 1] - operator#Sample) * (operator#PhaseMix - operator#PhaseInt);\r\n\t\t\t\tconst operator#Scaled   = operator#OutputMult * operator#Output;\r\n\t\t`).split(\"\\n\");\r\n\r\n    private static noiseSynth(synth: Synth, bufferIndex: number, runLength: number, tone: Tone, instrumentState: InstrumentState): void {\r\n        const data: Float32Array = synth.tempMonoInstrumentSampleBuffer!;\r\n        const wave: Float32Array = instrumentState.wave!;\r\n        let phaseDelta: number = +tone.phaseDeltas[0];\r\n        const phaseDeltaScale: number = +tone.phaseDeltaScales[0];\r\n        let expression: number = +tone.expression;\r\n        const expressionDelta: number = +tone.expressionDelta;\r\n        let phase: number = (tone.phases[0] % 1) * Config.chipNoiseLength;\r\n        if (tone.phases[0] == 0) {\r\n            // Zero phase means the tone was reset, just give noise a random start phase instead.\r\n            phase = Math.random() * Config.chipNoiseLength;\r\n        }\r\n        const phaseMask: number = Config.chipNoiseLength - 1;\r\n        let noiseSample: number = +tone.noiseSample;\r\n\r\n        const filters: DynamicBiquadFilter[] = tone.noteFilters;\r\n        const filterCount: number = tone.noteFilterCount | 0;\r\n        let initialFilterInput1: number = +tone.initialNoteFilterInput1;\r\n        let initialFilterInput2: number = +tone.initialNoteFilterInput2;\r\n        const applyFilters: Function = Synth.applyFilters;\r\n\r\n        // This is for a \"legacy\" style simplified 1st order lowpass filter with\r\n        // a cutoff frequency that is relative to the tone's fundamental frequency.\r\n        const pitchRelativefilter: number = Math.min(1.0, phaseDelta * instrumentState.noisePitchFilterMult);\r\n\r\n        const stopIndex: number = bufferIndex + runLength;\r\n        for (let sampleIndex: number = bufferIndex; sampleIndex < stopIndex; sampleIndex++) {\r\n            const waveSample: number = wave[phase & phaseMask];\r\n\r\n            noiseSample += (waveSample - noiseSample) * pitchRelativefilter;\r\n\r\n            const inputSample: number = noiseSample;\r\n            const sample: number = applyFilters(inputSample, initialFilterInput1, initialFilterInput2, filterCount, filters);\r\n            initialFilterInput2 = initialFilterInput1;\r\n            initialFilterInput1 = inputSample;\r\n\r\n            phase += phaseDelta;\r\n            phaseDelta *= phaseDeltaScale;\r\n\r\n            const output: number = sample * expression;\r\n            expression += expressionDelta;\r\n\r\n            data[sampleIndex] += output;\r\n        }\r\n\r\n        tone.phases[0] = phase / Config.chipNoiseLength;\r\n        tone.phaseDeltas[0] = phaseDelta;\r\n        tone.expression = expression;\r\n        tone.noiseSample = noiseSample;\r\n\r\n        synth.sanitizeFilters(filters);\r\n        tone.initialNoteFilterInput1 = initialFilterInput1;\r\n        tone.initialNoteFilterInput2 = initialFilterInput2;\r\n    }\r\n\r\n    private static spectrumSynth(synth: Synth, bufferIndex: number, runLength: number, tone: Tone, instrumentState: InstrumentState): void {\r\n        const data: Float32Array = synth.tempMonoInstrumentSampleBuffer!;\r\n        const wave: Float32Array = instrumentState.wave!;\r\n        const samplesInPeriod: number = (1 << 7);\r\n        let phaseDelta: number = tone.phaseDeltas[0] * samplesInPeriod;\r\n        const phaseDeltaScale: number = +tone.phaseDeltaScales[0];\r\n        let expression: number = +tone.expression;\r\n        const expressionDelta: number = +tone.expressionDelta;\r\n        let noiseSample: number = +tone.noiseSample;\r\n\r\n        const filters: DynamicBiquadFilter[] = tone.noteFilters;\r\n        const filterCount: number = tone.noteFilterCount | 0;\r\n        let initialFilterInput1: number = +tone.initialNoteFilterInput1;\r\n        let initialFilterInput2: number = +tone.initialNoteFilterInput2;\r\n        const applyFilters: Function = Synth.applyFilters;\r\n\r\n        let phase: number = (tone.phases[0] % 1) * Config.spectrumNoiseLength;\r\n        // Zero phase means the tone was reset, just give noise a random start phase instead.\r\n        if (tone.phases[0] == 0) phase = Synth.findRandomZeroCrossing(wave, Config.spectrumNoiseLength) + phaseDelta;\r\n        const phaseMask: number = Config.spectrumNoiseLength - 1;\r\n\r\n        // This is for a \"legacy\" style simplified 1st order lowpass filter with\r\n        // a cutoff frequency that is relative to the tone's fundamental frequency.\r\n        const pitchRelativefilter: number = Math.min(1.0, phaseDelta);\r\n\r\n        const stopIndex: number = bufferIndex + runLength;\r\n        for (let sampleIndex: number = bufferIndex; sampleIndex < stopIndex; sampleIndex++) {\r\n            const phaseInt: number = phase | 0;\r\n            const index: number = phaseInt & phaseMask;\r\n            let waveSample: number = wave[index];\r\n            const phaseRatio: number = phase - phaseInt;\r\n            waveSample += (wave[index + 1] - waveSample) * phaseRatio;\r\n\r\n            noiseSample += (waveSample - noiseSample) * pitchRelativefilter;\r\n\r\n\r\n            const inputSample: number = noiseSample;\r\n            const sample: number = applyFilters(inputSample, initialFilterInput1, initialFilterInput2, filterCount, filters);\r\n            initialFilterInput2 = initialFilterInput1;\r\n            initialFilterInput1 = inputSample;\r\n\r\n            phase += phaseDelta;\r\n            phaseDelta *= phaseDeltaScale;\r\n\r\n            const output: number = sample * expression;\r\n            expression += expressionDelta;\r\n\r\n            data[sampleIndex] += output;\r\n        }\r\n\r\n        tone.phases[0] = phase / Config.spectrumNoiseLength;\r\n        tone.phaseDeltas[0] = phaseDelta / samplesInPeriod;\r\n        tone.expression = expression;\r\n        tone.noiseSample = noiseSample;\r\n\r\n        synth.sanitizeFilters(filters);\r\n        tone.initialNoteFilterInput1 = initialFilterInput1;\r\n        tone.initialNoteFilterInput2 = initialFilterInput2;\r\n    }\r\n\r\n    private static drumsetSynth(synth: Synth, bufferIndex: number, runLength: number, tone: Tone, instrumentState: InstrumentState): void {\r\n        const data: Float32Array = synth.tempMonoInstrumentSampleBuffer!;\r\n        let wave: Float32Array = instrumentState.getDrumsetWave(tone.drumsetPitch!);\r\n        const referenceDelta: number = InstrumentState.drumsetIndexReferenceDelta(tone.drumsetPitch!);\r\n        let phaseDelta: number = tone.phaseDeltas[0] / referenceDelta;\r\n        const phaseDeltaScale: number = +tone.phaseDeltaScales[0];\r\n        let expression: number = +tone.expression;\r\n        const expressionDelta: number = +tone.expressionDelta;\r\n\r\n        const filters: DynamicBiquadFilter[] = tone.noteFilters;\r\n        const filterCount: number = tone.noteFilterCount | 0;\r\n        let initialFilterInput1: number = +tone.initialNoteFilterInput1;\r\n        let initialFilterInput2: number = +tone.initialNoteFilterInput2;\r\n        const applyFilters: Function = Synth.applyFilters;\r\n\r\n        let phase: number = (tone.phases[0] % 1) * Config.spectrumNoiseLength;\r\n        // Zero phase means the tone was reset, just give noise a random start phase instead.\r\n        if (tone.phases[0] == 0) phase = Synth.findRandomZeroCrossing(wave, Config.spectrumNoiseLength) + phaseDelta;\r\n        const phaseMask: number = Config.spectrumNoiseLength - 1;\r\n\r\n        const stopIndex: number = bufferIndex + runLength;\r\n        for (let sampleIndex: number = bufferIndex; sampleIndex < stopIndex; sampleIndex++) {\r\n            const phaseInt: number = phase | 0;\r\n            const index: number = phaseInt & phaseMask;\r\n            let noiseSample: number = wave[index];\r\n            const phaseRatio: number = phase - phaseInt;\r\n            noiseSample += (wave[index + 1] - noiseSample) * phaseRatio;\r\n\r\n            const inputSample: number = noiseSample;\r\n            const sample: number = applyFilters(inputSample, initialFilterInput1, initialFilterInput2, filterCount, filters);\r\n            initialFilterInput2 = initialFilterInput1;\r\n            initialFilterInput1 = inputSample;\r\n\r\n            phase += phaseDelta;\r\n            phaseDelta *= phaseDeltaScale;\r\n\r\n            const output: number = sample * expression;\r\n            expression += expressionDelta;\r\n\r\n            data[sampleIndex] += output;\r\n        }\r\n\r\n        tone.phases[0] = phase / Config.spectrumNoiseLength;\r\n        tone.phaseDeltas[0] = phaseDelta * referenceDelta;\r\n        tone.expression = expression;\r\n\r\n        synth.sanitizeFilters(filters);\r\n        tone.initialNoteFilterInput1 = initialFilterInput1;\r\n        tone.initialNoteFilterInput2 = initialFilterInput2;\r\n    }\r\n\r\n    private static modSynth(synth: Synth, stereoBufferIndex: number, roundedSamplesPerTick: number, tone: Tone, instrument: Instrument): void {\r\n        // Note: present modulator value is tone.expressionStarts[0].\r\n\r\n        if (!synth.song) return;\r\n\r\n        let mod: number = Config.modCount - 1 - tone.pitches[0];\r\n\r\n        // Flagged as invalid because unused by current settings, skip\r\n        if (instrument.invalidModulators[mod]) return;\r\n\r\n        let setting: number = instrument.modulators[mod];\r\n\r\n        // Generate list of used instruments\r\n        let usedInstruments: number[] = [];\r\n        if (Config.modulators[instrument.modulators[mod]].forSong) {\r\n            // Instrument doesn't matter for song, just push a random index to run the modsynth once\r\n            usedInstruments.push(0);\r\n        } else {\r\n            // All\r\n            if (instrument.modInstruments[mod] == synth.song.channels[instrument.modChannels[mod]].instruments.length) {\r\n                for (let i: number = 0; i < synth.song.channels[instrument.modChannels[mod]].instruments.length; i++) {\r\n                    usedInstruments.push(i);\r\n                }\r\n            }\r\n            // Active\r\n            else if (instrument.modInstruments[mod] > synth.song.channels[instrument.modChannels[mod]].instruments.length) {\r\n                if (synth.song.getPattern(instrument.modChannels[mod], synth.bar) != null)\r\n                    usedInstruments = synth.song.getPattern(instrument.modChannels[mod], synth.bar)!.instruments;\r\n            } else {\r\n                usedInstruments.push(instrument.modInstruments[mod]);\r\n            }\r\n        }\r\n\r\n        for (let instrumentIndex: number = 0; instrumentIndex < usedInstruments.length; instrumentIndex++) {\r\n\r\n            synth.setModValue(tone.expression, tone.expression + tone.expressionDelta, mod, instrument.modChannels[mod], usedInstruments[instrumentIndex], setting);\r\n\r\n            // Reset arps, but only at the start of the note\r\n            if (setting == Config.modulators.dictionary[\"reset arp\"].index && synth.tick == 0 && tone.noteStartPart == synth.beat * Config.partsPerBeat + synth.part) {\r\n                synth.song.channels[instrument.modChannels[mod]].instruments[usedInstruments[instrumentIndex]].arpTime = 0;\r\n            }\r\n            // Denote next bar skip\r\n            else if (setting == Config.modulators.dictionary[\"next bar\"].index) {\r\n                synth.wantToSkip = true;\r\n            }\r\n            // Extra info for eq filter target needs to be set as well\r\n            else if (setting == Config.modulators.dictionary[\"eq filter\"].index) {\r\n                const tgtInstrument = synth.song.channels[instrument.modChannels[mod]].instruments[usedInstruments[instrumentIndex]];\r\n\r\n                if (!tgtInstrument.eqFilterType) {\r\n\r\n                    let dotTarget = instrument.modFilterTypes[mod] | 0;\r\n\r\n                    if (dotTarget == 0) { // Morph. Figure out the target filter's X/Y coords for this point. If no point exists with this index, or point types don't match, do lerp-out for this point and lerp-in of a new point\r\n\r\n                        let pinIdx: number = 0;\r\n                        const currentPart: number = synth.getTicksIntoBar() / Config.ticksPerPart;\r\n                        while (tone.note!.start + tone.note!.pins[pinIdx].time <= currentPart) pinIdx++;\r\n                        // 0 to 1 based on distance to next morph\r\n                        //let lerpStartRatio: number = (currentPart - tone.note!.pins[pinIdx - 1].time) / (tone.note!.pins[pinIdx].time - tone.note!.pins[pinIdx - 1].time);\r\n                        let lerpEndRatio: number = ((currentPart - tone.note!.start + (roundedSamplesPerTick / (synth.getSamplesPerTick() * Config.ticksPerPart)) * Config.ticksPerPart) - tone.note!.pins[pinIdx - 1].time) / (tone.note!.pins[pinIdx].time - tone.note!.pins[pinIdx - 1].time);\r\n\r\n                        // Compute the new settings to go to.\r\n                        if (tgtInstrument.eqSubFilters[tone.note!.pins[pinIdx - 1].size] != null || tgtInstrument.eqSubFilters[tone.note!.pins[pinIdx].size] != null) {\r\n                            tgtInstrument.tmpEqFilterEnd = FilterSettings.lerpFilters(tgtInstrument.eqSubFilters[tone.note!.pins[pinIdx - 1].size]!, tgtInstrument.eqSubFilters[tone.note!.pins[pinIdx].size]!, lerpEndRatio);\r\n                        } else {\r\n                            // No mutation will occur to the filter object so we can safely return it without copying\r\n                            tgtInstrument.tmpEqFilterEnd = tgtInstrument.eqFilter;\r\n                        }\r\n\r\n                    } // Target (1 is dot 1 X, 2 is dot 1 Y, etc.)\r\n                    else {\r\n                        // Since we are directly manipulating the filter, make sure it is a new one and not an actual one of the instrument's filters\r\n                        for (let i: number = 0; i < Config.filterMorphCount; i++) {\r\n                            if (tgtInstrument.tmpEqFilterEnd == tgtInstrument.eqSubFilters[i] && tgtInstrument.tmpEqFilterEnd != null) {\r\n                                tgtInstrument.tmpEqFilterEnd = new FilterSettings();\r\n                                tgtInstrument.tmpEqFilterEnd.fromJsonObject(tgtInstrument.eqSubFilters[i]!.toJsonObject());\r\n                            }\r\n                        }\r\n                        if (tgtInstrument.tmpEqFilterEnd == null) {\r\n                            tgtInstrument.tmpEqFilterEnd = new FilterSettings();\r\n                            tgtInstrument.tmpEqFilterEnd.fromJsonObject(tgtInstrument.eqFilter.toJsonObject());\r\n                        }\r\n\r\n                        if (tgtInstrument.tmpEqFilterEnd.controlPointCount > Math.floor((dotTarget - 1) / 2)) {\r\n                            if (dotTarget % 2) { // X\r\n                                tgtInstrument.tmpEqFilterEnd.controlPoints[Math.floor((dotTarget - 1) / 2)].freq = tone.expression + tone.expressionDelta;\r\n                            } else { // Y\r\n                                tgtInstrument.tmpEqFilterEnd.controlPoints[Math.floor((dotTarget - 1) / 2)].gain = tone.expression + tone.expressionDelta;\r\n                            }\r\n                        }\r\n                    }\r\n                }\r\n            }\r\n            // Extra info for note filter target needs to be set as well\r\n            else if (setting == Config.modulators.dictionary[\"note filter\"].index) {\r\n                const tgtInstrument = synth.song.channels[instrument.modChannels[mod]].instruments[usedInstruments[instrumentIndex]];\r\n\r\n                if (!tgtInstrument.noteFilterType) {\r\n                    let dotTarget = instrument.modFilterTypes[mod] | 0;\r\n\r\n                    if (dotTarget == 0) { // Morph. Figure out the target filter's X/Y coords for this point. If no point exists with this index, or point types don't match, do lerp-out for this point and lerp-in of a new point\r\n\r\n                        let pinIdx: number = 0;\r\n                        const currentPart: number = synth.getTicksIntoBar() / Config.ticksPerPart;\r\n                        while (tone.note!.start + tone.note!.pins[pinIdx].time <= currentPart) pinIdx++;\r\n                        // 0 to 1 based on distance to next morph\r\n                        //let lerpStartRatio: number = (currentPart - tone.note!.pins[pinIdx - 1].time) / (tone.note!.pins[pinIdx].time - tone.note!.pins[pinIdx - 1].time);\r\n                        let lerpEndRatio: number = ((currentPart - tone.note!.start + (roundedSamplesPerTick / (synth.getSamplesPerTick() * Config.ticksPerPart)) * Config.ticksPerPart) - tone.note!.pins[pinIdx - 1].time) / (tone.note!.pins[pinIdx].time - tone.note!.pins[pinIdx - 1].time);\r\n\r\n                        // Compute the new settings to go to.\r\n                        if (tgtInstrument.noteSubFilters[tone.note!.pins[pinIdx - 1].size] != null || tgtInstrument.noteSubFilters[tone.note!.pins[pinIdx].size] != null) {\r\n                            tgtInstrument.tmpNoteFilterEnd = FilterSettings.lerpFilters(tgtInstrument.noteSubFilters[tone.note!.pins[pinIdx - 1].size]!, tgtInstrument.noteSubFilters[tone.note!.pins[pinIdx].size]!, lerpEndRatio);\r\n                        } else {\r\n                            // No mutation will occur to the filter object so we can safely return it without copying\r\n                            tgtInstrument.tmpNoteFilterEnd = tgtInstrument.noteFilter;\r\n                        }\r\n\r\n                    } // Target (1 is dot 1 X, 2 is dot 1 Y, etc.)\r\n                    else {\r\n                        // Since we are directly manipulating the filter, make sure it is a new one and not an actual one of the instrument's filters\r\n\r\n                        for (let i: number = 0; i < Config.filterMorphCount; i++) {\r\n                            if (tgtInstrument.tmpNoteFilterEnd == tgtInstrument.noteSubFilters[i] && tgtInstrument.tmpNoteFilterEnd != null) {\r\n                                tgtInstrument.tmpNoteFilterEnd = new FilterSettings();\r\n                                tgtInstrument.tmpNoteFilterEnd.fromJsonObject(tgtInstrument.noteSubFilters[i]!.toJsonObject());\r\n                            }\r\n                        }\r\n                        if (tgtInstrument.tmpNoteFilterEnd == null) {\r\n                            tgtInstrument.tmpNoteFilterEnd = new FilterSettings();\r\n                            tgtInstrument.tmpNoteFilterEnd.fromJsonObject(tgtInstrument.noteFilter.toJsonObject());\r\n                        }\r\n\r\n                        if (tgtInstrument.tmpNoteFilterEnd.controlPointCount > Math.floor((dotTarget - 1) / 2)) {\r\n                            if (dotTarget % 2) { // X\r\n                                tgtInstrument.tmpNoteFilterEnd.controlPoints[Math.floor((dotTarget - 1) / 2)].freq = tone.expression + tone.expressionDelta;\r\n                            } else { // Y\r\n                                tgtInstrument.tmpNoteFilterEnd.controlPoints[Math.floor((dotTarget - 1) / 2)].gain = tone.expression + tone.expressionDelta;\r\n                            }\r\n                        }\r\n                    }\r\n                }\r\n            }\r\n        }\r\n    }\r\n\r\n    private static findRandomZeroCrossing(wave: Float32Array, waveLength: number): number {\r\n        let phase: number = Math.random() * waveLength;\r\n        const phaseMask: number = waveLength - 1;\r\n\r\n        // Spectrum and drumset waves sounds best when they start at a zero crossing,\r\n        // otherwise they pop. Try to find a zero crossing.\r\n        let indexPrev: number = phase & phaseMask;\r\n        let wavePrev: number = wave[indexPrev];\r\n        const stride: number = 16;\r\n        for (let attemptsRemaining: number = 128; attemptsRemaining > 0; attemptsRemaining--) {\r\n            const indexNext: number = (indexPrev + stride) & phaseMask;\r\n            const waveNext: number = wave[indexNext];\r\n            if (wavePrev * waveNext <= 0.0) {\r\n                // Found a zero crossing! Now let's narrow it down to two adjacent sample indices.\r\n                for (let i: number = 0; i < stride; i++) {\r\n                    const innerIndexNext: number = (indexPrev + 1) & phaseMask;\r\n                    const innerWaveNext: number = wave[innerIndexNext];\r\n                    if (wavePrev * innerWaveNext <= 0.0) {\r\n                        // Found the zero crossing again! Now let's find the exact intersection.\r\n                        const slope: number = innerWaveNext - wavePrev;\r\n                        phase = indexPrev;\r\n                        if (Math.abs(slope) > 0.00000001) {\r\n                            phase += -wavePrev / slope;\r\n                        }\r\n                        phase = Math.max(0, phase) % waveLength;\r\n                        break;\r\n                    } else {\r\n                        indexPrev = innerIndexNext;\r\n                        wavePrev = innerWaveNext;\r\n                    }\r\n                }\r\n                break;\r\n            } else {\r\n                indexPrev = indexNext;\r\n                wavePrev = waveNext;\r\n            }\r\n        }\r\n\r\n        return phase;\r\n    }\r\n\r\n    public static instrumentVolumeToVolumeMult(instrumentVolume: number): number {\r\n        return (instrumentVolume == -Config.volumeRange / 2.0) ? 0.0 : Math.pow(2, Config.volumeLogScale * instrumentVolume);\r\n    }\r\n    public static volumeMultToInstrumentVolume(volumeMult: number): number {\r\n        return (volumeMult <= 0.0) ? -Config.volumeRange / 2 : Math.min(Config.volumeRange, (Math.log(volumeMult) / Math.LN2) / Config.volumeLogScale);\r\n    }\r\n    public static noteSizeToVolumeMult(size: number): number {\r\n        return Math.pow(Math.max(0.0, size) / Config.noteSizeMax, 1.5);\r\n    }\r\n    public static volumeMultToNoteSize(volumeMult: number): number {\r\n        return Math.pow(Math.max(0.0, volumeMult), 1 / 1.5) * Config.noteSizeMax;\r\n    }\r\n\r\n    public static fadeInSettingToSeconds(setting: number): number {\r\n        return 0.0125 * (0.95 * setting + 0.05 * setting * setting);\r\n    }\r\n    public static secondsToFadeInSetting(seconds: number): number {\r\n        return clamp(0, Config.fadeInRange, Math.round((-0.95 + Math.sqrt(0.9025 + 0.2 * seconds / 0.0125)) / 0.1));\r\n    }\r\n    public static fadeOutSettingToTicks(setting: number): number {\r\n        return Config.fadeOutTicks[setting];\r\n    }\r\n    public static ticksToFadeOutSetting(ticks: number): number {\r\n        let lower: number = Config.fadeOutTicks[0];\r\n        if (ticks <= lower) return 0;\r\n        for (let i: number = 1; i < Config.fadeOutTicks.length; i++) {\r\n            let upper: number = Config.fadeOutTicks[i];\r\n            if (ticks <= upper) return (ticks < (lower + upper) / 2) ? i - 1 : i;\r\n            lower = upper;\r\n        }\r\n        return Config.fadeOutTicks.length - 1;\r\n    }\r\n\r\n    public static detuneToCents(detune: number): number {\r\n        // BeepBox formula, for reference:\r\n        // return detune * (Math.abs(detune) + 1) / 2;\r\n        return detune - Config.detuneCenter;\r\n    }\r\n    public static centsToDetune(cents: number): number {\r\n        // BeepBox formula, for reference:\r\n        // return Math.sign(cents) * (Math.sqrt(1 + 8 * Math.abs(cents)) - 1) / 2.0;\r\n        return cents + Config.detuneCenter;\r\n    }\r\n\r\n    public static getOperatorWave(waveform: number, pulseWidth: number) {\r\n        if (waveform != 2) {\r\n            return Config.operatorWaves[waveform];\r\n        }\r\n        else {\r\n            return Config.pwmOperatorWaves[pulseWidth];\r\n        }\r\n    }\r\n\r\n    private getSamplesPerTick(): number {\r\n        if (this.song == null) return 0;\r\n        let beatsPerMinute: number = this.song.getBeatsPerMinute();\r\n        if (this.isModActive(Config.modulators.dictionary[\"tempo\"].index)) {\r\n            beatsPerMinute = this.getModValue(Config.modulators.dictionary[\"tempo\"].index);\r\n        }\r\n        return this.getSamplesPerTickSpecificBPM(beatsPerMinute);\r\n    }\r\n\r\n    private getSamplesPerTickSpecificBPM(beatsPerMinute: number): number {\r\n        const beatsPerSecond: number = beatsPerMinute / 60.0;\r\n        const partsPerSecond: number = Config.partsPerBeat * beatsPerSecond;\r\n        const tickPerSecond: number = Config.ticksPerPart * partsPerSecond;\r\n        return this.samplesPerSecond / tickPerSecond;\r\n    }\r\n\r\n    public static fittingPowerOfTwo(x: number): number {\r\n        return 1 << (32 - Math.clz32(Math.ceil(x) - 1));\r\n    }\r\n\r\n    private sanitizeFilters(filters: DynamicBiquadFilter[]): void {\r\n        let reset: boolean = false;\r\n        for (const filter of filters) {\r\n            const output1: number = Math.abs(filter.output1);\r\n            const output2: number = Math.abs(filter.output2);\r\n            // If either is a large value, Infinity, or NaN, then just reset all filter history.\r\n            if (!(output1 < 100) || !(output2 < 100)) {\r\n                reset = true;\r\n                break;\r\n            }\r\n            if (output1 < epsilon) filter.output1 = 0.0;\r\n            if (output2 < epsilon) filter.output2 = 0.0;\r\n        }\r\n        if (reset) {\r\n            for (const filter of filters) {\r\n                filter.output1 = 0.0;\r\n                filter.output2 = 0.0;\r\n            }\r\n        }\r\n    }\r\n\r\n    public static sanitizeDelayLine(delayLine: Float32Array, lastIndex: number, mask: number): void {\r\n        while (true) {\r\n            lastIndex--;\r\n            const index: number = lastIndex & mask;\r\n            const sample: number = Math.abs(delayLine[index]);\r\n            if (Number.isFinite(sample) && (sample == 0.0 || sample >= epsilon)) break;\r\n            delayLine[index] = 0.0;\r\n        }\r\n    }\r\n\r\n    public static applyFilters(sample: number, input1: number, input2: number, filterCount: number, filters: DynamicBiquadFilter[]): number {\r\n        for (let i: number = 0; i < filterCount; i++) {\r\n            const filter: DynamicBiquadFilter = filters[i];\r\n            const output1: number = filter.output1;\r\n            const output2: number = filter.output2;\r\n            const a1: number = filter.a1;\r\n            const a2: number = filter.a2;\r\n            const b0: number = filter.b0;\r\n            const b1: number = filter.b1;\r\n            const b2: number = filter.b2;\r\n            sample = b0 * sample + b1 * input1 + b2 * input2 - a1 * output1 - a2 * output2;\r\n            filter.a1 = a1 + filter.a1Delta;\r\n            filter.a2 = a2 + filter.a2Delta;\r\n            if (filter.useMultiplicativeInputCoefficients) {\r\n                filter.b0 = b0 * filter.b0Delta;\r\n                filter.b1 = b1 * filter.b1Delta;\r\n                filter.b2 = b2 * filter.b2Delta;\r\n            } else {\r\n                filter.b0 = b0 + filter.b0Delta;\r\n                filter.b1 = b1 + filter.b1Delta;\r\n                filter.b2 = b2 + filter.b2Delta;\r\n            }\r\n            filter.output2 = output1;\r\n            filter.output1 = sample;\r\n            // Updating the input values is waste if the next filter doesn't exist...\r\n            input2 = output2;\r\n            input1 = output1;\r\n        }\r\n        return sample;\r\n    }\r\n}\r\n\r\n// When compiling synth.ts as a standalone module named \"beepbox\", expose these classes as members to JavaScript:\r\nexport { Dictionary, DictionaryArray, FilterType, EnvelopeType, InstrumentType, Transition, Chord, Envelope, Config };\r\n","// Copyright (c) 2012-2022 John Nesky and contributing authors, distributed under the MIT license, see accompanying the LICENSE.md file.\r\n\r\nexport class Change {\r\n\tprivate _noop: boolean = true;\r\n\t\t\r\n\tprotected _didSomething(): void {\r\n\t\tthis._noop = false;\r\n\t}\r\n\t\t\r\n\tpublic isNoop(): boolean {\r\n\t\treturn this._noop;\r\n\t}\r\n\t\t\r\n\t\tpublic commit(): void {}\r\n}\r\n\r\nexport class UndoableChange extends Change {\r\n\tprivate _reversed: boolean;\r\n\tprivate _doneForwards: boolean;\r\n\tconstructor(reversed: boolean) {\r\n\t\tsuper();\r\n\t\tthis._reversed = reversed;\r\n\t\tthis._doneForwards = !reversed;\r\n\t}\r\n\t\t\r\n\tpublic undo(): void {\r\n\t\tif (this._reversed) {\r\n\t\t\tthis._doForwards();\r\n\t\t\tthis._doneForwards = true;\r\n\t\t} else {\r\n\t\t\tthis._doBackwards();\r\n\t\t\tthis._doneForwards = false;\r\n\t\t}\r\n\t}\r\n\t\t\r\n\tpublic redo(): void {\r\n\t\tif (this._reversed) {\r\n\t\t\tthis._doBackwards();\r\n\t\t\tthis._doneForwards = false;\r\n\t\t} else {\r\n\t\t\tthis._doForwards();\r\n\t\t\tthis._doneForwards = true;\r\n\t\t}\r\n\t}\r\n\t\t\r\n\t// isDoneForwards() returns whether or not the Change was most recently \r\n\t// performed forwards or backwards. If the change created something, do not \r\n\t// delete it in the change destructor unless the Change was performed \r\n\t// backwards: \r\n\tprotected _isDoneForwards(): boolean {\r\n\t\treturn this._doneForwards;\r\n\t}\r\n\t\t\r\n\tprotected _doForwards(): void {\r\n\t\tthrow new Error(\"Change.doForwards(): Override me.\");\r\n\t}\r\n\t\t\r\n\tprotected _doBackwards(): void {\r\n\t\tthrow new Error(\"Change.doBackwards(): Override me.\");\r\n\t}\r\n}\r\n\r\nexport class ChangeGroup extends Change {\r\n\tconstructor() {\r\n\t\tsuper();\r\n\t}\r\n\t\t\r\n\tpublic append(change: Change): void {\r\n\t\tif (change.isNoop()) return;\r\n\t\tthis._didSomething();\r\n\t}\r\n}\r\n\r\nexport class ChangeSequence extends UndoableChange {\r\n\tprivate _changes: UndoableChange[];\r\n\tconstructor(changes?: UndoableChange[]) {\r\n\t\tsuper(false);\r\n\t\tif (changes == undefined) {\r\n\t\t\tthis._changes = [];\r\n\t\t} else {\r\n\t\t\tthis._changes = changes.concat();\r\n\t\t}\r\n\t}\r\n\t\t\r\n\tpublic append(change: UndoableChange): void {\r\n\t\tif (change.isNoop()) return;\r\n\t\tthis._changes[this._changes.length] = change;\r\n\t\tthis._didSomething();\r\n\t}\r\n\t\t\r\n\tprotected _doForwards(): void {\r\n\t\tfor (let i: number = 0; i < this._changes.length; i++) {\r\n\t\t\tthis._changes[i].redo();\r\n\t\t}\r\n\t}\r\n\t\t\r\n\tprotected _doBackwards(): void {\r\n\t\t\tfor (let i: number = this._changes.length-1; i >= 0 ; i--) {\r\n\t\t\tthis._changes[i].undo();\r\n\t\t}\r\n\t}\r\n}\r\n","// Copyright (c) 2012-2022 John Nesky and contributing authors, distributed under the MIT license, see accompanying the LICENSE.md file.\r\n\r\nimport { Algorithm, Dictionary, FilterType, InstrumentType, EffectType, AutomationTarget, Config, effectsIncludeDistortion } from \"../synth/SynthConfig\";\r\nimport { NotePin, Note, makeNotePin, Pattern, FilterSettings, FilterControlPoint, SpectrumWave, HarmonicsWave, Instrument, Channel, Song, Synth } from \"../synth/synth\";\r\nimport { Preset, PresetCategory, EditorConfig } from \"./EditorConfig\";\r\nimport { Change, ChangeGroup, ChangeSequence, UndoableChange } from \"./Change\";\r\nimport { SongDocument } from \"./SongDocument\";\r\nimport { ColorConfig } from \"./ColorConfig\";\r\n\r\nexport function patternsContainSameInstruments(pattern1Instruments: number[], pattern2Instruments: number[]): boolean {\r\n    const pattern2Has1Instruments: boolean = pattern1Instruments.every(instrument => pattern2Instruments.indexOf(instrument) != -1);\r\n    const pattern1Has2Instruments: boolean = pattern2Instruments.every(instrument => pattern1Instruments.indexOf(instrument) != -1);\r\n    return pattern2Has1Instruments && pattern1Has2Instruments && pattern2Instruments.length == pattern1Instruments.length;\r\n}\r\n\r\nexport function discardInvalidPatternInstruments(instruments: number[], song: Song, channelIndex: number) {\r\n    const uniqueInstruments: Set<number> = new Set(instruments);\r\n    instruments.length = 0;\r\n    instruments.push(...uniqueInstruments);\r\n    for (let i: number = 0; i < instruments.length; i++) {\r\n        if (instruments[i] >= song.channels[channelIndex].instruments.length) {\r\n            instruments.splice(i, 1);\r\n            i--;\r\n        }\r\n    }\r\n    if (instruments.length > song.getMaxInstrumentsPerPattern(channelIndex)) {\r\n        instruments.length = song.getMaxInstrumentsPerPattern(channelIndex);\r\n    }\r\n    if (instruments.length <= 0) {\r\n        instruments[0] = 0;\r\n    }\r\n}\r\n\r\nexport function unionOfUsedNotes(pattern: Pattern, flags: boolean[]): void {\r\n    for (const note of pattern.notes) {\r\n        for (const pitch of note.pitches) {\r\n            for (const pin of note.pins) {\r\n                const key: number = (pitch + pin.interval) % 12;\r\n                if (!flags[key]) {\r\n                    flags[key] = true;\r\n                }\r\n            }\r\n        }\r\n    }\r\n}\r\n\r\nexport function generateScaleMap(oldScaleFlags: ReadonlyArray<boolean>, newScaleValue: number, customScaleFlags: ReadonlyArray<boolean>): number[] {\r\n    const newScaleFlags: ReadonlyArray<boolean> = newScaleValue == Config.scales[\"dictionary\"][\"Custom\"].index ? customScaleFlags : Config.scales[newScaleValue].flags;\r\n\tconst oldScale: number[] = [];\r\n\tconst newScale: number[] = [];\r\n\tfor (let i: number = 0; i < 12; i++) {\r\n\t\tif (oldScaleFlags[i]) oldScale.push(i);\r\n\t\tif (newScaleFlags[i]) newScale.push(i);\r\n\t}\r\n\tconst largerToSmaller: boolean = oldScale.length > newScale.length;\r\n\tconst smallerScale: number[] = largerToSmaller ? newScale : oldScale;\r\n\tconst largerScale: number[] = largerToSmaller ? oldScale : newScale;\r\n\r\n    const roles: string[] = [\"root\", \"second\", \"second\", \"third\", \"third\", \"fourth\", \"tritone\", \"fifth\", \"sixth\", \"sixth\", \"seventh\", \"seventh\", \"root\"];\r\n    let bestScore: number = Number.MAX_SAFE_INTEGER;\r\n    let bestIndexMap: number[] = [];\r\n    const stack: number[][] = [[0]]; // Root always maps to root.\r\n\r\n    while (stack.length > 0) {\r\n        const indexMap: number[] = stack.pop()!;\r\n\r\n        if (indexMap.length == smallerScale.length) {\r\n            // Score this mapping.\r\n            let score: number = 0;\r\n            for (let i: number = 0; i < indexMap.length; i++) {\r\n                score += Math.abs(smallerScale[i] - largerScale[indexMap[i]]);\r\n                if (roles[smallerScale[i]] != roles[largerScale[indexMap[i]]]) {\r\n                    // Penalize changing roles.\r\n                    score += 0.75;\r\n                }\r\n            }\r\n            if (bestScore > score) {\r\n                bestScore = score;\r\n                bestIndexMap = indexMap;\r\n            }\r\n        } else {\r\n            // Recursively choose next indices for mapping.\r\n            const lowIndex: number = indexMap[indexMap.length - 1] + 1;\r\n            const highIndex: number = largerScale.length - smallerScale.length + indexMap.length;\r\n            for (let i: number = lowIndex; i <= highIndex; i++) {\r\n                stack.push(indexMap.concat(i));\r\n            }\r\n        }\r\n    }\r\n\r\n    const sparsePitchMap: number[][] = [];\r\n    for (let i: number = 0; i < bestIndexMap.length; i++) {\r\n        const smallerScalePitch = smallerScale[i];\r\n        const largerScalePitch = largerScale[bestIndexMap[i]];\r\n        sparsePitchMap[i] = largerToSmaller\r\n            ? [largerScalePitch, smallerScalePitch]\r\n            : [smallerScalePitch, largerScalePitch];\r\n    }\r\n\r\n    // To make it easier to wrap around.\r\n    sparsePitchMap.push([12, 12]);\r\n    newScale.push(12);\r\n\r\n    let sparseIndex: number = 0;\r\n    const fullPitchMap: number[] = [];\r\n    for (let i: number = 0; i < 12; i++) {\r\n        const oldLow: number = sparsePitchMap[sparseIndex][0];\r\n        const newLow: number = sparsePitchMap[sparseIndex][1];\r\n        const oldHigh: number = sparsePitchMap[sparseIndex + 1][0];\r\n        const newHigh: number = sparsePitchMap[sparseIndex + 1][1];\r\n        if (i == oldHigh - 1) sparseIndex++;\r\n\r\n        const transformedPitch: number = (i - oldLow) * (newHigh - newLow) / (oldHigh - oldLow) + newLow;\r\n\r\n        let nearestPitch: number = 0;\r\n        let nearestPitchDistance: number = Number.MAX_SAFE_INTEGER;\r\n        for (const newPitch of newScale) {\r\n            let distance: number = Math.abs(newPitch - transformedPitch);\r\n            if (roles[newPitch] != roles[i]) {\r\n                // Again, penalize changing roles.\r\n                distance += 0.1;\r\n            }\r\n            if (nearestPitchDistance > distance) {\r\n                nearestPitchDistance = distance;\r\n                nearestPitch = newPitch;\r\n            }\r\n        }\r\n\r\n        fullPitchMap[i] = nearestPitch;\r\n    }\r\n\r\n    return fullPitchMap;\r\n}\r\n\r\nfunction removeRedundantPins(pins: NotePin[]): void {\r\n    for (let i: number = 1; i < pins.length - 1;) {\r\n        if (pins[i - 1].interval == pins[i].interval &&\r\n            pins[i].interval == pins[i + 1].interval &&\r\n            pins[i - 1].size == pins[i].size &&\r\n            pins[i].size == pins[i + 1].size) {\r\n            pins.splice(i, 1);\r\n        } else {\r\n            i++;\r\n        }\r\n    }\r\n}\r\n\r\nfunction projectNoteIntoBar(oldNote: Note, timeOffset: number, noteStartPart: number, noteEndPart: number, newNotes: Note[]): void {\r\n    // Create a new note, and interpret the pitch bend and size events\r\n    // to determine where we need to insert pins to control interval and volume.\r\n    const newNote: Note = new Note(-1, noteStartPart, noteEndPart, Config.noteSizeMax, false);\r\n    newNote.pins.length = 0;\r\n    newNote.pitches.length = 0;\r\n    const newNoteLength: number = noteEndPart - noteStartPart;\r\n\r\n    for (const pitch of oldNote.pitches) {\r\n        newNote.pitches.push(pitch);\r\n    }\r\n\r\n    for (let pinIndex: number = 0; pinIndex < oldNote.pins.length; pinIndex++) {\r\n        const pin: NotePin = oldNote.pins[pinIndex];\r\n        const newPinTime: number = pin.time + timeOffset;\r\n        if (newPinTime < 0) {\r\n            if (pinIndex + 1 >= oldNote.pins.length) throw new Error(\"Error converting pins in note overflow.\");\r\n            const nextPin: NotePin = oldNote.pins[pinIndex + 1];\r\n            const nextPinTime: number = nextPin.time + timeOffset;\r\n            if (nextPinTime > 0) {\r\n                // Insert an interpolated pin at the start of the new note.\r\n                const ratio: number = (-newPinTime) / (nextPinTime - newPinTime);\r\n                newNote.pins.push(makeNotePin(Math.round(pin.interval + ratio * (nextPin.interval - pin.interval)), 0, Math.round(pin.size + ratio * (nextPin.size - pin.size))));\r\n\r\n            }\r\n        } else if (newPinTime <= newNoteLength) {\r\n            newNote.pins.push(makeNotePin(pin.interval, newPinTime, pin.size));\r\n        } else {\r\n            if (pinIndex < 1) throw new Error(\"Error converting pins in note overflow.\");\r\n            const prevPin: NotePin = oldNote.pins[pinIndex - 1];\r\n            const prevPinTime: number = prevPin.time + timeOffset;\r\n            if (prevPinTime < newNoteLength) {\r\n                // Insert an interpolated pin at the end of the new note.\r\n                const ratio: number = (newNoteLength - prevPinTime) / (newPinTime - prevPinTime);\r\n                newNote.pins.push(makeNotePin(Math.round(prevPin.interval + ratio * (pin.interval - prevPin.interval)), newNoteLength, Math.round(prevPin.size + ratio * (pin.size - prevPin.size))));\r\n            }\r\n        }\r\n    }\r\n    \r\n    // Fix from Jummbus: Ensure the first pin's interval is zero, adjust pitches and pins to compensate.\r\n    const offsetInterval: number = newNote.pins[0].interval;\r\n    for (let pitchIdx: number = 0; pitchIdx < newNote.pitches.length; pitchIdx++) {\r\n        newNote.pitches[pitchIdx] += offsetInterval;\r\n    }\r\n    for (let pinIdx: number = 0; pinIdx < newNote.pins.length; pinIdx++) {\r\n        newNote.pins[pinIdx].interval -= offsetInterval;\r\n    }\r\n\r\n    let joinedWithPrevNote: boolean = false;\r\n    if (newNote.start == 0) {\r\n        newNote.continuesLastPattern = (timeOffset < 0 || oldNote.continuesLastPattern);\r\n    } else {\r\n        newNote.continuesLastPattern = false;\r\n        if (newNotes.length > 0 && oldNote.continuesLastPattern) {\r\n            const prevNote: Note = newNotes[newNotes.length - 1];\r\n            if (prevNote.end == newNote.start && Synth.adjacentNotesHaveMatchingPitches(prevNote, newNote)) {\r\n                joinedWithPrevNote = true;\r\n                const newIntervalOffset: number = prevNote.pins[prevNote.pins.length - 1].interval;\r\n                const newTimeOffset: number = prevNote.end - prevNote.start;\r\n                for (let pinIndex: number = 1; pinIndex < newNote.pins.length; pinIndex++) {\r\n                    const tempPin: NotePin = newNote.pins[pinIndex];\r\n                    const transformedPin: NotePin = makeNotePin(tempPin.interval + newIntervalOffset, tempPin.time + newTimeOffset, tempPin.size);\r\n                    prevNote.pins.push(transformedPin);\r\n                    prevNote.end = prevNote.start + transformedPin.time;\r\n                }\r\n                removeRedundantPins(prevNote.pins);\r\n            }\r\n        }\r\n    }\r\n    if (!joinedWithPrevNote) {\r\n        newNotes.push(newNote);\r\n    }\r\n}\r\n\r\nexport class ChangeMoveAndOverflowNotes extends ChangeGroup {\r\n    constructor(doc: SongDocument, newBeatsPerBar: number, partsToMove: number) {\r\n        super();\r\n\r\n        const pitchChannels: Channel[] = [];\r\n        const noiseChannels: Channel[] = [];\r\n        const modChannels: Channel[] = []\r\n\r\n        for (let channelIndex: number = 0; channelIndex < doc.song.getChannelCount(); channelIndex++) {\r\n            const oldChannel: Channel = doc.song.channels[channelIndex];\r\n            const newChannel: Channel = new Channel();\r\n\r\n            if (channelIndex < doc.song.pitchChannelCount) {\r\n                pitchChannels.push(newChannel);\r\n            } else if (channelIndex < doc.song.pitchChannelCount + doc.song.noiseChannelCount) {\r\n                noiseChannels.push(newChannel);\r\n            }\r\n            else {\r\n                modChannels.push(newChannel);\r\n            }\r\n\r\n            newChannel.muted = oldChannel.muted;\r\n            newChannel.octave = oldChannel.octave;\r\n            newChannel.name = oldChannel.name;\r\n\r\n            for (const instrument of oldChannel.instruments) {\r\n                newChannel.instruments.push(instrument);\r\n            }\r\n\r\n            const oldPartsPerBar: number = Config.partsPerBeat * doc.song.beatsPerBar;\r\n            const newPartsPerBar: number = Config.partsPerBeat * newBeatsPerBar;\r\n            let currentBar: number = -1;\r\n            let pattern: Pattern | null = null;\r\n\r\n            for (let oldBar: number = 0; oldBar < doc.song.barCount; oldBar++) {\r\n                const oldPattern: Pattern | null = doc.song.getPattern(channelIndex, oldBar);\r\n                if (oldPattern != null) {\r\n                    const oldBarStart: number = oldBar * oldPartsPerBar;\r\n                    for (const oldNote of oldPattern.notes) {\r\n\r\n                        const absoluteNoteStart: number = oldNote.start + oldBarStart + partsToMove;\r\n                        const absoluteNoteEnd: number = oldNote.end + oldBarStart + partsToMove;\r\n\r\n                        const startBar: number = Math.floor(absoluteNoteStart / newPartsPerBar);\r\n                        const endBar: number = Math.ceil(absoluteNoteEnd / newPartsPerBar);\r\n                        for (let bar: number = startBar; bar < endBar; bar++) {\r\n                            const barStartPart: number = bar * newPartsPerBar;\r\n                            const noteStartPart: number = Math.max(0, absoluteNoteStart - barStartPart);\r\n                            const noteEndPart: number = Math.min(newPartsPerBar, absoluteNoteEnd - barStartPart);\r\n\r\n                            if (noteStartPart < noteEndPart) {\r\n\r\n                                // Ensure a pattern exists for the current bar before inserting notes into it.\r\n                                if (currentBar < bar || pattern == null) {\r\n                                    currentBar++;\r\n                                    while (currentBar < bar) {\r\n                                        newChannel.bars[currentBar] = 0;\r\n                                        currentBar++;\r\n                                    }\r\n                                    pattern = new Pattern();\r\n                                    newChannel.patterns.push(pattern);\r\n                                    newChannel.bars[currentBar] = newChannel.patterns.length;\r\n                                    pattern.instruments.length = 0;\r\n                                    pattern.instruments.push(...oldPattern.instruments);\r\n                                }\r\n\r\n                                // This is a consideration to allow arbitrary note sequencing, e.g. for mod channels (so the pattern being used can jump around)\r\n                                pattern = newChannel.patterns[newChannel.bars[bar] - 1];\r\n\r\n                                projectNoteIntoBar(oldNote, absoluteNoteStart - barStartPart - noteStartPart, noteStartPart, noteEndPart, pattern.notes);\r\n                            }\r\n                        }\r\n                    }\r\n                }\r\n            }\r\n        }\r\n\r\n        removeDuplicatePatterns(pitchChannels);\r\n        removeDuplicatePatterns(noiseChannels);\r\n        removeDuplicatePatterns(modChannels);\r\n        this.append(new ChangeReplacePatterns(doc, pitchChannels, noiseChannels, modChannels));\r\n    }\r\n}\r\n\r\nclass ChangePins extends UndoableChange {\r\n    protected _oldStart: number;\r\n    protected _newStart: number;\r\n    protected _oldEnd: number;\r\n    protected _newEnd: number;\r\n    protected _oldPins: NotePin[];\r\n    protected _newPins: NotePin[];\r\n    protected _oldPitches: number[];\r\n    protected _newPitches: number[];\r\n    protected _oldContinuesLastPattern: boolean;\r\n    protected _newContinuesLastPattern: boolean;\r\n    constructor(protected _doc: SongDocument | null, protected _note: Note) {\r\n        super(false);\r\n        this._oldStart = this._note.start;\r\n        this._oldEnd = this._note.end;\r\n        this._newStart = this._note.start;\r\n        this._newEnd = this._note.end;\r\n        this._oldPins = this._note.pins;\r\n        this._newPins = [];\r\n        this._oldPitches = this._note.pitches;\r\n        this._newPitches = [];\r\n        this._oldContinuesLastPattern = this._note.continuesLastPattern;\r\n        this._newContinuesLastPattern = this._note.continuesLastPattern;\r\n    }\r\n\r\n    protected _finishSetup(continuesLastPattern?: boolean): void {\r\n        for (let i: number = 0; i < this._newPins.length - 1;) {\r\n            if (this._newPins[i].time >= this._newPins[i + 1].time) {\r\n                this._newPins.splice(i, 1);\r\n            } else {\r\n                i++;\r\n            }\r\n        }\r\n\r\n        removeRedundantPins(this._newPins);\r\n\r\n        const firstInterval: number = this._newPins[0].interval;\r\n        const firstTime: number = this._newPins[0].time;\r\n        for (let i: number = 0; i < this._oldPitches.length; i++) {\r\n            this._newPitches[i] = this._oldPitches[i] + firstInterval;\r\n        }\r\n        for (let i: number = 0; i < this._newPins.length; i++) {\r\n            this._newPins[i].interval -= firstInterval;\r\n            this._newPins[i].time -= firstTime;\r\n        }\r\n        this._newStart = this._oldStart + firstTime;\r\n        this._newEnd = this._newStart + this._newPins[this._newPins.length - 1].time;\r\n\r\n        if (continuesLastPattern != undefined) {\r\n            this._newContinuesLastPattern = continuesLastPattern;\r\n        }\r\n        if (this._newStart != 0) {\r\n            this._newContinuesLastPattern = false;\r\n        }\r\n\r\n        this._doForwards();\r\n        this._didSomething();\r\n    }\r\n\r\n    protected _doForwards(): void {\r\n        this._note.pins = this._newPins;\r\n        this._note.pitches = this._newPitches;\r\n        this._note.start = this._newStart;\r\n        this._note.end = this._newEnd;\r\n        this._note.continuesLastPattern = this._newContinuesLastPattern;\r\n        if (this._doc != null) this._doc.notifier.changed();\r\n    }\r\n\r\n    protected _doBackwards(): void {\r\n        this._note.pins = this._oldPins;\r\n        this._note.pitches = this._oldPitches;\r\n        this._note.start = this._oldStart;\r\n        this._note.end = this._oldEnd;\r\n        this._note.continuesLastPattern = this._oldContinuesLastPattern;\r\n        if (this._doc != null) this._doc.notifier.changed();\r\n    }\r\n}\r\n\r\nexport class ChangeCustomizeInstrument extends Change {\r\n    constructor(doc: SongDocument) {\r\n        super();\r\n        const instrument: Instrument = doc.song.channels[doc.channel].instruments[doc.getCurrentInstrument()];\r\n        if (instrument.preset != instrument.type) {\r\n            instrument.preset = instrument.type;\r\n            doc.notifier.changed();\r\n            this._didSomething();\r\n        }\r\n    }\r\n}\r\n\r\nexport class ChangeCustomWave extends Change {\r\n    constructor(doc: SongDocument, newArray: Float32Array) {\r\n        super();\r\n        const oldArray: Float32Array = doc.song.channels[doc.channel].instruments[doc.getCurrentInstrument()].customChipWave;\r\n        var comparisonResult: boolean = true;\r\n        for (let i: number = 0; i < oldArray.length; i++) {\r\n            if (oldArray[i] != newArray[i]) {\r\n                comparisonResult = false;\r\n                i = oldArray.length;\r\n            }\r\n        }\r\n        if (comparisonResult == false) {\r\n            let instrument: Instrument = doc.song.channels[doc.channel].instruments[doc.getCurrentInstrument()];\r\n            for (let i: number = 0; i < newArray.length; i++) {\r\n                instrument.customChipWave[i] = newArray[i];\r\n            }\r\n\r\n            let sum: number = 0.0;\r\n            for (let i: number = 0; i < instrument.customChipWave.length; i++) {\r\n                sum += instrument.customChipWave[i];\r\n            }\r\n            const average: number = sum / instrument.customChipWave.length;\r\n\r\n            // Perform the integral on the wave. The chipSynth will perform the derivative to get the original wave back but with antialiasing.\r\n            let cumulative: number = 0;\r\n            let wavePrev: number = 0;\r\n            for (let i: number = 0; i < instrument.customChipWave.length; i++) {\r\n                cumulative += wavePrev;\r\n                wavePrev = instrument.customChipWave[i] - average;\r\n                instrument.customChipWaveIntegral[i] = cumulative;\r\n            }\r\n\r\n            instrument.customChipWaveIntegral[64] = 0.0;\r\n            instrument.preset = instrument.type;\r\n            doc.notifier.changed();\r\n            this._didSomething();\r\n        }\r\n    }\r\n}\r\n\r\nexport class ChangeCustomAlgorythmorFeedback extends Change {\r\n    constructor(doc: SongDocument, newArray: number[][], carry: number, mode: string) {\r\n        super();\r\n        if (mode == \"algorithm\") {\r\n            const oldArray: number[][] = doc.song.channels[doc.channel].instruments[doc.getCurrentInstrument()].customAlgorithm.modulatedBy;\r\n            const oldCarriercount: number = doc.song.channels[doc.channel].instruments[doc.getCurrentInstrument()].customAlgorithm.carrierCount;\r\n            var comparisonResult: boolean = true;\r\n            if (carry != oldCarriercount) {\r\n                comparisonResult = false;\r\n            } else {\r\n                for (let i: number = 0; i < oldArray.length; i++) {\r\n                    if (oldArray[i].length != newArray[i].length) {\r\n                        comparisonResult = false;\r\n                        break;\r\n                    } else {\r\n                        for (let j: number = 0; j < oldArray[i].length; j++) {\r\n                            if (oldArray[i][j] != newArray[i][j]) {\r\n                                comparisonResult = false;\r\n                                break;\r\n                            }\r\n                        }\r\n                    }\r\n                }\r\n            }\r\n            if (comparisonResult == false) {\r\n                let instrument: Instrument = doc.song.channels[doc.channel].instruments[doc.getCurrentInstrument()];\r\n\r\n                instrument.customAlgorithm.set(carry, newArray);\r\n\r\n                instrument.algorithm6Op = 0;\r\n                doc.notifier.changed();\r\n                this._didSomething();\r\n            }\r\n        }else if (mode == \"feedback\") {\r\n            const oldArray: number[][] = doc.song.channels[doc.channel].instruments[doc.getCurrentInstrument()].customFeedbackType.indices;\r\n            var comparisonResult: boolean = true;\r\n\t\t\tfor (let i: number = 0; i < oldArray.length; i++) {\r\n\t\t\t\tif (oldArray[i].length != newArray[i].length) {\r\n\t\t\t\t\tcomparisonResult = false;\r\n\t\t\t\t\tbreak;\r\n\t\t\t\t} else {\r\n\t\t\t\t\tfor (let j: number = 0; j < oldArray[i].length; j++) {\r\n\t\t\t\t\t\tif (oldArray[i][j] != newArray[i][j]) {\r\n\t\t\t\t\t\t\tcomparisonResult = false;\r\n\t\t\t\t\t\t\tbreak;\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t}\r\n            \r\n            if (!comparisonResult) {\r\n                let instrument: Instrument = doc.song.channels[doc.channel].instruments[doc.getCurrentInstrument()];\r\n\r\n                instrument.customFeedbackType.set(newArray);\r\n\r\n                instrument.feedbackType6Op = 0;\r\n                doc.notifier.changed();\r\n                this._didSomething();\r\n            }\r\n        }\r\n    }\r\n}\r\n\r\nexport class ChangePreset extends Change {\r\n    constructor(doc: SongDocument, newValue: number) {\r\n        super();\r\n        const instrument: Instrument = doc.song.channels[doc.channel].instruments[doc.getCurrentInstrument()];\r\n        const oldValue: number = instrument.preset;\r\n        if (oldValue != newValue) {\r\n            const preset1: Preset | null = EditorConfig.instrumentToPreset(newValue);\r\n            const preset: Preset | null = preset1 ?? EditorConfig.valueToPreset(newValue);\r\n            if (preset != null) {\r\n                if (preset.customType != undefined) {\r\n                    instrument.type = preset.customType;\r\n                    if (!Config.instrumentTypeHasSpecialInterval[instrument.type] && Config.chords[instrument.chord].customInterval) {\r\n                        instrument.chord = 0;\r\n                    }\r\n                    instrument.clearInvalidEnvelopeTargets();\r\n                } else if (preset.settings != undefined) {\r\n                    const tempVolume: number = instrument.volume;\r\n                    const tempPan: number = instrument.pan;\r\n                    const tempPanDelay = instrument.panDelay;\r\n                    //const usesPanning: boolean = effectsIncludePanning(instrument.effects);\r\n                    instrument.fromJsonObject(preset.settings, doc.song.getChannelIsNoise(doc.channel), doc.song.getChannelIsMod(doc.channel), doc.song.rhythm == 0 || doc.song.rhythm == 2, doc.song.rhythm >= 2);\r\n                    instrument.volume = tempVolume;\r\n                    instrument.pan = tempPan;\r\n                    instrument.panDelay = tempPanDelay;\r\n                    //@jummbus - Disable this check, pan will be on by default.\r\n                    //if (usesPanning && instrument.pan != Config.panCenter) {\r\n                        instrument.effects = (instrument.effects | (1 << EffectType.panning));\r\n                    //}\r\n                }\r\n            }\r\n            instrument.preset = newValue;\r\n            doc.notifier.changed();\r\n            this._didSomething();\r\n        }\r\n    }\r\n}\r\n\r\nexport class ChangeRandomGeneratedInstrument extends Change {\r\n    constructor(doc: SongDocument) {\r\n        super();\r\n\r\n        interface ItemWeight<T> {\r\n            readonly item: T;\r\n            readonly weight: number;\r\n        }\r\n        function selectWeightedRandom<T>(entries: ReadonlyArray<ItemWeight<T>>): T {\r\n            let total: number = 0;\r\n            for (const entry of entries) {\r\n                total += entry.weight;\r\n            }\r\n            let random: number = Math.random() * total;\r\n            for (const entry of entries) {\r\n                random -= entry.weight;\r\n                if (random <= 0.0) return entry.item;\r\n            }\r\n            return entries[(Math.random() * entries.length) | 0].item;\r\n        }\r\n        function selectCurvedDistribution(min: number, max: number, peak: number, width: number): number {\r\n            const entries: Array<ItemWeight<number>> = [];\r\n            for (let i: number = min; i <= max; i++) {\r\n                entries.push({ item: i, weight: 1.0 / (Math.pow((i - peak) / width, 2.0) + 1.0) });\r\n            }\r\n            return selectWeightedRandom(entries);\r\n        }\r\n\r\n        class PotentialFilterPoint {\r\n            constructor(\r\n                public readonly chance: number,\r\n                public readonly type: FilterType,\r\n                public readonly minFreq: number,\r\n                public readonly maxFreq: number,\r\n                public readonly centerHz: number,\r\n                public readonly centerGain: number,\r\n            ) { };\r\n        }\r\n        function applyFilterPoints(filter: FilterSettings, potentialPoints: ReadonlyArray<PotentialFilterPoint>): void {\r\n            filter.reset();\r\n            const usedFreqs: number[] = [];\r\n            for (const potentialPoint of potentialPoints) {\r\n                if (Math.random() > potentialPoint.chance) continue;\r\n                const point: FilterControlPoint = new FilterControlPoint();\r\n                point.type = potentialPoint.type;\r\n                point.freq = selectCurvedDistribution(potentialPoint.minFreq, potentialPoint.maxFreq, FilterControlPoint.getRoundedSettingValueFromHz(potentialPoint.centerHz), 1.0 / Config.filterFreqStep);\r\n                point.gain = selectCurvedDistribution(0, Config.filterGainRange - 1, Config.filterGainCenter + potentialPoint.centerGain, 2.0 / Config.filterGainStep);\r\n                if (point.type == FilterType.peak && point.gain == Config.filterGainCenter) continue; // skip pointless points. :P\r\n                if (usedFreqs.includes(point.freq)) continue;\r\n                usedFreqs.push(point.freq);\r\n                filter.controlPoints[filter.controlPointCount] = point;\r\n                filter.controlPointCount++;\r\n            }\r\n        }\r\n\r\n        const isNoise: boolean = doc.song.getChannelIsNoise(doc.channel);\r\n        const instrument: Instrument = doc.song.channels[doc.channel].instruments[doc.getCurrentInstrument()];\r\n        instrument.effects &= 1 << EffectType.panning; // disable all existing effects except panning.\r\n        instrument.envelopeCount = 0;\r\n\r\n        const midFreq: number = FilterControlPoint.getRoundedSettingValueFromHz(700.0);\r\n        const maxFreq: number = Config.filterFreqRange - 1;\r\n        applyFilterPoints(instrument.eqFilter, [\r\n            new PotentialFilterPoint(0.8, FilterType.lowPass, midFreq, maxFreq, 4000.0, -1),\r\n            new PotentialFilterPoint(0.4, FilterType.highPass, 0, midFreq - 1, 250.0, -1),\r\n            new PotentialFilterPoint(0.5, FilterType.peak, 0, maxFreq, 2000.0, 0),\r\n            new PotentialFilterPoint(0.4, FilterType.peak, 0, maxFreq, 1400.0, 0),\r\n            new PotentialFilterPoint(0.3, FilterType.peak, 0, maxFreq, 1000.0, 0),\r\n            new PotentialFilterPoint(0.2, FilterType.peak, 0, maxFreq, 500.0, 0),\r\n        ]);\r\n\r\n\t\tif (isNoise) {\r\n\t\t\tconst type: InstrumentType = selectWeightedRandom([\r\n\t\t\t\t{ item: InstrumentType.noise, weight: 1 },\r\n\t\t\t\t{ item: InstrumentType.spectrum, weight: 3 },\r\n\t\t\t]);\r\n\t\t\tinstrument.preset = instrument.type = type;\r\n\r\n            instrument.fadeIn = (Math.random() < 0.8) ? 0 : selectCurvedDistribution(0, Config.fadeInRange - 1, 0, 2);\r\n            instrument.fadeOut = selectCurvedDistribution(0, Config.fadeOutTicks.length - 1, Config.fadeOutNeutral, 2);\r\n\r\n            if (Math.random() < 0.1) {\r\n                instrument.effects |= 1 << EffectType.transition;\r\n                instrument.transition = Config.transitions.dictionary[selectWeightedRandom([\r\n                    { item: \"normal\", weight: 30 },\r\n                    { item: \"interrupt\", weight: 1 },\r\n                    { item: \"slide\", weight: 2 },\r\n                ])].index;\r\n            }\r\n            if (Math.random() < 0.2) {\r\n                instrument.effects |= 1 << EffectType.chord;\r\n                instrument.chord = Config.chords.dictionary[selectWeightedRandom([\r\n                    { item: \"strum\", weight: 2 },\r\n                    { item: \"arpeggio\", weight: 1 },\r\n                ])].index;\r\n            }\r\n            if (Math.random() < 0.1) {\r\n                instrument.pitchShift = selectCurvedDistribution(0, Config.pitchShiftRange - 1, Config.pitchShiftCenter, 2);\r\n                if (instrument.pitchShift != Config.pitchShiftCenter) {\r\n                    instrument.effects |= 1 << EffectType.pitchShift;\r\n                    instrument.addEnvelope(Config.instrumentAutomationTargets.dictionary[\"pitchShift\"].index, 0, Config.envelopes.dictionary[selectWeightedRandom([\r\n                        { item: \"flare 1\", weight: 2 },\r\n                        { item: \"flare 2\", weight: 1 },\r\n                        { item: \"flare 3\", weight: 1 },\r\n                        { item: \"twang 1\", weight: 16 },\r\n                        { item: \"twang 2\", weight: 8 },\r\n                        { item: \"twang 3\", weight: 4 },\r\n                        { item: \"tremolo1\", weight: 1 },\r\n                        { item: \"tremolo2\", weight: 1 },\r\n                        { item: \"tremolo3\", weight: 1 },\r\n                        { item: \"decay 1\", weight: 4 },\r\n                        { item: \"decay 2\", weight: 2 },\r\n                        { item: \"decay 3\", weight: 1 },\r\n                    ])].index);\r\n                }\r\n            }\r\n            if (Math.random() < 0.1) {\r\n                instrument.effects |= 1 << EffectType.vibrato;\r\n                instrument.vibrato = selectCurvedDistribution(0, Config.echoSustainRange - 1, Config.echoSustainRange >> 1, 2);\r\n                instrument.vibrato = Config.vibratos.dictionary[selectWeightedRandom([\r\n                    { item: \"light\", weight: 2 },\r\n                    { item: \"delayed\", weight: 2 },\r\n                    { item: \"heavy\", weight: 1 },\r\n                    { item: \"shaky\", weight: 2 },\r\n                ])].index;\r\n            }\r\n            if (Math.random() < 0.8) {\r\n                instrument.effects |= 1 << EffectType.noteFilter;\r\n                applyFilterPoints(instrument.noteFilter, [\r\n                    new PotentialFilterPoint(1.0, FilterType.lowPass, midFreq, maxFreq, 8000.0, -1),\r\n                ]);\r\n                instrument.addEnvelope(Config.instrumentAutomationTargets.dictionary[\"noteFilterAllFreqs\"].index, 0, Config.envelopes.dictionary[selectWeightedRandom([\r\n\t\t\t\t{ item: \"punch\", weight: 4 },\r\n\t\t\t\t{ item: \"flare 1\", weight: 2 },\r\n\t\t\t\t{ item: \"flare 2\", weight: 2 },\r\n\t\t\t\t{ item: \"flare 3\", weight: 2 },\r\n\t\t\t\t{ item: \"twang 1\", weight: 8 },\r\n\t\t\t\t{ item: \"twang 2\", weight: 8 },\r\n\t\t\t\t{ item: \"twang 3\", weight: 8 },\r\n\t\t\t\t{ item: \"swell 1\", weight: 2 },\r\n\t\t\t\t{ item: \"swell 2\", weight: 2 },\r\n\t\t\t\t{ item: \"swell 3\", weight: 1 },\r\n\t\t\t\t{ item: \"tremolo1\", weight: 1 },\r\n\t\t\t\t{ item: \"tremolo2\", weight: 1 },\r\n\t\t\t\t{ item: \"tremolo3\", weight: 1 },\r\n\t\t\t\t{ item: \"tremolo4\", weight: 1 },\r\n\t\t\t\t{ item: \"tremolo5\", weight: 1 },\r\n\t\t\t\t{ item: \"tremolo6\", weight: 1 },\r\n\t\t\t\t{ item: \"decay 1\", weight: 4 },\r\n\t\t\t\t{ item: \"decay 2\", weight: 4 },\r\n                { item: \"decay 3\", weight: 4 },\r\n                { item: \"wibble 1\", weight: 2 },\r\n                { item: \"wibble 2\", weight: 2 },\r\n                { item: \"wibble 3\", weight: 2 },\r\n                { item: \"linear 1\", weight: 2 },\r\n                { item: \"linear 2\", weight: 2 },\r\n                { item: \"linear 3\", weight: 2 },\r\n                { item: \"linear-1\", weight: 1 },\r\n\t\t\t])].index);\r\n            }\r\n            if (Math.random() < 0.1) {\r\n                instrument.effects |= 1 << EffectType.distortion;\r\n                instrument.distortion = selectCurvedDistribution(1, Config.distortionRange - 1, Config.distortionRange - 1, 2);\r\n            }\r\n            if (Math.random() < 0.1) {\r\n                instrument.effects |= 1 << EffectType.bitcrusher;\r\n                instrument.bitcrusherFreq = selectCurvedDistribution(0, Config.bitcrusherFreqRange - 1, Config.bitcrusherFreqRange >> 1, 2);\r\n                instrument.bitcrusherQuantization = selectCurvedDistribution(0, Config.bitcrusherQuantizationRange - 1, Config.bitcrusherQuantizationRange >> 1, 2);\r\n            }\r\n            if (Math.random() < 0.1) {\r\n                instrument.effects |= 1 << EffectType.chorus;\r\n                instrument.chorus = selectCurvedDistribution(1, Config.chorusRange - 1, Config.chorusRange - 1, 1);\r\n            }\r\n            if (Math.random() < 0.1) {\r\n                instrument.echoSustain = selectCurvedDistribution(0, Config.echoSustainRange - 1, Config.echoSustainRange >> 1, 2);\r\n                instrument.echoDelay = selectCurvedDistribution(0, Config.echoDelayRange - 1, Config.echoDelayRange >> 1, 2);\r\n                if (instrument.echoSustain != 0 || instrument.echoDelay != 0) {\r\n                    instrument.effects |= 1 << EffectType.echo;\r\n                }\r\n            }\r\n            if (Math.random() < 0.5) {\r\n                instrument.effects |= 1 << EffectType.reverb;\r\n                instrument.reverb = selectCurvedDistribution(1, Config.reverbRange - 1, 1, 1);\r\n            }\r\n\r\n\t\t\tfunction normalize(harmonics: number[]): void {\r\n\t\t\t\tlet max: number = 0;\r\n\t\t\t\tfor (const value of harmonics) {\r\n\t\t\t\t\tif (value > max) max = value;\r\n\t\t\t\t}\r\n\t\t\t\tfor (let i: number = 0; i < harmonics.length; i++) {\r\n\t\t\t\t\tharmonics[i] = Config.harmonicsMax * harmonics[i] / max;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\tswitch (type) {\r\n\t\t\t\tcase InstrumentType.noise: {\r\n\t\t\t\t\tinstrument.chipNoise = (Math.random() * Config.chipNoises.length) | 0;\r\n\t\t\t\t} break;\r\n\t\t\t\tcase InstrumentType.spectrum: {\r\n\t\t\t\t\tconst spectrumGenerators: Function[] = [\r\n\t\t\t\t\t\t(): number[] => {\r\n\t\t\t\t\t\t\tconst spectrum: number[] = [];\r\n\t\t\t\t\t\t\tfor (let i: number = 0; i < Config.spectrumControlPoints; i++) {\r\n\t\t\t\t\t\t\t\tspectrum[i] = (Math.random() < 0.5) ? Math.random() : 0.0;\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\treturn spectrum;\r\n\t\t\t\t\t\t},\r\n\t\t\t\t\t\t(): number[] => {\r\n\t\t\t\t\t\t\tlet current: number = 1.0;\r\n\t\t\t\t\t\t\tconst spectrum: number[] = [current];\r\n\t\t\t\t\t\t\tfor (let i = 1; i < Config.spectrumControlPoints; i++) {\r\n\t\t\t\t\t\t\t\tcurrent *= Math.pow(2, Math.random() - 0.52);\r\n\t\t\t\t\t\t\t\tspectrum[i] = current;\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\treturn spectrum;\r\n\t\t\t\t\t\t},\r\n\t\t\t\t\t\t(): number[] => {\r\n\t\t\t\t\t\t\tlet current: number = 1.0;\r\n\t\t\t\t\t\t\tconst spectrum: number[] = [current];\r\n\t\t\t\t\t\t\tfor (let i = 1; i < Config.spectrumControlPoints; i++) {\r\n\t\t\t\t\t\t\t\tcurrent *= Math.pow(2, Math.random() - 0.52);\r\n\t\t\t\t\t\t\t\tspectrum[i] = current * Math.random();\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\treturn spectrum;\r\n\t\t\t\t\t\t},\r\n\t\t\t\t\t];\r\n\t\t\t\t\tconst generator = spectrumGenerators[(Math.random() * spectrumGenerators.length) | 0];\r\n\t\t\t\t\tconst spectrum: number[] = generator();\r\n\t\t\t\t\tnormalize(spectrum);\r\n\t\t\t\t\tfor (let i: number = 0; i < Config.spectrumControlPoints; i++) {\r\n\t\t\t\t\t\tinstrument.spectrumWave.spectrum[i] = Math.round(spectrum[i]);\r\n\t\t\t\t\t}\r\n\t\t\t\t\tinstrument.spectrumWave.markCustomWaveDirty();\r\n\t\t\t\t} break;\r\n\t\t\t\tdefault: throw new Error(\"Unhandled noise instrument type in random generator.\");\r\n\t\t\t}\r\n\t\t} else {\r\n\t\t\tconst type: InstrumentType = selectWeightedRandom([\r\n                { item: InstrumentType.chip, weight: 4 },\r\n                { item: InstrumentType.pwm, weight: 4 },\r\n                { item: InstrumentType.harmonics, weight: 5 },\r\n                { item: InstrumentType.pickedString, weight: 5 },\r\n                { item: InstrumentType.spectrum, weight: 1 },\r\n                { item: InstrumentType.fm, weight: 5 },\r\n\t\t\t\t{ item: InstrumentType.fm6op, weight: 3 },\r\n\t\t\t]);\r\n\t\t\tinstrument.preset = instrument.type = type;\r\n\t\t\t\r\n            instrument.fadeIn = (Math.random() < 0.5) ? 0 : selectCurvedDistribution(0, Config.fadeInRange - 1, 0, 2);\r\n            instrument.fadeOut = selectCurvedDistribution(0, Config.fadeOutTicks.length - 1, Config.fadeOutNeutral, 2);\r\n            if (type == InstrumentType.chip || type == InstrumentType.harmonics || type == InstrumentType.pickedString) {\r\n                instrument.unison = Config.unisons.dictionary[selectWeightedRandom([\r\n                    { item: \"none\", weight: 10 },\r\n                    { item: \"shimmer\", weight: 5 },\r\n                    { item: \"hum\", weight: 4 },\r\n                    { item: \"honky tonk\", weight: 3 },\r\n                    { item: \"dissonant\", weight: 1 },\r\n                    { item: \"fifth\", weight: 1 },\r\n                    { item: \"octave\", weight: 2 },\r\n                    { item: \"bowed\", weight: 2 },\r\n                    { item: \"piano\", weight: 5 },\r\n                    { item: \"warbled\", weight: 3 },\r\n                    { item: \"hecking gosh\", weight: 2 },\r\n                ])].index;\r\n            }\r\n\r\n            if (Math.random() < 0.1) {\r\n                instrument.effects |= 1 << EffectType.transition;\r\n                instrument.transition = Config.transitions.dictionary[selectWeightedRandom([\r\n                    { item: \"interrupt\", weight: 1 },\r\n                    { item: \"slide\", weight: 2 },\r\n                ])].index;\r\n            }\r\n            if (Math.random() < 0.2) {\r\n                instrument.effects |= 1 << EffectType.chord;\r\n                instrument.chord = Config.chords.dictionary[selectWeightedRandom([\r\n                    { item: \"strum\", weight: 2 },\r\n                    { item: \"arpeggio\", weight: 1 },\r\n                ])].index;\r\n            }\r\n            if (Math.random() < 0.05) {\r\n                instrument.pitchShift = selectCurvedDistribution(0, Config.pitchShiftRange - 1, Config.pitchShiftCenter, 1);\r\n                if (instrument.pitchShift != Config.pitchShiftCenter) {\r\n                    instrument.effects |= 1 << EffectType.pitchShift;\r\n                    instrument.addEnvelope(Config.instrumentAutomationTargets.dictionary[\"pitchShift\"].index, 0, Config.envelopes.dictionary[selectWeightedRandom([\r\n                        { item: \"flare 1\", weight: 2 },\r\n                        { item: \"flare 2\", weight: 1 },\r\n                        { item: \"flare 3\", weight: 1 },\r\n                        { item: \"twang 1\", weight: 16 },\r\n                        { item: \"twang 2\", weight: 8 },\r\n                        { item: \"twang 3\", weight: 4 },\r\n                        { item: \"decay 1\", weight: 4 },\r\n                        { item: \"decay 2\", weight: 2 },\r\n                        { item: \"decay 3\", weight: 1 },\r\n                        { item: \"linear 1\", weight: 1 },\r\n                        { item: \"linear 2\", weight: 1 },\r\n                    ])].index);\r\n                }\r\n            }\r\n            if (Math.random() < 0.25) {\r\n                instrument.effects |= 1 << EffectType.vibrato;\r\n                instrument.vibrato = selectCurvedDistribution(0, Config.echoSustainRange - 1, Config.echoSustainRange >> 1, 2);\r\n                instrument.vibrato = Config.vibratos.dictionary[selectWeightedRandom([\r\n                    { item: \"light\", weight: 2 },\r\n                    { item: \"delayed\", weight: 2 },\r\n                    { item: \"heavy\", weight: 1 },\r\n                    { item: \"shaky\", weight: 2 },\r\n                ])].index;\r\n            }\r\n            if (Math.random() < 0.1) {\r\n                instrument.effects |= 1 << EffectType.distortion;\r\n                instrument.distortion = selectCurvedDistribution(1, Config.distortionRange - 1, Config.distortionRange - 1, 2);\r\n            }\r\n            if (effectsIncludeDistortion(instrument.effects) && Math.random() < 0.8) {\r\n                instrument.effects |= 1 << EffectType.noteFilter;\r\n                applyFilterPoints(instrument.noteFilter, [\r\n                    new PotentialFilterPoint(1.0, FilterType.lowPass, midFreq, maxFreq, 2000.0, -1),\r\n                    new PotentialFilterPoint(0.9, FilterType.highPass, 0, midFreq - 1, 500.0, -1),\r\n                    new PotentialFilterPoint(0.4, FilterType.peak, 0, maxFreq, 1400.0, 0),\r\n                ]);\r\n            } else if (Math.random() < 0.5) {\r\n                instrument.effects |= 1 << EffectType.noteFilter;\r\n                applyFilterPoints(instrument.noteFilter, [\r\n                    new PotentialFilterPoint(1.0, FilterType.lowPass, midFreq, maxFreq, 8000.0, -1),\r\n                ]);\r\n                instrument.addEnvelope(Config.instrumentAutomationTargets.dictionary[\"noteFilterAllFreqs\"].index, 0, Config.envelopes.dictionary[selectWeightedRandom([\r\n                { item: \"punch\", weight: 6 },\r\n                { item: \"flare -1\", weight: 1 },\r\n\t\t\t\t{ item: \"flare 1\", weight: 2 },\r\n\t\t\t\t{ item: \"flare 2\", weight: 4 },\r\n                { item: \"flare 3\", weight: 2 },\r\n                { item: \"twang -1\", weight: 1 },\r\n\t\t\t\t{ item: \"twang 1\", weight: 2 },\r\n\t\t\t\t{ item: \"twang 2\", weight: 4 },\r\n                { item: \"twang 3\", weight: 4 },\r\n                { item: \"swell -1\", weight: 4 },\r\n\t\t\t\t{ item: \"swell 1\", weight: 4 },\r\n\t\t\t\t{ item: \"swell 2\", weight: 2 },\r\n                { item: \"swell 3\", weight: 1 },\r\n                { item: \"tremolo0\", weight: 1 },\r\n\t\t\t\t{ item: \"tremolo1\", weight: 1 },\r\n\t\t\t\t{ item: \"tremolo2\", weight: 1 },\r\n\t\t\t\t{ item: \"tremolo3\", weight: 1 },\r\n\t\t\t\t{ item: \"tremolo4\", weight: 1 },\r\n\t\t\t\t{ item: \"tremolo5\", weight: 1 },\r\n                { item: \"tremolo6\", weight: 1 },\r\n                { item: \"decay -1\", weight: 1 },\r\n\t\t\t\t{ item: \"decay 1\", weight: 1 },\r\n\t\t\t\t{ item: \"decay 2\", weight: 2 },\r\n                { item: \"decay 3\", weight: 2 },\r\n                { item: \"wibble-1\", weight: 2 },\r\n                { item: \"wibble 1\", weight: 4 },\r\n                { item: \"wibble 2\", weight: 4 },\r\n                { item: \"wibble 3\", weight: 4 },\r\n                { item: \"linear-2\", weight: 1 },\r\n                { item: \"linear-1\", weight: 1 },\r\n                { item: \"linear 1\", weight: 2 },\r\n                { item: \"linear 2\", weight: 3 },\r\n                { item: \"linear 3\", weight: 2 },\r\n                { item: \"rise -2\", weight: 4 },\r\n                { item: \"rise -1\", weight: 4 },\r\n                { item: \"rise 1\", weight: 3 },\r\n                { item: \"rise 2\", weight: 2 },\r\n                { item: \"rise 3\", weight: 1 },\r\n\t\t\t])].index);\r\n\t\t\t}\r\n            if (Math.random() < 0.1) {\r\n                instrument.effects |= 1 << EffectType.bitcrusher;\r\n                instrument.bitcrusherFreq = selectCurvedDistribution(0, Config.bitcrusherFreqRange - 1, 0, 2);\r\n                instrument.bitcrusherQuantization = selectCurvedDistribution(0, Config.bitcrusherQuantizationRange - 1, Config.bitcrusherQuantizationRange >> 1, 2);\r\n            }\r\n            if (Math.random() < 0.1) {\r\n                instrument.effects |= 1 << EffectType.chorus;\r\n                instrument.chorus = selectCurvedDistribution(1, Config.chorusRange - 1, Config.chorusRange - 1, 1);\r\n            }\r\n            if (Math.random() < 0.1) {\r\n                instrument.echoSustain = selectCurvedDistribution(0, Config.echoSustainRange - 1, Config.echoSustainRange >> 1, 2);\r\n                instrument.echoDelay = selectCurvedDistribution(0, Config.echoDelayRange - 1, Config.echoDelayRange >> 1, 2);\r\n                if (instrument.echoSustain != 0 || instrument.echoDelay != 0) {\r\n                    instrument.effects |= 1 << EffectType.echo;\r\n                }\r\n            }\r\n            if (Math.random() < 0.5) {\r\n                instrument.effects |= 1 << EffectType.reverb;\r\n                instrument.reverb = selectCurvedDistribution(1, Config.reverbRange - 1, 1, 1);\r\n            }\r\n\t\t\tfunction normalize(harmonics: number[]): void {\r\n\t\t\t\tlet max: number = 0;\r\n\t\t\t\tfor (const value of harmonics) {\r\n\t\t\t\t\tif (value > max) max = value;\r\n\t\t\t\t}\r\n\t\t\t\tfor (let i: number = 0; i < harmonics.length; i++) {\r\n\t\t\t\t\tharmonics[i] = Config.harmonicsMax * harmonics[i] / max;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\tswitch (type) {\r\n\t\t\t\tcase InstrumentType.chip: {\r\n\t\t\t\t\tinstrument.chipWave = (Math.random() * Config.chipWaves.length) | 0;\r\n\t\t\t\t\t\t\t\t\t\t\t\t // advloop addition\r\n                            instrument.isUsingAdvancedLoopControls = false;\r\n                            instrument.chipWaveLoopStart = 0;\r\n                            instrument.chipWaveLoopEnd = Config.rawRawChipWaves[instrument.chipWave].samples.length - 1;\r\n                            instrument.chipWaveLoopMode = 0;\r\n                            instrument.chipWavePlayBackwards = false;\r\n                            instrument.chipWaveStartOffset = 0;\r\n                            // advloop addition\r\n\t\t\t\t} break;\r\n\t\t\t\tcase InstrumentType.pwm: {\r\n                    instrument.pulseWidth = selectCurvedDistribution(0, Config.pulseWidthRange - 1, Config.pulseWidthRange - 1, 2);\r\n\r\n                    if (Math.random() < 0.6) {\r\n                        instrument.addEnvelope(Config.instrumentAutomationTargets.dictionary[\"pulseWidth\"].index, 0, Config.envelopes.dictionary[selectWeightedRandom([\r\n                        { item: \"punch\", weight: 6 },\r\n                        { item: \"flare -1\", weight: 1 },\r\n                        { item: \"flare 1\", weight: 2 },\r\n                        { item: \"flare 2\", weight: 4 },\r\n                        { item: \"flare 3\", weight: 2 },\r\n                        { item: \"twang -1\", weight: 1 },\r\n                        { item: \"twang 1\", weight: 2 },\r\n                        { item: \"twang 2\", weight: 4 },\r\n                        { item: \"twang 3\", weight: 4 },\r\n                        { item: \"swell -1\", weight: 4 },\r\n                        { item: \"swell 1\", weight: 4 },\r\n                        { item: \"swell 2\", weight: 2 },\r\n                        { item: \"swell 3\", weight: 1 },\r\n                        { item: \"tremolo0\", weight: 1 },\r\n                        { item: \"tremolo1\", weight: 1 },\r\n                        { item: \"tremolo2\", weight: 1 },\r\n                        { item: \"tremolo3\", weight: 1 },\r\n                        { item: \"tremolo4\", weight: 1 },\r\n                        { item: \"tremolo5\", weight: 1 },\r\n                        { item: \"tremolo6\", weight: 1 },\r\n                        { item: \"decay -1\", weight: 1 },\r\n                        { item: \"decay 1\", weight: 1 },\r\n                        { item: \"decay 2\", weight: 2 },\r\n                        { item: \"decay 3\", weight: 2 },\r\n                        { item: \"wibble-1\", weight: 2 },\r\n                        { item: \"wibble 1\", weight: 4 },\r\n                        { item: \"wibble 2\", weight: 4 },\r\n                        { item: \"wibble 3\", weight: 4 },\r\n                        { item: \"linear-2\", weight: 1 },\r\n                        { item: \"linear-1\", weight: 1 },\r\n                        { item: \"linear 1\", weight: 2 },\r\n                        { item: \"linear 2\", weight: 3 },\r\n                        { item: \"linear 3\", weight: 2 },\r\n                        { item: \"rise -2\", weight: 4 },\r\n                        { item: \"rise -1\", weight: 4 },\r\n                        { item: \"rise 1\", weight: 3 },\r\n                        { item: \"rise 2\", weight: 2 },\r\n                        { item: \"rise 3\", weight: 1 },\r\n\t\t\t\t\t])].index);\r\n\t\t\t\t}\r\n\t\t\t\t} break;\r\n\t\t\t\tcase InstrumentType.pickedString:\r\n                case InstrumentType.harmonics: {\r\n                    if (type == InstrumentType.pickedString) {\r\n                        instrument.stringSustain = (Math.random() * Config.stringSustainRange) | 0;\r\n                    }\r\n\r\n\t\t\t\t\tconst harmonicGenerators: Function[] = [\r\n\t\t\t\t\t\t(): number[] => {\r\n\t\t\t\t\t\t\tconst harmonics: number[] = [];\r\n\t\t\t\t\t\t\tfor (let i: number = 0; i < Config.harmonicsControlPoints; i++) {\r\n\t\t\t\t\t\t\t\tharmonics[i] = (Math.random() < 0.4) ? Math.random() : 0.0;\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\tharmonics[(Math.random() * 8) | 0] = Math.pow(Math.random(), 0.25);\r\n\t\t\t\t\t\t\treturn harmonics;\r\n\t\t\t\t\t\t},\r\n\t\t\t\t\t\t(): number[] => {\r\n\t\t\t\t\t\t\tlet current: number = 1.0;\r\n\t\t\t\t\t\t\tconst harmonics: number[] = [current];\r\n\t\t\t\t\t\t\tfor (let i = 1; i < Config.harmonicsControlPoints; i++) {\r\n\t\t\t\t\t\t\t\tcurrent *= Math.pow(2, Math.random() - 0.55);\r\n\t\t\t\t\t\t\t\tharmonics[i] = current;\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\treturn harmonics;\r\n\t\t\t\t\t\t},\r\n\t\t\t\t\t\t(): number[] => {\r\n\t\t\t\t\t\t\tlet current: number = 1.0;\r\n\t\t\t\t\t\t\tconst harmonics: number[] = [current];\r\n\t\t\t\t\t\t\tfor (let i = 1; i < Config.harmonicsControlPoints; i++) {\r\n\t\t\t\t\t\t\t\tcurrent *= Math.pow(2, Math.random() - 0.55);\r\n\t\t\t\t\t\t\t\tharmonics[i] = current * Math.random();\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\treturn harmonics;\r\n\t\t\t\t\t\t},\r\n\t\t\t\t\t];\r\n\t\t\t\t\tconst generator = harmonicGenerators[(Math.random() * harmonicGenerators.length) | 0];\r\n\t\t\t\t\tconst harmonics: number[] = generator();\r\n\t\t\t\t\tnormalize(harmonics);\r\n\t\t\t\t\tfor (let i: number = 0; i < Config.harmonicsControlPoints; i++) {\r\n\t\t\t\t\t\tinstrument.harmonicsWave.harmonics[i] = Math.round(harmonics[i]);\r\n\t\t\t\t\t}\r\n\t\t\t\t\tinstrument.harmonicsWave.markCustomWaveDirty();\r\n\t\t\t\t} break;\r\n\t\t\t\tcase InstrumentType.spectrum: {\r\n\t\t\t\t\tconst spectrum: number[] = [];\r\n\t\t\t\t\tfor (let i: number = 0; i < Config.spectrumControlPoints; i++) {\r\n\t\t\t\t\t\tconst isHarmonic: boolean = i == 0 || i == 7 || i == 11 || i == 14 || i == 16 || i == 18 || i == 21;\r\n\t\t\t\t\t\tif (isHarmonic) {\r\n\t\t\t\t\t\t\tspectrum[i] = Math.pow(Math.random(), 0.25);\r\n\t\t\t\t\t\t} else {\r\n\t\t\t\t\t\t\tspectrum[i] = Math.pow(Math.random(), 3) * 0.5;\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t\tnormalize(spectrum);\r\n\t\t\t\t\tfor (let i: number = 0; i < Config.spectrumControlPoints; i++) {\r\n\t\t\t\t\t\tinstrument.spectrumWave.spectrum[i] = Math.round(spectrum[i]);\r\n\t\t\t\t\t}\r\n\t\t\t\t\tinstrument.spectrumWave.markCustomWaveDirty();\r\n\t\t\t\t} break;\r\n\t\t\t\tcase InstrumentType.fm6op: \r\n\t\t\t\tcase InstrumentType.fm: {\r\n\t\t\t\t\tif(type == InstrumentType.fm){\r\n\t\t\t\t\t\tinstrument.algorithm = (Math.random() * Config.algorithms.length) | 0;\r\n\t\t\t\t\t\tinstrument.feedbackType = (Math.random() * Config.feedbacks.length) | 0;\r\n\t\t\t\t\t}else{\r\n\t\t\t\t\t\tinstrument.algorithm6Op = (Math.random() * (Config.algorithms6Op.length-1)+1) | 0;\r\n\t\t\t\t\t\tinstrument.customAlgorithm.fromPreset(instrument.algorithm6Op);\r\n\t\t\t\t\t\tinstrument.feedbackType6Op = (Math.random() * (Config.feedbacks6Op.length-1)+1) | 0;\r\n\t\t\t\t\t\tinstrument.customFeedbackType.fromPreset(instrument.feedbackType6Op);\r\n\t\t\t\t\t}\r\n\t\t\t\t\tconst algorithm: Algorithm = type == InstrumentType.fm? Config.algorithms[instrument.algorithm] : Config.algorithms6Op[instrument.algorithm6Op];\r\n\t\t\t\t\tfor (let i: number = 0; i < algorithm.carrierCount; i++) {\r\n\t\t\t\t\t\tinstrument.operators[i].frequency = selectCurvedDistribution(0, Config.operatorFrequencies.length - 1, 0, 3);\r\n\t\t\t\t\t\tinstrument.operators[i].amplitude = selectCurvedDistribution(0, Config.operatorAmplitudeMax, Config.operatorAmplitudeMax - 1, 2);\r\n                        instrument.operators[i].waveform = Config.operatorWaves.dictionary[selectWeightedRandom([\r\n                            { item: \"sine\", weight: 10 },\r\n                            { item: \"triangle\", weight: 6 },\r\n                            { item: \"pulse width\", weight: 6 },\r\n                            { item: \"sawtooth\", weight: 3 },\r\n                            { item: \"ramp\", weight: 3 },\r\n                            { item: \"trapezoid\", weight: 4 },\r\n\t\t\t\t{ item: \"rounded\", weight: 1 },\r\n                        ])].index;\r\n\t\t\t\t\t\tif (instrument.operators[i].waveform == 2/*\"pulse width\"*/) {\r\n\t\t\t\t\t\t\tinstrument.operators[i].pulseWidth = selectWeightedRandom([\r\n\t\t\t\t\t\t\t\t{ item: 0, weight: 3 },\r\n\t\t\t\t\t\t\t\t{ item: 1, weight: 5 },\r\n\t\t\t\t\t\t\t\t{ item: 2, weight: 7 },\r\n\t\t\t\t\t\t\t\t{ item: 3, weight: 10 },\r\n\t\t\t\t\t\t\t\t{ item: 4, weight: 15 },\r\n\t\t\t\t\t\t\t\t{ item: 5, weight: 25 }, // 50%\r\n\t\t\t\t\t\t\t\t{ item: 6, weight: 15 },\r\n\t\t\t\t\t\t\t\t{ item: 7, weight: 10 },\r\n\t\t\t\t\t\t\t\t{ item: 8, weight: 7 },\r\n\t\t\t\t\t\t\t\t{ item: 9, weight: 5 },\r\n\t\t\t\t\t\t\t\t{ item: 9, weight: 3 },\r\n\t\t\t\t\t\t\t]);\r\n                        }\r\n\t\t\t\t\t}\r\n\t\t\t\t\tfor (let i: number = algorithm.carrierCount; i < Config.operatorCount + (type == InstrumentType.fm6op? 2 : 0); i++) {\r\n\t\t\t\t\t\tinstrument.operators[i].frequency = selectCurvedDistribution(3, Config.operatorFrequencies.length - 1, 0, 3);\r\n\t\t\t\t\t\tinstrument.operators[i].amplitude = (Math.pow(Math.random(), 2) * Config.operatorAmplitudeMax) | 0;\r\n                        if (instrument.envelopeCount < Config.maxEnvelopeCount && Math.random() < 0.4) {\r\n                            instrument.addEnvelope(Config.instrumentAutomationTargets.dictionary[\"operatorAmplitude\"].index, i, Config.envelopes.dictionary[selectWeightedRandom([\r\n                            { item: \"punch\", weight: 2 },\r\n                            { item: \"flare -1\", weight: 1 },\r\n                            { item: \"flare 1\", weight: 2 },\r\n                            { item: \"flare 2\", weight: 2 },\r\n                            { item: \"flare 3\", weight: 2 },\r\n                            { item: \"twang -1\", weight: 1 },\r\n                            { item: \"twang 1\", weight: 2 },\r\n                            { item: \"twang 2\", weight: 2 },\r\n                            { item: \"twang 3\", weight: 2 },\r\n                            { item: \"swell -1\", weight: 2 },\r\n                            { item: \"swell 1\", weight: 2 },\r\n                            { item: \"swell 2\", weight: 2 },\r\n                            { item: \"swell 3\", weight: 1 },\r\n                            { item: \"tremolo0\", weight: 1 },\r\n                            { item: \"tremolo1\", weight: 1 },\r\n                            { item: \"tremolo2\", weight: 1 },\r\n                            { item: \"tremolo3\", weight: 1 },\r\n                            { item: \"tremolo4\", weight: 1 },\r\n                            { item: \"tremolo5\", weight: 1 },\r\n                            { item: \"tremolo6\", weight: 1 },\r\n                            { item: \"decay -1\", weight: 1 },\r\n                            { item: \"decay 1\", weight: 1 },\r\n                            { item: \"decay 2\", weight: 2 },\r\n                            { item: \"decay 3\", weight: 2 },\r\n                            { item: \"wibble-1\", weight: 2 },\r\n                            { item: \"wibble 1\", weight: 2 },\r\n                            { item: \"wibble 2\", weight: 2 },\r\n                            { item: \"wibble 3\", weight: 2 },\r\n                            { item: \"linear-2\", weight: 1 },\r\n                            { item: \"linear-1\", weight: 1 },\r\n                            { item: \"linear 1\", weight: 2 },\r\n                            { item: \"linear 2\", weight: 2 },\r\n                            { item: \"linear 3\", weight: 1 },\r\n                            { item: \"rise -2\", weight: 2 },\r\n                            { item: \"rise -1\", weight: 2 },\r\n                            { item: \"rise 1\", weight: 2 },\r\n                            { item: \"rise 2\", weight: 2 },\r\n                            { item: \"rise 3\", weight: 1 },\r\n\t\t\t\t\t\t])].index);\r\n\t\t\t\t\t\t}\r\n                        instrument.operators[i].waveform = Config.operatorWaves.dictionary[selectWeightedRandom([\r\n                            { item: \"sine\", weight: 10 },\r\n                            { item: \"triangle\", weight: 6 },\r\n                            { item: \"pulse width\", weight: 6 },\r\n                            { item: \"sawtooth\", weight: 3 },\r\n                            { item: \"ramp\", weight: 3 },\r\n                            { item: \"trapezoid\", weight: 4 },\r\n\t\t\t\t{ item: \"rounded\", weight: 1 },\r\n                        ])].index;\r\n\t\t\t\t\t\tif (instrument.operators[i].waveform == 2) {\r\n\t\t\t\t\t\t\tinstrument.operators[i].pulseWidth = selectWeightedRandom([\r\n\t\t\t\t\t\t\t\t{ item: 0, weight: 3 },\r\n\t\t\t\t\t\t\t\t{ item: 1, weight: 5 },\r\n\t\t\t\t\t\t\t\t{ item: 2, weight: 7 },\r\n\t\t\t\t\t\t\t\t{ item: 3, weight: 10 },\r\n\t\t\t\t\t\t\t\t{ item: 4, weight: 15 },\r\n\t\t\t\t\t\t\t\t{ item: 5, weight: 25 }, // 50%\r\n\t\t\t\t\t\t\t\t{ item: 6, weight: 15 },\r\n\t\t\t\t\t\t\t\t{ item: 7, weight: 10 },\r\n\t\t\t\t\t\t\t\t{ item: 8, weight: 7 },\r\n\t\t\t\t\t\t\t\t{ item: 9, weight: 5 },\r\n\t\t\t\t\t\t\t\t{ item: 9, weight: 3 },\r\n\t\t\t\t\t\t\t]);\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t\tinstrument.feedbackAmplitude = (Math.pow(Math.random(), 3) * Config.operatorAmplitudeMax) | 0;\r\n                    if (instrument.envelopeCount < Config.maxEnvelopeCount && Math.random() < 0.4) {\r\n                        instrument.addEnvelope(Config.instrumentAutomationTargets.dictionary[\"feedbackAmplitude\"].index, 0, Config.envelopes.dictionary[selectWeightedRandom([\r\n                        { item: \"steady\", weight: 4 },\r\n                        { item: \"punch\", weight: 2 },\r\n                        { item: \"flare -1\", weight: 1 },\r\n                        { item: \"flare 1\", weight: 2 },\r\n                        { item: \"flare 2\", weight: 2 },\r\n                        { item: \"flare 3\", weight: 2 },\r\n                        { item: \"twang -1\", weight: 1 },\r\n                        { item: \"twang 1\", weight: 2 },\r\n                        { item: \"twang 2\", weight: 2 },\r\n                        { item: \"twang 3\", weight: 2 },\r\n                        { item: \"swell -1\", weight: 2 },\r\n                        { item: \"swell 1\", weight: 2 },\r\n                        { item: \"swell 2\", weight: 2 },\r\n                        { item: \"swell 3\", weight: 1 },\r\n                        { item: \"tremolo0\", weight: 1 },\r\n                        { item: \"tremolo1\", weight: 1 },\r\n                        { item: \"tremolo2\", weight: 1 },\r\n                        { item: \"tremolo3\", weight: 1 },\r\n                        { item: \"tremolo4\", weight: 1 },\r\n                        { item: \"tremolo5\", weight: 1 },\r\n                        { item: \"tremolo6\", weight: 1 },\r\n                        { item: \"decay -1\", weight: 1 },\r\n                        { item: \"decay 1\", weight: 1 },\r\n                        { item: \"decay 2\", weight: 2 },\r\n                        { item: \"decay 3\", weight: 2 },\r\n                        { item: \"wibble-1\", weight: 2 },\r\n                        { item: \"wibble 1\", weight: 2 },\r\n                        { item: \"wibble 2\", weight: 2 },\r\n                        { item: \"wibble 3\", weight: 2 },\r\n                        { item: \"linear-2\", weight: 1 },\r\n                        { item: \"linear-1\", weight: 1 },\r\n                        { item: \"linear 1\", weight: 2 },\r\n                        { item: \"linear 2\", weight: 2 },\r\n                        { item: \"linear 3\", weight: 1 },\r\n                        { item: \"rise -2\", weight: 2 },\r\n                        { item: \"rise -1\", weight: 2 },\r\n                        { item: \"rise 1\", weight: 2 },\r\n                        { item: \"rise 2\", weight: 2 },\r\n                        { item: \"rise 3\", weight: 1 },\r\n\t\t\t\t\t])].index);\r\n\t\t\t\t\t}\r\n\t\t\t\t} break;\r\n                default: throw new Error(\"Unhandled pitched instrument type in random generator.\");\r\n            }\r\n        }\r\n\r\n        doc.notifier.changed();\r\n        this._didSomething();\r\n    }\r\n}\r\n\r\nexport class ChangeTransition extends Change {\r\n    constructor(doc: SongDocument, newValue: number) {\r\n        super();\r\n        const instrument: Instrument = doc.song.channels[doc.channel].instruments[doc.getCurrentInstrument()];\r\n        const oldValue: number = instrument.transition;\r\n        if (oldValue != newValue) {\r\n            this._didSomething();\r\n            instrument.transition = newValue;\r\n            instrument.preset = instrument.type;\r\n            doc.notifier.changed();\r\n        }\r\n    }\r\n}\r\n\r\nexport class ChangeToggleEffects extends Change {\r\n    constructor(doc: SongDocument, toggleFlag: number, useInstrument: Instrument | null) {\r\n        super();\r\n        let instrument: Instrument = doc.song.channels[doc.channel].instruments[doc.getCurrentInstrument()];\r\n        if (useInstrument != null)\r\n            instrument = useInstrument;\r\n        const oldValue: number = instrument.effects;\r\n        const wasSelected: boolean = ((oldValue & (1 << toggleFlag)) != 0);\r\n        const newValue: number = wasSelected ? (oldValue & (~(1 << toggleFlag))) : (oldValue | (1 << toggleFlag));\r\n        instrument.effects = newValue;\r\n        // As a special case, toggling the panning effect doesn't remove the preset.\r\n        if (toggleFlag != EffectType.panning) instrument.preset = instrument.type;\r\n        if (wasSelected) instrument.clearInvalidEnvelopeTargets();\r\n        this._didSomething();\r\n        doc.notifier.changed();\r\n    }\r\n}\r\n\r\n\r\nexport class ChangePatternNumbers extends Change {\r\n    constructor(doc: SongDocument, value: number, startBar: number, startChannel: number, width: number, height: number) {\r\n        super();\r\n        if (value > doc.song.patternsPerChannel) throw new Error(\"invalid pattern\");\r\n\r\n        for (let bar: number = startBar; bar < startBar + width; bar++) {\r\n            for (let channelIndex: number = startChannel; channelIndex < startChannel + height; channelIndex++) {\r\n                if (doc.song.channels[channelIndex].bars[bar] != value) {\r\n                    doc.song.channels[channelIndex].bars[bar] = value;\r\n                    this._didSomething();\r\n                }\r\n            }\r\n        }\r\n\r\n        //Make mod channels shift viewed instrument over when pattern numbers change\r\n        if (startChannel >= doc.song.pitchChannelCount + doc.song.noiseChannelCount) {\r\n            const pattern: Pattern | null = doc.getCurrentPattern();\r\n            if (pattern != null) {\r\n                doc.viewedInstrument[startChannel] = pattern.instruments[0];\r\n            }\r\n            else {\r\n                doc.viewedInstrument[startChannel] = 0;\r\n            }\r\n        }\r\n\r\n        doc.notifier.changed();\r\n    }\r\n}\r\n\r\nexport class ChangeEdo extends Change {\r\n\tconstructor(doc: SongDocument, newValue: number) {\r\n\t\tsuper();\r\n\t\tif (Config.pitchesPerOctave != newValue) {\r\n\t\t\tConfig.newEDO = newValue;\r\n            this._didSomething();\r\n\t\t\twindow.location.hash = doc.song.toBase64String();\r\n\t\t\t// The prompt seems to get stuck if reloading is done too quickly.\r\n\t\t\tsetTimeout(() => { location.reload(); }, 50);\r\n\t\t}\r\n\t}\r\n}\r\n\r\nexport class ChangeBarCount extends Change {\r\n    constructor(doc: SongDocument, newValue: number, atBeginning: boolean) {\r\n        super();\r\n        if (doc.song.barCount != newValue) {\r\n            for (const channel of doc.song.channels) {\r\n                if (atBeginning) {\r\n                    while (channel.bars.length < newValue) {\r\n                        channel.bars.unshift(0);\r\n                    }\r\n                    if (doc.song.barCount > newValue) {\r\n                        channel.bars.splice(0, doc.song.barCount - newValue);\r\n                    }\r\n                } else {\r\n                    while (channel.bars.length < newValue) {\r\n                        channel.bars.push(0);\r\n                    }\r\n                    channel.bars.length = newValue;\r\n                }\r\n            }\r\n\r\n            if (atBeginning) {\r\n                const diff: number = newValue - doc.song.barCount;\r\n                doc.bar = Math.max(0, doc.bar + diff);\r\n                if (diff < 0 || doc.barScrollPos > 0) {\r\n                    doc.barScrollPos = Math.max(0, doc.barScrollPos + diff);\r\n                }\r\n                doc.song.loopStart = Math.max(0, doc.song.loopStart + diff);\r\n            }\r\n            doc.bar = Math.min(doc.bar, newValue - 1);\r\n            doc.song.loopLength = Math.min(newValue, doc.song.loopLength);\r\n            doc.song.loopStart = Math.min(newValue - doc.song.loopLength, doc.song.loopStart);\r\n            doc.song.barCount = newValue;\r\n            doc.notifier.changed();\r\n\r\n            this._didSomething();\r\n        }\r\n    }\r\n}\r\n\r\nexport class ChangeInsertBars extends Change {\r\n    constructor(doc: SongDocument, start: number, count: number) {\r\n        super();\r\n\r\n        const newLength: number = Math.min(Config.barCountMax, doc.song.barCount + count);\r\n        count = newLength - doc.song.barCount;\r\n        if (count == 0) return;\r\n\r\n        for (const channel of doc.song.channels) {\r\n            while (channel.bars.length < newLength) {\r\n                channel.bars.splice(start, 0, 0);\r\n            }\r\n        }\r\n        doc.song.barCount = newLength;\r\n\r\n        doc.bar += count;\r\n        doc.barScrollPos += count;\r\n        if (doc.song.loopStart >= start) {\r\n            doc.song.loopStart += count;\r\n        } else if (doc.song.loopStart + doc.song.loopLength >= start) {\r\n            doc.song.loopLength += count;\r\n        }\r\n\r\n        doc.notifier.changed();\r\n        this._didSomething();\r\n    }\r\n}\r\n\r\nexport class ChangeDeleteBars extends Change {\r\n    constructor(doc: SongDocument, start: number, count: number) {\r\n        super();\r\n\r\n        for (const channel of doc.song.channels) {\r\n            channel.bars.splice(start, count);\r\n            if (channel.bars.length == 0) channel.bars.push(0);\r\n        }\r\n        doc.song.barCount = Math.max(1, doc.song.barCount - count);\r\n\r\n        doc.bar = Math.max(0, doc.bar - count);\r\n\r\n        doc.barScrollPos = Math.max(0, doc.barScrollPos - count);\r\n        if (doc.song.loopStart >= start) {\r\n            doc.song.loopStart = Math.max(0, doc.song.loopStart - count);\r\n        } else if (doc.song.loopStart + doc.song.loopLength > start) {\r\n            doc.song.loopLength -= count;\r\n        }\r\n        doc.song.loopLength = Math.max(1, Math.min(doc.song.barCount - doc.song.loopStart, doc.song.loopLength));\r\n\r\n        doc.notifier.changed();\r\n        this._didSomething();\r\n    }\r\n}\r\n\r\nexport class ChangeLimiterSettings extends Change {\r\n    constructor(doc: SongDocument, limitRatio: number, compressionRatio: number, limitThreshold: number, compressionThreshold: number, limitRise: number, limitDecay: number, masterGain: number) {\r\n        super();\r\n\r\n        // This check causes issues with the state change handler because it gets superceded by whenupdated when the limiter prompt closes for some reason, causing the state to revert. I think it's because the notifier change needs to happen right as the prompt closes.\r\n        //if (limitRatio != doc.song.limitRatio || compressionRatio != doc.song.compressionRatio || limitThreshold != doc.song.limitThreshold || compressionThreshold != doc.song.compressionThreshold || limitRise != doc.song.limitRise || limitDecay != doc.song.limitDecay) {\r\n\r\n        doc.song.limitRatio = limitRatio;\r\n        doc.song.compressionRatio = compressionRatio;\r\n        doc.song.limitThreshold = limitThreshold;\r\n        doc.song.compressionThreshold = compressionThreshold;\r\n        doc.song.limitRise = limitRise;\r\n        doc.song.limitDecay = limitDecay;\r\n        doc.song.masterGain = masterGain;\r\n\r\n        doc.notifier.changed();\r\n        this._didSomething();\r\n        //}\r\n    }\r\n}\r\n\r\nexport class ChangeChannelOrder extends Change {\r\n    constructor(doc: SongDocument, selectionMin: number, selectionMax: number, offset: number) {\r\n        super();\r\n        // Change the order of two channels by swapping.\r\n        doc.song.channels.splice(selectionMin + offset, 0, ...doc.song.channels.splice(selectionMin, selectionMax - selectionMin + 1));\r\n\r\n        // Update mods for each channel\r\n        selectionMax = Math.max(selectionMax, selectionMin);\r\n        for (let channelIndex: number = doc.song.pitchChannelCount + doc.song.noiseChannelCount; channelIndex < doc.song.getChannelCount(); channelIndex++) {\r\n            for (let instrumentIdx: number = 0; instrumentIdx < doc.song.channels[channelIndex].instruments.length; instrumentIdx++) {\r\n                let instrument: Instrument = doc.song.channels[channelIndex].instruments[instrumentIdx];\r\n                for (let i: number = 0; i < Config.modCount; i++) {\r\n                    if (instrument.modChannels[i] >= selectionMin && instrument.modChannels[i] <= selectionMax) {\r\n                        instrument.modChannels[i] += offset;\r\n                    }\r\n                    else if (instrument.modChannels[i] >= selectionMin + offset && instrument.modChannels[i] <= selectionMax + offset) {\r\n                        instrument.modChannels[i] -= offset * (selectionMax - selectionMin + 1);\r\n                    }\r\n                }\r\n            }\r\n        }\r\n\r\n        doc.notifier.changed();\r\n        this._didSomething();\r\n\r\n    }\r\n}\r\n\r\nexport class ChangeCustomScale extends Change {\r\n    constructor(doc: SongDocument, flags: boolean[]) {\r\n        super();\r\n\r\n        for (let i: number = 0; i < Config.pitchesPerOctave; i++) {\r\n            doc.song.scaleCustom[i] = flags[i];\r\n        }\r\n\r\n        doc.notifier.changed();\r\n        this._didSomething();\r\n    }\r\n}\r\n\r\nexport class ChangeChannelCount extends Change {\r\n    constructor(doc: SongDocument, newPitchChannelCount: number, newNoiseChannelCount: number, newModChannelCount: number) {\r\n        super();\r\n        if (doc.song.pitchChannelCount != newPitchChannelCount || doc.song.noiseChannelCount != newNoiseChannelCount || doc.song.modChannelCount != newModChannelCount) {\r\n            const newChannels: Channel[] = [];\r\n\r\n            function changeGroup(newCount: number, oldCount: number, newStart: number, oldStart: number, octave: number, isNoise: boolean, isMod: boolean): void {\r\n                for (let i: number = 0; i < newCount; i++) {\r\n                    const channelIndex = i + newStart;\r\n                    const oldChannel = i + oldStart;\r\n                    if (i < oldCount) {\r\n                        newChannels[channelIndex] = doc.song.channels[oldChannel];\r\n                    } else {\r\n                        newChannels[channelIndex] = new Channel();\r\n                        newChannels[channelIndex].octave = octave;\r\n                        for (let j: number = 0; j < Config.instrumentCountMin; j++) {\r\n                            const instrument: Instrument = new Instrument(isNoise, isMod);\r\n\t\t\t    if (isMod) instrument.type = 9;\r\n                            if (!isMod) {\r\n                                const presetValue: number = pickRandomPresetValue(isNoise);\r\n                                const preset: Preset = EditorConfig.valueToPreset(presetValue)!;\r\n                                instrument.fromJsonObject(preset.settings, isNoise, isMod, doc.song.rhythm == 0 || doc.song.rhythm == 2, doc.song.rhythm >= 2);\r\n                                instrument.preset = presetValue;\r\n                            }\r\n                            newChannels[channelIndex].instruments[j] = instrument;\r\n                        }\r\n                        for (let j: number = 0; j < doc.song.patternsPerChannel; j++) {\r\n                            newChannels[channelIndex].patterns[j] = new Pattern();\r\n                        }\r\n                        for (let j: number = 0; j < doc.song.barCount; j++) {\r\n                            newChannels[channelIndex].bars[j] = 0;\r\n                        }\r\n                    }\r\n                }\r\n            }\r\n\r\n            changeGroup(newPitchChannelCount, doc.song.pitchChannelCount, 0, 0, 3, false, false);\r\n            changeGroup(newNoiseChannelCount, doc.song.noiseChannelCount, newPitchChannelCount, doc.song.pitchChannelCount, 0, true, false);\r\n            changeGroup(newModChannelCount, doc.song.modChannelCount, newNoiseChannelCount + newPitchChannelCount, doc.song.pitchChannelCount + doc.song.noiseChannelCount, 0, false, true);\r\n\r\n            let oldPitchCount: number = doc.song.pitchChannelCount;\r\n            doc.song.pitchChannelCount = newPitchChannelCount;\r\n            doc.song.noiseChannelCount = newNoiseChannelCount;\r\n            doc.song.modChannelCount = newModChannelCount;\r\n\r\n            for (let channelIndex: number = 0; channelIndex < doc.song.getChannelCount(); channelIndex++) {\r\n                doc.song.channels[channelIndex] = newChannels[channelIndex];\r\n            }\r\n            doc.song.channels.length = doc.song.getChannelCount();\r\n\r\n            doc.channel = Math.min(doc.channel, newPitchChannelCount + newNoiseChannelCount + newModChannelCount - 1);\r\n\r\n            // Determine if any mod instruments now refer to an invalid channel. Unset them if so\r\n            for (let channelIndex: number = doc.song.pitchChannelCount + doc.song.noiseChannelCount; channelIndex < doc.song.getChannelCount(); channelIndex++) {\r\n                for (let instrumentIdx: number = 0; instrumentIdx < doc.song.channels[channelIndex].instruments.length; instrumentIdx++) {\r\n                    for (let mod: number = 0; mod < Config.modCount; mod++) {\r\n\r\n                        let instrument: Instrument = doc.song.channels[channelIndex].instruments[instrumentIdx];\r\n                        let modChannel: number = instrument.modChannels[mod];\r\n\r\n                        // Boundary checking\r\n                        if ((modChannel >= doc.song.pitchChannelCount && modChannel < oldPitchCount) || modChannel >= doc.song.pitchChannelCount + doc.song.noiseChannelCount) {\r\n                            instrument.modulators[mod] = Config.modulators.dictionary[\"none\"].index;\r\n                        }\r\n\r\n                        // Bump indices - new pitch channel added, bump all noise mods.\r\n                        if (modChannel >= oldPitchCount && oldPitchCount < newPitchChannelCount) {\r\n                            instrument.modChannels[mod] += newPitchChannelCount - oldPitchCount;\r\n                        }\r\n                    }\r\n                }\r\n            }\r\n\r\n            doc.notifier.changed();\r\n\r\n            ColorConfig.resetColors();\r\n\r\n            this._didSomething();\r\n        }\r\n    }\r\n}\r\n\r\nexport class ChangeAddChannel extends ChangeGroup {\r\n\tconstructor(doc: SongDocument, index: number, isNoise: boolean, isMod: boolean) {\r\n\t\tsuper();\r\n\t\tconst newPitchChannelCount: number = doc.song.pitchChannelCount + (isNoise || isMod ? 0 : 1);\r\n        const newNoiseChannelCount: number = doc.song.noiseChannelCount + (!isNoise || isMod ? 0 : 1);\r\n        const newModChannelCount: number = doc.song.modChannelCount + (isNoise || !isMod ? 0 : 1);\r\n\r\n        if (newPitchChannelCount <= Config.pitchChannelCountMax && newNoiseChannelCount <= Config.noiseChannelCountMax && newModChannelCount <= Config.modChannelCountMax) {\r\n            const addedChannelIndex: number = isNoise ? doc.song.pitchChannelCount + doc.song.noiseChannelCount : doc.song.pitchChannelCount;\r\n            this.append(new ChangeChannelCount(doc, newPitchChannelCount, newNoiseChannelCount, newModChannelCount));\r\n            if (addedChannelIndex - 1 >= index) {\r\n                this.append(new ChangeChannelOrder(doc, index, addedChannelIndex - 1, 1));\r\n            }\r\n\r\n            doc.synth.computeLatestModValues();\r\n            doc.recalcChannelNames = true;\r\n\t\t}\r\n\t}\r\n}\r\n\r\nexport class ChangeRemoveChannel extends ChangeGroup {\r\n\tconstructor(doc: SongDocument, minIndex: number, maxIndex: number) {\r\n        super();\r\n\r\n        const oldMax: number = maxIndex;\r\n\r\n        // Update modulators - if a higher index was removed, shift down\r\n        for (let modChannel: number = doc.song.pitchChannelCount + doc.song.noiseChannelCount; modChannel < doc.song.channels.length; modChannel++) {\r\n            for (let instrumentIndex: number = 0; instrumentIndex < doc.song.channels[modChannel].instruments.length; instrumentIndex++) {\r\n                const modInstrument: Instrument = doc.song.channels[modChannel].instruments[instrumentIndex];\r\n                for (let mod: number = 0; mod < Config.modCount; mod++) {\r\n                    if (modInstrument.modChannels[mod] >= minIndex && modInstrument.modChannels[mod] <= oldMax) {\r\n                        this.append(new ChangeModChannel(doc, mod, 0, modInstrument));\r\n                    }\r\n                    else if (modInstrument.modChannels[mod] > oldMax) {\r\n                        this.append(new ChangeModChannel(doc, mod, modInstrument.modChannels[mod] - (oldMax - minIndex + 1) + 2, modInstrument));\r\n                    }\r\n                }\r\n            }\r\n        }\r\n\r\n\t\twhile (maxIndex >= minIndex) {\r\n            const isNoise: boolean = doc.song.getChannelIsNoise(maxIndex);\r\n            const isMod: boolean = doc.song.getChannelIsMod(maxIndex);\r\n\t\t\tdoc.song.channels.splice(maxIndex, 1);\r\n            if (isNoise) {\r\n                doc.song.noiseChannelCount--;\r\n            } else if (isMod) {\r\n                doc.song.modChannelCount--;\r\n            } else {\r\n\t\t\t\tdoc.song.pitchChannelCount--;\r\n\t\t\t}\r\n            maxIndex--;\r\n\t\t}\r\n\t\t\r\n        if (doc.song.pitchChannelCount < Config.pitchChannelCountMin) {\r\n            this.append(new ChangeChannelCount(doc, Config.pitchChannelCountMin, doc.song.noiseChannelCount, doc.song.modChannelCount));\r\n        }\r\n\r\n        ColorConfig.resetColors();\r\n        doc.recalcChannelNames = true;\r\n\r\n\t\tthis.append(new ChangeChannelBar(doc, Math.max(0, minIndex - 1), doc.bar));\r\n\r\n        doc.synth.computeLatestModValues();\r\n\r\n\t\tthis._didSomething();\r\n\t\tdoc.notifier.changed();\r\n\t}\r\n}\r\n\r\nexport class ChangeChannelBar extends Change {\r\n    constructor(doc: SongDocument, newChannel: number, newBar: number, silently: boolean = false) {\r\n        super();\r\n        const oldChannel: number = doc.channel;\r\n        const oldBar: number = doc.bar;\r\n        doc.channel = newChannel;\r\n        doc.bar = newBar;\r\n        if (!silently) {\r\n            doc.selection.scrollToSelectedPattern();\r\n        }\r\n        // Mod channels always jump to viewing the active instrument for the mod.\r\n        if (doc.song.getChannelIsMod(doc.channel)) {\r\n            const pattern: Pattern | null = doc.song!.getPattern(doc.channel, doc.bar);\r\n            if (pattern != null)\r\n                doc.viewedInstrument[doc.channel] = pattern.instruments[0];\r\n        }\r\n        doc.notifier.changed();\r\n        if (oldChannel != newChannel || oldBar != newBar) {\r\n            this._didSomething();\r\n        }\r\n    }\r\n}\r\n\r\nexport class ChangeUnison extends Change {\r\n    constructor(doc: SongDocument, newValue: number) {\r\n        super();\r\n        const instrument: Instrument = doc.song.channels[doc.channel].instruments[doc.getCurrentInstrument()];\r\n        const oldValue: number = instrument.unison;\r\n        if (oldValue != newValue) {\r\n            this._didSomething();\r\n            instrument.unison = newValue;\r\n            instrument.preset = instrument.type;\r\n            doc.notifier.changed();\r\n        }\r\n    }\r\n}\r\n\r\nexport class ChangeChord extends Change {\r\n    constructor(doc: SongDocument, newValue: number) {\r\n        super();\r\n        const instrument: Instrument = doc.song.channels[doc.channel].instruments[doc.getCurrentInstrument()];\r\n        const oldValue: number = instrument.chord;\r\n        if (oldValue != newValue) {\r\n            this._didSomething();\r\n            instrument.chord = newValue;\r\n            instrument.preset = instrument.type;\r\n            doc.notifier.changed();\r\n        }\r\n    }\r\n}\r\n\r\nexport class ChangeVibrato extends Change {\r\n    constructor(doc: SongDocument, newValue: number) {\r\n        super();\r\n        const instrument: Instrument = doc.song.channels[doc.channel].instruments[doc.getCurrentInstrument()];\r\n        const oldValue: number = instrument.vibrato;\r\n        if (oldValue != newValue) {\r\n            instrument.vibrato = newValue;\r\n            instrument.vibratoDepth = Config.vibratos[instrument.vibrato].amplitude;\r\n            instrument.vibratoDelay = Config.vibratos[instrument.vibrato].delayTicks / 2;\r\n            instrument.vibratoSpeed = 10; // default\r\n            instrument.vibratoType = Config.vibratos[instrument.vibrato].type;\r\n            instrument.preset = instrument.type;\r\n            doc.notifier.changed();\r\n            this._didSomething();\r\n        }\r\n    }\r\n}\r\n\r\nexport class ChangeVibratoDepth extends Change {\r\n    constructor(doc: SongDocument, oldValue: number, newValue: number) {\r\n        super();\r\n        const instrument: Instrument = doc.song.channels[doc.channel].instruments[doc.getCurrentInstrument()];\r\n        let prevVibrato: number = instrument.vibrato;\r\n        doc.synth.unsetMod(Config.modulators.dictionary[\"vibrato depth\"].index, doc.channel, doc.getCurrentInstrument());\r\n\r\n        doc.notifier.changed();\r\n        if (oldValue != newValue || prevVibrato != Config.vibratos.length) {\r\n            instrument.vibratoDepth = newValue / 25;\r\n            instrument.vibrato = Config.vibratos.length; // Custom\r\n            doc.notifier.changed();\r\n            this._didSomething();\r\n        }\r\n    }\r\n}\r\n\r\nexport class ChangeVibratoSpeed extends Change {\r\n    constructor(doc: SongDocument, oldValue: number, newValue: number) {\r\n        super();\r\n        const instrument: Instrument = doc.song.channels[doc.channel].instruments[doc.getCurrentInstrument()];\r\n        let prevVibrato: number = instrument.vibrato;\r\n        doc.synth.unsetMod(Config.modulators.dictionary[\"vibrato speed\"].index, doc.channel, doc.getCurrentInstrument());\r\n\r\n        doc.notifier.changed();\r\n        if (oldValue != newValue || prevVibrato != Config.vibratos.length) {\r\n            instrument.vibratoSpeed = newValue;\r\n            instrument.vibrato = Config.vibratos.length; // Custom\r\n            doc.notifier.changed();\r\n            this._didSomething();\r\n        }\r\n    }\r\n}\r\n\r\nexport class ChangeVibratoDelay extends Change {\r\n    constructor(doc: SongDocument, oldValue: number, newValue: number) {\r\n        super();\r\n        const instrument: Instrument = doc.song.channels[doc.channel].instruments[doc.getCurrentInstrument()];\r\n        let prevVibrato: number = instrument.vibrato;\r\n        doc.synth.unsetMod(Config.modulators.dictionary[\"vibrato delay\"].index, doc.channel, doc.getCurrentInstrument());\r\n\r\n        doc.notifier.changed();\r\n        if (oldValue != newValue || prevVibrato != Config.vibratos.length) {\r\n            instrument.vibratoDelay = newValue;\r\n            instrument.vibrato = Config.vibratos.length; // Custom\r\n            doc.notifier.changed();\r\n            this._didSomething();\r\n        }\r\n    }\r\n}\r\n\r\nexport class ChangeVibratoType extends Change {\r\n    constructor(doc: SongDocument, newValue: number) {\r\n        super();\r\n        const instrument: Instrument = doc.song.channels[doc.channel].instruments[doc.getCurrentInstrument()];\r\n        const oldValue: number = instrument.vibratoType;\r\n        let prevVibrato: number = instrument.vibrato;\r\n\r\n        doc.notifier.changed();\r\n        if (oldValue != newValue || prevVibrato != Config.vibratos.length) {\r\n            instrument.vibratoType = newValue;\r\n            instrument.vibrato = Config.vibratos.length; // Custom\r\n            doc.notifier.changed();\r\n            this._didSomething();\r\n        }\r\n    }\r\n}\r\n\r\nexport class ChangeArpeggioSpeed extends Change {\r\n    constructor(doc: SongDocument, oldValue: number, newValue: number) {\r\n        super();\r\n        const instrument: Instrument = doc.song.channels[doc.channel].instruments[doc.getCurrentInstrument()];\r\n        instrument.arpeggioSpeed = newValue;\r\n        doc.synth.unsetMod(Config.modulators.dictionary[\"arp speed\"].index, doc.channel, doc.getCurrentInstrument());\r\n\r\n        doc.notifier.changed();\r\n        if (oldValue != newValue) this._didSomething();\r\n    }\r\n}\r\n\r\nexport class ChangeFastTwoNoteArp extends Change {\r\n    constructor(doc: SongDocument, newValue: boolean) {\r\n        super();\r\n        const instrument: Instrument = doc.song.channels[doc.channel].instruments[doc.getCurrentInstrument()];\r\n        const oldValue = instrument.fastTwoNoteArp;\r\n\r\n        doc.notifier.changed();\r\n        if (oldValue != newValue) {\r\n            instrument.fastTwoNoteArp = newValue;\r\n            this._didSomething();\r\n        }\r\n    }\r\n}\r\n\r\nexport class ChangeClicklessTransition extends Change {\r\n    constructor(doc: SongDocument, newValue: boolean) {\r\n        super();\r\n        const instrument: Instrument = doc.song.channels[doc.channel].instruments[doc.getCurrentInstrument()];\r\n        const oldValue = instrument.clicklessTransition;\r\n\r\n        doc.notifier.changed();\r\n        if (oldValue != newValue) {\r\n            instrument.clicklessTransition = newValue;\r\n            this._didSomething();\r\n        }\r\n    }\r\n}\r\n\r\nexport class ChangeAliasing extends Change {\r\n    constructor(doc: SongDocument, newValue: boolean) {\r\n        super();\r\n        const instrument: Instrument = doc.song.channels[doc.channel].instruments[doc.getCurrentInstrument()];\r\n        const oldValue = instrument.aliases;\r\n\r\n        doc.notifier.changed();\r\n        if (oldValue != newValue) {\r\n            instrument.aliases = newValue;\r\n            this._didSomething();\r\n        }\r\n    }\r\n}\r\n\r\nexport class ChangeSpectrum extends Change {\r\n    constructor(doc: SongDocument, instrument: Instrument, spectrumWave: SpectrumWave) {\r\n        super();\r\n        spectrumWave.markCustomWaveDirty();\r\n        instrument.preset = instrument.type;\r\n        doc.notifier.changed();\r\n        this._didSomething();\r\n    }\r\n}\r\n\r\nexport class ChangeHarmonics extends Change {\r\n    constructor(doc: SongDocument, instrument: Instrument, harmonicsWave: HarmonicsWave) {\r\n        super();\r\n        harmonicsWave.markCustomWaveDirty();\r\n        instrument.preset = instrument.type;\r\n        doc.notifier.changed();\r\n        this._didSomething();\r\n    }\r\n}\r\n\r\nexport class ChangeDrumsetEnvelope extends Change {\r\n    constructor(doc: SongDocument, drumIndex: number, newValue: number) {\r\n        super();\r\n        const instrument: Instrument = doc.song.channels[doc.channel].instruments[doc.getCurrentInstrument()];\r\n        const oldValue: number = instrument.drumsetEnvelopes[drumIndex];\r\n        if (oldValue != newValue) {\r\n            instrument.drumsetEnvelopes[drumIndex] = newValue;\r\n            instrument.preset = instrument.type;\r\n            doc.notifier.changed();\r\n            this._didSomething();\r\n        }\r\n    }\r\n}\r\n\r\nclass ChangeInstrumentSlider extends Change {\r\n    protected _instrument: Instrument;\r\n    constructor(private _doc: SongDocument) {\r\n        super();\r\n        this._instrument = this._doc.song.channels[this._doc.channel].instruments[this._doc.getCurrentInstrument()];\r\n    }\r\n\r\n    public commit(): void {\r\n        if (!this.isNoop()) {\r\n            this._instrument.preset = this._instrument.type;\r\n            this._doc.notifier.changed();\r\n        }\r\n    }\r\n}\r\n\r\nexport class ChangePulseWidth extends ChangeInstrumentSlider {\r\n    constructor(doc: SongDocument, oldValue: number, newValue: number) {\r\n        super(doc);\r\n        this._instrument.pulseWidth = newValue;\r\n        doc.synth.unsetMod(Config.modulators.dictionary[\"pulse width\"].index, doc.channel, doc.getCurrentInstrument());\r\n        doc.notifier.changed();\r\n        if (oldValue != newValue) this._didSomething();\r\n    }\r\n}\r\n\r\nexport class ChangePitchShift extends ChangeInstrumentSlider {\r\n    constructor(doc: SongDocument, oldValue: number, newValue: number) {\r\n        super(doc);\r\n        this._instrument.pitchShift = newValue;\r\n        doc.notifier.changed();\r\n        if (oldValue != newValue) this._didSomething();\r\n    }\r\n}\r\n\r\nexport class ChangeDetune extends ChangeInstrumentSlider {\r\n    constructor(doc: SongDocument, oldValue: number, newValue: number) {\r\n        super(doc);\r\n        this._instrument.detune = newValue + Config.detuneCenter;\r\n        doc.notifier.changed();\r\n        doc.synth.unsetMod(Config.modulators.dictionary[\"detune\"].index, doc.channel, doc.getCurrentInstrument());\r\n        if (oldValue != newValue) this._didSomething();\r\n    }\r\n}\r\n\r\nexport class ChangeDistortion extends ChangeInstrumentSlider {\r\n    constructor(doc: SongDocument, oldValue: number, newValue: number) {\r\n        super(doc);\r\n        this._instrument.distortion = newValue;\r\n        doc.notifier.changed();\r\n        doc.synth.unsetMod(Config.modulators.dictionary[\"distortion\"].index, doc.channel, doc.getCurrentInstrument());\r\n        if (oldValue != newValue) this._didSomething();\r\n    }\r\n}\r\n\r\nexport class ChangeBitcrusherFreq extends ChangeInstrumentSlider {\r\n    constructor(doc: SongDocument, oldValue: number, newValue: number) {\r\n        super(doc);\r\n        this._instrument.bitcrusherFreq = newValue;\r\n        //doc.synth.unsetMod(Config.modulators.dictionary[\"bit crush\"].index, doc.channel, doc.getCurrentInstrument());\r\n        doc.notifier.changed();\r\n        if (oldValue != newValue) this._didSomething();\r\n    }\r\n}\r\n\r\nexport class ChangeBitcrusherQuantization extends ChangeInstrumentSlider {\r\n    constructor(doc: SongDocument, oldValue: number, newValue: number) {\r\n        super(doc);\r\n        //doc.synth.unsetMod(Config.modulators.dictionary[\"freq crush\"].index, doc.channel, doc.getCurrentInstrument());\r\n        this._instrument.bitcrusherQuantization = newValue;\r\n        doc.notifier.changed();\r\n        if (oldValue != newValue) this._didSomething();\r\n    }\r\n}\r\n\r\nexport class ChangeStringSustain extends ChangeInstrumentSlider {\r\n    constructor(doc: SongDocument, oldValue: number, newValue: number) {\r\n        super(doc);\r\n        this._instrument.stringSustain = newValue;\r\n        doc.synth.unsetMod(Config.modulators.dictionary[\"sustain\"].index, doc.channel, doc.getCurrentInstrument());\r\n        doc.notifier.changed();\r\n        if (oldValue != newValue) this._didSomething();\r\n    }\r\n}\r\n\r\nexport class ChangeEQFilterType extends Change {\r\n    constructor(doc: SongDocument, instrument: Instrument, newValue: boolean) {\r\n        super();\r\n        instrument.eqFilterType = newValue;\r\n        if (newValue == true) { // To Simple - clear eq filter\r\n            instrument.eqFilter.reset();\r\n            instrument.tmpEqFilterStart = instrument.eqFilter;\r\n            instrument.tmpEqFilterEnd = null;\r\n        }\r\n        else {\r\n            // To Advanced - convert filter\r\n            instrument.eqFilter.convertLegacySettings(instrument.eqFilterSimpleCut, instrument.eqFilterSimplePeak, Config.envelopes.dictionary[\"none\"]);\r\n            instrument.tmpEqFilterStart = instrument.eqFilter;\r\n            instrument.tmpEqFilterEnd = null;\r\n        }\r\n        instrument.clearInvalidEnvelopeTargets();\r\n        doc.notifier.changed();\r\n        this._didSomething();\r\n    }\r\n}\r\n\r\nexport class ChangeNoteFilterType extends Change {\r\n    constructor(doc: SongDocument, instrument: Instrument, newValue: boolean) {\r\n        super();\r\n        instrument.noteFilterType = newValue;\r\n        if (newValue == true) { // To Simple - clear note filter, kill modulators\r\n            instrument.noteFilter.reset();\r\n            instrument.tmpNoteFilterStart = instrument.noteFilter;\r\n            instrument.tmpNoteFilterEnd = null;\r\n        }\r\n        else {\r\n            // To Advanced - convert filter, kill modulators\r\n            instrument.noteFilter.convertLegacySettings(instrument.noteFilterSimpleCut, instrument.noteFilterSimplePeak, Config.envelopes.dictionary[\"none\"]);\r\n            instrument.tmpNoteFilterStart = instrument.noteFilter;\r\n            instrument.tmpNoteFilterEnd = null;\r\n        }\r\n        instrument.clearInvalidEnvelopeTargets();\r\n        doc.notifier.changed();\r\n        this._didSomething();\r\n    }\r\n}\r\n\r\nexport class ChangeEQFilterSimpleCut extends ChangeInstrumentSlider {\r\n    constructor(doc: SongDocument, oldValue: number, newValue: number) {\r\n        super(doc);\r\n        this._instrument.eqFilterSimpleCut = newValue;\r\n        doc.synth.unsetMod(Config.modulators.dictionary[\"eq filt cut\"].index, doc.channel, doc.getCurrentInstrument());\r\n        doc.notifier.changed();\r\n        if (oldValue != newValue) this._didSomething();\r\n    }\r\n}\r\n\r\nexport class ChangeEQFilterSimplePeak extends ChangeInstrumentSlider {\r\n    constructor(doc: SongDocument, oldValue: number, newValue: number) {\r\n        super(doc);\r\n        this._instrument.eqFilterSimplePeak = newValue;\r\n        doc.synth.unsetMod(Config.modulators.dictionary[\"eq filt peak\"].index, doc.channel, doc.getCurrentInstrument());\r\n        doc.notifier.changed();\r\n        if (oldValue != newValue) this._didSomething();\r\n    }\r\n}\r\n\r\nexport class ChangeNoteFilterSimpleCut extends ChangeInstrumentSlider {\r\n    constructor(doc: SongDocument, oldValue: number, newValue: number) {\r\n        super(doc);\r\n        this._instrument.noteFilterSimpleCut = newValue;\r\n        doc.synth.unsetMod(Config.modulators.dictionary[\"note filt cut\"].index, doc.channel, doc.getCurrentInstrument());\r\n        doc.notifier.changed();\r\n        if (oldValue != newValue) this._didSomething();\r\n    }\r\n}\r\n\r\nexport class ChangeNoteFilterSimplePeak extends ChangeInstrumentSlider {\r\n    constructor(doc: SongDocument, oldValue: number, newValue: number) {\r\n        super(doc);\r\n        this._instrument.noteFilterSimplePeak = newValue;\r\n        doc.synth.unsetMod(Config.modulators.dictionary[\"note filt peak\"].index, doc.channel, doc.getCurrentInstrument());\r\n        doc.notifier.changed();\r\n        if (oldValue != newValue) this._didSomething();\r\n    }\r\n}\r\n\r\nexport class ChangeFilterAddPoint extends UndoableChange {\r\n    private _doc: SongDocument;\r\n    private _instrument: Instrument;\r\n    private _instrumentPrevPreset: number;\r\n    private _instrumentNextPreset: number;\r\n    private _filterSettings: FilterSettings;\r\n    private _point: FilterControlPoint;\r\n    private _index: number;\r\n    private _envelopeTargetsAdd: number[] = [];\r\n    private _envelopeIndicesAdd: number[] = [];\r\n    private _envelopeTargetsRemove: number[] = [];\r\n    private _envelopeIndicesRemove: number[] = [];\r\n    constructor(doc: SongDocument, filterSettings: FilterSettings, point: FilterControlPoint, index: number, isNoteFilter: boolean, deletion: boolean = false) {\r\n        super(deletion);\r\n        this._doc = doc;\r\n        this._instrument = this._doc.song.channels[this._doc.channel].instruments[this._doc.getCurrentInstrument()];\r\n        this._instrumentNextPreset = deletion ? this._instrument.preset : this._instrument.type;\r\n        this._instrumentPrevPreset = deletion ? this._instrument.type : this._instrument.preset;\r\n        this._filterSettings = filterSettings;\r\n        this._point = point;\r\n        this._index = index;\r\n\r\n        for (let envelopeIndex: number = 0; envelopeIndex < this._instrument.envelopeCount; envelopeIndex++) {\r\n            let target: number = this._instrument.envelopes[envelopeIndex].target;\r\n            let targetIndex: number = this._instrument.envelopes[envelopeIndex].index;\r\n            this._envelopeTargetsAdd.push(target);\r\n            this._envelopeIndicesAdd.push(targetIndex);\r\n            if (deletion) {\r\n                // When deleting a filter control point, find all envelopes that targeted that\r\n                // point and clear them, and all envelopes that targeted later points and\r\n                // decrement those to keep them in sync with the new list of points.\r\n                const automationTarget: AutomationTarget = Config.instrumentAutomationTargets[target];\r\n                if (automationTarget.isFilter && (automationTarget.effect == EffectType.noteFilter) == isNoteFilter) {\r\n                    if (automationTarget.maxCount == Config.filterMaxPoints) {\r\n                        if (targetIndex == index) {\r\n                            target = Config.instrumentAutomationTargets.dictionary[\"none\"].index;\r\n                            targetIndex = 0;\r\n                        } else if (targetIndex > index) {\r\n                            targetIndex--;\r\n                        }\r\n                    } else {\r\n                        if (filterSettings.controlPointCount <= 1) {\r\n                            target = Config.instrumentAutomationTargets.dictionary[\"none\"].index;\r\n                            targetIndex = 0;\r\n                        }\r\n                    }\r\n                }\r\n            }\r\n            this._envelopeTargetsRemove.push(target);\r\n            this._envelopeIndicesRemove.push(targetIndex);\r\n        }\r\n\r\n        this._didSomething();\r\n        this.redo();\r\n    }\r\n\r\n    protected _doForwards(): void {\r\n        this._filterSettings.controlPoints.splice(this._index, 0, this._point);\r\n        this._filterSettings.controlPointCount++;\r\n        this._filterSettings.controlPoints.length = this._filterSettings.controlPointCount;\r\n        this._instrument.preset = this._instrumentNextPreset;\r\n        for (let envelopeIndex: number = 0; envelopeIndex < this._instrument.envelopeCount; envelopeIndex++) {\r\n            this._instrument.envelopes[envelopeIndex].target = this._envelopeTargetsAdd[envelopeIndex];\r\n            this._instrument.envelopes[envelopeIndex].index = this._envelopeIndicesAdd[envelopeIndex];\r\n        }\r\n        this._instrument.tmpEqFilterStart = this._instrument.eqFilter;\r\n        this._instrument.tmpEqFilterEnd = null;\r\n        this._instrument.tmpNoteFilterStart = this._instrument.noteFilter;\r\n        this._instrument.tmpNoteFilterEnd = null;\r\n        this._doc.notifier.changed();\r\n    }\r\n\r\n    protected _doBackwards(): void {\r\n        this._filterSettings.controlPoints.splice(this._index, 1);\r\n        this._filterSettings.controlPointCount--;\r\n        this._filterSettings.controlPoints.length = this._filterSettings.controlPointCount;\r\n        this._instrument.preset = this._instrumentPrevPreset;\r\n        for (let envelopeIndex: number = 0; envelopeIndex < this._instrument.envelopeCount; envelopeIndex++) {\r\n            this._instrument.envelopes[envelopeIndex].target = this._envelopeTargetsRemove[envelopeIndex];\r\n            this._instrument.envelopes[envelopeIndex].index = this._envelopeIndicesRemove[envelopeIndex];\r\n        }\r\n        this._instrument.tmpEqFilterStart = this._instrument.eqFilter;\r\n        this._instrument.tmpEqFilterEnd = null;\r\n        this._instrument.tmpNoteFilterStart = this._instrument.noteFilter;\r\n        this._instrument.tmpNoteFilterEnd = null;\r\n        this._doc.notifier.changed();\r\n    }\r\n}\r\n\r\nexport class ChangeFilterMovePoint extends UndoableChange {\r\n    private _doc: SongDocument;\r\n    private _instrument: Instrument;\r\n    private _instrumentPrevPreset: number;\r\n    private _instrumentNextPreset: number;\r\n    private _point: FilterControlPoint;\r\n    private _oldFreq: number;\r\n    private _newFreq: number;\r\n    private _oldGain: number;\r\n    private _newGain: number;\r\n    constructor(doc: SongDocument, point: FilterControlPoint, oldFreq: number, newFreq: number, oldGain: number, newGain: number) {\r\n        super(false);\r\n        this._doc = doc;\r\n        this._instrument = this._doc.song.channels[this._doc.channel].instruments[this._doc.getCurrentInstrument()];\r\n        this._instrumentNextPreset = this._instrument.type;\r\n        this._instrumentPrevPreset = this._instrument.preset;\r\n        this._point = point;\r\n        this._oldFreq = oldFreq;\r\n        this._newFreq = newFreq;\r\n        this._oldGain = oldGain;\r\n        this._newGain = newGain;\r\n        this._didSomething();\r\n        this.redo();\r\n    }\r\n\r\n    protected _doForwards(): void {\r\n        this._point.freq = this._newFreq;\r\n        this._point.gain = this._newGain;\r\n        this._instrument.preset = this._instrumentNextPreset;\r\n        this._instrument.tmpEqFilterStart = this._instrument.eqFilter;\r\n        this._instrument.tmpEqFilterEnd = null;\r\n        this._instrument.tmpNoteFilterStart = this._instrument.noteFilter;\r\n        this._instrument.tmpNoteFilterEnd = null;\r\n        this._doc.notifier.changed();\r\n    }\r\n\r\n    protected _doBackwards(): void {\r\n        this._point.freq = this._oldFreq;\r\n        this._point.gain = this._oldGain;\r\n        this._instrument.preset = this._instrumentPrevPreset;\r\n        this._instrument.tmpEqFilterStart = this._instrument.eqFilter;\r\n        this._instrument.tmpEqFilterEnd = null;\r\n        this._instrument.tmpNoteFilterStart = this._instrument.noteFilter;\r\n        this._instrument.tmpNoteFilterEnd = null;\r\n        this._doc.notifier.changed();\r\n    }\r\n}\r\n\r\nexport class ChangeFilterSettings extends UndoableChange {\r\n    private _doc: SongDocument;\r\n    private _instrument: Instrument;\r\n    private _instrumentPrevPreset: number;\r\n    private _instrumentNextPreset: number;\r\n    private _filterSettings: FilterSettings;\r\n    private _subFilters: (FilterSettings | null)[];\r\n    private _oldSubFilters: (FilterSettings | null)[];\r\n    private _oldSettings: FilterSettings;\r\n    private _useNoteFilter: boolean;\r\n    constructor(doc: SongDocument, settings: FilterSettings, oldSettings: FilterSettings, useNoteFilter: boolean, subFilters: (FilterSettings | null)[] | null = null, oldSubFilters: (FilterSettings | null)[] | null = null) {\r\n        super(false);\r\n        this._doc = doc;\r\n        this._instrument = this._doc.song.channels[this._doc.channel].instruments[this._doc.getCurrentInstrument()];\r\n        this._instrumentNextPreset = this._instrument.type;\r\n        this._instrumentPrevPreset = this._instrument.preset;\r\n        this._oldSettings = oldSettings;\r\n        this._useNoteFilter = useNoteFilter;\r\n        this._filterSettings = settings;\r\n        if (subFilters != null && oldSubFilters != null) {\r\n            this._subFilters = subFilters;\r\n            this._oldSubFilters = oldSubFilters;\r\n        }\r\n        this._instrument.clearInvalidEnvelopeTargets();\r\n        this._didSomething();\r\n        this.redo();\r\n    }\r\n\r\n    protected _doForwards(): void {\r\n\r\n        if (this._useNoteFilter) {\r\n            this._instrument.noteFilter = this._filterSettings;\r\n            if (this._subFilters != null)\r\n                this._instrument.noteSubFilters = this._subFilters;\r\n            this._instrument.tmpNoteFilterStart = this._instrument.noteFilter;\r\n            this._instrument.tmpNoteFilterEnd = null;\r\n        } else {\r\n            this._instrument.eqFilter = this._filterSettings;\r\n            if (this._subFilters != null)\r\n                this._instrument.eqSubFilters = this._subFilters;\r\n            this._instrument.tmpEqFilterStart = this._instrument.eqFilter;\r\n            this._instrument.tmpEqFilterEnd = null;\r\n        }\r\n\r\n        this._instrument.preset = this._instrumentNextPreset;\r\n        this._instrument.clearInvalidEnvelopeTargets();\r\n        this._doc.notifier.changed();\r\n    }\r\n\r\n    protected _doBackwards(): void {\r\n        if (this._useNoteFilter) {\r\n            this._instrument.noteFilter = this._oldSettings;\r\n            if (this._oldSubFilters != null)\r\n                this._instrument.noteSubFilters = this._oldSubFilters;\r\n            this._instrument.tmpNoteFilterStart = this._instrument.noteFilter;\r\n            this._instrument.tmpNoteFilterEnd = null;\r\n        } else {\r\n            this._instrument.eqFilter = this._oldSettings;\r\n            if (this._oldSubFilters != null)\r\n                this._instrument.eqSubFilters = this._oldSubFilters;\r\n            this._instrument.tmpEqFilterStart = this._instrument.eqFilter;\r\n            this._instrument.tmpEqFilterEnd = null;\r\n        }\r\n        this._instrument.preset = this._instrumentPrevPreset;\r\n        this._instrument.clearInvalidEnvelopeTargets();\r\n        this._doc.notifier.changed();\r\n    }\r\n}\r\n\r\nexport class ChangeFadeInOut extends UndoableChange {\r\n    private _doc: SongDocument;\r\n    private _instrument: Instrument;\r\n    private _instrumentPrevPreset: number;\r\n    private _instrumentNextPreset: number;\r\n    private _oldFadeIn: number;\r\n    private _oldFadeOut: number;\r\n    private _newFadeIn: number;\r\n    private _newFadeOut: number;\r\n    constructor(doc: SongDocument, fadeIn: number, fadeOut: number) {\r\n        super(false);\r\n        this._doc = doc;\r\n        this._instrument = this._doc.song.channels[this._doc.channel].instruments[this._doc.getCurrentInstrument()];\r\n        this._instrumentNextPreset = this._instrument.type;\r\n        this._instrumentPrevPreset = this._instrument.preset;\r\n        this._oldFadeIn = this._instrument.fadeIn;\r\n        this._oldFadeOut = this._instrument.fadeOut;\r\n        this._newFadeIn = fadeIn;\r\n        this._newFadeOut = fadeOut;\r\n        this._didSomething();\r\n        this.redo();\r\n    }\r\n\r\n    protected _doForwards(): void {\r\n        this._instrument.fadeIn = this._newFadeIn;\r\n        this._instrument.fadeOut = this._newFadeOut;\r\n        this._instrument.preset = this._instrumentNextPreset;\r\n        this._doc.notifier.changed();\r\n    }\r\n\r\n    protected _doBackwards(): void {\r\n        this._instrument.fadeIn = this._oldFadeIn;\r\n        this._instrument.fadeOut = this._oldFadeOut;\r\n        this._instrument.preset = this._instrumentPrevPreset;\r\n        this._doc.notifier.changed();\r\n    }\r\n}\r\n\r\nexport class ChangeAlgorithm extends Change {\r\n    constructor(doc: SongDocument, newValue: number) {\r\n        super();\r\n        const instrument: Instrument = doc.song.channels[doc.channel].instruments[doc.getCurrentInstrument()];\r\n        const oldValue: number = instrument.algorithm;\r\n        if (oldValue != newValue) {\r\n            instrument.algorithm = newValue;\r\n            instrument.preset = instrument.type;\r\n            doc.notifier.changed();\r\n            this._didSomething();\r\n        }\r\n    }\r\n}\r\n\r\nexport class ChangeFeedbackType extends Change {\r\n    constructor(doc: SongDocument, newValue: number) {\r\n        super();\r\n        const instrument: Instrument = doc.song.channels[doc.channel].instruments[doc.getCurrentInstrument()];\r\n        const oldValue: number = instrument.feedbackType;\r\n        if (oldValue != newValue) {\r\n            instrument.feedbackType = newValue;\r\n            instrument.preset = instrument.type;\r\n            doc.notifier.changed();\r\n            this._didSomething();\r\n        }\r\n    }\r\n}\r\n\r\n\r\nexport class Change6OpAlgorithm extends Change {\r\n    constructor(doc: SongDocument, newValue: number) {\r\n        super();\r\n        const instrument: Instrument = doc.song.channels[doc.channel].instruments[doc.getCurrentInstrument()];\r\n        const oldValue: number = instrument.algorithm6Op;\r\n        if (oldValue != newValue) {\r\n            instrument.algorithm6Op = newValue;\r\n            if (newValue != 0) {\r\n                instrument.customAlgorithm.fromPreset(newValue);\r\n            }\r\n            instrument.preset = instrument.type;\r\n            doc.notifier.changed();\r\n            this._didSomething();\r\n        }\r\n    }\r\n}\r\n\r\nexport class Change6OpFeedbackType extends Change {\r\n    constructor(doc: SongDocument, newValue: number) {\r\n        super();\r\n        const instrument: Instrument = doc.song.channels[doc.channel].instruments[doc.getCurrentInstrument()];\r\n        const oldValue: number = instrument.feedbackType6Op;\r\n        if (oldValue != newValue) {\r\n            instrument.feedbackType6Op = newValue;\r\n            if (newValue != 0) {\r\n                instrument.customFeedbackType.fromPreset(newValue);\r\n            }\r\n            instrument.preset = instrument.type;\r\n            doc.notifier.changed();\r\n            this._didSomething();\r\n        }\r\n    }\r\n}\r\n\r\nexport class ChangeOperatorWaveform extends Change {\r\n    constructor(doc: SongDocument, operatorIndex: number, newValue: number) {\r\n        super();\r\n        const instrument: Instrument = doc.song.channels[doc.channel].instruments[doc.getCurrentInstrument()];\r\n        const oldValue: number = instrument.operators[operatorIndex].waveform;\r\n        if (oldValue != newValue) {\r\n            instrument.operators[operatorIndex].waveform = newValue;\r\n            instrument.preset = instrument.type;\r\n            doc.notifier.changed();\r\n            this._didSomething();\r\n        }\r\n    }\r\n}\r\n\r\nexport class ChangeOperatorPulseWidth extends Change {\r\n    constructor(doc: SongDocument, operatorIndex: number, oldValue: number, newValue: number) {\r\n        super();\r\n        const instrument: Instrument = doc.song.channels[doc.channel].instruments[doc.getCurrentInstrument()];\r\n        instrument.operators[operatorIndex].pulseWidth = newValue;\r\n        instrument.preset = instrument.type;\r\n        doc.notifier.changed();\r\n        if (oldValue != newValue) {\r\n            this._didSomething();\r\n        }\r\n    }\r\n}\r\n\r\nexport class ChangeOperatorFrequency extends Change {\r\n    constructor(doc: SongDocument, operatorIndex: number, newValue: number) {\r\n        super();\r\n        const instrument: Instrument = doc.song.channels[doc.channel].instruments[doc.getCurrentInstrument()];\r\n        const oldValue: number = instrument.operators[operatorIndex].frequency;\r\n        if (oldValue != newValue) {\r\n            instrument.operators[operatorIndex].frequency = newValue;\r\n            instrument.preset = instrument.type;\r\n            doc.notifier.changed();\r\n            this._didSomething();\r\n        }\r\n    }\r\n}\r\n\r\nexport class ChangeOperatorAmplitude extends ChangeInstrumentSlider {\r\n    constructor(doc: SongDocument, operatorIndex: number, oldValue: number, newValue: number) {\r\n        super(doc);\r\n        this._instrument.operators[operatorIndex].amplitude = newValue;\r\n        // Not used currently as mod is implemented as multiplicative\r\n        //doc.synth.unsetMod(ModSetting.mstFMSlider1 + operatorIndex, doc.channel, doc.getCurrentInstrument());\r\n        doc.notifier.changed();\r\n        if (oldValue != newValue) this._didSomething();\r\n    }\r\n}\r\n\r\nexport class ChangeFeedbackAmplitude extends ChangeInstrumentSlider {\r\n    constructor(doc: SongDocument, oldValue: number, newValue: number) {\r\n        super(doc);\r\n        this._instrument.feedbackAmplitude = newValue;\r\n        // Not used currently as mod is implemented as multiplicative\r\n        //doc.synth.unsetMod(ModSetting.mstFMFeedback, doc.channel, doc.getCurrentInstrument());\r\n        doc.notifier.changed();\r\n        if (oldValue != newValue) this._didSomething();\r\n    }\r\n}\r\n\r\nexport class ChangeAddChannelInstrument extends Change {\r\n    constructor(doc: SongDocument) {\r\n        super();\r\n        const channel: Channel = doc.song.channels[doc.channel];\r\n        const isNoise: boolean = doc.song.getChannelIsNoise(doc.channel);\r\n        const isMod: boolean = doc.song.getChannelIsMod(doc.channel);\r\n        const maxInstruments: number = doc.song.getMaxInstrumentsPerChannel();\r\n        if (channel.instruments.length >= maxInstruments) return;\r\n        const presetValue: number = pickRandomPresetValue(isNoise);\r\n        const preset: Preset = EditorConfig.valueToPreset(presetValue)!;\r\n        const instrument: Instrument = new Instrument(isNoise, isMod);\r\n        instrument.fromJsonObject(preset.settings, isNoise, isMod, false, false, 1);\r\n        instrument.preset = presetValue;\r\n        instrument.volume = 0;\r\n        channel.instruments.push(instrument);\r\n        if (!isMod) { // Mod channels lose information when changing set instrument\r\n            doc.viewedInstrument[doc.channel] = channel.instruments.length - 1;\r\n        }\r\n\r\n        // Determine if any mod instruments were setting 'all' or 'active'. If so, bump indices since there is now a new instrument in the list.\r\n        for (let channelIndex: number = doc.song.pitchChannelCount + doc.song.noiseChannelCount; channelIndex < doc.song.getChannelCount(); channelIndex++) {\r\n            for (let instrumentIndex: number = 0; instrumentIndex < doc.song.channels[channelIndex].instruments.length; instrumentIndex++) {\r\n                for (let mod: number = 0; mod < Config.modCount; mod++) {\r\n\r\n                    let instrument: Instrument = doc.song.channels[channelIndex].instruments[instrumentIndex];\r\n                    let modInstrument: number = instrument.modInstruments[mod];\r\n                    let modChannel: number = instrument.modChannels[mod];\r\n\r\n                    if (modChannel == doc.channel && modInstrument >= doc.song.channels[modChannel].instruments.length-1 ) {\r\n\t\t\t\t\t\t\t//BUGFIX FROM JUMMBOX\r\n                        instrument.modInstruments[mod]++;\r\n                    }\r\n                }\r\n            }\r\n        }\r\n        // Also, make synth re-compute mod values, since 'all'/'active' mods now retroactively apply to this new instrument.\r\n        doc.synth.computeLatestModValues();\r\n\r\n        doc.notifier.changed();\r\n        this._didSomething();\r\n    }\r\n}\r\n\r\nexport class ChangeRemoveChannelInstrument extends Change {\r\n    constructor(doc: SongDocument) {\r\n        super();\r\n        const channel: Channel = doc.song.channels[doc.channel];\r\n        if (channel.instruments.length <= Config.instrumentCountMin) return;\r\n        const removedIndex: number = doc.viewedInstrument[doc.channel];\r\n        channel.instruments.splice(removedIndex, 1);\r\n        if (doc.song.patternInstruments) {\r\n            for (const pattern of channel.patterns) {\r\n                for (let i: number = 0; i < pattern.instruments.length; i++) {\r\n                    if (pattern.instruments[i] == removedIndex) {\r\n                        pattern.instruments.splice(i, 1);\r\n                        i--;\r\n                    } else if (pattern.instruments[i] > removedIndex) {\r\n                        pattern.instruments[i]--;\r\n                    }\r\n                }\r\n                if (pattern.instruments.length <= 0) {\r\n                    pattern.instruments[0] = 0;\r\n                }\r\n            }\r\n        }\r\n\r\n        // Determine if any mod instruments now refer to an invalid instrument number. Unset them if so\r\n        for (let channelIndex: number = doc.song.pitchChannelCount + doc.song.noiseChannelCount; channelIndex < doc.song.getChannelCount(); channelIndex++) {\r\n            for (let instrumentIdx: number = 0; instrumentIdx < doc.song.channels[channelIndex].instruments.length; instrumentIdx++) {\r\n                for (let mod: number = 0; mod < Config.modCount; mod++) {\r\n\r\n                    let instrument: Instrument = doc.song.channels[channelIndex].instruments[instrumentIdx];\r\n                    let modInstrument: number = instrument.modInstruments[mod];\r\n                    let modChannel: number = instrument.modChannels[mod];\r\n\r\n                    if (modChannel == doc.channel) {\r\n                        // Boundary checking - check if setting was 'all' or 'active' previously\r\n                      if (modInstrument > removedIndex) {\r\n                            instrument.modInstruments[mod]--;\r\n                        }\r\n                        // Boundary checking - check if setting was set to the last instrument before splice\r\n                       else if (modInstrument == removedIndex) {\r\n                            instrument.modInstruments[mod] = 0;\r\n                            instrument.modulators[mod] = 0;\r\n                        }\r\n                    }\r\n\r\n                }\r\n            }\r\n        }\r\n\r\n        doc.notifier.changed();\r\n        this._didSomething();\r\n    }\r\n}\r\n\r\nexport class ChangeViewInstrument extends Change {\r\n    constructor(doc: SongDocument, index: number) {\r\n        super();\r\n        if (doc.viewedInstrument[doc.channel] != index) {\r\n            doc.viewedInstrument[doc.channel] = index;\r\n            doc.notifier.changed();\r\n            this._didSomething();\r\n        }\r\n    }\r\n}\r\n\r\nexport class ChangeInstrumentsFlags extends Change {\r\n    constructor(doc: SongDocument, newLayeredInstruments: boolean, newPatternInstruments: boolean) {\r\n        super();\r\n        const oldLayeredInstruments: boolean = doc.song.layeredInstruments;\r\n        const oldPatternInstruments: boolean = doc.song.patternInstruments;\r\n        if (oldLayeredInstruments == newLayeredInstruments && oldPatternInstruments == newPatternInstruments) return;\r\n        doc.song.layeredInstruments = newLayeredInstruments;\r\n        doc.song.patternInstruments = newPatternInstruments;\r\n\r\n        for (let channelIndex: number = 0; channelIndex < doc.song.getChannelCount(); channelIndex++) {\r\n            const channel: Channel = doc.song.channels[channelIndex];\r\n            if (channel.instruments.length > doc.song.getMaxInstrumentsPerChannel()) {\r\n                channel.instruments.length = doc.song.getMaxInstrumentsPerChannel();\r\n            }\r\n            for (let j: number = 0; j < doc.song.patternsPerChannel; j++) {\r\n                const pattern: Pattern = channel.patterns[j];\r\n                if (!oldPatternInstruments && newPatternInstruments) {\r\n                    // patternInstruments was enabled, set up pattern instruments as appropriate.\r\n                    for (let i: number = 0; i < channel.instruments.length; i++) {\r\n                        pattern.instruments[i] = i;\r\n                    }\r\n                    pattern.instruments.length = channel.instruments.length;\r\n                }\r\n                discardInvalidPatternInstruments(pattern.instruments, doc.song, channelIndex);\r\n            }\r\n        }\r\n\r\n\r\n\r\n        doc.notifier.changed();\r\n        this._didSomething();\r\n    }\r\n}\r\n\r\n\r\nexport class ChangeKey extends Change {\r\n    constructor(doc: SongDocument, newValue: number) {\r\n        super();\r\n        if (doc.song.key != newValue) {\r\n            doc.song.key = newValue;\r\n            doc.notifier.changed();\r\n            this._didSomething();\r\n        }\r\n    }\r\n}\r\n\r\nexport class ChangeLoop extends Change {\r\n    constructor(private _doc: SongDocument, public oldStart: number, public oldLength: number, public newStart: number, public newLength: number) {\r\n        super();\r\n        this._doc.song.loopStart = this.newStart;\r\n        this._doc.song.loopLength = this.newLength;\r\n        this._doc.notifier.changed();\r\n        if (this.oldStart != this.newStart || this.oldLength != this.newLength) {\r\n            this._didSomething();\r\n        }\r\n    }\r\n}\r\n\r\nexport class ChangePitchAdded extends UndoableChange {\r\n    private _doc: SongDocument;\r\n    private _note: Note;\r\n    private _pitch: number;\r\n    private _index: number;\r\n    constructor(doc: SongDocument, note: Note, pitch: number, index: number, deletion: boolean = false) {\r\n        super(deletion);\r\n        this._doc = doc;\r\n        this._note = note;\r\n        this._pitch = pitch;\r\n        this._index = index;\r\n        this._didSomething();\r\n        this.redo();\r\n    }\r\n\r\n    protected _doForwards(): void {\r\n        this._note.pitches.splice(this._index, 0, this._pitch);\r\n        this._doc.notifier.changed();\r\n    }\r\n\r\n    protected _doBackwards(): void {\r\n        this._note.pitches.splice(this._index, 1);\r\n        this._doc.notifier.changed();\r\n    }\r\n}\r\n\r\nexport class ChangeOctave extends Change {\r\n    constructor(doc: SongDocument, public oldValue: number, newValue: number) {\r\n        super();\r\n        doc.song.channels[doc.channel].octave = newValue;\r\n        doc.notifier.changed();\r\n        if (oldValue != newValue) this._didSomething();\r\n    }\r\n}\r\n\r\nexport class ChangeRhythm extends ChangeGroup {\r\n    constructor(doc: SongDocument, newValue: number) {\r\n        super();\r\n\r\n        if (doc.song.rhythm != newValue) {\r\n            doc.song.rhythm = newValue;\r\n            doc.notifier.changed();\r\n            this._didSomething();\r\n        }\r\n    }\r\n}\r\n\r\nexport class ChangePaste extends ChangeGroup {\r\n    constructor(doc: SongDocument, pattern: Pattern, notes: any[], selectionStart: number, selectionEnd: number, oldPartDuration: number) {\r\n        super();\r\n\r\n        // Erase the current contents of the selection:\r\n        this.append(new ChangeNoteTruncate(doc, pattern, selectionStart, selectionEnd, null, true));\r\n\r\n        // Mods don't follow this sequence, so skipping for now.\r\n        let noteInsertionIndex: number = 0;\r\n        if (!doc.song.getChannelIsMod(doc.channel)) {\r\n            for (let i: number = 0; i < pattern.notes.length; i++) {\r\n                if (pattern.notes[i].start < selectionStart) {\r\n                    if (pattern.notes[i].end > selectionStart) throw new Error();\r\n\r\n                    noteInsertionIndex = i + 1;\r\n                } else if (pattern.notes[i].start < selectionEnd) {\r\n                    throw new Error();\r\n                }\r\n            }\r\n        }\r\n        else {\r\n            noteInsertionIndex = pattern.notes.length;\r\n        }\r\n\r\n        while (selectionStart < selectionEnd) {\r\n            for (const noteObject of notes) {\r\n                const noteStart: number = noteObject[\"start\"] + selectionStart;\r\n                const noteEnd: number = noteObject[\"end\"] + selectionStart;\r\n                if (noteStart >= selectionEnd) break;\r\n                const note: Note = new Note(noteObject[\"pitches\"][0], noteStart, noteEnd, noteObject[\"pins\"][0][\"size\"], false);\r\n                note.pitches.length = 0;\r\n                for (const pitch of noteObject[\"pitches\"]) {\r\n                    note.pitches.push(pitch);\r\n                }\r\n                note.pins.length = 0;\r\n                for (const pin of noteObject[\"pins\"]) {\r\n                    note.pins.push(makeNotePin(pin.interval, pin.time, pin.size));\r\n                }\r\n                note.continuesLastPattern = (noteObject[\"continuesLastPattern\"] === true) && (note.start == 0);\r\n                pattern.notes.splice(noteInsertionIndex++, 0, note);\r\n                if (note.end > selectionEnd) {\r\n                    this.append(new ChangeNoteLength(doc, note, note.start, selectionEnd));\r\n                }\r\n            }\r\n\r\n            selectionStart += oldPartDuration;\r\n        }\r\n\r\n        // Need to re-sort the notes by start time as they might change order because of paste.\r\n        if (pattern != null && doc.song.getChannelIsMod(doc.channel)) pattern.notes.sort(function (a, b) { return (a.start == b.start) ? a.pitches[0] - b.pitches[0] : a.start - b.start; });\r\n\r\n\r\n        doc.notifier.changed();\r\n        this._didSomething();\r\n    }\r\n}\r\n\r\nexport class ChangePasteInstrument extends ChangeGroup {\r\n    constructor(doc: SongDocument, instrument: Instrument, instrumentCopy: any) {\r\n        super();\r\n        instrument.fromJsonObject(instrumentCopy, instrumentCopy[\"isDrum\"], instrumentCopy[\"isMod\"], false, false);\r\n        doc.notifier.changed();\r\n        this._didSomething();\r\n    }\r\n}\r\n\r\nexport class ChangeSetPatternInstruments extends Change {\r\n    constructor(doc: SongDocument, channelIndex: number, instruments: number[], pattern: Pattern) {\r\n        super();\r\n        if (!patternsContainSameInstruments(instruments, pattern.instruments)) {\r\n            pattern.instruments.length = 0;\r\n            pattern.instruments.push(...instruments);\r\n            discardInvalidPatternInstruments(pattern.instruments, doc.song, channelIndex);\r\n            this._didSomething();\r\n            doc.notifier.changed();\r\n        }\r\n    }\r\n}\r\n\r\nexport class ChangeModChannel extends Change {\r\n    constructor(doc: SongDocument, mod: number, index: number, useInstrument?: Instrument) {\r\n        super();\r\n        let instrument: Instrument = doc.song.channels[doc.channel].instruments[doc.getCurrentInstrument()];\r\n        if (useInstrument != undefined)\r\n            instrument = useInstrument;\r\n\r\n        // None, or swapping from song to instrument/vice-versa\r\n        if (index == 0 || (Config.modulators[instrument.modulators[mod]].forSong && index >= 2) || (!Config.modulators[instrument.modulators[mod]].forSong && index < 2)) {\r\n            instrument.modulators[mod] = Config.modulators.dictionary[\"none\"].index;\r\n        }\r\n\r\n        instrument.modChannels[mod] = index - 2;\r\n\r\n        doc.notifier.changed();\r\n        this._didSomething();\r\n    }\r\n}\r\n\r\nexport class ChangeModInstrument extends Change {\r\n    constructor(doc: SongDocument, mod: number, tgtInstrument: number) {\r\n        super();\r\n\r\n        let instrument: Instrument = doc.song.channels[doc.channel].instruments[doc.getCurrentInstrument()];\r\n\r\n        if (instrument.modInstruments[mod] != tgtInstrument) {\r\n            instrument.modInstruments[mod] = tgtInstrument;\r\n\r\n            doc.notifier.changed();\r\n            this._didSomething();\r\n        }\r\n    }\r\n}\r\n\r\nexport class ChangeModSetting extends Change {\r\n    constructor(doc: SongDocument, mod: number, text: string) {\r\n        super();\r\n\r\n        let instrument: Instrument = doc.song.channels[doc.channel].instruments[doc.getCurrentInstrument()];\r\n\r\n        // Populate all instruments that could be targeted by this mod setting.\r\n        let tgtChannel: number = instrument.modChannels[mod];\r\n        let usedInstruments: Instrument[] = [];\r\n        if (tgtChannel >= 0) { // Ignore song/none.\r\n            if (instrument.modInstruments[mod] == doc.song.channels[tgtChannel].instruments.length) {\r\n                // All - Populate list of all instruments\r\n                usedInstruments = usedInstruments.concat(doc.song.channels[tgtChannel].instruments);\r\n            } else if (instrument.modInstruments[mod] > doc.song.channels[tgtChannel].instruments.length) {\r\n                // Active - Populate list of only used instruments\r\n                let tgtPattern: Pattern | null = doc.song.getPattern(tgtChannel, doc.bar);\r\n                if (tgtPattern != null) {\r\n                    for (let i: number = 0; i < tgtPattern.instruments.length; i++) {\r\n                        usedInstruments.push(doc.song.channels[tgtChannel].instruments[tgtPattern.instruments[i]]);\r\n                    }\r\n                }\r\n            }\r\n            else {\r\n                // Single instrument used.\r\n                usedInstruments.push(doc.song.channels[tgtChannel].instruments[instrument.modInstruments[mod]]);\r\n            }\r\n        }\r\n\r\n        // Check if a new effect is being added - if so add the proper associated effect to the instrument(s), and truncate \"+ \" from start of text.\r\n        if (text.startsWith(\"+ \")) {\r\n            text = text.substr(2);\r\n            for (let i: number = 0; i < usedInstruments.length; i++) {\r\n                const tgtInstrument: Instrument = usedInstruments[i];\r\n                if (!(tgtInstrument.effects & (1 << Config.modulators.dictionary[text].associatedEffect))) {\r\n                    doc.record(new ChangeToggleEffects(doc, Config.modulators.dictionary[text].associatedEffect, tgtInstrument));\r\n                }\r\n            }\r\n        }\r\n\r\n        let setting: number = Config.modulators.dictionary[text].index;\r\n\r\n        if (instrument.modulators[mod] != setting) {\r\n\r\n            instrument.modulators[mod] = setting;\r\n\r\n            // Go through each pattern where this instrument is set, and clean up any notes that are out of bounds\r\n            let cap: number = Config.modulators[setting].maxRawVol;\r\n\r\n            for (let i: number = 0; i < doc.song.patternsPerChannel; i++) {\r\n                const pattern: Pattern = doc.song.channels[doc.channel].patterns[i];\r\n                if (pattern.instruments[0] == doc.getCurrentInstrument()) {\r\n                    for (let j: number = 0; j < pattern.notes.length; j++) {\r\n                        const note: Note = pattern.notes[j];\r\n                        if (note.pitches[0] == Config.modCount - mod - 1) {\r\n                            for (let k: number = 0; k < note.pins.length; k++) {\r\n                                const pin: NotePin = note.pins[k];\r\n                                if (pin.size > cap)\r\n                                    pin.size = cap;\r\n                            }\r\n                        }\r\n                    }\r\n                }\r\n            }\r\n\r\n            doc.notifier.changed();\r\n            this._didSomething();\r\n        }\r\n    }\r\n}\r\n\r\nexport class ChangeModFilter extends Change {\r\n    constructor(doc: SongDocument, mod: number, type: number) {\r\n        super();\r\n\r\n        let instrument: Instrument = doc.song.channels[doc.channel].instruments[doc.getCurrentInstrument()];\r\n\r\n        if (instrument.modFilterTypes[mod] != type) {\r\n\r\n            instrument.modFilterTypes[mod] = type;\r\n\r\n            // Go through each pattern where this instrument is set, and clean up any notes that are out of bounds\r\n            let cap: number = doc.song.getVolumeCapForSetting(true, instrument.modulators[mod], instrument.modFilterTypes[mod]);\r\n\r\n            for (let i: number = 0; i < doc.song.patternsPerChannel; i++) {\r\n                const pattern: Pattern = doc.song.channels[doc.channel].patterns[i];\r\n                if (pattern.instruments[0] == doc.getCurrentInstrument()) {\r\n                    for (let j: number = 0; j < pattern.notes.length; j++) {\r\n                        const note: Note = pattern.notes[j];\r\n                        if (note.pitches[0] == Config.modCount - mod - 1) {\r\n                            for (let k: number = 0; k < note.pins.length; k++) {\r\n                                const pin: NotePin = note.pins[k];\r\n                                if (pin.size > cap)\r\n                                    pin.size = cap;\r\n                            }\r\n                        }\r\n                    }\r\n                }\r\n            }\r\n\r\n            doc.notifier.changed();\r\n            this._didSomething();\r\n        }\r\n    }\r\n}\r\n\r\nexport class ChangePatternsPerChannel extends Change {\r\n    constructor(doc: SongDocument, newValue: number) {\r\n        super();\r\n        if (doc.song.patternsPerChannel != newValue) {\r\n            for (let i: number = 0; i < doc.song.getChannelCount(); i++) {\r\n                const channelBars: number[] = doc.song.channels[i].bars;\r\n                const channelPatterns: Pattern[] = doc.song.channels[i].patterns;\r\n                for (let j: number = 0; j < channelBars.length; j++) {\r\n                    if (channelBars[j] > newValue) channelBars[j] = 0;\r\n                }\r\n                for (let j: number = channelPatterns.length; j < newValue; j++) {\r\n                    channelPatterns[j] = new Pattern();\r\n                }\r\n                channelPatterns.length = newValue;\r\n            }\r\n            doc.song.patternsPerChannel = newValue;\r\n            doc.notifier.changed();\r\n            this._didSomething();\r\n        }\r\n    }\r\n}\r\n\r\nexport class ChangeEnsurePatternExists extends UndoableChange {\r\n    private _doc: SongDocument;\r\n    private _bar: number;\r\n    private _channelIndex: number;\r\n    private _patternIndex: number;\r\n    private _patternOldNotes: Note[] | null = null;\r\n    private _oldPatternCount: number;\r\n    private _newPatternCount: number;\r\n    private _oldPatternInstruments: number[] | null = null;\r\n    private _newPatternInstruments: number[];\r\n\r\n    constructor(doc: SongDocument, channelIndex: number, bar: number) {\r\n        super(false);\r\n        const song: Song = doc.song;\r\n        if (song.channels[channelIndex].bars[bar] != 0) return;\r\n\r\n        this._doc = doc;\r\n        this._bar = bar;\r\n        this._channelIndex = channelIndex;\r\n        this._oldPatternCount = song.patternsPerChannel;\r\n        this._newPatternCount = song.patternsPerChannel;\r\n        this._newPatternInstruments = doc.recentPatternInstruments[channelIndex].concat();\r\n\r\n        let firstEmptyUnusedIndex: number | null = null;\r\n        let firstUnusedIndex: number | null = null;\r\n        for (let patternIndex: number = 1; patternIndex <= song.patternsPerChannel; patternIndex++) {\r\n            let used = false;\r\n            for (let barIndex: number = 0; barIndex < song.barCount; barIndex++) {\r\n                if (song.channels[channelIndex].bars[barIndex] == patternIndex) {\r\n                    used = true;\r\n                    break;\r\n                }\r\n            }\r\n            if (used) continue;\r\n            if (firstUnusedIndex == null) {\r\n                firstUnusedIndex = patternIndex;\r\n            }\r\n            const pattern: Pattern = song.channels[channelIndex].patterns[patternIndex - 1];\r\n            if (pattern.notes.length == 0) {\r\n                firstEmptyUnusedIndex = patternIndex;\r\n                break;\r\n            }\r\n        }\r\n\r\n        if (firstEmptyUnusedIndex != null) {\r\n            this._patternIndex = firstEmptyUnusedIndex;\r\n            this._oldPatternInstruments = song.channels[channelIndex].patterns[firstEmptyUnusedIndex - 1].instruments.concat();\r\n        } else if (song.patternsPerChannel < song.barCount) {\r\n            this._newPatternCount = song.patternsPerChannel + 1;\r\n            this._patternIndex = song.patternsPerChannel + 1;\r\n        } else if (firstUnusedIndex != null) {\r\n            this._patternIndex = firstUnusedIndex;\r\n            this._patternOldNotes = song.channels[channelIndex].patterns[firstUnusedIndex - 1].notes;\r\n            this._oldPatternInstruments = song.channels[channelIndex].patterns[firstUnusedIndex - 1].instruments.concat();\r\n        } else {\r\n            throw new Error();\r\n        }\r\n\r\n        this._didSomething();\r\n        this._doForwards();\r\n    }\r\n\r\n    protected _doForwards(): void {\r\n        const song: Song = this._doc.song;\r\n        for (let j: number = song.patternsPerChannel; j < this._newPatternCount; j++) {\r\n            for (let i: number = 0; i < song.getChannelCount(); i++) {\r\n                song.channels[i].patterns[j] = new Pattern();\r\n            }\r\n        }\r\n        song.patternsPerChannel = this._newPatternCount;\r\n        const pattern: Pattern = song.channels[this._channelIndex].patterns[this._patternIndex - 1];\r\n        pattern.notes = [];\r\n        pattern.instruments.length = 0;\r\n        pattern.instruments.push(...this._newPatternInstruments);\r\n        song.channels[this._channelIndex].bars[this._bar] = this._patternIndex;\r\n        this._doc.notifier.changed();\r\n    }\r\n\r\n    protected _doBackwards(): void {\r\n        const song: Song = this._doc.song;\r\n        const pattern: Pattern = song.channels[this._channelIndex].patterns[this._patternIndex - 1];\r\n        if (this._patternOldNotes != null) pattern.notes = this._patternOldNotes;\r\n        if (this._oldPatternInstruments != null) {\r\n            pattern.instruments.length = 0;\r\n            pattern.instruments.push(...this._oldPatternInstruments);\r\n        }\r\n        song.channels[this._channelIndex].bars[this._bar] = 0;\r\n        for (let i: number = 0; i < song.getChannelCount(); i++) {\r\n            song.channels[i].patterns.length = this._oldPatternCount;\r\n        }\r\n        song.patternsPerChannel = this._oldPatternCount;\r\n        this._doc.notifier.changed();\r\n    }\r\n}\r\n\r\nexport class ChangePinTime extends ChangePins {\r\n    constructor(doc: SongDocument | null, note: Note, pinIndex: number, shiftedTime: number, continuesLastPattern: boolean) {\r\n        super(doc, note);\r\n\r\n        shiftedTime -= this._oldStart;\r\n        const originalTime: number = this._oldPins[pinIndex].time;\r\n        const skipStart: number = Math.min(originalTime, shiftedTime);\r\n        const skipEnd: number = Math.max(originalTime, shiftedTime);\r\n        let setPin: boolean = false;\r\n        for (let i: number = 0; i < this._oldPins.length; i++) {\r\n            const oldPin: NotePin = note.pins[i];\r\n            const time: number = oldPin.time;\r\n            if (time < skipStart) {\r\n                this._newPins.push(makeNotePin(oldPin.interval, time, oldPin.size));\r\n            } else if (time > skipEnd) {\r\n                if (!setPin) {\r\n                    if (this._newPins.length > 0) continuesLastPattern = note.continuesLastPattern;\r\n                    this._newPins.push(makeNotePin(this._oldPins[pinIndex].interval, shiftedTime, this._oldPins[pinIndex].size));\r\n                    setPin = true;\r\n                }\r\n                this._newPins.push(makeNotePin(oldPin.interval, time, oldPin.size));\r\n            }\r\n        }\r\n        if (!setPin) {\r\n            continuesLastPattern = note.continuesLastPattern;\r\n            this._newPins.push(makeNotePin(this._oldPins[pinIndex].interval, shiftedTime, this._oldPins[pinIndex].size));\r\n        }\r\n\r\n        this._finishSetup(continuesLastPattern);\r\n    }\r\n}\r\n\r\nexport class ChangePitchBend extends ChangePins {\r\n    constructor(doc: SongDocument | null, note: Note, bendStart: number, bendEnd: number, bendTo: number, pitchIndex: number) {\r\n        super(doc, note);\r\n\r\n        bendStart -= this._oldStart;\r\n        bendEnd -= this._oldStart;\r\n        bendTo -= note.pitches[pitchIndex];\r\n\r\n        let setStart: boolean = false;\r\n        let setEnd: boolean = false;\r\n        let prevInterval: number = 0;\r\n        let prevSize: number = Config.noteSizeMax;\r\n        let persist: boolean = true;\r\n        let i: number;\r\n        let direction: number;\r\n        let stop: number;\r\n        let push: (item: NotePin) => void;\r\n        if (bendEnd > bendStart) {\r\n            i = 0;\r\n            direction = 1;\r\n            stop = note.pins.length;\r\n            push = (item: NotePin) => { this._newPins.push(item); };\r\n        } else {\r\n            i = note.pins.length - 1;\r\n            direction = -1;\r\n            stop = -1;\r\n            push = (item: NotePin) => { this._newPins.unshift(item); };\r\n        }\r\n        for (; i != stop; i += direction) {\r\n            const oldPin: NotePin = note.pins[i];\r\n            const time: number = oldPin.time;\r\n            for (; ;) {\r\n                if (!setStart) {\r\n                    if (time * direction <= bendStart * direction) {\r\n                        prevInterval = oldPin.interval;\r\n                        prevSize = oldPin.size;\r\n                    }\r\n                    if (time * direction < bendStart * direction) {\r\n                        push(makeNotePin(oldPin.interval, time, oldPin.size));\r\n                        break;\r\n                    } else {\r\n                        push(makeNotePin(prevInterval, bendStart, prevSize));\r\n                        setStart = true;\r\n                    }\r\n                } else if (!setEnd) {\r\n                    if (time * direction <= bendEnd * direction) {\r\n                        prevInterval = oldPin.interval;\r\n                        prevSize = oldPin.size;\r\n                    }\r\n                    if (time * direction < bendEnd * direction) {\r\n                        break;\r\n                    } else {\r\n                        push(makeNotePin(bendTo, bendEnd, prevSize));\r\n                        setEnd = true;\r\n                    }\r\n                } else {\r\n                    if (time * direction == bendEnd * direction) {\r\n                        break;\r\n                    } else {\r\n                        if (oldPin.interval != prevInterval) persist = false;\r\n                        push(makeNotePin(persist ? bendTo : oldPin.interval, time, oldPin.size));\r\n                        break;\r\n                    }\r\n                }\r\n            }\r\n        }\r\n        if (!setEnd) {\r\n            push(makeNotePin(bendTo, bendEnd, prevSize));\r\n        }\r\n\r\n        this._finishSetup();\r\n    }\r\n}\r\n\r\nexport class ChangePatternRhythm extends ChangeSequence {\r\n    constructor(doc: SongDocument, pattern: Pattern) {\r\n        super();\r\n        const minDivision: number = Config.partsPerBeat / Config.rhythms[doc.song.rhythm].stepsPerBeat;\r\n\r\n        const changeRhythm: (oldTime: number) => number = function (oldTime: number): number {\r\n            let thresholds: number[] | null = Config.rhythms[doc.song.rhythm].roundUpThresholds;\r\n            if (thresholds != null) {\r\n                const beatStart: number = Math.floor(oldTime / Config.partsPerBeat) * Config.partsPerBeat;\r\n                const remainder: number = oldTime - beatStart;\r\n                let newTime: number = beatStart;\r\n                for (const threshold of thresholds) {\r\n                    if (remainder >= threshold) {\r\n                        newTime += minDivision;\r\n                    } else {\r\n                        break;\r\n                    }\r\n                }\r\n                return newTime;\r\n            } else {\r\n                return Math.round(oldTime / minDivision) * minDivision;\r\n            }\r\n        };\r\n\r\n        let i: number = 0;\r\n        while (i < pattern.notes.length) {\r\n            const note: Note = pattern.notes[i];\r\n            if (changeRhythm(note.start) >= changeRhythm(note.end)) {\r\n                this.append(new ChangeNoteAdded(doc, pattern, note, i, true));\r\n            } else {\r\n                this.append(new ChangeRhythmNote(doc, note, changeRhythm));\r\n                i++;\r\n            }\r\n        }\r\n    }\r\n}\r\n\r\nclass ChangeRhythmNote extends ChangePins {\r\n    constructor(doc: SongDocument | null, note: Note, changeRhythm: (oldTime: number) => number) {\r\n        super(doc, note);\r\n\r\n        for (const oldPin of this._oldPins) {\r\n            this._newPins.push(makeNotePin(oldPin.interval, changeRhythm(oldPin.time + this._oldStart) - this._oldStart, oldPin.size));\r\n        }\r\n\r\n        this._finishSetup();\r\n    }\r\n}\r\n\r\nexport class ChangeMoveNotesSideways extends ChangeGroup {\r\n    constructor(doc: SongDocument, beatsToMove: number, strategy: string) {\r\n        super();\r\n        let partsToMove: number = Math.round((beatsToMove % doc.song.beatsPerBar) * Config.partsPerBeat);\r\n        if (partsToMove < 0) partsToMove += doc.song.beatsPerBar * Config.partsPerBeat;\r\n        if (partsToMove == 0.0) return;\r\n\r\n        switch (strategy) {\r\n            case \"wrapAround\": {\r\n                const partsPerBar: number = Config.partsPerBeat * doc.song.beatsPerBar;\r\n                for (const channel of doc.song.channels) {\r\n                    for (const pattern of channel.patterns) {\r\n                        const newNotes: Note[] = [];\r\n\r\n                        for (let bar: number = 1; bar >= 0; bar--) {\r\n                            const barStartPart: number = bar * partsPerBar;\r\n\r\n                            for (const oldNote of pattern.notes) {\r\n                                const absoluteNoteStart: number = oldNote.start + partsToMove;\r\n                                const absoluteNoteEnd: number = oldNote.end + partsToMove;\r\n                                const noteStartPart: number = Math.max(0, absoluteNoteStart - barStartPart);\r\n                                const noteEndPart: number = Math.min(partsPerBar, absoluteNoteEnd - barStartPart);\r\n\r\n                                if (noteStartPart < noteEndPart) {\r\n                                    projectNoteIntoBar(oldNote, absoluteNoteStart - barStartPart - noteStartPart, noteStartPart, noteEndPart, newNotes);\r\n                                }\r\n                            }\r\n                        }\r\n\r\n                        pattern.notes = newNotes;\r\n                    }\r\n                }\r\n            } break;\r\n            case \"overflow\": {\r\n                let originalBarCount: number = doc.song.barCount;\r\n                let originalLoopStart: number = doc.song.loopStart;\r\n                let originalLoopLength: number = doc.song.loopLength;\r\n\r\n                this.append(new ChangeMoveAndOverflowNotes(doc, doc.song.beatsPerBar, partsToMove));\r\n\r\n                if (beatsToMove < 0) {\r\n                    let firstBarIsEmpty: boolean = true;\r\n                    for (const channel of doc.song.channels) {\r\n                        if (channel.bars[0] != 0) firstBarIsEmpty = false;\r\n                    }\r\n                    if (firstBarIsEmpty) {\r\n                        for (const channel of doc.song.channels) {\r\n                            channel.bars.shift();\r\n                        }\r\n                        doc.song.barCount--;\r\n                    } else {\r\n                        originalBarCount++;\r\n                        originalLoopStart++;\r\n                        doc.bar++;\r\n                    }\r\n                }\r\n                while (doc.song.barCount < originalBarCount) {\r\n                    for (const channel of doc.song.channels) {\r\n                        channel.bars.push(0);\r\n                    }\r\n                    doc.song.barCount++;\r\n                }\r\n                doc.song.loopStart = originalLoopStart;\r\n                doc.song.loopLength = originalLoopLength;\r\n            } break;\r\n            default: throw new Error(\"Unrecognized beats-per-bar conversion strategy.\");\r\n        }\r\n\r\n        doc.notifier.changed();\r\n        this._didSomething();\r\n    }\r\n}\r\n\r\nexport class ChangeBeatsPerBar extends ChangeGroup {\r\n    constructor(doc: SongDocument, newValue: number, strategy: string) {\r\n        super();\r\n        if (doc.song.beatsPerBar != newValue) {\r\n            switch (strategy) {\r\n                case \"splice\": {\r\n                    if (doc.song.beatsPerBar > newValue) {\r\n                        const sequence: ChangeSequence = new ChangeSequence();\r\n                        for (let i: number = 0; i < doc.song.getChannelCount(); i++) {\r\n                            for (let j: number = 0; j < doc.song.channels[i].patterns.length; j++) {\r\n                                sequence.append(new ChangeNoteTruncate(doc, doc.song.channels[i].patterns[j], newValue * Config.partsPerBeat, doc.song.beatsPerBar * Config.partsPerBeat, null, true));\r\n                            }\r\n                        }\r\n                    }\r\n                } break;\r\n                case \"stretch\": {\r\n                    const changeRhythm = function (oldTime: number): number {\r\n                        return Math.round(oldTime * newValue / doc.song.beatsPerBar);\r\n                    };\r\n                    for (let channelIndex: number = 0; channelIndex < doc.song.getChannelCount(); channelIndex++) {\r\n                        for (let patternIndex: number = 0; patternIndex < doc.song.channels[channelIndex].patterns.length; patternIndex++) {\r\n                            const pattern: Pattern = doc.song.channels[channelIndex].patterns[patternIndex];\r\n                            let noteIndex: number = 0;\r\n                            while (noteIndex < pattern.notes.length) {\r\n                                const note: Note = pattern.notes[noteIndex];\r\n                                if (changeRhythm(note.start) >= changeRhythm(note.end)) {\r\n                                    this.append(new ChangeNoteAdded(doc, pattern, note, noteIndex, true));\r\n                                } else {\r\n                                    this.append(new ChangeRhythmNote(doc, note, changeRhythm));\r\n                                    noteIndex++;\r\n                                }\r\n                            }\r\n                        }\r\n                    }\r\n                    this.append(new ChangeTempo(doc, doc.song.tempo, doc.song.tempo * newValue / doc.song.beatsPerBar));\r\n                } break;\r\n                case \"overflow\": {\r\n                    this.append(new ChangeMoveAndOverflowNotes(doc, newValue, 0));\r\n                    doc.song.loopStart = 0;\r\n                    doc.song.loopLength = doc.song.barCount;\r\n                } break;\r\n                default: throw new Error(\"Unrecognized beats-per-bar conversion strategy.\");\r\n            }\r\n\r\n            doc.song.beatsPerBar = newValue;\r\n            doc.notifier.changed();\r\n            this._didSomething();\r\n        }\r\n    }\r\n}\r\n\r\nexport class ChangeScale extends ChangeGroup {\r\n    constructor(doc: SongDocument, newValue: number) {\r\n        super();\r\n        if (doc.song.scale != newValue) {\r\n            doc.song.scale = newValue;\r\n            doc.notifier.changed();\r\n            this._didSomething();\r\n        }\r\n    }\r\n}\r\n\r\nexport class ChangeDetectKey extends ChangeGroup {\r\n    constructor(doc: SongDocument) {\r\n        super();\r\n        const song: Song = doc.song;\r\n        const basePitch: number = Config.keys[song.key].basePitch;\r\n        const keyWeights: number[] = [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0];\r\n        for (let channelIndex: number = 0; channelIndex < song.pitchChannelCount; channelIndex++) {\r\n            for (let barIndex: number = 0; barIndex < song.barCount; barIndex++) {\r\n                const pattern: Pattern | null = song.getPattern(channelIndex, barIndex);\r\n                if (pattern != null) {\r\n                    for (const note of pattern.notes) {\r\n                        const prevPin: NotePin = note.pins[0];\r\n                        for (let pinIndex: number = 1; pinIndex < note.pins.length; pinIndex++) {\r\n                            const nextPin: NotePin = note.pins[pinIndex];\r\n                            if (prevPin.interval == nextPin.interval) {\r\n                                let weight: number = nextPin.time - prevPin.time;\r\n                                weight += Math.max(0, Math.min(Config.partsPerBeat, nextPin.time + note.start) - (prevPin.time + note.start));\r\n                                weight *= nextPin.size + prevPin.size;\r\n                                for (const pitch of note.pitches) {\r\n                                    //const key = (basePitch + prevPin.interval + pitch) % 12;\r\n                                    const key = (basePitch + prevPin.interval + pitch) % Config.pitchesPerOctave;\r\n                                    //I also think this is neccessary as well?\r\n                                    keyWeights[key] += weight;\r\n                                }\r\n                            }\r\n                        }\r\n                    }\r\n                }\r\n            }\r\n        }\r\n\r\n        let bestKey: number = 0;\r\n        let bestKeyWeight: number = 0;\r\n        for (let key: number = 0; key < 12; key++) {\r\n            // Look for the root of the most prominent major or minor chord.\r\n            //const keyWeight: number = keyWeights[key] * (3 * keyWeights[(key + 7) % 12] + keyWeights[(key + 4) % 12] + keyWeights[(key + 3) % 12]);\r\n            const keyWeight: number = keyWeights[key] * (3 * keyWeights[(key + 7) % Config.pitchesPerOctave] + keyWeights[(key + 4) % Config.pitchesPerOctave] + keyWeights[(key + 3) % Config.pitchesPerOctave]);\r\n           //surely this is also neccessary\r\n            if (bestKeyWeight < keyWeight) {\r\n                bestKeyWeight = keyWeight;\r\n                bestKey = key;\r\n            }\r\n        }\r\n\r\n        if (bestKey != song.key) {\r\n            const diff: number = song.key - bestKey;\r\n            const absoluteDiff: number = Math.abs(diff);\r\n\r\n            for (let channelIndex: number = 0; channelIndex < song.pitchChannelCount; channelIndex++) {\r\n                for (const pattern of song.channels[channelIndex].patterns) {\r\n                    for (let i: number = 0; i < absoluteDiff; i++) {\r\n                        this.append(new ChangeTranspose(doc, channelIndex, pattern, diff > 0, true));\r\n                    }\r\n                }\r\n            }\r\n\r\n            song.key = bestKey;\r\n            doc.notifier.changed();\r\n            this._didSomething();\r\n        }\r\n    }\r\n}\r\n\r\nexport function pickRandomPresetValue(isNoise: boolean): number {\r\n    const eligiblePresetValues: number[] = [];\r\n    for (let categoryIndex: number = 0; categoryIndex < EditorConfig.presetCategories.length; categoryIndex++) {\r\n        const category: PresetCategory = EditorConfig.presetCategories[categoryIndex];\r\n        if (category.name == \"Novelty Presets\") continue;\r\n        for (let presetIndex: number = 0; presetIndex < category.presets.length; presetIndex++) {\r\n            const preset: Preset = category.presets[presetIndex];\r\n            if (preset.settings != undefined && (preset.isNoise == true) == isNoise) {\r\n                eligiblePresetValues.push((categoryIndex << 6) + presetIndex);\r\n            }\r\n        }\r\n    }\r\n    return eligiblePresetValues[(Math.random() * eligiblePresetValues.length) | 0];\r\n}\r\n\r\nexport function setDefaultInstruments(song: Song): void {\r\n    for (let channelIndex: number = 0; channelIndex < song.channels.length; channelIndex++) {\r\n        for (const instrument of song.channels[channelIndex].instruments) {\r\n            const isNoise: boolean = song.getChannelIsNoise(channelIndex);\r\n            const isMod: boolean = song.getChannelIsMod(channelIndex);\r\n            const presetValue: number = (channelIndex == song.pitchChannelCount) ? EditorConfig.nameToPresetValue(Math.random() > 0.5 ? \"chip noise\" : \"standard drumset\")! : pickRandomPresetValue(isNoise);\r\n            const preset: Preset = EditorConfig.valueToPreset(presetValue)!;\r\n            instrument.fromJsonObject(preset.settings, isNoise, isMod, song.rhythm == 0 || song.rhythm == 2, song.rhythm >= 2, 1);\r\n            instrument.preset = presetValue;\r\n        }\r\n    }\r\n}\r\n\r\nexport class ChangeSong extends ChangeGroup {\r\n    constructor(doc: SongDocument, newHash: string) {\r\n        super();\r\n        let pitchChannelCount = doc.song.pitchChannelCount;\r\n        let noiseChannelCount = doc.song.noiseChannelCount;\r\n        let modChannelCount = doc.song.modChannelCount;\r\n        doc.song.fromBase64String(newHash);\r\n        if (pitchChannelCount != doc.song.pitchChannelCount || noiseChannelCount != doc.song.noiseChannelCount || modChannelCount != doc.song.modChannelCount) {\r\n            ColorConfig.resetColors();\r\n        }\r\n        if (newHash == \"\") {\r\n            this.append(new ChangePatternSelection(doc, 0, 0));\r\n            doc.selection.resetBoxSelection();\r\n            setDefaultInstruments(doc.song);\r\n            doc.song.scale = doc.prefs.defaultScale;\r\n\r\n            for (let i: number = 0; i <= doc.song.channels.length; i++) {\r\n                doc.viewedInstrument[i] = 0;\r\n                doc.recentPatternInstruments[i] = [0];\r\n            }\r\n            doc.viewedInstrument.length = doc.song.channels.length;\r\n        } else {\r\n            this.append(new ChangeValidateTrackSelection(doc));\r\n        }\r\n        doc.synth.computeLatestModValues();\r\n        doc.notifier.changed();\r\n        this._didSomething();\r\n    }\r\n}\r\n\r\nexport class ChangeValidateTrackSelection extends Change {\r\n    constructor(doc: SongDocument) {\r\n        super();\r\n        const channelIndex: number = Math.min(doc.channel, doc.song.getChannelCount() - 1);\r\n        const bar: number = Math.max(0, Math.min(doc.song.barCount - 1, doc.bar));\r\n        if (doc.channel != channelIndex || doc.bar != bar) {\r\n\t\t\tdoc.bar = bar;\r\n\t\t\tdoc.channel = channelIndex;\r\n\t\t\tthis._didSomething();\r\n\t\t}\r\n\t\tdoc.selection.scrollToSelectedPattern();\r\n\t\tdoc.notifier.changed();\r\n    }\r\n}\r\n\r\nexport class ChangeReplacePatterns extends ChangeGroup {\r\n    constructor(doc: SongDocument, pitchChannels: Channel[], noiseChannels: Channel[], modChannels: Channel[]) {\r\n        super();\r\n\r\n        const song: Song = doc.song;\r\n\r\n        function removeExtraSparseChannels(channels: Channel[], maxLength: number): void {\r\n            while (channels.length > maxLength) {\r\n                let sparsestIndex: number = channels.length - 1;\r\n                let mostZeroes: number = 0;\r\n                for (let channelIndex: number = 0; channelIndex < channels.length - 1; channelIndex++) {\r\n                    let zeroes: number = 0;\r\n                    for (const bar of channels[channelIndex].bars) {\r\n                        if (bar == 0) zeroes++;\r\n                    }\r\n                    if (zeroes >= mostZeroes) {\r\n                        sparsestIndex = channelIndex;\r\n                        mostZeroes = zeroes;\r\n                    }\r\n                }\r\n                channels.splice(sparsestIndex, 1);\r\n            }\r\n        }\r\n\r\n        removeExtraSparseChannels(pitchChannels, Config.pitchChannelCountMax);\r\n        removeExtraSparseChannels(noiseChannels, Config.noiseChannelCountMax);\r\n        removeExtraSparseChannels(modChannels, Config.modChannelCountMax);\r\n\r\n        while (pitchChannels.length < Config.pitchChannelCountMin) pitchChannels.push(new Channel());\r\n        while (noiseChannels.length < Config.noiseChannelCountMin) noiseChannels.push(new Channel());\r\n        while (modChannels.length < Config.modChannelCountMin) modChannels.push(new Channel());\r\n\r\n        // Set minimum counts.\r\n        song.barCount = 1;\r\n        song.patternsPerChannel = 8;\r\n        const combinedChannels: Channel[] = pitchChannels.concat(noiseChannels.concat(modChannels));\r\n        for (let channelIndex: number = 0; channelIndex < combinedChannels.length; channelIndex++) {\r\n            const channel: Channel = combinedChannels[channelIndex];\r\n            song.barCount = Math.max(song.barCount, channel.bars.length);\r\n            song.patternsPerChannel = Math.max(song.patternsPerChannel, channel.patterns.length);\r\n            song.channels[channelIndex] = channel;\r\n        }\r\n        song.channels.length = combinedChannels.length;\r\n        song.pitchChannelCount = pitchChannels.length;\r\n        song.noiseChannelCount = noiseChannels.length;\r\n        song.modChannelCount = modChannels.length;\r\n\r\n        song.barCount = Math.min(Config.barCountMax, song.barCount);\r\n        song.patternsPerChannel = Math.min(Config.barCountMax, song.patternsPerChannel);\r\n        for (let channelIndex: number = 0; channelIndex < song.channels.length; channelIndex++) {\r\n            const channel: Channel = song.channels[channelIndex];\r\n\r\n            for (let barIndex: number = 0; barIndex < channel.bars.length; barIndex++) {\r\n                if (channel.bars[barIndex] > song.patternsPerChannel || channel.bars[barIndex] < 0) {\r\n                    channel.bars[barIndex] = 0;\r\n                }\r\n            }\r\n            while (channel.bars.length < song.barCount) {\r\n                channel.bars.push(0);\r\n            }\r\n            channel.bars.length = song.barCount;\r\n\r\n            if (channel.instruments.length > song.getMaxInstrumentsPerChannel()) {\r\n                channel.instruments.length = song.getMaxInstrumentsPerChannel();\r\n            }\r\n\r\n            for (const pattern of channel.patterns) {\r\n                discardInvalidPatternInstruments(pattern.instruments, song, channelIndex);\r\n            }\r\n            while (channel.patterns.length < song.patternsPerChannel) {\r\n                channel.patterns.push(new Pattern());\r\n            }\r\n\r\n            channel.patterns.length = song.patternsPerChannel;\r\n        }\r\n\r\n        song.loopStart = Math.max(0, Math.min(song.barCount - 1, song.loopStart));\r\n        song.loopLength = Math.min(song.barCount - song.loopStart, song.loopLength);\r\n\r\n        this.append(new ChangeValidateTrackSelection(doc));\r\n        doc.notifier.changed();\r\n        this._didSomething();\r\n\r\n        ColorConfig.resetColors();\r\n    }\r\n}\r\n\r\nexport function comparePatternNotes(a: Note[], b: Note[]): boolean {\r\n    if (a.length != b.length) return false;\r\n\r\n    for (let noteIndex: number = 0; noteIndex < a.length; noteIndex++) {\r\n        const oldNote: Note = a[noteIndex];\r\n        const newNote: Note = b[noteIndex];\r\n        if (newNote.start != oldNote.start || newNote.end != oldNote.end || newNote.pitches.length != oldNote.pitches.length || newNote.pins.length != oldNote.pins.length) {\r\n            return false;\r\n        }\r\n\r\n        for (let pitchIndex: number = 0; pitchIndex < oldNote.pitches.length; pitchIndex++) {\r\n            if (newNote.pitches[pitchIndex] != oldNote.pitches[pitchIndex]) {\r\n                return false;\r\n            }\r\n        }\r\n\r\n        for (let pinIndex: number = 0; pinIndex < oldNote.pins.length; pinIndex++) {\r\n            if (newNote.pins[pinIndex].interval != oldNote.pins[pinIndex].interval || newNote.pins[pinIndex].time != oldNote.pins[pinIndex].time || newNote.pins[pinIndex].size != oldNote.pins[pinIndex].size) {\r\n                return false;\r\n            }\r\n        }\r\n    }\r\n\r\n    return true;\r\n}\r\n\r\nexport function removeDuplicatePatterns(channels: Channel[]): void {\r\n    for (const channel of channels) {\r\n        const newPatterns: Pattern[] = [];\r\n        for (let bar: number = 0; bar < channel.bars.length; bar++) {\r\n            if (channel.bars[bar] == 0) continue;\r\n\r\n            const oldPattern: Pattern = channel.patterns[channel.bars[bar] - 1];\r\n\r\n            let foundMatchingPattern: boolean = false;\r\n            for (let newPatternIndex: number = 0; newPatternIndex < newPatterns.length; newPatternIndex++) {\r\n                const newPattern: Pattern = newPatterns[newPatternIndex];\r\n\r\n                if (!patternsContainSameInstruments(oldPattern.instruments, newPattern.instruments) || newPattern.notes.length != oldPattern.notes.length) {\r\n                    continue;\r\n                }\r\n\r\n                if (comparePatternNotes(oldPattern.notes, newPattern.notes)) {\r\n                    foundMatchingPattern = true;\r\n                    channel.bars[bar] = newPatternIndex + 1;\r\n                    break;\r\n                }\r\n            }\r\n\r\n            if (!foundMatchingPattern) {\r\n                newPatterns.push(oldPattern);\r\n                channel.bars[bar] = newPatterns.length;\r\n            }\r\n        }\r\n\r\n        for (let patternIndex: number = 0; patternIndex < newPatterns.length; patternIndex++) {\r\n            channel.patterns[patternIndex] = newPatterns[patternIndex];\r\n        }\r\n        channel.patterns.length = newPatterns.length;\r\n    }\r\n}\r\n\r\nexport class ChangeKeyOctave extends Change {\r\n    constructor(doc: SongDocument, oldValue: number, newValue: number) {\r\n        super();\r\n        doc.song.octave = Math.max(Config.octaveMin, Math.min(Config.octaveMax, Math.round(newValue)));\r\n        doc.notifier.changed();\r\n        if (oldValue != newValue) this._didSomething();\r\n    }\r\n}\r\n\r\nexport class ChangeTempo extends Change {\r\n    constructor(doc: SongDocument, oldValue: number, newValue: number) {\r\n        super();\r\n        doc.song.tempo = Math.max(Config.tempoMin, Math.min(Config.tempoMax, Math.round(newValue)));\r\n        doc.synth.unsetMod(Config.modulators.dictionary[\"tempo\"].index);\r\n        doc.notifier.changed();\r\n        if (oldValue != newValue) this._didSomething();\r\n    }\r\n}\r\n\r\nexport class ChangeEchoDelay extends ChangeInstrumentSlider {\r\n    constructor(doc: SongDocument, oldValue: number, newValue: number) {\r\n        super(doc);\r\n        this._instrument.echoDelay = newValue;\r\n        doc.synth.unsetMod(Config.modulators.dictionary[\"echo delay\"].index, doc.channel, doc.getCurrentInstrument());\r\n        doc.notifier.changed();\r\n        if (oldValue != newValue) this._didSomething();\r\n    }\r\n}\r\n\r\nexport class ChangeEchoSustain extends ChangeInstrumentSlider {\r\n    constructor(doc: SongDocument, oldValue: number, newValue: number) {\r\n        super(doc);\r\n        this._instrument.echoSustain = newValue;\r\n        doc.synth.unsetMod(Config.modulators.dictionary[\"echo\"].index, doc.channel, doc.getCurrentInstrument());\r\n        doc.notifier.changed();\r\n        if (oldValue != newValue) this._didSomething();\r\n    }\r\n}\r\n\r\nexport class ChangeChorus extends ChangeInstrumentSlider {\r\n    constructor(doc: SongDocument, oldValue: number, newValue: number) {\r\n        super(doc);\r\n        this._instrument.chorus = newValue;\r\n        doc.notifier.changed();\r\n        if (oldValue != newValue) this._didSomething();\r\n    }\r\n}\r\n\r\nexport class ChangeReverb extends ChangeInstrumentSlider {\r\n    constructor(doc: SongDocument, oldValue: number, newValue: number) {\r\n        super(doc);\r\n        this._instrument.reverb = newValue;\r\n        doc.synth.unsetMod(Config.modulators.dictionary[\"reverb\"].index, doc.channel, doc.getCurrentInstrument());\r\n        doc.notifier.changed();\r\n        if (oldValue != newValue) this._didSomething();\r\n    }\r\n}\r\n\r\nexport class ChangeSongReverb extends Change {\r\n    constructor(doc: SongDocument, oldValue: number, newValue: number) {\r\n        super();\r\n        doc.song.reverb = newValue;\r\n        doc.synth.unsetMod(Config.modulators.dictionary[\"song reverb\"].index);\r\n        doc.notifier.changed();\r\n        if (oldValue != newValue) this._didSomething();\r\n    }\r\n}\r\n\r\nexport class ChangeNoteAdded extends UndoableChange {\r\n    private _doc: SongDocument;\r\n    private _pattern: Pattern;\r\n    private _note: Note;\r\n    private _index: number;\r\n    constructor(doc: SongDocument, pattern: Pattern, note: Note, index: number, deletion: boolean = false) {\r\n        super(deletion);\r\n        this._doc = doc;\r\n        this._pattern = pattern;\r\n        this._note = note;\r\n        this._index = index;\r\n        this._didSomething();\r\n        this.redo();\r\n    }\r\n\r\n    protected _doForwards(): void {\r\n        this._pattern.notes.splice(this._index, 0, this._note);\r\n        this._doc.notifier.changed();\r\n    }\r\n\r\n    protected _doBackwards(): void {\r\n        this._pattern.notes.splice(this._index, 1);\r\n        this._doc.notifier.changed();\r\n    }\r\n}\r\n\r\nexport class ChangeNoteLength extends ChangePins {\r\n    constructor(doc: SongDocument | null, note: Note, truncStart: number, truncEnd: number) {\r\n        super(doc, note);\r\n        const continuesLastPattern: boolean = ((this._oldStart < 0 || note.continuesLastPattern) && truncStart == 0);\r\n\r\n        truncStart -= this._oldStart;\r\n        truncEnd -= this._oldStart;\r\n        let setStart: boolean = false;\r\n        let prevSize: number = this._oldPins[0].size;\r\n        let prevInterval: number = this._oldPins[0].interval;\r\n        let pushLastPin: boolean = true;\r\n        let i: number;\r\n        for (i = 0; i < this._oldPins.length; i++) {\r\n            const oldPin: NotePin = this._oldPins[i];\r\n            if (oldPin.time < truncStart) {\r\n                prevSize = oldPin.size;\r\n                prevInterval = oldPin.interval;\r\n            } else {\r\n                if (oldPin.time > truncStart && !setStart) {\r\n                    this._newPins.push(makeNotePin(prevInterval, truncStart, prevSize));\r\n                    setStart = true;\r\n                }\r\n                if (oldPin.time <= truncEnd) {\r\n                    this._newPins.push(makeNotePin(oldPin.interval, oldPin.time, oldPin.size));\r\n                    if (oldPin.time == truncEnd) {\r\n                        pushLastPin = false;\r\n                        break;\r\n                    }\r\n                } else {\r\n                    break;\r\n                }\r\n\r\n            }\r\n\r\n        }\r\n\r\n        if (pushLastPin) this._newPins.push(makeNotePin(this._oldPins[i].interval, truncEnd, this._oldPins[i].size));\r\n\r\n        this._finishSetup(continuesLastPattern);\r\n    }\r\n}\r\n\r\nexport class ChangeNoteTruncate extends ChangeSequence {\r\n    constructor(doc: SongDocument, pattern: Pattern, start: number, end: number, skipNote: Note | null = null, force: boolean = false) {\r\n        super();\r\n        let i: number = 0;\r\n        while (i < pattern.notes.length) {\r\n            const note: Note = pattern.notes[i];\r\n            if (note == skipNote && skipNote != null) {\r\n                i++;\r\n            } else if (note.end <= start) {\r\n                i++;\r\n            } else if (note.start >= end) {\r\n                // Allow out-of-order notes for mods so that all get checked.\r\n                if (!doc.song.getChannelIsMod(doc.channel)) {\r\n                    break;\r\n                } else {\r\n                    i++;\r\n                }\r\n            } else if (note.start < start && note.end > end) {\r\n                if (!doc.song.getChannelIsMod(doc.channel) || force || (skipNote != null && note.pitches[0] == skipNote.pitches[0])) {\r\n                    const copy: Note = note.clone();\r\n                    this.append(new ChangeNoteLength(doc, note, note.start, start));\r\n                    i++;\r\n                    this.append(new ChangeNoteAdded(doc, pattern, copy, i, false));\r\n                    this.append(new ChangeNoteLength(doc, copy, end, copy.end));\r\n                }\r\n                i++;\r\n            } else if (note.start < start) {\r\n                if (!doc.song.getChannelIsMod(doc.channel) || force || (skipNote != null && note.pitches[0] == skipNote.pitches[0]))\r\n                    this.append(new ChangeNoteLength(doc, note, note.start, start));\r\n                i++;\r\n            } else if (note.end > end) {\r\n                if (!doc.song.getChannelIsMod(doc.channel) || force || (skipNote != null && note.pitches[0] == skipNote.pitches[0]))\r\n                    this.append(new ChangeNoteLength(doc, note, end, note.end));\r\n                i++;\r\n            } else {\r\n                if (!doc.song.getChannelIsMod(doc.channel) || force || (skipNote != null && note.pitches[0] == skipNote.pitches[0]))\r\n                    this.append(new ChangeNoteAdded(doc, pattern, note, i, true));\r\n                else\r\n                    i++;\r\n            }\r\n        }\r\n    }\r\n}\r\n\r\nclass ChangeSplitNotesAtSelection extends ChangeSequence {\r\n    constructor(doc: SongDocument, pattern: Pattern) {\r\n        super();\r\n        let i: number = 0;\r\n        while (i < pattern.notes.length) {\r\n            const note: Note = pattern.notes[i];\r\n            if (note.start < doc.selection.patternSelectionStart && doc.selection.patternSelectionStart < note.end) {\r\n                const copy: Note = note.clone();\r\n                this.append(new ChangeNoteLength(doc, note, note.start, doc.selection.patternSelectionStart));\r\n                i++;\r\n                this.append(new ChangeNoteAdded(doc, pattern, copy, i, false));\r\n                this.append(new ChangeNoteLength(doc, copy, doc.selection.patternSelectionStart, copy.end));\r\n                // i++; // The second note might be split again at the end of the selection. Check it again.\r\n            } else if (note.start < doc.selection.patternSelectionEnd && doc.selection.patternSelectionEnd < note.end) {\r\n                const copy: Note = note.clone();\r\n                this.append(new ChangeNoteLength(doc, note, note.start, doc.selection.patternSelectionEnd));\r\n                i++;\r\n                this.append(new ChangeNoteAdded(doc, pattern, copy, i, false));\r\n                this.append(new ChangeNoteLength(doc, copy, doc.selection.patternSelectionEnd, copy.end));\r\n                i++;\r\n            } else {\r\n                i++;\r\n            }\r\n        }\r\n    }\r\n}\r\n\r\nclass ChangeTransposeNote extends UndoableChange {\r\n    protected _doc: SongDocument;\r\n    protected _note: Note;\r\n    protected _oldStart: number;\r\n    protected _newStart: number;\r\n    protected _oldEnd: number;\r\n    protected _newEnd: number;\r\n    protected _oldPins: NotePin[];\r\n    protected _newPins: NotePin[];\r\n    protected _oldPitches: number[];\r\n    protected _newPitches: number[];\r\n    constructor(doc: SongDocument, channelIndex: number, note: Note, upward: boolean, ignoreScale: boolean = false, octave: boolean = false) {\r\n        super(false);\r\n        this._doc = doc;\r\n        this._note = note;\r\n        this._oldPins = note.pins;\r\n        this._newPins = [];\r\n        this._oldPitches = note.pitches;\r\n        this._newPitches = [];\r\n\r\n        // I'm disabling pitch transposing for noise channels to avoid\r\n        // accidentally messing up noise channels when pitch shifting all\r\n        // channels at once.\r\n        const isNoise: boolean = doc.song.getChannelIsNoise(channelIndex);\r\n        if (isNoise != doc.song.getChannelIsNoise(doc.channel)) return;\r\n\r\n        // Can't transpose mods\r\n        if (doc.song.getChannelIsMod(doc.channel)) return;\r\n\r\n        const maxPitch: number = (isNoise ? Config.drumCount - 1 : Config.maxPitch);\r\n\r\n        for (let i: number = 0; i < this._oldPitches.length; i++) {\r\n            let pitch: number = this._oldPitches[i];\r\n            if (octave && !isNoise) {\r\n                if (upward) {\r\n                    //pitch = Math.min(maxPitch, pitch + 12);\r\n                    pitch = Math.min(maxPitch, pitch + Config.pitchesPerOctave);\r\n                } else {\r\n                    //pitch = Math.max(0, pitch - 12);\r\n                    pitch = Math.max(0, pitch - Config.pitchesPerOctave);\r\n                }\r\n                //microtonal changes\r\n            } else {\r\n\t\t\t\tlet scale = doc.song.scale == Config.scales.dictionary[\"Custom\"].index ? doc.song.scaleCustom : Config.scales[doc.song.scale].flags;\r\n                if (upward) {\r\n                    for (let j: number = pitch + 1; j <= maxPitch; j++) {\r\n                        //if (isNoise || ignoreScale || scale[j % 12]) {\r\n                        if (isNoise || ignoreScale || scale[j % Config.pitchesPerOctave]) {\r\n                            pitch = j;\r\n                            break;\r\n                        }\r\n                    }\r\n                } else {\r\n                    for (let j: number = pitch - 1; j >= 0; j--) {\r\n                        //if (isNoise || ignoreScale || scale[j % 12]) {\r\n                        if (isNoise || ignoreScale || scale[j % Config.pitchesPerOctave]) {\r\n                            pitch = j;\r\n                            break;\r\n                        }\r\n                    }\r\n                }\r\n            }\r\n\r\n            let foundMatch: boolean = false;\r\n            for (let j: number = 0; j < this._newPitches.length; j++) {\r\n                if (this._newPitches[j] == pitch) {\r\n                    foundMatch = true;\r\n                    break;\r\n                }\r\n            }\r\n            if (!foundMatch) this._newPitches.push(pitch);\r\n        }\r\n\r\n        let min: number = 0;\r\n        let max: number = maxPitch;\r\n\r\n        for (let i: number = 1; i < this._newPitches.length; i++) {\r\n            const diff: number = this._newPitches[0] - this._newPitches[i];\r\n            if (min < diff) min = diff;\r\n            if (max > diff + maxPitch) max = diff + maxPitch;\r\n        }\r\n\r\n        for (const oldPin of this._oldPins) {\r\n            let interval: number = oldPin.interval + this._oldPitches[0];\r\n\r\n            if (interval < min) interval = min;\r\n            if (interval > max) interval = max;\r\n            if (octave && !isNoise) {\r\n                if (upward) {\r\n                    //interval = Math.min(max, interval + 12);\r\n                    interval = Math.min(max, interval + Config.pitchesPerOctave);\r\n                } else {\r\n                    //interval = Math.max(min, interval - 12);\r\n                    interval = Math.min(max, interval - Config.pitchesPerOctave);\r\n                }\r\n                //microtonal changes\r\n            } else {\r\n\t\t\t\tlet scale = doc.song.scale == Config.scales.dictionary[\"Custom\"].index ? doc.song.scaleCustom : Config.scales[doc.song.scale].flags;\r\n                if (upward) {\r\n                    for (let i: number = interval + 1; i <= max; i++) {\r\n                        //if (isNoise || ignoreScale || scale[i % 12]) {\r\n                        if (isNoise || ignoreScale || scale[i % Config.pitchesPerOctave]) {\r\n                            interval = i;\r\n                            break;\r\n                        }\r\n                    }\r\n                } else {\r\n                    for (let i: number = interval - 1; i >= min; i--) {\r\n                        //if (isNoise || ignoreScale || scale[i % 12]) {\r\n                        if (isNoise || ignoreScale || scale[i % Config.pitchesPerOctave]) {\r\n                            interval = i;\r\n                            break;\r\n                        }\r\n                    }\r\n                }\r\n                //microtonal changes\r\n            }\r\n            interval -= this._newPitches[0];\r\n            this._newPins.push(makeNotePin(interval, oldPin.time, oldPin.size));\r\n        }\r\n\r\n        if (this._newPins[0].interval != 0) throw new Error(\"wrong pin start interval\");\r\n\r\n        for (let i: number = 1; i < this._newPins.length - 1;) {\r\n            if (this._newPins[i - 1].interval == this._newPins[i].interval &&\r\n                this._newPins[i].interval == this._newPins[i + 1].interval &&\r\n                this._newPins[i - 1].size == this._newPins[i].size &&\r\n                this._newPins[i].size == this._newPins[i + 1].size) {\r\n                this._newPins.splice(i, 1);\r\n            } else {\r\n                i++;\r\n            }\r\n        }\r\n\r\n        this._doForwards();\r\n        this._didSomething();\r\n    }\r\n\r\n    protected _doForwards(): void {\r\n        this._note.pins = this._newPins;\r\n        this._note.pitches = this._newPitches;\r\n        this._doc.notifier.changed();\r\n    }\r\n\r\n    protected _doBackwards(): void {\r\n        this._note.pins = this._oldPins;\r\n        this._note.pitches = this._oldPitches;\r\n        this._doc.notifier.changed();\r\n    }\r\n}\r\n\r\nexport class ChangeTranspose extends ChangeSequence {\r\n    constructor(doc: SongDocument, channelIndex: number, pattern: Pattern, upward: boolean, ignoreScale: boolean = false, octave: boolean = false) {\r\n        super();\r\n        if (doc.selection.patternSelectionActive) {\r\n            this.append(new ChangeSplitNotesAtSelection(doc, pattern));\r\n        }\r\n        for (const note of pattern.notes) {\r\n            if (doc.selection.patternSelectionActive && (note.end <= doc.selection.patternSelectionStart || note.start >= doc.selection.patternSelectionEnd)) {\r\n                continue;\r\n            }\r\n            this.append(new ChangeTransposeNote(doc, channelIndex, note, upward, ignoreScale, octave));\r\n        }\r\n    }\r\n}\r\n\r\nexport class ChangeTrackSelection extends Change {\r\n    constructor(doc: SongDocument, newX0: number, newX1: number, newY0: number, newY1: number) {\r\n        super();\r\n        doc.selection.boxSelectionX0 = newX0;\r\n        doc.selection.boxSelectionX1 = newX1;\r\n        doc.selection.boxSelectionY0 = newY0;\r\n        doc.selection.boxSelectionY1 = newY1;\r\n        doc.notifier.changed();\r\n        this._didSomething();\r\n    }\r\n}\r\n\r\nexport class ChangePatternSelection extends UndoableChange {\r\n    private _doc: SongDocument;\r\n    private _oldStart: number;\r\n    private _oldEnd: number;\r\n    private _oldActive: boolean;\r\n    private _newStart: number;\r\n    private _newEnd: number;\r\n    private _newActive: boolean;\r\n\r\n    constructor(doc: SongDocument, newStart: number, newEnd: number) {\r\n        super(false);\r\n        this._doc = doc;\r\n        this._oldStart = doc.selection.patternSelectionStart;\r\n        this._oldEnd = doc.selection.patternSelectionEnd;\r\n        this._oldActive = doc.selection.patternSelectionActive;\r\n        this._newStart = newStart;\r\n        this._newEnd = newEnd;\r\n        this._newActive = newStart < newEnd;\r\n        this._doForwards();\r\n        this._didSomething();\r\n    }\r\n\r\n    protected _doForwards(): void {\r\n        this._doc.selection.patternSelectionStart = this._newStart;\r\n        this._doc.selection.patternSelectionEnd = this._newEnd;\r\n        this._doc.selection.patternSelectionActive = this._newActive;\r\n        this._doc.notifier.changed();\r\n    }\r\n\r\n    protected _doBackwards(): void {\r\n        this._doc.selection.patternSelectionStart = this._oldStart;\r\n        this._doc.selection.patternSelectionEnd = this._oldEnd;\r\n        this._doc.selection.patternSelectionActive = this._oldActive;\r\n        this._doc.notifier.changed();\r\n    }\r\n}\r\n\r\nexport class ChangeDragSelectedNotes extends ChangeSequence {\r\n    constructor(doc: SongDocument, channelIndex: number, pattern: Pattern, parts: number, transpose: number) {\r\n        super();\r\n\r\n        if (parts == 0 && transpose == 0) return;\r\n\r\n        if (doc.selection.patternSelectionActive) {\r\n            this.append(new ChangeSplitNotesAtSelection(doc, pattern));\r\n        }\r\n\r\n        const oldStart: number = doc.selection.patternSelectionStart;\r\n        const oldEnd: number = doc.selection.patternSelectionEnd;\r\n        const newStart: number = Math.max(0, Math.min(doc.song.beatsPerBar * Config.partsPerBeat, oldStart + parts));\r\n        const newEnd: number = Math.max(0, Math.min(doc.song.beatsPerBar * Config.partsPerBeat, oldEnd + parts));\r\n        if (newStart == newEnd) {\r\n            // Just erase the current contents of the selection:\r\n            this.append(new ChangeNoteTruncate(doc, pattern, oldStart, oldEnd, null, true));\r\n        } else if (parts < 0) {\r\n            // Clear space for the dragged notes:\r\n            this.append(new ChangeNoteTruncate(doc, pattern, newStart, Math.min(oldStart, newEnd), null, true));\r\n        } else {\r\n            // Clear space for the dragged notes:\r\n            this.append(new ChangeNoteTruncate(doc, pattern, Math.max(oldEnd, newStart), newEnd, null, true));\r\n        }\r\n\r\n        this.append(new ChangePatternSelection(doc, newStart, newEnd));\r\n        const draggedNotes = [];\r\n        let noteInsertionIndex: number = 0;\r\n        let i: number = 0;\r\n        while (i < pattern.notes.length) {\r\n            const note: Note = pattern.notes[i];\r\n            if (note.end <= oldStart || note.start >= oldEnd) {\r\n                i++;\r\n                if (note.end <= newStart) noteInsertionIndex = i;\r\n            } else {\r\n                draggedNotes.push(note.clone());\r\n                this.append(new ChangeNoteAdded(doc, pattern, note, i, true));\r\n            }\r\n        }\r\n\r\n        for (const note of draggedNotes) {\r\n            note.start += parts;\r\n            note.end += parts;\r\n            if (note.end <= newStart) continue;\r\n            if (note.start >= newEnd) continue;\r\n\r\n            this.append(new ChangeNoteAdded(doc, pattern, note, noteInsertionIndex++, false));\r\n\r\n            this.append(new ChangeNoteLength(doc, note, Math.max(note.start, newStart), Math.min(newEnd, note.end)));\r\n\r\n            for (let i: number = 0; i < Math.abs(transpose); i++) {\r\n                this.append(new ChangeTransposeNote(doc, channelIndex, note, transpose > 0, doc.prefs.notesOutsideScale));\r\n            }\r\n\r\n        }\r\n    }\r\n}\r\n\r\nexport class ChangeDuplicateSelectedReusedPatterns extends ChangeGroup {\r\n    constructor(doc: SongDocument, barStart: number, barWidth: number, channelStart: number, channelHeight: number) {\r\n        super();\r\n        for (let channelIndex: number = channelStart; channelIndex < channelStart + channelHeight; channelIndex++) {\r\n            const reusablePatterns: Dictionary<number> = {};\r\n\r\n            for (let bar: number = barStart; bar < barStart + barWidth; bar++) {\r\n                const currentPatternIndex: number = doc.song.channels[channelIndex].bars[bar];\r\n                if (currentPatternIndex == 0) continue;\r\n\r\n                if (reusablePatterns[String(currentPatternIndex)] == undefined) {\r\n                    let isUsedElsewhere = false;\r\n                    for (let bar2: number = 0; bar2 < doc.song.barCount; bar2++) {\r\n                        if (bar2 < barStart || bar2 >= barStart + barWidth) {\r\n                            if (doc.song.channels[channelIndex].bars[bar2] == currentPatternIndex) {\r\n                                isUsedElsewhere = true;\r\n                                break;\r\n                            }\r\n                        }\r\n                    }\r\n                    if (isUsedElsewhere) {\r\n                        // Need to duplicate the pattern.\r\n                        const copiedPattern: Pattern = doc.song.getPattern(channelIndex, bar)!;\r\n                        this.append(new ChangePatternNumbers(doc, 0, bar, channelIndex, 1, 1));\r\n                        this.append(new ChangeEnsurePatternExists(doc, channelIndex, bar));\r\n                        const newPattern: Pattern | null = doc.song.getPattern(channelIndex, bar);\r\n                        if (newPattern == null) throw new Error();\r\n                        this.append(new ChangePaste(doc, newPattern, copiedPattern.notes, 0, Config.partsPerBeat * doc.song.beatsPerBar, Config.partsPerBeat * doc.song.beatsPerBar));\r\n\r\n                        // Copy the instruments into the new pattern.\r\n                        newPattern.instruments.length = 0;\r\n                        newPattern.instruments.push(...copiedPattern.instruments);\r\n\r\n                        reusablePatterns[String(currentPatternIndex)] = doc.song.channels[channelIndex].bars[bar];\r\n                    } else {\r\n                        reusablePatterns[String(currentPatternIndex)] = currentPatternIndex;\r\n                    }\r\n                }\r\n\r\n                this.append(new ChangePatternNumbers(doc, reusablePatterns[String(currentPatternIndex)], bar, channelIndex, 1, 1));\r\n            }\r\n        }\r\n    }\r\n}\r\n\r\nexport class ChangePatternScale extends Change {\r\n    constructor(doc: SongDocument, pattern: Pattern, scaleMap: number[]) {\r\n        super();\r\n        if (doc.selection.patternSelectionActive) {\r\n            new ChangeSplitNotesAtSelection(doc, pattern);\r\n        }\r\n        const maxPitch: number = Config.maxPitch;\r\n        for (const note of pattern.notes) {\r\n            if (doc.selection.patternSelectionActive && (note.end <= doc.selection.patternSelectionStart || note.start >= doc.selection.patternSelectionEnd)) {\r\n                continue;\r\n            }\r\n\r\n            const newPitches: number[] = [];\r\n            const newPins: NotePin[] = [];\r\n            for (let i: number = 0; i < note.pitches.length; i++) {\r\n                const pitch: number = note.pitches[i];\r\n                //const transformedPitch: number = scaleMap[pitch % 12] + (pitch - (pitch % 12));\r\n                const transformedPitch: number = scaleMap[pitch % Config.pitchesPerOctave] + (pitch - (pitch % Config.pitchesPerOctave));\r\n                //I believe this is neccessary?\r\n                if (newPitches.indexOf(transformedPitch) == -1) {\r\n                    newPitches.push(transformedPitch);\r\n                }\r\n            }\r\n\r\n            let min: number = 0;\r\n            let max: number = maxPitch;\r\n\r\n            for (let i: number = 1; i < newPitches.length; i++) {\r\n                const diff: number = newPitches[0] - newPitches[i];\r\n                if (min < diff) min = diff;\r\n                if (max > diff + maxPitch) max = diff + maxPitch;\r\n            }\r\n\r\n            for (const oldPin of note.pins) {\r\n                let interval: number = oldPin.interval + note.pitches[0];\r\n                if (interval < min) interval = min;\r\n                if (interval > max) interval = max;\r\n                //const transformedInterval: number = scaleMap[interval % 12] + (interval - (interval % 12));\r\n                const transformedInterval: number = scaleMap[interval % Config.pitchesPerOctave] + (interval - (interval % Config.pitchesPerOctave));\r\n                //as is this?\r\n                newPins.push(makeNotePin(transformedInterval - newPitches[0], oldPin.time, oldPin.size));\r\n            }\r\n\r\n            if (newPins[0].interval != 0) throw new Error(\"wrong pin start interval\");\r\n\r\n            for (let i: number = 1; i < newPins.length - 1;) {\r\n                if (newPins[i - 1].interval == newPins[i].interval &&\r\n                    newPins[i].interval == newPins[i + 1].interval &&\r\n                    newPins[i - 1].size == newPins[i].size &&\r\n                    newPins[i].size == newPins[i + 1].size) {\r\n                    newPins.splice(i, 1);\r\n                } else {\r\n                    i++;\r\n                }\r\n            }\r\n\r\n            note.pitches = newPitches;\r\n            note.pins = newPins;\r\n        }\r\n        this._didSomething();\r\n        doc.notifier.changed();\r\n    }\r\n}\r\n\r\nexport class ChangeVolume extends Change {\r\n    constructor(doc: SongDocument, oldValue: number, newValue: number) {\r\n        super();\r\n        doc.song.channels[doc.channel].instruments[doc.getCurrentInstrument()].volume = newValue;\r\n        // Not used currently as mod is implemented as multiplicative.\r\n        //doc.synth.unsetMod(ModSetting.mstInsVolume, doc.channel, doc.getCurrentInstrument());\r\n        doc.notifier.changed();\r\n        if (oldValue != newValue) this._didSomething();\r\n    }\r\n}\r\n\r\nexport class ChangeSongTitle extends Change {\r\n    constructor(doc: SongDocument, oldValue: string, newValue: string) {\r\n        super();\r\n        if (newValue.length > 30) {\r\n            newValue = newValue.substring(0, 30);\r\n        }\r\n\r\n        doc.song.title = newValue;\r\n        document.title = newValue + \" - \" + EditorConfig.versionDisplayName;\r\n        doc.notifier.changed();\r\n        if (oldValue != newValue) this._didSomething();\r\n    }\r\n}\r\n\r\nexport class ChangeChannelName extends Change {\r\n    constructor(doc: SongDocument, oldValue: string, newValue: string) {\r\n        super();\r\n        if (newValue.length > 15) {\r\n            newValue = newValue.substring(0, 15);\r\n        }\r\n\r\n        doc.song.channels[doc.muteEditorChannel].name = newValue;\r\n        doc.recalcChannelNames = true;\r\n\r\n        doc.notifier.changed();\r\n        if (oldValue != newValue) this._didSomething();\r\n    }\r\n}\r\n\r\nexport class ChangePan extends Change {\r\n    constructor(doc: SongDocument, oldValue: number, newValue: number) {\r\n        super();\r\n        doc.song.channels[doc.channel].instruments[doc.getCurrentInstrument()].pan = newValue;\r\n        doc.synth.unsetMod(Config.modulators.dictionary[\"pan\"].index, doc.channel, doc.getCurrentInstrument());\r\n        doc.notifier.changed();\r\n        if (oldValue != newValue) this._didSomething();\r\n    }\r\n}\r\n\r\nexport class ChangePanDelay extends Change {\r\n    constructor(doc: SongDocument, oldValue: number, newValue: number) {\r\n        super();\r\n        doc.song.channels[doc.channel].instruments[doc.getCurrentInstrument()].panDelay = newValue;\r\n        doc.notifier.changed();\r\n        if (oldValue != newValue) this._didSomething();\r\n    }\r\n}\r\n\r\nexport class ChangeSizeBend extends UndoableChange {\r\n    private _doc: SongDocument;\r\n    private _note: Note;\r\n    private _oldPins: NotePin[];\r\n    private _newPins: NotePin[];\r\n    constructor(doc: SongDocument, note: Note, bendPart: number, bendSize: number, bendInterval: number, uniformSize: boolean) {\r\n        super(false);\r\n        this._doc = doc;\r\n        this._note = note;\r\n        this._oldPins = note.pins;\r\n        this._newPins = [];\r\n\r\n        let inserted: boolean = false;\r\n\r\n        for (const pin of note.pins) {\r\n            if (pin.time < bendPart) {\r\n                if (uniformSize) {\r\n                    this._newPins.push(makeNotePin(pin.interval, pin.time, bendSize));\r\n                } else {\r\n                    this._newPins.push(pin);\r\n                }\r\n            } else if (pin.time == bendPart) {\r\n                this._newPins.push(makeNotePin(bendInterval, bendPart, bendSize));\r\n                inserted = true;\r\n            } else {\r\n                if (!uniformSize && !inserted) {\r\n                    this._newPins.push(makeNotePin(bendInterval, bendPart, bendSize));\r\n                    inserted = true;\r\n                }\r\n                if (uniformSize) {\r\n                    this._newPins.push(makeNotePin(pin.interval, pin.time, bendSize));\r\n                } else {\r\n                    this._newPins.push(pin);\r\n                }\r\n            }\r\n        }\r\n\r\n        removeRedundantPins(this._newPins);\r\n\r\n        this._doForwards();\r\n        this._didSomething();\r\n    }\r\n\r\n    protected _doForwards(): void {\r\n        this._note.pins = this._newPins;\r\n        this._doc.notifier.changed();\r\n    }\r\n\r\n    protected _doBackwards(): void {\r\n        this._note.pins = this._oldPins;\r\n        this._doc.notifier.changed();\r\n    }\r\n}\r\n\r\nexport class ChangeChipWave extends Change {\r\n    constructor(doc: SongDocument, newValue: number) {\r\n        super();\r\n        const instrument: Instrument = doc.song.channels[doc.channel].instruments[doc.getCurrentInstrument()];\r\n        if (instrument.chipWave != newValue) {\r\n            instrument.chipWave = newValue;\r\n\t\t\t\t\t\t // advloop addition\r\n                instrument.isUsingAdvancedLoopControls = false;\r\n                instrument.chipWaveLoopStart = 0;\r\n                instrument.chipWaveLoopEnd = Config.rawRawChipWaves[instrument.chipWave].samples.length - 1;\r\n                instrument.chipWaveLoopMode = 0;\r\n                instrument.chipWavePlayBackwards = false;\r\n                instrument.chipWaveStartOffset = 0;\r\n                // advloop addition\r\n            instrument.preset = instrument.type;\r\n            doc.notifier.changed();\r\n            this._didSomething();\r\n        }\r\n    }\r\n}\r\n\r\n\t// advloop addition\r\n    export class ChangeChipWaveUseAdvancedLoopControls extends Change {\r\n        constructor(doc: SongDocument, newValue: boolean) {\r\n            super();\r\n            const instrument = doc.song.channels[doc.channel].instruments[doc.getCurrentInstrument()];\r\n            if (instrument.isUsingAdvancedLoopControls != newValue) {\r\n                instrument.isUsingAdvancedLoopControls = newValue;\r\n                instrument.chipWaveLoopStart = 0;\r\n                instrument.chipWaveLoopEnd = Config.rawRawChipWaves[instrument.chipWave].samples.length - 1;\r\n                instrument.chipWaveLoopMode = 0;\r\n                instrument.chipWavePlayBackwards = false;\r\n                instrument.chipWaveStartOffset = 0;\r\n                instrument.preset = instrument.type;\r\n                doc.notifier.changed();\r\n                this._didSomething();\r\n            }\r\n        }\r\n    }\r\n    export class ChangeChipWaveLoopMode extends Change {\r\n        constructor(doc: SongDocument, newValue: number) {\r\n            super();\r\n            const instrument = doc.song.channels[doc.channel].instruments[doc.getCurrentInstrument()];\r\n            if (instrument.chipWaveLoopMode != newValue) {\r\n                instrument.isUsingAdvancedLoopControls = true;\r\n                instrument.chipWaveLoopMode = newValue;\r\n                instrument.preset = instrument.type;\r\n                doc.notifier.changed();\r\n                this._didSomething();\r\n            }\r\n        }\r\n    }\r\n   export class ChangeChipWaveLoopStart extends Change {\r\n        constructor(doc: SongDocument, newValue: number) {\r\n            super();\r\n            const instrument = doc.song.channels[doc.channel].instruments[doc.getCurrentInstrument()];\r\n            if (instrument.chipWaveLoopStart != newValue) {\r\n                instrument.isUsingAdvancedLoopControls = true;\r\n                instrument.chipWaveLoopStart = newValue;\r\n                instrument.preset = instrument.type;\r\n                doc.notifier.changed();\r\n                this._didSomething();\r\n            }\r\n        }\r\n    }\r\n   export class ChangeChipWaveLoopEnd extends Change {\r\n        constructor(doc: SongDocument, newValue: number) {\r\n            super();\r\n            const instrument = doc.song.channels[doc.channel].instruments[doc.getCurrentInstrument()];\r\n            if (instrument.chipWaveLoopEnd != newValue) {\r\n                instrument.isUsingAdvancedLoopControls = true;\r\n                instrument.chipWaveLoopEnd = newValue;\r\n                instrument.chipWaveLoopStart = Math.max(0, Math.min(newValue - 1, instrument.chipWaveLoopStart));\r\n                instrument.preset = instrument.type;\r\n                doc.notifier.changed();\r\n                this._didSomething();\r\n            }\r\n        }\r\n    }\r\n   export class ChangeChipWaveStartOffset extends Change {\r\n        constructor(doc: SongDocument, newValue: number) {\r\n            super();\r\n            const instrument = doc.song.channels[doc.channel].instruments[doc.getCurrentInstrument()];\r\n            if (instrument.chipWaveStartOffset != newValue) {\r\n                instrument.isUsingAdvancedLoopControls = true;\r\n                instrument.chipWaveStartOffset = newValue;\r\n                instrument.preset = instrument.type;\r\n                doc.notifier.changed();\r\n                this._didSomething();\r\n            }\r\n        }\r\n    }\r\n   export class ChangeChipWavePlayBackwards extends Change {\r\n        constructor(doc: SongDocument, newValue: boolean) {\r\n            super();\r\n            const instrument = doc.song.channels[doc.channel].instruments[doc.getCurrentInstrument()];\r\n            if (instrument.chipWavePlayBackwards != newValue) {\r\n                instrument.isUsingAdvancedLoopControls = true;\r\n                instrument.chipWavePlayBackwards = newValue;\r\n                instrument.preset = instrument.type;\r\n                doc.notifier.changed();\r\n                this._didSomething();\r\n            }\r\n        }\r\n    }\r\n    // advloop addition\r\n\r\nexport class ChangeNoiseWave extends Change {\r\n    constructor(doc: SongDocument, newValue: number) {\r\n        super();\r\n        const instrument: Instrument = doc.song.channels[doc.channel].instruments[doc.getCurrentInstrument()];\r\n        if (instrument.chipNoise != newValue) {\r\n            instrument.chipNoise = newValue;\r\n            instrument.preset = instrument.type;\r\n            doc.notifier.changed();\r\n            this._didSomething();\r\n        }\r\n    }\r\n}\r\n\r\nexport class ChangeAddEnvelope extends Change {\r\n    constructor(doc: SongDocument) {\r\n        super();\r\n        const instrument: Instrument = doc.song.channels[doc.channel].instruments[doc.getCurrentInstrument()];\r\n        instrument.addEnvelope(0, 0, 0);\r\n        instrument.preset = instrument.type;\r\n        doc.notifier.changed();\r\n        this._didSomething();\r\n    }\r\n}\r\n\r\nexport class ChangeRemoveEnvelope extends Change {\r\n    constructor(doc: SongDocument, index: number) {\r\n        super();\r\n        const instrument: Instrument = doc.song.channels[doc.channel].instruments[doc.getCurrentInstrument()];\r\n        instrument.envelopeCount--;\r\n        for (let i: number = index; i < instrument.envelopeCount; i++) {\r\n            instrument.envelopes[i].target = instrument.envelopes[i + 1].target;\r\n            instrument.envelopes[i].index = instrument.envelopes[i + 1].index;\r\n            instrument.envelopes[i].envelope = instrument.envelopes[i + 1].envelope;\r\n        }\r\n        // TODO: Shift any envelopes that were targeting other envelope indices after the removed one.\r\n        instrument.preset = instrument.type;\r\n        doc.notifier.changed();\r\n        this._didSomething();\r\n    }\r\n}\r\n\r\nexport class ChangeSetEnvelopeTarget extends Change {\r\n    constructor(doc: SongDocument, envelopeIndex: number, target: number, targetIndex: number) {\r\n        super();\r\n        const instrument: Instrument = doc.song.channels[doc.channel].instruments[doc.getCurrentInstrument()];\r\n        const oldTarget: number = instrument.envelopes[envelopeIndex].target;\r\n        const oldIndex: number = instrument.envelopes[envelopeIndex].index;\r\n        if (oldTarget != target || oldIndex != targetIndex) {\r\n            instrument.envelopes[envelopeIndex].target = target;\r\n            instrument.envelopes[envelopeIndex].index = targetIndex;\r\n            instrument.preset = instrument.type;\r\n            doc.notifier.changed();\r\n            this._didSomething();\r\n        }\r\n    }\r\n}\r\n\r\nexport class ChangeSetEnvelopeType extends Change {\r\n    constructor(doc: SongDocument, envelopeIndex: number, newValue: number) {\r\n        super();\r\n        const instrument: Instrument = doc.song.channels[doc.channel].instruments[doc.getCurrentInstrument()];\r\n        const oldValue: number = instrument.envelopes[envelopeIndex].envelope;\r\n        if (oldValue != newValue) {\r\n            instrument.envelopes[envelopeIndex].envelope = newValue;\r\n            instrument.preset = instrument.type;\r\n            doc.notifier.changed();\r\n            this._didSomething();\r\n        }\r\n    }\r\n}\r\n","// Copyright (c) 2012-2022 John Nesky and contributing authors, distributed under the MIT license, see accompanying the LICENSE.md file.\r\n\r\nimport { Config } from \"../synth/SynthConfig\";\r\nimport { HTML } from \"imperative-html/dist/esm/elements-strict\";\r\nimport { SongDocument } from \"./SongDocument\";\r\nimport { Prompt } from \"./Prompt\";\r\nimport { ChangeBeatsPerBar } from \"./changes\";\r\n\r\n\tconst {button, div, span, h2, input, br, select, option} = HTML;\r\n\r\nexport class BeatsPerBarPrompt implements Prompt {\r\n\tprivate readonly _beatsStepper: HTMLInputElement = input({style: \"width: 3em; margin-left: 1em;\", type: \"number\", step: \"1\"});\r\n\tprivate readonly _conversionStrategySelect: HTMLSelectElement = select({style: \"width: 100%;\"},\r\n\t\toption({value: \"splice\"}, \"Splice beats at end of bars.\"),\r\n\t\toption({value: \"stretch\"}, \"Stretch notes to fit in bars.\"),\r\n\t\toption({value: \"overflow\"}, \"Overflow notes across bars.\"),\r\n\t);\r\n\tprivate readonly _cancelButton: HTMLButtonElement = button({class: \"cancelButton\"});\r\n\tprivate readonly _okayButton: HTMLButtonElement = button({class: \"okayButton\", style: \"width:45%;\"}, \"Okay\");\r\n\t\r\n\tpublic readonly container: HTMLDivElement = div({class: \"prompt noSelection\", style: \"width: 250px;\"},\r\n\t\th2(\"Beats Per Bar\"),\r\n\t\tdiv({style: \"display: flex; flex-direction: row; align-items: center; height: 2em; justify-content: flex-end;\"},\r\n\t\t\tdiv({style: \"text-align: right;\"},\r\n\t\t\t\t\"Beats per bar:\",\r\n\t\t\t\tbr(),\r\n\t\t\t\tspan({ style: \"font-size: smaller; color: ${ColorConfig.secondaryText};\" }, \"(Multiples of 3 or 4 are recommended)\"),\r\n\t\t\t),\r\n\t\t\tthis._beatsStepper,\r\n\t\t),\r\n\t\tdiv({style: \"display: flex; flex-direction: row; align-items: center; height: 2em; justify-content: flex-end;\"},\r\n\t\t\tdiv({class: \"selectContainer\", style: \"width: 100%;\"}, this._conversionStrategySelect),\r\n\t\t),\r\n\t\tdiv({style: \"display: flex; flex-direction: row-reverse; justify-content: space-between;\"},\r\n\t\t\tthis._okayButton,\r\n\t\t),\r\n\t\tthis._cancelButton,\r\n\t);\r\n\t\t\r\n\tconstructor(private _doc: SongDocument) {\r\n\t\tthis._beatsStepper.value = this._doc.song.beatsPerBar + \"\";\r\n\t\tthis._beatsStepper.min = Config.beatsPerBarMin + \"\";\r\n\t\tthis._beatsStepper.max = Config.beatsPerBarMax + \"\";\r\n\t\t\t\r\n\t\tconst lastStrategy: string | null = window.localStorage.getItem(\"beatCountStrategy\");\r\n\t\tif (lastStrategy != null) {\r\n\t\t\tthis._conversionStrategySelect.value = lastStrategy;\r\n\t\t}\r\n\t\t\t\r\n\t\tthis._beatsStepper.select();\r\n\t\t\tsetTimeout(()=>this._beatsStepper.focus());\r\n\t\t\t\r\n\t\tthis._okayButton.addEventListener(\"click\", this._saveChanges);\r\n\t\tthis._cancelButton.addEventListener(\"click\", this._close);\r\n\t\tthis._beatsStepper.addEventListener(\"keypress\", BeatsPerBarPrompt._validateKey);\r\n\t\tthis._beatsStepper.addEventListener(\"blur\", BeatsPerBarPrompt._validateNumber);\r\n\t\tthis.container.addEventListener(\"keydown\", this._whenKeyPressed);\r\n\t}\r\n\t\t\r\n\t\tprivate _close = (): void => { \r\n\t\tthis._doc.undo();\r\n\t}\r\n\t\t\r\n\t\tpublic cleanUp = (): void => { \r\n\t\tthis._okayButton.removeEventListener(\"click\", this._saveChanges);\r\n\t\tthis._cancelButton.removeEventListener(\"click\", this._close);\r\n\t\tthis._beatsStepper.removeEventListener(\"keypress\", BeatsPerBarPrompt._validateKey);\r\n\t\tthis._beatsStepper.removeEventListener(\"blur\", BeatsPerBarPrompt._validateNumber);\r\n\t\tthis.container.removeEventListener(\"keydown\", this._whenKeyPressed);\r\n\t}\r\n\t\t\r\n\tprivate _whenKeyPressed = (event: KeyboardEvent): void => {\r\n\t\t\tif ((<Element> event.target).tagName != \"BUTTON\" && event.keyCode == 13) { // Enter key\r\n\t\t\tthis._saveChanges();\r\n\t\t}\r\n\t}\r\n\t\t\r\n\tprivate static _validateKey(event: KeyboardEvent): boolean {\r\n\t\tconst charCode = (event.which) ? event.which : event.keyCode;\r\n\t\tif (charCode != 46 && charCode > 31 && (charCode < 48 || charCode > 57)) {\r\n\t\t\tevent.preventDefault();\r\n\t\t\t\treturn true;\r\n\t\t}\r\n\t\treturn false;\r\n\t}\r\n\t\t\r\n\tprivate static _validateNumber(event: Event): void {\r\n\t\tconst input: HTMLInputElement = <HTMLInputElement>event.target;\r\n\t\tinput.value = String(BeatsPerBarPrompt._validate(input));\r\n\t}\r\n\t\t\r\n\tprivate static _validate(input: HTMLInputElement): number {\r\n\t\treturn Math.floor(Math.max(Number(input.min), Math.min(Number(input.max), Number(input.value))));\r\n\t}\r\n\t\t\r\n\tprivate _saveChanges = (): void => {\r\n\t\twindow.localStorage.setItem(\"beatCountStrategy\", this._conversionStrategySelect.value);\r\n\t\tthis._doc.prompt = null;\r\n\t\tthis._doc.record(new ChangeBeatsPerBar(this._doc, BeatsPerBarPrompt._validate(this._beatsStepper), this._conversionStrategySelect.value), true);\r\n\t}\r\n}\r\n","// Copyright (c) 2012-2022 John Nesky and contributing authors, distributed under the MIT license, see accompanying the LICENSE.md file.\r\n\r\nimport { Config } from \"../synth/SynthConfig\";\r\nimport { HTML } from \"imperative-html/dist/esm/elements-strict\";\r\nimport { SongDocument } from \"./SongDocument\";\r\nimport { Prompt } from \"./Prompt\";\r\nimport { ChangeGroup } from \"./Change\";\r\nimport {ChangePatternsPerChannel, ChangeInstrumentsFlags, ChangeChannelCount, ChangeEdo} from \"./changes\";\r\n\r\nconst {button, div, label, br, h2, input, span} = HTML;\r\n\r\nexport class ChannelSettingsPrompt implements Prompt {\r\n\t\tprivate readonly _patternsStepper: HTMLInputElement = input({style: \"width: 3em; margin-left: 1em;\", type: \"number\", step: \"1\"});\r\n\t\tprivate readonly _pitchChannelStepper: HTMLInputElement = input({style: \"width: 3em; margin-left: 1em;\", type: \"number\", step: \"1\"});\r\n\t\tprivate readonly _drumChannelStepper: HTMLInputElement = input({style: \"width: 3em; margin-left: 1em;\", type: \"number\", step: \"1\"});\r\n\t\tprivate readonly _modChannelStepper: HTMLInputElement = input({ style: \"width: 3em; margin-left: 1em;\", type: \"number\", step: \"1\" });\r\n\t\tprivate readonly _layeredInstrumentsBox: HTMLInputElement = input({style: \"width: 3em; margin-left: 1em;\", type: \"checkbox\"});\r\n\t\tprivate readonly _patternInstrumentsBox: HTMLInputElement = input({style: \"width: 3em; margin-left: 1em;\", type: \"checkbox\"});\r\n\t\tprivate readonly _edoStepper: HTMLInputElement = input({ style: \"width: 3em; margin-left: 1em;\", type: \"number\", step: \"1\" });\r\n\t\t//microtonal changes\r\n\r\n\t\tprivate readonly _cancelButton: HTMLButtonElement = button({class: \"cancelButton\"});\r\n\t\tprivate readonly _okayButton: HTMLButtonElement = button({class: \"okayButton\", style: \"width:45%;\"}, \"Okay\");\r\n\t\t\r\n\tpublic readonly container: HTMLDivElement = div({class: \"prompt noSelection\", style: \"width: 250px; text-align: right;\"},\r\n\t\th2(\"Channel Settings\"),\r\n\t\tlabel({style: \"display: flex; flex-direction: row; align-items: center; height: 2em; justify-content: flex-end;\"},\r\n\t\t\t\"Pitch channels:\",\r\n\t\t\tthis._pitchChannelStepper,\r\n\t\t),\r\n\t\tlabel({style: \"display: flex; flex-direction: row; align-items: center; height: 2em; justify-content: flex-end;\"},\r\n\t\t\t\"Drum channels:\",\r\n\t\t\tthis._drumChannelStepper,\r\n\t\t),\r\n\t\tdiv({ style: \"display: flex; flex-direction: row; align-items: center; height: 2em; justify-content: flex-end;\" },\r\n\t\t\t\"Mod channels:\",\r\n\t\t\tthis._modChannelStepper,\r\n\t\t),\r\n\t\tlabel({style: \"display: flex; flex-direction: row; align-items: center; height: 2em; justify-content: flex-end;\"},\r\n\t\t\t\"Available patterns per channel:\",\r\n\t\t\tthis._patternsStepper,\r\n\t\t),\r\n\t\tlabel({style: \"display: flex; flex-direction: row; align-items: center; height: 2em; justify-content: flex-end;\"},\r\n\t\t\t\"Simultaneous instruments\",\r\n\t\t\tbr(),\r\n\t\t\t\"per channel:\",\r\n\t\t\tthis._layeredInstrumentsBox,\r\n\t\t),\r\n\t\tlabel({style: \"display: flex; flex-direction: row; align-items: center; height: 2em; justify-content: flex-end;\"},\r\n\t\t\t\"Different instruments\",\r\n\t\t\tbr(),\r\n\t\t\t\"per pattern:\",\r\n\t\t\tthis._patternInstrumentsBox,\r\n\t\t),\r\n\t\tlabel({style: \"display: flex; flex-direction: row; align-items: center; height: 2em; justify-content: flex-end;\"},\r\n\t\t\t\"Pitch Divisions per Octave:\",\r\n\t\t\tbr(),\r\n\t\t\tspan({ style: \"font-size: smaller; color: #888888;\" }, \"(Equal Temperament)\"),\r\n\t\t\tbr(),\r\n\t\t\tspan({ style: \"font-size: smaller; color: #aa3000;\" }, \"Warning: This skews pitches and can delete existing notes!\"),\r\n\t\t\tbr(),\r\n\t\t\tthis._edoStepper,\r\n\t    ),\r\n\t\t//microtonal changes\r\n\r\n\t\tlabel({style: \"display: flex; flex-direction: row-reverse; justify-content: space-between;\"},\r\n\t\t\tthis._okayButton,\r\n\t\t),\r\n\t\tthis._cancelButton,\r\n\t);\r\n\t\t\r\n\tconstructor(private _doc: SongDocument) {\r\n\t\tthis._patternsStepper.value = this._doc.song.patternsPerChannel + \"\";\r\n\t\tthis._patternsStepper.min = \"1\";\r\n\t\tthis._patternsStepper.max = Config.barCountMax + \"\";\r\n\t\t\t\r\n\t\t\t\r\n\t\tthis._pitchChannelStepper.value = this._doc.song.pitchChannelCount + \"\";\r\n\t\tthis._pitchChannelStepper.min = Config.pitchChannelCountMin + \"\";\r\n\t\tthis._pitchChannelStepper.max = Config.pitchChannelCountMax + \"\";\r\n\t\t\t\r\n\t\tthis._drumChannelStepper.value = this._doc.song.noiseChannelCount + \"\";\r\n\t\tthis._drumChannelStepper.min = Config.noiseChannelCountMin + \"\";\r\n\t\tthis._drumChannelStepper.max = Config.noiseChannelCountMax + \"\";\r\n\t\t\t\r\n\t\tthis._modChannelStepper.value = this._doc.song.modChannelCount + \"\";\r\n\t\tthis._modChannelStepper.min = Config.modChannelCountMin + \"\";\r\n\t\tthis._modChannelStepper.max = Config.modChannelCountMax + \"\";\r\n\t\t\r\n\t\tthis._edoStepper.value = Config.pitchesPerOctave + \"\";\r\n\t\tthis._edoStepper.min = 2 + \"\";\r\n\t\tthis._edoStepper.max = 60 + \"\";\r\n\t\t//these are current hardcoded - make them a value in the config for consistency\r\n\t\t//microtonal changes\r\n\r\n\t\tthis._layeredInstrumentsBox.checked = this._doc.song.layeredInstruments;\r\n\t\tthis._patternInstrumentsBox.checked = this._doc.song.patternInstruments;\r\n\t\tthis._pitchChannelStepper.select();\r\n\t\t\tsetTimeout(()=>this._pitchChannelStepper.focus());\r\n\r\n\t\tthis._edoStepper.select();\r\n\t\t\tsetTimeout(()=>this._edoStepper.focus());\r\n\t\t//is this neccessary???\r\n\r\n\t\tthis._okayButton.addEventListener(\"click\", this._saveChanges);\r\n\t\tthis._cancelButton.addEventListener(\"click\", this._close);\r\n\t\tthis._patternsStepper.addEventListener(\"keypress\", ChannelSettingsPrompt._validateKey);\r\n\t\tthis._pitchChannelStepper.addEventListener(\"keypress\", ChannelSettingsPrompt._validateKey);\r\n\t\tthis._drumChannelStepper.addEventListener(\"keypress\", ChannelSettingsPrompt._validateKey);\r\n\t\tthis._modChannelStepper.addEventListener(\"keypress\", ChannelSettingsPrompt._validateKey);\r\n\t\tthis._patternsStepper.addEventListener(\"blur\", this._validateNumber);\r\n\t\tthis._pitchChannelStepper.addEventListener(\"blur\", this._validateNumber);\r\n\t\tthis._drumChannelStepper.addEventListener(\"blur\", this._validateNumber);\r\n\t\tthis._modChannelStepper.addEventListener(\"blur\", this._validateNumber);\r\n\t\tthis._edoStepper.addEventListener(\"blur\", this._validateNumber);\r\n\t\t//microtonal changes\r\n\t\tthis.container.addEventListener(\"keydown\", this._whenKeyPressed);\r\n\t}\r\n\t\t\r\n\t\tprivate _close = (): void => { \r\n\t\tthis._doc.undo();\r\n\t}\r\n\t\t\r\n\t\tpublic cleanUp = (): void => { \r\n\t\tthis._okayButton.removeEventListener(\"click\", this._saveChanges);\r\n\t\tthis._cancelButton.removeEventListener(\"click\", this._close);\r\n\t\tthis._patternsStepper.removeEventListener(\"keypress\", ChannelSettingsPrompt._validateKey);\r\n\t\tthis._pitchChannelStepper.removeEventListener(\"keypress\", ChannelSettingsPrompt._validateKey);\r\n\t\tthis._drumChannelStepper.removeEventListener(\"keypress\", ChannelSettingsPrompt._validateKey);\r\n\t\tthis._modChannelStepper.removeEventListener(\"keypress\", ChannelSettingsPrompt._validateKey);\r\n\t\tthis._patternsStepper.removeEventListener(\"blur\", this._validateNumber);\r\n\t\tthis._pitchChannelStepper.removeEventListener(\"blur\", this._validateNumber);\r\n\t\tthis._drumChannelStepper.removeEventListener(\"blur\", this._validateNumber);\r\n\t\tthis._modChannelStepper.removeEventListener(\"blur\", this._validateNumber);\r\n\t\tthis._edoStepper.removeEventListener(\"blur\", this._validateNumber);\r\n\t\t//microtonal changes\r\n\t\tthis.container.removeEventListener(\"keydown\", this._whenKeyPressed);\r\n\t}\r\n\t\t\r\n\tprivate _whenKeyPressed = (event: KeyboardEvent): void => {\r\n\t\t\tif ((<Element> event.target).tagName != \"BUTTON\" && event.keyCode == 13) { // Enter key\r\n\t\t\tthis._saveChanges();\r\n\t\t}\r\n\t}\r\n\t\t\r\n\tprivate static _validateKey(event: KeyboardEvent): boolean {\r\n\t\tconst charCode = (event.which) ? event.which : event.keyCode;\r\n\t\tif (charCode != 46 && charCode > 31 && (charCode < 48 || charCode > 57)) {\r\n\t\t\tevent.preventDefault();\r\n\t\t\treturn true;\r\n\t\t}\r\n\t\treturn false;\r\n\t}\r\n\t\t\r\n\tprivate _validateNumber = (event: Event): void => {\r\n\t\tconst input: HTMLInputElement = <HTMLInputElement>event.target;\r\n\t\tinput.value = String(ChannelSettingsPrompt._validate(input));\r\n\t}\r\n\t\t\r\n\tprivate static _validate(input: HTMLInputElement): number {\r\n\t\treturn Math.floor(Math.max(Number(input.min), Math.min(Number(input.max), Number(input.value))));\r\n\t}\r\n\t\t\r\n\tprivate _saveChanges = (): void => {\r\n\t\tconst group: ChangeGroup = new ChangeGroup();\r\n\t\tgroup.append(new ChangeInstrumentsFlags(this._doc, this._layeredInstrumentsBox.checked, this._patternInstrumentsBox.checked));\r\n\t\tgroup.append(new ChangePatternsPerChannel(this._doc, ChannelSettingsPrompt._validate(this._patternsStepper)));\r\n\t\tgroup.append(new ChangeChannelCount(this._doc, ChannelSettingsPrompt._validate(this._pitchChannelStepper), ChannelSettingsPrompt._validate(this._drumChannelStepper), ChannelSettingsPrompt._validate(this._modChannelStepper)));\r\n\t\tgroup.append(new ChangeEdo(this._doc, ChannelSettingsPrompt._validate(this._edoStepper)));\r\n\t\t//microtonal changes\r\n\t\tthis._doc.prompt = null;\r\n\t\tthis._doc.record(group, true);\r\n\t}\r\n}\r\n","// Copyright (C) 2020 John Nesky, distributed under the MIT license.\r\n\r\nimport { HTML, SVG } from \"imperative-html/dist/esm/elements-strict\";\r\nimport { Prompt } from \"./Prompt\";\r\nimport { SongDocument } from \"./SongDocument\";\r\nimport { ColorConfig } from \"./ColorConfig\";\r\nimport { ChangeCustomWave } from \"./changes\";\r\nimport { SongEditor } from \"./SongEditor\";\r\n\r\n//namespace beepbox {\r\nconst { button, div, h2 } = HTML;\r\n\r\nexport class CustomChipPromptCanvas {\r\n\tprivate readonly _doc: SongDocument;\r\n\tprivate _mouseX: number = 0;\r\n\tprivate _mouseY: number = 0;\r\n\tprivate _lastIndex: number = 0;\r\n\tprivate _lastAmp: number = 0;\r\n\tprivate _mouseDown: boolean = false;\r\n\tpublic chipData: Float32Array = new Float32Array(64);\r\n\tpublic startingChipData: Float32Array = new Float32Array(64);\r\n\tprivate _undoHistoryState: number = 0;\r\n\tprivate _changeQueue: Float32Array[] = [];\r\n\tprivate readonly _editorWidth: number = 768; // 64*12\r\n\tprivate readonly _editorHeight: number = 294; // 49*6\r\n\tprivate readonly _fill: SVGPathElement = SVG.path({ fill: ColorConfig.uiWidgetBackground, \"pointer-events\": \"none\" });\r\n\tprivate readonly _ticks: SVGSVGElement = SVG.svg({ \"pointer-events\": \"none\" });\r\n\tprivate readonly _subticks: SVGSVGElement = SVG.svg({ \"pointer-events\": \"none\" });\r\n\tprivate readonly _blocks: SVGSVGElement = SVG.svg({ \"pointer-events\": \"none\" });\r\n\tprivate readonly _svg: SVGSVGElement = SVG.svg({ style: `background-color: ${ColorConfig.editorBackground}; touch-action: none; overflow: visible;`, width: \"100%\", height: \"100%\", viewBox: \"0 0 \" + this._editorWidth + \" \" + this._editorHeight, preserveAspectRatio: \"none\" },\r\n\t\tthis._fill,\r\n\t\tthis._ticks,\r\n\t\tthis._subticks,\r\n\t\tthis._blocks,\r\n\t);\r\n\r\n\tpublic readonly container: HTMLElement = HTML.div({ class: \"\", style: \"height: 294px; width: 768px; padding-bottom: 1.5em;\" }, this._svg);\r\n\r\n\tconstructor(doc: SongDocument) {\r\n\r\n\t\tthis._doc = doc;\r\n\r\n\t\tfor (let i: number = 0; i <= 4; i += 2) {\r\n\t\t\tthis._ticks.appendChild(SVG.rect({ fill: ColorConfig.tonic, x: (i * this._editorWidth / 4) - 1, y: 0, width: 2, height: this._editorHeight }));\r\n\t\t}\r\n\t\tfor (let i: number = 1; i <= 8; i++) {\r\n\t\t\tthis._subticks.appendChild(SVG.rect({ fill: ColorConfig.fifthNote, x: (i * this._editorWidth / 8) - 1, y: 0, width: 1, height: this._editorHeight }));\r\n\t\t}\r\n\r\n\t\t// Horiz. ticks\r\n\t\tthis._ticks.appendChild(SVG.rect({ fill: ColorConfig.tonic, x: 0, y: (this._editorHeight / 2) - 1, width: this._editorWidth, height: 2 }));\r\n\t\tfor (let i: number = 0; i < 3; i++) {\r\n\t\t\tthis._subticks.appendChild(SVG.rect({ fill: ColorConfig.fifthNote, x: 0, y: i * 8 * (this._editorHeight / 49), width: this._editorWidth, height: 1 }));\r\n\t\t\tthis._subticks.appendChild(SVG.rect({ fill: ColorConfig.fifthNote, x: 0, y: this._editorHeight - 1 - i * 8 * (this._editorHeight / 49), width: this._editorWidth, height: 1 }));\r\n\t\t}\r\n\r\n\r\n\t\tlet col: string = ColorConfig.getChannelColor(this._doc.song, this._doc.channel).primaryNote;\r\n\r\n\t\tfor (let i: number = 0; i <= 64; i++) {\r\n\t\t\tlet val: number = this._doc.song.channels[this._doc.channel].instruments[this._doc.getCurrentInstrument()].customChipWave[i];\r\n\t\t\tthis.chipData[i] = val;\r\n\t\t\tthis.startingChipData[i] = val;\r\n\t\t\tthis._blocks.appendChild(SVG.rect({ fill: col, x: (i * this._editorWidth / 64), y: (val + 24) * (this._editorHeight / 49), width: this._editorWidth / 64, height: this._editorHeight / 49 }));\r\n\t\t}\r\n\r\n\t\t// Record initial state of the chip data queue\r\n\t\tthis._storeChange();\r\n\r\n\t\tthis.container.addEventListener(\"mousedown\", this._whenMousePressed);\r\n\t\tdocument.addEventListener(\"mousemove\", this._whenMouseMoved);\r\n\t\tdocument.addEventListener(\"mouseup\", this._whenCursorReleased);\r\n\r\n\t\tthis.container.addEventListener(\"touchstart\", this._whenTouchPressed);\r\n\t\tthis.container.addEventListener(\"touchmove\", this._whenTouchMoved);\r\n\t\tthis.container.addEventListener(\"touchend\", this._whenCursorReleased);\r\n\t\tthis.container.addEventListener(\"touchcancel\", this._whenCursorReleased);\r\n\r\n\t\tthis._svg.addEventListener(\"keydown\", this._whenKeyPressed);\r\n\t\tthis.container.addEventListener(\"keydown\", this._whenKeyPressed);\r\n\r\n\t}\r\n\r\n\tprivate _storeChange = (): void => {\r\n\t\t// Check if change is unique compared to the current history state\r\n\t\tvar sameCheck = true;\r\n\t\tif (this._changeQueue.length > 0) {\r\n\t\t\tfor (var i = 0; i < 64; i++) {\r\n\t\t\t\tif (this._changeQueue[this._undoHistoryState][i] != this.chipData[i]) {\r\n\t\t\t\t\tsameCheck = false; i = 64;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tif (sameCheck == false || this._changeQueue.length == 0) {\r\n\r\n\t\t\t// Create new branch in history, removing all after this in time\r\n\t\t\tthis._changeQueue.splice(0, this._undoHistoryState);\r\n\r\n\t\t\tthis._undoHistoryState = 0;\r\n\r\n\t\t\tthis._changeQueue.unshift(this.chipData.slice());\r\n\r\n\t\t\t// 32 undo max\r\n\t\t\tif (this._changeQueue.length > 32) {\r\n\t\t\t\tthis._changeQueue.pop();\r\n\t\t\t}\r\n\r\n\t\t}\r\n\r\n\t}\r\n\r\n\tpublic undo = (): void => {\r\n\t\t// Go backward, if there is a change to go back to\r\n\t\tif (this._undoHistoryState < this._changeQueue.length - 1) {\r\n\t\t\tthis._undoHistoryState++;\r\n\t\t\tthis.chipData = this._changeQueue[this._undoHistoryState].slice();\r\n\t\t\tnew ChangeCustomWave(this._doc, this.chipData);\r\n\t\t\tthis.render();\r\n\t\t}\r\n\r\n\t}\r\n\r\n\tpublic redo = (): void => {\r\n\t\t// Go forward, if there is a change to go to\r\n\t\tif (this._undoHistoryState > 0) {\r\n\t\t\tthis._undoHistoryState--;\r\n\t\t\tthis.chipData = this._changeQueue[this._undoHistoryState].slice();\r\n\t\t\tnew ChangeCustomWave(this._doc, this.chipData);\r\n\t\t\tthis.render();\r\n\t\t}\r\n\r\n\t}\r\n\r\n\tprivate _whenKeyPressed = (event: KeyboardEvent): void => {\r\n\t\tif (event.keyCode == 90) { // z\r\n\t\t\tthis.undo();\r\n\t\t\tevent.stopPropagation();\r\n\t\t}\r\n\t\telse if (event.keyCode == 89) { // y\r\n\t\t\tthis.redo();\r\n\t\t\tevent.stopPropagation();\r\n\t\t}\r\n\t}\r\n\r\n\tprivate _whenMousePressed = (event: MouseEvent): void => {\r\n\t\tevent.preventDefault();\r\n\t\tthis._mouseDown = true;\r\n\t\tconst boundingRect: ClientRect = this._svg.getBoundingClientRect();\r\n\t\tthis._mouseX = ((event.clientX || event.pageX) - boundingRect.left) * this._editorWidth / (boundingRect.right - boundingRect.left);\r\n\t\tthis._mouseY = ((event.clientY || event.pageY) - boundingRect.top) * this._editorHeight / (boundingRect.bottom - boundingRect.top);\r\n\t\tif (isNaN(this._mouseX)) this._mouseX = 0;\r\n\t\tif (isNaN(this._mouseY)) this._mouseY = 0;\r\n\t\tthis._lastIndex = -1;\r\n\r\n\t\tthis._whenCursorMoved();\r\n\t}\r\n\r\n\tprivate _whenTouchPressed = (event: TouchEvent): void => {\r\n\t\tevent.preventDefault();\r\n\t\tthis._mouseDown = true;\r\n\t\tconst boundingRect: ClientRect = this._svg.getBoundingClientRect();\r\n\t\tthis._mouseX = (event.touches[0].clientX - boundingRect.left) * this._editorWidth / (boundingRect.right - boundingRect.left);\r\n\t\tthis._mouseY = (event.touches[0].clientY - boundingRect.top) * this._editorHeight / (boundingRect.bottom - boundingRect.top);\r\n\t\tif (isNaN(this._mouseX)) this._mouseX = 0;\r\n\t\tif (isNaN(this._mouseY)) this._mouseY = 0;\r\n\t\tthis._lastIndex = -1;\r\n\r\n\t\tthis._whenCursorMoved();\r\n\t}\r\n\r\n\tprivate _whenMouseMoved = (event: MouseEvent): void => {\r\n\t\tif (this.container.offsetParent == null) return;\r\n\t\tconst boundingRect: ClientRect = this._svg.getBoundingClientRect();\r\n\t\tthis._mouseX = ((event.clientX || event.pageX) - boundingRect.left) * this._editorWidth / (boundingRect.right - boundingRect.left);\r\n\t\tthis._mouseY = ((event.clientY || event.pageY) - boundingRect.top) * this._editorHeight / (boundingRect.bottom - boundingRect.top);\r\n\t\tif (isNaN(this._mouseX)) this._mouseX = 0;\r\n\t\tif (isNaN(this._mouseY)) this._mouseY = 0;\r\n\t\tthis._whenCursorMoved();\r\n\t}\r\n\r\n\tprivate _whenTouchMoved = (event: TouchEvent): void => {\r\n\t\tif (this.container.offsetParent == null) return;\r\n\t\tif (!this._mouseDown) return;\r\n\t\tevent.preventDefault();\r\n\t\tconst boundingRect: ClientRect = this._svg.getBoundingClientRect();\r\n\t\tthis._mouseX = (event.touches[0].clientX - boundingRect.left) * this._editorWidth / (boundingRect.right - boundingRect.left);\r\n\t\tthis._mouseY = (event.touches[0].clientY - boundingRect.top) * this._editorHeight / (boundingRect.bottom - boundingRect.top);\r\n\t\tif (isNaN(this._mouseX)) this._mouseX = 0;\r\n\t\tif (isNaN(this._mouseY)) this._mouseY = 0;\r\n\t\tthis._whenCursorMoved();\r\n\t}\r\n\r\n\tprivate _whenCursorMoved(): void {\r\n\t\tif (this._mouseDown) {\r\n\t\t\tconst index: number = Math.min(63, Math.max(0, Math.floor(this._mouseX * 64 / this._editorWidth)));\r\n\t\t\tconst amp: number = Math.min(48, Math.max(0, Math.floor(this._mouseY * 49 / this._editorHeight)));\r\n\r\n\t\t\t// Paint between mouse drag indices unless a click just happened.\r\n\t\t\tif (this._lastIndex != -1 && this._lastIndex != index) {\r\n\t\t\t\tvar lowest = index;\r\n\t\t\t\tvar highest = this._lastIndex;\r\n\t\t\t\tvar startingAmp = amp;\r\n\t\t\t\tvar endingAmp = this._lastAmp;\r\n\t\t\t\tif (this._lastIndex < index) {\r\n\t\t\t\t\tlowest = this._lastIndex;\r\n\t\t\t\t\thighest = index;\r\n\t\t\t\t\tstartingAmp = this._lastAmp;\r\n\t\t\t\t\tendingAmp = amp;\r\n\t\t\t\t}\r\n\t\t\t\tfor (var i = lowest; i <= highest; i++) {\r\n\t\t\t\t\tconst medAmp: number = Math.round(startingAmp + (endingAmp - startingAmp) * ((i - lowest) / (highest - lowest)));\r\n\t\t\t\t\tthis.chipData[i] = medAmp - 24;\r\n\t\t\t\t\tthis._blocks.children[i].setAttribute(\"y\", \"\" + (medAmp * (this._editorHeight / 49)));\r\n\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\telse {\r\n\t\t\t\tthis.chipData[index] = amp - 24;\r\n\t\t\t\tthis._blocks.children[index].setAttribute(\"y\", \"\" + (amp * (this._editorHeight / 49)));\r\n\r\n\t\t\t}\r\n\r\n\r\n\t\t\t// Make a change to the data but don't record it, since this prompt uses its own undo/redo queue\r\n\t\t\tnew ChangeCustomWave(this._doc, this.chipData);\r\n\r\n\t\t\tthis._lastIndex = index;\r\n\t\t\tthis._lastAmp = amp;\r\n\r\n\t\t}\r\n\t}\r\n\r\n\tprivate _whenCursorReleased = (event: Event): void => {\r\n\t\t// Add current data into queue, if it is unique from last data\r\n\t\tthis._storeChange();\r\n\t\tthis._mouseDown = false;\r\n\t}\r\n\r\n\tpublic render(): void {\r\n\t\tfor (var i = 0; i < 64; i++) {\r\n\t\t\tthis._blocks.children[i].setAttribute(\"y\", \"\" + ((this.chipData[i] + 24) * (this._editorHeight / 49)));\r\n\t\t}\r\n\t}\r\n}\r\n\r\nexport class CustomChipPrompt implements Prompt {\r\n\r\n\tpublic customChipCanvas: CustomChipPromptCanvas = new CustomChipPromptCanvas(this._doc);\r\n\r\n\tpublic readonly _playButton: HTMLButtonElement = button({ style: \"width: 55%;\", type: \"button\" });\r\n\r\n\tprivate readonly _cancelButton: HTMLButtonElement = button({ class: \"cancelButton\" });\r\n\tprivate readonly _okayButton: HTMLButtonElement = button({ class: \"okayButton\", style: \"width:45%;\" }, \"Okay\");\r\n\r\n\tpublic readonly container: HTMLDivElement = div({ class: \"prompt noSelection\", style: \"width: 600px;\" },\r\n\t\th2(\"Edit Custom Chip Instrument\"),\r\n\t\tdiv({ style: \"display: flex; width: 55%; align-self: center; flex-direction: row; align-items: center; justify-content: center;\" },\r\n\t\t\tthis._playButton,\r\n\t\t),\r\n\t\tdiv({ style: \"display: flex; flex-direction: row; align-items: center; justify-content: center;\" },\r\n\t\t\tthis.customChipCanvas.container,\r\n\t\t),\r\n\t\tdiv({ style: \"display: flex; flex-direction: row-reverse; justify-content: space-between;\" },\r\n\t\t\tthis._okayButton,\r\n\t\t),\r\n\t\tthis._cancelButton,\r\n\t);\r\n\r\n\tconstructor(private _doc: SongDocument, private _songEditor: SongEditor) {\r\n\r\n\t\tthis._okayButton.addEventListener(\"click\", this._saveChanges);\r\n\t\tthis._cancelButton.addEventListener(\"click\", this._close);\r\n\t\tthis.container.addEventListener(\"keydown\", this.whenKeyPressed);\r\n\t\tthis._playButton.addEventListener(\"click\", this._togglePlay);\r\n\t\tthis.updatePlayButton();\r\n\r\n\t\tsetTimeout(() => this._playButton.focus());\r\n\r\n\r\n\t\tthis.customChipCanvas.render();\r\n\t}\r\n\r\n\tprivate _togglePlay = (): void => {\r\n\t\tthis._songEditor.togglePlay();\r\n\t\tthis.updatePlayButton();\r\n\t}\r\n\r\n\tpublic updatePlayButton(): void {\r\n\t\tif (this._doc.synth.playing) {\r\n\t\t\tthis._playButton.classList.remove(\"playButton\");\r\n\t\t\tthis._playButton.classList.add(\"pauseButton\");\r\n\t\t\tthis._playButton.title = \"Pause (Space)\";\r\n\t\t\tthis._playButton.innerText = \"Pause\";\r\n\t\t} else {\r\n\t\t\tthis._playButton.classList.remove(\"pauseButton\");\r\n\t\t\tthis._playButton.classList.add(\"playButton\");\r\n\t\t\tthis._playButton.title = \"Play (Space)\";\r\n\t\t\tthis._playButton.innerText = \"Play\";\r\n\t\t}\r\n\t}\r\n\r\n\tprivate _close = (): void => {\r\n\t\tthis._doc.prompt = null;\r\n\t\tthis._doc.undo();\r\n\t}\r\n\r\n\tpublic cleanUp = (): void => {\r\n\t\tthis._okayButton.removeEventListener(\"click\", this._saveChanges);\r\n\t\tthis._cancelButton.removeEventListener(\"click\", this._close);\r\n\t\tthis.container.removeEventListener(\"keydown\", this.whenKeyPressed);\r\n\r\n\t\tthis._playButton.removeEventListener(\"click\", this._togglePlay);\r\n\t}\r\n\r\n\tpublic whenKeyPressed = (event: KeyboardEvent): void => {\r\n\t\tif ((<Element>event.target).tagName != \"BUTTON\" && event.keyCode == 13) { // Enter key\r\n\t\t\tthis._saveChanges();\r\n\t\t}\r\n\t\telse if (event.keyCode == 32) {\r\n\t\t\tthis._togglePlay();\r\n\t\t\tevent.preventDefault();\r\n\t\t}\r\n\t\telse if (event.keyCode == 90) { // z\r\n\t\t\tthis.customChipCanvas.undo();\r\n\t\t\tevent.stopPropagation();\r\n\t\t}\r\n\t\telse if (event.keyCode == 89) { // y\r\n\t\t\tthis.customChipCanvas.redo();\r\n\t\t\tevent.stopPropagation();\r\n\t\t}\r\n\t\telse if (event.keyCode == 219) { // [\r\n\t\t\tthis._doc.synth.goToPrevBar();\r\n\t\t}\r\n\t\telse if (event.keyCode == 221) { // ]\r\n\t\t\tthis._doc.synth.goToNextBar();\r\n\t\t}\r\n\t}\r\n\r\n\tprivate _saveChanges = (): void => {\r\n\t\tthis._doc.prompt = null;\r\n\t\t// Restore custom chip to starting values\r\n\t\tnew ChangeCustomWave(this._doc, this.customChipCanvas.startingChipData);\r\n\t\tthis._doc.record(new ChangeCustomWave(this._doc, this.customChipCanvas.chipData), true);\r\n\t}\r\n}\r\n//}\r\n","// Copyright (c) 2012-2022 John Nesky and contributing authors, distributed under the MIT license, see accompanying the LICENSE.md file.\r\n\r\nimport { FilterCoefficients, FrequencyResponse } from \"../synth/filtering\";\r\nimport { FilterType, Config } from \"../synth/SynthConfig\";\r\nimport { FilterSettings, FilterControlPoint, Instrument } from \"../synth/synth\";\r\nimport { SongDocument } from \"./SongDocument\";\r\nimport { HTML, SVG } from \"imperative-html/dist/esm/elements-strict\";\r\nimport { ColorConfig } from \"./ColorConfig\";\r\nimport { ChangeSequence, UndoableChange } from \"./Change\";\r\nimport { ChangeFilterAddPoint, ChangeFilterMovePoint, ChangeFilterSettings } from \"./changes\";\r\nimport { prettyNumber } from \"./EditorConfig\";\r\n\r\nexport class FilterEditor {\r\n    private _editorWidth: number = 120;\r\n    private _editorHeight: number = 26;\r\n    private readonly _responsePath: SVGPathElement = SVG.path({ fill: ColorConfig.uiWidgetBackground, \"pointer-events\": \"none\" });\r\n    //private readonly _octaves: SVGSVGElement = SVG.svg({\"pointer-events\": \"none\", overflow: \"visible\"});\r\n    private _indicators: SVGTextElement[] = [];\r\n    private _subFilters: FilterSettings[] = [];\r\n    private readonly _controlPointPath: SVGPathElement = SVG.path({ fill: \"currentColor\", \"pointer-events\": \"none\" });\r\n    private readonly _dottedLinePath: SVGPathElement = SVG.path({ fill: \"none\", stroke: \"currentColor\", \"stroke-width\": 1, \"stroke-dasharray\": \"3, 2\", \"pointer-events\": \"none\" });\r\n    private readonly _highlight: SVGCircleElement = SVG.circle({ fill: \"white\", stroke: \"none\", \"pointer-events\": \"none\", r: 4 });\r\n    private readonly _svg: SVGSVGElement = SVG.svg({ style: `background-color: ${ColorConfig.editorBackground}; touch-action: none;`, width: \"100%\", height: \"100%\", viewBox: \"0 0 \" + this._editorWidth + \" \" + this._editorHeight, preserveAspectRatio: \"none\" },\r\n        this._responsePath,\r\n        //this._octaves,\r\n        this._dottedLinePath,\r\n        this._highlight,\r\n        this._controlPointPath,\r\n    );\r\n    private selfUndoSettings: String[] = [];\r\n    private selfUndoHistoryPos: number = 0;\r\n    private readonly _label: HTMLDivElement = HTML.div({ style: \"position: absolute; bottom: 0; left: 2px; font-size: 8px; line-height: 1; pointer-events: none;\" });\r\n\r\n    public coordText: HTMLElement | null = null;\r\n    public readonly container: HTMLElement = HTML.div({ class: \"filterEditor\", style: \"height: 100%; position: relative;\" },\r\n        this._svg,\r\n        this._label,\r\n    );\r\n    private _pointRadius: number = 2;\r\n\r\n    private _useNoteFilter: boolean = false;\r\n    private _larger: boolean = false;\r\n    private _touchMode: boolean = false;\r\n    private _mouseX: number = 0;\r\n    private _mouseY: number = 0;\r\n    private _mouseOver: boolean = false;\r\n    private _mouseDown: boolean = false;\r\n    private _mouseDragging: boolean = false;\r\n    private _addingPoint: boolean = false;\r\n    private _deletingPoint: boolean = false;\r\n    private _addedType: FilterType = FilterType.peak;\r\n    private _selectedIndex: number = 0;\r\n    private _freqStart: number = 0;\r\n    private _gainStart: number = 0;\r\n    private _dragChange: UndoableChange | null = null;\r\n    private _subfilterIndex: number = 0;\r\n\r\n    private _filterSettings: FilterSettings;\r\n    private _renderedSelectedIndex: number = -1;\r\n    private _renderedPointCount: number = -1;\r\n    private _renderedPointTypes: number = -1;\r\n    private _renderedPointFreqs: number = -1;\r\n    private _renderedPointGains: number = -1;\r\n    //private _renderedKey: number = -1;\r\n\r\n    constructor(private _doc: SongDocument, useNoteFilter: boolean = false, larger: boolean = false) {\r\n        this._useNoteFilter = useNoteFilter;\r\n        this._larger = larger;\r\n\r\n        if (this._larger) {\r\n            this.container.addEventListener(\"keydown\", this._whenKeyPressed)\r\n            this._editorWidth = 1200;\r\n            this._editorHeight = 260;\r\n            this._pointRadius = 14;\r\n            // A bit of vertical spacing on viewBox so that numbers will show.\r\n            this._svg.setAttribute(\"viewBox\", \"0 -20 \" + this._editorWidth + \" \" + (this._editorHeight + 30));\r\n            this._label.style.setProperty(\"font-size\", \"16px\");\r\n            this._label.style.setProperty(\"position\", \"\");\r\n            this._label.style.setProperty(\"bottom\", \"-16px\");\r\n            this._label.style.setProperty(\"min-height\", \"1em\");\r\n            this._dottedLinePath.style.setProperty(\"stroke-width\", \"3\");\r\n            this._dottedLinePath.style.setProperty(\"stroke-dasharray\", \"6, 4\");\r\n            this._dottedLinePath.setAttribute(\"color\", ColorConfig.getChannelColor(this._doc.song, this._doc.channel).primaryNote);\r\n            this.container.style.setProperty(\"width\", \"85%\");\r\n            this._highlight.setAttribute(\"r\", \"20\");\r\n            this._controlPointPath.setAttribute(\"fill\", ColorConfig.getChannelColor(this._doc.song, this._doc.channel).primaryNote);\r\n\r\n            for (let i: number = 0; i < Config.filterMaxPoints; i++) {\r\n                this._indicators[i] = SVG.text();\r\n                this._indicators[i].setAttribute(\"fill\", ColorConfig.invertedText);\r\n                this._indicators[i].setAttribute(\"text-anchor\", \"start\");\r\n                this._indicators[i].setAttribute(\"dominant-baseline\", \"central\");\r\n                this._indicators[i].setAttribute(\"pointer-events\", \"none\");\r\n                this._indicators[i].setAttribute(\"font-weight\", \"bolder\");\r\n                this._indicators[i].textContent = \"\" + (i + 1);\r\n                this._indicators[i].style.setProperty(\"display\", \"none\");\r\n                this._indicators[i].style.setProperty(\"font-size\", \"24px\");\r\n                this._svg.appendChild(this._indicators[i]);\r\n            }\r\n\r\n            // Push initial state\r\n            const instrument: Instrument = this._doc.song.channels[this._doc.channel].instruments[this._doc.getCurrentInstrument()];\r\n            const filterSettings: FilterSettings = this._useNoteFilter ? instrument.noteFilter : instrument.eqFilter;\r\n            this.selfUndoSettings.push(JSON.stringify(filterSettings.toJsonObject()));\r\n\r\n            this._subFilters[0] = filterSettings;\r\n            for (let i: number = 1; i < Config.filterMorphCount; i++) {\r\n                const subFilter: FilterSettings | null = this._useNoteFilter ? instrument.noteSubFilters[i] : instrument.eqSubFilters[i];\r\n                if (subFilter != null) {\r\n                    let parsedFilter: FilterSettings = new FilterSettings();\r\n                    parsedFilter.fromJsonObject(subFilter.toJsonObject());\r\n                    this._subFilters[i] = parsedFilter;\r\n                }\r\n            }\r\n        }\r\n\r\n        this.container.addEventListener(\"mousedown\", this._whenMousePressed);\r\n        this.container.addEventListener(\"mouseover\", this._whenMouseOver);\r\n        this.container.addEventListener(\"mouseout\", this._whenMouseOut);\r\n        document.addEventListener(\"mousemove\", this._whenMouseMoved);\r\n        document.addEventListener(\"mouseup\", this._whenCursorReleased);\r\n\r\n        this.container.addEventListener(\"touchstart\", this._whenTouchPressed);\r\n        this.container.addEventListener(\"touchmove\", this._whenTouchMoved);\r\n        this.container.addEventListener(\"touchend\", this._whenCursorReleased);\r\n        this.container.addEventListener(\"touchcancel\", this._whenCursorReleased);\r\n    }\r\n\r\n    private _whenKeyPressed = (event: KeyboardEvent): void => {\r\n        if (event.keyCode == 90) { // z\r\n            this.undo();\r\n            event.stopPropagation();\r\n        }\r\n        if (event.keyCode == 89) { // y\r\n            this.redo();\r\n            event.stopPropagation();\r\n        }\r\n    }\r\n\r\n    private _xToFreq(x: number): number {\r\n        return Config.filterFreqRange * x / this._editorWidth - 0.5;\r\n    }\r\n    private _freqToX(freq: number): number {\r\n        return this._editorWidth * (freq + 0.5) / Config.filterFreqRange;\r\n    }\r\n    private _yToGain(y: number): number {\r\n        return (Config.filterGainRange - 1) * (1 - (y - .5) / (this._editorHeight - 1));\r\n    }\r\n    private _gainToY(gain: number): number {\r\n        return (this._editorHeight - 1) * (1 - gain / (Config.filterGainRange - 1)) + .5;\r\n    }\r\n\r\n    private _whenMouseOver = (event: MouseEvent): void => {\r\n        this._mouseOver = true;\r\n\r\n        if (!this._larger)\r\n            this._controlPointPath.style.setProperty(\"fill\", \"currentColor\");\r\n    }\r\n\r\n    private _whenMouseOut = (event: MouseEvent): void => {\r\n        this._mouseOver = false;\r\n        this._updatePath();\r\n\r\n        if (this.coordText != null) {\r\n            this.coordText.innerText = \"\";\r\n        }\r\n    }\r\n\r\n    private _whenMousePressed = (event: MouseEvent): void => {\r\n        event.preventDefault();\r\n        this._touchMode = false;\r\n        const boundingRect: ClientRect = this._svg.getBoundingClientRect();\r\n        this._mouseX = ((event.clientX || event.pageX) - boundingRect.left) * this._editorWidth / (boundingRect.right - boundingRect.left);\r\n        this._mouseY = ((event.clientY || event.pageY) - boundingRect.top) * this._editorHeight / (boundingRect.bottom - boundingRect.top);\r\n        if (isNaN(this._mouseX)) this._mouseX = 0;\r\n        if (isNaN(this._mouseY)) this._mouseY = 0;\r\n        this._whenCursorPressed();\r\n    }\r\n\r\n    private _whenTouchPressed = (event: TouchEvent): void => {\r\n        event.preventDefault();\r\n        this._touchMode = true;\r\n        const boundingRect: ClientRect = this._svg.getBoundingClientRect();\r\n        this._mouseX = (event.touches[0].clientX - boundingRect.left) * this._editorWidth / (boundingRect.right - boundingRect.left);\r\n        this._mouseY = (event.touches[0].clientY - boundingRect.top) * this._editorHeight / (boundingRect.bottom - boundingRect.top);\r\n        if (isNaN(this._mouseX)) this._mouseX = 0;\r\n        if (isNaN(this._mouseY)) this._mouseY = 0;\r\n        this._whenCursorPressed();\r\n    }\r\n\r\n    private _whenMouseMoved = (event: MouseEvent): void => {\r\n        if (this.container.offsetParent == null) return;\r\n        const boundingRect: ClientRect = this._svg.getBoundingClientRect();\r\n        this._mouseX = ((event.clientX || event.pageX) - boundingRect.left) * this._editorWidth / (boundingRect.right - boundingRect.left);\r\n        this._mouseY = ((event.clientY || event.pageY) - boundingRect.top) * this._editorHeight / (boundingRect.bottom - boundingRect.top);\r\n        if (isNaN(this._mouseX)) this._mouseX = 0;\r\n        if (isNaN(this._mouseY)) this._mouseY = 0;\r\n        if (!this._mouseDown) this._updateCursor();\r\n\r\n        this._whenCursorMoved();\r\n    }\r\n\r\n    private _whenTouchMoved = (event: TouchEvent): void => {\r\n        if (this.container.offsetParent == null) return;\r\n        if (this._mouseDown) event.preventDefault();\r\n        const boundingRect: ClientRect = this._svg.getBoundingClientRect();\r\n        this._mouseX = (event.touches[0].clientX - boundingRect.left) * this._editorWidth / (boundingRect.right - boundingRect.left);\r\n        this._mouseY = (event.touches[0].clientY - boundingRect.top) * this._editorHeight / (boundingRect.bottom - boundingRect.top);\r\n        if (isNaN(this._mouseX)) this._mouseX = 0;\r\n        if (isNaN(this._mouseY)) this._mouseY = 0;\r\n        if (!this._mouseDown) this._updateCursor();\r\n        this._whenCursorMoved();\r\n    }\r\n\r\n    private _whenCursorPressed(): void {\r\n        this._mouseDown = true;\r\n        const sequence: ChangeSequence = new ChangeSequence();\r\n        this._dragChange = sequence;\r\n        this._doc.setProspectiveChange(this._dragChange);\r\n        this._updateCursor();\r\n        this._whenCursorMoved();\r\n    }\r\n\r\n    private _updateCursor(): void {\r\n        this._freqStart = this._xToFreq(this._mouseX);\r\n        this._gainStart = this._yToGain(this._mouseY);\r\n\r\n        this._addingPoint = true;\r\n        this._selectedIndex = -1;\r\n        let nearestDistance: number = Number.POSITIVE_INFINITY;\r\n        for (let i: number = 0; i < this._filterSettings.controlPointCount; i++) {\r\n            const point: FilterControlPoint = this._filterSettings.controlPoints[i];\r\n            const distance: number = Math.sqrt(Math.pow(this._freqToX(point.freq) - this._mouseX, 2) + Math.pow(this._gainToY(point.gain) - this._mouseY, 2));\r\n            if ((distance <= 13 * (1 + +this._larger) || this._filterSettings.controlPointCount >= Config.filterMaxPoints) && distance < nearestDistance) {\r\n                nearestDistance = distance;\r\n                this._selectedIndex = i;\r\n                this._addingPoint = false;\r\n            }\r\n        }\r\n        if (this._addingPoint) {\r\n            const ratio: number = this._mouseX / this._editorWidth;\r\n            if (ratio < 0.2) {\r\n                this._addedType = FilterType.highPass;\r\n            } else if (ratio < 0.8) {\r\n                this._addedType = FilterType.peak;\r\n            } else {\r\n                this._addedType = FilterType.lowPass;\r\n            }\r\n        }\r\n    }\r\n\r\n    private _whenCursorMoved(): void {\r\n        if (this._dragChange != null && this._doc.lastChangeWas(this._dragChange)) {\r\n            this._dragChange.undo();\r\n        } else {\r\n            this._mouseDown = false;\r\n        }\r\n        this._dragChange = null;\r\n        this._deletingPoint = false;\r\n\r\n        if (this.coordText != null && !this._mouseDown) {\r\n            let gain: number = Math.round(this._yToGain(this._mouseY));\r\n            let freq: number = Math.round(this._xToFreq(this._mouseX));\r\n            if (freq >= 0 && freq < Config.filterFreqRange && gain >= 0 && gain < Config.filterGainRange)\r\n                this.coordText.innerText = \"(\" + freq + \", \" + gain + \")\";\r\n            else\r\n                this.coordText.innerText = \"\";\r\n        }\r\n\r\n        if (this._mouseDown) {\r\n            const sequence: ChangeSequence = new ChangeSequence();\r\n            this._dragChange = sequence;\r\n            this._doc.setProspectiveChange(this._dragChange);\r\n\r\n            if (this._addingPoint) {\r\n                const gain: number = Math.max(0, Math.min(Config.filterGainRange - 1, Math.round(this._yToGain(this._mouseY))));\r\n                const freq: number = this._findNearestFreqSlot(this._filterSettings, this._xToFreq(this._mouseX), -1);\r\n                if (freq >= 0 && freq < Config.filterFreqRange) {\r\n                    const point: FilterControlPoint = new FilterControlPoint();\r\n                    point.type = this._addedType;\r\n                    point.freq = freq;\r\n                    point.gain = gain;\r\n                    sequence.append(new ChangeFilterAddPoint(this._doc, this._filterSettings, point, this._filterSettings.controlPointCount, this._useNoteFilter));\r\n\r\n                    if (this.coordText != null) {\r\n                        this.coordText.innerText = \"(\" + freq + \", \" + gain + \")\";\r\n                    }\r\n                } else {\r\n                    this._deletingPoint = true;\r\n                }\r\n            } else if (this._selectedIndex >= this._filterSettings.controlPointCount || this._selectedIndex == -1) {\r\n                this._dragChange = null;\r\n                this._mouseDown = false;\r\n            } else {\r\n                const freqDelta: number = this._xToFreq(this._mouseX) - this._freqStart;\r\n                const gainDelta: number = this._yToGain(this._mouseY) - this._gainStart;\r\n                const point: FilterControlPoint = this._filterSettings.controlPoints[this._selectedIndex];\r\n                const gain: number = Math.max(0, Math.min(Config.filterGainRange - 1, Math.round(point.gain + gainDelta)));\r\n                const freq: number = this._findNearestFreqSlot(this._filterSettings, point.freq + freqDelta, this._selectedIndex);\r\n\r\n                if (Math.round(freqDelta) != 0.0 || Math.round(gainDelta) != 0.0 || freq != point.freq || gain != point.gain) {\r\n                    this._mouseDragging = true;\r\n                }\r\n\r\n                if (freq >= 0 && freq < Config.filterFreqRange) {\r\n                    sequence.append(new ChangeFilterMovePoint(this._doc, point, point.freq, freq, point.gain, gain));\r\n                    if (this.coordText != null) {\r\n                        this.coordText.innerText = \"(\" + freq + \", \" + gain + \")\";\r\n                    }\r\n                } else {\r\n                    sequence.append(new ChangeFilterAddPoint(this._doc, this._filterSettings, point, this._selectedIndex, this._useNoteFilter, true));\r\n                    this._deletingPoint = true;\r\n                }\r\n            }\r\n        }\r\n        if (this._mouseDown || this._mouseOver) {\r\n            this._updatePath();\r\n        }\r\n    }\r\n\r\n    private _whenCursorReleased = (event: Event): void => {\r\n        if (this.container.offsetParent == null) return;\r\n        if (this._mouseDown && this._doc.lastChangeWas(this._dragChange) && this._dragChange != null) {\r\n            if (!this._addingPoint && !this._mouseDragging && !this._touchMode) {\r\n                if (this._selectedIndex < this._filterSettings.controlPointCount && this._selectedIndex != -1) {\r\n                    const point: FilterControlPoint = this._filterSettings.controlPoints[this._selectedIndex];\r\n                    let change: ChangeFilterAddPoint = new ChangeFilterAddPoint(this._doc, this._filterSettings, point, this._selectedIndex, this._useNoteFilter, true);\r\n                    if (!this._larger) {\r\n                        this._doc.record(change);\r\n                    }\r\n                }\r\n            } else if (!this._larger) {\r\n                this._doc.record(this._dragChange);\r\n            }\r\n            this._updatePath();\r\n            if (this._larger) {\r\n                this.selfUndoSettings.length = this.selfUndoHistoryPos+1;\r\n                this.selfUndoSettings.push(JSON.stringify(this._filterSettings.toJsonObject()));\r\n                this.selfUndoHistoryPos++;\r\n            }\r\n        }\r\n        this._dragChange = null;\r\n        this._mouseDragging = false;\r\n        this._deletingPoint = false;\r\n        this._mouseDown = false;\r\n        this._updateCursor();\r\n    }\r\n\r\n    private _findNearestFreqSlot(filterSettings: FilterSettings, targetFreq: number, ignoreIndex: number): number {\r\n        const roundedFreq: number = Math.round(targetFreq);\r\n        let lowerFreq: number = roundedFreq;\r\n        let upperFreq: number = roundedFreq;\r\n        let tryingLower: boolean = (roundedFreq <= targetFreq);\r\n        while (true) {\r\n            let foundConflict: boolean = false;\r\n            const currentFreq: number = tryingLower ? lowerFreq : upperFreq;\r\n            for (let i: number = 0; i < filterSettings.controlPointCount; i++) {\r\n                if (i == ignoreIndex) continue;\r\n                if (filterSettings.controlPoints[i].freq == currentFreq) {\r\n                    foundConflict = true;\r\n                    break;\r\n                }\r\n            }\r\n            if (!foundConflict) return currentFreq;\r\n            tryingLower = !tryingLower;\r\n            if (tryingLower) lowerFreq--;\r\n            if (!tryingLower) upperFreq++;\r\n        }\r\n    }\r\n\r\n    private static _circlePath(cx: number, cy: number, radius: number, reverse: boolean = false): string {\r\n        return `M ${cx - radius} ${cy} ` +\r\n            `a ${radius} ${radius} 0 1 ${reverse ? 1 : 0} ${radius * 2} 0 ` +\r\n            `a ${radius} ${radius} 0 1 ${reverse ? 1 : 0} ${-radius * 2} 0 `;\r\n    }\r\n\r\n    private _updatePath(): void {\r\n        this._highlight.style.display = \"none\";\r\n        this._label.textContent = \"\";\r\n\r\n        let controlPointPath: string = \"\";\r\n        let dottedLinePath: string = \"\";\r\n        for (let i: number = 0; i < this._filterSettings.controlPointCount; i++) {\r\n            const point: FilterControlPoint = this._filterSettings.controlPoints[i];\r\n            const pointX: number = this._freqToX(point.freq);\r\n            const pointY: number = this._gainToY(point.gain);\r\n\r\n            controlPointPath += FilterEditor._circlePath(pointX, pointY, this._pointRadius);\r\n\r\n            if (point.type == FilterType.highPass) {\r\n                dottedLinePath += \"M \" + 0 + \" \" + pointY + \" L \" + pointX + \" \" + pointY + \" \";\r\n            } else if (point.type == FilterType.lowPass) {\r\n                dottedLinePath += \"M \" + this._editorWidth + \" \" + pointY + \" L \" + pointX + \" \" + pointY + \" \";\r\n            }\r\n\r\n            if (this._selectedIndex == i && this._mouseOver && !this._mouseDown) {\r\n                this._highlight.setAttribute(\"cx\", String(pointX));\r\n                this._highlight.setAttribute(\"cy\", String(pointY));\r\n                this._highlight.style.display = \"\";\r\n\r\n                if (this.coordText != null) {\r\n                    this.coordText.innerText = \"(\" + point.freq + \", \" + point.gain + \")\";\r\n                }\r\n            }\r\n            if ((this._selectedIndex == i || (this._addingPoint && this._mouseDown && i == this._filterSettings.controlPointCount - 1)) && (this._mouseOver || this._mouseDown) && !this._deletingPoint) {\r\n                this._label.textContent = (i + 1) + \": \" + Config.filterTypeNames[point.type] + (this._larger ? \" @\" + prettyNumber(point.getHz()) + \"Hz\" : \"\");\r\n            }\r\n\r\n            if (this._larger) {\r\n                this._indicators[i].style.setProperty(\"display\", \"\");\r\n                this._indicators[i].setAttribute(\"x\", \"\" + (pointX - 7));\r\n                this._indicators[i].setAttribute(\"y\", \"\" + (pointY + 2));\r\n            }\r\n        }\r\n        this._controlPointPath.setAttribute(\"d\", controlPointPath);\r\n        this._dottedLinePath.setAttribute(\"d\", dottedLinePath);\r\n        if (this._addingPoint && !this._mouseDown && this._mouseOver) {\r\n            this._label.textContent = \"+ \" + Config.filterTypeNames[this._addedType];\r\n        }\r\n\r\n        // Hide unused control point labels\r\n        if (this._larger) {\r\n            for (let i: number = this._filterSettings.controlPointCount; i < Config.filterMaxPoints; i++) {\r\n                this._indicators[i].style.setProperty(\"display\", \"none\");\r\n            }\r\n        }\r\n\r\n        //let volumeCompensation: number = 1.0;\r\n        const standardSampleRate: number = 44800;\r\n        const filters: FilterCoefficients[] = [];\r\n        for (let i: number = 0; i < this._filterSettings.controlPointCount; i++) {\r\n            const point: FilterControlPoint = this._filterSettings.controlPoints[i];\r\n            const filter: FilterCoefficients = new FilterCoefficients();\r\n            point.toCoefficients(filter, standardSampleRate);\r\n            filters.push(filter);\r\n            //volumeCompensation *= point.getVolumeCompensationMult();\r\n        }\r\n\r\n        const response: FrequencyResponse = new FrequencyResponse();\r\n        let responsePath: string = \"M 0 \" + this._editorHeight + \" \";\r\n        for (let i: number = -1; i <= Config.filterFreqRange; i++) {\r\n            const hz: number = FilterControlPoint.getHzFromSettingValue(i);\r\n            const cornerRadiansPerSample: number = 2.0 * Math.PI * hz / standardSampleRate;\r\n            const real: number = Math.cos(cornerRadiansPerSample);\r\n            const imag: number = Math.sin(cornerRadiansPerSample);\r\n\r\n            let linearGain: number = 1.0; //volumeCompensation;\r\n            for (const filter of filters) {\r\n                response.analyzeComplex(filter, real, imag);\r\n                linearGain *= response.magnitude();\r\n            }\r\n\r\n            const gainSetting: number = Math.log2(linearGain) / Config.filterGainStep + Config.filterGainCenter;\r\n            const y: number = this._gainToY(gainSetting);\r\n            const x: number = this._freqToX(i);\r\n            responsePath += \"L \" + prettyNumber(x) + \" \" + prettyNumber(y) + \" \";\r\n        }\r\n\r\n        responsePath += \"L \" + this._editorWidth + \" \" + this._editorHeight + \" L 0 \" + this._editorHeight + \" z \";\r\n        this._responsePath.setAttribute(\"d\", responsePath);\r\n    }\r\n\r\n    // Swap to new filter settings all at once.\r\n    public swapToSettings(settings: FilterSettings, useHistory: boolean = false) {\r\n        const instrument: Instrument = this._doc.song.channels[this._doc.channel].instruments[this._doc.getCurrentInstrument()];\r\n        new ChangeFilterSettings(this._doc, settings, this._filterSettings, this._useNoteFilter, this._subFilters, this._useNoteFilter ? instrument.noteSubFilters : instrument.eqSubFilters);\r\n        this._filterSettings = settings;\r\n        this._subFilters[this._subfilterIndex] = settings;\r\n        if (useHistory && this._larger) {\r\n            this.selfUndoSettings.length = this.selfUndoHistoryPos + 1;\r\n            this.selfUndoSettings.push(JSON.stringify((this._filterSettings.toJsonObject())));\r\n            this.selfUndoHistoryPos++;\r\n        }\r\n        this._updatePath();\r\n    }\r\n\r\n    // Save settings on prompt close (record a change from first settings to newest)\r\n    public saveSettings() {\r\n        let firstFilter: FilterSettings = new FilterSettings;\r\n        const instrument: Instrument = this._doc.song.channels[this._doc.channel].instruments[this._doc.getCurrentInstrument()];\r\n        firstFilter.fromJsonObject(JSON.parse(String(this.selfUndoSettings[0])));\r\n        this._doc.record(new ChangeFilterSettings(this._doc, this._subFilters[0], firstFilter, this._useNoteFilter, this._subFilters, this._useNoteFilter ? instrument.noteSubFilters : instrument.eqSubFilters), true);\r\n    }\r\n\r\n    // Self-undo history management\r\n    // Returns the subfilter index to swap to, if any\r\n    public undo(): number {\r\n        if (this.selfUndoHistoryPos > 0) {\r\n            this.selfUndoHistoryPos--;\r\n            // Jump back and load latest state of this subfilter. Also save subfilter settings for current index\r\n            if (this.selfUndoSettings[this.selfUndoHistoryPos + 1] != null && this.selfUndoSettings[this.selfUndoHistoryPos + 1].startsWith(\"jmp\")) {\r\n                let str: String = this.selfUndoSettings[this.selfUndoHistoryPos + 1];\r\n                let jumpIndex = +str.substring(3, str.indexOf(\"|\"));\r\n                this.swapToSubfilter(this._subfilterIndex, jumpIndex);\r\n                return jumpIndex;\r\n            // Jumping to FIRST state of this subfilter\r\n            } else if (this.selfUndoSettings[this.selfUndoHistoryPos].startsWith(\"jmp\")) {\r\n                let savedFilter: FilterSettings = new FilterSettings();\r\n                let str: String = this.selfUndoSettings[this.selfUndoHistoryPos];\r\n                savedFilter.fromJsonObject(JSON.parse(str.substring(str.indexOf(\":\") + 1)));\r\n                this.swapToSettings(savedFilter, false);\r\n            } else {\r\n                let savedFilter: FilterSettings = new FilterSettings();\r\n                savedFilter.fromJsonObject(JSON.parse(String(this.selfUndoSettings[this.selfUndoHistoryPos])));\r\n                this.swapToSettings(savedFilter, false);\r\n            }\r\n        }\r\n        return -1;\r\n    }\r\n\r\n    // Returns the subfilter index to swap to, if any\r\n    public redo(): number {\r\n        if (this.selfUndoHistoryPos < this.selfUndoSettings.length-1) {\r\n            this.selfUndoHistoryPos++;\r\n            // Check if next index in undo queue is a command to jump to a new filter index\r\n            if (this.selfUndoSettings[this.selfUndoHistoryPos].startsWith(\"jmp\")) {\r\n                let str: String = this.selfUndoSettings[this.selfUndoHistoryPos];\r\n                let jumpIndex = +str.substring(str.indexOf(\"|\") + 1, str.indexOf(\":\"));\r\n                this.swapToSubfilter(this._subfilterIndex, jumpIndex, false);\r\n                return jumpIndex;\r\n            } else {\r\n                let savedFilter: FilterSettings = new FilterSettings();\r\n                savedFilter.fromJsonObject(JSON.parse(String(this.selfUndoSettings[this.selfUndoHistoryPos])));\r\n                this.swapToSettings(savedFilter, false);\r\n            }\r\n        }\r\n        return -1;\r\n\r\n    }\r\n\r\n    public resetToInitial() {\r\n        this.selfUndoHistoryPos = 1;\r\n        this.undo();\r\n    }\r\n\r\n    public swapSubfilterIndices(newIndex: number) {\r\n        if (this._selectedIndex == -1)\r\n            return;\r\n\r\n        if (newIndex >= this._filterSettings.controlPointCount)\r\n            return;\r\n\r\n        let tmp: FilterControlPoint = this._filterSettings.controlPoints[this._selectedIndex];\r\n        this._filterSettings.controlPoints[this._selectedIndex] = this._filterSettings.controlPoints[newIndex];\r\n        this._filterSettings.controlPoints[newIndex] = tmp;\r\n\r\n        this.render();\r\n    }\r\n\r\n    public swapToSubfilter(oldIndex: number, newIndex: number, useHistory: boolean = false) {\r\n        if (oldIndex != newIndex) {\r\n            // Save current subfilter\r\n            let currFilter: FilterSettings = new FilterSettings();\r\n            currFilter.fromJsonObject(this._filterSettings.toJsonObject());\r\n            this._subFilters[oldIndex] = currFilter;\r\n\r\n            // Copy main filter at this time\r\n            if (this._subFilters[newIndex] == undefined) {\r\n                let parsedFilter: FilterSettings = new FilterSettings();\r\n                parsedFilter.fromJsonObject(this._subFilters[0].toJsonObject());\r\n                this._subFilters[newIndex] = parsedFilter;\r\n            }\r\n\r\n            // Record the swap in undo history\r\n            if (useHistory) {\r\n                this.selfUndoSettings.length = this.selfUndoHistoryPos + 1;\r\n                // Swap from|to:filterInitSettings\r\n                this.selfUndoSettings.push(\"jmp\" + oldIndex + \"|\" + newIndex + \":\" + JSON.stringify(this._subFilters[newIndex].toJsonObject()));\r\n                this.selfUndoHistoryPos++;\r\n            }\r\n\r\n            this._subfilterIndex = newIndex;\r\n            // Never use history here since the swap action is itself history-generating\r\n            this.swapToSettings(this._subFilters[newIndex], false);\r\n        }\r\n\r\n    }\r\n\r\n    public render(activeMods: boolean = false): void {\r\n        const instrument: Instrument = this._doc.song.channels[this._doc.channel].instruments[this._doc.getCurrentInstrument()];\r\n        const filterSettings: FilterSettings = this._useNoteFilter ? instrument.noteFilter : instrument.eqFilter;\r\n        let displayMods: boolean = (activeMods && !this._larger && !this._mouseOver && !this._mouseDragging && !this._mouseDown && this._doc.synth.playing)\r\n        if (displayMods)\r\n            this._controlPointPath.style.setProperty(\"fill\", `${ColorConfig.overwritingModSlider}`);\r\n        else if (!this._larger)\r\n            this._controlPointPath.style.setProperty(\"fill\", \"currentColor\");\r\n\r\n        if (this._filterSettings != filterSettings) {\r\n            this._dragChange = null;\r\n            this._mouseDown = false;\r\n        }\r\n        this._filterSettings = filterSettings;\r\n        let targetSettings: FilterSettings = filterSettings;\r\n        if (!this._mouseDown) this._updateCursor();\r\n\r\n        // If modulators are active, show synth's current filter point settings instead of real points\r\n        if (displayMods) {\r\n            // TODO: Re-compute default point freqs/gains only when needed\r\n            targetSettings = (this._useNoteFilter) ? instrument.tmpNoteFilterStart! : instrument.tmpEqFilterStart!;\r\n            if (targetSettings == null) targetSettings = (this._useNoteFilter) ? instrument.noteFilter : instrument.eqFilter;\r\n            this._filterSettings = targetSettings!;\r\n        }\r\n\r\n        let pointTypes: number = 0;\r\n        let pointFreqs: number = 0;\r\n        let pointGains: number = 0;\r\n        for (let i: number = 0; i < targetSettings.controlPointCount; i++) {\r\n            const point: FilterControlPoint = targetSettings.controlPoints[i];\r\n            pointTypes = pointTypes * FilterType.length + point.type;\r\n            pointFreqs = pointFreqs * Config.filterFreqRange + point.freq;\r\n            pointGains = pointGains * Config.filterGainRange + point.gain;\r\n        }\r\n        if (this._renderedSelectedIndex != this._selectedIndex ||\r\n            this._renderedPointCount != targetSettings.controlPointCount ||\r\n            this._renderedPointTypes != pointTypes ||\r\n            this._renderedPointFreqs != pointFreqs ||\r\n            this._renderedPointGains != pointGains) {\r\n            this._renderedSelectedIndex = this._selectedIndex;\r\n            this._renderedPointCount = targetSettings.controlPointCount;\r\n            this._renderedPointTypes = pointTypes;\r\n            this._renderedPointFreqs = pointFreqs;\r\n            this._renderedPointGains = pointGains;\r\n            this._updatePath();\r\n        }\r\n\r\n        // Return to normal filter settings\r\n        if (displayMods) {\r\n            this._filterSettings = filterSettings;\r\n        }\r\n\r\n        /*\r\n        if (this._renderedKey != this._doc.song.key) {\r\n            this._renderedKey = this._doc.song.key;\r\n            const tonicHz: number = Instrument.frequencyFromPitch(Config.keys[this._doc.song.key].basePitch);\r\n            const x: number = this._freqToX(FilterControlPoint.getSettingValueFromHz(tonicHz));\r\n            this._octaves.setAttribute(\"x\", String(x));\r\n        }\r\n        */\r\n    }\r\n}\r\n","// Copyright (C) 2020 John Nesky, distributed under the MIT license.\r\n\r\nimport { HTML, SVG } from \"imperative-html/dist/esm/elements-strict\";\r\nimport { Prompt } from \"./Prompt\";\r\nimport { SongDocument } from \"./SongDocument\";\r\nimport { Config } from \"../synth/SynthConfig\";\r\nimport { FilterEditor } from \"./FilterEditor\";\r\nimport { SongEditor } from \"./SongEditor\";\r\nimport { FilterSettings } from \"../synth/synth\";\r\nimport { ColorConfig } from \"./ColorConfig\";\r\n\r\n//namespace beepbox {\r\nconst { button, div, h2, p } = HTML;\r\n\r\nexport class CustomFilterPrompt implements Prompt {\r\n\r\n\tpublic filterEditor: FilterEditor;\r\n\r\n\tpublic filterData: FilterSettings = new FilterSettings;\r\n\tpublic startingFilterData: FilterSettings = new FilterSettings;\r\n\r\n\tprivate _subfilterIndex = 0;\r\n\r\n\tpublic readonly _playButton: HTMLButtonElement = button({ style: \"width: 55%;\", type: \"button\" });\r\n\r\n\tpublic readonly _filterButtons: HTMLButtonElement[] = [];\r\n\r\n\tpublic readonly _filterButtonContainer: HTMLDivElement = div({class: \"instrument-bar\", style: \"justify-content: center;\"});\r\n\r\n\tprivate readonly _cancelButton: HTMLButtonElement = button({ class: \"cancelButton\" });\r\n\tprivate readonly _okayButton: HTMLButtonElement = button({ class: \"okayButton\", style: \"width:45%;\" }, \"Okay\");\r\n\r\n\tprivate readonly _filterContainer: HTMLDivElement = div({ style: \"width: 100%; display: flex; flex-direction: row; align-items: center; justify-content: center;\" });\r\n\r\n\tprivate readonly _editorTitle: HTMLDivElement = div({}, h2(\"Edit Filter\"));\r\n\r\n\tprivate readonly _filterCopyButton: HTMLButtonElement = button({ style: \"width:86px; margin-right: 5px;\", class: \"copyButton\" }, [\r\n\t\t\"Copy\",\r\n\t\t// Copy icon:\r\n\t\tSVG.svg({ style: \"flex-shrink: 0; position: absolute; left: 0; top: 50%; margin-top: -1em; pointer-events: none;\", width: \"2em\", height: \"2em\", viewBox: \"-5 -21 26 26\" }, [\r\n\t\t\tSVG.path({ d: \"M 0 -15 L 1 -15 L 1 0 L 13 0 L 13 1 L 0 1 L 0 -15 z M 2 -1 L 2 -17 L 10 -17 L 14 -13 L 14 -1 z M 3 -2 L 13 -2 L 13 -12 L 9 -12 L 9 -16 L 3 -16 z\", fill: \"currentColor\" }),\r\n\t\t]),\r\n\t]);\r\n\tprivate readonly _filterPasteButton: HTMLButtonElement = button({ style: \"width:86px;\", class: \"pasteButton\" }, [\r\n\t\t\"Paste\",\r\n\t\t// Paste icon:\r\n\t\tSVG.svg({ style: \"flex-shrink: 0; position: absolute; left: 0; top: 50%; margin-top: -1em; pointer-events: none;\", width: \"2em\", height: \"2em\", viewBox: \"0 0 26 26\" }, [\r\n\t\t\tSVG.path({ d: \"M 8 18 L 6 18 L 6 5 L 17 5 L 17 7 M 9 8 L 16 8 L 20 12 L 20 22 L 9 22 z\", stroke: \"currentColor\", fill: \"none\" }),\r\n\t\t\tSVG.path({ d: \"M 9 3 L 14 3 L 14 6 L 9 6 L 9 3 z M 16 8 L 20 12 L 16 12 L 16 8 z\", fill: \"currentColor\", }),\r\n\t\t]),\r\n\t]);\r\n\tprivate readonly _filterCopyPasteContainer: HTMLDivElement = div({ style: \"width: 185px;\" }, this._filterCopyButton, this._filterPasteButton);\r\n\r\n\tprivate readonly _filterCoordinateText: HTMLDivElement = div({ style: \"text-align: left; margin-bottom: 0px; font-size: x-small; height: 1.3em; color: \" + ColorConfig.secondaryText + \";\"}, p(\"\"));\r\n\r\n\tpublic readonly container: HTMLDivElement = div({ class: \"prompt noSelection\", style: \"width: 600px;\" },\r\n\t\tthis._editorTitle,\r\n\t\tdiv({ style: \"display: flex; width: 55%; align-self: center; flex-direction: row; align-items: center; justify-content: center;\" },\r\n\t\t\tthis._playButton\r\n\t\t),\r\n\t\tthis._filterButtonContainer,\r\n\t\tthis._filterContainer,\r\n\t\tdiv({ style: \"display: flex; flex-direction: row-reverse; justify-content: space-between;\" },\r\n\t\t\tthis._okayButton,\r\n\t\t\tthis._filterCopyPasteContainer,\r\n\t\t),\r\n\t\tthis._cancelButton,\r\n\t);\r\n\r\n\tconstructor(private _doc: SongDocument, private _songEditor: SongEditor, private _useNoteFilter: boolean) {\r\n\r\n\t\tthis._okayButton.addEventListener(\"click\", this._saveChanges);\r\n\t\tthis._cancelButton.addEventListener(\"click\", this._close);\r\n\t\tthis._playButton.addEventListener(\"click\", this._togglePlay);\r\n\t\tthis._filterCopyButton.addEventListener(\"click\", this._copyFilterSettings);\r\n\t\tthis._filterPasteButton.addEventListener(\"click\", this._pasteFilterSettings);\r\n\t\tthis.updatePlayButton();\r\n\t\tlet colors = ColorConfig.getChannelColor(this._doc.song, this._doc.channel);\r\n\r\n\t\tthis.filterEditor = new FilterEditor(_doc, _useNoteFilter, true);\r\n\t\tthis._filterContainer.appendChild(this.filterEditor.container);\r\n\r\n\t\t// Add coordinates to editor\r\n\t\tthis.filterEditor.container.insertBefore(this._filterCoordinateText, this.filterEditor.container.firstChild);\r\n\t\tthis.filterEditor.coordText = this._filterCoordinateText;\r\n\r\n\t\tthis._editorTitle.children[0].innerHTML = (_useNoteFilter) ? \"Edit Note Filter\" : \"Edit EQ Filter\";\r\n\r\n\t\tlet newButton: HTMLButtonElement = button({ class: \"no-underline\", style: \"max-width: 5em;\"}, \"Main\");\r\n\t\tthis._filterButtonContainer.appendChild(newButton);\r\n\t\tthis._filterButtons.push(newButton);\r\n\t\tnewButton.addEventListener(\"click\", () => { this._setSubfilter(0); });\r\n\t\tfor (let i: number = 1; i < Config.filterMorphCount; i++) {\r\n\t\t\tlet newSubButton: HTMLButtonElement = button({ class: \"no-underline\", style: \"max-width: 2em;\"}, \"\" + i);\r\n\t\t\tthis._filterButtons.push(newSubButton);\r\n\t\t\tthis._filterButtonContainer.appendChild(newSubButton);\r\n\t\t\tnewSubButton.addEventListener(\"click\", () => { this._setSubfilter(i); });\r\n\t\t}\r\n\t\tthis._filterButtons[Config.filterMorphCount - 1].classList.add(\"last-button\");\r\n\t\tthis._filterButtons[0].classList.add(\"selected-instrument\");\r\n\r\n\t\tthis._filterButtonContainer.style.setProperty(\"--text-color-lit\", colors.primaryNote);\r\n\t\tthis._filterButtonContainer.style.setProperty(\"--text-color-dim\", colors.secondaryNote);\r\n\t\tthis._filterButtonContainer.style.setProperty(\"--background-color-lit\", colors.primaryChannel);\r\n\t\tthis._filterButtonContainer.style.setProperty(\"--background-color-dim\", colors.secondaryChannel);\r\n\r\n\t\tthis._filterContainer.addEventListener(\"keydown\", this._whenKeyPressed);\r\n\t\tthis.filterEditor.container.addEventListener(\"keydown\", this._whenKeyPressed);\r\n\t\tthis.container.addEventListener(\"keydown\", this._whenKeyPressed);\r\n\r\n\t\tsetTimeout(() => this._playButton.focus());\r\n\r\n\t\tthis.filterEditor.render();\r\n\t}\r\n\r\n\tprivate _setSubfilter = (index: number, useHistory: boolean = true, doSwap: boolean = true): void => {\r\n\t\tthis._filterButtons[this._subfilterIndex].classList.remove(\"selected-instrument\");\r\n\t\tif ( doSwap ) this.filterEditor.swapToSubfilter(this._subfilterIndex, index, useHistory);\r\n\t\tthis._subfilterIndex = index;\r\n\t\tthis._filterButtons[index].classList.add(\"selected-instrument\");\r\n    }\r\n\r\n\tprivate _copyFilterSettings = (): void => {\r\n\t\tconst filterCopy: any = this._useNoteFilter\r\n\t\t\t? this._doc.song.channels[this._doc.channel].instruments[this._doc.getCurrentInstrument()].noteFilter.toJsonObject()\r\n\t\t\t: this._doc.song.channels[this._doc.channel].instruments[this._doc.getCurrentInstrument()].eqFilter.toJsonObject();\r\n\t\twindow.localStorage.setItem(\"filterCopy\", JSON.stringify(filterCopy));\r\n\t}\r\n\r\n\tprivate _pasteFilterSettings = (): void => {\r\n\r\n\t\tlet filterCopy: FilterSettings = new FilterSettings();\r\n\t\tfilterCopy.fromJsonObject(JSON.parse(String(window.localStorage.getItem(\"filterCopy\"))));\r\n\t\tif (filterCopy != null) {\r\n\t\t\tthis.filterEditor.swapToSettings(filterCopy, true);\r\n\t\t}\r\n    }\r\n\r\n\tprivate _whenKeyPressed = (event: KeyboardEvent): void => {\r\n\t\tif (event.keyCode == 90) { // z\r\n\t\t\tlet newIdx = this.filterEditor.undo();\r\n\t\t\tif (newIdx >= 0) {\r\n\t\t\t\tthis._setSubfilter(newIdx, false, false);\r\n            }\r\n\t\t\tevent.stopPropagation();\r\n\t\t}\r\n\t\tif (event.keyCode == 89) { // y\r\n\t\t\tlet newIdx = this.filterEditor.redo();\r\n\t\t\tif (newIdx >= 0) {\r\n\t\t\t\tthis._setSubfilter(newIdx, false, false);\r\n\t\t\t}\r\n\t\t\tevent.stopPropagation();\r\n\t\t}\r\n\t\t// Number 1-9\r\n\t\tif (event.keyCode >= 49 && event.keyCode <= 57) {\r\n\t\t\tif (!event.shiftKey) {\r\n\t\t\t\tthis.filterEditor.swapSubfilterIndices(event.keyCode - 49);\r\n\t\t\t\tevent.stopPropagation();\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\r\n\tprivate _togglePlay = (): void => {\r\n\t\tthis._songEditor.togglePlay();\r\n\t\tthis.updatePlayButton();\r\n\t}\r\n\r\n\tpublic updatePlayButton(): void {\r\n\t\tif (this._doc.synth.playing) {\r\n\t\t\tthis._playButton.classList.remove(\"playButton\");\r\n\t\t\tthis._playButton.classList.add(\"pauseButton\");\r\n\t\t\tthis._playButton.title = \"Pause (Space)\";\r\n\t\t\tthis._playButton.innerText = \"Pause\";\r\n\t\t} else {\r\n\t\t\tthis._playButton.classList.remove(\"pauseButton\");\r\n\t\t\tthis._playButton.classList.add(\"playButton\");\r\n\t\t\tthis._playButton.title = \"Play (Space)\";\r\n\t\t\tthis._playButton.innerText = \"Play\";\r\n\t\t}\r\n\t}\r\n\r\n\tprivate _close = (): void => {\r\n\t\tthis._doc.prompt = null;\r\n\t\t// Restore filter settings to default\r\n\t\tthis.filterEditor.resetToInitial();\r\n\t\tthis._doc.undo();\r\n\t}\r\n\r\n\tpublic cleanUp = (): void => {\r\n\t\tthis._okayButton.removeEventListener(\"click\", this._saveChanges);\r\n\t\tthis._cancelButton.removeEventListener(\"click\", this._close);\r\n\t\tthis.container.removeEventListener(\"keydown\", this.whenKeyPressed);\r\n\r\n\t\tthis._playButton.removeEventListener(\"click\", this._togglePlay);\r\n\t}\r\n\r\n\tpublic whenKeyPressed = (event: KeyboardEvent): void => {\r\n\t\tif ((<Element>event.target).tagName != \"BUTTON\" && event.keyCode == 13) { // Enter key\r\n\t\t\tthis._saveChanges();\r\n\t\t}\r\n\t\telse if (event.keyCode == 32) { // space\r\n\t\t\tthis._togglePlay();\r\n\t\t\tevent.preventDefault();\r\n\t\t}\r\n\t\telse if (event.keyCode == 90) { // z\r\n\t\t\tthis.filterEditor.undo();\r\n\t\t\tevent.stopPropagation();\r\n\t\t}\r\n\t\telse if (event.keyCode == 89) { // y\r\n\t\t\tthis.filterEditor.redo();\r\n\t\t\tevent.stopPropagation();\r\n\t\t}\r\n\t\telse if (event.keyCode == 219) { // [\r\n\t\t\tthis._doc.synth.goToPrevBar();\r\n\t\t}\r\n\t\telse if (event.keyCode == 221) { // ]\r\n\t\t\tthis._doc.synth.goToNextBar();\r\n\t\t}\r\n\t\telse if (event.keyCode >= 48 && event.keyCode <= 57) { // 0-9\r\n\t\t\tif (event.shiftKey) {\r\n\t\t\t\tthis._setSubfilter(event.keyCode - 48);\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t}\r\n\r\n\tprivate _saveChanges = (): void => {\r\n\t\tthis._doc.prompt = null;\r\n\t\tthis.filterEditor.saveSettings();\r\n\t}\r\n}\r\n//}\r\n","// Copyright (C) 2012-2023 John Nesky and contributing authors, distributed under the MIT license, see the accompanying LICENSE.md file.\r\n\r\nimport { Config } from \"../synth/SynthConfig\";\r\nimport { HTML, SVG } from \"imperative-html/dist/esm/elements-strict\";\r\nimport { SongDocument } from \"./SongDocument\";\r\nimport { Prompt } from \"./Prompt\";\r\nimport { ColorConfig, ChannelColors } from \"./ColorConfig\";\r\nimport { prettyNumber } from \"./EditorConfig\";\r\nimport { ChangeGroup } from \"./Change\";\r\nimport { ChangeEnsurePatternExists, ChangePatternNumbers, ChangeNoteAdded, ChangeInsertBars } from \"./changes\";\r\nimport { Note, NotePin, Pattern, makeNotePin } from \"../synth/synth\";\r\n\r\nconst { button, div, h2, input } = HTML;\r\n\r\n// @TODO:\r\n// - Better pattern management.\r\n// - Make it possible to hear the generated sequences before commiting to them?\r\n//   Probably mostly worth it for the reduced friction of turning knobs and\r\n//   hearing the results nearly instantaneously, given that if undo is working\r\n//   it's not really a huge burden to try something again.\r\n// - Is it worth trying to reuse SVG elements in the rendering procedures like\r\n//   _renderClock or _renderBarPreview?\r\n// - Profile the note merging code and improve its performance.\r\n// - When a pattern selection is active, check if there's one stored sequence\r\n//   for each selected channel, and if so, use them instead of using defaults.\r\n// - Save the current sequence index in localStorage?\r\n// - Pick pitch in a different way? I don't have many good ideas beyond\r\n//   separated named note and octave lists though.\r\n// - Add a way to specify a custom pitch sequence to be used when emitting\r\n//   notes. Probably fairly complicated. Overlaps with the pattern editor\r\n//   somewhat.\r\n\r\ninterface Sequence {\r\n\tsteps: number;\r\n\tpulses: number;\r\n\trotation: number;\r\n\tstepSizeNumerator: number;\r\n\tstepSizeDenominator: number;\r\n\tchannel: number;\r\n\tpitch: number;\r\n\tinvert: boolean;\r\n\tgenerateFadingNotes: boolean;\r\n}\r\n\r\nfunction gcd(x: number, y: number): number {\r\n\twhile (y !== 0) {\r\n\t\tconst z: number = x % y;\r\n\t\tx = y;\r\n\t\ty = z;\r\n\t}\r\n\treturn x;\r\n}\r\n\r\nfunction lcm(a: number, b: number): number {\r\n\treturn Math.floor(Math.abs(a * b) / gcd(a, b));\r\n}\r\n\r\n// Not exactly a good fraction/rational datatype, but it will do for now.\r\ntype Fraction = [number, number];\r\n\r\nfunction fraction(a: number, b: number): Fraction {\r\n\tlet n: number = a;\r\n\tlet d: number = b;\r\n\tconst g: number = gcd(n, d);\r\n\tif (g > 1) {\r\n\t\tn = Math.floor(n / g);\r\n\t\td = Math.floor(d / g);\r\n\t}\r\n\treturn [n, d];\r\n}\r\n\r\nfunction fractionMul(a: Fraction, b: Fraction): Fraction {\r\n\tconst an: number = a[0];\r\n\tconst ad: number = a[1];\r\n\tconst bn: number = b[0];\r\n\tconst bd: number = b[1];\r\n\treturn fraction(an * bn, ad * bd);\r\n}\r\n\r\nfunction fractionDiv(a: Fraction, b: Fraction): Fraction {\r\n\tconst an: number = a[0];\r\n\tconst ad: number = a[1];\r\n\tconst bn: number = b[0];\r\n\tconst bd: number = b[1];\r\n\treturn fraction(an * bd, ad * bn);\r\n}\r\n\r\n// https://math.stackexchange.com/questions/44836/rational-numbers-lcm-and-hcf\r\nfunction fractionLCM(a: Fraction, b: Fraction): Fraction {\r\n\tconst an: number = a[0];\r\n\tconst ad: number = a[1];\r\n\tconst bn: number = b[0];\r\n\tconst bd: number = b[1];\r\n\treturn fraction(lcm(an, bn), gcd(ad, bd));\r\n}\r\n\r\nfunction generateEuclideanRhythm(steps: number, pulses: number, offset: number): number[] {\r\n\t// Negative amount of pulses makes no sense.\r\n\tsteps = Math.max(0, steps);\r\n\t// More pulses than steps makes no sense.\r\n\tpulses = Math.max(0, Math.min(steps, pulses));\r\n\t// This algorithm is described in the extended version of the paper\r\n\t// \"The Euclidean Algorithm Generates Traditional Musical Rhythms\"\r\n\t// by Godfried Toussaint. It can be found here:\r\n\t// http://cgm.cs.mcgill.ca/~godfried/publications/banff-extended.pdf\r\n\tlet columns: number[][] = [];\r\n\tfor (let step: number = 0; step < steps; step++)\r\n\t\tcolumns.push([step >= pulses ? 0 : 1]);\r\n\tlet a: number = steps;\r\n\tlet b: number = steps - pulses;\r\n\tif (a > 0 && b > 0) {\r\n\t\t// This is the subtraction-based version of Euclid's algorithm:\r\n\t\t// https://en.wikipedia.org/wiki/Euclidean_algorithm#Implementations\r\n\t\twhile (a !== b) {\r\n\t\t\tif (a > b) {\r\n\t\t\t\ta = a - b;\r\n\t\t\t} else {\r\n\t\t\t\tb = b - a;\r\n\t\t\t}\r\n\t\t\tconst amountToMove: number = Math.min(a, b);\r\n\t\t\tif (amountToMove <= 1) continue;\r\n\t\t\tfor (let i: number = 0; i < amountToMove; i++) {\r\n\t\t\t\tconst moved: number[] | undefined = columns.pop();\r\n\t\t\t\tif (moved != null) for (const v of moved) columns[i].push(v);\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\tlet pattern: number[] = [];\r\n\tfor (const c of columns) for (const v of c) pattern.push(v);\r\n\tif (offset !== 0) {\r\n\t\t// Wrap.\r\n\t\toffset = (offset % pattern.length + pattern.length) % pattern.length;\r\n\t\t// Flip the offset around so that rotation goes clockwise.\r\n\t\toffset = pattern.length - offset;\r\n\t\tpattern = pattern.slice(offset).concat(pattern.slice(0, offset));\r\n\t}\r\n\treturn pattern;\r\n}\r\n\r\nexport class EuclideanRhythmPrompt implements Prompt {\r\n\tprivate readonly _minSteps: number = 2;\r\n\tprivate readonly _maxSteps: number = 64;\r\n\r\n\tprivate readonly _maxSequences: number = 14;\r\n\r\n\tprivate _maxChannel: number = Config.pitchChannelCountMax + Config.noiseChannelCountMax - 1; // Inclusive.\r\n\r\n\tprivate readonly _localStorageKey: string = \"euclidGenMemory\";\r\n\r\n\tprivate readonly _sequences: Sequence[];\r\n\tprivate _generatedSequences: (number[])[];\r\n\tprivate _sequenceIndex: number = 0;\r\n\tprivate _renderedSequenceCount: number = 0;\r\n\tprivate _highlightedSequenceIndex: number = -1;\r\n\r\n\tprivate _startBar: number = 0;\r\n\tprivate _barAmount: number = 1;\r\n\tprivate _barsAvailable: number = Config.barCountMax;\r\n\r\n\tprivate _barPreviewBarIndex: number = 0;\r\n\tprivate readonly _barPreviewWidth: number = 400;\r\n\tprivate readonly _barPreviewHeight: number = 10;\r\n\r\n\tprivate readonly _clockWidth: number = 100;\r\n\tprivate readonly _clockHeight: number = 100;\r\n\tprivate readonly _clockPointMinRadius: number = this._clockWidth / this._maxSteps;\r\n\tprivate readonly _clockPointMaxRadius: number = this._clockWidth / 16;\r\n\tprivate readonly _clockPadding: number = this._clockWidth / this._maxSteps;\r\n\tprivate readonly _clockRadius: number = this._clockWidth / 2 - this._clockPointMaxRadius - this._clockPadding;\r\n\r\n\tprivate readonly _sequenceButtons: HTMLButtonElement[] = [];\r\n\tprivate readonly _sequenceRemoveButton: HTMLButtonElement = button({ class: \"no-underline\", style: \"flex-grow: 0; flex-basis: 30px;\" },\r\n\t\t// Based on `--close-symbol`.\r\n\t\tSVG.svg({ width: \"26\", height: \"26\", viewBox: \"-13 -13 26 26\", \"pointer-events\": \"none\" },\r\n\t\t\tSVG.path({ d: \"M -7.07 -5.66 L -5.66 -7.07 L 0 -1.4 L 5.66 -7.07 L 7.07 -5.66 L 1.4 0 L 7.07 5.66 L 5.66 7.07 L 0 1.4 L -5.66 7.07 L -7.07 5.66 L -1.4 0 z\", fill: ColorConfig.primaryText })\r\n\t\t)\r\n\t);\r\n\tprivate readonly _sequenceAddButton: HTMLButtonElement = button({ class: \"no-underline last-button\", style: \"flex-grow: 0; flex-basis: 30px;\" },\r\n\t\t// Based on `--add-symbol`.\r\n\t\tSVG.svg({ width: \"26\", height: \"26\", viewBox: \"-13 -13 26 26\", \"pointer-events\": \"none\" },\r\n\t\t\tSVG.path({ d: \"M -8 -1 L -1 -1 L -1 -8 L 1 -8 L 1 -1 L 8 -1 L 8 1 L 1 1 L 1 8 L -1 8 L -1 1 L -8 1 z\", fill: ColorConfig.primaryText })\r\n\t\t)\r\n\t);\r\n\tprivate readonly _sequenceButtonContainer: HTMLDivElement = div({ class: \"instrument-bar\", style: \"justify-content: center; width: 100%;\" },\r\n\t\tthis._sequenceRemoveButton,\r\n\t\tthis._sequenceAddButton\r\n\t);\r\n\r\n\tprivate readonly _barPreviewBackground: SVGSVGElement = SVG.svg({ \"pointer-events\": \"none\" });\r\n\tprivate readonly _barPreviewSteps: SVGSVGElement = SVG.svg({ \"pointer-events\": \"none\" });\r\n\tprivate readonly _barPreviewLabel: HTMLDivElement = div({ style: `flex-grow: 1; color: ${ColorConfig.secondaryText}` });\r\n\tprivate readonly _barPreviewGoToFirstButton: HTMLButtonElement = button({ style: \"height: auto; min-height: var(--button-size);\" },\r\n\t\t// Based on `--prev-bar-symbol`.\r\n\t\tSVG.svg({ width: \"26\", height: \"26\", viewBox: \"-13 -14 26 26\", \"pointer-events\": \"none\" },\r\n\t\t\tSVG.rect({ x: \"-6\", y: \"-6\", width: \"2\", height: \"12\", fill: ColorConfig.primaryText }),\r\n\t\t\tSVG.path({ d: \"M 6 -6 L 6 6 L -3 0 z\", fill: ColorConfig.primaryText })\r\n\t\t)\r\n\t);\r\n\tprivate readonly _barPreviewGoBackButton: HTMLButtonElement = button({ style: \"height: auto; min-height: var(--button-size); margin-left: 1em;\" },\r\n\t\tSVG.svg({ width: \"24\", height: \"26\", viewBox: \"-10 -14 24 26\", \"pointer-events\": \"none\" },\r\n\t\t\tSVG.path({ d: \"M 6 -6 L 6 6 L -3 0 z\", fill: ColorConfig.primaryText })\r\n\t\t)\r\n\t);\r\n\tprivate readonly _barPreviewGoForwardButton: HTMLButtonElement = button({ style: \"height: auto; min-height: var(--button-size);\" },\r\n\t\tSVG.svg({ width: \"24\", height: \"26\", viewBox: \"-14 -14 24 26\", \"pointer-events\": \"none\" },\r\n\t\t\tSVG.path({ d: \"M -6 -6 L -6 6 L 3 0 z\", fill: ColorConfig.primaryText })\r\n\t\t)\r\n\t);\r\n\tprivate readonly _barPreviewGoToLastButton: HTMLButtonElement = button({ style: \"height: auto; min-height: var(--button-size); margin-left: 1em;\" },\r\n\t\t// Based on `--next-bar-symbol`.\r\n\t\tSVG.svg({ width: \"26\", height: \"26\", viewBox: \"-13 -14 26 26\", \"pointer-events\": \"none\" },\r\n\t\t\tSVG.rect({ x: \"4\", y: \"-6\", width: \"2\", height: \"12\", fill: ColorConfig.primaryText }),\r\n\t\t\tSVG.path({ d: \"M -6 -6 L -6 6 L 3 0 z\", fill: ColorConfig.primaryText })\r\n\t\t)\r\n\t);\r\n\r\n\tprivate readonly _clockWire: SVGCircleElement = SVG.circle({ cx: this._clockWidth / 2, cy: this._clockHeight / 2, r: this._clockRadius, stroke: ColorConfig.primaryText, \"stroke-width\": \"0.5\", fill: \"none\" });\r\n\tprivate readonly _clockPoints: SVGSVGElement = SVG.svg({ \"pointer-events\": \"none\" });\r\n\r\n\tprivate readonly _stepsStepper: HTMLInputElement = input({ style: \"width: 3em; margin-left: 1em;\", type: \"number\", min: this._minSteps, max: this._maxSteps, value: \"8\", step: \"1\" });\r\n\tprivate readonly _pulsesStepper: HTMLInputElement = input({ style: \"width: 3em; margin-left: 1em;\", type: \"number\", min: \"0\", max: \"8\", value: \"5\", step: \"1\" });\r\n\tprivate readonly _rotationStepper: HTMLInputElement = input({ style: \"width: 3em; margin-left: 1em;\", type: \"number\", min: \"0\", max: this._maxSteps, value: \"0\", step: \"1\" });\r\n\tprivate readonly _stepSizeNumeratorStepper: HTMLInputElement = input({ style: \"width: 3em; margin-left: 1em;\", type: \"number\", min: \"1\", max: Config.partsPerBeat, value: \"1\", step: \"1\" });\r\n\tprivate readonly _stepSizeDenominatorStepper: HTMLInputElement = input({ style: \"width: 3em; margin-left: 1em;\", type: \"number\", min: \"1\", max: Config.partsPerBeat, value: \"4\", step: \"1\" });\r\n\r\n\t// Keep in mind this counts from 1 (to match the rest of the UI).\r\n\tprivate readonly _channelStepper: HTMLInputElement = input({ style: \"width: 3em; margin-left: 1em;\", type: \"number\", min: \"1\", max: this._maxChannel + 1, value: \"1\", step: \"1\" });\r\n\r\n\tprivate readonly _pitchStepper: HTMLInputElement = input({ style: \"width: 3em; margin-left: 1em;\", type: \"number\", min: \"0\", max: Config.maxPitch, value: \"0\", step: \"1\" });\r\n\tprivate readonly _barAmountStepper: HTMLInputElement = input({ style: \"width: 3em; margin-left: 1em;\", type: \"number\", min: \"1\", max: Config.barCountMax, value: \"1\", step: \"1\" });\r\n\r\n\tprivate readonly _extendUntilLoopButton: HTMLButtonElement = button({ style: \"height: auto; min-height: var(--button-size); margin-left: 1em;\" }, \"Extend until loop\");\r\n\r\n\tprivate readonly _generateFadingNotesBox: HTMLInputElement = input({ type: \"checkbox\", style: \"width: 1em; padding: 0; margin-left: 1em;\" });\r\n\r\n\tprivate readonly _invertBox: HTMLInputElement = input({ type: \"checkbox\", style: \"width: 1em; padding: 0; margin-left: 1em;\" });\r\n\r\n\tprivate readonly _okayButton: HTMLButtonElement = button({ class: \"okayButton\", style: \"width: 45%;\" }, \"Okay\");\r\n\r\n\tprivate readonly _cancelButton: HTMLButtonElement = button({ class: \"cancelButton\" });\r\n\r\n\tpublic readonly container: HTMLDivElement = div({ class: \"prompt noSelection\", style: \"width: 600px;\" },\r\n\t\th2(\"Generate Euclidean Rhythm\"),\r\n\t\tdiv({ style: \"display: flex; flex-direction: row; align-items: center;\" },\r\n\t\t\tthis._sequenceButtonContainer\r\n\t\t),\r\n\t\tdiv({ style: \"display: flex; flex-direction: row; align-items: center; justify-content: space-between;\" },\r\n\t\t\tdiv({ style: \"flex-grow: 0; flex-shrink: 0;\" },\r\n\t\t\t\tthis._barPreviewGoToFirstButton,\r\n\t\t\t\tthis._barPreviewGoBackButton\r\n\t\t\t),\r\n\t\t\tthis._barPreviewLabel,\r\n\t\t\tdiv({ style: \"flex-grow: 0; flex-shrink: 0;\" },\r\n\t\t\t\tthis._barPreviewGoForwardButton,\r\n\t\t\t\tthis._barPreviewGoToLastButton\r\n\t\t\t),\r\n\t\t),\r\n\t\tdiv({ style: \"display: flex; flex-direction: row; align-items: center; justify-content: center;\" },\r\n\t\t\tSVG.svg({ \"pointer-events\": \"none\", style: \"touch-action: none; overflow: hidden;\", width: \"100%\", height: \"20px\", viewBox: `0 0 ${this._barPreviewWidth} ${this._barPreviewHeight}`, preserveAspectRatio: \"none\" },\r\n\t\t\t\tthis._barPreviewBackground,\r\n\t\t\t\tthis._barPreviewSteps\r\n\t\t\t),\r\n\t\t),\r\n\t\tdiv({ style: \"display: flex; flex-direction: row; align-items: center; justify-content: space-evenly;\" },\r\n\t\t\tdiv({ style: \"max-width: 150px; height: 100%;\" },\r\n\t\t\t\tSVG.svg({ \"pointer-events\": \"none\", width: \"100%\", height: \"100%\", style: \"touch-action: none; overflow: hidden; margin-right: 1.5em; max-width: 150px; height: 100%;\", viewBox: `0 0 ${this._clockWidth} ${this._clockHeight}`, preserveAspectRatio: \"none\" },\r\n\t\t\t\t\tthis._clockWire,\r\n\t\t\t\t\tthis._clockPoints\r\n\t\t\t\t),\r\n\t\t\t),\r\n\t\t\tdiv({ style: \"display: flex; height: 100%;\" },\r\n\t\t\t\tdiv({ style: \"flex-grow: 1; \" },\r\n\t\t\t\t\tdiv({ style: \"display: flex; flex-direction: row; align-items: center; height: 3em; justify-content: flex-end;\" },\r\n\t\t\t\t\t\tdiv({ style: `text-align: right; flex-grow: 1; color: ${ColorConfig.primaryText};` },\r\n\t\t\t\t\t\t\t\"Steps\"\r\n\t\t\t\t\t\t),\r\n\t\t\t\t\t\tthis._stepsStepper\r\n\t\t\t\t\t),\r\n\t\t\t\t\tdiv({ style: \"display: flex; flex-direction: row; align-items: center; height: 3em; justify-content: flex-end; margin-top: 0.5em;\" },\r\n\t\t\t\t\t\tdiv({ style: `text-align: right; flex-grow: 1; color: ${ColorConfig.primaryText};` },\r\n\t\t\t\t\t\t\t\"Pulses\"\r\n\t\t\t\t\t\t),\r\n\t\t\t\t\t\tthis._pulsesStepper\r\n\t\t\t\t\t),\r\n\t\t\t\t\tdiv({ style: \"display: flex; flex-direction: row; align-items: center; height: 3em; justify-content: flex-end; margin-top: 0.5em;\" },\r\n\t\t\t\t\t\tdiv({ style: `text-align: right; flex-grow: 1; color: ${ColorConfig.primaryText};` },\r\n\t\t\t\t\t\t\t\"Rotation\"\r\n\t\t\t\t\t\t),\r\n\t\t\t\t\t\tthis._rotationStepper\r\n\t\t\t\t\t),\r\n\t\t\t\t),\r\n\t\t\t\tdiv({ style: \"flex-grow: 1; margin-left: 1em;\" },\r\n\t\t\t\t\tdiv({ style: \"display: flex; flex-direction: row; align-items: center; height: 3em; justify-content: flex-end; margin-bottom: 1em;\" },\r\n\t\t\t\t\t\tdiv({ style: `text-align: right; flex-grow: 1; color: ${ColorConfig.primaryText};` },\r\n\t\t\t\t\t\t\t\"Size\"\r\n\t\t\t\t\t\t),\r\n\t\t\t\t\t\tdiv({ style: \"display: flex; flex-direction: column;\" },\r\n\t\t\t\t\t\t\tthis._stepSizeNumeratorStepper,\r\n\t\t\t\t\t\t\tthis._stepSizeDenominatorStepper\r\n\t\t\t\t\t\t)\r\n\t\t\t\t\t),\r\n\t\t\t\t\tdiv({ style: \"display: flex; flex-direction: row; align-items: center; height: 3em; justify-content: flex-end; margin-top: 0.5em;\" },\r\n\t\t\t\t\t\tdiv({ style: `text-align: right; flex-grow: 1; color: ${ColorConfig.primaryText};` },\r\n\t\t\t\t\t\t\t\"Channel\"\r\n\t\t\t\t\t\t),\r\n\t\t\t\t\t\tthis._channelStepper\r\n\t\t\t\t\t),\r\n\t\t\t\t\tdiv({ style: \"display: flex; flex-direction: row; align-items: center; height: 3em; justify-content: flex-end; margin-top: 0.5em;\" },\r\n\t\t\t\t\t\tdiv({ style: `text-align: right; flex-grow: 1; color: ${ColorConfig.primaryText};` },\r\n\t\t\t\t\t\t\t\"Pitch\"\r\n\t\t\t\t\t\t),\r\n\t\t\t\t\t\tthis._pitchStepper\r\n\t\t\t\t\t),\r\n\t\t\t\t),\r\n\t\t\t),\r\n\t\t),\r\n\t\tdiv({ style: \"display: flex; flex-direction: row; align-items: center; justify-content: flex-end;\" },\r\n\t\t\tdiv({ style: `text-align: right; color: ${ColorConfig.primaryText};` },\r\n\t\t\t\t\"Generate fading notes\"\r\n\t\t\t),\r\n\t\t\tthis._generateFadingNotesBox,\r\n\t\t\tdiv({ style: `text-align: right; color: ${ColorConfig.primaryText}; margin-left: 1em;` },\r\n\t\t\t\t\"Invert\"\r\n\t\t\t),\r\n\t\t\tthis._invertBox,\r\n\t\t),\r\n\t\tdiv({ style: \"display: flex; flex-direction: row; align-items: center; justify-content: flex-end;\" },\r\n\t\t\tdiv({ style: `text-align: right; color: ${ColorConfig.primaryText};` },\r\n\t\t\t\t\"Length (in bars)\"\r\n\t\t\t),\r\n\t\t\tthis._barAmountStepper,\r\n\t\t\tthis._extendUntilLoopButton\r\n\t\t),\r\n\t\tdiv({ style: \"display: flex; flex-direction: row-reverse; justify-content: space-between;\" },\r\n\t\t\tthis._okayButton\r\n\t\t),\r\n\t\tthis._cancelButton,\r\n\t);\r\n\r\n\tconstructor(private _doc: SongDocument) {\r\n\t\tthis._startBar = this._doc.bar;\r\n\t\tthis._barPreviewBarIndex = this._startBar;\r\n\r\n\t\tthis._barsAvailable = Config.barCountMax - this._startBar;\r\n\t\tthis._barAmountStepper.max = this._barsAvailable + \"\";\r\n\r\n\t\tthis._maxChannel = this._doc.song.pitchChannelCount + this._doc.song.noiseChannelCount - 1;\r\n\t\tthis._channelStepper.max = (this._maxChannel + 1) + \"\";\r\n\r\n\t\tconst defaultSteps: number = Math.max(this._minSteps, Math.min(this._maxSteps, this._doc.song.beatsPerBar));\r\n\t\tconst defaultPulses: number = Math.max(0, Math.min(defaultSteps, 5));\r\n\r\n\t\tthis._sequences = [{\r\n\t\t\tsteps: defaultSteps,\r\n\t\t\tpulses: defaultPulses,\r\n\t\t\trotation: 0,\r\n\t\t\tstepSizeNumerator: 1,\r\n\t\t\tstepSizeDenominator: 4,\r\n\t\t\tchannel: Math.max(0, Math.min(this._maxChannel, this._doc.channel)),\r\n\t\t\tpitch: 0,\r\n\t\t\tinvert: false,\r\n\t\t\tgenerateFadingNotes: false,\r\n\t\t}];\r\n\r\n\t\tif (this._doc.selection.boxSelectionActive) {\r\n\t\t\t// If a selection is active, set up some default sequences, one per\r\n\t\t\t// selected channel.\r\n\t\t\tthis._startBar = this._doc.selection.boxSelectionBar;\r\n\t\t\tthis._barPreviewBarIndex = this._startBar;\r\n\r\n\t\t\tthis._barAmount = Math.max(1, Math.min(this._barsAvailable, this._doc.selection.boxSelectionWidth));\r\n\r\n\t\t\tthis._sequences[0].channel = Math.max(0, Math.min(this._maxChannel, this._doc.selection.boxSelectionChannel));\r\n\r\n\t\t\tfor (let i: number = 1; i < this._doc.selection.boxSelectionHeight; i++) {\r\n\t\t\t\tthis._sequences.push({\r\n\t\t\t\t\tsteps: defaultSteps,\r\n\t\t\t\t\tpulses: defaultPulses,\r\n\t\t\t\t\trotation: 0,\r\n\t\t\t\t\tstepSizeNumerator: 1,\r\n\t\t\t\t\tstepSizeDenominator: 4,\r\n\t\t\t\t\tchannel: Math.max(0, Math.min(this._maxChannel, this._doc.selection.boxSelectionChannel + i)),\r\n\t\t\t\t\tpitch: 0,\r\n\t\t\t\t\tinvert: false,\r\n\t\t\t\t\tgenerateFadingNotes: false,\r\n\t\t\t\t});\r\n\t\t\t}\r\n\t\t} else {\r\n\t\t\t// Otherwise, load up the sequences generated previously. Keeping these\r\n\t\t\t// is probably a better experience for tweaking purposes.\r\n\t\t\tconst savedData: any = JSON.parse(String(window.localStorage.getItem(this._localStorageKey)));\r\n\t\t\tif (savedData != null) {\r\n\t\t\t\tconst rawSequences: any = savedData[\"sequences\"];\r\n\t\t\t\tif (rawSequences != null && Array.isArray(rawSequences)) {\r\n\t\t\t\t\tlet parsedSequences: Sequence[] = [];\r\n\t\t\t\t\tfor (let rawSequence of rawSequences) {\r\n\t\t\t\t\t\tparsedSequences.push({\r\n\t\t\t\t\t\t\tsteps: Math.max(this._minSteps, Math.min(this._maxSteps, rawSequence[\"steps\"] ?? this._doc.song.beatsPerBar)),\r\n\t\t\t\t\t\t\tpulses: Math.max(0, Math.min(this._maxSteps, rawSequence[\"pulses\"] ?? 5)),\r\n\t\t\t\t\t\t\trotation: Math.max(0, Math.min(this._maxSteps, rawSequence[\"rotation\"] ?? 0)),\r\n\t\t\t\t\t\t\tstepSizeNumerator: Math.max(1, Math.min(Config.partsPerBeat, rawSequence[\"stepSizeNumerator\"] ?? 1)),\r\n\t\t\t\t\t\t\tstepSizeDenominator: Math.max(1, Math.min(Config.partsPerBeat, rawSequence[\"stepSizeDenominator\"] ?? 4)),\r\n\t\t\t\t\t\t\tchannel: Math.max(0, Math.min(this._maxChannel, rawSequence[\"channel\"])),\r\n\t\t\t\t\t\t\tpitch: rawSequence[\"pitch\"] ?? 0,\r\n\t\t\t\t\t\t\tinvert: rawSequence[\"invert\"] ?? false,\r\n\t\t\t\t\t\t\tgenerateFadingNotes: rawSequence[\"generateFadingNotes\"] ?? false,\r\n\t\t\t\t\t\t});\r\n\t\t\t\t\t}\r\n\t\t\t\t\tthis._sequences = parsedSequences;\r\n\r\n\t\t\t\t\tif (this._sequences.length === 1) {\r\n\t\t\t\t\t\tconst sequence: Sequence = this._sequences[this._sequenceIndex];\r\n\t\t\t\t\t\tconst channel: number = Math.max(0, Math.min(this._maxChannel, this._doc.channel));\r\n\t\t\t\t\t\tsequence.channel = channel;\r\n\r\n\t\t\t\t\t\tconst maxPitch: number = this._doc.song.getChannelIsNoise(channel) ? (Config.drumCount - 1) : Config.maxPitch;\r\n\t\t\t\t\t\tsequence.pitch = Math.max(0, Math.min(maxPitch, sequence.pitch));\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\r\n\t\t\t\tthis._barAmount = Math.max(1, Math.min(this._barsAvailable, savedData[\"barAmount\"] ?? this._barAmount));\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tthis._generateAllSequences();\r\n\r\n\t\tthis._okayButton.addEventListener(\"click\", this._saveChanges);\r\n\t\tthis._cancelButton.addEventListener(\"click\", this._close);\r\n\t\tthis.container.addEventListener(\"keydown\", this._whenKeyPressed);\r\n\t\tthis._sequenceButtonContainer.addEventListener(\"click\", this._whenSelectSequence);\r\n\t\tthis._barPreviewGoToFirstButton.addEventListener(\"click\", this._whenBarPreviewGoToFirstClicked);\r\n\t\tthis._barPreviewGoBackButton.addEventListener(\"click\", this._whenBarPreviewGoBackClicked);\r\n\t\tthis._barPreviewGoForwardButton.addEventListener(\"click\", this._whenBarPreviewGoForwardClicked);\r\n\t\tthis._barPreviewGoToLastButton.addEventListener(\"click\", this._whenBarPreviewGoToLastClicked);\r\n\t\tthis._stepsStepper.addEventListener(\"change\", this._whenStepsChanges);\r\n\t\tthis._pulsesStepper.addEventListener(\"change\", this._whenPulsesChanges);\r\n\t\tthis._rotationStepper.addEventListener(\"change\", this._whenRotationChanges);\r\n\t\tthis._stepSizeNumeratorStepper.addEventListener(\"change\", this._whenStepSizeChanges);\r\n\t\tthis._stepSizeDenominatorStepper.addEventListener(\"change\", this._whenStepSizeChanges);\r\n\t\tthis._channelStepper.addEventListener(\"change\", this._whenChannelChanges);\r\n\t\tthis._pitchStepper.addEventListener(\"change\", this._whenPitchChanges);\r\n\t\tthis._barAmountStepper.addEventListener(\"change\", this._whenBarAmountChanges);\r\n\t\tthis._invertBox.addEventListener(\"change\", this._whenInvertChanges);\r\n\t\tthis._generateFadingNotesBox.addEventListener(\"change\", this._whenGenerateFadingNotesChanges);\r\n\t\tthis._extendUntilLoopButton.addEventListener(\"click\", this._whenExtendUntilLoopClicked);\r\n\r\n\t\tthis._initialRender();\r\n\t\tthis._render();\r\n\t}\r\n\r\n\tpublic cleanUp = (): void => {\r\n\t\tthis._okayButton.removeEventListener(\"click\", this._saveChanges);\r\n\t\tthis._cancelButton.removeEventListener(\"click\", this._close);\r\n\t\tthis.container.removeEventListener(\"keydown\", this._whenKeyPressed);\r\n\t\tthis._sequenceButtonContainer.removeEventListener(\"click\", this._whenSelectSequence);\r\n\t\tthis._barPreviewGoToFirstButton.removeEventListener(\"click\", this._whenBarPreviewGoToFirstClicked);\r\n\t\tthis._barPreviewGoBackButton.removeEventListener(\"click\", this._whenBarPreviewGoBackClicked);\r\n\t\tthis._barPreviewGoForwardButton.removeEventListener(\"click\", this._whenBarPreviewGoForwardClicked);\r\n\t\tthis._barPreviewGoToLastButton.removeEventListener(\"click\", this._whenBarPreviewGoToLastClicked);\r\n\t\tthis._stepsStepper.removeEventListener(\"change\", this._whenStepsChanges);\r\n\t\tthis._pulsesStepper.removeEventListener(\"change\", this._whenPulsesChanges);\r\n\t\tthis._rotationStepper.removeEventListener(\"change\", this._whenRotationChanges);\r\n\t\tthis._stepSizeNumeratorStepper.removeEventListener(\"change\", this._whenStepSizeChanges);\r\n\t\tthis._stepSizeDenominatorStepper.removeEventListener(\"change\", this._whenStepSizeChanges);\r\n\t\tthis._channelStepper.removeEventListener(\"change\", this._whenChannelChanges);\r\n\t\tthis._pitchStepper.removeEventListener(\"change\", this._whenPitchChanges);\r\n\t\tthis._barAmountStepper.removeEventListener(\"change\", this._whenBarAmountChanges);\r\n\t\tthis._invertBox.removeEventListener(\"change\", this._whenInvertChanges);\r\n\t\tthis._generateFadingNotesBox.removeEventListener(\"change\", this._whenGenerateFadingNotesChanges);\r\n\t\tthis._extendUntilLoopButton.removeEventListener(\"click\", this._whenExtendUntilLoopClicked);\r\n\t}\r\n\r\n\tprivate _close = (): void => {\r\n\t\tthis._doc.undo();\r\n\t}\r\n\r\n\tprivate _saveChanges = (): void => {\r\n\t\tthis._doc.prompt = null;\r\n\r\n\t\tconst group: ChangeGroup = new ChangeGroup();\r\n\r\n\t\tconst beatsPerBar: number = this._doc.song.beatsPerBar;\r\n\t\tconst partsPerBeat: number = Config.partsPerBeat;\r\n\t\tconst partsPerBar: number = partsPerBeat * beatsPerBar;\r\n\r\n\t\tconst firstBar: number = this._startBar;\r\n\t\tconst lastBar: number = firstBar + this._barAmount; // Exclusive.\r\n\r\n\t\tif (lastBar > this._doc.song.barCount) {\r\n\t\t\tconst existing: number = this._doc.song.barCount - firstBar;\r\n\t\t\tconst remaining: number = this._barAmount - existing;\r\n\t\t\tgroup.append(new ChangeInsertBars(this._doc, this._doc.song.barCount, remaining));\r\n\t\t}\r\n\r\n\t\ttype ResultingSequence = Note[];\r\n\t\ttype ResultingBar = ResultingSequence[];\r\n\t\ttype ResultingChannel = ResultingBar[];\r\n\t\tlet allNewNotesByChannel: Map<number, ResultingChannel> = new Map();\r\n\t\tlet pitchesToBeGenerated: Map<number, boolean> = new Map();\r\n\r\n\t\tfor (let bar: number = firstBar; bar < lastBar; bar++) {\r\n\t\t\t// `bar` is an \"absolute\" coordinate, but we really want 0 to\r\n\t\t\t// be our actual starting point regardless of whatever bar we\r\n\t\t\t// are truly on.\r\n\t\t\tconst relativeBar: number = bar - firstBar;\r\n\r\n\t\t\t// This is so that we can keep `step` counting up uninterrupted.\r\n\t\t\t// We can't really place anything before 0 or after `partsPerBar`, so we\r\n\t\t\t// need to make the note positions relative to the current bar.\r\n\t\t\tconst partOffset: number = relativeBar * partsPerBar;\r\n\r\n\t\t\tfor (let sequenceIndex: number = 0; sequenceIndex < this._sequences.length; sequenceIndex++) {\r\n\t\t\t\tconst sequence: Sequence = this._sequences[sequenceIndex];\r\n\t\t\t\tconst generatedSequence: number[] = this._generatedSequences[sequenceIndex];\r\n\t\t\t\tconst hasGeneratedSequence: boolean = generatedSequence.length > 0;\r\n\t\t\t\tif (!hasGeneratedSequence) {\r\n\t\t\t\t\tcontinue;\r\n\t\t\t\t}\r\n\t\t\t\tconst steps: number = sequence.steps;\r\n\t\t\t\tif (generatedSequence.length !== steps) {\r\n\t\t\t\t\tconsole.error(\"The size of the generated sequence and the specified number of steps it should take have diverged: generated\", generatedSequence.length, \"steps but expected\", steps);\r\n\t\t\t\t\tcontinue;\r\n\t\t\t\t}\r\n\t\t\t\tconst stepSize: number = sequence.stepSizeNumerator / sequence.stepSizeDenominator;\r\n\t\t\t\tconst pitch: number = sequence.pitch;\r\n\t\t\t\tconst channelIndex: number = sequence.channel;\r\n\t\t\t\tconst invert: boolean = sequence.invert;\r\n\t\t\t\tconst on: number = invert ? 0 : 1;\r\n\t\t\t\tconst generateFadingNotes: boolean = sequence.generateFadingNotes;\r\n\t\t\t\tpitchesToBeGenerated.set(pitch, true);\r\n\t\t\t\tlet resultingChannel: ResultingChannel | undefined = allNewNotesByChannel.get(channelIndex);\r\n\t\t\t\tif (resultingChannel == undefined) {\r\n\t\t\t\t\tresultingChannel = [];\r\n\t\t\t\t\tfor (let i: number = 0; i < this._barAmount; i++) {\r\n\t\t\t\t\t\tconst newResultingBar: ResultingBar = [];\r\n\t\t\t\t\t\tfor (let j: number = 0; j < this._sequences.length; j++) {\r\n\t\t\t\t\t\t\tconst newResultingSequence: ResultingSequence = [];\r\n\t\t\t\t\t\t\tnewResultingBar.push(newResultingSequence);\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\tresultingChannel.push(newResultingBar);\r\n\t\t\t\t\t}\r\n\t\t\t\t\tallNewNotesByChannel.set(channelIndex, resultingChannel);\r\n\t\t\t\t}\r\n\t\t\t\tconst resultingBar: ResultingBar = resultingChannel[relativeBar];\r\n\t\t\t\tlet resultingSequence: ResultingSequence = resultingBar[sequenceIndex];\r\n\t\t\t\tconst firstStep: number = Math.floor((beatsPerBar * relativeBar) / stepSize);\r\n\t\t\t\tconst lastStep: number = Math.ceil((beatsPerBar * (relativeBar + 1)) / stepSize); // Exclusive.\r\n\t\t\t\tfor (let step: number = firstStep; step < lastStep; step++) {\r\n\t\t\t\t\tlet continuesLastPattern: boolean = false;\r\n\t\t\t\t\tlet needToAdjustPins: boolean = false;\r\n\t\t\t\t\tconst rawStepPartStart: number = (\r\n\t\t\t\t\t\tMath.floor(step * partsPerBeat * stepSize) - partOffset\r\n\t\t\t\t\t);\r\n\t\t\t\t\tconst rawStepPartEnd: number = (\r\n\t\t\t\t\t\tMath.floor((step + 1) * partsPerBeat * stepSize) - partOffset\r\n\t\t\t\t\t);\r\n\t\t\t\t\tif (rawStepPartStart < 0) {\r\n\t\t\t\t\t\tcontinuesLastPattern = true;\r\n\t\t\t\t\t}\r\n\t\t\t\t\tif (continuesLastPattern || rawStepPartEnd > partsPerBar) {\r\n\t\t\t\t\t\tneedToAdjustPins = true;\r\n\t\t\t\t\t}\r\n\t\t\t\t\tconst stepPartStart: number = Math.max(0, Math.min(partsPerBar, rawStepPartStart));\r\n\t\t\t\t\tconst stepPartEnd: number = Math.max(0, Math.min(partsPerBar, rawStepPartEnd));\r\n\t\t\t\t\tif (generatedSequence[step % steps] === on) {\r\n\t\t\t\t\t\tconst note: Note = new Note(pitch, stepPartStart, stepPartEnd, Config.noteSizeMax, generateFadingNotes);\r\n\t\t\t\t\t\tif (continuesLastPattern) {\r\n\t\t\t\t\t\t\tnote.continuesLastPattern = true;\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\tif (needToAdjustPins && generateFadingNotes) {\r\n\t\t\t\t\t\t\tconst startRatio: number = (stepPartStart - rawStepPartStart) / (rawStepPartEnd - rawStepPartStart);\r\n\t\t\t\t\t\t\tconst startPinSize: number = Math.round(Config.noteSizeMax + (0 - Config.noteSizeMax) * startRatio);\r\n\t\t\t\t\t\t\tnote.pins[0].size = startPinSize;\r\n\t\t\t\t\t\t\tconst endRatio: number = (stepPartEnd - rawStepPartStart) / (rawStepPartEnd - rawStepPartStart);\r\n\t\t\t\t\t\t\tconst endPinSize: number = Math.round(Config.noteSizeMax + (0 - Config.noteSizeMax) * endRatio);\r\n\t\t\t\t\t\t\tnote.pins[1].size = endPinSize;\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\tresultingSequence.push(note);\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tfor (const [channelIndex, resultingChannel] of allNewNotesByChannel.entries()) {\r\n\t\t\tfor (let resultingBarIndex: number = 0; resultingBarIndex < resultingChannel.length; resultingBarIndex++) {\r\n\t\t\t\tconst resultingBar: ResultingBar = resultingChannel[resultingBarIndex];\r\n\r\n\t\t\t\tconst bar: number = resultingBarIndex + firstBar;\r\n\r\n\t\t\t\tlet oldNotes: Note[] = [];\r\n\t\t\t\tconst oldPattern: Pattern | null = this._doc.song.getPattern(channelIndex, bar);\r\n\t\t\t\tif (oldPattern != null) {\r\n\t\t\t\t\toldNotes = oldPattern.cloneNotes();\r\n\t\t\t\t}\r\n\r\n\t\t\t\tgroup.append(new ChangePatternNumbers(this._doc, 0, bar, channelIndex, 1, 1));\r\n\t\t\t\tgroup.append(new ChangeEnsurePatternExists(this._doc, channelIndex, bar));\r\n\r\n\t\t\t\tconst pattern: Pattern | null = this._doc.song.getPattern(channelIndex, bar);\r\n\t\t\t\tif (pattern == null) {\r\n\t\t\t\t\tthrow new Error(\"Couldn't create new pattern\");\r\n\t\t\t\t}\r\n\r\n\t\t\t\tlet merged: Note[] = [];\r\n\r\n\t\t\t\t// Clean the pitch lines that we will be adding notes to:\r\n\t\t\t\t// go through all the notes and remove the pitches we will add.\r\n\t\t\t\t//\r\n\t\t\t\t// If the resulting note is empty, get rid of it.\r\n\t\t\t\t//\r\n\t\t\t\t// This is optional and may be worth leaving out, especially if\r\n\t\t\t\t// this generator ever starts supporting multi-pitch sequences.\r\n\t\t\t\tfor (let oldNoteIndex: number = oldNotes.length - 1; oldNoteIndex >= 0; oldNoteIndex--) {\r\n\t\t\t\t\tconst oldNote: Note = oldNotes[oldNoteIndex];\r\n\t\t\t\t\tlet newPitches: number[] = [];\r\n\t\t\t\t\tfor (const oldPitch of oldNote.pitches) {\r\n\t\t\t\t\t\tif (!pitchesToBeGenerated.has(oldPitch)) {\r\n\t\t\t\t\t\t\tnewPitches.push(oldPitch);\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t\toldNote.pitches = newPitches;\r\n\t\t\t\t\tif (oldNote.pitches.length < 1) {\r\n\t\t\t\t\t\toldNotes.splice(oldNoteIndex, 1);\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\r\n\t\t\t\t// Explicitly mark the start and end points of every note as distinct\r\n\t\t\t\t// \"events\".\r\n\t\t\t\tinterface MergeableEvent {\r\n\t\t\t\t\tnoteType: \"old\" | \"new\";\r\n\t\t\t\t\teventType: \"start\" | \"end\";\r\n\t\t\t\t\tpart: number; // aka time\r\n\t\t\t\t\tnote: Note;\r\n\t\t\t\t}\r\n\t\t\t\tlet timeline: MergeableEvent[] = [];\r\n\t\t\t\tfor (const note of oldNotes) {\r\n\t\t\t\t\ttimeline.push({ noteType: \"old\", eventType: \"start\", part: note.start, note: note });\r\n\t\t\t\t\ttimeline.push({ noteType: \"old\", eventType: \"end\", part: note.end, note: note });\r\n\t\t\t\t}\r\n\t\t\t\tfor (const resultingSequence of resultingBar) {\r\n\t\t\t\t\tfor (const note of resultingSequence) {\r\n\t\t\t\t\t\ttimeline.push({ noteType: \"new\", eventType: \"start\", part: note.start, note: note });\r\n\t\t\t\t\t\ttimeline.push({ noteType: \"new\", eventType: \"end\", part: note.end, note: note });\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\r\n\t\t\t\t// Sort the events by time/part.\r\n\t\t\t\ttimeline.sort((a, b) => { return a.part - b.part; });\r\n\r\n\t\t\t\t// Group events that start/end at the same time.\r\n\t\t\t\tinterface MergeableEventGroup {\r\n\t\t\t\t\tpart: number; // aka time\r\n\t\t\t\t\tevents: MergeableEvent[];\r\n\t\t\t\t}\r\n\t\t\t\tlet eventGroups: MergeableEventGroup[] = [];\r\n\t\t\t\tlet currentEventGroup: MergeableEventGroup | null = null;\r\n\t\t\t\tfor (let event of timeline) {\r\n\t\t\t\t\tif (currentEventGroup == null) {\r\n\t\t\t\t\t\tcurrentEventGroup = { part: event.part, events: [event] };\r\n\t\t\t\t\t} else {\r\n\t\t\t\t\t\tif (event.part !== currentEventGroup.part) {\r\n\t\t\t\t\t\t\teventGroups.push(currentEventGroup);\r\n\t\t\t\t\t\t\tcurrentEventGroup = { part: event.part, events: [event] };\r\n\t\t\t\t\t\t} else {\r\n\t\t\t\t\t\t\tcurrentEventGroup.events.push(event);\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t\tif (currentEventGroup != null) eventGroups.push(currentEventGroup);\r\n\r\n\t\t\t\t// Walk through the event groups.\r\n\t\t\t\tinterface MergeableNote {\r\n\t\t\t\t\tnoteType: \"old\" | \"new\";\r\n\t\t\t\t\tnote: Note;\r\n\t\t\t\t}\r\n\t\t\t\tlet heldNotes: MergeableNote[] = [];\r\n\t\t\t\tlet mergedStartPart: number = 0;\r\n\t\t\t\tlet mergedEndPart: number = 0;\r\n\t\t\t\tlet notesToDrop: Set<Note> = new Set();\r\n\t\t\t\tlet notesToAdd: MergeableNote[] = [];\r\n\t\t\t\tlet setOfPitchesToCommit: Set<number> = new Set();\r\n\t\t\t\tfor (const eventGroup of eventGroups) {\r\n\t\t\t\t\tif (heldNotes.length === 0) {\r\n\t\t\t\t\t\t// There's no notes currently held, so we should be at the start of\r\n\t\t\t\t\t\t// some notes now.\r\n\t\t\t\t\t\tfor (const event of eventGroup.events) {\r\n\t\t\t\t\t\t\tif (event.eventType === \"end\") {\r\n\t\t\t\t\t\t\t\tthrow new Error(\"Got note end earlier than expected\");\r\n\t\t\t\t\t\t\t} else if (event.eventType === \"start\") {\r\n\t\t\t\t\t\t\t\theldNotes.push({ noteType: event.noteType, note: event.note });\r\n\t\t\t\t\t\t\t} else {\r\n\t\t\t\t\t\t\t\tthrow new Error(\"Unknown mergeable event type\");\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\tmergedStartPart = eventGroup.part;\r\n\t\t\t\t\t} else {\r\n\t\t\t\t\t\t// We have at least one note held.\r\n\t\t\t\t\t\tfor (const event of eventGroup.events) {\r\n\t\t\t\t\t\t\tif (event.eventType === \"end\") {\r\n\t\t\t\t\t\t\t\tnotesToDrop.add(event.note);\r\n\t\t\t\t\t\t\t} else if (event.eventType === \"start\") {\r\n\t\t\t\t\t\t\t\tnotesToAdd.push({ noteType: event.noteType, note: event.note });\r\n\t\t\t\t\t\t\t} else {\r\n\t\t\t\t\t\t\t\tthrow new Error(\"Unknown mergeable event type\");\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\tmergedEndPart = eventGroup.part;\r\n\t\t\t\t\t\tconst mergedNote: Note = new Note(0, mergedStartPart, mergedEndPart, Config.noteSizeMax, false);\r\n\t\t\t\t\t\tlet continuesLastPattern: boolean = false;\r\n\t\t\t\t\t\tlet theNewNote: Note | null = null;\r\n\t\t\t\t\t\tlet theOldNote: Note | null = null;\r\n\t\t\t\t\t\tfor (const mergeableNote of heldNotes) {\r\n\t\t\t\t\t\t\tconst note: Note = mergeableNote.note;\r\n\t\t\t\t\t\t\tfor (const candidatePitch of note.pitches) {\r\n\t\t\t\t\t\t\t\tsetOfPitchesToCommit.add(candidatePitch);\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\tif (note.continuesLastPattern) continuesLastPattern = true;\r\n\t\t\t\t\t\t\tif (mergeableNote.noteType === \"new\") {\r\n\t\t\t\t\t\t\t\t// If there's two or more new notes being held currently, we\r\n\t\t\t\t\t\t\t\t// should pick the shortest most recent one.\r\n\t\t\t\t\t\t\t\tif (\r\n\t\t\t\t\t\t\t\t\ttheNewNote == null\r\n\t\t\t\t\t\t\t\t\t|| mergeableNote.note.start > theNewNote.start\r\n\t\t\t\t\t\t\t\t\t|| mergeableNote.note.end < theNewNote.end\r\n\t\t\t\t\t\t\t\t) {\r\n\t\t\t\t\t\t\t\t\ttheNewNote = mergeableNote.note;\r\n\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t} else if (mergeableNote.noteType === \"old\") {\r\n\t\t\t\t\t\t\t\tif (theOldNote != null) throw new Error(\"Somehow got more than one old note\");\r\n\t\t\t\t\t\t\t\ttheOldNote = mergeableNote.note;\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\tconst pitchesToCommit: number[] = Array.from(setOfPitchesToCommit).sort((a, b) => a - b);\r\n\t\t\t\t\t\tmergedNote.pitches = pitchesToCommit;\r\n\t\t\t\t\t\tmergedNote.continuesLastPattern = continuesLastPattern;\r\n\t\t\t\t\t\tif (theNewNote != null) {\r\n\t\t\t\t\t\t\t// Use the pins of the new note selected. We have to find the\r\n\t\t\t\t\t\t\t// intersection of the merged note sides with the fadeout line.\r\n\t\t\t\t\t\t\tconst theNewNoteStartPart: number = theNewNote.start;\r\n\t\t\t\t\t\t\tconst theNewNoteEndPart: number = theNewNote.end;\r\n\t\t\t\t\t\t\tconst startSize: number = theNewNote.pins[0].size;\r\n\t\t\t\t\t\t\tconst endSize: number = theNewNote.pins[1].size;\r\n\t\t\t\t\t\t\tconst startRatio: number = (mergedStartPart - theNewNoteStartPart) / (theNewNoteEndPart - theNewNoteStartPart);\r\n\t\t\t\t\t\t\tconst startPinSize: number = Math.round(startSize + (endSize - startSize) * startRatio);\r\n\t\t\t\t\t\t\tmergedNote.pins[0].size = startPinSize;\r\n\t\t\t\t\t\t\tconst endRatio: number = (mergedEndPart - theNewNoteStartPart) / (theNewNoteEndPart - theNewNoteStartPart);\r\n\t\t\t\t\t\t\tconst endPinSize: number = Math.round(startSize + (endSize - startSize) * endRatio);\r\n\t\t\t\t\t\t\tmergedNote.pins[1].size = endPinSize;\r\n\t\t\t\t\t\t} else if (theOldNote != null) {\r\n\t\t\t\t\t\t\t// Use the pins of the old note.\r\n\t\t\t\t\t\t\t// We have to find the pins that are within the note sides.\r\n\t\t\t\t\t\t\t// If a pin at one of the sides lands exactly on that side,\r\n\t\t\t\t\t\t\t// assign the value of that pin as is. Otherwise, find the\r\n\t\t\t\t\t\t\t// adjacent pin in the relevant direction, and find the point on\r\n\t\t\t\t\t\t\t// the line between those two that intersects with the side we're\r\n\t\t\t\t\t\t\t// looking at.\r\n\t\t\t\t\t\t\tconst mergedNoteLength: number = mergedEndPart - mergedStartPart;\r\n\t\t\t\t\t\t\tconst mergedStartRelativeToOldStart: number = mergedStartPart - theOldNote.start;\r\n\t\t\t\t\t\t\tconst mergedEndRelativeToOldStart: number = mergedEndPart - theOldNote.start;\r\n\t\t\t\t\t\t\tlet newPins: NotePin[] = [];\r\n\t\t\t\t\t\t\tlet firstVisibleOldPinIndex: number = -1;\r\n\t\t\t\t\t\t\tlet lastVisibleOldPinIndex: number = -1; // Inclusive.\r\n\t\t\t\t\t\t\tlet leftAdjacentOldPinIndex: number = 0;\r\n\t\t\t\t\t\t\tlet rightAdjacentOldPinIndex: number = theOldNote.pins.length - 1;\r\n\t\t\t\t\t\t\tfor (let oldPinIndex = 0; oldPinIndex < theOldNote.pins.length; oldPinIndex++) {\r\n\t\t\t\t\t\t\t\tconst oldPin: NotePin = theOldNote.pins[oldPinIndex];\r\n\t\t\t\t\t\t\t\tif (oldPin.time < mergedStartRelativeToOldStart) {\r\n\t\t\t\t\t\t\t\t\tleftAdjacentOldPinIndex = oldPinIndex;\r\n\t\t\t\t\t\t\t\t} else if (oldPin.time >= mergedStartRelativeToOldStart && oldPin.time <= mergedEndRelativeToOldStart) {\r\n\t\t\t\t\t\t\t\t\tif (firstVisibleOldPinIndex === -1) {\r\n\t\t\t\t\t\t\t\t\t\tfirstVisibleOldPinIndex = oldPinIndex;\r\n\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t\tlastVisibleOldPinIndex = oldPinIndex;\r\n\t\t\t\t\t\t\t\t} else if (oldPin.time > mergedEndRelativeToOldStart) {\r\n\t\t\t\t\t\t\t\t\trightAdjacentOldPinIndex = oldPinIndex;\r\n\t\t\t\t\t\t\t\t\t// We want the first pin to our right.\r\n\t\t\t\t\t\t\t\t\tbreak;\r\n\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\tif (firstVisibleOldPinIndex !== -1) {\r\n\t\t\t\t\t\t\t\t// Note that `lastVisibleOldPinIndex` should also be not equal\r\n\t\t\t\t\t\t\t\t// to -1 here.\r\n\t\t\t\t\t\t\t\tfor (let visibleOldPinIndex: number = firstVisibleOldPinIndex; visibleOldPinIndex <= lastVisibleOldPinIndex; visibleOldPinIndex++) {\r\n\t\t\t\t\t\t\t\t\tconst visibleOldPin: NotePin = theOldNote.pins[visibleOldPinIndex];\r\n\t\t\t\t\t\t\t\t\tconst correctedTime: number = visibleOldPin.time - mergedStartRelativeToOldStart;\r\n\t\t\t\t\t\t\t\t\tnewPins.push(makeNotePin(0, correctedTime, visibleOldPin.size));\r\n\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t// We should have at least one pin here.\r\n\t\t\t\t\t\t\t\tconst firstNewPin: NotePin = newPins[0];\r\n\t\t\t\t\t\t\t\tconst lastNewPin: NotePin = newPins[newPins.length - 1];\r\n\t\t\t\t\t\t\t\tif (firstNewPin.time !== 0) {\r\n\t\t\t\t\t\t\t\t\t// No pin landed at the start of this new note, so let's\r\n\t\t\t\t\t\t\t\t\t// split the line between it and the left adjacent old pin.\r\n\t\t\t\t\t\t\t\t\tconst leftAdjacentOldPin: NotePin = theOldNote.pins[leftAdjacentOldPinIndex];\r\n\t\t\t\t\t\t\t\t\tconst lineMiddleTime: number = mergedStartRelativeToOldStart - leftAdjacentOldPin.time;\r\n\t\t\t\t\t\t\t\t\tconst lineEndTime: number = lineMiddleTime + firstNewPin.time;\r\n\t\t\t\t\t\t\t\t\tconst ratio: number = lineMiddleTime / lineEndTime;\r\n\t\t\t\t\t\t\t\t\tconst newSize: number = Math.round(leftAdjacentOldPin.size + (firstNewPin.size - leftAdjacentOldPin.size) * ratio);\r\n\t\t\t\t\t\t\t\t\tnewPins.unshift(makeNotePin(0, 0, newSize));\r\n\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\tif (lastNewPin.time !== mergedNoteLength) {\r\n\t\t\t\t\t\t\t\t\t// No pin landed at the end of this new note, so let's\r\n\t\t\t\t\t\t\t\t\t// split the line between it and the right adjacent old pin.\r\n\t\t\t\t\t\t\t\t\tconst rightAdjacentOldPin: NotePin = theOldNote.pins[rightAdjacentOldPinIndex];\r\n\t\t\t\t\t\t\t\t\tconst lineMiddleTime: number = mergedEndRelativeToOldStart - (lastNewPin.time + mergedStartRelativeToOldStart);\r\n\t\t\t\t\t\t\t\t\tconst lineEndTime: number = lineMiddleTime + (rightAdjacentOldPin.time - mergedEndRelativeToOldStart);\r\n\t\t\t\t\t\t\t\t\tconst ratio: number = lineMiddleTime / lineEndTime;\r\n\t\t\t\t\t\t\t\t\tconst newSize: number = Math.round(lastNewPin.size + (rightAdjacentOldPin.size - lastNewPin.size) * ratio);\r\n\t\t\t\t\t\t\t\t\tnewPins.push(makeNotePin(0, mergedNoteLength, newSize));\r\n\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t} else {\r\n\t\t\t\t\t\t\t\t// No visible pins.\r\n\t\t\t\t\t\t\t\tconst leftAdjacentOldPin: NotePin = theOldNote.pins[leftAdjacentOldPinIndex];\r\n\t\t\t\t\t\t\t\tconst rightAdjacentOldPin: NotePin = theOldNote.pins[rightAdjacentOldPinIndex];\r\n\t\t\t\t\t\t\t\tconst lineFirstIntersectionTime: number = mergedStartRelativeToOldStart - leftAdjacentOldPin.time;\r\n\t\t\t\t\t\t\t\tconst lineLastIntersectionTime: number = mergedEndRelativeToOldStart - leftAdjacentOldPin.time;\r\n\t\t\t\t\t\t\t\tconst lineLength: number = rightAdjacentOldPin.time - leftAdjacentOldPin.time;\r\n\t\t\t\t\t\t\t\tconst firstRatio: number = lineFirstIntersectionTime / lineLength;\r\n\t\t\t\t\t\t\t\tconst lastRatio: number = lineLastIntersectionTime / lineLength;\r\n\t\t\t\t\t\t\t\tconst firstNewSize: number = Math.round(leftAdjacentOldPin.size + (rightAdjacentOldPin.size - leftAdjacentOldPin.size) * firstRatio);\r\n\t\t\t\t\t\t\t\tconst lastNewSize: number = Math.round(leftAdjacentOldPin.size + (rightAdjacentOldPin.size - leftAdjacentOldPin.size) * lastRatio);\r\n\t\t\t\t\t\t\t\tnewPins.push(makeNotePin(0, 0, firstNewSize));\r\n\t\t\t\t\t\t\t\tnewPins.push(makeNotePin(0, mergedNoteLength, lastNewSize));\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\tmergedNote.pins = newPins;\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\tif (mergedNote.pins.length < 2) {\r\n\t\t\t\t\t\t\tthrow new Error(\"Ended up generating note with less than two pins\");\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\tif (mergedNote.pitches.length < 1) {\r\n\t\t\t\t\t\t\t// This is particularly important to check, because otherwise\r\n\t\t\t\t\t\t\t// an infinite loop will start somewhere if any note has no\r\n\t\t\t\t\t\t\t// pitches.\r\n\t\t\t\t\t\t\tthrow new Error(\"Ended up generating note with no pitches\");\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\tmerged.push(mergedNote);\r\n\t\t\t\t\t\tfor (let note of notesToDrop) {\r\n\t\t\t\t\t\t\tfor (let heldNoteIndex = heldNotes.length - 1; heldNoteIndex >= 0; heldNoteIndex--) {\r\n\t\t\t\t\t\t\t\tlet heldNote: Note = heldNotes[heldNoteIndex].note;\r\n\t\t\t\t\t\t\t\tif (note === heldNote) {\r\n\t\t\t\t\t\t\t\t\theldNotes.splice(heldNoteIndex, 1);\r\n\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\tfor (let note of notesToAdd) heldNotes.push(note);\r\n\t\t\t\t\t\tsetOfPitchesToCommit.clear();\r\n\t\t\t\t\t\tnotesToDrop.clear();\r\n\t\t\t\t\t\twhile (notesToAdd.length > 0) notesToAdd.pop();\r\n\t\t\t\t\t\tmergedStartPart = mergedEndPart;\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\r\n\t\t\t\tpattern.notes = [];\r\n\t\t\t\tfor (let noteIndex = 0; noteIndex < merged.length; noteIndex++) {\r\n\t\t\t\t\tconst note: Note = merged[noteIndex];\r\n\t\t\t\t\tgroup.append(new ChangeNoteAdded(this._doc, pattern, note, noteIndex));\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tthis._doc.record(group, true);\r\n\r\n\t\twindow.localStorage.setItem(this._localStorageKey, JSON.stringify({\r\n\t\t\t\"sequences\": this._sequences,\r\n\t\t\t\"barAmount\": this._barAmount,\r\n\t\t}));\r\n\t}\r\n\r\n\tprivate _generateAllSequences = (): void => {\r\n\t\tthis._generatedSequences = [];\r\n\t\tfor (let i: number = 0; i < this._sequences.length; i++) {\r\n\t\t\tthis._generatedSequences.push([]);\r\n\t\t\tthis._generateSequence(i);\r\n\t\t}\r\n\t}\r\n\r\n\tprivate _generateSequence = (index: number): void => {\r\n\t\tconst sequence: Sequence = this._sequences[index];\r\n\t\tthis._generatedSequences[index] = generateEuclideanRhythm(\r\n\t\t\tsequence.steps, sequence.pulses, sequence.rotation\r\n\t\t);\r\n\t}\r\n\r\n\tprivate _generateCurrentSequence = (): void => {\r\n\t\tthis._generateSequence(this._sequenceIndex);\r\n\t}\r\n\r\n\tprivate _whenKeyPressed = (event: KeyboardEvent): void => {\r\n\t\tif ((<Element>event.target).tagName != \"BUTTON\" && event.keyCode == 13) {\r\n\t\t\t// Enter key\r\n\t\t\tthis._saveChanges();\r\n\t\t}\r\n\t}\r\n\r\n\tprivate _whenSelectSequence = (event: MouseEvent): void => {\r\n\t\tif (event.target == this._sequenceAddButton) {\r\n\t\t\tconst currentSequence: Sequence = this._sequences[this._sequenceIndex];\r\n\t\t\tthis._sequences.push({\r\n\t\t\t\tsteps: currentSequence.steps,\r\n\t\t\t\tpulses: currentSequence.pulses,\r\n\t\t\t\trotation: currentSequence.rotation,\r\n\t\t\t\tstepSizeNumerator: currentSequence.stepSizeNumerator,\r\n\t\t\t\tstepSizeDenominator: currentSequence.stepSizeDenominator,\r\n\t\t\t\tchannel: currentSequence.channel,\r\n\t\t\t\tpitch: currentSequence.pitch,\r\n\t\t\t\tinvert: currentSequence.invert,\r\n\t\t\t\tgenerateFadingNotes: currentSequence.generateFadingNotes,\r\n\t\t\t});\r\n\t\t\tthis._sequenceIndex = this._sequences.length - 1;\r\n\r\n\t\t\tthis._generateCurrentSequence();\r\n\r\n\t\t\tthis._refreshSequenceWidgets();\r\n\t\t\tthis._reconfigurePulsesStepper();\r\n\t\t\tthis._reconfigurePitchStepper();\r\n\t\t\tthis._render();\r\n\t\t} else if (event.target == this._sequenceRemoveButton) {\r\n\t\t\tthis._sequences.splice(this._sequenceIndex, 1);\r\n\t\t\tthis._generatedSequences.splice(this._sequenceIndex, 1);\r\n\t\t\tthis._sequenceIndex = Math.max(0, Math.min(this._sequences.length - 1, this._sequenceIndex));\r\n\r\n\t\t\tthis._refreshSequenceWidgets();\r\n\t\t\tthis._reconfigurePulsesStepper();\r\n\t\t\tthis._reconfigurePitchStepper();\r\n\t\t\tthis._render();\r\n\t\t} else {\r\n\t\t\tconst index: number = this._sequenceButtons.indexOf(<any>event.target);\r\n\t\t\tif (index != -1) {\r\n\t\t\t\tthis._sequenceIndex = index;\r\n\r\n\t\t\t\tthis._refreshSequenceWidgets();\r\n\t\t\t\tthis._reconfigurePulsesStepper();\r\n\t\t\t\tthis._reconfigurePitchStepper();\r\n\t\t\t\tthis._render();\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\r\n\tprivate _whenBarPreviewGoToFirstClicked = (event: Event): void => {\r\n\t\tthis._barPreviewBarIndex = this._startBar;\r\n\r\n\t\tthis._renderBarPreview();\r\n\t\tthis._renderLabel();\r\n\t}\r\n\r\n\tprivate _whenBarPreviewGoBackClicked = (event: Event): void => {\r\n\t\tthis._barPreviewBarIndex = this._barPreviewBarIndex - 1;\r\n\t\tif (this._barPreviewBarIndex < this._startBar) {\r\n\t\t\t// Wrap around.\r\n\t\t\tthis._barPreviewBarIndex += this._barAmount;\r\n\t\t}\r\n\r\n\t\tthis._renderBarPreview();\r\n\t\tthis._renderLabel();\r\n\t}\r\n\r\n\tprivate _whenBarPreviewGoForwardClicked = (event: Event): void => {\r\n\t\tthis._barPreviewBarIndex = this._barPreviewBarIndex + 1;\r\n\t\tconst lastBar: number = this._startBar + this._barAmount; // Exclusive.\r\n\t\tif (this._barPreviewBarIndex >= lastBar) {\r\n\t\t\t// Wrap around.\r\n\t\t\tthis._barPreviewBarIndex -= this._barAmount;\r\n\t\t}\r\n\r\n\t\tthis._renderBarPreview();\r\n\t\tthis._renderLabel();\r\n\t}\r\n\r\n\tprivate _whenBarPreviewGoToLastClicked = (event: Event): void => {\r\n\t\tconst firstBar: number = this._startBar;\r\n\t\tconst lastBar: number = firstBar + this._barAmount; // Exclusive.\r\n\t\tthis._barPreviewBarIndex = lastBar - 1;\r\n\r\n\t\tthis._renderBarPreview();\r\n\t\tthis._renderLabel();\r\n\t}\r\n\r\n\tprivate _whenInvertChanges = (event: Event): void => {\r\n\t\tconst sequence: Sequence = this._sequences[this._sequenceIndex];\r\n\t\tconst invert: boolean = this._invertBox.checked;\r\n\r\n\t\tsequence.invert = invert;\r\n\r\n\t\tthis._renderClock();\r\n\t\tthis._renderBarPreview();\r\n\t}\r\n\r\n\tprivate _whenGenerateFadingNotesChanges = (event: Event): void => {\r\n\t\tconst sequence: Sequence = this._sequences[this._sequenceIndex];\r\n\t\tconst generateFadingNotes: boolean = this._generateFadingNotesBox.checked;\r\n\r\n\t\tsequence.generateFadingNotes = generateFadingNotes;\r\n\r\n\t\tthis._renderBarPreview();\r\n\t}\r\n\r\n\tprivate _whenExtendUntilLoopClicked = (event: Event): void => {\r\n\t\tconst beatsPerBar: number = this._doc.song.beatsPerBar;\r\n\t\tconst beatsPerBarFraction: Fraction = [beatsPerBar, 1];\r\n\t\tconst barAmountFraction: Fraction = fractionDiv(\r\n\t\t\tthis._sequences.reduce((acc: Fraction, seq: Sequence): Fraction => {\r\n\t\t\t\tconst steps: Fraction = [seq.steps, 1];\r\n\t\t\t\tconst stepSize: Fraction = fraction(seq.stepSizeNumerator, seq.stepSizeDenominator);\r\n\t\t\t\tconst total: Fraction = fractionMul(steps, stepSize);\r\n\t\t\t\treturn fractionLCM(acc, fractionLCM(total, beatsPerBarFraction));\r\n\t\t\t}, [1, 1]),\r\n\t\t\tbeatsPerBarFraction\r\n\t\t);\r\n\t\tconst barAmount: number = barAmountFraction[0];\r\n\t\tthis._barAmount = Math.max(1, Math.min(this._barsAvailable, barAmount));\r\n\r\n\t\tconst firstBar: number = this._startBar;\r\n\t\tconst lastBar: number = this._startBar + this._barAmount; // Exclusive.\r\n\t\tthis._barPreviewBarIndex = Math.max(firstBar, Math.min(lastBar - 1, this._barPreviewBarIndex));\r\n\r\n\t\tthis._barAmountStepper.value = this._barAmount + \"\";\r\n\t\tthis._renderBarPreview();\r\n\t\tthis._renderLabel();\r\n\t}\r\n\r\n\tprivate _whenStepsChanges = (event: Event): void => {\r\n\t\tconst steps: number = Math.max(this._minSteps, Math.min(this._maxSteps, +this._stepsStepper.value));\r\n\t\tconst sequence: Sequence = this._sequences[this._sequenceIndex];\r\n\t\tsequence.steps = steps;\r\n\r\n\t\tthis._stepsStepper.value = steps + \"\";\r\n\t\tthis._reconfigurePulsesStepper();\r\n\t\tthis._generateCurrentSequence();\r\n\r\n\t\tthis._render();\r\n\t}\r\n\r\n\tprivate _whenPulsesChanges = (event: Event): void => {\r\n\t\tconst sequence: Sequence = this._sequences[this._sequenceIndex];\r\n\t\tconst pulses: number = Math.max(0, Math.min(sequence.steps, +this._pulsesStepper.value));\r\n\t\tsequence.pulses = pulses;\r\n\r\n\t\tthis._pulsesStepper.value = pulses + \"\";\r\n\t\tthis._generateCurrentSequence();\r\n\r\n\t\tthis._render();\r\n\t}\r\n\r\n\tprivate _whenRotationChanges = (event: Event): void => {\r\n\t\tconst rotation: number = Math.max(0, Math.min(this._maxSteps, +this._rotationStepper.value));\r\n\t\tconst sequence: Sequence = this._sequences[this._sequenceIndex];\r\n\t\tsequence.rotation = rotation;\r\n\r\n\t\tthis._rotationStepper.value = rotation + \"\";\r\n\t\tthis._generateCurrentSequence();\r\n\r\n\t\tthis._render();\r\n\t}\r\n\r\n\tprivate _whenStepSizeChanges = (event: Event): void => {\r\n\t\tconst numerator: number = Math.max(1, Math.min(Config.partsPerBeat, +this._stepSizeNumeratorStepper.value));\r\n\t\tconst denominator: number = Math.max(1, Math.min(Config.partsPerBeat, +this._stepSizeDenominatorStepper.value));\r\n\t\tconst sequence: Sequence = this._sequences[this._sequenceIndex];\r\n\t\tsequence.stepSizeNumerator = numerator;\r\n\t\tsequence.stepSizeDenominator = denominator;\r\n\r\n\t\tthis._stepSizeNumeratorStepper.value = numerator + \"\";\r\n\t\tthis._stepSizeDenominatorStepper.value = denominator + \"\";\r\n\t\tthis._renderBarPreview();\r\n\t}\r\n\r\n\tprivate _whenPitchChanges = (event: Event): void => {\r\n\t\tconst sequence: Sequence = this._sequences[this._sequenceIndex];\r\n\t\tconst maxPitch: number = this._doc.song.getChannelIsNoise(sequence.channel) ? (Config.drumCount - 1) : Config.maxPitch;\r\n\t\tconst pitch: number = Math.max(0, Math.min(maxPitch, +this._pitchStepper.value));\r\n\t\tsequence.pitch = pitch;\r\n\r\n\t\tthis._pitchStepper.value = pitch + \"\";\r\n\t\tthis._renderLabel();\r\n\t}\r\n\r\n\tprivate _whenChannelChanges = (event: Event): void => {\r\n\t\tconst channel: number = Math.max(0, Math.min(this._maxChannel, (+this._channelStepper.value) - 1));\r\n\t\tconst sequence: Sequence = this._sequences[this._sequenceIndex];\r\n\t\tsequence.channel = channel;\r\n\r\n\t\tthis._channelStepper.value = (channel + 1) + \"\";\r\n\t\tthis._reconfigurePitchStepper();\r\n\t\tthis._render();\r\n\t}\r\n\r\n\tprivate _whenBarAmountChanges = (event: Event): void => {\r\n\t\tconst barAmount: number = Math.max(1, Math.min(this._barsAvailable, +this._barAmountStepper.value));\r\n\t\tthis._barAmount = barAmount;\r\n\r\n\t\tconst firstBar: number = this._startBar;\r\n\t\tconst lastBar: number = this._startBar + this._barAmount; // Exclusive.\r\n\t\tthis._barPreviewBarIndex = Math.max(firstBar, Math.min(lastBar - 1, this._barPreviewBarIndex));\r\n\r\n\t\tthis._barAmountStepper.value = barAmount + \"\";\r\n\t\tthis._renderBarPreview();\r\n\t\tthis._renderLabel();\r\n\t}\r\n\r\n\tprivate _initialRender = (): void => {\r\n\t\t// Render bar preview background.\r\n\t\tconst beatsPerBar: number = this._doc.song.beatsPerBar;\r\n\r\n\t\tconst color: string = ColorConfig.pitchBackground;\r\n\r\n\t\tconst container: SVGSVGElement = this._barPreviewBackground;\r\n\t\tconst padding: number = 1;\r\n\t\tconst beatWidth: number = this._barPreviewWidth / beatsPerBar;\r\n\t\tconst beatHeight: number = this._barPreviewHeight;\r\n\r\n\t\tfor (let beat: number = 0; beat < beatsPerBar; beat++) {\r\n\t\t\tconst x: number = beat * beatWidth + padding;\r\n\t\t\tconst y: number = padding;\r\n\t\t\tconst w: number = beatWidth - padding * 2;\r\n\t\t\tconst h: number = beatHeight - padding * 2;\r\n\t\t\tconst beatElement: SVGRectElement = SVG.rect({\r\n\t\t\t\tx: x,\r\n\t\t\t\ty: y,\r\n\t\t\t\twidth: w,\r\n\t\t\t\theight: h,\r\n\t\t\t\tstyle: `fill: ${color};`,\r\n\t\t\t});\r\n\t\t\tcontainer.appendChild(beatElement);\r\n\t\t}\r\n\r\n\t\t// Show sequence configuration.\r\n\t\tthis._refreshSequenceWidgets();\r\n\t\tthis._reconfigurePitchStepper();\r\n\t\tthis._reconfigurePulsesStepper();\r\n\t}\r\n\r\n\tprivate _refreshSequenceWidgets = (): void => {\r\n\t\tconst sequence: Sequence = this._sequences[this._sequenceIndex];\r\n\t\tthis._stepsStepper.value = sequence.steps + \"\";\r\n\t\tthis._pulsesStepper.value = sequence.pulses + \"\";\r\n\t\tthis._rotationStepper.value = sequence.rotation + \"\";\r\n\t\tthis._stepSizeNumeratorStepper.value = sequence.stepSizeNumerator + \"\";\r\n\t\tthis._stepSizeDenominatorStepper.value = sequence.stepSizeDenominator + \"\";\r\n\t\tthis._channelStepper.value = (sequence.channel + 1) + \"\";\r\n\t\tthis._pitchStepper.value = sequence.pitch + \"\";\r\n\t\tthis._invertBox.checked = sequence.invert;\r\n\t\tthis._generateFadingNotesBox.checked = sequence.generateFadingNotes;\r\n\t\tthis._barAmountStepper.value = this._barAmount + \"\";\r\n\t}\r\n\r\n\tprivate _reconfigurePitchStepper = (): void => {\r\n\t\tconst sequence: Sequence = this._sequences[this._sequenceIndex];\r\n\t\tconst channel: number = sequence.channel;\r\n\t\tconst maxPitch: number = this._doc.song.getChannelIsNoise(channel) ? (Config.drumCount - 1) : Config.maxPitch;\r\n\t\tthis._pitchStepper.value = Math.max(0, Math.min(maxPitch, +this._pitchStepper.value)) + \"\";\r\n\t\tthis._pitchStepper.max = maxPitch + \"\";\r\n\r\n\t\tsequence.pitch = +this._pitchStepper.value;\r\n\t}\r\n\r\n\tprivate _reconfigurePulsesStepper = (): void => {\r\n\t\tconst sequence: Sequence = this._sequences[this._sequenceIndex];\r\n\t\tconst steps: number = sequence.steps;\r\n\t\tthis._pulsesStepper.value = Math.max(0, Math.min(steps, +this._pulsesStepper.value)) + \"\";\r\n\t\tthis._pulsesStepper.max = steps + \"\";\r\n\r\n\t\tsequence.pulses = +this._pulsesStepper.value;\r\n\t}\r\n\r\n\tprivate _render = (): void => {\r\n\t\tthis._renderClock();\r\n\t\tthis._renderBarPreview();\r\n\t\tthis._renderLabel();\r\n\t\tthis._renderSequenceButtons();\r\n\t}\r\n\r\n\tprivate _renderSequenceButtons = (): void => {\r\n\t\tconst container: HTMLDivElement = this._sequenceButtonContainer;\r\n\r\n\t\twhile (this._sequenceButtons.length < this._sequences.length) {\r\n\t\t\tconst sequenceButton: HTMLButtonElement = button({ class: \"no-underline\" },\r\n\t\t\t\t(this._sequenceButtons.length + 1) + \"\"\r\n\t\t\t);\r\n\t\t\tthis._sequenceButtons.push(sequenceButton);\r\n\t\t\tcontainer.insertBefore(sequenceButton, this._sequenceRemoveButton);\r\n\t\t}\r\n\t\tfor (let i: number = this._renderedSequenceCount; i < this._sequences.length; i++) {\r\n\t\t\tconst sequenceButton: HTMLButtonElement = this._sequenceButtons[i];\r\n\t\t\tsequenceButton.style.display = \"\";\r\n\t\t}\r\n\t\tfor (let i: number = this._sequences.length; i < this._renderedSequenceCount; i++) {\r\n\t\t\tthis._sequenceButtons[i].style.display = \"none\";\r\n\t\t}\r\n\t\tthis._renderedSequenceCount = this._sequences.length;\r\n\t\twhile (this._sequenceButtons.length > this._maxSequences) {\r\n\t\t\tcontainer.removeChild(this._sequenceButtons.pop()!);\r\n\t\t}\r\n\t\tthis._sequenceRemoveButton.style.display = (this._sequences.length > 1) ? \"\" : \"none\";\r\n\t\tthis._sequenceAddButton.style.display = (this._sequences.length < this._maxSequences) ? \"\" : \"none\";\r\n\t\tif (this._sequences.length < this._maxSequences) {\r\n\t\t\tthis._sequenceRemoveButton.classList.remove(\"last-button\");\r\n\t\t} else {\r\n\t\t\tthis._sequenceRemoveButton.classList.add(\"last-button\");\r\n\t\t}\r\n\t\tif (this._highlightedSequenceIndex != this._sequenceIndex) {\r\n\t\t\tconst oldButton: HTMLButtonElement = this._sequenceButtons[this._highlightedSequenceIndex];\r\n\t\t\tif (oldButton != null) oldButton.classList.remove(\"selected-instrument\");\r\n\t\t\tconst newButton: HTMLButtonElement = this._sequenceButtons[this._sequenceIndex];\r\n\t\t\tnewButton.classList.add(\"selected-instrument\");\r\n\t\t\tthis._highlightedSequenceIndex = this._sequenceIndex;\r\n\t\t}\r\n\r\n\t\tfor (let sequence: number = 0; sequence < this._sequences.length; sequence++) {\r\n\t\t\tconst sequenceButton: HTMLButtonElement = this._sequenceButtons[sequence];\r\n\t\t\tif (sequence === this._highlightedSequenceIndex) {\r\n\t\t\t\tsequenceButton.style.color = \"\";\r\n\t\t\t} else {\r\n\t\t\t\tsequenceButton.style.color = ColorConfig.primaryText;\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tconst colors: ChannelColors = ColorConfig.getChannelColor(this._doc.song, this._sequences[this._sequenceIndex].channel);\r\n\t\tthis._sequenceButtonContainer.style.setProperty(\"--text-color-lit\", colors.primaryNote);\r\n\t\tthis._sequenceButtonContainer.style.setProperty(\"--text-color-dim\", colors.secondaryNote);\r\n\t\tthis._sequenceButtonContainer.style.setProperty(\"--background-color-lit\", colors.primaryChannel);\r\n\t\tthis._sequenceButtonContainer.style.setProperty(\"--background-color-dim\", colors.secondaryChannel);\r\n\t}\r\n\r\n\tprivate _renderLabel = (): void => {\r\n\t\tconst sequence: Sequence = this._sequences[this._sequenceIndex];\r\n\t\tconst sequencePitch: number = sequence.pitch;\r\n\r\n\t\tconst pitchNameIndex: number = (sequencePitch + Config.keys[this._doc.song.key].basePitch) % Config.pitchesPerOctave;\r\n\t\tlet pitch: string = \"\";\r\n\t\tif (Config.keys[pitchNameIndex].isWhiteKey) {\r\n\t\t\tpitch = Config.keys[pitchNameIndex].name;\r\n\t\t} else {\r\n\t\t\tconst shiftDir: number = Config.blackKeyNameParents[sequencePitch % Config.pitchesPerOctave];\r\n\t\t\tpitch = Config.keys[(pitchNameIndex + Config.pitchesPerOctave + shiftDir) % Config.pitchesPerOctave].name;\r\n\t\t\tif (shiftDir == 1) {\r\n\t\t\t\tpitch += \"♭\";\r\n\t\t\t} else if (shiftDir == -1) {\r\n\t\t\t\tpitch += \"♯\";\r\n\t\t\t}\r\n\t\t}\r\n\t\tpitch += Math.floor(sequencePitch / Config.pitchesPerOctave);\r\n\r\n\t\tthis._barPreviewLabel.innerText = `Bar ${this._barPreviewBarIndex + 1}, ${pitch}`;\r\n\t}\r\n\r\n\tprivate _renderClock = (): void => {\r\n\t\tconst sequence: Sequence = this._sequences[this._sequenceIndex];\r\n\t\tconst steps: number = sequence.steps;\r\n\t\tconst channelIndex: number = sequence.channel;\r\n\r\n\t\tconst generatedSequence: number[] = this._generatedSequences[this._sequenceIndex];\r\n\t\tconst hasGeneratedSequence: boolean = generatedSequence.length > 0;\r\n\r\n\t\tconst invert: boolean = sequence.invert;\r\n\t\tconst on: number = invert ? 0 : 1;\r\n\r\n\t\tconst color: string = ColorConfig.getChannelColor(this._doc.song, channelIndex).primaryNote;\r\n\t\tconst backgroundColor: string = ColorConfig.editorBackground;\r\n\r\n\t\tthis._clockWire.setAttribute(\"stroke\", color);\r\n\r\n\t\tconst container: SVGSVGElement = this._clockPoints;\r\n\r\n\t\twhile (container.firstChild !== null) {\r\n\t\t\tcontainer.removeChild(container.firstChild);\r\n\t\t}\r\n\r\n\t\tconst centerX: number = this._clockWidth / 2;\r\n\t\tconst centerY: number = this._clockHeight / 2;\r\n\t\tconst clockRadius: number = this._clockRadius;\r\n\t\tconst clockPointRadius: number = Math.max(this._clockPointMinRadius, Math.min(this._clockPointMaxRadius, this._clockWidth / steps));\r\n\r\n\t\tfor (let step: number = 0; step < steps; step++) {\r\n\t\t\tconst angle: number = (step / steps) * Math.PI * 2 - Math.PI / 2;\r\n\t\t\tconst x: number = centerX + Math.cos(angle) * clockRadius;\r\n\t\t\tconst y: number = centerY + Math.sin(angle) * clockRadius;\r\n\t\t\tconst clockPoint: SVGCircleElement = SVG.circle({\r\n\t\t\t\tcx: x,\r\n\t\t\t\tcy: y,\r\n\t\t\t\tr: clockPointRadius,\r\n\t\t\t\tstyle: `stroke: ${color}; stroke-width: 0.5; fill: ${backgroundColor}`,\r\n\t\t\t});\r\n\t\t\tif (hasGeneratedSequence && generatedSequence[step % steps] === on) {\r\n\t\t\t\tclockPoint.setAttribute(\"style\", `fill: ${color};`);\r\n\t\t\t}\r\n\t\t\tcontainer.appendChild(clockPoint);\r\n\t\t}\r\n\t}\r\n\r\n\tprivate _renderBarPreview = (): void => {\r\n\t\tconst beatsPerBar: number = this._doc.song.beatsPerBar;\r\n\t\tconst partsPerBeat: number = Config.partsPerBeat;\r\n\t\tconst partsPerBar: number = partsPerBeat * beatsPerBar;\r\n\r\n\t\tconst sequence: Sequence = this._sequences[this._sequenceIndex];\r\n\t\tconst steps: number = sequence.steps;\r\n\t\tconst channelIndex: number = sequence.channel;\r\n\t\tconst stepSize: number = sequence.stepSizeNumerator / sequence.stepSizeDenominator;\r\n\r\n\t\tconst generatedSequence: number[] = this._generatedSequences[this._sequenceIndex];\r\n\t\tconst hasGeneratedSequence: boolean = generatedSequence.length > 0;\r\n\r\n\t\tconst invert: boolean = sequence.invert;\r\n\t\tconst on: number = invert ? 0 : 1;\r\n\r\n\t\tconst generateFadingNotes: boolean = sequence.generateFadingNotes;\r\n\r\n\t\tconst channelColors: ChannelColors = ColorConfig.getChannelColor(this._doc.song, channelIndex);\r\n\t\tconst color: string = channelColors.primaryNote;\r\n\t\tconst secondaryColor: string = channelColors.secondaryNote;\r\n\r\n\t\t// `this._barPreviewBarIndex` is an \"absolute\" coordinate, but we\r\n\t\t// really want 0 to be our actual starting point regardless of whatever\r\n\t\t// bar we are truly on.\r\n\t\tconst bar: number = this._barPreviewBarIndex - this._startBar;\r\n\r\n\t\t// This is so that we can keep `step` counting up uninterrupted.\r\n\t\t// We can't really place anything after `partsPerBar`, so we\r\n\t\t// need to move whatever is after that back to somewhere near 0.\r\n\t\tconst partOffset: number = bar * partsPerBar;\r\n\r\n\t\tconst container: SVGSVGElement = this._barPreviewSteps;\r\n\r\n\t\twhile (container.firstChild !== null) {\r\n\t\t\tcontainer.removeChild(container.firstChild);\r\n\t\t}\r\n\r\n\t\tlet toPushAtTheEnd: SVGElement[] = [];\r\n\r\n\t\tconst beatWidth: number = this._barPreviewWidth / beatsPerBar;\r\n\t\tconst partWidth: number = beatWidth / partsPerBeat;\r\n\t\tconst beatHeight: number = this._barPreviewHeight;\r\n\t\tconst padding: number = 0.2;\r\n\r\n\t\tconst firstStep: number = Math.floor((beatsPerBar * bar) / stepSize);\r\n\t\tconst lastStep: number = Math.ceil((beatsPerBar * (bar + 1)) / stepSize); // Exclusive.\r\n\r\n\t\tconst y: number = padding;\r\n\t\tconst h: number = beatHeight - padding * 2;\r\n\t\tfor (let step: number = firstStep; step < lastStep; step++) {\r\n\t\t\tlet continuesLastPattern: boolean = false;\r\n\t\t\tlet needToAdjustPins: boolean = false;\r\n\r\n\t\t\tconst rawStepPartStart: number = (\r\n\t\t\t\tMath.floor(step * partsPerBeat * stepSize) - partOffset\r\n\t\t\t);\r\n\t\t\tconst rawStepPartEnd: number = (\r\n\t\t\t\tMath.floor((step + 1) * partsPerBeat * stepSize) - partOffset\r\n\t\t\t);\r\n\r\n\t\t\tif (rawStepPartStart < 0) {\r\n\t\t\t\tcontinuesLastPattern = true;\r\n\t\t\t}\r\n\t\t\tif (continuesLastPattern || rawStepPartEnd > partsPerBar) {\r\n\t\t\t\tneedToAdjustPins = true;\r\n\t\t\t}\r\n\r\n\t\t\tconst stepPartStart: number = Math.max(0, Math.min(partsPerBar, rawStepPartStart));\r\n\t\t\tconst stepPartEnd: number = Math.max(0, Math.min(partsPerBar, rawStepPartEnd));\r\n\t\t\tconst partAmount: number = stepPartEnd - stepPartStart;\r\n\r\n\t\t\tconst x: number = padding + stepPartStart * partWidth;\r\n\t\t\tconst w: number = partAmount * partWidth - padding * 2;\r\n\t\t\tif (hasGeneratedSequence && generatedSequence[step % steps] === on) {\r\n\t\t\t\tif (generateFadingNotes) {\r\n\t\t\t\t\tconst stepBackgroundElement: SVGRectElement = SVG.rect({\r\n\t\t\t\t\t\tx: x,\r\n\t\t\t\t\t\ty: y,\r\n\t\t\t\t\t\twidth: w,\r\n\t\t\t\t\t\theight: h,\r\n\t\t\t\t\t\tstyle: `fill: ${secondaryColor};`,\r\n\t\t\t\t\t});\r\n\t\t\t\t\tcontainer.appendChild(stepBackgroundElement);\r\n\r\n\t\t\t\t\tlet startSize: number = Config.noteSizeMax;\r\n\t\t\t\t\tlet endSize: number = 0;\r\n\r\n\t\t\t\t\tif (needToAdjustPins) {\r\n\t\t\t\t\t\tconst startRatio: number = (stepPartStart - rawStepPartStart) / (rawStepPartEnd - rawStepPartStart);\r\n\t\t\t\t\t\tconst startPinSize: number = Math.round(Config.noteSizeMax + (0 - Config.noteSizeMax) * startRatio);\r\n\t\t\t\t\t\tstartSize = startPinSize;\r\n\r\n\t\t\t\t\t\tconst endRatio: number = (stepPartEnd - rawStepPartStart) / (rawStepPartEnd - rawStepPartStart);\r\n\t\t\t\t\t\tconst endPinSize: number = Math.round(Config.noteSizeMax + (0 - Config.noteSizeMax) * endRatio);\r\n\t\t\t\t\t\tendSize = endPinSize;\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\tstartSize /= Config.noteSizeMax;\r\n\t\t\t\t\tendSize /= Config.noteSizeMax;\r\n\r\n\t\t\t\t\tconst x0: number = x;\r\n\t\t\t\t\tconst y0: number = y + (h / 2) * (1 - startSize);\r\n\t\t\t\t\tconst x1: number = x + w;\r\n\t\t\t\t\tconst y1: number = y + (h / 2) * (1 - endSize);\r\n\t\t\t\t\tconst x2: number = x + w;\r\n\t\t\t\t\tconst y2: number = y + h - (h / 2) * (1 - endSize);\r\n\t\t\t\t\tconst x3: number = x;\r\n\t\t\t\t\tconst y3: number = y + h - (h / 2) * (1 - startSize);\r\n\r\n\t\t\t\t\tconst stepElement: SVGPathElement = SVG.path({\r\n\t\t\t\t\t\td: `M ${x0} ${y0} L ${x1} ${y1} L ${x2} ${y2} L ${x3} ${y3} z`,\r\n\t\t\t\t\t\tstyle: `fill: ${color};`,\r\n\t\t\t\t\t});\r\n\t\t\t\t\tcontainer.appendChild(stepElement);\r\n\t\t\t\t} else {\r\n\t\t\t\t\tconst stepElement: SVGRectElement = SVG.rect({\r\n\t\t\t\t\t\tx: x,\r\n\t\t\t\t\t\ty: y,\r\n\t\t\t\t\t\twidth: w,\r\n\t\t\t\t\t\theight: h,\r\n\t\t\t\t\t\tstyle: `fill: ${color};`,\r\n\t\t\t\t\t});\r\n\t\t\t\t\tcontainer.appendChild(stepElement);\r\n\t\t\t\t}\r\n\r\n\t\t\t\tif (continuesLastPattern) {\r\n\t\t\t\t\tlet indicatorOffset: number = 2 + padding;\r\n\t\t\t\t\tconst arrowHeight: number = Math.min(h, 20);\r\n\t\t\t\t\tconst arrowY: number = y + h / 2;\r\n\r\n\t\t\t\t\tlet arrowPath: string;\r\n\t\t\t\t\tarrowPath = \"M \" + prettyNumber(partWidth * stepPartStart + indicatorOffset) + \" \" + prettyNumber(arrowY - 0.1 * arrowHeight);\r\n\t\t\t\t\tarrowPath += \"L \" + prettyNumber(partWidth * stepPartStart + indicatorOffset) + \" \" + prettyNumber(arrowY + 0.1 * arrowHeight);\r\n\t\t\t\t\tarrowPath += \"L \" + prettyNumber(partWidth * stepPartStart + indicatorOffset + 4) + \" \" + prettyNumber(arrowY + 0.1 * arrowHeight);\r\n\t\t\t\t\tarrowPath += \"L \" + prettyNumber(partWidth * stepPartStart + indicatorOffset + 4) + \" \" + prettyNumber(arrowY + 0.3 * arrowHeight);\r\n\t\t\t\t\tarrowPath += \"L \" + prettyNumber(partWidth * stepPartStart + indicatorOffset + 12) + \" \" + prettyNumber(arrowY);\r\n\t\t\t\t\tarrowPath += \"L \" + prettyNumber(partWidth * stepPartStart + indicatorOffset + 4) + \" \" + prettyNumber(arrowY - 0.3 * arrowHeight);\r\n\t\t\t\t\tarrowPath += \"L \" + prettyNumber(partWidth * stepPartStart + indicatorOffset + 4) + \" \" + prettyNumber(arrowY - 0.1 * arrowHeight);\r\n\r\n\t\t\t\t\tconst arrow: SVGPathElement = SVG.path();\r\n\t\t\t\t\tarrow.setAttribute(\"d\", arrowPath);\r\n\t\t\t\t\tarrow.setAttribute(\"fill\", ColorConfig.invertedText);\r\n\r\n\t\t\t\t\ttoPushAtTheEnd.push(arrow);\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tfor (let element of toPushAtTheEnd) {\r\n\t\t\tcontainer.appendChild(element);\r\n\t\t}\r\n\t}\r\n}\r\n","// Copyright (c) 2012-2022 John Nesky and contributing authors, distributed under the MIT license, see accompanying the LICENSE.md file.\r\n\r\nfunction transfer(source: ArrayBuffer, length: number): ArrayBuffer {\r\n\tconst dest: ArrayBuffer = new ArrayBuffer(length);\r\n\tlet nextOffset = 0;\r\n\tlet leftBytes = Math.min(source.byteLength, dest.byteLength);\r\n\tconst wordSizes = [8, 4, 2, 1];\r\n\tfor (const wordSize of wordSizes) {\r\n\t\tif (leftBytes >= wordSize) {\r\n\t\t\tconst done = transferWith(wordSize, source, dest, nextOffset, leftBytes);\r\n\t\t\tnextOffset = done.nextOffset;\r\n\t\t\tleftBytes = done.leftBytes;\r\n\t\t}\r\n\t}\r\n\treturn dest;\r\n\tfunction transferWith(wordSize: number, source: ArrayBuffer, dest: ArrayBuffer, nextOffset: number, leftBytes: number) {\r\n\t\tlet ViewClass: any = Uint8Array;\r\n\t\tswitch (wordSize) {\r\n\t\t\tcase 8:\r\n\t\t\t\tViewClass = Float64Array;\r\n\t\t\t\tbreak;\r\n\t\t\tcase 4:\r\n\t\t\t\tViewClass = Float32Array;\r\n\t\t\t\tbreak;\r\n\t\t\tcase 2:\r\n\t\t\t\tViewClass = Uint16Array;\r\n\t\t\t\tbreak;\r\n\t\t\tcase 1:\r\n\t\t\t\tViewClass = Uint8Array;\r\n\t\t\t\tbreak;\r\n\t\t\tdefault:\r\n\t\t\t\tViewClass = Uint8Array;\r\n\t\t\t\tbreak;\r\n\t\t}\r\n\t\t\t\r\n\t\tconst view_source = new ViewClass(source, nextOffset, (leftBytes / wordSize) | 0);\r\n\t\tconst view_dest = new ViewClass(dest, nextOffset, (leftBytes / wordSize) | 0);\r\n\t\tfor (let i: number = 0; i < view_dest.length; i++) {\r\n\t\t\tview_dest[i] = view_source[i];\r\n\t\t}\r\n\t\treturn {\r\n\t\t\tnextOffset: view_source.byteOffset + view_source.byteLength,\r\n\t\t\tleftBytes: leftBytes - view_dest.length * wordSize,\r\n\t\t}\r\n\t}\r\n}\r\n\r\n// Note: All methods are big endian.\r\nexport class ArrayBufferWriter {\r\n\tprivate _writeIndex: number = 0;\r\n\tprivate _fileSize: number = 0;\r\n\tprivate _arrayBuffer: ArrayBuffer;\r\n\tprivate _data: DataView;\r\n\t\t\r\n\tconstructor(initialCapacity: number) {\r\n\t\tthis._arrayBuffer = new ArrayBuffer(initialCapacity);\r\n\t\tthis._data = new DataView(this._arrayBuffer);\r\n\t}\r\n\t\t\r\n\tprivate _addBytes(numBytes: number): void {\r\n\t\tthis._fileSize += numBytes;\r\n\t\tif (this._fileSize > this._arrayBuffer.byteLength) {\r\n\t\t\tthis._arrayBuffer = transfer(this._arrayBuffer, Math.max(this._arrayBuffer.byteLength * 2, this._fileSize));\r\n\t\t\tthis._data = new DataView(this._arrayBuffer);\r\n\t\t}\r\n\t}\r\n\t\t\r\n\tpublic getWriteIndex(): number {\r\n\t\treturn this._writeIndex;\r\n\t}\r\n\t\t\r\n\tpublic rewriteUint32(index: number, value: number): void {\r\n\t\tthis._data.setUint32(index, value >>> 0, false);\r\n\t}\r\n\t\t\r\n\tpublic writeUint32(value: number): void {\r\n\t\tvalue = value >>> 0;\r\n\t\tthis._addBytes(4);\r\n\t\tthis._data.setUint32(this._writeIndex, value, false);\r\n\t\tthis._writeIndex = this._fileSize;\r\n\t}\r\n\t\t\r\n\tpublic writeUint24(value: number): void {\r\n\t\tvalue = value >>> 0;\r\n\t\tthis._addBytes(3);\r\n\t\tthis._data.setUint8(this._writeIndex, (value >> 16) & 0xff);\r\n\t\tthis._data.setUint8(this._writeIndex + 1, (value >> 8) & 0xff);\r\n\t\tthis._data.setUint8(this._writeIndex + 2, (value) & 0xff);\r\n\t\tthis._writeIndex = this._fileSize;\r\n\t}\r\n\t\t\r\n\tpublic writeUint16(value: number): void {\r\n\t\tvalue = value >>> 0;\r\n\t\tthis._addBytes(2);\r\n\t\tthis._data.setUint16(this._writeIndex, value, false);\r\n\t\tthis._writeIndex = this._fileSize;\r\n\t}\r\n\t\t\r\n\tpublic writeUint8(value: number): void {\r\n\t\tvalue = value >>> 0;\r\n\t\tthis._addBytes(1);\r\n\t\tthis._data.setUint8(this._writeIndex, value);\r\n\t\tthis._writeIndex = this._fileSize;\r\n\t}\r\n\t\t\r\n\tpublic writeInt8(value: number): void {\r\n\t\tvalue = value | 0;\r\n\t\tthis._addBytes(1);\r\n\t\tthis._data.setInt8(this._writeIndex, value);\r\n\t\tthis._writeIndex = this._fileSize;\r\n\t}\r\n\t\t\r\n\tpublic writeMidi7Bits(value: number): void {\r\n\t\tvalue = value >>> 0;\r\n\t\tif (value >= 0x80) throw new Error(\"7 bit value contained 8th bit!\");\r\n\t\tthis._addBytes(1);\r\n\t\tthis._data.setUint8(this._writeIndex, value);\r\n\t\tthis._writeIndex = this._fileSize;\r\n\t}\r\n\t\t\r\n\tpublic writeMidiVariableLength(value: number): void {\r\n\t\tvalue = value >>> 0;\r\n\t\tif (value > 0x0fffffff) throw new Error(\"writeVariableLength value too big.\");\r\n\t\tlet startWriting: boolean = false;\r\n\t\tfor (let i: number = 0; i < 4; i++) {\r\n\t\t\tconst shift: number = 21 - i * 7;\r\n\t\t\tconst bits: number = (value >>> shift) & 0x7f;\r\n\t\t\tif (bits != 0 || i == 3) startWriting = true; // skip leading zero bytes, but always write the last byte even if it's zero. \r\n\t\t\tif (startWriting) this.writeUint8((i == 3 ? 0x00 : 0x80) | bits);\r\n\t\t}\r\n\t}\r\n\t\t\r\n\tpublic writeMidiAscii(string: string): void {\r\n\t\tthis.writeMidiVariableLength(string.length);\r\n\t\tfor (let i: number = 0; i < string.length; i++) {\r\n\t\t\tconst charCode: number = string.charCodeAt(i);\r\n\t\t\tif (charCode > 0x7f) throw new Error(\"Trying to write unicode character as ascii.\");\r\n\t\t\tthis.writeUint8(charCode); // technically charCodeAt returns 2 byte values, but this string should contain exclusively 1 byte values.\r\n\t\t}\r\n\t}\r\n\t\t\r\n\tpublic toCompactArrayBuffer(): ArrayBuffer {\r\n\t\treturn transfer(this._arrayBuffer, this._fileSize);\r\n\t}\r\n}\r\n","// Copyright (c) 2012-2022 John Nesky and contributing authors, distributed under the MIT license, see accompanying the LICENSE.md file.\r\n\r\nexport const defaultMidiExpression: number = 0x7F;\r\nexport const defaultMidiPitchBend: number = 0x2000;\r\n\r\nexport const enum MidiChunkType {\r\n\theader = 0x4D546864, // \"MThd\" as bytes, big endian\r\n\ttrack = 0x4D54726B, // \"MTrk\" as bytes, big endian\r\n}\r\n\r\nexport const enum MidiFileFormat {\r\n\tsingleTrack = 0x0000,\r\n\tsimultaneousTracks = 0x0001,\r\n\tindependentTracks = 0x0002,\r\n}\r\n\r\n// Lower 4 bits indicate channel, except for meta and sysex events.\r\nexport const enum MidiEventType {\r\n\t//channelMode = 0x70,\r\n\tnoteOff = 0x80,\r\n\tnoteOn = 0x90,\r\n\tkeyPressure = 0xA0,\r\n\tcontrolChange = 0xB0,\r\n\tprogramChange = 0xC0,\r\n\tchannelPressure = 0xD0,\r\n\tpitchBend = 0xE0,\r\n\tmetaAndSysex = 0xF0,\r\n\t\t\r\n\t// These events are identified by all 8 bits.\r\n\tmeta = 0xFF,\r\n\t// sysexStart = 0xF0,\r\n\t// sysexEscape = 0xF7,\r\n}\r\n\r\nexport const enum MidiControlEventMessage {\r\n\t\t\r\n\tsetParameterMSB = 0x06,\r\n\tvolumeMSB = 0x07,\r\n\tpanMSB = 0x0A,\r\n\texpressionMSB = 0x0B,\r\n\t\t\r\n\tsetParameterLSB = 0x26,\r\n\t//volumeLSB = 0x27,\r\n\t//expressionLSB = 0x2B,\r\n\t\t\r\n\t//nonRegisteredParameterNumberLSB = 0x62,\r\n\t//nonRegisteredParameterNumberMSB = 0x63,\r\n\tregisteredParameterNumberLSB = 0x64,\r\n\tregisteredParameterNumberMSB = 0x65,\r\n\t\t\r\n\t// Channel mode messages:\r\n\t/*\r\n\tallSoundOff = 0x78,\r\n\tresetControllers = 0x79,\r\n\tlocalControl = 0x7A,\r\n\tallNotesOff = 0x7B,\r\n\tomniModeOff = 0x7C,\r\n\tomniModeOn = 0x7D,\r\n\tmonoMode = 0x7E,\r\n\tpolyphonicMode = 0x7F,\r\n\t*/\r\n}\r\n\r\nexport const enum MidiRegisteredParameterNumberMSB {\r\n\tpitchBendRange = 0x00, // semitones\r\n\tfineTuning = 0x00,\r\n\tcoarseTuning = 0x00,\r\n\ttuningProgramSelect = 0x00,\r\n\ttuningBankSelect = 0x00,\r\n\treset = 0x7f,\r\n}\r\n\r\nexport const enum MidiRegisteredParameterNumberLSB {\r\n\tpitchBendRange = 0x00, // cents\r\n\tfineTuning = 0x01,\r\n\tcoarseTuning = 0x02,\r\n\ttuningProgramSelect = 0x03,\r\n\ttuningBankSelect = 0x04,\r\n\treset = 0x7f,\r\n}\r\n\r\nexport const enum MidiMetaEventMessage {\r\n\tsequenceNumber = 0x00,\r\n\ttext = 0x01,\r\n\tcopyrightNotice = 0x02,\r\n\ttrackName = 0x03,\r\n\tinstrumentName = 0x04,\r\n\tlyricText = 0x05,\r\n\tmarker = 0x06,\r\n\tcuePoint = 0x07,\r\n\tchannelPrefix = 0x20,\r\n\tendOfTrack = 0x2F,\r\n\ttempo = 0x51,\r\n\tsmpteOffset = 0x54,\r\n\ttimeSignature = 0x58,\r\n\tkeySignature = 0x59,\r\n\tsequencerSpecificEvent = 0x7F,\r\n}\r\n\r\n// BeepBox noise channels are very different from Midi drumsets, but here's my attempt at a conversion from Midi to BeepBox.\r\nexport interface AnalogousDrum {\r\n\tfrequency: number;\r\n\tduration: number;\r\n\tvolume: number;\r\n}\r\nexport const analogousDrumMap: { [K: number]: AnalogousDrum } = {\r\n\t\t35: { frequency:  0, duration: 2, volume: 3 }, // Acoustic Bass Drum\r\n\t\t36: { frequency:  0, duration: 2, volume: 3 }, // Bass Drum 1\r\n\t\t37: { frequency:  5, duration: 1, volume: 3 }, // Side Stick\r\n\t\t38: { frequency:  4, duration: 2, volume: 3 }, // Acoustic Snare\r\n\t\t39: { frequency:  5, duration: 2, volume: 3 }, // Hand Clap\r\n\t\t40: { frequency:  4, duration: 2, volume: 3 }, // Electric Snare\r\n\t\t41: { frequency:  1, duration: 2, volume: 3 }, // Low Floor Tom\r\n\t\t42: { frequency:  8, duration: 1, volume: 3 }, // Closed Hi Hat\r\n\t\t43: { frequency:  1, duration: 2, volume: 3 }, // High Floor Tom\r\n\t\t44: { frequency:  8, duration: 1, volume: 2 }, // Pedal Hi-Hat\r\n\t\t45: { frequency:  2, duration: 2, volume: 3 }, // Low Tom\r\n\t\t46: { frequency:  8, duration: 4, volume: 3 }, // Open Hi-Hat\r\n\t\t47: { frequency:  2, duration: 2, volume: 3 }, // Low-Mid Tom\r\n\t\t48: { frequency:  3, duration: 2, volume: 3 }, // Hi-Mid Tom\r\n\t\t49: { frequency:  7, duration: 4, volume: 3 }, // Crash Cymbal 1\r\n\t\t50: { frequency:  3, duration: 2, volume: 3 }, // High Tom\r\n\t\t51: { frequency:  6, duration: 4, volume: 2 }, // Ride Cymbal 1\r\n\t\t52: { frequency:  7, duration: 4, volume: 3 }, // Chinese Cymbal\r\n\t\t53: { frequency:  6, duration: 2, volume: 3 }, // Ride Bell\r\n\t54: { frequency: 11, duration: 2, volume: 3 }, // Tambourine\r\n\t\t55: { frequency:  9, duration: 4, volume: 3 }, // Splash Cymbal\r\n\t\t56: { frequency:  7, duration: 1, volume: 2 }, // Cowbell\r\n\t\t57: { frequency:  7, duration: 4, volume: 3 }, // Crash Cymbal 2\r\n\t58: { frequency: 10, duration: 2, volume: 2 }, // Vibraslap\r\n\t\t59: { frequency:  6, duration: 4, volume: 3 }, // Ride Cymbal 2\r\n\t//60: { frequency:  7, duration: 1, volume: 3 }, // Hi Bongo\r\n\t//61: { frequency:  5, duration: 1, volume: 3 }, // Low Bongo\r\n\t//62: { frequency:  6, duration: 1, volume: 3 }, // Mute Hi Conga\r\n\t//63: { frequency:  5, duration: 1, volume: 3 }, // Open Hi Conga\r\n\t//64: { frequency:  4, duration: 1, volume: 3 }, // Low Conga\r\n\t//65: { frequency:  6, duration: 2, volume: 3 }, // High Timbale\r\n\t//66: { frequency:  4, duration: 2, volume: 3 }, // Low Timbale\r\n\t//67: { frequency: 10, duration: 1, volume: 2 }, // High Agogo\r\n\t//68: { frequency:  9, duration: 1, volume: 2 }, // Low Agogo\r\n\t69: { frequency: 10, duration: 2, volume: 3 }, // Cabasa\r\n\t70: { frequency: 10, duration: 2, volume: 3 }, // Maracas\r\n\t//71: { frequency: 10, duration: 2, volume: 3 }, // Short Whistle\r\n\t//72: { frequency:  9, duration: 2, volume: 3 }, // Long Whistle\r\n\t73: { frequency: 10, duration: 1, volume: 2 }, // Short Guiro\r\n\t74: { frequency: 10, duration: 2, volume: 2 }, // Long Guiro\r\n\t//75: { frequency: 10, duration: 1, volume: 2 }, // Claves\r\n\t//76: { frequency:  6, duration: 1, volume: 2 }, // Hi Wood Block\r\n\t//77: { frequency:  5, duration: 1, volume: 2 }, // Low Wood Block\r\n\t//78: { frequency:  6, duration: 2, volume: 3 }, // Mute Cuica\r\n\t//79: { frequency:  4, duration: 2, volume: 3 }, // Open Cuica\r\n\t//80: { frequency:  7, duration: 1, volume: 2 }, // Mute Triangle\r\n\t//81: { frequency:  7, duration: 4, volume: 2 }, // Open Triangle\r\n};\r\n\r\nexport function midiVolumeToVolumeMult(volume: number): number {\r\n\t// default midi volume is 100, pow(100/127,4)≈0.384 so I'm considering that the baseline volume.\r\n\treturn Math.pow(volume / 127, 4.0) / 0.3844015376046128;\r\n}\r\nexport function volumeMultToMidiVolume(volumeMult: number): number {\r\n\treturn Math.pow(volumeMult * 0.3844015376046128, 0.25) * 127;\r\n}\r\nexport function midiExpressionToVolumeMult(expression: number): number {\r\n\treturn Math.pow(expression / 127, 4.0);\r\n}\r\nexport function volumeMultToMidiExpression(volumeMult: number): number {\r\n\treturn Math.pow(volumeMult, 0.25) * 127;\r\n}\r\n","// Copyright (c) 2012-2022 John Nesky and contributing authors, distributed under the MIT license, see accompanying the LICENSE.md file.\r\n\r\nimport { InstrumentType, /*EnvelopeType,*/ Config, getArpeggioPitchIndex } from \"../synth/SynthConfig\";\r\nimport { Instrument, Pattern, Note, Song, Synth } from \"../synth/synth\";\r\nimport { ColorConfig } from \"./ColorConfig\";\r\nimport { Preset, EditorConfig } from \"./EditorConfig\";\r\nimport { SongDocument } from \"./SongDocument\";\r\nimport { Prompt } from \"./Prompt\";\r\nimport { HTML } from \"imperative-html/dist/esm/elements-strict\";\r\nimport { ArrayBufferWriter } from \"./ArrayBufferWriter\";\r\nimport { MidiChunkType, MidiFileFormat, MidiControlEventMessage, MidiEventType, MidiMetaEventMessage, MidiRegisteredParameterNumberMSB, MidiRegisteredParameterNumberLSB, volumeMultToMidiVolume, volumeMultToMidiExpression, defaultMidiPitchBend, defaultMidiExpression } from \"./Midi\";\r\n\r\nconst { button, div, h2, input, select, option } = HTML;\r\n\r\nfunction lerp(low: number, high: number, t: number): number {\r\n    return low + t * (high - low);\r\n}\r\n\r\nfunction save(blob: Blob, name: string): void {\r\n    if ((<any>navigator).msSaveOrOpenBlob) {\r\n        (<any>navigator).msSaveOrOpenBlob(blob, name);\r\n        return;\r\n    }\r\n\r\n    const anchor: HTMLAnchorElement = document.createElement(\"a\");\r\n    if (anchor.download != undefined) {\r\n        const url: string = URL.createObjectURL(blob);\r\n        setTimeout(function () { URL.revokeObjectURL(url); }, 60000);\r\n        anchor.href = url;\r\n        anchor.download = name;\r\n        // Chrome bug regression: We need to delay dispatching the click\r\n        // event. Seems to be related to going back in the browser history.\r\n        // https://bugs.chromium.org/p/chromium/issues/detail?id=825100\r\n        setTimeout(function () { anchor.dispatchEvent(new MouseEvent(\"click\")); }, 0);\r\n    } else {\r\n        const url: string = URL.createObjectURL(blob);\r\n        setTimeout(function () { URL.revokeObjectURL(url); }, 60000);\r\n        if (!window.open(url, \"_blank\")) window.location.href = url;\r\n    }\r\n}\r\n\r\nexport class ExportPrompt implements Prompt {\r\n    private synth: Synth;\r\n    private thenExportTo: string;\r\n    private recordedSamplesL: Float32Array;\r\n    private recordedSamplesR: Float32Array;\r\n    private sampleFrames: number;\r\n    private totalChunks: number;\r\n    private currentChunk: number;\r\n    private outputStarted: boolean = false;\r\n    private readonly _fileName: HTMLInputElement = input({ type: \"text\", style: \"width: 10em;\", value: \"BeepBox-Song\", maxlength: 250, \"autofocus\": \"autofocus\" });\r\n    private readonly _computedSamplesLabel: HTMLDivElement = div({ style: \"width: 10em;\" }, new Text(\"0:00\"));\r\n    private readonly _enableIntro: HTMLInputElement = input({ type: \"checkbox\" });\r\n    private readonly _loopDropDown: HTMLInputElement = input({ style: \"width: 2em;\", type: \"number\", min: \"1\", max: \"4\", step: \"1\" });\r\n    private readonly _enableOutro: HTMLInputElement = input({ type: \"checkbox\" });\r\n    private readonly _formatSelect: HTMLSelectElement = select({ style: \"width: 100%;\" },\r\n        option({ value: \"wav\" }, \"Export to .wav file.\"),\r\n        option({ value: \"mp3\" }, \"Export to .mp3 file.\"),\r\n\t//option({ value: \"ogg\" }, \"Export to .ogg file.\"),\r\n        option({ value: \"midi\" }, \"Export to .mid file.\"),\r\n        option({ value: \"json\" }, \"Export to .json file.\"),\r\n        option({ value: \"html\" }, \"Export to .html file.\"),\r\n    );\r\n    private readonly _cancelButton: HTMLButtonElement = button({ class: \"cancelButton\" });\r\n    private readonly _exportButton: HTMLButtonElement = button({ class: \"exportButton\", style: \"width:45%;\" }, \"Export\");\r\n    private readonly _outputProgressBar: HTMLDivElement = div({ style: `width: 0%; background: ${ColorConfig.loopAccent}; height: 100%; position: absolute; z-index: 2;` });\r\n    private readonly _outputProgressLabel: HTMLDivElement = div({ style: `position: relative; top: -1px; z-index: 3;` }, \"0%\");\r\n    private readonly _outputProgressContainer: HTMLDivElement = div({ style: `height: 12px; background: ${ColorConfig.uiWidgetBackground}; display: block; position: relative; z-index: 1;` },\r\n        this._outputProgressBar,\r\n        this._outputProgressLabel,\r\n    );\r\n    private static readonly midiChipInstruments: number[] = [\r\n        0x4A, // rounded -> recorder\r\n        0x47, // triangle -> clarinet\r\n        0x50, // square -> square wave\r\n        0x46, // ¹/₄ pulse -> bassoon\r\n        0x44, // ¹/₈ pulse -> oboe\r\n        0x51, // sawtooth -> sawtooth wave\r\n        0x51, // double saw -> sawtooth wave\r\n        0x51, // double pulse -> sawtooth wave\r\n        0x51, // spiky -> sawtooth wave\r\n    ];\r\n\r\n    public readonly container: HTMLDivElement = div({ class: \"prompt noSelection\", style: \"width: 200px;\" },\r\n        h2(\"Export Options\"),\r\n        div({ style: \"display: flex; flex-direction: row; align-items: center; justify-content: space-between;\" },\r\n            \"File name:\",\r\n            this._fileName,\r\n        ),\r\n        div({ style: \"display: flex; flex-direction: row; align-items: center; justify-content: space-between;\" },\r\n            \"Length:\",\r\n            this._computedSamplesLabel,\r\n        ),\r\n        div({ style: \"display: table; width: 100%;\" },\r\n            div({ style: \"display: table-row;\" },\r\n                div({ style: \"display: table-cell;\" }, \"Intro:\"),\r\n                div({ style: \"display: table-cell;\" }, \"Loop Count:\"),\r\n                div({ style: \"display: table-cell;\" }, \"Outro:\"),\r\n            ),\r\n            div({ style: \"display: table-row;\" },\r\n                div({ style: \"display: table-cell; vertical-align: middle;\" }, this._enableIntro),\r\n                div({ style: \"display: table-cell; vertical-align: middle;\" }, this._loopDropDown),\r\n                div({ style: \"display: table-cell; vertical-align: middle;\" }, this._enableOutro),\r\n            ),\r\n        ),\r\n        div({ class: \"selectContainer\", style: \"width: 100%;\" }, this._formatSelect),\r\n        div({ style: \"text-align: left;\" }, \"Exporting can be slow. Reloading the page or clicking the X will cancel it. Please be patient.\"),\r\n        this._outputProgressContainer,\r\n        div({ style: \"display: flex; flex-direction: row-reverse; justify-content: space-between;\" },\r\n            this._exportButton,\r\n        ),\r\n        this._cancelButton,\r\n    );\r\n\r\n    constructor(private _doc: SongDocument) {\r\n        this._loopDropDown.value = \"1\";\r\n\r\n        if (this._doc.song.loopStart == 0) {\r\n            this._enableIntro.checked = false;\r\n            this._enableIntro.disabled = true;\r\n        } else {\r\n            this._enableIntro.checked = true;\r\n            this._enableIntro.disabled = false;\r\n        }\r\n        if (this._doc.song.loopStart + this._doc.song.loopLength == this._doc.song.barCount) {\r\n            this._enableOutro.checked = false;\r\n            this._enableOutro.disabled = true;\r\n        } else {\r\n            this._enableOutro.checked = true;\r\n            this._enableOutro.disabled = false;\r\n        }\r\n\r\n        const lastExportFormat: string | null = window.localStorage.getItem(\"exportFormat\");\r\n        if (lastExportFormat != null) {\r\n            this._formatSelect.value = lastExportFormat;\r\n        }\r\n\r\n        this._fileName.select();\r\n        setTimeout(() => this._fileName.focus());\r\n\r\n        this._fileName.addEventListener(\"input\", ExportPrompt._validateFileName);\r\n        this._loopDropDown.addEventListener(\"blur\", ExportPrompt._validateNumber);\r\n        this._exportButton.addEventListener(\"click\", this._export);\r\n        this._cancelButton.addEventListener(\"click\", this._close);\r\n        this._enableOutro.addEventListener(\"click\", () => { (this._computedSamplesLabel.firstChild as Text).textContent = this.samplesToTime(this._doc.synth.getTotalSamples(this._enableIntro.checked, this._enableOutro.checked, +this._loopDropDown.value - 1)); });\r\n        this._enableIntro.addEventListener(\"click\", () => { (this._computedSamplesLabel.firstChild as Text).textContent = this.samplesToTime(this._doc.synth.getTotalSamples(this._enableIntro.checked, this._enableOutro.checked, +this._loopDropDown.value - 1)); });\r\n        this._loopDropDown.addEventListener(\"change\", () => { (this._computedSamplesLabel.firstChild as Text).textContent = this.samplesToTime(this._doc.synth.getTotalSamples(this._enableIntro.checked, this._enableOutro.checked, +this._loopDropDown.value - 1)); });\r\n        this.container.addEventListener(\"keydown\", this._whenKeyPressed);\r\n\r\n        this._fileName.value = _doc.song.title;\r\n        ExportPrompt._validateFileName(null, this._fileName);\r\n\r\n        (this._computedSamplesLabel.firstChild as Text).textContent = this.samplesToTime(this._doc.synth.getTotalSamples(this._enableIntro.checked, this._enableOutro.checked, +this._loopDropDown.value - 1));\r\n    }\r\n\r\n    // Could probably be moved to doc or synth. Fine here for now until needed by something else.\r\n    private samplesToTime(samples: number): string {\r\n        const rawSeconds: number = Math.round(samples / this._doc.synth.samplesPerSecond);\r\n        const seconds: number = rawSeconds % 60;\r\n        const minutes: number = Math.floor(rawSeconds / 60);\r\n        return minutes + \":\" + (seconds < 10 ? \"0\" : \"\") + seconds;\r\n    }\r\n\r\n    private _close = (): void => {\r\n        if (this.synth != null)\r\n            this.synth.renderingSong = false;\r\n        this.outputStarted = false;\r\n        this._doc.undo();\r\n    }\r\n\r\n    public changeFileName(newValue: string) {\r\n        this._fileName.value = newValue;\r\n    }\r\n\r\n    public cleanUp = (): void => {\r\n        this._fileName.removeEventListener(\"input\", ExportPrompt._validateFileName);\r\n        this._loopDropDown.removeEventListener(\"blur\", ExportPrompt._validateNumber);\r\n        this._exportButton.removeEventListener(\"click\", this._export);\r\n        this._cancelButton.removeEventListener(\"click\", this._close);\r\n        this.container.removeEventListener(\"keydown\", this._whenKeyPressed);\r\n    }\r\n\r\n    private _whenKeyPressed = (event: KeyboardEvent): void => {\r\n        if ((<Element>event.target).tagName != \"BUTTON\" && event.keyCode == 13) { // Enter key\r\n            this._export();\r\n        }\r\n    }\r\n\r\n    private static _validateFileName(event: Event | null, use?: HTMLInputElement): void {\r\n\r\n        let input: HTMLInputElement;\r\n        if (event != null) {\r\n            input = <HTMLInputElement>event.target;\r\n        } else if (use != undefined) {\r\n            input = use;\r\n        }\r\n        else {\r\n            return;\r\n        }\r\n        const deleteChars = /[\\+\\*\\$\\?\\|\\{\\}\\\\\\/<>#%!`&'\"=:@]/gi;\r\n        if (deleteChars.test(input.value)) {\r\n            let cursorPos: number = <number>input.selectionStart;\r\n            input.value = input.value.replace(deleteChars, \"\");\r\n            cursorPos--;\r\n            input.setSelectionRange(cursorPos, cursorPos);\r\n        }\r\n    }\r\n\r\n    private static _validateNumber(event: Event): void {\r\n        const input: HTMLInputElement = <HTMLInputElement>event.target;\r\n        input.value = Math.floor(Math.max(Number(input.min), Math.min(Number(input.max), Number(input.value)))) + \"\";\r\n    }\r\n\r\n    private _export = (): void => {\r\n        if (this.outputStarted == true)\r\n            return;\r\n        window.localStorage.setItem(\"exportFormat\", this._formatSelect.value);\r\n        switch (this._formatSelect.value) {\r\n            case \"wav\":\r\n                this.outputStarted = true;\r\n                this._exportTo(\"wav\");\r\n                break;\r\n            case \"mp3\":\r\n                this.outputStarted = true;\r\n                this._exportTo(\"mp3\");\r\n                break;\r\n            case \"midi\":\r\n                this.outputStarted = true;\r\n                this._exportToMidi();\r\n                break;\r\n            case \"json\":\r\n                this.outputStarted = true;\r\n                this._exportToJson();\r\n                break;\r\n            case \"html\":\r\n                this._exportToHtml();\r\n                break;\r\n            default:\r\n                throw new Error(\"Unhandled file export type.\");\r\n        }\r\n    }\r\n\r\n    private _synthesize(): void {\r\n        //const timer: number = performance.now();\r\n\r\n        // If output was stopped e.g. user clicked the close button, abort.\r\n        if (this.outputStarted == false) {\r\n            return;\r\n        }\r\n\r\n        // Update progress bar UI once per 5 sec of exported data\r\n        const samplesPerChunk: number = this.synth.samplesPerSecond * 5; //e.g. 44100 * 5\r\n        const currentFrame: number = this.currentChunk * samplesPerChunk;\r\n\r\n        const samplesInChunk: number = Math.min(samplesPerChunk, this.sampleFrames - currentFrame);\r\n        const tempSamplesL = new Float32Array(samplesInChunk);\r\n        const tempSamplesR = new Float32Array(samplesInChunk);\r\n\r\n        this.synth.renderingSong = true;\r\n        this.synth.synthesize(tempSamplesL, tempSamplesR, samplesInChunk);\r\n\r\n        // Concatenate chunk data into final array\r\n        this.recordedSamplesL.set(tempSamplesL, currentFrame);\r\n        this.recordedSamplesR.set(tempSamplesR, currentFrame);\r\n\r\n        // Update UI\r\n        this._outputProgressBar.style.setProperty(\"width\", Math.round((this.currentChunk + 1) / this.totalChunks * 100.0) + \"%\");\r\n        this._outputProgressLabel.innerText = Math.round((this.currentChunk + 1) / this.totalChunks * 100.0) + \"%\";\r\n\r\n        // Next call, synthesize the next chunk.\r\n        this.currentChunk++;\r\n\r\n        if (this.currentChunk >= this.totalChunks) {\r\n            // Done, call final function\r\n            this.synth.renderingSong = false;\r\n            this._outputProgressLabel.innerText = \"Encoding...\";\r\n            if (this.thenExportTo == \"wav\") {\r\n                this._exportToWavFinish();\r\n            }\r\n            else if (this.thenExportTo == \"mp3\") {\r\n                this._exportToMp3Finish();\r\n            }\r\n            else {\r\n                throw new Error(\"Unrecognized file export type chosen!\");\r\n            }\r\n        }\r\n        else {\r\n            // Continue batch export\r\n            setTimeout(() => { this._synthesize(); });\r\n        }\r\n\r\n        //console.log(\"export timer\", (performance.now() - timer) / 1000.0);\r\n    }\r\n\r\n    private _exportTo(type: string): void {\r\n        // Batch the export operation\r\n        this.thenExportTo = type;\r\n        this.currentChunk = 0;\r\n        this.synth = new Synth(this._doc.song);\r\n        if (type == \"wav\") {\r\n            this.synth.samplesPerSecond = 48000; // Use professional video editing standard sample rate for .wav file export.\r\n        }\r\n        else if (type == \"mp3\") {\r\n            this.synth.samplesPerSecond = 44100; // Use consumer CD standard sample rate for .mp3 export.\r\n        }\r\n        else {\r\n            throw new Error(\"Unrecognized file export type chosen!\");\r\n        }\r\n\r\n        this._outputProgressBar.style.setProperty(\"width\", \"0%\");\r\n        this._outputProgressLabel.innerText = \"0%\";\r\n\r\n        this.synth.loopRepeatCount = Number(this._loopDropDown.value) - 1;\r\n        if (!this._enableIntro.checked) {\r\n            for (let introIter: number = 0; introIter < this._doc.song.loopStart; introIter++) {\r\n                this.synth.goToNextBar();\r\n            }\r\n        }\r\n\r\n      \r\n        this.synth.computeLatestModValues();\r\n\t      this.synth.warmUpSynthesizer(this._doc.song);\r\n\r\n        this.sampleFrames = this.synth.getTotalSamples(this._enableIntro.checked, this._enableOutro.checked, this.synth.loopRepeatCount);\r\n        // Compute how many UI updates will need to run to determine how many \r\n        this.totalChunks = Math.ceil(this.sampleFrames / (this.synth.samplesPerSecond * 5));\r\n        this.recordedSamplesL = new Float32Array(this.sampleFrames);\r\n        this.recordedSamplesR = new Float32Array(this.sampleFrames);\r\n\r\n        // Batch the actual export\r\n        setTimeout(() => { this._synthesize(); });\r\n    }\r\n\r\n    private _exportToWavFinish(): void {\r\n        const sampleFrames: number = this.recordedSamplesL.length;\r\n        const sampleRate: number = this.synth.samplesPerSecond;\r\n\r\n        const wavChannelCount: number = 2;\r\n        const bytesPerSample: number = 2;\r\n        const bitsPerSample: number = 8 * bytesPerSample;\r\n        const sampleCount: number = wavChannelCount * sampleFrames;\r\n\r\n        const totalFileSize: number = 44 + sampleCount * bytesPerSample;\r\n\r\n        let index: number = 0;\r\n        const arrayBuffer: ArrayBuffer = new ArrayBuffer(totalFileSize);\r\n        const data: DataView = new DataView(arrayBuffer);\r\n        data.setUint32(index, 0x52494646, false); index += 4;\r\n        data.setUint32(index, 36 + sampleCount * bytesPerSample, true); index += 4; // size of remaining file\r\n        data.setUint32(index, 0x57415645, false); index += 4;\r\n        data.setUint32(index, 0x666D7420, false); index += 4;\r\n        data.setUint32(index, 0x00000010, true); index += 4; // size of following header\r\n        data.setUint16(index, 0x0001, true); index += 2; // not compressed\r\n        data.setUint16(index, wavChannelCount, true); index += 2; // channel count\r\n        data.setUint32(index, sampleRate, true); index += 4; // sample rate\r\n        data.setUint32(index, sampleRate * bytesPerSample * wavChannelCount, true); index += 4; // bytes per second\r\n        data.setUint16(index, bytesPerSample * wavChannelCount, true); index += 2; // block align\r\n        data.setUint16(index, bitsPerSample, true); index += 2; // bits per sample\r\n        data.setUint32(index, 0x64617461, false); index += 4;\r\n        data.setUint32(index, sampleCount * bytesPerSample, true); index += 4;\r\n\r\n        if (bytesPerSample > 1) {\r\n            // usually samples are signed. \r\n            const range: number = (1 << (bitsPerSample - 1)) - 1;\r\n            for (let i: number = 0; i < sampleFrames; i++) {\r\n                let valL: number = Math.floor(Math.max(-1, Math.min(1, this.recordedSamplesL[i])) * range);\r\n                let valR: number = Math.floor(Math.max(-1, Math.min(1, this.recordedSamplesR[i])) * range);\r\n                if (bytesPerSample == 2) {\r\n                    data.setInt16(index, valL, true); index += 2;\r\n                    data.setInt16(index, valR, true); index += 2;\r\n                } else if (bytesPerSample == 4) {\r\n                    data.setInt32(index, valL, true); index += 4;\r\n                    data.setInt32(index, valR, true); index += 4;\r\n                } else {\r\n                    throw new Error(\"unsupported sample size\");\r\n                }\r\n            }\r\n        } else {\r\n            // 8 bit samples are a special case: they are unsigned.\r\n            for (let i: number = 0; i < sampleFrames; i++) {\r\n                let valL: number = Math.floor(Math.max(-1, Math.min(1, this.recordedSamplesL[i])) * 127 + 128);\r\n                let valR: number = Math.floor(Math.max(-1, Math.min(1, this.recordedSamplesR[i])) * 127 + 128);\r\n                data.setUint8(index, valL > 255 ? 255 : (valL < 0 ? 0 : valL)); index++;\r\n                data.setUint8(index, valR > 255 ? 255 : (valR < 0 ? 0 : valR)); index++;\r\n            }\r\n        }\r\n\r\n        const blob: Blob = new Blob([arrayBuffer], { type: \"audio/wav\" });\r\n        save(blob, this._fileName.value.trim() + \".wav\");\r\n\r\n        this._close();\r\n    }\r\n\r\n    private _exportToMp3Finish(): void {\r\n        const whenEncoderIsAvailable = (): void => {\r\n\r\n            const lamejs: any = (<any>window)[\"lamejs\"];\r\n            const channelCount: number = 2;\r\n            const kbps: number = 192;\r\n            const sampleBlockSize: number = 1152;\r\n            const mp3encoder: any = new lamejs.Mp3Encoder(channelCount, this.synth.samplesPerSecond, kbps);\r\n            const mp3Data: any[] = [];\r\n\r\n            const left: Int16Array = new Int16Array(this.recordedSamplesL.length);\r\n            const right: Int16Array = new Int16Array(this.recordedSamplesR.length);\r\n            const range: number = (1 << 15) - 1;\r\n            for (let i: number = 0; i < this.recordedSamplesL.length; i++) {\r\n                left[i] = Math.floor(Math.max(-1, Math.min(1, this.recordedSamplesL[i])) * range);\r\n                right[i] = Math.floor(Math.max(-1, Math.min(1, this.recordedSamplesR[i])) * range);\r\n            }\r\n\r\n            for (let i: number = 0; i < left.length; i += sampleBlockSize) {\r\n                const leftChunk: Int16Array = left.subarray(i, i + sampleBlockSize);\r\n                const rightChunk: Int16Array = right.subarray(i, i + sampleBlockSize);\r\n                const mp3buf: any = mp3encoder.encodeBuffer(leftChunk, rightChunk);\r\n                if (mp3buf.length > 0) mp3Data.push(mp3buf);\r\n            }\r\n\r\n            const mp3buf: any = mp3encoder.flush();\r\n            if (mp3buf.length > 0) mp3Data.push(mp3buf);\r\n\r\n            const blob: Blob = new Blob(mp3Data, { type: \"audio/mp3\" });\r\n            save(blob, this._fileName.value.trim() + \".mp3\");\r\n            this._close();\r\n        }\r\n\r\n        if (\"lamejs\" in window) {\r\n            whenEncoderIsAvailable();\r\n        } else {\r\n            var script = document.createElement(\"script\");\r\n            script.src = \"https://cdn.jsdelivr.net/npm/lamejs@1.2.0/lame.min.js\";\r\n            script.onload = whenEncoderIsAvailable;\r\n            document.head.appendChild(script);\r\n        }\r\n    }\r\n\r\n    private _exportToMidi(): void {\r\n        const song: Song = this._doc.song;\r\n        const midiTicksPerBeepBoxTick: number = 2;\r\n        const midiTicksPerBeat: number = midiTicksPerBeepBoxTick * Config.ticksPerPart * Config.partsPerBeat;\r\n        const midiTicksPerPart: number = midiTicksPerBeepBoxTick * Config.ticksPerPart;\r\n        const secondsPerMinute: number = 60;\r\n        const microsecondsPerMinute: number = secondsPerMinute * 1000000;\r\n        const beatsPerMinute: number = song.getBeatsPerMinute();\r\n        const microsecondsPerBeat: number = Math.round(microsecondsPerMinute / beatsPerMinute);\r\n        //const secondsPerMidiTick: number = secondsPerMinute / (midiTicksPerBeat * beatsPerMinute);\r\n        const midiTicksPerBar: number = midiTicksPerBeat * song.beatsPerBar;\r\n        const pitchBendRange: number = 24;\r\n        const defaultNoteVelocity: number = 90;\r\n\r\n        const unrolledBars: number[] = [];\r\n        if (this._enableIntro.checked) {\r\n            for (let bar: number = 0; bar < song.loopStart; bar++) {\r\n                unrolledBars.push(bar);\r\n            }\r\n        }\r\n        for (let loopIndex: number = 0; loopIndex < Number(this._loopDropDown.value); loopIndex++) {\r\n            for (let bar: number = song.loopStart; bar < song.loopStart + song.loopLength; bar++) {\r\n                unrolledBars.push(bar);\r\n            }\r\n        }\r\n        if (this._enableOutro.checked) {\r\n            for (let bar: number = song.loopStart + song.loopLength; bar < song.barCount; bar++) {\r\n                unrolledBars.push(bar);\r\n            }\r\n        }\r\n\r\n        const tracks = [{ isMeta: true, channel: -1, midiChannel: -1, isNoise: false, isDrumset: false }];\r\n        let midiChannelCounter: number = 0;\r\n        let foundADrumset: boolean = false;\r\n        for (let channel: number = 0; channel < this._doc.song.pitchChannelCount + this._doc.song.noiseChannelCount; channel++) {\r\n            if (!foundADrumset && this._doc.song.channels[channel].instruments[0].type == InstrumentType.drumset) {\r\n                tracks.push({ isMeta: false, channel: channel, midiChannel: 9, isNoise: true, isDrumset: true });\r\n                foundADrumset = true; // There can only be one drumset channel, and it's always channel 9 (seen as 10 in most UIs). :/\r\n            } else {\r\n                if (midiChannelCounter >= 16) continue; // The MIDI standard only supports 16 channels.\r\n                tracks.push({ isMeta: false, channel: channel, midiChannel: midiChannelCounter++, isNoise: this._doc.song.getChannelIsNoise(channel), isDrumset: false });\r\n                if (midiChannelCounter == 9) midiChannelCounter++; // skip midi drum channel.\r\n            }\r\n        }\r\n\r\n        const writer: ArrayBufferWriter = new ArrayBufferWriter(1024);\r\n        writer.writeUint32(MidiChunkType.header);\r\n        writer.writeUint32(6); // length of headers is 6 bytes\r\n        writer.writeUint16(MidiFileFormat.simultaneousTracks);\r\n        writer.writeUint16(tracks.length);\r\n        writer.writeUint16(midiTicksPerBeat); // number of \"ticks\" per beat, independent of tempo\r\n\r\n        for (const track of tracks) {\r\n            writer.writeUint32(MidiChunkType.track);\r\n\r\n            const { isMeta, channel, midiChannel, isNoise, isDrumset } = track;\r\n\r\n            // We're gonna come back here and overwrite this placeholder once we know how many bytes this track is.\r\n            const trackStartIndex: number = writer.getWriteIndex();\r\n            writer.writeUint32(0); // placeholder for track size\r\n\r\n            let prevTime: number = 0;\r\n            let barStartTime: number = 0;\r\n            const writeEventTime = function (time: number): void {\r\n                if (time < prevTime) throw new Error(\"Midi event time cannot go backwards.\");\r\n                writer.writeMidiVariableLength(time - prevTime);\r\n                prevTime = time;\r\n            }\r\n\r\n            const writeControlEvent = function (message: MidiControlEventMessage, value: number): void {\r\n                if (!(value >= 0 && value <= 0x7F)) throw new Error(\"Midi control event value out of range: \" + value);\r\n                writer.writeUint8(MidiEventType.controlChange | midiChannel);\r\n                writer.writeMidi7Bits(message);\r\n                writer.writeMidi7Bits(value | 0);\r\n            }\r\n\r\n            if (isMeta) {\r\n                // for first midi track, include tempo, time signature, and key signature information.\r\n\r\n                writeEventTime(0);\r\n                writer.writeUint8(MidiEventType.meta);\r\n                writer.writeMidi7Bits(MidiMetaEventMessage.text);\r\n                writer.writeMidiAscii(\"Composed with jummbus.bitbucket.io\");\r\n\r\n                writeEventTime(0);\r\n                writer.writeUint8(MidiEventType.meta);\r\n                writer.writeMidi7Bits(MidiMetaEventMessage.tempo);\r\n                writer.writeMidiVariableLength(3); // Tempo message length is 3 bytes.\r\n                writer.writeUint24(microsecondsPerBeat); // Tempo in microseconds per \"quarter\" note, commonly known as a \"beat\"\r\n\r\n                writeEventTime(0);\r\n                writer.writeUint8(MidiEventType.meta);\r\n                writer.writeMidi7Bits(MidiMetaEventMessage.timeSignature);\r\n                writer.writeMidiVariableLength(4); // Time signature message length is 4 bytes.\r\n                writer.writeUint8(song.beatsPerBar); // numerator.\r\n                writer.writeUint8(2); // denominator exponent in 2^E. 2^2 = 4, and we will always use \"quarter\" notes.\r\n                writer.writeUint8(24); // MIDI Clocks per metronome tick (should match beats), standard is 24\r\n                writer.writeUint8(8); // number of 1/32 notes per 24 MIDI Clocks, standard is 8, meaning 24 clocks per \"quarter\" note.\r\n\t\t\t\tlet tempScale = song.scale == Config.scales.dictionary[\"Custom\"].index ? song.scaleCustom : Config.scales[song.scale].flags;\r\n                const isMinor: boolean = tempScale[3] && !tempScale[4];\r\n                const key: number = song.key; // C=0, C#=1, counting up to B=11\r\n                let numSharps: number = key; // For even key values in major scale, number of sharps/flats is same...\r\n                if ((key & 1) == 1) numSharps += 6; // For odd key values (consider circle of fifths) rotate around the circle... kinda... Look conventional key signatures are just weird, okay?\r\n                if (isMinor) numSharps += 9; // A minor A scale has zero sharps, shift it appropriately\r\n                while (numSharps > 6) numSharps -= 12; // Range is (modulo 12) - 5. Midi supports -7 to +7, but I only have 12 options.\r\n\r\n                writeEventTime(0);\r\n                writer.writeUint8(MidiEventType.meta);\r\n                writer.writeMidi7Bits(MidiMetaEventMessage.keySignature);\r\n                writer.writeMidiVariableLength(2); // Key signature message length is 2 bytes.\r\n                writer.writeInt8(numSharps); // See above calculation. Assumes scale is diatonic. :/\r\n                writer.writeUint8(isMinor ? 1 : 0); // 0: major, 1: minor\r\n\r\n                if (this._enableIntro.checked) barStartTime += midiTicksPerBar * song.loopStart;\r\n                writeEventTime(barStartTime);\r\n                writer.writeUint8(MidiEventType.meta);\r\n                writer.writeMidi7Bits(MidiMetaEventMessage.marker);\r\n                writer.writeMidiAscii(\"Loop Start\");\r\n\r\n                for (let loopIndex: number = 0; loopIndex < parseInt(this._loopDropDown.value); loopIndex++) {\r\n                    barStartTime += midiTicksPerBar * song.loopLength;\r\n                    writeEventTime(barStartTime);\r\n                    writer.writeUint8(MidiEventType.meta);\r\n                    writer.writeMidi7Bits(MidiMetaEventMessage.marker);\r\n                    writer.writeMidiAscii(loopIndex < Number(this._loopDropDown.value) - 1 ? \"Loop Repeat\" : \"Loop End\");\r\n                }\r\n\r\n                if (this._enableOutro.checked) barStartTime += midiTicksPerBar * (song.barCount - song.loopStart - song.loopLength);\r\n                if (barStartTime != midiTicksPerBar * unrolledBars.length) throw new Error(\"Miscalculated number of bars.\");\r\n\r\n            } else {\r\n                // For remaining tracks, set up the instruments and write the notes:\r\n\r\n                let channelName: string = isNoise\r\n                    ? \"noise channel \" + channel\r\n                    : \"pitch channel \" + channel;\r\n                writeEventTime(0);\r\n                writer.writeUint8(MidiEventType.meta);\r\n                writer.writeMidi7Bits(MidiMetaEventMessage.trackName);\r\n                writer.writeMidiAscii(channelName);\r\n\r\n                // This sets up pitch bend range. First we choose the pitch bend RPN (which has MSB and LSB components), then we set the value for that RPN (which also has MSB and LSB components) and finally reset the current RPN to null, which is considered best practice.\r\n                writeEventTime(0); writeControlEvent(MidiControlEventMessage.registeredParameterNumberMSB, MidiRegisteredParameterNumberMSB.pitchBendRange);\r\n                writeEventTime(0); writeControlEvent(MidiControlEventMessage.registeredParameterNumberLSB, MidiRegisteredParameterNumberLSB.pitchBendRange);\r\n                writeEventTime(0); writeControlEvent(MidiControlEventMessage.setParameterMSB, pitchBendRange); // pitch bend semitone range\r\n                writeEventTime(0); writeControlEvent(MidiControlEventMessage.setParameterLSB, 0); // pitch bend cent range\r\n                writeEventTime(0); writeControlEvent(MidiControlEventMessage.registeredParameterNumberMSB, MidiRegisteredParameterNumberMSB.reset);\r\n                writeEventTime(0); writeControlEvent(MidiControlEventMessage.registeredParameterNumberLSB, MidiRegisteredParameterNumberLSB.reset);\r\n\r\n                let prevInstrumentIndex: number = -1;\r\n                function writeInstrumentSettings(instrumentIndex: number): void {\r\n                    const instrument: Instrument = song.channels[channel].instruments[instrumentIndex];\r\n                    const preset: Preset | null = EditorConfig.valueToPreset(instrument.preset);\r\n\r\n                    if (prevInstrumentIndex != instrumentIndex) {\r\n                        prevInstrumentIndex = instrumentIndex;\r\n                        writeEventTime(barStartTime);\r\n                        writer.writeUint8(MidiEventType.meta);\r\n                        writer.writeMidi7Bits(MidiMetaEventMessage.instrumentName);\r\n                        writer.writeMidiAscii(\"Instrument \" + (instrumentIndex + 1));\r\n\r\n                        if (!isDrumset) {\r\n                            let instrumentProgram: number = 81; // default to sawtooth wave. \r\n\r\n                            if (preset != null && preset.midiProgram != undefined) {\r\n                                instrumentProgram = preset.midiProgram;\r\n                            } else if (instrument.type == InstrumentType.drumset) {\r\n                                // The first BeepBox drumset channel is handled as a Midi drumset channel and doesn't need a program, but any subsequent drumsets will just be set to taiko.\r\n                                instrumentProgram = 116; // taiko\r\n                            } else {\r\n                                if (instrument.type == InstrumentType.noise || instrument.type == InstrumentType.spectrum) {\r\n                                    if (isNoise) {\r\n                                        instrumentProgram = 116; // taiko\r\n                                    } else {\r\n                                        instrumentProgram = 75; // pan flute\r\n                                    }\r\n                                } else if (instrument.type == InstrumentType.chip) {\r\n                                    if (ExportPrompt.midiChipInstruments.length > instrument.chipWave) {\r\n                                        instrumentProgram = ExportPrompt.midiChipInstruments[instrument.chipWave];\r\n                                    }\r\n                                } else if (instrument.type == InstrumentType.pwm || instrument.type == InstrumentType.fm || instrument.type == InstrumentType.fm6op || instrument.type == InstrumentType.harmonics) {\r\n                                    instrumentProgram = 81; // sawtooth\r\n                                } else if (instrument.type == InstrumentType.pickedString) {\r\n                                    instrumentProgram = 0x19; // steel guitar\r\n                                } else if (instrument.type == InstrumentType.customChipWave) {\r\n                                    instrumentProgram = 81; // sawtooth\r\n                                } else {\r\n                                    throw new Error(\"Unrecognized instrument type.\");\r\n                                }\r\n                            }\r\n\r\n                            // Program (instrument) change event:\r\n                            writeEventTime(barStartTime);\r\n                            writer.writeUint8(MidiEventType.programChange | midiChannel);\r\n                            writer.writeMidi7Bits(instrumentProgram);\r\n                        }\r\n\r\n                        // Instrument volume:\r\n                        writeEventTime(barStartTime);\r\n                        let instrumentVolume: number = volumeMultToMidiVolume(Synth.instrumentVolumeToVolumeMult(instrument.volume));\r\n                        writeControlEvent(MidiControlEventMessage.volumeMSB, Math.min(0x7f, Math.round(instrumentVolume)));\r\n\r\n                        // Instrument pan:\r\n                        writeEventTime(barStartTime);\r\n                        let instrumentPan: number = (instrument.pan / Config.panCenter - 1) * 0x3f + 0x40;\r\n                        writeControlEvent(MidiControlEventMessage.panMSB, Math.min(0x7f, Math.round(instrumentPan)));\r\n                    }\r\n                }\r\n                if (song.getPattern(channel, 0) == null) {\r\n                    // Go ahead and apply the instrument settings at the beginning of the channel\r\n                    // even if a bar doesn't kick in until later.\r\n                    writeInstrumentSettings(0);\r\n                }\r\n\r\n                let prevPitchBend: number = defaultMidiPitchBend;\r\n                let prevExpression: number = defaultMidiExpression;\r\n                let shouldResetExpressionAndPitchBend: boolean = false;\r\n                //let prevTremolo: number = -1;\r\n                const channelRoot: number = isNoise ? Config.spectrumBasePitch : Config.keys[song.key].basePitch;\r\n                const intervalScale: number = isNoise ? Config.noiseInterval : 1;\r\n\r\n                for (const bar of unrolledBars) {\r\n                    const pattern: Pattern | null = song.getPattern(channel, bar);\r\n\r\n                    if (pattern != null) {\r\n\r\n                        const instrumentIndex: number = pattern.instruments[0]; // Don't bother trying to export multiple instruments per pattern to midi, just pick the first one.\r\n                        const instrument: Instrument = song.channels[channel].instruments[instrumentIndex];\r\n                        const preset: Preset | null = EditorConfig.valueToPreset(instrument.preset);\r\n                        writeInstrumentSettings(instrumentIndex);\r\n\r\n                        let usesArpeggio: boolean = instrument.getChord().arpeggiates;\r\n                        let polyphony: number = usesArpeggio ? 1 : Config.maxChordSize;\r\n                        if (instrument.getChord().customInterval) {\r\n                            if (instrument.type == InstrumentType.chip || instrument.type == InstrumentType.harmonics) {\r\n                                polyphony = 2;\r\n                                usesArpeggio = true;\r\n                            } else if (instrument.type == InstrumentType.fm) {\r\n                                polyphony = Config.operatorCount;\r\n                            } else {\r\n                                console.error(\"Unrecognized instrument type for harmonizing arpeggio: \" + instrument.type);\r\n                            }\r\n                        }\r\n\r\n                        for (let noteIndex: number = 0; noteIndex < pattern.notes.length; noteIndex++) {\r\n                            const note: Note = pattern.notes[noteIndex];\r\n\r\n                            const noteStartTime: number = barStartTime + note.start * midiTicksPerPart;\r\n                            let pinTime: number = noteStartTime;\r\n                            let pinSize: number = note.pins[0].size;\r\n                            let pinInterval: number = note.pins[0].interval;\r\n                            const prevPitches: number[] = [-1, -1, -1, -1];\r\n                            const nextPitches: number[] = [-1, -1, -1, -1];\r\n                            const toneCount: number = Math.min(polyphony, note.pitches.length);\r\n                            const velocity: number = isDrumset ? Math.max(1, Math.round(defaultNoteVelocity * note.pins[0].size / Config.noteSizeMax)) : defaultNoteVelocity;\r\n\r\n                            // The maximum midi pitch bend range is +/- 24 semitones from the base pitch. \r\n                            // To make the most of this, choose a base pitch that is within 24 semitones from as much of the note as possible.\r\n                            // This may involve offsetting this base pitch from BeepBox's note pitch.\r\n                            let mainInterval: number = note.pickMainInterval();\r\n                            let pitchOffset: number = mainInterval * intervalScale;\r\n                            if (!isDrumset) {\r\n                                let maxPitchOffset: number = pitchBendRange;\r\n                                let minPitchOffset: number = -pitchBendRange;\r\n                                for (let pinIndex: number = 1; pinIndex < note.pins.length; pinIndex++) {\r\n                                    const interval = note.pins[pinIndex].interval * intervalScale;\r\n                                    maxPitchOffset = Math.min(maxPitchOffset, interval + pitchBendRange);\r\n                                    minPitchOffset = Math.max(minPitchOffset, interval - pitchBendRange);\r\n                                }\r\n                                /*\r\n                                // I'd like to be able to use pitch bend to implement arpeggio, but the \"custom inverval\" setting in chip instruments combines arpeggio in one tone with another flat tone, and midi can't selectively apply arpeggio to one out of two simultaneous tones. Also it would be hard to reimport. :/\r\n                                if (usesArpeggio && note.pitches.length > polyphony) {\r\n                                    let lowestArpeggioOffset: number = 0;\r\n                                    let highestArpeggioOffset: number = 0;\r\n                                    const basePitch: number = note.pitches[toneCount - 1];\r\n                                    for (let pitchIndex: number = toneCount; pitchIndex < note.pitches.length; pitchIndex++) {\r\n                                        lowestArpeggioOffset = Math.min(note.pitches[pitchIndex] - basePitch);\r\n                                        highestArpeggioOffset = Math.max(note.pitches[pitchIndex] - basePitch);\r\n                                    }\r\n                                    maxPitchOffset -= lowestArpeggioOffset;\r\n                                    minPitchOffset += lowestArpeggioOffset;\r\n                                }\r\n                                */\r\n                                pitchOffset = Math.min(maxPitchOffset, Math.max(minPitchOffset, pitchOffset));\r\n                            }\r\n\r\n                            for (let pinIndex: number = 1; pinIndex < note.pins.length; pinIndex++) {\r\n                                const nextPinTime: number = noteStartTime + note.pins[pinIndex].time * midiTicksPerPart;\r\n                                const nextPinSize: number = note.pins[pinIndex].size;\r\n                                const nextPinInterval: number = note.pins[pinIndex].interval;\r\n\r\n                                const length: number = nextPinTime - pinTime;\r\n                                for (let midiTick: number = 0; midiTick < length; midiTick++) {\r\n                                    const midiTickTime: number = pinTime + midiTick;\r\n                                    const linearSize: number = lerp(pinSize, nextPinSize, midiTick / length);\r\n                                    const linearInterval: number = lerp(pinInterval, nextPinInterval, midiTick / length);\r\n\r\n                                    const interval: number = linearInterval * intervalScale - pitchOffset;\r\n\r\n                                    const pitchBend: number = Math.max(0, Math.min(0x3fff, Math.round(0x2000 * (1.0 + interval / pitchBendRange))));\r\n\r\n                                    const expression: number = Math.min(0x7f, Math.round(volumeMultToMidiExpression(Synth.noteSizeToVolumeMult(linearSize))));\r\n\r\n                                    if (pitchBend != prevPitchBend) {\r\n                                        writeEventTime(midiTickTime);\r\n                                        writer.writeUint8(MidiEventType.pitchBend | midiChannel);\r\n                                        writer.writeMidi7Bits(pitchBend & 0x7f); // least significant bits\r\n                                        writer.writeMidi7Bits((pitchBend >> 7) & 0x7f); // most significant bits\r\n                                        prevPitchBend = pitchBend;\r\n                                    }\r\n\r\n                                    if (expression != prevExpression && !isDrumset) {\r\n                                        writeEventTime(midiTickTime);\r\n                                        writeControlEvent(MidiControlEventMessage.expressionMSB, expression);\r\n                                        prevExpression = expression;\r\n                                    }\r\n\r\n                                    const noteStarting: boolean = midiTickTime == noteStartTime;\r\n                                    for (let toneIndex: number = 0; toneIndex < toneCount; toneIndex++) {\r\n                                        let nextPitch: number = note.pitches[toneIndex];\r\n                                        if (isDrumset) {\r\n                                            nextPitch += mainInterval;\r\n                                            const drumsetMap: number[] = [\r\n                                                36, // Bass Drum 1\r\n                                                41, // Low Floor Tom\r\n                                                45, // Low Tom\r\n                                                48, // Hi-Mid Tom\r\n                                                40, // Electric Snare\r\n                                                39, // Hand Clap\r\n                                                59, // Ride Cymbal 2\r\n                                                49, // Crash Cymbal 1\r\n                                                46, // Open Hi-Hat\r\n                                                55, // Splash Cymbal\r\n                                                69, // Cabasa\r\n                                                54, // Tambourine\r\n                                            ];\r\n                                            if (nextPitch < 0 || nextPitch >= drumsetMap.length) throw new Error(\"Could not find corresponding drumset pitch. \" + nextPitch);\r\n                                            nextPitch = drumsetMap[nextPitch];\r\n                                        } else {\r\n                                            if (usesArpeggio && note.pitches.length > toneIndex + 1 && toneIndex == toneCount - 1) {\r\n                                                const midiTicksSinceBeat = (midiTickTime - barStartTime) % midiTicksPerBeat;\r\n                                                const midiTicksPerArpeggio = Config.ticksPerArpeggio * midiTicksPerPart / Config.ticksPerPart;\r\n                                                const arpeggio: number = Math.floor(midiTicksSinceBeat / midiTicksPerArpeggio);\r\n                                                nextPitch = note.pitches[toneIndex + getArpeggioPitchIndex(note.pitches.length - toneIndex, instrument.fastTwoNoteArp, arpeggio)];\r\n                                            }\r\n                                            nextPitch = channelRoot + nextPitch * intervalScale + pitchOffset;\r\n                                            if (preset != null && preset.midiSubharmonicOctaves != undefined) {\r\n                                                nextPitch += 12 * preset.midiSubharmonicOctaves;\r\n                                            } else if (isNoise) {\r\n                                                nextPitch += 12 * (+EditorConfig.presetCategories.dictionary[\"Drum Presets\"].presets.dictionary[\"taiko drum\"].midiSubharmonicOctaves!);\r\n                                            }\r\n\r\n                                            if (isNoise) nextPitch *= 2;\r\n                                        }\r\n                                        nextPitch = Math.max(0, Math.min(127, nextPitch));\r\n                                        nextPitches[toneIndex] = nextPitch;\r\n\r\n                                        if (!noteStarting && prevPitches[toneIndex] != nextPitches[toneIndex]) {\r\n                                            writeEventTime(midiTickTime);\r\n                                            writer.writeUint8(MidiEventType.noteOff | midiChannel);\r\n                                            writer.writeMidi7Bits(prevPitches[toneIndex]); // old pitch\r\n                                            writer.writeMidi7Bits(velocity); // velocity\r\n                                        }\r\n                                    }\r\n\r\n                                    for (let toneIndex: number = 0; toneIndex < toneCount; toneIndex++) {\r\n                                        if (noteStarting || prevPitches[toneIndex] != nextPitches[toneIndex]) {\r\n                                            writeEventTime(midiTickTime);\r\n                                            writer.writeUint8(MidiEventType.noteOn | midiChannel);\r\n                                            writer.writeMidi7Bits(nextPitches[toneIndex]); // new pitch\r\n                                            writer.writeMidi7Bits(velocity); // velocity\r\n                                            prevPitches[toneIndex] = nextPitches[toneIndex];\r\n                                        }\r\n                                    }\r\n                                }\r\n\r\n                                pinTime = nextPinTime;\r\n                                pinSize = nextPinSize;\r\n                                pinInterval = nextPinInterval;\r\n                            }\r\n\r\n\t\t\t\t\t\t\tconst noteEndTime: number = barStartTime + note.end * midiTicksPerPart;\r\n\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t\t// End all tones.\r\n\t\t\t\t\t\t\tfor (let toneIndex: number = 0; toneIndex < toneCount; toneIndex++) {\r\n\t\t\t\t\t\t\t\t// TODO: If the note at the start of the next pattern has\r\n\t\t\t\t\t\t\t\t// continuesLastPattern and has the same chord, it ought to extend\r\n\t\t\t\t\t\t\t\t// this previous note.\r\n\t\t\t\t\t\t\t\twriteEventTime(noteEndTime);\r\n\t\t\t\t\t\t\t\twriter.writeUint8(MidiEventType.noteOff | midiChannel);\r\n\t\t\t\t\t\t\t\twriter.writeMidi7Bits(prevPitches[toneIndex]); // pitch\r\n\t\t\t\t\t\t\t\twriter.writeMidi7Bits(velocity); // velocity\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t\tshouldResetExpressionAndPitchBend = true;\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t} else {\r\n\t\t\t\t\t\tif (shouldResetExpressionAndPitchBend) {\r\n\t\t\t\t\t\t\tshouldResetExpressionAndPitchBend = false;\r\n\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t\tif (prevExpression != defaultMidiExpression) {\r\n\t\t\t\t\t\t\t\tprevExpression = defaultMidiExpression;\r\n\t\t\t\t\t\t\t\t// Reset expression\r\n\t\t\t\t\t\t\t\twriteEventTime(barStartTime);\r\n\t\t\t\t\t\t\t\twriteControlEvent(MidiControlEventMessage.expressionMSB, prevExpression);\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\r\n\t\t\t\t\t\t\tif (prevPitchBend != defaultMidiPitchBend) {\r\n\t\t\t\t\t\t\t\t// Reset pitch bend\r\n\t\t\t\t\t\t\t\tprevPitchBend = defaultMidiPitchBend;\r\n\t\t\t\t\t\t\t\twriteEventTime(barStartTime);\r\n\t\t\t\t\t\t\t\twriter.writeUint8(MidiEventType.pitchBend | midiChannel);\r\n\t\t\t\t\t\t\t\twriter.writeMidi7Bits(prevPitchBend & 0x7f); // least significant bits\r\n\t\t\t\t\t\t\t\twriter.writeMidi7Bits((prevPitchBend >> 7) & 0x7f); // most significant bits\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t\t\r\n\t\t\t\t\tbarStartTime += midiTicksPerBar;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\t\r\n\t\t\twriteEventTime(barStartTime);\r\n\t\t\twriter.writeUint8(MidiEventType.meta);\r\n\t\t\twriter.writeMidi7Bits(MidiMetaEventMessage.endOfTrack);\r\n\t\t\twriter.writeMidiVariableLength(0x00);\r\n\t\t\t\r\n\t\t\t// Finally, write the length of the track in bytes at the front of the track.\r\n\t\t\twriter.rewriteUint32(trackStartIndex, writer.getWriteIndex() - trackStartIndex - 4);\r\n\t\t}\r\n\t\t\r\n\t\tconst blob: Blob = new Blob([writer.toCompactArrayBuffer()], {type: \"audio/midi\"});\r\n\t\tsave(blob, this._fileName.value.trim() + \".mid\");\r\n\t\t\r\n\t\tthis._close();\r\n\t}\r\n\t\r\n\tprivate _exportToJson(): void {\r\n\t\tconst jsonObject: Object = this._doc.song.toJsonObject(this._enableIntro.checked, Number(this._loopDropDown.value), this._enableOutro.checked);\r\n\t\tconst jsonString: string = JSON.stringify(jsonObject, null, '\\t');\r\n\t\tconst blob: Blob = new Blob([jsonString], {type: \"application/json\"});\r\n\t\tsave(blob, this._fileName.value.trim() + \".json\");\r\n\t\tthis._close();\r\n    }\r\n\r\n    private _exportToHtml(): void {\r\n        const fileContents = `\\\r\n<!DOCTYPE html><meta charset=\"utf-8\">\r\n\r\nYou should be redirected to the song at:<br /><br />\r\n\r\n<a id=\"destination\" href=\"${new URL(\"#\" + this._doc.song.toBase64String(), location.href).href}\"></a>\r\n\r\n<style>\r\n\t:root {\r\n\t\tcolor: white;\r\n\t\tbackground: black;\r\n\t\tfont-family:\r\n\t\tsans-serif;\r\n\t}\r\n\ta {\r\n\t\tcolor: #98f;\r\n\t}\r\n\ta[href]::before {\r\n\t\tcontent: attr(href);\r\n\t}\r\n</style>\r\n\r\n<script>\r\n\tlocation.assign(document.querySelector(\"a#destination\").href);\r\n</script>\r\n`;\r\n        const blob: Blob = new Blob([fileContents], { type: \"text/html\" });\r\n        save(blob, this._fileName.value.trim() + \".html\");\r\n        this._close();\r\n    }\r\n}\r\n","// Copyright (c) 2012-2022 John Nesky and contributing authors, distributed under the MIT license, see accompanying the LICENSE.md file.\r\n\r\nimport { HTML } from \"imperative-html/dist/esm/elements-strict\";\r\nimport { ColorConfig } from \"./ColorConfig\";\r\n\r\nexport class Layout {\r\n\tprivate static readonly _layoutMap: {[K: string]: string} = {\r\n\t\t\"small\": \"\",\r\n\t\t\"long\": `\\\r\n\r\n\t\t\t/* long layout */\r\n\t\t\t@media (min-width: 711px) {\r\n\t\t\t\t#beepboxEditorContainer {\r\n\t\t\t\t\tmax-width: initial;\r\n\t\t\t\t\theight: 100vh;\r\n\t\t\t\t}\r\n\t\t\t\t.beepboxEditor {\r\n\t\t\t\t\twidth: 100%;\r\n\t\t\t\t\theight: 100vh;\r\n\t\t\t\t\tgrid-template-columns: minmax(0, 1fr) 390px; /* minmax(0, 1fr) min-content; Chrome 80 grid layout regression. https://bugs.chromium.org/p/chromium/issues/detail?id=1050307 */\r\n\t\t\t\t\tgrid-template-rows: minmax(481px, 1fr) minmax(0, min-content);\r\n\t\t\t\t\tgrid-template-areas: \"pattern-area settings-area\" \"track-area track-area\";\r\n\t\t\t\t}\r\n\t\t\t\t.beepboxEditor .pattern-area {\r\n\t\t\t\t\twidth: 100%;\r\n\t\t\t\t\theight: 100%;\r\n\t\t\t\t}\r\n\t\t\t\t.beepboxEditor .track-area {\r\n\t\t\t\t\twidth: 100%;\r\n\t\t\t\t\tdisplay: flex;\r\n\t\t\t\t\tflex-direction: column;\r\n\t\t\t\t}\r\n\t\t\t\t.beepboxEditor .trackAndMuteContainer {\r\n\t\t\t\t\twidth: 100%;\r\n\t\t\t\t\tmin-height: 0;\r\n\t\t\t\t\tflex: 1;\r\n\t\t\t\t\toverflow: auto;\r\n\t\t\t\t\tmax-height: 97.5vh;\r\n\t\t\t\t}\r\n\t\t\t\t.beepboxEditor .instrument-settings-area {\r\n\t\t\t\t\toverflow-y: auto;\r\n\t\t\t\t\tposition: relative;\r\n\t\t\t\t}\r\n\t\t\t\t.beepboxEditor .instrument-settings-area > .editor-controls {\r\n\t\t\t\t\tposition: absolute;\r\n\t\t\t\t\twidth: 100%;\r\n\t\t\t\t}\r\n\t\t\t\t.beepboxEditor .song-settings-area {\r\n\t\t\t\t\toverflow-y: auto;\r\n\t\t\t\t}\r\n\t\t\t\t\r\n\t\t\t\t.beepboxEditor .settings-area {\r\n\t\t\t\t\twidth: 390px;\r\n\t\t\t\t\tgrid-template-columns: minmax(0, 1fr) minmax(0, 1fr);\r\n\t\t\t\t\tgrid-template-rows: auto auto auto minmax(0, 1fr);\r\n\t\t\t\t\tgrid-template-areas:\r\n\t\t\t\t\t\t\"instrument-settings-area version-area\"\r\n\t\t\t\t\t\t\"instrument-settings-area play-pause-area\"\r\n\t\t\t\t\t\t\"instrument-settings-area menu-area\"\r\n\t\t\t\t\t\t\"instrument-settings-area song-settings-area\";\r\n\t\t\t\t}\r\n\t\t\t\t\r\n\t\t\t\t.beepboxEditor .barScrollBar {\r\n\t\t\t\t\tdisplay: none;\r\n\t\t\t\t}\r\n\t\t\t\t.beepboxEditor.selectRow {\r\n\t\t\t\t\theight: 2em;\r\n\t\t\t\t}\r\n\t\t\t\t.beepboxEditor .operatorRow {\r\n\t\t\t\t\theiht: 2em;\r\n\t\t\t\t}\r\n\t\t\t\t.beepboxEditor .trackAndMuteContainer {\r\n\t\t\t\t\tmax-height: 446px;\r\n\t\t\t\t}\r\n\r\n\t\t\t\t.beepboxEditor .trackContainer {\r\n\t\t\t\t\toverflow: visible;\r\n\t\t\t\t}\r\n\t\t\t\t.beepboxEditor .trackAndMuteContainer {\r\n\t\t\t\t\tscrollbar-width: auto;\r\n\t\t\t\t\tscrollbar-color: ${ColorConfig.uiWidgetBackground} ${ColorConfig.editorBackground};\r\n\t\t\t\t}\r\n\t\t\t\t.beepboxEditor .trackAndMuteContainer::-webkit-scrollbar {\r\n\t\t\t\t\twidth: 20px;\r\n\t\t\t\t\theight: 20px;\r\n\t\t\t\t}\r\n\t\t\t\t.beepboxEditor .trackAndMuteContainer::-webkit-scrollbar-track {\r\n\t\t\t\t\tbackground: ${ColorConfig.editorBackground};\r\n\t\t\t\t}\r\n\t\t\t\t.beepboxEditor .trackAndMuteContainer::-webkit-scrollbar-thumb {\r\n\t\t\t\t\tbackground-color: ${ColorConfig.uiWidgetBackground};\r\n\t\t\t\t\tborder: 3px solid ${ColorConfig.editorBackground};\r\n\t\t\t\t}\r\n\t\t\t\t.beepboxEditor .trackAndMuteContainer::-webkit-scrollbar-corner {\r\n\t\t\t\t\tbackground-color: ${ColorConfig.editorBackground};\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t`,\r\n\t\t\"tall\": `\\\r\n\t\t\t/* tall layout */\r\n\t\t\t@media (min-width: 711px) {\r\n\t\t\t\t#beepboxEditorContainer {\r\n\t\t\t\t\tmax-width: initial;\r\n\t\t\t\t\theight: 100vh;\r\n\t\t\t\t}\r\n\t\t\t\t.beepboxEditor {\r\n\t\t\t\t\twidth: 100%;\r\n\t\t\t\t\theight: 100vh;\r\n\t\t\t\t\tgrid-template-columns: minmax(0, 1fr) minmax(0, 1fr) 192px;\r\n\t\t\t\t\tgrid-template-rows: 1fr;\r\n\t\t\t\t\tgrid-template-areas: \"track-area pattern-area settings-area\";\r\n\t\t\t\t}\r\n\t\t\t\t.beepboxEditor .pattern-area {\r\n\t\t\t\t\twidth: 100%;\r\n\t\t\t\t\theight: 100%;\r\n\t\t\t\t}\r\n\t\t\t\t.beepboxEditor .track-area {\r\n\t\t\t\t\twidth: 100%;\r\n\t\t\t\t\theight: 100%;\r\n\t\t\t\t\tdisplay: flex;\r\n\t\t\t\t\tflex-direction: column;\r\n\t\t\t\t\tjustify-content: center;\r\n\t\t\t\t}\r\n\t\t\t\t.beepboxEditor .trackAndMuteContainer {\r\n\t\t\t\t\twidth: 100%;\r\n\t\t\t\t\tmin-height: 0;\r\n\t\t\t\t\tflex: 0;\r\n\t\t\t\t\toverflow: auto;\r\n\t\t\t\t\tflex-basis: initial;\r\n\t\t\t\t\tflex-grow: 0;\r\n\t\t\t\t\tmax-height: 97.5vh;\r\n\t\t\t\t}\r\n\t\t\t\t.beepboxEditor .instrument-settings-area > .editor-controls {\r\n\t\t\t\t\tposition: absolute;\r\n\t\t\t\t\twidth: 100%;\r\n\t\t\t\t}\r\n\t\t\t\t\r\n\t\t\t\t.beepboxEditor .settings-area {\r\n\t\t\t\t\twidth: 192px;\r\n\t\t\t\t\tposition: relative;\r\n\t\t\t\t\toverflow-y: auto;\r\n\t\t\t\t\tgrid-template-columns: minmax(0, 1fr);\r\n\t\t\t\t\tgrid-template-rows: auto auto auto auto minmax(0, 1fr);\r\n\t\t\t\t\tgrid-template-areas:\r\n\t\t\t\t\t\t\"version-area\"\r\n\t\t\t\t\t\t\"play-pause-area\"\r\n\t\t\t\t\t\t\"menu-area\"\r\n\t\t\t\t\t\t\"song-settings-area\"\r\n\t\t\t\t\t\t\"instrument-settings-area\";\r\n\t\t\t\t}\r\n\t\t\t\t.beepboxEditor .version-area {\r\n\t\t\t\t\tposition: sticky;\r\n\t\t\t\t\ttop: 0;\r\n\t\t\t\t\tz-index: 1;\r\n\t\t\t\t\tbackground: ${ColorConfig.editorBackground};\r\n\t\t\t\t}\r\n\t\t\t\t.beepboxEditor .play-pause-area {\r\n\t\t\t\t\tposition: sticky;\r\n\t\t\t\t\ttop: 22px;\r\n\t\t\t\t\tz-index: 1;\r\n\t\t\t\t\tbackground: ${ColorConfig.editorBackground};\r\n\t\t\t\t}\r\n\t\t\t\t.beepboxEditor .menu-area {\r\n\t\t\t\t\tposition: sticky;\r\n\t\t\t\t\ttop: 82px;\r\n\t\t\t\t\tz-index: 1;\r\n\t\t\t\t\tbackground: ${ColorConfig.editorBackground};\r\n\t\t\t\t}\r\n\t\t\t\t\r\n\t\t\t\t.beepboxEditor .barScrollBar {\r\n\t\t\t\t\tdisplay: none;\r\n\t\t\t\t}\r\n\t\t\t\t.beepboxEditor .trackContainer {\r\n\t\t\t\t\toverflow: visible;\r\n\t\t\t\t}\r\n\t\t\t\t.beepboxEditor .trackAndMuteContainer {\r\n\t\t\t\t\tscrollbar-width: auto;\r\n\t\t\t\t\tscrollbar-color: ${ColorConfig.uiWidgetBackground} ${ColorConfig.editorBackground};\r\n\t\t\t\t}\r\n\t\t\t\t.beepboxEditor .trackAndMuteContainer::-webkit-scrollbar {\r\n\t\t\t\t\twidth: 20px;\r\n\t\t\t\t\theight: 20px;\r\n\t\t\t\t}\r\n\t\t\t\t.beepboxEditor .trackAndMuteContainer::-webkit-scrollbar-track {\r\n\t\t\t\t\tbackground: ${ColorConfig.editorBackground};\r\n\t\t\t\t}\r\n\t\t\t\t.beepboxEditor .trackAndMuteContainer::-webkit-scrollbar-thumb {\r\n\t\t\t\t\tbackground-color: ${ColorConfig.uiWidgetBackground};\r\n\t\t\t\t\tborder: 3px solid ${ColorConfig.editorBackground};\r\n\t\t\t\t}\r\n\t\t\t\t.beepboxEditor .trackAndMuteContainer::-webkit-scrollbar-corner {\r\n\t\t\t\t\tbackground-color: ${ColorConfig.editorBackground};\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t`,\r\n\t\t\"wide\": `\\\r\n\t\t\t/* wide (JB) layout */\r\n\t\t\t@media (min-width: 1001px) {\r\n\t\t\t\t#beepboxEditorContainer {\r\n\t\t\t\t\tmax-width: initial;\r\n\t\t\t\t\theight: 100vh;\r\n\t\t\t\t}\r\n\t\t\t\t.beepboxEditor {\r\n\t\t\t\t\twidth: 100%;\r\n\t\t\t\t\theight: 100vh;\r\n\t\t\t\t\tgrid-template-columns: 512px minmax(0, 1fr) 30em;\r\n\t\t\t\t\tgrid-template-rows: minmax(481px, 1fr) min-content;\r\n\t\t\t\t\tgrid-template-areas: \"track-area pattern-area settings-area\";\r\n\t\t\t\t}\r\n\t\t\t\t.beepboxEditor .pattern-area {\r\n\t\t\t\t\twidth: 100%;\r\n\t\t\t\t\theight: 100%;\r\n\t\t\t\t}\r\n\t\t\t\t.beepboxEditor .track-area {\r\n\t\t\t\t\twidth: 100%;\r\n\t\t\t\t\theight: 100%;\r\n\t\t\t\t\tmax-height: 100%\r\n\t\t\t\t}\r\n\t\t\t\t.beepboxEditor .editor-widget-column {\r\n\t\t\t\t\tflex: 0;\r\n\t\t\t\t}\r\n\t\t\t\t.beepboxEditor .trackAndMuteContainer {\r\n\t\t\t\t\twidth: 100%;\r\n\t\t\t\t\tflex: 0;\r\n\t\t\t\t\tflex-basis: initial;\r\n\t\t\t\t\tflex-grow: 0;\r\n\t\t\t\t\toverflow-y: auto;\r\n\t\t\t\t\tmax-height: 97.5vh;\r\n\t\t\t\t}\r\n\t\t\t\t.beepboxEditor .instrument-settings-area {\r\n\t\t\t\t\toverflow-y: auto;\r\n\t\t\t\t\tposition: relative;\r\n\t\t\t\t}\r\n\t\t\t\t.beepboxEditor .instrument-settings-area > .editor-controls {\r\n\t\t\t\t\tposition: absolute;\r\n\t\t\t\t\twidth: 100%;\r\n\t\t\t\t}\r\n\t\t\t\t\r\n\t\t\t\t.beepboxEditor .song-settings-area {\r\n\t\t\t\t\toverflow-y: auto;\r\n\t\t\t\t}\r\n\t\t\t\t\r\n\t\t\t\t.beepboxEditor .settings-area {\r\n\t\t\t\t\twidth: 30em;\r\n\t\t\t\t\tgrid-template-columns: minmax(0, 1fr) minmax(0, 1fr);\r\n\t\t\t\t\tgrid-template-rows: auto auto auto minmax(0, 1fr);\r\n\t\t\t\t\tgrid-template-areas:\r\n\t\t\t\t\t\t\"instrument-settings-area version-area\"\r\n\t\t\t\t\t\t\"instrument-settings-area play-pause-area\"\r\n\t\t\t\t\t\t\"instrument-settings-area menu-area\"\r\n\t\t\t\t\t\t\"instrument-settings-area song-settings-area\";\r\n\t\t\t\t}\r\n\t\t\t\t.beepboxEditor .version-area {\r\n\t\t\t\t\tposition: sticky;\r\n\t\t\t\t\ttop: 0;\r\n\t\t\t\t\tz-index: 1;\r\n\t\t\t\t\tbackground: ${ColorConfig.editorBackground};\r\n\t\t\t\t}\r\n\t\t\t\t.beepboxEditor .play-pause-area {\r\n\t\t\t\t\tposition: sticky;\r\n\t\t\t\t\ttop: 22px;\r\n\t\t\t\t\tz-index: 1;\r\n\t\t\t\t\tbackground: ${ColorConfig.editorBackground};\r\n\t\t\t\t}\r\n\t\t\t\t.beepboxEditor .menu-area {\r\n\t\t\t\t\tposition: sticky;\r\n\t\t\t\t\ttop: 82px;\r\n\t\t\t\t\tz-index: 1;\r\n\t\t\t\t\tbackground: ${ColorConfig.editorBackground};\r\n\t\t\t\t}\r\n\t\t\t\t\r\n\t\t\t\t.beepboxEditor .trackContainer {\r\n\t\t\t\t\toverflow: visible;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t`,\r\n\t}\r\n\t\t\r\n\t\tprivate static readonly _styleElement: HTMLStyleElement = document.head.appendChild(HTML.style({type: \"text/css\"}));\r\n\t\t\r\n\tpublic static setLayout(layout: string): void {\r\n\t\tthis._styleElement.textContent = this._layoutMap[layout];\r\n\t}\r\n}\r\n","// Copyright (c) 2012-2022 John Nesky and contributing authors, distributed under the MIT license, see accompanying the LICENSE.md file.\r\n\r\nimport { Config } from \"../synth/SynthConfig\";\r\nimport { HarmonicsWave, Instrument } from \"../synth/synth\";\r\nimport { SongDocument } from \"./SongDocument\";\r\nimport { HTML, SVG } from \"imperative-html/dist/esm/elements-strict\";\r\nimport { ColorConfig } from \"./ColorConfig\";\r\nimport { ChangeHarmonics } from \"./changes\";\r\nimport { prettyNumber } from \"./EditorConfig\";\r\n\r\nexport class HarmonicsEditor {\r\n\tprivate readonly _editorWidth: number = 120;\r\n\tprivate readonly _editorHeight: number = 26;\r\n\t\tprivate readonly _octaves: SVGSVGElement = SVG.svg({\"pointer-events\": \"none\"});\r\n\t\tprivate readonly _fifths: SVGSVGElement = SVG.svg({\"pointer-events\": \"none\"});\r\n\t\tprivate readonly _curve: SVGPathElement = SVG.path({fill: \"none\", stroke: \"currentColor\", \"stroke-width\": 2, \"pointer-events\": \"none\"});\r\n\tprivate readonly _lastControlPoints: SVGRectElement[] = [];\r\n\t\tprivate readonly _lastControlPointContainer: SVGSVGElement = SVG.svg({\"pointer-events\": \"none\"});\r\n\tprivate readonly _svg: SVGSVGElement = SVG.svg({ style: \"background-color: ${ColorConfig.editorBackground}; touch-action: none; cursor: crosshair;\", width: \"100%\", height: \"100%\", viewBox: \"0 0 \" + this._editorWidth + \" \" + this._editorHeight, preserveAspectRatio: \"none\" },\r\n\t\tthis._octaves,\r\n\t\tthis._fifths,\r\n\t\tthis._curve,\r\n\t\tthis._lastControlPointContainer,\r\n\t);\r\n\t\t\r\n\tpublic readonly container: HTMLElement = HTML.div({class: \"harmonics\", style: \"height: 100%;\"}, this._svg);\r\n\t\t\r\n\tprivate _mouseX: number = 0;\r\n\tprivate _mouseY: number = 0;\r\n\tprivate _freqPrev: number = 0;\r\n\tprivate _ampPrev: number = 0;\r\n\tprivate _mouseDown: boolean = false;\r\n\tprivate _change: ChangeHarmonics | null = null;\r\n\tprivate _renderedPath: String = \"\";\r\n\tprivate _renderedFifths: boolean = true;\r\n\t\t\r\n\tconstructor(private _doc: SongDocument) {\r\n\t\tfor (let i: number = 1; i <= Config.harmonicsControlPoints; i = i * 2) {\r\n\t\t\t\tthis._octaves.appendChild(SVG.rect({fill: ColorConfig.tonic, x: (i-0.5) * (this._editorWidth - 8) / (Config.harmonicsControlPoints - 1) - 1, y: 0, width: 2, height: this._editorHeight}));\r\n\t\t}\r\n\t\tfor (let i: number = 3; i <= Config.harmonicsControlPoints; i = i * 2) {\r\n\t\t\t\tthis._fifths.appendChild(SVG.rect({fill: ColorConfig.fifthNote, x: (i-0.5) * (this._editorWidth - 8) / (Config.harmonicsControlPoints - 1) - 1, y: 0, width: 2, height: this._editorHeight}));\r\n\t\t}\r\n\t\tfor (let i: number = 0; i < 4; i++) {\r\n\t\t\t\tconst rect: SVGRectElement = SVG.rect({fill: \"currentColor\", x: (this._editorWidth - i * 2 - 1), y: 0, width: 1, height: this._editorHeight});\r\n\t\t\tthis._lastControlPoints.push(rect);\r\n\t\t\tthis._lastControlPointContainer.appendChild(rect);\r\n\t\t}\r\n\t\t\t\r\n\t\tthis.container.addEventListener(\"mousedown\", this._whenMousePressed);\r\n\t\tdocument.addEventListener(\"mousemove\", this._whenMouseMoved);\r\n\t\tdocument.addEventListener(\"mouseup\", this._whenCursorReleased);\r\n\t\t\t\r\n\t\tthis.container.addEventListener(\"touchstart\", this._whenTouchPressed);\r\n\t\tthis.container.addEventListener(\"touchmove\", this._whenTouchMoved);\r\n\t\tthis.container.addEventListener(\"touchend\", this._whenCursorReleased);\r\n\t\tthis.container.addEventListener(\"touchcancel\", this._whenCursorReleased);\r\n\t}\r\n\t\t\r\n\tprivate _xToFreq(x: number): number {\r\n\t\treturn (Config.harmonicsControlPoints - 1) * x / (this._editorWidth - 8) - 0.5;\r\n\t}\r\n\t\t\r\n\tprivate _yToAmp(y: number): number {\r\n\t\treturn Config.harmonicsMax * (1 - y / this._editorHeight);\r\n\t}\r\n\t\t\r\n\tprivate _whenMousePressed = (event: MouseEvent): void => {\r\n\t\tevent.preventDefault();\r\n\t\tthis._mouseDown = true;\r\n\t\tconst boundingRect: ClientRect = this._svg.getBoundingClientRect();\r\n\t\tthis._mouseX = ((event.clientX || event.pageX) - boundingRect.left) * this._editorWidth / (boundingRect.right - boundingRect.left);\r\n\t\tthis._mouseY = ((event.clientY || event.pageY) - boundingRect.top) * this._editorHeight / (boundingRect.bottom - boundingRect.top);\r\n\t\tif (isNaN(this._mouseX)) this._mouseX = 0;\r\n\t\tif (isNaN(this._mouseY)) this._mouseY = 0;\r\n\t\t    \r\n\t\tthis._freqPrev = this._xToFreq(this._mouseX);\r\n\t\tthis._ampPrev = this._yToAmp(this._mouseY);\r\n\t\tthis._whenCursorMoved();\r\n\t}\r\n\t\t\r\n\tprivate _whenTouchPressed = (event: TouchEvent): void => {\r\n\t\tevent.preventDefault();\r\n\t\tthis._mouseDown = true;\r\n\t\tconst boundingRect: ClientRect = this._svg.getBoundingClientRect();\r\n\t\tthis._mouseX = (event.touches[0].clientX - boundingRect.left) * this._editorWidth / (boundingRect.right - boundingRect.left);\r\n\t\tthis._mouseY = (event.touches[0].clientY - boundingRect.top) * this._editorHeight / (boundingRect.bottom - boundingRect.top);\r\n\t\tif (isNaN(this._mouseX)) this._mouseX = 0;\r\n\t\tif (isNaN(this._mouseY)) this._mouseY = 0;\r\n\t\t    \r\n\t\tthis._freqPrev = this._xToFreq(this._mouseX);\r\n\t\tthis._ampPrev = this._yToAmp(this._mouseY);\r\n\t\tthis._whenCursorMoved();\r\n\t}\r\n\t\t\r\n\tprivate _whenMouseMoved = (event: MouseEvent): void => {\r\n\t\tif (this.container.offsetParent == null) return;\r\n\t\tconst boundingRect: ClientRect = this._svg.getBoundingClientRect();\r\n\t\tthis._mouseX = ((event.clientX || event.pageX) - boundingRect.left) * this._editorWidth / (boundingRect.right - boundingRect.left);\r\n\t\tthis._mouseY = ((event.clientY || event.pageY) - boundingRect.top) * this._editorHeight / (boundingRect.bottom - boundingRect.top);\r\n\t\tif (isNaN(this._mouseX)) this._mouseX = 0;\r\n\t\tif (isNaN(this._mouseY)) this._mouseY = 0;\r\n\t\tthis._whenCursorMoved();\r\n\t}\r\n\t\t\r\n\tprivate _whenTouchMoved = (event: TouchEvent): void => {\r\n\t\tif (this.container.offsetParent == null) return;\r\n\t\tif (!this._mouseDown) return;\r\n\t\tevent.preventDefault();\r\n\t\tconst boundingRect: ClientRect = this._svg.getBoundingClientRect();\r\n\t\tthis._mouseX = (event.touches[0].clientX - boundingRect.left) * this._editorWidth / (boundingRect.right - boundingRect.left);\r\n\t\tthis._mouseY = (event.touches[0].clientY - boundingRect.top) * this._editorHeight / (boundingRect.bottom - boundingRect.top);\r\n\t\tif (isNaN(this._mouseX)) this._mouseX = 0;\r\n\t\tif (isNaN(this._mouseY)) this._mouseY = 0;\r\n\t\tthis._whenCursorMoved();\r\n\t}\r\n\t\t\r\n\tprivate _whenCursorMoved(): void {\r\n\t\tif (this._mouseDown) {\r\n\t\t\tconst freq: number = this._xToFreq(this._mouseX);\r\n\t\t\tconst amp: number = this._yToAmp(this._mouseY);\r\n\t\t\t\t\r\n\t\t\tconst instrument: Instrument = this._doc.song.channels[this._doc.channel].instruments[this._doc.getCurrentInstrument()];\r\n\t\t\tconst harmonicsWave: HarmonicsWave = instrument.harmonicsWave; //(this._harmonicsIndex == null) ? instrument.harmonicsWave : instrument.drumsetSpectrumWaves[this._harmonicsIndex];\r\n\t\t\t\t\r\n\t\t\tif (freq != this._freqPrev) {\r\n\t\t\t\tconst slope: number = (amp - this._ampPrev) / (freq - this._freqPrev);\r\n\t\t\t\tconst offset: number = this._ampPrev - this._freqPrev * slope;\r\n\t\t\t\tconst lowerFreq: number = Math.ceil(Math.min(this._freqPrev, freq));\r\n\t\t\t\tconst upperFreq: number = Math.floor(Math.max(this._freqPrev, freq));\r\n\t\t\t\tfor (let i: number = lowerFreq; i <= upperFreq; i++) {\r\n\t\t\t\t\tif (i < 0 || i >= Config.harmonicsControlPoints) continue;\r\n\t\t\t\t\tharmonicsWave.harmonics[i] = Math.max(0, Math.min(Config.harmonicsMax, Math.round(i * slope + offset)));\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\t\t\r\n\t\t\tharmonicsWave.harmonics[Math.max(0, Math.min(Config.harmonicsControlPoints - 1, Math.round(freq)))] = Math.max(0, Math.min(Config.harmonicsMax, Math.round(amp)));\r\n\t\t\t\t\r\n\t\t\tthis._freqPrev = freq;\r\n\t\t\tthis._ampPrev = amp;\r\n\t\t\t\t\r\n\t\t\tthis._change = new ChangeHarmonics(this._doc, instrument, harmonicsWave);\r\n\t\t\tthis._doc.setProspectiveChange(this._change);\r\n\t\t}\r\n\t}\r\n\t\t\r\n\tprivate _whenCursorReleased = (event: Event): void => {\r\n\t\tif (this._mouseDown) {\r\n\t\t\tthis._doc.record(this._change!);\r\n\t\t\tthis._change = null;\r\n\t\t}\r\n\t\tthis._mouseDown = false;\r\n\t}\r\n\t\t\r\n\tpublic render(): void {\r\n\t\tconst instrument: Instrument = this._doc.song.channels[this._doc.channel].instruments[this._doc.getCurrentInstrument()];\r\n\t\tconst harmonicsWave: HarmonicsWave = instrument.harmonicsWave; //(this._harmonicsIndex == null) ? instrument.harmonicsWave : instrument.drumsetSpectrumWaves[this._harmonicsIndex];\r\n\t\tconst controlPointToHeight = (point: number): number => {\r\n\t\t\treturn (1 - (point / Config.harmonicsMax)) * this._editorHeight;\r\n\t\t}\r\n\t\t\t\r\n\t\tlet bottom: string = prettyNumber(this._editorHeight);\r\n\t\tlet path: string = \"\";\r\n\t\tfor (let i: number = 0; i < Config.harmonicsControlPoints - 1; i++) {\r\n\t\t\tif (harmonicsWave.harmonics[i] == 0) continue;\r\n\t\t\tlet xPos: string = prettyNumber((i + 0.5) * (this._editorWidth - 8) / (Config.harmonicsControlPoints - 1));\r\n\t\t\tpath += \"M \" + xPos + \" \" + bottom + \" \";\r\n\t\t\tpath += \"L \" + xPos + \" \" + prettyNumber(controlPointToHeight(harmonicsWave.harmonics[i])) + \" \";\r\n\t\t}\r\n\t\t\t\r\n\t\tconst lastHeight: number = controlPointToHeight(harmonicsWave.harmonics[Config.harmonicsControlPoints - 1]);\r\n\t\tfor (let i: number = 0; i < 4; i++) {\r\n\t\t\tconst rect: SVGRectElement = this._lastControlPoints[i];\r\n\t\t\trect.setAttribute(\"y\", prettyNumber(lastHeight));\r\n\t\t\trect.setAttribute(\"height\", prettyNumber(this._editorHeight - lastHeight));\r\n\t\t}\r\n\t\t\t\r\n\t\tif (this._renderedPath != path) {\r\n\t\t\tthis._renderedPath = path;\r\n\t\t\tthis._curve.setAttribute(\"d\", path);\r\n\t\t}\r\n\t\tif (this._renderedFifths != this._doc.prefs.showFifth) {\r\n\t\t\tthis._renderedFifths = this._doc.prefs.showFifth;\r\n\t\t\tthis._fifths.style.display = this._doc.prefs.showFifth ? \"\" : \"none\";\r\n\t\t}\r\n\t}\r\n}\r\n","// Copyright (C) 2020 John Nesky, distributed under the MIT license.\r\n// A few wrapper classes that add functionality onto existing HTML elements, namely binding some events to an implementation-specified change class\r\n\r\nimport { Change } from \"./Change\";\r\nimport { SongDocument } from \"./SongDocument\";\r\nimport { HTML } from \"imperative-html/dist/esm/elements-strict\";\r\n\r\nconst { span } = HTML;\r\n\r\nexport class InputBox {\r\n\tprivate _change: Change | null = null;\r\n\tprivate _value: string = \"\";\r\n\tprivate _oldValue: string = \"\";\r\n\r\n\tconstructor(public readonly input: HTMLInputElement, private readonly _doc: SongDocument, private readonly _getChange: (oldValue: string, newValue: string) => Change) {\r\n\t\tinput.addEventListener(\"input\", this._whenInput);\r\n\t\tinput.addEventListener(\"change\", this._whenChange);\r\n\t}\r\n\r\n\tpublic updateValue(value: string): void {\r\n\t\tthis._value = value;\r\n\t\tthis.input.value = String(value);\r\n\t}\r\n\r\n\tprivate _whenInput = (): void => {\r\n\t\tconst continuingProspectiveChange: boolean = this._doc.lastChangeWas(this._change);\r\n\t\tif (!continuingProspectiveChange) this._oldValue = this._value;\r\n\t\tthis._change = this._getChange(this._oldValue, this.input.value);\r\n\t\tthis._doc.setProspectiveChange(this._change);\r\n\t};\r\n\r\n\tprivate _whenChange = (): void => {\r\n\t\tthis._doc.record(this._change!);\r\n\t\tthis._change = null;\r\n\t};\r\n}\r\n\r\nexport class Slider {\r\n\tprivate _change: Change | null = null;\r\n\tprivate _value: number = 0;\r\n\tprivate _oldValue: number = 0;\r\n\tpublic container: HTMLSpanElement;\r\n\r\n\tconstructor(public readonly input: HTMLInputElement, private readonly _doc: SongDocument, private readonly _getChange: ((oldValue: number, newValue: number) => Change) | null, midTick: boolean) {\r\n\t\t// A container is created around the input to allow for spec-compliant pseudo css classes (e.g ::before and ::after, which must be added to containers, not the input itself)\r\n\t\tthis.container = (midTick) ? span({ class: \"midTick\", style: \"position: sticky; width: 61.5%;\" }, input) : span({ style: \"position: sticky;\" }, input);\r\n\t\tinput.addEventListener(\"input\", this._whenInput);\r\n\t\tinput.addEventListener(\"change\", this._whenChange);\r\n\t}\r\n\r\n\tpublic updateValue(value: number): void {\r\n\t\tthis._value = value;\r\n\t\tthis.input.value = String(value);\r\n\t}\r\n\r\n\tprivate _whenInput = (): void => {\r\n\t\tconst continuingProspectiveChange: boolean = this._doc.lastChangeWas(this._change);\r\n\t\tif (!continuingProspectiveChange) this._oldValue = this._value;\r\n\t\tif (this._getChange != null) {\r\n\t\t\tthis._change = this._getChange(this._oldValue, parseInt(this.input.value));\r\n\t\t\tthis._doc.setProspectiveChange(this._change);\r\n\t\t}\r\n\t};\r\n\r\n\tprivate _whenChange = (): void => {\r\n\t\tif (this._getChange != null) {\r\n\t\t\tthis._doc.record(this._change!);\r\n\t\t\tthis._change = null;\r\n\t\t}\r\n\t};\r\n}","// Copyright (c) 2012-2022 John Nesky and contributing authors, distributed under the MIT license, see accompanying the LICENSE.md file.\r\n\r\n// Note: All methods are big endian.\r\nexport class ArrayBufferReader {\r\n\tprivate _readIndex: number = 0;\r\n\tprivate _data: DataView;\r\n\t\t\r\n\tconstructor(data: DataView) {\r\n\t\tthis._data = data;\r\n\t}\r\n\t\t\r\n\tpublic getReadIndex(): number {\r\n\t\treturn this._readIndex;\r\n\t}\r\n\t\t\r\n\tpublic readUint32(): number {\r\n\t\tif (this._readIndex + 4 > this._data.byteLength) throw new Error(\"Reading past the end of the buffer.\");\r\n\t\tconst result: number = this._data.getUint32(this._readIndex, false);\r\n\t\tthis._readIndex += 4;\r\n\t\treturn result;\r\n\t}\r\n\t\t\r\n\tpublic readUint24(): number {\r\n\t\treturn (this.readUint8() << 16) | (this.readUint8() << 8) | (this.readUint8());\r\n\t}\r\n\t\t\r\n\tpublic readUint16(): number {\r\n\t\tif (this._readIndex + 2 > this._data.byteLength) throw new Error(\"Reading past the end of the buffer.\");\r\n\t\tconst result: number = this._data.getUint16(this._readIndex, false);\r\n\t\tthis._readIndex += 2;\r\n\t\treturn result;\r\n\t}\r\n\t\t\r\n\tpublic readUint8(): number {\r\n\t\tif (this._readIndex + 1 > this._data.byteLength) throw new Error(\"Reading past the end of the buffer.\");\r\n\t\tconst result: number = this._data.getUint8(this._readIndex);\r\n\t\tthis._readIndex++;\r\n\t\treturn result;\r\n\t}\r\n\t\t\r\n\tpublic readInt8(): number {\r\n\t\tif (this._readIndex + 1 > this._data.byteLength) throw new Error(\"Reading past the end of the buffer.\");\r\n\t\tconst result: number = this._data.getInt8(this._readIndex);\r\n\t\tthis._readIndex++;\r\n\t\treturn result;\r\n\t}\r\n\t\t\r\n\tpublic peakUint8(): number {\r\n\t\tif (this._readIndex + 1 > this._data.byteLength) throw new Error(\"Reading past the end of the buffer.\");\r\n\t\treturn this._data.getUint8(this._readIndex);\r\n\t}\r\n\t\t\r\n\tpublic readMidi7Bits(): number {\r\n\t\tconst result: number = this.readUint8();\r\n\t\tif (result >= 0x80) console.log(\"7 bit value contained 8th bit! value \" + result + \", index \" + this._readIndex);\r\n\t\treturn result & 0x7f;\r\n\t}\r\n\t\t\r\n\tpublic readMidiVariableLength(): number {\r\n\t\tlet result: number = 0;\r\n\t\tfor (let i: number = 0; i < 4; i++) {\r\n\t\t\tconst nextByte: number = this.readUint8();\r\n\t\t\tresult += nextByte & 0x7f;\r\n\t\t\tif (nextByte & 0x80) {\r\n\t\t\t\tresult = result << 7;\r\n\t\t\t} else {\r\n\t\t\t\tbreak;\r\n\t\t\t}\r\n\t\t}\r\n\t\treturn result;\r\n\t}\r\n\t\t\r\n\tpublic skipBytes(length: number): void {\r\n\t\tthis._readIndex += length;\r\n\t}\r\n\t\t\r\n\tpublic hasMore(): boolean {\r\n\t\treturn this._data.byteLength > this._readIndex;\r\n\t}\r\n\t\t\r\n\tpublic getReaderForNextBytes(length: number): ArrayBufferReader {\r\n\t\tif (this._readIndex + length > this._data.byteLength) throw new Error(\"Reading past the end of the buffer.\");\r\n\t\tconst result: ArrayBufferReader = new ArrayBufferReader(new DataView(this._data.buffer, this._data.byteOffset + this._readIndex, length));\r\n\t\tthis.skipBytes(length);\r\n\t\treturn result;\r\n\t}\r\n}\r\n","// Copyright (c) 2012-2022 John Nesky and contributing authors, distributed under the MIT license, see accompanying the LICENSE.md file.\r\n\r\nimport { InstrumentType, Config } from \"../synth/SynthConfig\";\r\nimport { NotePin, Note, makeNotePin, Pattern, Instrument, Channel, Song, Synth } from \"../synth/synth\";\r\nimport { Preset, EditorConfig } from \"./EditorConfig\";\r\nimport { SongDocument } from \"./SongDocument\";\r\nimport { Prompt } from \"./Prompt\";\r\nimport { HTML } from \"imperative-html/dist/esm/elements-strict\";\r\nimport { ChangeGroup } from \"./Change\";\r\nimport { removeDuplicatePatterns, ChangeSong, ChangeReplacePatterns } from \"./changes\";\r\nimport { AnalogousDrum, analogousDrumMap, MidiChunkType, MidiFileFormat, MidiEventType, MidiControlEventMessage, MidiMetaEventMessage, MidiRegisteredParameterNumberMSB, MidiRegisteredParameterNumberLSB, midiVolumeToVolumeMult, midiExpressionToVolumeMult } from \"./Midi\";\r\nimport { ArrayBufferReader } from \"./ArrayBufferReader\";\r\n\r\n\tconst {button, p, div, h2, input} = HTML;\r\n\r\nexport class ImportPrompt implements Prompt {\r\n\t\tprivate readonly _fileInput: HTMLInputElement = input({type: \"file\", accept: \".json,application/json,.mid,.midi,audio/midi,audio/x-midi\"});\r\n\t\tprivate readonly _cancelButton: HTMLButtonElement = button({class: \"cancelButton\"});\r\n\t\t\r\n\t\tpublic readonly container: HTMLDivElement = div({class: \"prompt noSelection\", style: \"width: 300px;\"},\r\n\t\th2(\"Import\"),\r\n\t\t\tp({style: \"text-align: left; margin: 0.5em 0;\"},\r\n\t\t\t\"BeepBox songs can be exported and re-imported as .json files. You could also use other means to make .json files for BeepBox as long as they follow the same structure.\",\r\n\t\t),\r\n\t\t\tp({style: \"text-align: left; margin: 0.5em 0;\"},\r\n\t\t\t\"BeepBox can also (crudely) import .mid files. There are many tools available for creating .mid files. Shorter and simpler songs are more likely to work well.\",\r\n\t\t),\r\n\t\tthis._fileInput,\r\n\t\tthis._cancelButton,\r\n\t);\r\n\t\t\r\n\tconstructor(private _doc: SongDocument) {\r\n\t\tthis._fileInput.select();\r\n\t\t\tsetTimeout(()=>this._fileInput.focus());\r\n\t\t\t\r\n\t\tthis._fileInput.addEventListener(\"change\", this._whenFileSelected);\r\n\t\tthis._cancelButton.addEventListener(\"click\", this._close);\r\n\t}\r\n\t\t\r\n\t\tprivate _close = (): void => { \r\n\t\tthis._doc.undo();\r\n\t}\r\n\t\t\r\n\t\tpublic cleanUp = (): void => { \r\n\t\tthis._fileInput.removeEventListener(\"change\", this._whenFileSelected);\r\n\t\tthis._cancelButton.removeEventListener(\"click\", this._close);\r\n\t}\r\n\t\t\r\n\tprivate _whenFileSelected = (): void => {\r\n\t\tconst file: File = this._fileInput.files![0];\r\n\t\tif (!file) return;\r\n\t\t\t\r\n\t\tconst extension: string = file.name.slice((file.name.lastIndexOf(\".\") - 1 >>> 0) + 2);\r\n\t\tif (extension == \"json\") {\r\n\t\t\tconst reader: FileReader = new FileReader();\r\n\t\t\treader.addEventListener(\"load\", (event: Event): void => {\r\n\t\t\t\tthis._doc.prompt = null;\r\n\t\t\t\tthis._doc.goBackToStart();\r\n\t\t\t\tthis._doc.record(new ChangeSong(this._doc, <string>reader.result), true, true);\r\n\t\t\t});\r\n\t\t\treader.readAsText(file);\r\n\t\t} else if (extension == \"midi\" || extension == \"mid\") {\r\n\t\t\tconst reader: FileReader = new FileReader();\r\n\t\t\treader.addEventListener(\"load\", (event: Event): void => {\r\n\t\t\t\tthis._doc.prompt = null;\r\n\t\t\t\tthis._doc.goBackToStart();\r\n\t\t\t\tthis._parseMidiFile(<ArrayBuffer>reader.result);\r\n\t\t\t});\r\n\t\t\treader.readAsArrayBuffer(file);\r\n\t\t} else {\r\n\t\t\tconsole.error(\"Unrecognized file extension.\");\r\n\t\t\tthis._close();\r\n\t\t}\r\n\t}\r\n\t\t\r\n\tprivate _parseMidiFile(buffer: ArrayBuffer): void {\r\n\t\t\t\r\n\t\t// First, split the file into separate buffer readers for each chunk. There should be one header chunk and one or more track chunks.\r\n\t\tconst reader = new ArrayBufferReader(new DataView(buffer));\r\n\t\tlet headerReader: ArrayBufferReader | null = null;\r\n\t\tinterface Track {\r\n\t\t\treader: ArrayBufferReader;\r\n\t\t\tnextEventMidiTick: number;\r\n\t\t\tended: boolean;\r\n\t\t\trunningStatus: number;\r\n\t\t}\r\n\t\tconst tracks: Track[] = [];\r\n\t\t\twhile(reader.hasMore()) {\r\n\t\t\tconst chunkType: number = reader.readUint32();\r\n\t\t\tconst chunkLength: number = reader.readUint32();\r\n\t\t\tif (chunkType == MidiChunkType.header) {\r\n\t\t\t\tif (headerReader == null) {\r\n\t\t\t\t\theaderReader = reader.getReaderForNextBytes(chunkLength);\r\n\t\t\t\t} else {\r\n\t\t\t\t\tconsole.error(\"This MIDI file has more than one header chunk.\");\r\n\t\t\t\t}\r\n\t\t\t} else if (chunkType == MidiChunkType.track) {\r\n\t\t\t\tconst trackReader: ArrayBufferReader = reader.getReaderForNextBytes(chunkLength);\r\n\t\t\t\tif (trackReader.hasMore()) {\r\n\t\t\t\t\ttracks.push({\r\n\t\t\t\t\t\treader: trackReader,\r\n\t\t\t\t\t\tnextEventMidiTick: trackReader.readMidiVariableLength(),\r\n\t\t\t\t\t\tended: false,\r\n\t\t\t\t\t\trunningStatus: -1,\r\n\t\t\t\t\t});\r\n\t\t\t\t}\r\n\t\t\t} else {\r\n\t\t\t\t// Unknown chunk type. Skip it.\r\n\t\t\t\treader.skipBytes(chunkLength);\r\n\t\t\t}\r\n\t\t}\r\n\t\t\t\r\n\t\tif (headerReader == null) {\r\n\t\t\tconsole.error(\"No header chunk found in this MIDI file.\");\r\n\t\t\tthis._close();\r\n\t\t\treturn;\r\n\t\t}\r\n\t\tconst fileFormat: number = headerReader.readUint16();\r\n\t\t/*const trackCount: number =*/ headerReader.readUint16();\r\n\t\tconst midiTicksPerBeat: number = headerReader.readUint16();\r\n\t\t\t\r\n\t\t// Midi tracks are generally intended to be played in parallel, but in the format\r\n\t\t// MidiFileFormat.independentTracks, they are played in sequence. Make a list of all\r\n\t\t// of the track indices that should be played in parallel (one or all of the tracks).\r\n\t\tlet currentIndependentTrackIndex: number = 0;\r\n\t\tconst currentTrackIndices: number[] = [];\r\n\t\tconst independentTracks: boolean = (fileFormat == MidiFileFormat.independentTracks);\r\n\t\tif (independentTracks) {\r\n\t\t\tcurrentTrackIndices.push(currentIndependentTrackIndex);\r\n\t\t} else {\r\n\t\t\tfor (let trackIndex: number = 0; trackIndex < tracks.length; trackIndex++) {\r\n\t\t\t\tcurrentTrackIndices.push(trackIndex);\r\n\t\t\t}\r\n\t\t}\r\n\t\t\t\r\n\t\tinterface NoteEvent {\r\n\t\t\tmidiTick: number;\r\n\t\t\tpitch: number;\r\n\t\t\tvelocity: number;\r\n\t\t\tprogram: number;\r\n\t\t\tinstrumentVolume: number;\r\n\t\t\tinstrumentPan: number;\r\n\t\t\ton: boolean;\r\n\t\t}\r\n\t\tinterface PitchBendEvent {\r\n\t\t\tmidiTick: number;\r\n\t\t\tinterval: number;\r\n\t\t}\r\n\t\tinterface NoteSizeEvent {\r\n\t\t\tmidiTick: number;\r\n\t\t\tsize: number;\r\n\t\t}\r\n\r\n\t\tinterface TempoChange {\r\n\t\t\tmidiTick: number;\r\n\t\t\tmicrosecondsPerBeat: number;\r\n\t\t}\r\n\t\t\t\r\n\t\t// To read a MIDI file we have to simulate state changing over time.\r\n\t\t// Keep a record of various parameters for each channel that may\r\n\t\t// change over time, initialized to default values.\r\n\t\t// Consider making a MidiChannel class and single array of midiChannels.\r\n\t\t\tconst channelRPNMSB: number[] = [0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff];\r\n\t\t\tconst channelRPNLSB: number[] = [0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff];\r\n\t\t\tconst pitchBendRangeMSB: number[] = [2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2]; // pitch bend range defaults to 2 semitones.\r\n\t\t\tconst pitchBendRangeLSB: number[] = [0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0]; // and 0 cents.\r\n\t\t\tconst currentInstrumentProgram: number[] = [0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0];\r\n\t\t\tconst currentInstrumentVolumes: number[] = [100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100];\r\n\t\t\tconst currentInstrumentPans: number[] = [64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64];\r\n\t\t\tconst noteEvents: NoteEvent[][] = [[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]];\r\n\t\t\tconst pitchBendEvents: PitchBendEvent[][] = [[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]];\r\n\t\tconst noteSizeEvents: NoteSizeEvent[][] = [[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]];\r\n\t\tlet tempoChanges: TempoChange[] = [];\r\n\t\tlet microsecondsPerBeat: number = 500000; // Tempo in microseconds per \"quarter\" note, commonly known as a \"beat\", default is equivalent to 120 beats per minute.\r\n\t\tlet beatsPerBar: number = 8;\r\n\t\tlet numSharps: number = 0;\r\n\t\tlet isMinor: boolean = false;\r\n\t\t\t\r\n\t\t// Progress in time through all tracks (in parallel or in sequence) recording state changes and events until all tracks have ended.\r\n\t\tlet currentMidiTick: number = 0;\r\n\t\twhile (true) {\r\n\t\t\tlet nextEventMidiTick: number = Number.MAX_VALUE;\r\n\t\t\tlet anyTrackHasMore: boolean = false;\r\n\t\t\tfor (const trackIndex of currentTrackIndices) {\r\n\t\t\t\t\t\r\n\t\t\t\t// Parse any events in this track that occur at the currentMidiTick.\r\n\t\t\t\tconst track: Track = tracks[trackIndex];\r\n\t\t\t\twhile (!track.ended && track.nextEventMidiTick == currentMidiTick) {\r\n\t\t\t\t\t\t\r\n\t\t\t\t\t// If the most significant bit is set in the first byte\r\n\t\t\t\t\t// of the event, it's a new event status, otherwise\r\n\t\t\t\t\t// reuse the running status and save the next byte for\r\n\t\t\t\t\t// the content of the event. I'm assuming running status\r\n\t\t\t\t\t// is separate for each track.\r\n\t\t\t\t\tconst peakStatus: number = track.reader.peakUint8();\r\n\t\t\t\t\tconst eventStatus: number = (peakStatus & 0x80) ? track.reader.readUint8() : track.runningStatus;\r\n\t\t\t\t\tconst eventType: number = eventStatus & 0xF0;\r\n\t\t\t\t\tconst eventChannel: number = eventStatus & 0x0F;\r\n\t\t\t\t\tif (eventType != MidiEventType.metaAndSysex) {\r\n\t\t\t\t\t\ttrack.runningStatus = eventStatus;\r\n\t\t\t\t\t}\r\n\t\t\t\t\t\t\r\n\t\t\t\t\tlet foundTrackEndEvent: boolean = false;\r\n\t\t\t\t\t\t\r\n\t\t\t\t\tswitch (eventType) {\r\n\t\t\t\t\t\tcase MidiEventType.noteOff: {\r\n\t\t\t\t\t\t\tconst pitch: number = track.reader.readMidi7Bits();\r\n\t\t\t\t\t\t\t/*const velocity: number =*/ track.reader.readMidi7Bits();\r\n\t\t\t\t\t\t\t\tnoteEvents[eventChannel].push({midiTick: currentMidiTick, pitch: pitch, velocity: 0.0, program: -1, instrumentVolume: -1, instrumentPan: -1, on: false});\r\n\t\t\t\t\t\t} break;\r\n\t\t\t\t\t\tcase MidiEventType.noteOn: {\r\n\t\t\t\t\t\t\tconst pitch: number = track.reader.readMidi7Bits();\r\n\t\t\t\t\t\t\tconst velocity: number = track.reader.readMidi7Bits();\r\n\t\t\t\t\t\t\tif (velocity == 0) {\r\n\t\t\t\t\t\t\t\t\tnoteEvents[eventChannel].push({midiTick: currentMidiTick, pitch: pitch, velocity: 0.0, program: -1, instrumentVolume: -1, instrumentPan: -1, on: false});\r\n\t\t\t\t\t\t\t} else {\r\n\t\t\t\t\t\t\t\tconst volume: number = Math.max(0, Math.min(Config.volumeRange - 1, Math.round(\r\n\t\t\t\t\t\t\t\t\tSynth.volumeMultToInstrumentVolume(midiVolumeToVolumeMult(currentInstrumentVolumes[eventChannel]))\r\n\t\t\t\t\t\t\t\t)));\r\n\t\t\t\t\t\t\t\tconst pan: number = Math.max(0, Math.min(Config.panMax, Math.round(\r\n\t\t\t\t\t\t\t\t\t((currentInstrumentPans[eventChannel] - 64) / 63 + 1) * Config.panCenter\r\n\t\t\t\t\t\t\t\t)));\r\n\t\t\t\t\t\t\t\tnoteEvents[eventChannel].push({\r\n\t\t\t\t\t\t\t\t\tmidiTick: currentMidiTick,\r\n\t\t\t\t\t\t\t\t\tpitch: pitch,\r\n\t\t\t\t\t\t\t\t\tvelocity: Math.max(0.0, Math.min(1.0, (velocity + 14) / 90.0)),\r\n\t\t\t\t\t\t\t\t\tprogram: currentInstrumentProgram[eventChannel],\r\n\t\t\t\t\t\t\t\t\tinstrumentVolume: volume,\r\n\t\t\t\t\t\t\t\t\tinstrumentPan: pan,\r\n\t\t\t\t\t\t\t\t\ton: true,\r\n\t\t\t\t\t\t\t\t});\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t} break;\r\n\t\t\t\t\t\tcase MidiEventType.keyPressure: {\r\n\t\t\t\t\t\t\t/*const pitch: number =*/ track.reader.readMidi7Bits();\r\n\t\t\t\t\t\t\t/*const pressure: number =*/ track.reader.readMidi7Bits();\r\n\t\t\t\t\t\t} break;\r\n\t\t\t\t\t\tcase MidiEventType.controlChange: {\r\n\t\t\t\t\t\t\tconst message: number = track.reader.readMidi7Bits();\r\n\t\t\t\t\t\t\tconst value: number = track.reader.readMidi7Bits();\r\n\t\t\t\t\t\t\t//console.log(\"Control change, message:\", message, \"value:\", value);\r\n\t\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t\tswitch (message) {\r\n\t\t\t\t\t\t\t\tcase MidiControlEventMessage.setParameterMSB: {\r\n\t\t\t\t\t\t\t\t\tif (channelRPNMSB[eventChannel] == MidiRegisteredParameterNumberMSB.pitchBendRange && channelRPNLSB[eventChannel] == MidiRegisteredParameterNumberLSB.pitchBendRange) {\r\n\t\t\t\t\t\t\t\t\t\tpitchBendRangeMSB[eventChannel] = value;\r\n\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t} break;\r\n\t\t\t\t\t\t\t\tcase MidiControlEventMessage.volumeMSB: {\r\n\t\t\t\t\t\t\t\t\tcurrentInstrumentVolumes[eventChannel] = value;\r\n\t\t\t\t\t\t\t\t} break;\r\n\t\t\t\t\t\t\t\tcase MidiControlEventMessage.panMSB: {\r\n\t\t\t\t\t\t\t\t\tcurrentInstrumentPans[eventChannel] = value;\r\n\t\t\t\t\t\t\t\t} break;\r\n\t\t\t\t\t\t\t\tcase MidiControlEventMessage.expressionMSB: {\r\n\t\t\t\t\t\t\t\t\tnoteSizeEvents[eventChannel].push({midiTick: currentMidiTick, size: Synth.volumeMultToNoteSize(midiExpressionToVolumeMult(value))});\r\n\t\t\t\t\t\t\t\t} break;\r\n\t\t\t\t\t\t\t\tcase MidiControlEventMessage.setParameterLSB: {\r\n\t\t\t\t\t\t\t\t\tif (channelRPNMSB[eventChannel] == MidiRegisteredParameterNumberMSB.pitchBendRange && channelRPNLSB[eventChannel] == MidiRegisteredParameterNumberLSB.pitchBendRange) {\r\n\t\t\t\t\t\t\t\t\t\tpitchBendRangeLSB[eventChannel] = value;\r\n\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t} break;\r\n\t\t\t\t\t\t\t\tcase MidiControlEventMessage.registeredParameterNumberLSB: {\r\n\t\t\t\t\t\t\t\t\tchannelRPNLSB[eventChannel] = value;\r\n\t\t\t\t\t\t\t\t} break;\r\n\t\t\t\t\t\t\t\tcase MidiControlEventMessage.registeredParameterNumberMSB: {\r\n\t\t\t\t\t\t\t\t\tchannelRPNMSB[eventChannel] = value;\r\n\t\t\t\t\t\t\t\t} break;\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t} break;\r\n\t\t\t\t\t\tcase MidiEventType.programChange: {\r\n\t\t\t\t\t\t\tconst program: number = track.reader.readMidi7Bits();\r\n\t\t\t\t\t\t\tcurrentInstrumentProgram[eventChannel] = program;\r\n\t\t\t\t\t\t} break;\r\n\t\t\t\t\t\tcase MidiEventType.channelPressure: {\r\n\t\t\t\t\t\t\t/*const pressure: number =*/ track.reader.readMidi7Bits();\r\n\t\t\t\t\t\t} break;\r\n\t\t\t\t\t\tcase MidiEventType.pitchBend: {\r\n\t\t\t\t\t\t\tconst lsb: number = track.reader.readMidi7Bits();\r\n\t\t\t\t\t\t\tconst msb: number = track.reader.readMidi7Bits();\r\n\t\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t\tconst pitchBend: number = (((msb << 7) | lsb) / 0x2000) - 1.0;\r\n\t\t\t\t\t\t\tconst pitchBendRange: number = pitchBendRangeMSB[eventChannel] + pitchBendRangeLSB[eventChannel] * 0.01;\r\n\t\t\t\t\t\t\tconst interval: number = pitchBend * pitchBendRange;\r\n\t\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t\t\tpitchBendEvents[eventChannel].push({midiTick: currentMidiTick, interval: interval});\r\n\t\t\t\t\t\t} break;\r\n\t\t\t\t\t\tcase MidiEventType.metaAndSysex: {\r\n\t\t\t\t\t\t\tif (eventStatus == MidiEventType.meta) {\r\n\t\t\t\t\t\t\t\tconst message: number = track.reader.readMidi7Bits();\r\n\t\t\t\t\t\t\t\tconst length: number = track.reader.readMidiVariableLength();\r\n\t\t\t\t\t\t\t\t//console.log(\"Meta, message:\", message, \"length:\", length);\r\n\t\t\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t\t\tif (message == MidiMetaEventMessage.endOfTrack) {\r\n\t\t\t\t\t\t\t\t\tfoundTrackEndEvent = true;\r\n\t\t\t\t\t\t\t\t\ttrack.reader.skipBytes(length);\r\n\t\t\t\t\t\t\t\t} else if (message == MidiMetaEventMessage.tempo) {\r\n\t\t\t\t\t\t\t\t\tmicrosecondsPerBeat = track.reader.readUint24();\r\n\t\t\t\t\t\t\t\t\ttempoChanges.push({\r\n                                                midiTick: currentMidiTick,\r\n                                               microsecondsPerBeat: microsecondsPerBeat,\r\n                                           });\r\n//midi tempo addition\r\n\t\t\t\t\t\t\t\t} else if (message == MidiMetaEventMessage.timeSignature) {\r\n\t\t\t\t\t\t\t\t\tconst numerator: number = track.reader.readUint8();\r\n\t\t\t\t\t\t\t\t\tlet denominatorExponent: number = track.reader.readUint8();\r\n\t\t\t\t\t\t\t\t\t/*const midiClocksPerMetronome: number =*/ track.reader.readUint8();\r\n\t\t\t\t\t\t\t\t\t/*const thirtySecondNotesPer24MidiClocks: number =*/ track.reader.readUint8();\r\n\t\t\t\t\t\t\t\t\ttrack.reader.skipBytes(length - 4);\r\n\t\t\t\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t\t\t\t// A beat is a quarter note. \r\n\t\t\t\t\t\t\t\t\t// A ratio of 4/4, or 1/1, corresponds to 4 beats per bar.\r\n\t\t\t\t\t\t\t\t\t// Apply the numerator first.\r\n\t\t\t\t\t\t\t\t\tbeatsPerBar = numerator * 4;\r\n\t\t\t\t\t\t\t\t\t// Then apply the denominator, dividing by two until either\r\n\t\t\t\t\t\t\t\t\t// the denominator is satisfied or there's an odd number of\r\n\t\t\t\t\t\t\t\t\t// beats. BeepBox doesn't support fractional beats in a bar.\r\n\t\t\t\t\t\t\t\t\twhile ((beatsPerBar & 1) == 0 && (denominatorExponent > 0 || beatsPerBar > Config.beatsPerBarMax) && beatsPerBar >= Config.beatsPerBarMin * 2) {\r\n\t\t\t\t\t\t\t\t\t\tbeatsPerBar = beatsPerBar >> 1;\r\n\t\t\t\t\t\t\t\t\t\tdenominatorExponent = denominatorExponent - 1;\r\n\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t\tbeatsPerBar = Math.max(Config.beatsPerBarMin, Math.min(Config.beatsPerBarMax, beatsPerBar));\r\n\t\t\t\t\t\t\t\t} else if (message == MidiMetaEventMessage.keySignature) {\r\n\t\t\t\t\t\t\t\t\tnumSharps = track.reader.readInt8(); // Note: can be negative for flats.\r\n\t\t\t\t\t\t\t\t\tisMinor = track.reader.readUint8() == 1; // 0: major, 1: minor\r\n\t\t\t\t\t\t\t\t\ttrack.reader.skipBytes(length - 2);\r\n\t\t\t\t\t\t\t\t} else {\r\n\t\t\t\t\t\t\t\t\t// Ignore other meta event message types.\r\n\t\t\t\t\t\t\t\t\ttrack.reader.skipBytes(length);\r\n\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t\t} else if (eventStatus == 0xF0 || eventStatus == 0xF7) {\r\n\t\t\t\t\t\t\t\t// Sysex events, just skip the data.\r\n\t\t\t\t\t\t\t\tconst length: number = track.reader.readMidiVariableLength();\r\n\t\t\t\t\t\t\t\ttrack.reader.skipBytes(length);\r\n\t\t\t\t\t\t\t} else {\r\n\t\t\t\t\t\t\t\tconsole.error(\"Unrecognized event status: \" + eventStatus);\r\n\t\t\t\t\t\t\t\tthis._close();\r\n\t\t\t\t\t\t\t\treturn;\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t} break;\r\n\t\t\t\t\t\tdefault: {\r\n\t\t\t\t\t\t\tconsole.error(\"Unrecognized event type: \" + eventType);\r\n\t\t\t\t\t\t\tthis._close();\r\n\t\t\t\t\t\t\treturn;\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t\t\t\r\n\t\t\t\t\tif (!foundTrackEndEvent && track.reader.hasMore()) {\r\n\t\t\t\t\t\ttrack.nextEventMidiTick = currentMidiTick + track.reader.readMidiVariableLength();\r\n\t\t\t\t\t} else {\r\n\t\t\t\t\t\ttrack.ended = true;\r\n\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t// If the tracks are sequential, start the next track when this one ends.\r\n\t\t\t\t\t\tif (independentTracks) {\r\n\t\t\t\t\t\t\tcurrentIndependentTrackIndex++;\r\n\t\t\t\t\t\t\tif (currentIndependentTrackIndex < tracks.length) {\r\n\t\t\t\t\t\t\t\tcurrentTrackIndices[0] = currentIndependentTrackIndex;\r\n\t\t\t\t\t\t\t\ttracks[currentIndependentTrackIndex].nextEventMidiTick += currentMidiTick;\r\n\t\t\t\t\t\t\t\tnextEventMidiTick = Math.min(nextEventMidiTick, tracks[currentIndependentTrackIndex].nextEventMidiTick);\r\n\t\t\t\t\t\t\t\tanyTrackHasMore = true;\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t\t\t\r\n\t\t\t\tif (!track.ended) {\r\n\t\t\t\t\tanyTrackHasMore = true;\r\n\t\t\t\t\tnextEventMidiTick = Math.min(nextEventMidiTick, track.nextEventMidiTick);\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\t\t\r\n\t\t\tif (anyTrackHasMore) {\r\n\t\t\t\tcurrentMidiTick = nextEventMidiTick;\r\n\t\t\t} else {\r\n\t\t\t\tbreak;\r\n\t\t\t}\r\n\t\t}\r\n\t\t\t\r\n\t\t// Now the MIDI file is fully parsed. Next, constuct BeepBox channels out of the data.\r\n\t\t\t\t\t// Pick the first tempo value.\r\n            for (const change of tempoChanges) {\r\n                microsecondsPerBeat = change.microsecondsPerBeat;\r\n                break;\r\n            }\r\n\t\t\t//midi tempo addition\r\n\t\tconst microsecondsPerMinute: number = 60 * 1000 * 1000;\r\n\t\tconst beatsPerMinute: number = Math.max(Config.tempoMin, Math.min(Config.tempoMax, Math.round(microsecondsPerMinute / microsecondsPerBeat)));\r\n\t\tconst midiTicksPerPart: number = midiTicksPerBeat / Config.partsPerBeat;\r\n\t\tconst partsPerBar: number = Config.partsPerBeat * beatsPerBar;\r\n\t\tconst songTotalBars: number = Math.ceil(currentMidiTick / midiTicksPerPart / partsPerBar);\r\n\t\t\t\r\n\t\tfunction quantizeMidiTickToPart(midiTick: number): number {\r\n\t\t\treturn Math.round(midiTick / midiTicksPerPart);\r\n\t\t}\r\n\r\n\t\tlet key: number = numSharps;\r\n\t\tif (isMinor) key += 3; // Diatonic C Major has the same sharps/flats as A Minor, and these keys are 3 semitones apart.\r\n\t\tif ((key & 1) == 1) key += 6; // If the number of sharps/flats is odd, rotate it halfway around the circle of fifths. The key of C# has little in common with the key of C.\r\n\t\twhile (key < 0) key += 12; // Wrap around to a range from 0 to 11.\r\n\t\tkey = key % 12; // Wrap around to a range from 0 to 11.\r\n\t\t\t\r\n\t\t// Convert each midi channel into a BeepBox channel.\r\n\t\tconst pitchChannels: Channel[] = [];\r\n\t\tconst noiseChannels: Channel[] = [];\r\n\t\tconst modChannels: Channel[] = [];\r\n\t\tfor (let midiChannel: number = 0; midiChannel < 16; midiChannel++) {\r\n\t\t\tif (noteEvents[midiChannel].length == 0) continue;\r\n\t\t\t\t\r\n\t\t\tconst channel: Channel = new Channel();\r\n\t\t\t\t\r\n\t\t\tconst channelPresetValue: number | null = EditorConfig.midiProgramToPresetValue(noteEvents[midiChannel][0].program);\r\n\t\t\tconst channelPreset: Preset | null = (channelPresetValue == null) ? null : EditorConfig.valueToPreset(channelPresetValue);\r\n\t\t\t\t\r\n\t\t\tconst isDrumsetChannel: boolean = (midiChannel == 9);\r\n\t\t\tconst isNoiseChannel: boolean = isDrumsetChannel || (channelPreset != null && channelPreset.isNoise == true);\r\n\t\t\tconst isModChannel: boolean = (channelPreset != null && channelPreset.isMod == true);\r\n\t\t\tconst channelBasePitch: number = isNoiseChannel ? Config.spectrumBasePitch : Config.keys[key].basePitch;\r\n\t\t\tconst intervalScale: number = isNoiseChannel ? Config.noiseInterval : 1;\r\n\t\t\tconst midiIntervalScale: number = isNoiseChannel ? 0.5 : 1;\r\n\t\t\t//const channelMaxPitch: number = isNoiseChannel ? Config.drumCount - 1 : Config.maxPitch;\r\n\t\t\tconst channelMaxPitch: number = isNoiseChannel ? Config.drumCount - 1 : 12 * Config.pitchOctaves;\r\n\t\t\t//max pitch is hardcoded for midis, because yeah\r\n\t\t\t\t\r\n\t\t\tif (isNoiseChannel) {\r\n\t\t\t\tif (isDrumsetChannel) {\r\n\t\t\t\t\tnoiseChannels.unshift(channel);\r\n\t\t\t\t} else {\r\n\t\t\t\t\tnoiseChannels.push(channel);\r\n\t\t\t\t}\r\n\t\t\t} else if (isModChannel) {\r\n\t\t\t\tmodChannels.push(channel);\r\n\t\t\t} else {\r\n\t\t\t\tpitchChannels.push(channel);\r\n\t\t\t}\r\n\t\t\t\t\r\n\t\t\tlet currentVelocity: number = 1.0;\r\n\t\t\tlet currentProgram: number = 0;\r\n\t\t\tlet currentInstrumentVolume: number = 0;\r\n\t\t\tlet currentInstrumentPan: number = Config.panCenter;\r\n\t\t\t\t\r\n\t\t\tif (isDrumsetChannel) {\r\n\t\t\t\tconst heldPitches: number[] = [];\r\n\t\t\t\tlet currentBar: number = -1;\r\n\t\t\t\tlet pattern: Pattern | null = null;\r\n\t\t\t\tlet prevEventPart: number = 0;\r\n\t\t\t\tlet setInstrumentVolume: boolean = false;\r\n\t\t\t\t\t\r\n\t\t\t\tconst presetValue: number = EditorConfig.nameToPresetValue(\"standard drumset\")!;\r\n\t\t\t\tconst preset: Preset = EditorConfig.valueToPreset(presetValue)!;\r\n\t\t\t\tconst instrument: Instrument = new Instrument(false, false);\r\n\t\t\t\t\tinstrument.fromJsonObject(preset.settings, false, false, false, false, 1);\r\n\t\t\t\t\t\r\n\t\t\t\tinstrument.preset = presetValue;\r\n\t\t\t\tchannel.instruments.push(instrument);\r\n\r\n\t\t\t\tfor (let noteEventIndex: number = 0; noteEventIndex <= noteEvents[midiChannel].length; noteEventIndex++) {\r\n\t\t\t\t\tconst noMoreNotes: boolean = noteEventIndex == noteEvents[midiChannel].length;\r\n\t\t\t\t\tconst noteEvent: NoteEvent | null = noMoreNotes ? null : noteEvents[midiChannel][noteEventIndex];\r\n\t\t\t\t\tconst nextEventPart: number = noteEvent == null ? Number.MAX_SAFE_INTEGER : quantizeMidiTickToPart(noteEvent.midiTick);\r\n\t\t\t\t\tif (heldPitches.length > 0 && nextEventPart > prevEventPart && (noteEvent == null || noteEvent.on)) {\r\n\t\t\t\t\t\tconst bar: number = Math.floor(prevEventPart / partsPerBar);\r\n\t\t\t\t\t\tconst barStartPart: number = bar * partsPerBar;\r\n\t\t\t\t\t\t// Ensure a pattern exists for the current bar before inserting notes into it.\r\n\t\t\t\t\t\tif (currentBar != bar || pattern == null) {\r\n\t\t\t\t\t\t\tcurrentBar++;\r\n\t\t\t\t\t\t\twhile (currentBar < bar) {\r\n\t\t\t\t\t\t\t\tchannel.bars[currentBar] = 0;\r\n\t\t\t\t\t\t\t\tcurrentBar++;\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\tpattern = new Pattern();\r\n\t\t\t\t\t\t\tchannel.patterns.push(pattern);\r\n\t\t\t\t\t\t\tchannel.bars[currentBar] = channel.patterns.length;\r\n\t\t\t\t\t\t\tpattern.instruments[0] = 0;\r\n\t\t\t\t\t\t\tpattern.instruments.length = 1;\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t// Use the loudest volume setting for the instrument, since \r\n\t\t\t\t\t\t// many midis unfortunately use the instrument volume control to fade\r\n\t\t\t\t\t\t// in at the beginning and we don't want to get stuck with the initial\r\n\t\t\t\t\t\t// zero volume.\r\n\t\t\t\t\t\tif (!setInstrumentVolume || instrument.volume > currentInstrumentVolume) {\r\n\t\t\t\t\t\t\tinstrument.volume = currentInstrumentVolume;\r\n\t\t\t\t\t\t\tinstrument.pan = currentInstrumentPan;\r\n\t\t\t\t\t\t\tinstrument.panDelay = 0;\r\n\t\t\t\t\t\t\tsetInstrumentVolume = true;\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\r\n\t\t\t\t\t\tconst drumFreqs: number[] = [];\r\n\t\t\t\t\t\tlet minDuration: number = channelMaxPitch;\r\n\t\t\t\t\t\tlet maxDuration: number = 0;\r\n\t\t\t\t\t\tlet noteSize: number = 1; // the minimum non-zero note size.\r\n\t\t\t\t\t\tfor (const pitch of heldPitches) {\r\n\t\t\t\t\t\t\tconst drum: AnalogousDrum | undefined = analogousDrumMap[pitch];\r\n\t\t\t\t\t\t\tif (drumFreqs.indexOf(drum.frequency) == -1) {\r\n\t\t\t\t\t\t\t\tdrumFreqs.push(drum.frequency);\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\tnoteSize = Math.max(noteSize, Math.round(drum.volume * currentVelocity));\r\n\t\t\t\t\t\t\tminDuration = Math.min(minDuration, drum.duration);\r\n\t\t\t\t\t\t\tmaxDuration = Math.max(maxDuration, drum.duration);\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\tconst duration: number = Math.min(maxDuration, Math.max(minDuration, 2));\r\n\t\t\t\t\t\tconst noteStartPart: number = prevEventPart - barStartPart;\r\n\t\t\t\t\t\tconst noteEndPart: number = Math.min(partsPerBar, Math.min(nextEventPart - barStartPart, noteStartPart + duration * 6));\r\n\t\t\t\t\t\t\t\r\n\t\t\t\t\t\tconst note: Note = new Note(-1, noteStartPart, noteEndPart, noteSize, true);\r\n\t\t\t\t\t\t\t\r\n\t\t\t\t\t\tnote.pitches.length = 0;\r\n\t\t\t\t\t\tfor (let pitchIndex: number = 0; pitchIndex < Math.min(Config.maxChordSize, drumFreqs.length); pitchIndex++) {\r\n\t\t\t\t\t\t\tconst heldPitch: number = drumFreqs[pitchIndex + Math.max(0, drumFreqs.length - Config.maxChordSize)];\r\n\t\t\t\t\t\t\tif (note.pitches.indexOf(heldPitch) == -1) {\r\n\t\t\t\t\t\t\t\tnote.pitches.push(heldPitch);\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\tpattern.notes.push(note);\r\n\t\t\t\t\t\t\t\r\n\t\t\t\t\t\theldPitches.length = 0;\r\n\t\t\t\t\t}\r\n\t\t\t\t\t\t\r\n\t\t\t\t\t// Process the next midi note event before continuing, updating the list of currently held pitches.\r\n\t\t\t\t\tif (noteEvent != null && noteEvent.on && analogousDrumMap[noteEvent.pitch] != undefined) {\r\n\t\t\t\t\t\theldPitches.push(noteEvent.pitch);\r\n\t\t\t\t\t\tprevEventPart = nextEventPart;\r\n\t\t\t\t\t\tcurrentVelocity = noteEvent.velocity;\r\n\t\t\t\t\t\tcurrentInstrumentVolume = noteEvent.instrumentVolume;\r\n\t\t\t\t\t\tcurrentInstrumentPan = noteEvent.instrumentPan;\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t} else {\r\n\t\t\t\t// If not a drumset, handle as a tonal instrument.\r\n\t\t\t\t\t\r\n\t\t\t\t// Advance the pitch bend and note size timelines to the given midiTick, \r\n\t\t\t\t// changing the value of currentMidiInterval or currentMidiNoteSize.\r\n\t\t\t\t// IMPORTANT: These functions can't rewind!\r\n\t\t\t\tlet currentMidiInterval: number = 0.0;\r\n\t\t\t\tlet currentMidiNoteSize: number = Config.noteSizeMax;\r\n\t\t\t\tlet pitchBendEventIndex: number = 0;\r\n\t\t\t\tlet noteSizeEventIndex: number = 0;\r\n\t\t\t\tfunction updateCurrentMidiInterval(midiTick: number) {\r\n\t\t\t\t\twhile (pitchBendEventIndex < pitchBendEvents[midiChannel].length && pitchBendEvents[midiChannel][pitchBendEventIndex].midiTick <= midiTick) {\r\n\t\t\t\t\t\tcurrentMidiInterval = pitchBendEvents[midiChannel][pitchBendEventIndex].interval;\r\n\t\t\t\t\t\tpitchBendEventIndex++;\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t\tfunction updateCurrentMidiNoteSize(midiTick: number) {\r\n\t\t\t\t\twhile (noteSizeEventIndex < noteSizeEvents[midiChannel].length && noteSizeEvents[midiChannel][noteSizeEventIndex].midiTick <= midiTick) {\r\n\t\t\t\t\t\tcurrentMidiNoteSize = noteSizeEvents[midiChannel][noteSizeEventIndex].size;\r\n\t\t\t\t\t\tnoteSizeEventIndex++;\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t\t\t\r\n\t\t\t\tconst instrumentByProgram: Instrument[] = [];\r\n\t\t\t\tconst heldPitches: number[] = [];\r\n\t\t\t\tlet currentBar: number = -1;\r\n\t\t\t\tlet pattern: Pattern | null = null;\r\n\t\t\t\tlet prevEventMidiTick: number = 0;\r\n\t\t\t\tlet prevEventPart: number = 0;\r\n\t\t\t\tlet pitchSum: number = 0;\r\n\t\t\t\tlet pitchCount: number = 0;\r\n\t\t\t\t\t\r\n\t\t\t\tfor (let noteEvent of noteEvents[midiChannel]) {\r\n\t\t\t\t\tconst nextEventMidiTick: number = noteEvent.midiTick;\r\n\t\t\t\t\tconst nextEventPart: number = quantizeMidiTickToPart(nextEventMidiTick);\r\n\t\t\t\t\t\t\r\n\t\t\t\t\tif (heldPitches.length > 0 && nextEventPart > prevEventPart) {\r\n\t\t\t\t\t\t// If there are any pitches held between the previous event and the next\r\n\t\t\t\t\t\t// event, iterate over all bars covered by this time period, ensure they\r\n\t\t\t\t\t\t// have a pattern instantiated, and insert notes for these pitches.\r\n\t\t\t\t\t\tconst startBar: number = Math.floor(prevEventPart / partsPerBar);\r\n\t\t\t\t\t\tconst endBar: number = Math.ceil(nextEventPart / partsPerBar);\r\n\t\t\t\t\t\tlet createdNote: boolean = false;\r\n\t\t\t\t\t\tfor (let bar: number = startBar; bar < endBar; bar++) {\r\n\t\t\t\t\t\t\tconst barStartPart: number = bar * partsPerBar;\r\n\t\t\t\t\t\t\tconst barStartMidiTick: number = bar * beatsPerBar * midiTicksPerBeat;\r\n\t\t\t\t\t\t\tconst barEndMidiTick: number = (bar + 1) * beatsPerBar * midiTicksPerBeat;\r\n\t\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t\tconst noteStartPart: number = Math.max(0, prevEventPart - barStartPart);\r\n\t\t\t\t\t\t\tconst noteEndPart: number = Math.min(partsPerBar, nextEventPart - barStartPart);\r\n\t\t\t\t\t\t\tconst noteStartMidiTick: number = Math.max(barStartMidiTick, prevEventMidiTick);\r\n\t\t\t\t\t\t\tconst noteEndMidiTick: number = Math.min(barEndMidiTick, nextEventMidiTick);\r\n\t\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t\tif (noteStartPart < noteEndPart) {\r\n\t\t\t\t\t\t\t\tconst presetValue: number | null = EditorConfig.midiProgramToPresetValue(currentProgram);\r\n\t\t\t\t\t\t\t\tconst preset: Preset | null = (presetValue == null) ? null : EditorConfig.valueToPreset(presetValue);\r\n\t\t\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t\t\t// Ensure a pattern exists for the current bar before inserting notes into it.\r\n\t\t\t\t\t\t\t\tif (currentBar != bar || pattern == null) {\r\n\t\t\t\t\t\t\t\t\tcurrentBar++;\r\n\t\t\t\t\t\t\t\t\twhile (currentBar < bar) {\r\n\t\t\t\t\t\t\t\t\t\tchannel.bars[currentBar] = 0;\r\n\t\t\t\t\t\t\t\t\t\tcurrentBar++;\r\n\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t\tpattern = new Pattern();\r\n\t\t\t\t\t\t\t\t\tchannel.patterns.push(pattern);\r\n\t\t\t\t\t\t\t\t\tchannel.bars[currentBar] = channel.patterns.length;\r\n\t\t\t\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t\t\t\t// If this is the first time a note is trying to use a specific instrument\r\n\t\t\t\t\t\t\t\t\t// program in this channel, create a new BeepBox instrument for it.\r\n\t\t\t\t\t\t\t\t\tif (instrumentByProgram[currentProgram] == undefined) {\r\n\t\t\t\t\t\t\t\t\t\tconst instrument: Instrument = new Instrument(isNoiseChannel, isModChannel);\r\n\t\t\t\t\t\t\t\t\t\tinstrumentByProgram[currentProgram] = instrument;\r\n\t\t\t\t\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t\t\t\t\tif (presetValue != null && preset != null && (preset.isNoise == true) == isNoiseChannel) {\r\n\t\t\t\t\t\t\t\t\t\t\t\tinstrument.fromJsonObject(preset.settings, isNoiseChannel, isModChannel, false, false, 1);\r\n\t\t\t\t\t\t\t\t\t\t\tinstrument.preset = presetValue;\r\n\t\t\t\t\t\t\t\t\t\t} else {\r\n\t\t\t\t\t\t\t\t\t\t\tinstrument.setTypeAndReset(isModChannel ? InstrumentType.mod : (isNoiseChannel ? InstrumentType.noise : InstrumentType.chip), isNoiseChannel, isModChannel);\r\n\t\t\t\t\t\t\t\t\t\t\tinstrument.chord = 0; // Midi instruments use polyphonic harmony by default.\r\n\t\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t\t\t\t\tinstrument.volume = currentInstrumentVolume;\r\n\t\t\t\t\t\t\t\t\t\tinstrument.pan = currentInstrumentPan;\r\n\t\t\t\t\t\t\t\t\t\tinstrument.panDelay = 0;\r\n\r\n\t\t\t\t\t\t\t\t\t\tchannel.instruments.push(instrument);\r\n\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t\t\t\tpattern.instruments[0] = channel.instruments.indexOf(instrumentByProgram[currentProgram]);\r\n\t\t\t\t\t\t\t\t\tpattern.instruments.length = 1;\r\n\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t\t\t// Use the loudest volume setting for the instrument, since \r\n\t\t\t\t\t\t\t\t// many midis unfortunately use the instrument volume control to fade\r\n\t\t\t\t\t\t\t\t// in at the beginning and we don't want to get stuck with the initial\r\n\t\t\t\t\t\t\t\t// zero volume.\r\n\t\t\t\t\t\t\t\tif (instrumentByProgram[currentProgram] != undefined) {\r\n\t\t\t\t\t\t\t\t\tinstrumentByProgram[currentProgram].volume = Math.min(instrumentByProgram[currentProgram].volume, currentInstrumentVolume);\r\n\t\t\t\t\t\t\t\t\tinstrumentByProgram[currentProgram].pan = Math.min(instrumentByProgram[currentProgram].pan, currentInstrumentPan);\r\n\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t\t\t// Create a new note, and interpret the pitch bend and note size events\r\n\t\t\t\t\t\t\t\t// to determine where we need to insert pins to control interval and size.\r\n\t\t\t\t\t\t\t\tconst note: Note = new Note(-1, noteStartPart, noteEndPart, Config.noteSizeMax, false);\r\n\t\t\t\t\t\t\t\tnote.pins.length = 0;\r\n\t\t\t\t\t\t\t\tnote.continuesLastPattern = (createdNote && noteStartPart == 0);\r\n\t\t\t\t\t\t\t\tcreatedNote = true;\r\n\t\t\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t\t\tupdateCurrentMidiInterval(noteStartMidiTick);\r\n\t\t\t\t\t\t\t\tupdateCurrentMidiNoteSize(noteStartMidiTick);\r\n\t\t\t\t\t\t\t\tconst shiftedHeldPitch: number = heldPitches[0] * midiIntervalScale - channelBasePitch;\r\n\t\t\t\t\t\t\t\tconst initialBeepBoxPitch: number = Math.round((shiftedHeldPitch + currentMidiInterval) / intervalScale);\r\n\t\t\t\t\t\t\t\tconst heldPitchOffset: number = Math.round(currentMidiInterval - channelBasePitch);\r\n\t\t\t\t\t\t\t\tlet firstPin: NotePin = makeNotePin(0, 0, Math.round(currentVelocity * currentMidiNoteSize));\r\n\t\t\t\t\t\t\t\tnote.pins.push(firstPin);\r\n\t\t\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t\t\tinterface PotentialPin {\r\n\t\t\t\t\t\t\t\t\tpart: number;\r\n\t\t\t\t\t\t\t\t\tpitch: number;\r\n\t\t\t\t\t\t\t\t\tsize: number;\r\n\t\t\t\t\t\t\t\t\tkeyPitch: boolean;\r\n\t\t\t\t\t\t\t\t\tkeySize: boolean;\r\n\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\tconst potentialPins: PotentialPin[] = [\r\n\t\t\t\t\t\t\t\t\t{part: 0, pitch: initialBeepBoxPitch, size: firstPin.size, keyPitch: false, keySize: false}\r\n\t\t\t\t\t\t\t\t];\r\n\t\t\t\t\t\t\t\tlet prevPinIndex: number = 0;\r\n\t\t\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t\t\tlet prevPartPitch: number = (shiftedHeldPitch + currentMidiInterval) / intervalScale;\r\n\t\t\t\t\t\t\t\tlet prevPartSize: number = currentVelocity * currentMidiNoteSize;\r\n\t\t\t\t\t\t\t\tfor (let part: number = noteStartPart + 1; part <= noteEndPart; part++) {\r\n\t\t\t\t\t\t\t\t\tconst midiTick: number = Math.max(noteStartMidiTick, Math.min(noteEndMidiTick - 1, Math.round(midiTicksPerPart * (part + barStartPart))));\r\n\t\t\t\t\t\t\t\t\tconst noteRelativePart: number = part - noteStartPart;\r\n\t\t\t\t\t\t\t\t\tconst lastPart: boolean = (part == noteEndPart);\r\n\t\t\t\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t\t\t\t// BeepBox can only add pins at whole number intervals and sizes. Detect places where\r\n\t\t\t\t\t\t\t\t\t// the interval or size are at or cross whole numbers, and add these to the list of\r\n\t\t\t\t\t\t\t\t\t// potential places to insert pins.\r\n\t\t\t\t\t\t\t\t\tupdateCurrentMidiInterval(midiTick);\r\n\t\t\t\t\t\t\t\t\tupdateCurrentMidiNoteSize(midiTick);\r\n\t\t\t\t\t\t\t\t\tconst partPitch: number = (currentMidiInterval + shiftedHeldPitch) / intervalScale;\r\n\t\t\t\t\t\t\t\t\tconst partSize: number = currentVelocity * currentMidiNoteSize;\r\n\t\t\t\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t\t\t\tconst nearestPitch: number = Math.round(partPitch);\r\n\t\t\t\t\t\t\t\t\tconst pitchIsNearInteger: boolean = Math.abs(partPitch - nearestPitch) < 0.01;\r\n\t\t\t\t\t\t\t\t\tconst pitchCrossedInteger: boolean = (Math.abs(prevPartPitch - Math.round(prevPartPitch)) < 0.01)\r\n\t\t\t\t\t\t\t\t\t\t? Math.abs(partPitch - prevPartPitch) >= 1.0\r\n\t\t\t\t\t\t\t\t\t\t: Math.floor(partPitch) != Math.floor(prevPartPitch);\r\n\t\t\t\t\t\t\t\t\tconst keyPitch: boolean = pitchIsNearInteger || pitchCrossedInteger;\r\n\t\t\t\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t\t\t\tconst nearestSize: number = Math.round(partSize);\r\n\t\t\t\t\t\t\t\t\tconst sizeIsNearInteger: boolean = Math.abs(partSize - nearestSize) < 0.01;\r\n\t\t\t\t\t\t\t\t\tconst sizeCrossedInteger: boolean = (Math.abs(prevPartSize - Math.round(prevPartSize)))\r\n\t\t\t\t\t\t\t\t\t\t? Math.abs(partSize - prevPartSize) >= 1.0\r\n\t\t\t\t\t\t\t\t\t\t: Math.floor(partSize) != Math.floor(prevPartSize);\r\n\t\t\t\t\t\t\t\t\tconst keySize: boolean = sizeIsNearInteger || sizeCrossedInteger;\r\n\t\t\t\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t\t\t\tprevPartPitch = partPitch;\r\n\t\t\t\t\t\t\t\t\tprevPartSize = partSize;\r\n\t\t\t\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t\t\t\tif (keyPitch || keySize || lastPart) {\r\n\t\t\t\t\t\t\t\t\t\tconst currentPin: PotentialPin = {part: noteRelativePart, pitch: nearestPitch, size: nearestSize, keyPitch: keyPitch || lastPart, keySize: keySize || lastPart};\r\n\t\t\t\t\t\t\t\t\t\tconst prevPin: PotentialPin = potentialPins[prevPinIndex];\r\n\t\t\t\t\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t\t\t\t\t// At all key points in the list of potential pins, check to see if they\r\n\t\t\t\t\t\t\t\t\t\t// continue the recent slope. If not, insert a pin at the corner, where\r\n\t\t\t\t\t\t\t\t\t\t// the recent recorded values deviate the furthest from the slope.\r\n\t\t\t\t\t\t\t\t\t\tlet addPin: boolean = false;\r\n\t\t\t\t\t\t\t\t\t\tlet addPinAtIndex: number = Number.MAX_VALUE;\r\n\t\t\t\t\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t\t\t\t\tif (currentPin.keyPitch) {\r\n\t\t\t\t\t\t\t\t\t\t\tconst slope: number = (currentPin.pitch - prevPin.pitch) / (currentPin.part - prevPin.part);\r\n\t\t\t\t\t\t\t\t\t\t\tlet furthestIntervalDistance: number = Math.abs(slope); // minimum distance to make a new pin.\r\n\t\t\t\t\t\t\t\t\t\t\tlet addIntervalPin: boolean = false;\r\n\t\t\t\t\t\t\t\t\t\t\tlet addIntervalPinAtIndex: number = Number.MAX_VALUE;\r\n\t\t\t\t\t\t\t\t\t\t\tfor (let potentialIndex: number = prevPinIndex + 1; potentialIndex < potentialPins.length; potentialIndex++) {\r\n\t\t\t\t\t\t\t\t\t\t\t\tconst potentialPin: PotentialPin = potentialPins[potentialIndex];\r\n\t\t\t\t\t\t\t\t\t\t\t\tif (potentialPin.keyPitch) {\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tconst interpolatedInterval: number = prevPin.pitch + slope * (potentialPin.part - prevPin.part);\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tconst distance: number = Math.abs(interpolatedInterval - potentialPin.pitch);\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tif (furthestIntervalDistance < distance) {\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tfurthestIntervalDistance = distance;\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\taddIntervalPin = true;\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\taddIntervalPinAtIndex = potentialIndex;\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t\t\t\tif (addIntervalPin) {\r\n\t\t\t\t\t\t\t\t\t\t\t\taddPin = true;\r\n\t\t\t\t\t\t\t\t\t\t\t\taddPinAtIndex = Math.min(addPinAtIndex, addIntervalPinAtIndex);\r\n\t\t\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t\t\t\t\tif (currentPin.keySize) {\r\n\t\t\t\t\t\t\t\t\t\t\tconst slope: number = (currentPin.size - prevPin.size) / (currentPin.part - prevPin.part);\r\n\t\t\t\t\t\t\t\t\t\t\tlet furthestSizeDistance: number = Math.abs(slope); // minimum distance to make a new pin.\r\n\t\t\t\t\t\t\t\t\t\t\tlet addSizePin: boolean = false;\r\n\t\t\t\t\t\t\t\t\t\t\tlet addSizePinAtIndex: number = Number.MAX_VALUE;\r\n\t\t\t\t\t\t\t\t\t\t\tfor (let potentialIndex: number = prevPinIndex + 1; potentialIndex < potentialPins.length; potentialIndex++) {\r\n\t\t\t\t\t\t\t\t\t\t\t\tconst potentialPin: PotentialPin = potentialPins[potentialIndex];\r\n\t\t\t\t\t\t\t\t\t\t\t\tif (potentialPin.keySize) {\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tconst interpolatedSize: number = prevPin.size + slope * (potentialPin.part - prevPin.part);\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tconst distance: number = Math.abs(interpolatedSize - potentialPin.size);\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tif (furthestSizeDistance < distance) {\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tfurthestSizeDistance = distance;\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\taddSizePin = true;\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\taddSizePinAtIndex = potentialIndex;\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t\t\t\tif (addSizePin) {\r\n\t\t\t\t\t\t\t\t\t\t\t\taddPin = true;\r\n\t\t\t\t\t\t\t\t\t\t\t\taddPinAtIndex = Math.min(addPinAtIndex, addSizePinAtIndex);\r\n\t\t\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t\t\t\t\tif (addPin) {\r\n\t\t\t\t\t\t\t\t\t\t\tconst toBePinned: PotentialPin = potentialPins[addPinAtIndex];\r\n\t\t\t\t\t\t\t\t\t\t\tnote.pins.push(makeNotePin(toBePinned.pitch - initialBeepBoxPitch, toBePinned.part, toBePinned.size));\r\n\t\t\t\t\t\t\t\t\t\t\tprevPinIndex = addPinAtIndex;\r\n\t\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t\t\t\t\tpotentialPins.push(currentPin);\r\n\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t\t\t// And always add a pin at the end of the note.\r\n\t\t\t\t\t\t\t\tconst lastToBePinned: PotentialPin = potentialPins[potentialPins.length - 1];\r\n\t\t\t\t\t\t\t\tnote.pins.push(makeNotePin(lastToBePinned.pitch - initialBeepBoxPitch, lastToBePinned.part, lastToBePinned.size));\r\n\t\t\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t\t\t// Use interval range to constrain min/max pitches so no pin is out of bounds.\r\n\t\t\t\t\t\t\t\tlet maxPitch: number = channelMaxPitch;\r\n\t\t\t\t\t\t\t\tlet minPitch: number = 0;\r\n\t\t\t\t\t\t\t\tfor (const notePin of note.pins) {\r\n\t\t\t\t\t\t\t\t\tmaxPitch = Math.min(maxPitch, channelMaxPitch - notePin.interval);\r\n\t\t\t\t\t\t\t\t\tminPitch = Math.min(minPitch, -notePin.interval);\r\n\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t\t\t// Build the note chord out of the current pitches, shifted into BeepBox channelBasePitch relative values.\r\n\t\t\t\t\t\t\t\tnote.pitches.length = 0;\r\n\t\t\t\t\t\t\t\tfor (let pitchIndex: number = 0; pitchIndex < Math.min(Config.maxChordSize, heldPitches.length); pitchIndex++) {\r\n\t\t\t\t\t\t\t\t\tlet heldPitch: number = heldPitches[pitchIndex + Math.max(0, heldPitches.length - Config.maxChordSize)] * midiIntervalScale;\r\n\t\t\t\t\t\t\t\t\tif (preset != null && preset.midiSubharmonicOctaves != undefined) {\r\n\t\t\t\t\t\t\t\t\t\theldPitch -= 12 * preset.midiSubharmonicOctaves;\r\n\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t\tconst shiftedPitch: number = Math.max(minPitch, Math.min(maxPitch, Math.round((heldPitch + heldPitchOffset) / intervalScale)));\r\n\t\t\t\t\t\t\t\t\tif (note.pitches.indexOf(shiftedPitch) == -1) {\r\n\t\t\t\t\t\t\t\t\t\tnote.pitches.push(shiftedPitch);\r\n\t\t\t\t\t\t\t\t\t\tconst weight: number = note.end - note.start;\r\n\t\t\t\t\t\t\t\t\t\tpitchSum += shiftedPitch * weight;\r\n\t\t\t\t\t\t\t\t\t\tpitchCount += weight;\r\n\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\tpattern.notes.push(note);\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t\t\t\r\n\t\t\t\t\t// Process the next midi note event before continuing, updating the list of currently held pitches.\r\n\t\t\t\t\tif (heldPitches.indexOf(noteEvent.pitch) != -1) {\r\n\t\t\t\t\t\theldPitches.splice(heldPitches.indexOf(noteEvent.pitch), 1);\r\n\t\t\t\t\t}\r\n\t\t\t\t\tif (noteEvent.on) {\r\n\t\t\t\t\t\theldPitches.push(noteEvent.pitch);\r\n\t\t\t\t\t\tcurrentVelocity = noteEvent.velocity;\r\n\t\t\t\t\t\tcurrentProgram = noteEvent.program;\r\n\t\t\t\t\t\tcurrentInstrumentVolume = noteEvent.instrumentVolume;\r\n\t\t\t\t\t\tcurrentInstrumentPan = noteEvent.instrumentPan;\r\n\t\t\t\t\t}\r\n\t\t\t\t\t\t\r\n\t\t\t\t\tprevEventMidiTick = nextEventMidiTick;\r\n\t\t\t\t\tprevEventPart = nextEventPart;\r\n\t\t\t\t}\r\n\t\t\t\t\t\r\n\t\t\t\tconst averagePitch: number = pitchSum / pitchCount;\r\n\t\t\t\t\tchannel.octave = (isNoiseChannel || isModChannel) ? 0 : Math.max(0, Math.min(Config.pitchOctaves - 1, Math.floor((averagePitch / 12))));\r\n\t\t\t}\r\n\t\t\t\t\t\r\n\t\t\twhile (channel.bars.length < songTotalBars) {\r\n\t\t\t\tchannel.bars.push(0);\r\n\t\t\t}\r\n\t\t}\r\n\t\t\t\t\t\t // Add mod channel to hold the tempo changes, if necessary.\r\n            if (tempoChanges.length > 1) {\r\n                let tempoModChannel = new Channel();\r\n                modChannels.push(tempoModChannel);\r\n                let tempoModInstrument = new Instrument(false, true);\r\n                tempoModInstrument.setTypeAndReset(9 /* InstrumentType.mod */, false, true);\r\n                tempoModInstrument.modulators[0] = Config.modulators.dictionary[\"tempo\"].index;\r\n                tempoModInstrument.modChannels[0] = -1;\r\n                tempoModChannel.instruments.push(tempoModInstrument);\r\n                // We're using the first modulator in the channel, but the pitch values are\r\n                // flipped relative to the UI, so we need to pick a pitch value accordingly.\r\n                const tempoModPitch = Config.modCount - 1;\r\n                let currentBar = -1;\r\n                let pattern = null;\r\n                let prevChangeEndPart = 0;\r\n                for (let changeIndex = 0; changeIndex < tempoChanges.length; changeIndex++) {\r\n                    const change = tempoChanges[changeIndex];\r\n                    const changeStartMidiTick = change.midiTick;\r\n                    const changeStartPart = quantizeMidiTickToPart(changeStartMidiTick);\r\n                    let changeEndMidiTick = -1;\r\n                    let changeEndPart = -1;\r\n                    if (changeIndex === tempoChanges.length - 1) {\r\n                        changeEndMidiTick = changeStartMidiTick + 1;\r\n                        changeEndPart = changeStartPart + 1;\r\n                    }\r\n                    else {\r\n                        const nextChange = tempoChanges[changeIndex + 1];\r\n                        changeEndMidiTick = nextChange.midiTick;\r\n                        changeEndPart = quantizeMidiTickToPart(changeEndMidiTick);\r\n                    }\r\n                    let startBar = Math.floor(changeStartPart / partsPerBar);\r\n                    let endBar = Math.ceil(changeEndPart / partsPerBar);\r\n                    for (let bar = startBar; bar < endBar; bar++) {\r\n                        const barStartPart = bar * partsPerBar;\r\n                        const noteStartPart = Math.max(0, prevChangeEndPart - barStartPart);\r\n                        let noteEndPart = Math.min(partsPerBar, changeEndPart - barStartPart);\r\n                        if (noteStartPart < noteEndPart) {\r\n                            // Ensure a pattern exists for the current bar before inserting notes into it.\r\n                            if (currentBar != bar || pattern == null) {\r\n                                currentBar++;\r\n                                while (currentBar < bar) {\r\n                                    tempoModChannel.bars[currentBar] = 0;\r\n                                    currentBar++;\r\n                                }\r\n                                pattern = new Pattern();\r\n                                tempoModChannel.patterns.push(pattern);\r\n                                tempoModChannel.bars[currentBar] = tempoModChannel.patterns.length;\r\n                                pattern.instruments[0] = 0;\r\n                                pattern.instruments.length = 1;\r\n                            }\r\n                            // Create a new note.\r\n                            const newBPM = Math.max(Config.tempoMin, Math.min(Config.tempoMax, Math.round(microsecondsPerMinute / change.microsecondsPerBeat) - Config.modulators.dictionary[\"tempo\"].convertRealFactor));\r\n                            const note = new Note(tempoModPitch, noteStartPart, noteEndPart, newBPM, false);\r\n                            pattern.notes.push(note);\r\n                        }\r\n                    }\r\n                    prevChangeEndPart = changeEndPart;\r\n                }\r\n           }\r\n//midi tempo addition\r\n\t\t// For better or for worse, BeepBox has a more limited number of channels than Midi.\r\n\t\t// To compensate, try to merge non-overlapping channels.\r\n\t\tfunction compactChannels(channels: Channel[], maxLength: number): void {\r\n\t\t\twhile (channels.length > maxLength) {\r\n\t\t\t\tlet bestChannelIndexA: number = channels.length - 2;\r\n\t\t\t\tlet bestChannelIndexB: number = channels.length - 1;\r\n\t\t\t\tlet fewestConflicts: number = Number.MAX_VALUE;\r\n\t\t\t\tlet fewestGaps: number = Number.MAX_VALUE;\r\n\t\t\t\tfor (let channelIndexA: number = 0; channelIndexA < channels.length - 1; channelIndexA++) {\r\n\t\t\t\t\tfor (let channelIndexB: number = channelIndexA + 1; channelIndexB < channels.length; channelIndexB++) {\r\n\t\t\t\t\t\tconst channelA: Channel = channels[channelIndexA];\r\n\t\t\t\t\t\tconst channelB: Channel = channels[channelIndexB];\r\n\t\t\t\t\t\tlet conflicts: number = 0;\r\n\t\t\t\t\t\tlet gaps: number = 0;\r\n\t\t\t\t\t\tfor (let barIndex: number = 0; barIndex < channelA.bars.length && barIndex < channelB.bars.length; barIndex++) {\r\n\t\t\t\t\t\t\tif (channelA.bars[barIndex] != 0 && channelB.bars[barIndex] != 0) conflicts++;\r\n\t\t\t\t\t\t\tif (channelA.bars[barIndex] == 0 && channelB.bars[barIndex] == 0) gaps++;\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\tif (conflicts <= fewestConflicts) {\r\n\t\t\t\t\t\t\tif (conflicts < fewestConflicts || gaps < fewestGaps) {\r\n\t\t\t\t\t\t\t\tbestChannelIndexA = channelIndexA;\r\n\t\t\t\t\t\t\t\tbestChannelIndexB = channelIndexB;\r\n\t\t\t\t\t\t\t\tfewestConflicts = conflicts;\r\n\t\t\t\t\t\t\t\tfewestGaps = gaps;\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t\t\t\r\n\t\t\t\t// Merge channelB's patterns, instruments, and bars into channelA.\r\n\t\t\t\tconst channelA: Channel = channels[bestChannelIndexA];\r\n\t\t\t\tconst channelB: Channel = channels[bestChannelIndexB];\r\n\t\t\t\tconst channelAInstrumentCount: number = channelA.instruments.length;\r\n\t\t\t\tconst channelAPatternCount: number = channelA.patterns.length;\r\n\t\t\t\tfor (const instrument of channelB.instruments) {\r\n\t\t\t\t\tchannelA.instruments.push(instrument);\r\n\t\t\t\t}\r\n\t\t\t\tfor (const pattern of channelB.patterns) {\r\n\t\t\t\t\tpattern.instruments[0] += channelAInstrumentCount;\r\n\t\t\t\t\tchannelA.patterns.push(pattern);\r\n\t\t\t\t}\r\n\t\t\t\tfor (let barIndex: number = 0; barIndex < channelA.bars.length && barIndex < channelB.bars.length; barIndex++) {\r\n\t\t\t\t\tif (channelA.bars[barIndex] == 0 && channelB.bars[barIndex] != 0) {\r\n\t\t\t\t\t\tchannelA.bars[barIndex] = channelB.bars[barIndex] + channelAPatternCount;\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t\t\t\r\n\t\t\t\t// Remove channelB.\r\n\t\t\t\tchannels.splice(bestChannelIndexB, 1);\r\n\t\t\t}\r\n\t\t}\r\n\t\t\t\r\n\t\tcompactChannels(pitchChannels, Config.pitchChannelCountMax);\r\n\t\tcompactChannels(noiseChannels, Config.noiseChannelCountMax);\r\n\t\tcompactChannels(modChannels, Config.modChannelCountMax);\r\n\t\t\t\r\n\t\tclass ChangeImportMidi extends ChangeGroup {\r\n\t\t\tconstructor(doc: SongDocument) {\r\n\t\t\t\tsuper();\r\n\t\t\t\tconst song: Song = doc.song;\r\n\t\t\t\tsong.tempo = beatsPerMinute;\r\n\t\t\t\tsong.beatsPerBar = beatsPerBar;\r\n\t\t\t\tsong.key = key;\r\n\t\t\t\tsong.scale = 11;\r\n\t\t\t\tsong.rhythm = 1;\r\n\t\t\t\tsong.layeredInstruments = false;\r\n\t\t\t\tsong.patternInstruments = pitchChannels.some(channel => channel.instruments.length > 1) || noiseChannels.some(channel => channel.instruments.length > 1);\r\n\t\t\t\t\t\r\n\t\t\t\tremoveDuplicatePatterns(pitchChannels);\r\n\t\t\t\tremoveDuplicatePatterns(noiseChannels);\r\n\t\t\t\tremoveDuplicatePatterns(modChannels);\r\n\t\t\t\t\t\r\n\t\t\t\tthis.append(new ChangeReplacePatterns(doc, pitchChannels, noiseChannels, modChannels));\r\n\t\t\t\tsong.loopStart = 0;\r\n\t\t\t\tsong.loopLength = song.barCount;\r\n\t\t\t\tthis._didSomething();\r\n\t\t\t\tdoc.notifier.changed();\r\n\t\t\t}\r\n\t\t}\r\n\t\tthis._doc.goBackToStart();\r\n\t\tfor (const channel of this._doc.song.channels) channel.muted = false;\r\n\t\tthis._doc.prompt = null;\r\n\t\tthis._doc.record(new ChangeImportMidi(this._doc), true, true);\r\n\t}\r\n}\r\n\r\n","// Copyright (c) 2012-2022 John Nesky and contributing authors, distributed under the MIT license, see accompanying the LICENSE.md file.\r\n\r\nimport {SongDocument} from \"./SongDocument\";\r\nimport {Layout} from \"./Layout\";\r\nimport {Prompt} from \"./Prompt\";\r\nimport {HTML, SVG} from \"imperative-html/dist/esm/elements-strict\";\r\n\r\nconst {button, label, div, form, h2, input} = HTML;\r\n\r\nexport class LayoutPrompt implements Prompt {\r\n\tprivate readonly _fileInput: HTMLInputElement = input({type: \"file\", accept: \".json,application/json,.mid,.midi,audio/midi,audio/x-midi\"});\r\n\tprivate readonly _okayButton: HTMLButtonElement = button({class: \"okayButton\", style: \"width:45%;\"}, \"Okay\");\r\n\tprivate readonly _cancelButton: HTMLButtonElement = button({class: \"cancelButton\"});\r\n\tprivate readonly _form: HTMLFormElement = form({style: \"display: flex; gap: 10px;\"},\r\n\t\t\tlabel({class: \"layout-option\"},\r\n\t\t\t\tinput({type: \"radio\", name: \"layout\", value: \"small\"}),\r\n\t\t\t\tSVG(`\\\r\n\t\t\t\t\t<svg viewBox=\"-4 -1 28 22\">\r\n\t\t\t\t\t\t<rect x=\"0\" y=\"0\" width=\"20\" height=\"20\" fill=\"none\" stroke=\"currentColor\" stroke-width=\"1\"/>\r\n\t\t\t\t\t\t<rect x=\"2\" y=\"2\" width=\"11\" height=\"10\" fill=\"currentColor\"/>\r\n\t\t\t\t\t\t<rect x=\"14\" y=\"2\" width=\"4\" height=\"16\" fill=\"currentColor\"/>\r\n\t\t\t\t\t\t<rect x=\"2\" y=\"13\" width=\"11\" height=\"5\" fill=\"currentColor\"/>\r\n\t\t\t\t\t</svg>\r\n\t\t\t\t`),\r\n\t\t\t\tdiv(\"Small\"),\r\n\t\t\t),\r\n\t\t\tlabel({class: \"layout-option\"},\r\n\t\t\t\tinput({type: \"radio\", name: \"layout\", value: \"long\"}),\r\n\t\t\t\tSVG(`\\\r\n\t\t\t\t\t<svg viewBox=\"-1 -1 28 22\">\r\n\t\t\t\t\t\t<rect x=\"0\" y=\"0\" width=\"26\" height=\"20\" fill=\"none\" stroke=\"currentColor\" stroke-width=\"1\"/>\r\n\t\t\t\t\t\t<rect x=\"2\" y=\"2\" width=\"12\" height=\"10\" fill=\"currentColor\"/>\r\n\t\t\t\t\t\t<rect x=\"15\" y=\"2\" width=\"4\" height=\"10\" fill=\"currentColor\"/>\r\n\t\t\t\t\t\t<rect x=\"20\" y=\"2\" width=\"4\" height=\"10\" fill=\"currentColor\"/>\r\n\t\t\t\t\t\t<rect x=\"2\" y=\"13\" width=\"22\" height=\"5\" fill=\"currentColor\"/>\r\n\t\t\t\t\t</svg>\r\n\t\t\t\t`),\r\n\t\t\t\tdiv(\"Long\"),\r\n\t\t\t),\r\n\t\t\tlabel({class: \"layout-option\"},\r\n\t\t\t\tinput({type: \"radio\", name: \"layout\", value: \"tall\"}),\r\n\t\t\t\tSVG(`\\\r\n\t\t\t\t\t<svg viewBox=\"-1 -1 28 22\">\r\n\t\t\t\t\t\t<rect x=\"0\" y=\"0\" width=\"26\" height=\"20\" fill=\"none\" stroke=\"currentColor\" stroke-width=\"1\"/>\r\n\t\t\t\t\t\t<rect x=\"11\" y=\"2\" width=\"8\" height=\"16\" fill=\"currentColor\"/>\r\n\t\t\t\t\t\t<rect x=\"20\" y=\"2\" width=\"4\" height=\"16\" fill=\"currentColor\"/>\r\n\t\t\t\t\t\t<rect x=\"2\" y=\"2\" width=\"8\" height=\"16\" fill=\"currentColor\"/>\r\n\t\t\t\t\t</svg>\r\n\t\t\t\t`),\r\n\t\t\t\tdiv(\"Tall\"),\r\n\t\t\t),\r\n\t\t\tlabel({class: \"layout-option\"},\r\n\t\t\t\tinput({type: \"radio\", name: \"layout\", value: \"wide\"}),\r\n\t\t\t\tSVG(`\\\r\n\t\t\t\t\t<svg viewBox=\"-1 -1 28 22\">\r\n\t\t\t\t\t\t<rect x=\"0\" y=\"0\" width=\"26\" height=\"20\" fill=\"none\" stroke=\"currentColor\" stroke-width=\"1\"/>\r\n\t\t\t\t\t\t<rect x=\"2\" y=\"2\" width=\"4\" height=\"16\" fill=\"currentColor\"/>\r\n\t\t\t\t\t\t<rect x=\"18\" y=\"2\" width=\"2.5\" height=\"16\" fill=\"currentColor\"/>\r\n\t\t\t\t\t\t<rect x=\"21.5\" y=\"2\" width=\"2.5\" height=\"16\" fill=\"currentColor\"/>\r\n\t\t\t\t\t\t<rect x=\"7\" y=\"2\" width=\"10\" height=\"16\" fill=\"currentColor\"/>\r\n\t\t\t\t\t</svg>\r\n\t\t\t\t`),\r\n\t\t\t\tdiv(\"Wide (JB)\"),\r\n\t\t\t),\r\n\t\t);\r\n\t\r\n\tpublic readonly container: HTMLDivElement = div({class: \"prompt noSelection\", style: \"width: 300px;\"},\r\n\t\th2(\"Layout\"),\r\n\t\tthis._form,\r\n\t\tdiv({style: \"display: flex; flex-direction: row-reverse; justify-content: space-between;\"},\r\n\t\t\tthis._okayButton,\r\n\t\t),\r\n\t\tthis._cancelButton,\r\n\t);\r\n\t\r\n\tconstructor(private _doc: SongDocument) {\r\n\t\tthis._fileInput.select();\r\n\t\tsetTimeout(()=>this._fileInput.focus());\r\n\t\t\r\n\t\tthis._okayButton.addEventListener(\"click\", this._confirm);\r\n\t\tthis._cancelButton.addEventListener(\"click\", this._close);\r\n\t\tthis.container.addEventListener(\"keydown\", this._whenKeyPressed);\r\n\t\t\r\n\t\t(<any> this._form.elements)[\"layout\"].value = this._doc.prefs.layout;\r\n\t}\r\n\t\r\n\tprivate _close = (): void => { \r\n\t\tthis._doc.undo();\r\n\t}\r\n\t\r\n\tpublic cleanUp = (): void => { \r\n\t\tthis._okayButton.removeEventListener(\"click\", this._confirm);\r\n\t\tthis._cancelButton.removeEventListener(\"click\", this._close);\r\n\t\tthis.container.removeEventListener(\"keydown\", this._whenKeyPressed);\r\n\t}\r\n\t\r\n\tprivate _whenKeyPressed = (event: KeyboardEvent): void => {\r\n\t\tif ((<Element> event.target).tagName != \"BUTTON\" && event.keyCode == 13) { // Enter key\r\n\t\t\tthis._confirm();\r\n\t\t}\r\n\t}\r\n\t\r\n\tprivate _confirm = (): void => { \r\n\t\tthis._doc.prefs.layout = (<any> this._form.elements)[\"layout\"].value;\r\n\t\tthis._doc.prefs.save();\r\n\t\tLayout.setLayout(this._doc.prefs.layout);\r\n\t\tthis._close();\r\n\t}\r\n}\r\n","// Copyright (c) 2012-2022 John Nesky and contributing authors, distributed under the MIT license, see accompanying the LICENSE.md file.\r\n\r\nimport {InstrumentType, Config} from \"../synth/SynthConfig\";\r\nimport {Instrument} from \"../synth/synth\";\r\nimport {SongDocument} from \"./SongDocument\";\r\nimport {ChangeSetEnvelopeTarget, ChangeSetEnvelopeType, ChangeRemoveEnvelope} from \"./changes\";\r\nimport {HTML} from \"imperative-html/dist/esm/elements-strict\";\r\n\r\nexport class EnvelopeEditor {\r\n\tpublic readonly container: HTMLElement = HTML.div({class: \"envelopeEditor\"});\r\n\t\r\n\tprivate readonly _rows: HTMLDivElement[] = [];\r\n\tprivate readonly _targetSelects: HTMLSelectElement[] = [];\r\n\tprivate readonly _envelopeSelects: HTMLSelectElement[] = [];\r\n\tprivate readonly _deleteButtons: HTMLButtonElement[] = [];\r\n\tprivate _renderedEnvelopeCount: number = 0;\r\n\tprivate _renderedEqFilterCount: number = -1;\r\n\tprivate _renderedNoteFilterCount: number = -1;\r\n\tprivate _renderedInstrumentType: InstrumentType;\r\n\tprivate _renderedEffects: number = 0;\r\n\t\r\n\tconstructor(private _doc: SongDocument) {\r\n\t\tthis.container.addEventListener(\"change\", this._onChange);\r\n\t\tthis.container.addEventListener(\"click\", this._onClick);\r\n\t}\r\n\t\r\n\tprivate _onChange = (event: Event): void => {\r\n\t\tconst targetSelectIndex: number = this._targetSelects.indexOf(<any> event.target);\r\n\t\tconst envelopeSelectIndex: number = this._envelopeSelects.indexOf(<any> event.target);\r\n\t\tif (targetSelectIndex != -1) {\r\n\t\t\tconst combinedValue: number = parseInt(this._targetSelects[targetSelectIndex].value);\r\n\t\t\tconst target: number = combinedValue % Config.instrumentAutomationTargets.length;\r\n\t\t\tconst index: number = (combinedValue / Config.instrumentAutomationTargets.length) >>> 0;\r\n\t\t\tthis._doc.record(new ChangeSetEnvelopeTarget(this._doc, targetSelectIndex, target, index));\r\n\t\t} else if (envelopeSelectIndex != -1) {\r\n\t\t\tthis._doc.record(new ChangeSetEnvelopeType(this._doc, envelopeSelectIndex, this._envelopeSelects[envelopeSelectIndex].selectedIndex));\r\n\t\t}\r\n\t}\r\n\t\r\n\tprivate _onClick = (event: MouseEvent): void => {\r\n\t\tconst index: number = this._deleteButtons.indexOf(<any> event.target);\r\n\t\tif (index != -1) {\r\n\t\t\tthis._doc.record(new ChangeRemoveEnvelope(this._doc, index));\r\n\t\t}\r\n\t}\r\n\t\r\n\tprivate _makeOption(target: number, index: number): HTMLOptionElement {\r\n\t\tlet displayName = Config.instrumentAutomationTargets[target].displayName;\r\n\t\tif (Config.instrumentAutomationTargets[target].maxCount > 1) {\r\n\t\t\tif (displayName.indexOf(\"#\") != -1) {\r\n\t\t\t\tdisplayName = displayName.replace(\"#\", String(index+1));\r\n\t\t\t} else {\r\n\t\t\t\tdisplayName += \" \" + (index+1);\r\n\t\t\t}\r\n\t\t}\r\n\t\treturn HTML.option({value: target + index * Config.instrumentAutomationTargets.length}, displayName);\r\n\t}\r\n\t\r\n\tprivate _updateTargetOptionVisibility(menu: HTMLSelectElement, instrument: Instrument): void {\r\n\t\tfor (let optionIndex: number = 0; optionIndex < menu.childElementCount; optionIndex++) {\r\n\t\t\tconst option: HTMLOptionElement = <HTMLOptionElement> menu.children[optionIndex];\r\n\t\t\tconst combinedValue: number = parseInt(option.value);\r\n\t\t\tconst target: number = combinedValue % Config.instrumentAutomationTargets.length;\r\n\t\t\tconst index: number = (combinedValue / Config.instrumentAutomationTargets.length) >>> 0;\r\n\t\t\toption.hidden = !instrument.supportsEnvelopeTarget(target, index);\r\n\t\t}\r\n\t}\r\n\t\r\n\tpublic render(): void {\r\n\t\tconst instrument: Instrument = this._doc.song.channels[this._doc.channel].instruments[this._doc.getCurrentInstrument()];\r\n\t\t\r\n\t\tfor (let envelopeIndex: number = this._rows.length; envelopeIndex < instrument.envelopeCount; envelopeIndex++) {\r\n\t\t\tconst targetSelect: HTMLSelectElement = HTML.select();\r\n\t\t\tfor (let target: number = 0; target < Config.instrumentAutomationTargets.length; target++) {\r\n\t\t\t\tconst interleaved: boolean = (Config.instrumentAutomationTargets[target].interleave);\r\n\t\t\t\tfor (let index: number = 0; index < Config.instrumentAutomationTargets[target].maxCount; index++) {\r\n\t\t\t\t\ttargetSelect.appendChild(this._makeOption(target, index));\r\n\t\t\t\t\tif (interleaved) {\r\n\t\t\t\t\t\ttargetSelect.appendChild(this._makeOption(target + 1, index));\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t\tif (interleaved) target++;\r\n\t\t\t}\r\n\t\t\t\r\n\t\t\tconst envelopeSelect: HTMLSelectElement = HTML.select();\r\n\t\t\tfor (let envelope: number = 0; envelope < Config.envelopes.length; envelope++) {\r\n\t\t\t\tenvelopeSelect.appendChild(HTML.option({value: envelope}, Config.envelopes[envelope].name));\r\n\t\t\t} \r\n\t\t\t\r\n\t\t\tconst deleteButton: HTMLButtonElement = HTML.button({type: \"button\", class: \"delete-envelope\"});\r\n\t\t\t\r\n\t\t\tconst row: HTMLDivElement = HTML.div({class: \"envelope-row\"},\r\n\t\t\t\tHTML.div({class: \"selectContainer\", style: \"width: 0; flex: 1;\"}, targetSelect),\r\n\t\t\t\tHTML.div({class: \"selectContainer\", style: \"width: 0; flex: 0.7;\"}, envelopeSelect),\r\n\t\t\t\tdeleteButton,\r\n\t\t\t);\r\n\t\t\t\r\n\t\t\tthis.container.appendChild(row);\r\n\t\t\tthis._rows[envelopeIndex] = row;\r\n\t\t\tthis._targetSelects[envelopeIndex] = targetSelect;\r\n\t\t\tthis._envelopeSelects[envelopeIndex] = envelopeSelect;\r\n\t\t\tthis._deleteButtons[envelopeIndex] = deleteButton;\r\n\t\t}\r\n\t\t\r\n\t\tfor (let envelopeIndex: number = this._renderedEnvelopeCount; envelopeIndex < instrument.envelopeCount; envelopeIndex++) {\r\n\t\t\tthis._rows[envelopeIndex].style.display = \"\";\r\n\t\t\t// For newly visible rows, update target option visibiliy.\r\n\t\t\tthis._updateTargetOptionVisibility(this._targetSelects[envelopeIndex], instrument);\r\n\t\t}\r\n\t\t\r\n\t\tfor (let envelopeIndex: number = instrument.envelopeCount; envelopeIndex < this._renderedEnvelopeCount; envelopeIndex++) {\r\n\t\t\tthis._rows[envelopeIndex].style.display = \"none\";\r\n\t\t}\r\n\r\n\t\tlet useControlPointCount: number = instrument.noteFilter.controlPointCount;\r\n\t\tif (instrument.noteFilterType)\r\n\t\t\tuseControlPointCount = 1;\r\n\t\t\r\n\t\tif (this._renderedEqFilterCount != instrument.eqFilter.controlPointCount ||\r\n\t\t\tthis._renderedNoteFilterCount != useControlPointCount ||\r\n\t\t\tthis._renderedInstrumentType != instrument.type ||\r\n\t\t\tthis._renderedEffects != instrument.effects)\r\n\t\t{\r\n\t\t\t// Update target option visibility for previously visible rows.\r\n\t\t\tfor (let envelopeIndex: number = 0; envelopeIndex < this._renderedEnvelopeCount; envelopeIndex++) {\r\n\t\t\t\tthis._updateTargetOptionVisibility(this._targetSelects[envelopeIndex], instrument);\r\n\t\t\t}\r\n\t\t}\r\n\t\t\r\n\t\tfor (let envelopeIndex: number = 0; envelopeIndex < instrument.envelopeCount; envelopeIndex++) {\r\n\t\t\tthis._targetSelects[envelopeIndex].value = String(instrument.envelopes[envelopeIndex].target + instrument.envelopes[envelopeIndex].index * Config.instrumentAutomationTargets.length);\r\n\t\t\tthis._envelopeSelects[envelopeIndex].selectedIndex = instrument.envelopes[envelopeIndex].envelope;\r\n\t\t}\r\n\t\t\r\n\t\tthis._renderedEnvelopeCount = instrument.envelopeCount;\r\n\t\tthis._renderedEqFilterCount = instrument.eqFilter.controlPointCount;\r\n\t\tthis._renderedNoteFilterCount = useControlPointCount;\r\n\t\tthis._renderedInstrumentType = instrument.type;\r\n\t\tthis._renderedEffects = instrument.effects;\r\n\t}\r\n}\r\n","// Copyright (c) 2012-2022 John Nesky and contributing authors, distributed under the MIT license, see accompanying the LICENSE.md file.\r\n\r\nimport {Config} from \"../synth/SynthConfig\";\r\nimport {clamp, Instrument, Synth} from \"../synth/synth\";\r\nimport {SongDocument} from \"./SongDocument\";\r\nimport {HTML, SVG} from \"imperative-html/dist/esm/elements-strict\";\r\nimport {ColorConfig} from \"./ColorConfig\";\r\nimport {ChangeSequence, UndoableChange} from \"./Change\";\r\nimport {ChangeFadeInOut} from \"./changes\";\r\n\r\nexport class FadeInOutEditor {\r\n\tprivate readonly _editorWidth: number = 120;\r\n\tprivate readonly _editorHeight: number = 26;\r\n\tprivate readonly _fadeCurve: SVGPathElement = SVG.path({fill: ColorConfig.uiWidgetBackground, \"pointer-events\": \"none\"});\r\n\tprivate readonly _dottedLinePath: SVGPathElement = SVG.path({fill: \"none\", stroke: \"currentColor\", \"stroke-width\": 1, \"stroke-dasharray\": \"3, 2\", \"pointer-events\": \"none\"});\r\n\tprivate readonly _controlCurve: SVGPathElement = SVG.path({fill: \"none\", stroke: \"currentColor\", \"stroke-width\": 2, \"pointer-events\": \"none\"});\r\n\tprivate readonly _svg: SVGSVGElement = SVG.svg({style: `background-color: ${ColorConfig.editorBackground}; touch-action: none; cursor: crosshair;`, width: \"100%\", height: \"100%\", viewBox: \"0 0 \"+this._editorWidth+\" \"+this._editorHeight, preserveAspectRatio: \"none\"},\r\n\t\tthis._fadeCurve,\r\n\t\tthis._dottedLinePath,\r\n\t\tthis._controlCurve,\r\n\t);\r\n\tpublic readonly container: HTMLElement = HTML.div({class: \"fadeInOut\", style: \"height: 100%;\"}, this._svg);\r\n\t\r\n\tprivate _mouseX: number = 0;\r\n\tprivate _mouseXStart: number = 0;\r\n\tprivate _mouseDown: boolean = false;\r\n\tprivate _mouseDragging: boolean = false;\r\n\tprivate _draggingFadeIn: boolean = false;\r\n\tprivate _dragChange: UndoableChange | null = null;\r\n\tprivate _renderedFadeIn: number = -1;\r\n\tprivate _renderedFadeOut: number = -1;\r\n\t\r\n\tconstructor(private _doc: SongDocument) {\r\n\t\tconst dottedLineX: number = this._fadeOutToX(Config.fadeOutNeutral);\r\n\t\tthis._dottedLinePath.setAttribute(\"d\", `M ${dottedLineX} 0 L ${dottedLineX} ${this._editorHeight}`);\r\n\t\t\r\n\t\tthis.container.addEventListener(\"mousedown\", this._whenMousePressed);\r\n\t\tdocument.addEventListener(\"mousemove\", this._whenMouseMoved);\r\n\t\tdocument.addEventListener(\"mouseup\", this._whenCursorReleased);\r\n\t\tthis.container.addEventListener(\"touchstart\", this._whenTouchPressed);\r\n\t\tthis.container.addEventListener(\"touchmove\", this._whenTouchMoved);\r\n\t\tthis.container.addEventListener(\"touchend\", this._whenCursorReleased);\r\n\t\tthis.container.addEventListener(\"touchcancel\", this._whenCursorReleased);\r\n\t}\r\n\t\r\n\tprivate _fadeInToX(fadeIn: number) {\r\n\t\treturn 1.0 + (this._editorWidth - 2.0) * 0.4 * fadeIn / (Config.fadeInRange - 1);\r\n\t}\r\n\tprivate _xToFadeIn(x: number) {\r\n\t\treturn clamp(0, Config.fadeInRange, Math.round((x - 1.0) * (Config.fadeInRange - 1) / (0.4 * this._editorWidth - 2.0)));\r\n\t}\r\n\tprivate _fadeOutToX(fadeOut: number) {\r\n\t\treturn 1.0 + (this._editorWidth - 2.0) * (0.5 + 0.5 * fadeOut / (Config.fadeOutTicks.length - 1));\r\n\t}\r\n\tprivate _xToFadeOut(x: number) {\r\n\t\treturn clamp(0, Config.fadeOutTicks.length, Math.round((Config.fadeOutTicks.length - 1) * ((x - 1.0) / (this._editorWidth - 2.0) - 0.5) / 0.5));\r\n\t}\r\n\t\r\n\tprivate _whenMousePressed = (event: MouseEvent): void => {\r\n\t\tevent.preventDefault();\r\n\t\tconst boundingRect: ClientRect = this._svg.getBoundingClientRect();\r\n\t\tthis._mouseX = ((event.clientX || event.pageX) - boundingRect.left);\r\n\t\tthis._whenCursorPressed();\r\n\t}\r\n\t\r\n\tprivate _whenTouchPressed = (event: TouchEvent): void => {\r\n\t\tevent.preventDefault();\r\n\t\tconst boundingRect: ClientRect = this._svg.getBoundingClientRect();\r\n\t\tthis._mouseX = (event.touches[0].clientX - boundingRect.left);\r\n\t\tthis._whenCursorPressed();\r\n\t}\r\n\t\r\n\tprivate _whenCursorPressed(): void {\r\n\t\tif (isNaN(this._mouseX)) this._mouseX = 0;\r\n\t\tthis._mouseXStart = this._mouseX;\r\n\t\tthis._mouseDown = true;\r\n\t\tthis._mouseDragging = false;\r\n\t\tconst instrument: Instrument = this._doc.song.channels[this._doc.channel].instruments[this._doc.getCurrentInstrument()];\r\n\t\tconst fadeInX: number = this._fadeInToX(instrument.fadeIn);\r\n\t\tconst fadeOutX: number = this._fadeOutToX(instrument.fadeOut);\r\n\t\tthis._draggingFadeIn = this._mouseXStart < (fadeInX + fadeOutX) / 2.0;\r\n\t\tthis._dragChange = new ChangeSequence();\r\n\t\tthis._doc.setProspectiveChange(this._dragChange);\r\n\t}\r\n\t\r\n\tprivate _whenMouseMoved = (event: MouseEvent): void => {\r\n\t\tif (this.container.offsetParent == null) return;\r\n\t\tconst boundingRect: ClientRect = this._svg.getBoundingClientRect();\r\n\t\tthis._mouseX = ((event.clientX || event.pageX) - boundingRect.left);\r\n\t\tif (isNaN(this._mouseX)) this._mouseX = 0;\r\n\t\tthis._whenCursorMoved();\r\n\t}\r\n\t\r\n\tprivate _whenTouchMoved = (event: TouchEvent): void => {\r\n\t\tif (this.container.offsetParent == null) return;\r\n\t\tif (!this._mouseDown) return;\r\n\t\tevent.preventDefault();\r\n\t\tconst boundingRect: ClientRect = this._svg.getBoundingClientRect();\r\n\t\tthis._mouseX = (event.touches[0].clientX - boundingRect.left);\r\n\t\tif (isNaN(this._mouseX)) this._mouseX = 0;\r\n\t\tthis._whenCursorMoved();\r\n\t}\r\n\t\r\n\tprivate _whenCursorMoved(): void {\r\n\t\tif (this._dragChange != null && this._doc.lastChangeWas(this._dragChange)) {\r\n\t\t\tthis._dragChange.undo();\r\n\t\t} else {\r\n\t\t\tthis._mouseDown = false;\r\n\t\t}\r\n\t\tthis._dragChange = null;\r\n\t\t\r\n\t\tif (this._mouseDown) {\r\n\t\t\tconst sequence: ChangeSequence = new ChangeSequence();\r\n\t\t\tthis._dragChange = sequence;\r\n\t\t\tthis._doc.setProspectiveChange(this._dragChange);\r\n\t\t\t\r\n\t\t\tif (Math.abs(this._mouseX - this._mouseXStart) > 4.0) {\r\n\t\t\t\tthis._mouseDragging = true;\r\n\t\t\t}\r\n\t\t\t\r\n\t\t\tif (this._mouseDragging) {\r\n\t\t\t\tconst instrument: Instrument = this._doc.song.channels[this._doc.channel].instruments[this._doc.getCurrentInstrument()];\r\n\t\t\t\tif (this._draggingFadeIn) {\r\n\t\t\t\t\tsequence.append(new ChangeFadeInOut(this._doc, this._xToFadeIn(this._fadeInToX(instrument.fadeIn) + this._mouseX - this._mouseXStart), instrument.fadeOut));\r\n\t\t\t\t} else {\r\n\t\t\t\t\tsequence.append(new ChangeFadeInOut(this._doc, instrument.fadeIn, this._xToFadeOut(this._fadeOutToX(instrument.fadeOut) + this._mouseX - this._mouseXStart)));\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\t\r\n\tprivate _whenCursorReleased = (event: Event): void => {\r\n\t\tif (this.container.offsetParent == null) return;\r\n\t\tif (this._mouseDown && this._doc.lastChangeWas(this._dragChange) && this._dragChange != null) {\r\n\t\t\tif (!this._mouseDragging) {\r\n\t\t\t\tconst instrument: Instrument = this._doc.song.channels[this._doc.channel].instruments[this._doc.getCurrentInstrument()];\r\n\t\t\t\tif (this._draggingFadeIn) {\r\n\t\t\t\t\tthis._doc.record(new ChangeFadeInOut(this._doc, this._xToFadeIn(this._mouseX), instrument.fadeOut));\r\n\t\t\t\t} else {\r\n\t\t\t\t\tthis._doc.record(new ChangeFadeInOut(this._doc, instrument.fadeIn, this._xToFadeOut(this._mouseX)));\r\n\t\t\t\t}\r\n\t\t\t} else {\r\n\t\t\t\tthis._doc.record(this._dragChange);\r\n\t\t\t}\r\n\t\t}\r\n\t\tthis._dragChange = null;\r\n\t\tthis._mouseDragging = false;\r\n\t\tthis._mouseDown = false;\r\n\t}\r\n\t\r\n\tpublic render(): void {\r\n\t\tconst instrument: Instrument = this._doc.song.channels[this._doc.channel].instruments[this._doc.getCurrentInstrument()];\r\n\t\t\r\n\t\tif (this._renderedFadeIn == instrument.fadeIn && this._renderedFadeOut == instrument.fadeOut) {\r\n\t\t\treturn;\r\n\t\t}\r\n\t\t\r\n\t\tconst fadeInX: number = this._fadeInToX(instrument.fadeIn);\r\n\t\tconst fadeOutX: number = this._fadeOutToX(instrument.fadeOut);\r\n\t\tthis._controlCurve.setAttribute(\"d\", `M ${fadeInX} 0 L ${fadeInX} ${this._editorHeight} M ${fadeOutX} 0 L ${fadeOutX} ${this._editorHeight}`);\r\n\t\t\r\n\t\tconst dottedLineX: number = this._fadeOutToX(Config.fadeOutNeutral);\r\n\t\tlet fadePath: string = \"\";\r\n\t\tfadePath += `M 0 ${this._editorHeight} `;\r\n\t\tfadePath += `L ${fadeInX} 0 `;\r\n\t\tif (Synth.fadeOutSettingToTicks(instrument.fadeOut) > 0) {\r\n\t\t\tfadePath += `L ${dottedLineX} 0 `;\r\n\t\t\tfadePath += `L ${fadeOutX} ${this._editorHeight} `;\r\n\t\t} else {\r\n\t\t\tfadePath += `L ${fadeOutX} 0 `;\r\n\t\t\tfadePath += `L ${dottedLineX} ${this._editorHeight} `;\r\n\t\t}\r\n\t\tfadePath += \"z\";\r\n\t\tthis._fadeCurve.setAttribute(\"d\", fadePath);\r\n\t}\r\n}\r\n","// Copyright (C) 2020 John Nesky, distributed under the MIT license.\r\n\r\nimport { HTML, SVG } from \"imperative-html/dist/esm/elements-strict\";\r\nimport { Prompt } from \"./Prompt\";\r\nimport { SongDocument } from \"./SongDocument\";\r\nimport { ColorConfig } from \"./ColorConfig\";\r\nimport { ChangeLimiterSettings } from \"./changes\";\r\nimport { SongEditor } from \"./SongEditor\";\r\nimport { prettyNumber } from \"./EditorConfig\";\r\n\r\n//namespace beepbox {\r\nconst { button, div, h2, input } = HTML;\r\n\r\nexport class LimiterCanvas {\r\n\tprivate readonly _editorWidth: number = 200; // 112\r\n\tprivate readonly _editorHeight: number = 52; // 26\r\n\tprivate readonly _fill: SVGPathElement = SVG.path({ fill: ColorConfig.uiWidgetBackground, \"pointer-events\": \"none\" });\r\n\tprivate readonly _ticks: SVGSVGElement = SVG.svg({ \"pointer-events\": \"none\" });\r\n\tprivate readonly _subticks: SVGSVGElement = SVG.svg({ \"pointer-events\": \"none\" });\r\n\tprivate readonly _boostCurve: SVGPathElement = SVG.path({ fill: \"none\", stroke: ColorConfig.textSelection, \"stroke-width\": 2, \"pointer-events\": \"none\" });\r\n\tprivate readonly _boostDot: SVGCircleElement = SVG.circle({ fill: ColorConfig.textSelection, stroke: \"none\", r: \"3\" });\r\n\tprivate readonly _midCurve: SVGPathElement = SVG.path({ fill: \"none\", stroke: ColorConfig.primaryText, \"stroke-width\": 2, \"pointer-events\": \"none\" });\r\n\tprivate readonly _limitCurve: SVGPathElement = SVG.path({ fill: \"none\", stroke: ColorConfig.linkAccent, \"stroke-width\": 2, \"pointer-events\": \"none\" });\r\n\tprivate readonly _limitDot: SVGCircleElement = SVG.circle({ fill: ColorConfig.linkAccent, stroke: \"none\", r: \"3\" });\r\n\tprivate readonly _label0: SVGTextElement = SVG.text({ x: \"-1.5%\", y: \"148.5%\", \"pointer-events\": \"none\", \"font-size\": \"7pt\", fill: \"var(--secondary-text)\" }, \"0\");\r\n\tprivate readonly _label1: SVGTextElement = SVG.text({ x: \"48.2%\", y: \"148.5%\", \"pointer-events\": \"none\", \"font-size\": \"7pt\", fill: \"var(--secondary-text)\" }, \"1\");\r\n\tprivate readonly _label2: SVGTextElement = SVG.text({ x: \"98.2%\", y: \"148.5%\", \"pointer-events\": \"none\", \"font-size\": \"7pt\", fill: \"var(--secondary-text)\" }, \"2\");\r\n\tprivate readonly _inLabel: SVGTextElement = SVG.text({ x: \"-5%\", y: \"113.5%\", \"pointer-events\": \"none\", \"font-size\": \"6pt\", fill: \"var(--secondary-text)\" }, \"In\");\r\n\tprivate readonly _outLabel: SVGTextElement = SVG.text({ x: \"-9%\", y: \"131%\", \"pointer-events\": \"none\", \"font-size\": \"6pt\", fill: \"var(--secondary-text)\" }, \"Out\");\r\n\tprivate readonly _xAxisLabel: SVGTextElement = SVG.text({ x: \"42%\", y: \"172%\", \"pointer-events\": \"none\", \"font-size\": \"7pt\", fill: \"var(--primary-text)\" }, \"Volume\");\r\n\tprivate readonly _yAxisLabel: SVGTextElement = SVG.text({ x: \"55.2%\", y: \"160%\", \"pointer-events\": \"none\", \"font-size\": \"7pt\", transform: \"rotate(-90 30,120)\", fill: \"var(--primary-text)\" }, \"Gain\");\r\n\tprivate readonly _inVolumeBg: SVGRectElement = SVG.rect({ \"pointer-events\": \"none\", width: \"100%\", height: \"6px\", x: \"0%\", y: \"105%\", fill: ColorConfig.uiWidgetBackground });\r\n\tprivate readonly _outVolumeBg: SVGRectElement = SVG.rect({ \"pointer-events\": \"none\", width: \"100%\", height: \"6px\", x: \"0%\", y: \"120%\", fill: ColorConfig.uiWidgetBackground });\r\n\tprivate readonly _inVolumeBar: SVGRectElement = SVG.rect({ \"pointer-events\": \"none\", height: \"6px\", x: \"0%\", y: \"105%\", fill: \"url('#volumeGrad')\" });\r\n\tprivate readonly _inVolumeCap: SVGRectElement = SVG.rect({ \"pointer-events\": \"none\", width: \"2px\", height: \"6px\", y: \"105%\", fill: ColorConfig.uiWidgetFocus });\r\n\tprivate readonly _outVolumeBar: SVGRectElement = SVG.rect({ \"pointer-events\": \"none\", height: \"6px\", x: \"0%\", y: \"120%\", fill: \"url('#volumeGrad')\" });\r\n\tprivate readonly _outVolumeCap: SVGRectElement = SVG.rect({ \"pointer-events\": \"none\", width: \"2px\", height: \"6px\", y: \"120%\", fill: ColorConfig.uiWidgetFocus });\r\n\tprivate readonly _stop1: SVGStopElement = SVG.stop({ \"stop-color\": \"lime\", offset: \"30%\" });\r\n\tprivate readonly _stop2: SVGStopElement = SVG.stop({ \"stop-color\": \"orange\", offset: \"45%\" });\r\n\tprivate readonly _stop3: SVGStopElement = SVG.stop({ \"stop-color\": \"red\", offset: \"50%\" });\r\n\tprivate readonly _gradient: SVGGradientElement = SVG.linearGradient({ id: \"volumeGrad\", gradientUnits: \"userSpaceOnUse\" }, this._stop1, this._stop2, this._stop3);\r\n\tprivate readonly _defs: SVGDefsElement = SVG.defs({}, this._gradient);\r\n\tprivate readonly _svg: SVGSVGElement = SVG.svg({ style: `background-color: ${ColorConfig.editorBackground}; touch-action: none; overflow: visible;`, width: \"100%\", height: \"100%\", viewBox: \"0 0 \" + this._editorWidth + \" \" + this._editorHeight, preserveAspectRatio: \"none\" },\r\n\t\tthis._defs,\r\n\t\tthis._fill,\r\n\t\tthis._ticks,\r\n\t\tthis._subticks,\r\n\t\tthis._boostCurve,\r\n\t\tthis._midCurve,\r\n\t\tthis._limitCurve,\r\n\t\tthis._boostDot,\r\n\t\tthis._limitDot,\r\n\t\tthis._label0,\r\n\t\tthis._label1,\r\n\t\tthis._label2,\r\n\t\tthis._inLabel,\r\n\t\tthis._outLabel,\r\n\t\tthis._xAxisLabel,\r\n\t\tthis._yAxisLabel,\r\n\t\tthis._inVolumeBg,\r\n\t\tthis._outVolumeBg,\r\n\t\tthis._inVolumeBar,\r\n\t\tthis._outVolumeBar,\r\n\t\tthis._inVolumeCap,\r\n\t\tthis._outVolumeCap,\r\n\t);\r\n\r\n\tpublic readonly container: HTMLElement = HTML.div({ class: \"\", style: \"height: 4em; width: 80%; padding-bottom: 1.5em;\" }, this._svg);\r\n\r\n\tprivate _limiterPrompt: LimiterPrompt;\r\n\r\n\tconstructor(lim: LimiterPrompt) {\r\n\t\tfor (let i: number = 0; i <= 2; i++) {\r\n\t\t\tthis._ticks.appendChild(SVG.rect({ fill: ColorConfig.tonic, x: (i * this._editorWidth / 2) - 1, y: 0, width: 2, height: this._editorHeight }));\r\n\t\t}\r\n\t\tfor (let i: number = 1; i <= 3; i += 2) {\r\n\t\t\tthis._subticks.appendChild(SVG.rect({ fill: ColorConfig.fifthNote, x: (i * this._editorWidth / 4) - 1, y: 0, width: 1, height: this._editorHeight }));\r\n\t\t}\r\n\r\n\t\tthis._limiterPrompt = lim;\r\n\r\n\t}\r\n\r\n\tpublic animateVolume(inVolumeCap: number, historicInCap: number, outVolumeCap: number, historicOutCap: number): void {\r\n\t\tthis._inVolumeBar.setAttribute(\"width\", \"\" + Math.min(this._editorWidth, inVolumeCap * (this._editorWidth / 2.0)));\r\n\t\tthis._inVolumeCap.setAttribute(\"x\", \"\" + Math.min(this._editorWidth, historicInCap * (this._editorWidth / 2.0)));\r\n\t\tthis._outVolumeBar.setAttribute(\"width\", \"\" + Math.min(this._editorWidth, outVolumeCap * (this._editorWidth / 2.0)));\r\n\t\tthis._outVolumeCap.setAttribute(\"x\", \"\" + Math.min(this._editorWidth, historicOutCap * (this._editorWidth / 2.0)));\r\n\t}\r\n\r\n\tpublic render(): void {\r\n\t\tconst controlPointToHeight = (point: number): number => {\r\n\t\t\treturn Math.max(0, (1 - (point / 5)) * (this._editorHeight - 1) + 1);\r\n\t\t}\r\n\r\n\t\tlet lastValue: number = 0;\r\n\t\tlet currentSubpathIdx: number = 0;\r\n\t\tlet lastSubpathIdx: number = -1;\r\n\t\tlet path: string = \"\";\r\n\t\tlet subPaths: string[] = [\"\", \"\", \"\"];\r\n\t\tfor (let i: number = 0; i < 64; i++) {\r\n\t\t\t// Calculate next value based on limiter settings\r\n\t\t\tlet limiterRatio: number = +this._limiterPrompt.limitRatioSlider.value;\r\n\t\t\tlimiterRatio = (limiterRatio < 10 ? limiterRatio / 10 : (limiterRatio - 9));\r\n\t\t\tlet compressorRatio: number = +this._limiterPrompt.compressionRatioSlider.value;\r\n\t\t\tcompressorRatio = (compressorRatio < 10 ? compressorRatio / 10 : (1 + (compressorRatio - 10) / 60));\r\n\t\t\tlet limiterThreshold: number = +this._limiterPrompt.limitThresholdSlider.value;\r\n\t\t\tlet compressorThreshold: number = +this._limiterPrompt.compressionThresholdSlider.value;\r\n\t\t\tlet useVol: number = i * 2.0 / 64.0; // Scale from 0~2\r\n\t\t\tlet nextValue: number = 1 / 1.05;\r\n\t\t\tif (useVol >= limiterThreshold) {\r\n\t\t\t\t// Limiter falloff\r\n\t\t\t\tnextValue = 1 / (1.05 * (useVol + 1 - limiterThreshold) * limiterRatio + (1 - limiterRatio));\r\n\t\t\t}\r\n\t\t\telse if (useVol < compressorThreshold) {\r\n\t\t\t\t// Compressor boost\r\n\t\t\t\tnextValue = 1 / (((useVol + 1 - compressorThreshold) * 0.8 + 0.25) * compressorRatio + 1.05 * (1 - compressorRatio));\r\n\t\t\t}\r\n\r\n\t\t\t// first point in entire path\r\n\t\t\tif (i == 0) {\r\n\t\t\t\tpath += \"M 0 \" + prettyNumber(controlPointToHeight(nextValue)) + \" \";\r\n\t\t\t}\r\n\r\n\t\t\t// first point in a specific subpath\r\n\t\t\tif (currentSubpathIdx > lastSubpathIdx) {\r\n\t\t\t\tif (lastSubpathIdx >= 0) {\r\n\t\t\t\t\tsubPaths[lastSubpathIdx] += \"L \" + prettyNumber(i * this._editorWidth / 64) + \" \" + prettyNumber(controlPointToHeight(nextValue)) + \" \";\r\n\t\t\t\t}\r\n\t\t\t\tsubPaths[currentSubpathIdx] += \"M \" + prettyNumber(i * this._editorWidth / 64) + \" \" + prettyNumber(controlPointToHeight(nextValue)) + \" \";\r\n\r\n\t\t\t\tif (currentSubpathIdx == 1 || (lastSubpathIdx == 0 && currentSubpathIdx == 2)) {\r\n\t\t\t\t\tthis._boostDot.setAttribute(\"cx\", prettyNumber(i * this._editorWidth / 64));\r\n\t\t\t\t\tthis._boostDot.setAttribute(\"cy\", prettyNumber(controlPointToHeight(nextValue)));\r\n\t\t\t\t}\r\n\t\t\t\tif (currentSubpathIdx == 2) {\r\n\t\t\t\t\tthis._limitDot.setAttribute(\"cx\", prettyNumber(i * this._editorWidth / 64));\r\n\t\t\t\t\tthis._limitDot.setAttribute(\"cy\", prettyNumber(controlPointToHeight(nextValue)));\r\n\t\t\t\t}\r\n\r\n\t\t\t\tlastSubpathIdx = currentSubpathIdx;\r\n\t\t\t}\r\n\r\n\t\t\tif (lastValue != 0 || nextValue != 0) {\r\n\t\t\t\tpath += \"L \";\r\n\t\t\t\tsubPaths[currentSubpathIdx] += \"L \";\r\n\t\t\t} else {\r\n\t\t\t\tpath += \"M \";\r\n\t\t\t\tsubPaths[currentSubpathIdx] += \"M \";\r\n\t\t\t}\r\n\t\t\tpath += prettyNumber(i * this._editorWidth / 64) + \" \" + prettyNumber(controlPointToHeight(nextValue)) + \" \";\r\n\t\t\tsubPaths[currentSubpathIdx] += prettyNumber(i * this._editorWidth / 64) + \" \" + prettyNumber(controlPointToHeight(nextValue)) + \" \";\r\n\t\t\tlastValue = nextValue;\r\n\r\n\t\t\t// Move to next subpath\r\n\t\t\tif (currentSubpathIdx == 0 && (i >= compressorThreshold * 32 - 2)) {\r\n\t\t\t\tcurrentSubpathIdx++;\r\n\t\t\t}\r\n\t\t\tif (currentSubpathIdx == 1 && (i >= limiterThreshold * 32 - 2)) {\r\n\t\t\t\tcurrentSubpathIdx++;\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tconst lastHeight: number = controlPointToHeight(lastValue);\r\n\t\tif (lastValue > 0) {\r\n\t\t\tpath += \"L \" + (this._editorWidth - 1) + \" \" + prettyNumber(lastHeight) + \" \";\r\n\t\t\tsubPaths[currentSubpathIdx] += \"L \" + (this._editorWidth - 1) + \" \" + prettyNumber(lastHeight) + \" \";\r\n\t\t}\r\n\r\n\t\tthis._boostCurve.setAttribute(\"d\", subPaths[0]);\r\n\t\tthis._midCurve.setAttribute(\"d\", subPaths[1]);\r\n\t\tthis._limitCurve.setAttribute(\"d\", subPaths[2]);\r\n\t\tthis._fill.setAttribute(\"d\", path + \"L \" + this._editorWidth + \" \" + prettyNumber(lastHeight) + \" L \" + this._editorWidth + \" \" + prettyNumber(this._editorHeight) + \" L 0 \" + prettyNumber(this._editorHeight) + \" z \");\r\n\t}\r\n}\r\n\r\nexport class LimiterPrompt implements Prompt {\r\n\r\n\tprivate limiterCanvas: LimiterCanvas = new LimiterCanvas(this);\r\n\r\n\tpublic readonly _playButton: HTMLButtonElement = button({ style: \"width: 55%;\", type: \"button\" });\r\n\r\n\tpublic readonly limitDecaySlider: HTMLInputElement = input({ title: \"limit decay\", style: `width: 5em; flex-grow: 1; margin: 0;`, type: \"range\", min: \"1\", max: \"30\", value: \"4\", step: \"1\" });\r\n\tpublic readonly limitRiseSlider: HTMLInputElement = input({ title: \"limit rise\", style: `width: 5em; flex-grow: 1; margin: 0;`, type: \"range\", min: \"2000\", max: \"10000\", value: \"4000\", step: \"250\" });\r\n\tpublic readonly compressionThresholdSlider: HTMLInputElement = input({ title: \"compressor threshold\", style: `width: 100%; flex-grow: 1; margin: 0;`, type: \"range\", min: \"0\", max: \"1.1\", value: \"1\", step: \"0.05\" });\r\n\tpublic readonly limitThresholdSlider: HTMLInputElement = input({ title: \"limiter threshold\", style: `width: 100%; flex-grow: 1; margin: 0;`, type: \"range\", min: \"0\", max: \"2\", value: \"1\", step: \"0.05\" });\r\n\tpublic readonly compressionRatioSlider: HTMLInputElement = input({ title: \"compressor ratio\", style: `width: 100%; flex-grow: 1; margin: 0;`, type: \"range\", min: \"0\", max: \"20\", value: \"10\", step: \"1\" });\r\n\tpublic readonly limitRatioSlider: HTMLInputElement = input({ title: \"limiter ratio\", style: `width: 100%; flex-grow: 1; margin: 0;`, type: \"range\", min: \"0\", max: \"20\", value: \"10\", step: \"1\" });\r\n\tpublic readonly masterGainSlider: HTMLInputElement = input({ title: \"master gain\", style: `width: 5em; flex-grow: 1; margin: 0;`, type: \"range\", min: \"0\", max: \"5\", value: \"1\", step: \"0.02\" });\r\n\r\n\tprivate startingLimitDecay: number;\r\n\tprivate startingLimitRise: number;\r\n\tprivate startingCompressionThreshold: number;\r\n\tprivate startingLimitThreshold: number;\r\n\tprivate startingCompressionRatio: number;\r\n\tprivate startingLimitRatio: number;\r\n\tprivate startingMasterGain: number;\r\n\r\n\tprivate inVolumeHistoricTimer: number = 0.0;\r\n\tprivate inVolumeHistoricCap: number = 0.0;\r\n\tprivate outVolumeHistoricTimer: number = 0.0;\r\n\tprivate outVolumeHistoricCap: number = 0.0;\r\n\r\n\tprivate readonly _cancelButton: HTMLButtonElement = button({ class: \"cancelButton\" });\r\n\tprivate readonly _okayButton: HTMLButtonElement = button({ class: \"okayButton\", style: \"width:45%;\" }, \"Okay\");\r\n\tprivate readonly _resetButton: HTMLButtonElement = button({ style: \"width:45%;\" }, \"Reset\");\r\n\r\n\tpublic readonly container: HTMLDivElement = div({ class: \"prompt noSelection\", style: \"width: 250px;\" },\r\n\t\th2(\"Limiter Options\"),\r\n\t\tdiv({ style: \"display: flex; width: 55%; align-self: center; flex-direction: row; align-items: center; justify-content: center;\" },\r\n\t\t\tthis._playButton,\r\n\t\t),\r\n\t\tdiv({ style: \"display: flex; flex-direction: row; align-items: center; justify-content: center;\" },\r\n\t\t\tthis.limiterCanvas.container,\r\n\t\t),\r\n\t\tdiv({ style: \"display: flex; flex-direction: row; align-items: center; height: 2em; margin-top: 1.5em; justify-content: flex-end;\" },\r\n\t\t\tdiv({ style: `text-align: right; width: 25%; margin-right: 4.5%; color: ${ColorConfig.primaryText};` },\r\n\t\t\t\t\"\"\r\n\t\t\t),\r\n\t\t\tdiv({ style: `text-align: center; width: 33%; margin-right: 4.5%; color: ${ColorConfig.textSelection};` },\r\n\t\t\t\t\"Boost\"\r\n\t\t\t),\r\n\t\t\tdiv({ style: `text-align: center; width: 33%; margin-right: 0%; color: ${ColorConfig.linkAccent};` },\r\n\t\t\t\t\"Cutoff\"\r\n\t\t\t),\r\n\t\t),\r\n\t\tdiv({ style: \"display: flex; flex-direction: row; align-items: center; height: 2em; margin-top: 0.5em; justify-content: flex-end;\" },\r\n\t\t\tdiv({ style: `text-align: right; width: 25%; margin-right: 4.5%; color: ${ColorConfig.primaryText};` },\r\n\t\t\t\t\"Threshold:\"\r\n\t\t\t),\r\n\t\t\tdiv({ style: `width: 33%; margin-right: 4.5%;` },\r\n\t\t\t\tthis.compressionThresholdSlider,\r\n\t\t\t),\r\n\t\t\tdiv({ style: `width: 33%; margin-right: 0%;` },\r\n\t\t\t\tthis.limitThresholdSlider,\r\n\t\t\t),\r\n\r\n\t\t),\r\n\t\tdiv({ style: \"display: flex; flex-direction: row; align-items: center; height: 2em; justify-content: flex-end;\" },\r\n\t\t\tdiv({ style: `text-align: right; width: 25%; margin-right: 4.5%; color: ${ColorConfig.primaryText};` },\r\n\t\t\t\t\"Ratio:\"\r\n\t\t\t),\r\n\t\t\tdiv({ style: `width: 33%; margin-right: 4.5%;` },\r\n\t\t\t\tthis.compressionRatioSlider,\r\n\t\t\t),\r\n\t\t\tdiv({ style: `width: 33%; margin-right: 0%;` },\r\n\t\t\t\tthis.limitRatioSlider,\r\n\t\t\t),\r\n\t\t),\r\n\t\tdiv({ style: \"display: flex; flex-direction: row; align-items: center; height: 2em; justify-content: flex-end;\" },\r\n\t\t\tdiv({ style: `text-align: right; width: 8.5em; margin-right: 1em; color: ${ColorConfig.primaryText};` },\r\n\t\t\t\t\"Limit Decay:\"\r\n\t\t\t),\r\n\t\t\tthis.limitDecaySlider,\r\n\t\t),\r\n\t\tdiv({ style: \"display: flex; flex-direction: row; align-items: center; height: 2em; justify-content: flex-end;\" },\r\n\t\t\tdiv({ style: `text-align: right; width: 8.5em; margin-right: 1em; color: ${ColorConfig.primaryText};` },\r\n\t\t\t\t\"Limit Rise:\"\r\n\t\t\t),\r\n\t\t\tthis.limitRiseSlider,\r\n\t\t),\r\n\t\tdiv({ style: \"display: flex; flex-direction: row; align-items: center; height: 2em; justify-content: flex-end;\" },\r\n\t\t\tdiv({ style: `text-align: right; width: 8.5em; margin-right: 1em; color: ${ColorConfig.primaryText};` },\r\n\t\t\t\t\"Master Gain:\"\r\n\t\t\t),\r\n\t\t\tthis.masterGainSlider,\r\n\t\t),\r\n\t\tdiv({ style: \"display: flex; flex-direction: row-reverse; justify-content: space-between;\" },\r\n\t\t\tthis._okayButton,\r\n\t\t\tthis._resetButton,\r\n\t\t),\r\n\t\tthis._cancelButton,\r\n\t);\r\n\r\n\tconstructor(private _doc: SongDocument, private _songEditor: SongEditor) {\r\n\r\n\t\tthis._okayButton.addEventListener(\"click\", this._saveChanges);\r\n\t\tthis._resetButton.addEventListener(\"click\", this._resetDefaults);\r\n\t\tthis._cancelButton.addEventListener(\"click\", this._close);\r\n\t\tthis.container.addEventListener(\"keydown\", this.whenKeyPressed);\r\n\r\n\t\tthis.limitRatioSlider.value = \"\" + (this._doc.song.limitRatio < 1 ? this._doc.song.limitRatio * 10 : 9 + this._doc.song.limitRatio);\r\n\t\tthis.compressionRatioSlider.value = \"\" + (this._doc.song.compressionRatio < 1 ? this._doc.song.compressionRatio * 10 : 10 + (this._doc.song.compressionRatio - 1) * 60);\r\n\t\tthis.limitThresholdSlider.value = \"\" + this._doc.song.limitThreshold;\r\n\t\tthis.compressionThresholdSlider.value = \"\" + this._doc.song.compressionThreshold;\r\n\t\tthis.limitDecaySlider.value = \"\" + this._doc.song.limitDecay;\r\n\t\tthis.limitRiseSlider.value = \"\" + this._doc.song.limitRise;\r\n\t\tthis.masterGainSlider.value = \"\" + this._doc.song.masterGain;\r\n\r\n\t\tthis.startingLimitRatio = +this.limitRatioSlider.value;\r\n\t\tthis.startingCompressionRatio = +this.compressionRatioSlider.value;\r\n\t\tthis.startingLimitThreshold = +this.limitThresholdSlider.value;\r\n\t\tthis.startingCompressionThreshold = +this.compressionThresholdSlider.value;\r\n\t\tthis.startingLimitDecay = +this.limitDecaySlider.value;\r\n\t\tthis.startingLimitRise = +this.limitRiseSlider.value;\r\n\t\tthis.startingMasterGain = +this.masterGainSlider.value;\r\n\r\n\t\tthis.limitDecaySlider.addEventListener(\"input\", this._whenInput);\r\n\t\tthis.limitRiseSlider.addEventListener(\"input\", this._whenInput);\r\n\t\tthis.limitRatioSlider.addEventListener(\"input\", this._whenInput);\r\n\t\tthis.limitThresholdSlider.addEventListener(\"input\", this._whenInputFavorLimitThreshold);\r\n\t\tthis.compressionRatioSlider.addEventListener(\"input\", this._whenInput);\r\n\t\tthis.compressionThresholdSlider.addEventListener(\"input\", this._whenInput);\r\n\t\tthis.masterGainSlider.addEventListener(\"input\", this._whenInput);\r\n\r\n\t\tthis._playButton.addEventListener(\"click\", this._togglePlay);\r\n\r\n\t\twindow.requestAnimationFrame(this._volumeUpdate);\r\n\r\n\t\tthis.updatePlayButton();\r\n\r\n\t\tsetTimeout(() => this._playButton.focus());\r\n\r\n\t\tthis.limiterCanvas.render();\r\n\t}\r\n\r\n\tprivate _volumeUpdate = (): void => {\r\n\t\tthis.inVolumeHistoricTimer--;\r\n\t\tif (this.inVolumeHistoricTimer <= 0) {\r\n\t\t\tthis.inVolumeHistoricCap -= 0.03;\r\n\t\t}\r\n\t\tif (this._doc.song.inVolumeCap > this.inVolumeHistoricCap) {\r\n\t\t\tthis.inVolumeHistoricCap = this._doc.song.inVolumeCap;\r\n\t\t\tthis.inVolumeHistoricTimer = 50;\r\n\t\t}\r\n\r\n\t\tthis.outVolumeHistoricTimer--;\r\n\t\tif (this.outVolumeHistoricTimer <= 0) {\r\n\t\t\tthis.outVolumeHistoricCap -= 0.03;\r\n\t\t}\r\n\t\tif (this._doc.song.outVolumeCap > this.outVolumeHistoricCap) {\r\n\t\t\tthis.outVolumeHistoricCap = this._doc.song.outVolumeCap;\r\n\t\t\tthis.outVolumeHistoricTimer = 50;\r\n\t\t}\r\n\r\n\t\tthis.limiterCanvas.animateVolume(this._doc.song.inVolumeCap, this.inVolumeHistoricCap, this._doc.song.outVolumeCap, this.outVolumeHistoricCap);\r\n\t\t//console.log(this._doc.song.volumeCap);\r\n\t\twindow.requestAnimationFrame(this._volumeUpdate);\r\n\t}\r\n\r\n\tprivate _togglePlay = (): void => {\r\n\t\tthis._songEditor.togglePlay();\r\n\t\tthis.updatePlayButton();\r\n\t}\r\n\r\n\tpublic updatePlayButton(): void {\r\n\t\tif (this._doc.synth.playing) {\r\n\t\t\tthis._playButton.classList.remove(\"playButton\");\r\n\t\t\tthis._playButton.classList.add(\"pauseButton\");\r\n\t\t\tthis._playButton.title = \"Pause (Space)\";\r\n\t\t\tthis._playButton.innerText = \"Pause\";\r\n\t\t} else {\r\n\t\t\tthis._playButton.classList.remove(\"pauseButton\");\r\n\t\t\tthis._playButton.classList.add(\"playButton\");\r\n\t\t\tthis._playButton.title = \"Play (Space)\";\r\n\t\t\tthis._playButton.innerText = \"Play\";\r\n\t\t}\r\n\t}\r\n\r\n\tprivate _whenInput = (): void => {\r\n\t\tif (+this.limitThresholdSlider.value < +this.compressionThresholdSlider.value) {\r\n\t\t\tthis.limitThresholdSlider.removeEventListener(\"input\", this._whenInputFavorLimitThreshold);\r\n\t\t\tthis.limitThresholdSlider.value = this.compressionThresholdSlider.value;\r\n\t\t\tthis.limitThresholdSlider.addEventListener(\"input\", this._whenInputFavorLimitThreshold);\r\n\t\t}\r\n\t\tthis.limiterCanvas.render();\r\n\t\tthis._updateLimiter();\r\n\t}\r\n\r\n\t// Same as above, but for conflicts between limiter threshold and compressor threshold, favor the limiter\r\n\tprivate _whenInputFavorLimitThreshold = (): void => {\r\n\t\tif (+this.limitThresholdSlider.value < +this.compressionThresholdSlider.value) {\r\n\t\t\tthis.compressionThresholdSlider.removeEventListener(\"input\", this._whenInput);\r\n\t\t\tthis.compressionThresholdSlider.value = this.limitThresholdSlider.value;\r\n\t\t\tthis.compressionThresholdSlider.addEventListener(\"input\", this._whenInput);\r\n\t\t}\r\n\t\tthis.limiterCanvas.render();\r\n\t\tthis._updateLimiter();\r\n\t}\r\n\r\n\tprivate _close = (): void => {\r\n\t\t// Reset all sliders to starting values\r\n\t\tthis.limitRatioSlider.value = \"\" + this.startingLimitRatio;\r\n\t\tthis.compressionRatioSlider.value = \"\" + this.startingCompressionRatio;\r\n\t\tthis.limitThresholdSlider.value = \"\" + this.startingLimitThreshold;\r\n\t\tthis.compressionThresholdSlider.value = \"\" + this.startingCompressionThreshold;\r\n\t\tthis.limitDecaySlider.value = \"\" + this.startingLimitDecay;\r\n\t\tthis.limitRiseSlider.value = \"\" + this.startingLimitRise;\r\n\t\tthis.masterGainSlider.value = \"\" + this.startingMasterGain;\r\n\r\n\t\tthis._updateLimiter();\r\n\t\tthis._doc.prompt = null;\r\n\t}\r\n\r\n\tpublic cleanUp = (): void => {\r\n\t\tthis._okayButton.removeEventListener(\"click\", this._saveChanges);\r\n\t\tthis._resetButton.removeEventListener(\"click\", this._resetDefaults);\r\n\t\tthis._cancelButton.removeEventListener(\"click\", this._close);\r\n\t\tthis.container.removeEventListener(\"keydown\", this.whenKeyPressed);\r\n\t\tthis.limitDecaySlider.removeEventListener(\"input\", this._whenInput);\r\n\t\tthis.limitRiseSlider.removeEventListener(\"input\", this._whenInput);\r\n\t\tthis.limitThresholdSlider.removeEventListener(\"input\", this._whenInputFavorLimitThreshold);\r\n\t\tthis.limitRatioSlider.removeEventListener(\"input\", this._whenInput);\r\n\t\tthis.compressionRatioSlider.removeEventListener(\"input\", this._whenInput);\r\n\t\tthis.compressionThresholdSlider.removeEventListener(\"input\", this._whenInput);\r\n\t\tthis.masterGainSlider.removeEventListener(\"input\", this._whenInput);\r\n\r\n\t\tthis._playButton.removeEventListener(\"click\", this._togglePlay);\r\n\t}\r\n\r\n\tpublic whenKeyPressed = (event: KeyboardEvent): void => {\r\n\t\tif ((<Element>event.target).tagName != \"BUTTON\" && event.keyCode == 13) { // Enter key\r\n\t\t\tthis._saveChanges();\r\n\t\t}\r\n\t\tif (event.keyCode == 32) {\r\n\t\t\tthis._togglePlay();\r\n\t\t\tevent.preventDefault();\r\n\t\t}\r\n\t}\r\n\r\n\tprivate _resetDefaults = (): void => {\r\n\t\t// Set song limiter settings to their default\r\n\t\tif (this.limitRatioSlider.value != \"10\" || this.limitRiseSlider.value != \"4000\" || this.limitDecaySlider.value != \"4\" || this.limitThresholdSlider.value != \"1\" || this.compressionRatioSlider.value != \"10\" || this.compressionThresholdSlider.value != \"1\" || this.masterGainSlider.value != \"1\") {\r\n\r\n\t\t\tthis.limitRatioSlider.value = \"10\";\r\n\t\t\tthis.limitRiseSlider.value = \"4000\";\r\n\t\t\tthis.limitDecaySlider.value = \"4\";\r\n\t\t\tthis.limitThresholdSlider.value = \"1\";\r\n\t\t\tthis.compressionRatioSlider.value = \"10\";\r\n\t\t\tthis.compressionThresholdSlider.value = \"1\";\r\n\t\t\tthis.masterGainSlider.value = \"1\";\r\n\r\n\t\t\tthis._whenInput();\r\n\t\t}\r\n\t}\r\n\r\n\tprivate _updateLimiter = (): void => {\r\n\t\t// Save slider values to song\r\n\t\tthis._doc.record(new ChangeLimiterSettings(this._doc,\r\n\t\t\t(+this.limitRatioSlider.value < 10 ? +this.limitRatioSlider.value / 10 : (+this.limitRatioSlider.value - 9)),\r\n\t\t\t(+this.compressionRatioSlider.value < 10 ? +this.compressionRatioSlider.value / 10 : (1 + (+this.compressionRatioSlider.value - 10) / 60)),\r\n\t\t\t+this.limitThresholdSlider.value,\r\n\t\t\t+this.compressionThresholdSlider.value,\r\n\t\t\t+this.limitRiseSlider.value,\r\n\t\t\t+this.limitDecaySlider.value,\r\n\t\t\t+this.masterGainSlider.value,\r\n\t\t), true);\r\n\t}\r\n\r\n\tprivate _saveChanges = (): void => {\r\n\t\tthis._updateLimiter();\r\n\t\tthis._doc.prompt = null;\r\n\r\n\t}\r\n}\r\n//}\r\n","// Copyright (C) 2020 John Nesky, distributed under the MIT license.\r\n\r\nimport { Config } from \"../synth/SynthConfig\";\r\nimport { HTML } from \"imperative-html/dist/esm/elements-strict\";\r\nimport { SongDocument } from \"./SongDocument\";\r\nimport { Prompt } from \"./Prompt\";\r\nimport { ChangeCustomScale } from \"./changes\";\r\n\r\n\r\n//namespace beepbox {\r\nconst { button, div, h2, input } = HTML;\r\n\r\nexport class CustomScalePrompt implements Prompt {\r\n    private readonly _flags: boolean[] = [];\r\n    private readonly _scaleFlags: HTMLInputElement[] = [];\r\n    private readonly _scaleRows: HTMLDivElement[] = [];\r\n    private readonly _cancelButton: HTMLButtonElement = button({ class: \"cancelButton\" });\r\n    private readonly _okayButton: HTMLButtonElement = button({ class: \"okayButton\", style: \"width:45%;\" }, \"Okay\");\r\n\r\n    public readonly container: HTMLDivElement;\r\n\r\n    constructor(private _doc: SongDocument) {\r\n        this._flags = _doc.song.scaleCustom.slice();\r\n        let scaleHolder: HTMLDivElement = div({});\r\n        for (var i = 1; i < Config.pitchesPerOctave; i++) {\r\n            this._scaleFlags[i] = input({ type: \"checkbox\", style: \"width: 1em; padding: 0; margin-right: 4em;\", \"checked\": this._flags[i], \"value\": i });\r\n            this._scaleRows[i] = div({ style: \"text-align: right; height: 2em;\" },\r\n                \"note \" + i + \":\",\r\n                this._scaleFlags[i]\r\n            );\r\n            scaleHolder.appendChild(this._scaleRows[i])\r\n        }\r\n\r\n        this._okayButton.addEventListener(\"click\", this._saveChanges);\r\n        this._cancelButton.addEventListener(\"click\", this._close);\r\n\r\n        this.container = div({ class: \"prompt noSelection\", style: \"width: 250px;\" },\r\n            h2(\"Custom Scale\"),\r\n            div({ style: \"display: flex; flex-direction: row; align-items: center; justify-content: flex-end;\" },\r\n                scaleHolder,\r\n            ),\r\n            div({ style: \"display: flex; flex-direction: row-reverse; justify-content: space-between;\" },\r\n                this._okayButton,\r\n            ),\r\n            this._cancelButton,\r\n        )\r\n        this.container.addEventListener(\"keydown\", this.whenKeyPressed);\r\n    }\r\n\r\n    private _close = (): void => {\r\n        this._doc.undo();\r\n    }\r\n\r\n    public cleanUp = (): void => {\r\n        this._okayButton.removeEventListener(\"click\", this._saveChanges);\r\n        this._cancelButton.removeEventListener(\"click\", this._close);\r\n        this.container.removeEventListener(\"keydown\", this.whenKeyPressed);\r\n    }\r\n\r\n    public whenKeyPressed = (event: KeyboardEvent): void => {\r\n        if ((<Element>event.target).tagName != \"BUTTON\" && event.keyCode == 13) { // Enter key\r\n            this._saveChanges();\r\n        }\r\n    }\r\n    \r\n\r\n    private _saveChanges = (): void => {\r\n        for (var i = 1; i < this._scaleFlags.length; i++) {\r\n            this._flags[i] = this._scaleFlags[i].checked;\r\n        }\r\n        this._doc.prompt = null;\r\n        this._doc.record(new ChangeCustomScale(this._doc, this._flags));\r\n    }\r\n}\r\n//}\r\n","// Copyright (c) 2012-2022 John Nesky and contributing authors, distributed under the MIT license, see accompanying the LICENSE.md file.\r\n\r\nimport { SongDocument } from \"./SongDocument\";\r\nimport { HTML, SVG } from \"imperative-html/dist/esm/elements-strict\";\r\nimport { ChangeLoop, ChangeChannelBar } from \"./changes\";\r\nimport { ColorConfig } from \"./ColorConfig\";\r\n\r\ninterface Cursor {\r\n\tstartBar: number;\r\n\tmode: number;\r\n}\r\n\r\ninterface Endpoints {\r\n\tstart: number;\r\n\tlength: number;\r\n}\r\n\r\nexport class LoopEditor {\r\n\tprivate readonly _editorHeight: number = 20;\r\n\t\tprivate readonly _startMode:   number = 0;\r\n\t\tprivate readonly _endMode:     number = 1;\r\n\t\tprivate readonly _bothMode:    number = 2;\r\n\t\t\r\n\t\tprivate readonly _loop: SVGPathElement = SVG.path({fill: \"none\", stroke: ColorConfig.loopAccent, \"stroke-width\": 4});\r\n\t\tprivate readonly _highlight: SVGPathElement = SVG.path({fill: ColorConfig.hoverPreview, \"pointer-events\": \"none\"});\r\n\t\t\r\n\tprivate readonly _svg: SVGSVGElement = SVG.svg({style: `touch-action: pan-y; position: absolute;`, height: this._editorHeight},\r\n\t\tthis._loop,\r\n\t\tthis._highlight,\r\n\t);\r\n\t\t\r\n\tpublic readonly container: HTMLElement = HTML.div({class: \"loopEditor\"}, this._svg);\r\n\t\t\r\n\tprivate _barWidth: number = 32;\r\n\tprivate _change: ChangeLoop | null = null;\r\n\t\tprivate _cursor: Cursor = {startBar: -1, mode: -1};\r\n\tprivate _mouseX: number = 0;\r\n\t//private _mouseY: number = 0;\r\n\tprivate _clientStartX: number = 0;\r\n\tprivate _clientStartY: number = 0;\r\n\tprivate _startedScrolling: boolean = false;\r\n\tprivate _draggingHorizontally: boolean = false;\r\n\tprivate _mouseDown: boolean = false;\r\n\tprivate _mouseOver: boolean = false;\r\n\tprivate _renderedLoopStart: number = -1;\r\n\tprivate _renderedLoopStop: number = -1;\r\n\tprivate _renderedBarCount: number = 0;\r\n\tprivate _renderedBarWidth: number = -1;\r\n\t\t\r\n\tconstructor(private _doc: SongDocument) {\r\n\t\tthis._updateCursorStatus();\r\n\t\tthis._render();\r\n\t\tthis._doc.notifier.watch(this._documentChanged);\r\n\t\t\t\r\n\t\tthis.container.addEventListener(\"mousedown\", this._whenMousePressed);\r\n\t\tdocument.addEventListener(\"mousemove\", this._whenMouseMoved);\r\n\t\tdocument.addEventListener(\"mouseup\", this._whenCursorReleased);\r\n\t\tthis.container.addEventListener(\"mouseover\", this._whenMouseOver);\r\n\t\tthis.container.addEventListener(\"mouseout\", this._whenMouseOut);\r\n\t\t\t\r\n\t\tthis.container.addEventListener(\"touchstart\", this._whenTouchPressed);\r\n\t\tthis.container.addEventListener(\"touchmove\", this._whenTouchMoved);\r\n\t\tthis.container.addEventListener(\"touchend\", this._whenTouchReleased);\r\n\t\tthis.container.addEventListener(\"touchcancel\", this._whenTouchReleased);\r\n\t}\r\n\t\t\r\n\tprivate _updateCursorStatus(): void {\r\n\t\tconst bar: number = this._mouseX / this._barWidth;\r\n\t\tthis._cursor.startBar = bar;\r\n\t\t\t\r\n\t\tif (bar > this._doc.song.loopStart - 0.25 && bar < this._doc.song.loopStart + this._doc.song.loopLength + 0.25) {\r\n\t\t\tif (bar - this._doc.song.loopStart < this._doc.song.loopLength * 0.5) {\r\n\t\t\t\tthis._cursor.mode = this._startMode;\r\n\t\t\t} else {\r\n\t\t\t\tthis._cursor.mode = this._endMode;\r\n\t\t\t}\r\n\t\t} else {\r\n\t\t\tthis._cursor.mode = this._bothMode;\r\n\t\t}\r\n\t}\r\n\t\t\r\n\tprivate _findEndPoints(middle: number): Endpoints {\r\n\t\tlet start: number = Math.round(middle - this._doc.song.loopLength / 2);\r\n\t\tlet end: number = start + this._doc.song.loopLength;\r\n\t\tif (start < 0) {\r\n\t\t\tend -= start;\r\n\t\t\tstart = 0;\r\n\t\t}\r\n\t\tif (end > this._doc.song.barCount) {\r\n\t\t\tstart -= end - this._doc.song.barCount;\r\n\t\t\tend = this._doc.song.barCount;\r\n\t\t}\r\n\t\t\treturn {start: start, length: end - start};\r\n\t}\r\n\t\t\r\n\tprivate _whenMouseOver = (event: MouseEvent): void => {\r\n\t\tif (this._mouseOver) return;\r\n\t\tthis._mouseOver = true;\r\n\t\tthis._updatePreview();\r\n\t}\r\n\t\t\r\n\tprivate _whenMouseOut = (event: MouseEvent): void => {\r\n\t\tif (!this._mouseOver) return;\r\n\t\tthis._mouseOver = false;\r\n\t\tthis._updatePreview();\r\n\t}\r\n\t\t\r\n\tprivate _whenMousePressed = (event: MouseEvent): void => {\r\n\t\tevent.preventDefault();\r\n\t\tthis._mouseDown = true;\r\n\t\tconst boundingRect: ClientRect = this._svg.getBoundingClientRect();\r\n\t\tthis._mouseX = (event.clientX || event.pageX) - boundingRect.left;\r\n\t\t//this._mouseY = (event.clientY || event.pageY) - boundingRect.top;\r\n\t\tthis._updateCursorStatus();\r\n\t\tthis._updatePreview();\r\n\t\tthis._whenMouseMoved(event);\r\n\t}\r\n\t\t\r\n\tprivate _whenTouchPressed = (event: TouchEvent): void => {\r\n\t\t//event.preventDefault();\r\n\t\tthis._mouseDown = true;\r\n\t\tconst boundingRect: ClientRect = this._svg.getBoundingClientRect();\r\n\t\tthis._mouseX = event.touches[0].clientX - boundingRect.left;\r\n\t\t//this._mouseY = event.touches[0].clientY - boundingRect.top;\r\n\t\tthis._updateCursorStatus();\r\n\t\tthis._updatePreview();\r\n\t\t//this._whenTouchMoved(event);\r\n\t\tthis._clientStartX = event.touches[0].clientX;\r\n\t\tthis._clientStartY = event.touches[0].clientY;\r\n\t\tthis._draggingHorizontally = false;\r\n\t\tthis._startedScrolling = false;\r\n\t}\r\n\t\t\r\n\tprivate _whenMouseMoved = (event: MouseEvent): void => {\r\n\t\tconst boundingRect: ClientRect = this._svg.getBoundingClientRect();\r\n\t\tthis._mouseX = (event.clientX || event.pageX) - boundingRect.left;\r\n\t\t//this._mouseY = (event.clientY || event.pageY) - boundingRect.top;\r\n\t\tthis._whenCursorMoved();\r\n\t}\r\n\t\t\r\n\tprivate _whenTouchMoved = (event: TouchEvent): void => {\r\n\t\tif (!this._mouseDown) return;\r\n\t\tconst boundingRect: ClientRect = this._svg.getBoundingClientRect();\r\n\t\tthis._mouseX = event.touches[0].clientX - boundingRect.left;\r\n\t\t//this._mouseY = event.touches[0].clientY - boundingRect.top;\r\n\t\t\t\r\n\t\tif (!this._draggingHorizontally && !this._startedScrolling) {\r\n\t\t\tif (Math.abs(event.touches[0].clientY - this._clientStartY) > 10) {\r\n\t\t\t\tthis._startedScrolling = true;\r\n\t\t\t} else if (Math.abs(event.touches[0].clientX - this._clientStartX) > 10) {\r\n\t\t\t\tthis._draggingHorizontally = true;\r\n\t\t\t}\r\n\t\t}\r\n\t\t\t\r\n\t\tif (this._draggingHorizontally) {\r\n\t\t\tthis._whenCursorMoved();\r\n\t\t\tevent.preventDefault();\r\n\t\t}\r\n\t}\r\n\t\t\r\n\tprivate _whenCursorMoved(): void {\r\n\t\tif (this._mouseDown) {\r\n\t\t\tlet oldStart: number = this._doc.song.loopStart;\r\n\t\t\tlet oldEnd: number = this._doc.song.loopStart + this._doc.song.loopLength;\r\n\t\t\tif (this._change != null && this._doc.lastChangeWas(this._change)) {\r\n\t\t\t\toldStart = this._change.oldStart;\r\n\t\t\t\toldEnd = oldStart + this._change.oldLength;\r\n\t\t\t}\r\n\t\t\t\t\r\n\t\t\tconst bar: number = this._mouseX / this._barWidth;\r\n\t\t\tlet start: number;\r\n\t\t\tlet end: number;\r\n\t\t\tlet temp: number;\r\n\t\t\tif (this._cursor.mode == this._startMode) {\r\n\t\t\t\tstart = oldStart + Math.round(bar - this._cursor.startBar);\r\n\t\t\t\tend = oldEnd;\r\n\t\t\t\tif (start < 0) start = 0;\r\n\t\t\t\tif (start >= this._doc.song.barCount) start = this._doc.song.barCount;\r\n\t\t\t\tif (start == end) {\r\n\t\t\t\t\tstart = end - 1;\r\n\t\t\t\t} else if (start > end) {\r\n\t\t\t\t\ttemp = start;\r\n\t\t\t\t\tstart = end;\r\n\t\t\t\t\tend = temp;\r\n\t\t\t\t}\r\n\t\t\t\tthis._change = new ChangeLoop(this._doc, oldStart, oldEnd - oldStart, start, end - start);\r\n\t\t\t} else if (this._cursor.mode == this._endMode) {\r\n\t\t\t\tstart = oldStart;\r\n\t\t\t\tend = oldEnd + Math.round(bar - this._cursor.startBar);\r\n\t\t\t\tif (end < 0) end = 0;\r\n\t\t\t\tif (end >= this._doc.song.barCount) end = this._doc.song.barCount;\r\n\t\t\t\tif (end == start) {\r\n\t\t\t\t\tend = start + 1;\r\n\t\t\t\t} else if (end < start) {\r\n\t\t\t\t\ttemp = start;\r\n\t\t\t\t\tstart = end;\r\n\t\t\t\t\tend = temp;\r\n\t\t\t\t}\r\n\t\t\t\tthis._change = new ChangeLoop(this._doc, oldStart, oldEnd - oldStart, start, end - start);\r\n\t\t\t} else if (this._cursor.mode == this._bothMode) {\r\n\t\t\t\tconst endPoints: Endpoints = this._findEndPoints(bar);\r\n\t\t\t\tthis._change = new ChangeLoop(this._doc, oldStart, oldEnd - oldStart, endPoints.start, endPoints.length);\r\n\t\t\t}\r\n\t\t\tthis._doc.synth.jumpIntoLoop();\r\n\t\t\tif (this._doc.prefs.autoFollow) {\r\n\t\t\t\tnew ChangeChannelBar(this._doc, this._doc.channel, Math.floor(this._doc.synth.playhead), true);\r\n\t\t\t}\r\n\t\t\tthis._doc.setProspectiveChange(this._change);\r\n\t\t} else {\r\n\t\t\tthis._updateCursorStatus();\r\n\t\t\tthis._updatePreview();\r\n\t\t}\r\n\t}\r\n\t\t\r\n\tprivate _whenTouchReleased = (event: TouchEvent): void => {\r\n\t\tevent.preventDefault();\r\n\t\tif (!this._startedScrolling) {\r\n\t\t\tthis._whenCursorMoved();\r\n\t\t\tthis._mouseOver = false;\r\n\t\t\tthis._whenCursorReleased(event);\r\n\t\t\tthis._updatePreview();\r\n\t\t}\r\n\r\n\t\tthis._mouseDown = false;\r\n\t}\r\n\t\t\r\n\tprivate _whenCursorReleased = (event: Event): void => {\r\n\t\tif (this._change != null) this._doc.record(this._change);\r\n\t\tthis._change = null;\r\n\t\tthis._mouseDown = false;\r\n\t\tthis._updateCursorStatus();\r\n\t\tthis._render();\r\n\t}\r\n\t\t\r\n\tprivate _updatePreview(): void {\r\n\t\tconst showHighlight: boolean = this._mouseOver && !this._mouseDown;\r\n\t\tthis._highlight.style.visibility = showHighlight ? \"visible\" : \"hidden\";\r\n\t\t\t\r\n\t\tif (showHighlight) {\r\n\t\t\tconst radius: number = this._editorHeight / 2;\r\n\t\t\t\t\r\n\t\t\tlet highlightStart: number = (this._doc.song.loopStart) * this._barWidth;\r\n\t\t\tlet highlightStop: number = (this._doc.song.loopStart + this._doc.song.loopLength) * this._barWidth;\r\n\t\t\tif (this._cursor.mode == this._startMode) {\r\n\t\t\t\thighlightStop = (this._doc.song.loopStart) * this._barWidth + radius * 2;\r\n\t\t\t} else if (this._cursor.mode == this._endMode) {\r\n\t\t\t\thighlightStart = (this._doc.song.loopStart + this._doc.song.loopLength) * this._barWidth - radius * 2;\r\n\t\t\t} else {\r\n\t\t\t\tconst endPoints: Endpoints = this._findEndPoints(this._cursor.startBar);\r\n\t\t\t\thighlightStart = (endPoints.start) * this._barWidth;\r\n\t\t\t\thighlightStop = (endPoints.start + endPoints.length) * this._barWidth;\r\n\t\t\t}\r\n\t\t\t\t\r\n\t\t\tthis._highlight.setAttribute(\"d\",\r\n\t\t\t\t`M ${highlightStart + radius} ${4} ` +\r\n\t\t\t\t`L ${highlightStop - radius} ${4} ` +\r\n\t\t\t\t`A ${radius - 4} ${radius - 4} ${0} ${0} ${1} ${highlightStop - radius} ${this._editorHeight - 4} ` +\r\n\t\t\t\t`L ${highlightStart + radius} ${this._editorHeight - 4} ` +\r\n\t\t\t\t`A ${radius - 4} ${radius - 4} ${0} ${0} ${1} ${highlightStart + radius} ${4} ` +\r\n\t\t\t\t`z`\r\n\t\t\t);\r\n\t\t}\r\n\t}\r\n\t\t\r\n\tprivate _documentChanged = (): void => {\r\n\t\tthis._render();\r\n\t}\r\n\t\t\r\n\tprivate _render(): void {\r\n\t\tthis._barWidth = this._doc.getBarWidth();\r\n\t\t\t\r\n\t\tconst radius: number = this._editorHeight / 2;\r\n\t\tconst loopStart: number = (this._doc.song.loopStart) * this._barWidth;\r\n\t\tconst loopStop: number = (this._doc.song.loopStart + this._doc.song.loopLength) * this._barWidth;\r\n\t\t\t\r\n\t\tif (this._renderedBarCount != this._doc.song.barCount || this._renderedBarWidth != this._barWidth) {\r\n\t\t\tthis._renderedBarCount = this._doc.song.barCount;\r\n\t\t\tthis._renderedBarWidth = this._barWidth;\r\n\t\t\tconst editorWidth = this._barWidth * this._doc.song.barCount;\r\n\t\t\tthis.container.style.width = editorWidth + \"px\";\r\n\t\t\tthis._svg.setAttribute(\"width\", editorWidth + \"\");\r\n\t\t}\r\n\r\n\t\tif (this._renderedLoopStart != loopStart || this._renderedLoopStop != loopStop) {\r\n\t\t\tthis._renderedLoopStart = loopStart;\r\n\t\t\tthis._renderedLoopStop = loopStop;\r\n\t\t\tthis._loop.setAttribute(\"d\",\r\n\t\t\t\t`M ${loopStart + radius} ${2} ` +\r\n\t\t\t\t`L ${loopStop - radius} ${2} ` +\r\n\t\t\t\t`A ${radius - 2} ${radius - 2} ${0} ${0} ${1} ${loopStop - radius} ${this._editorHeight - 2} ` +\r\n\t\t\t\t`L ${loopStart + radius} ${this._editorHeight - 2} ` +\r\n\t\t\t\t`A ${radius - 2} ${radius - 2} ${0} ${0} ${1} ${loopStart + radius} ${2} ` +\r\n\t\t\t\t`z`\r\n\t\t\t);\r\n\t\t}\r\n\t\t\t\r\n\t\tthis._updatePreview();\r\n\t}\r\n}\r\n","// Copyright (c) 2012-2022 John Nesky and contributing authors, distributed under the MIT license, see accompanying the LICENSE.md file.\r\n\r\nimport { Config } from \"../synth/SynthConfig\";\r\nimport { HTML } from \"imperative-html/dist/esm/elements-strict\";\r\nimport { SongDocument } from \"./SongDocument\";\r\nimport { Prompt } from \"./Prompt\";\r\nimport { ChangeMoveNotesSideways } from \"./changes\";\r\nimport { ColorConfig } from \"./ColorConfig\";\r\n\r\n\tconst {button, div, span, h2, input, br, select, option} = HTML;\r\n\r\nexport class MoveNotesSidewaysPrompt implements Prompt {\r\n\t\tprivate readonly _beatsStepper: HTMLInputElement = input({style: \"width: 3em; margin-left: 1em;\", type: \"number\", step: \"0.01\", value: \"0\"});\r\n\t\tprivate readonly _conversionStrategySelect: HTMLSelectElement = select({style: \"width: 100%;\"},\r\n\t\t\toption({value: \"overflow\"}, \"Overflow notes across bars.\"),\r\n\t\t\toption({value: \"wrapAround\"}, \"Wrap notes around within bars.\"),\r\n\t);\r\n\t\tprivate readonly _cancelButton: HTMLButtonElement = button({class: \"cancelButton\"});\r\n\t\tprivate readonly _okayButton: HTMLButtonElement = button({class: \"okayButton\", style: \"width:45%;\"}, \"Okay\");\r\n\t\t\r\n\t\tpublic readonly container: HTMLDivElement = div({class: \"prompt noSelection\", style: \"width: 250px;\"},\r\n\t\th2(\"Move Notes Sideways\"),\r\n\t\t\tdiv({style: \"display: flex; flex-direction: row; align-items: center; height: 2em; justify-content: flex-end;\"},\r\n\t\t\t\tdiv({style: \"text-align: right;\"},\r\n\t\t\t\t\"Beats to move:\",\r\n\t\t\t\tbr(),\r\n\t\t\t\t\tspan({style: `font-size: smaller; color: ${ColorConfig.secondaryText};`}, \"(Negative is left, positive is right)\"),\r\n\t\t\t),\r\n\t\t\tthis._beatsStepper,\r\n\t\t),\r\n\t\t\tdiv({style: \"display: flex; flex-direction: row; align-items: center; height: 2em; justify-content: flex-end;\"},\r\n\t\t\t\tdiv({class: \"selectContainer\", style: \"width: 100%;\"}, this._conversionStrategySelect),\r\n\t\t),\r\n\t\t\tdiv({style: \"display: flex; flex-direction: row-reverse; justify-content: space-between;\"},\r\n\t\t\tthis._okayButton,\r\n\t\t),\r\n\t\tthis._cancelButton,\r\n\t);\r\n\t\t\r\n\tconstructor(private _doc: SongDocument) {\r\n\t\tthis._beatsStepper.min = (-this._doc.song.beatsPerBar) + \"\";\r\n\t\tthis._beatsStepper.max = this._doc.song.beatsPerBar + \"\";\r\n\t\t\t\r\n\t\tconst lastStrategy: string | null = window.localStorage.getItem(\"moveNotesSidewaysStrategy\");\r\n\t\tif (lastStrategy != null) {\r\n\t\t\tthis._conversionStrategySelect.value = lastStrategy;\r\n\t\t}\r\n\t\t\t\r\n\t\tthis._beatsStepper.select();\r\n\t\tsetTimeout(() => this._beatsStepper.focus(), 100); // Add 100ms because the key macro (W) gets captured by the stepper...\r\n\t\t\t\r\n\t\tthis._okayButton.addEventListener(\"click\", this._saveChanges);\r\n\t\tthis._cancelButton.addEventListener(\"click\", this._close);\r\n\t\tthis._beatsStepper.addEventListener(\"blur\", MoveNotesSidewaysPrompt._validateNumber);\r\n\t\tthis.container.addEventListener(\"keydown\", this._whenKeyPressed);\r\n\t}\r\n\t\t\r\n\t\tprivate _close = (): void => { \r\n\t\tthis._doc.undo();\r\n\t}\r\n\t\t\r\n\t\tpublic cleanUp = (): void => { \r\n\t\tthis._okayButton.removeEventListener(\"click\", this._saveChanges);\r\n\t\tthis._cancelButton.removeEventListener(\"click\", this._close);\r\n\t\tthis._beatsStepper.removeEventListener(\"blur\", MoveNotesSidewaysPrompt._validateNumber);\r\n\t\tthis.container.removeEventListener(\"keydown\", this._whenKeyPressed);\r\n\t}\r\n\t\t\r\n\tprivate _whenKeyPressed = (event: KeyboardEvent): void => {\r\n\t\t\tif ((<Element> event.target).tagName != \"BUTTON\" && event.keyCode == 13) { // Enter key\r\n\t\t\tthis._saveChanges();\r\n\t\t}\r\n\t}\r\n\t\t\r\n\tprivate static _validateNumber(event: Event): void {\r\n\t\tconst input: HTMLInputElement = <HTMLInputElement>event.target;\r\n\t\tlet value: number = +input.value;\r\n\t\tvalue = Math.round(value * Config.partsPerBeat) / Config.partsPerBeat;\r\n\t\tvalue = Math.round(value * 100) / 100;\r\n\t\tinput.value = Math.max(+input.min, Math.min(+input.max, value)) + \"\";\r\n\t}\r\n\t\t\r\n\tprivate _saveChanges = (): void => {\r\n\t\twindow.localStorage.setItem(\"moveNotesSidewaysStrategy\", this._conversionStrategySelect.value);\r\n\t\tthis._doc.prompt = null;\r\n\t\tthis._doc.record(new ChangeMoveNotesSideways(this._doc, +this._beatsStepper.value, this._conversionStrategySelect.value), true);\r\n\t}\r\n}\r\n","// Copyright (c) 2012-2022 John Nesky and contributing authors, distributed under the MIT license, see accompanying the LICENSE.md file.\r\n\r\nimport { SongDocument } from \"./SongDocument\";\r\nimport { HTML } from \"imperative-html/dist/esm/elements-strict\";\r\nimport { ColorConfig } from \"./ColorConfig\";\r\nimport { InputBox } from \"./HTMLWrapper\";\r\nimport { ChangeChannelOrder, ChangeChannelName, ChangeRemoveChannel } from \"./changes\";\r\nimport { Config } from \"../synth/SynthConfig\";\r\nimport { SongEditor } from \"./SongEditor\";\r\n\r\n//namespace beepbox {\r\nexport class MuteEditor {\r\n\t\r\n\tprivate _cornerFiller: HTMLDivElement = HTML.div({style: `background: ${ColorConfig.editorBackground}; position: sticky; bottom: 0; left: 0; width: 32px; height: 30px;`});\r\n\t\r\n\tprivate readonly _buttons: HTMLDivElement[] = [];\r\n\tprivate readonly _channelCounts: HTMLDivElement[] = [];\r\n\tprivate readonly _channelNameDisplay: HTMLDivElement = HTML.div({ style: `background-color: ${ColorConfig.uiWidgetFocus}; white-space:nowrap; display: none; transform:translate(20px); width: auto; pointer-events: none; position: absolute; border-radius: 0.2em; z-index: 2;`, \"color\": ColorConfig.primaryText }, \"\");\r\n\tpublic readonly _channelNameInput: InputBox = new InputBox(HTML.input({ style: `color: ${ColorConfig.primaryText}; background-color: ${ColorConfig.uiWidgetFocus}; margin-top: -2px; display: none; width: 6em; position: absolute; border-radius: 0.2em; z-index: 2;`, \"color\": ColorConfig.primaryText }, \"\"), this._doc, (oldValue: string, newValue: string) => new ChangeChannelName(this._doc, oldValue, newValue));\r\n\r\n\tprivate readonly _channelDropDown: HTMLSelectElement = HTML.select({ style: \"width: 0px; left: 19px; height: 19px; position:absolute; opacity:0\" },\r\n\r\n\t\tHTML.option({ value: \"rename\" }, \"Rename...\"),\r\n\t\tHTML.option({ value: \"chnUp\" }, \"Move Channel Up\"),\r\n\t\tHTML.option({ value: \"chnDown\" }, \"Move Channel Down\"),\r\n\t\tHTML.option({ value: \"chnMute\" }, \"Mute Channel\"),\r\n\t\tHTML.option({ value: \"chnSolo\" }, \"Solo Channel\"),\r\n\t\tHTML.option({ value: \"chnInsert\" }, \"Insert Channel Below\"),\r\n\t\tHTML.option({ value: \"chnDelete\" }, \"Delete This Channel\"),\r\n\t);\r\n\r\n\tpublic readonly container: HTMLElement = HTML.div({ class: \"muteEditor\", style: \"position: sticky; padding-top: \" + Config.barEditorHeight + \"px;\" }, this._channelNameDisplay, this._channelNameInput.input, this._channelDropDown);\r\n\r\n\tprivate _editorHeight: number = 128;\r\n\tprivate _renderedChannelCount: number = 0;\r\n\tprivate _renderedPitchChannels: number = 0;\r\n\tprivate _renderedNoiseChannels: number = 0;\r\n\tprivate _renderedModChannels: number = 0;\r\n\tprivate _renderedChannelHeight: number = -1;\r\n\tprivate _channelDropDownChannel: number = 0;\r\n\tprivate _channelDropDownOpen: boolean = false;\r\n\tprivate _channelDropDownLastState: boolean = false;\r\n\r\n\tconstructor(private _doc: SongDocument, private _editor: SongEditor) {\r\n\t\tthis.container.addEventListener(\"click\", this._onClick);\r\n\t\tthis.container.addEventListener(\"mousemove\", this._onMouseMove);\r\n\t\tthis.container.addEventListener(\"mouseleave\", this._onMouseLeave);\r\n\r\n\t\tthis._channelDropDown.selectedIndex = -1;\r\n\t\tthis._channelDropDown.addEventListener(\"change\", this._channelDropDownHandler);\r\n\t\tthis._channelDropDown.addEventListener(\"mousedown\", this._channelDropDownGetOpenedPosition);\r\n\t\tthis._channelDropDown.addEventListener(\"blur\", this._channelDropDownBlur);\r\n\t\tthis._channelDropDown.addEventListener(\"click\", this._channelDropDownClick);\r\n\r\n\t\tthis._channelNameInput.input.addEventListener(\"change\", this._channelNameInputHide);\r\n\t\tthis._channelNameInput.input.addEventListener(\"blur\", this._channelNameInputHide);\r\n\t\tthis._channelNameInput.input.addEventListener(\"mousedown\", this._channelNameInputClicked);\r\n\t\tthis._channelNameInput.input.addEventListener(\"input\", this._channelNameInputWhenInput);\r\n\t}\r\n\r\n\tprivate _channelNameInputWhenInput = (): void => {\r\n\t\tlet newValue = this._channelNameInput.input.value;\r\n\t\tif (newValue.length > 15) {\r\n\t\t\tthis._channelNameInput.input.value = newValue.substring(0, 15);\r\n\t\t}\r\n\t}\r\n\r\n\tprivate _channelNameInputClicked = (event: MouseEvent): void => {\r\n\t\tevent.stopPropagation();\r\n\t}\r\n\r\n\tprivate _channelNameInputHide = (): void => {\r\n\t\tthis._channelNameInput.input.style.setProperty(\"display\", \"none\");\r\n\t\tthis._channelNameDisplay.style.setProperty(\"display\", \"none\");\r\n\t}\r\n\r\n\tprivate _channelDropDownClick = (event: MouseEvent): void => {\r\n\t\tthis._channelDropDownOpen = !this._channelDropDownLastState;\r\n\t\tthis._channelDropDownGetOpenedPosition(event);\r\n\t\t//console.log(\"click \" + this._channelDropDownOpen);\r\n\t}\r\n\r\n\tprivate _channelDropDownBlur = (): void => {\r\n\t\tthis._channelDropDownOpen = false;\r\n\t\tthis._channelNameDisplay.style.setProperty(\"display\", \"none\");\r\n\t\t//console.log(\"blur \" + this._channelDropDownOpen);\r\n\t}\r\n\r\n\tprivate _channelDropDownGetOpenedPosition = (event: MouseEvent): void => {\r\n\r\n\t\tthis._channelDropDownLastState = this._channelDropDownOpen;\r\n\r\n\t\tthis._channelDropDownChannel = Math.floor(Math.min(this._renderedChannelCount, Math.max(0, parseInt(this._channelDropDown.style.getPropertyValue(\"top\")) / this._renderedChannelHeight)));\r\n\t\tthis._doc.muteEditorChannel = this._channelDropDownChannel;\r\n\r\n\t\tthis._channelNameDisplay.style.setProperty(\"display\", \"\");\r\n\r\n\t\t// Check if channel is at limit, in which case another can't be inserted\r\n\t\tif ((this._channelDropDownChannel < this._doc.song.pitchChannelCount && this._doc.song.pitchChannelCount == Config.pitchChannelCountMax)\r\n\t\t\t|| (this._channelDropDownChannel >= this._doc.song.pitchChannelCount && this._channelDropDownChannel < this._doc.song.pitchChannelCount + this._doc.song.noiseChannelCount && this._doc.song.noiseChannelCount == Config.noiseChannelCountMax)\r\n\t\t\t|| (this._channelDropDownChannel >= this._doc.song.pitchChannelCount + this._doc.song.noiseChannelCount && this._doc.song.modChannelCount == Config.modChannelCountMax)) {\r\n\t\t\tthis._channelDropDown.options[5].disabled = true;\r\n\t\t}\r\n\t\telse {\r\n\t\t\tthis._channelDropDown.options[5].disabled = false;\r\n\t\t}\r\n\r\n\t\t// Also check if a channel is eligible to move up or down based on the song's channel settings.\r\n\t\tif (this._channelDropDownChannel == 0 || this._channelDropDownChannel == this._doc.song.pitchChannelCount || this._channelDropDownChannel == this._doc.song.pitchChannelCount + this._doc.song.noiseChannelCount) {\r\n\t\t\tthis._channelDropDown.options[1].disabled = true;\r\n\t\t}\r\n\t\telse {\r\n\t\t\tthis._channelDropDown.options[1].disabled = false;\r\n\t\t}\r\n\t\tif (this._channelDropDownChannel == this._doc.song.pitchChannelCount - 1 || this._channelDropDownChannel == this._doc.song.pitchChannelCount + this._doc.song.noiseChannelCount - 1 || this._channelDropDownChannel == this._doc.song.getChannelCount() - 1) {\r\n\t\t\tthis._channelDropDown.options[2].disabled = true;\r\n\t\t}\r\n\t\telse {\r\n\t\t\tthis._channelDropDown.options[2].disabled = false;\r\n\t\t}\r\n\r\n\t\t// Also, can't delete the last pitch channel.\r\n\t\tif (this._doc.song.pitchChannelCount == 1 && this._channelDropDownChannel == 0) {\r\n\t\t\tthis._channelDropDown.options[6].disabled = true;\r\n\t\t}\r\n\t\telse {\r\n\t\t\tthis._channelDropDown.options[6].disabled = false;\r\n\t\t}\r\n\t}\r\n\r\n\tprivate _channelDropDownHandler = (event: Event): void => {\r\n\t\tthis._channelNameDisplay.style.setProperty(\"display\", \"none\");\r\n\t\tthis._channelDropDown.style.setProperty(\"display\", \"none\");\r\n\t\tthis._channelDropDownOpen = false;\r\n\t\tevent.stopPropagation();\r\n\t\t//console.log(\"handler \" + this._channelDropDownOpen);\r\n\r\n\t\tswitch (this._channelDropDown.value) {\r\n\t\t\tcase \"rename\":\r\n\t\t\t\tthis._channelNameInput.input.style.setProperty(\"display\", \"\");\r\n\t\t\t\tthis._channelNameInput.input.style.setProperty(\"transform\", this._channelNameDisplay.style.getPropertyValue(\"transform\"));\r\n\t\t\t\tif (this._channelNameDisplay.textContent != null) {\r\n\t\t\t\t\tthis._channelNameInput.input.value = this._channelNameDisplay.textContent;\r\n\t\t\t\t}\r\n\t\t\t\telse {\r\n\t\t\t\t\tthis._channelNameInput.input.value = \"\";\r\n\t\t\t\t}\r\n\t\t\t\tthis._channelNameInput.input.select();\r\n\t\t\t\tbreak;\r\n\t\t\tcase \"chnUp\":\r\n\t\t\t\tthis._doc.record(new ChangeChannelOrder(this._doc, this._channelDropDownChannel, this._channelDropDownChannel, -1));\r\n\t\t\t\tbreak;\r\n\t\t\tcase \"chnDown\":\r\n\t\t\t\tthis._doc.record(new ChangeChannelOrder(this._doc, this._channelDropDownChannel, this._channelDropDownChannel, 1));\r\n\t\t\t\tbreak;\r\n\t\t\tcase \"chnMute\":\r\n\t\t\t\tthis._doc.song.channels[this._channelDropDownChannel].muted = !this._doc.song.channels[this._channelDropDownChannel].muted;\r\n\t\t\t\tthis.render();\r\n\t\t\t\tbreak;\r\n\t\t\tcase \"chnSolo\": {\r\n\t\t\t\t// Check for any channel not matching solo pattern\r\n\t\t\t\tlet shouldSolo: boolean = false;\r\n\t\t\t\tfor (let channel: number = 0; channel < this._doc.song.pitchChannelCount + this._doc.song.noiseChannelCount; channel++) {\r\n\t\t\t\t\tif (this._doc.song.channels[channel].muted == (channel == this._channelDropDownChannel)) {\r\n\t\t\t\t\t\tshouldSolo = true;\r\n\t\t\t\t\t\tchannel = this._doc.song.pitchChannelCount + this._doc.song.noiseChannelCount;\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t\tif (shouldSolo) {\r\n\t\t\t\t\tfor (let channel: number = 0; channel < this._doc.song.pitchChannelCount + this._doc.song.noiseChannelCount; channel++) {\r\n\t\t\t\t\t\tthis._doc.song.channels[channel].muted = (channel != this._channelDropDownChannel);\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t\telse {\r\n\t\t\t\t\tfor (let channel: number = 0; channel < this._doc.song.pitchChannelCount + this._doc.song.noiseChannelCount; channel++) {\r\n\t\t\t\t\t\tthis._doc.song.channels[channel].muted = false;\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t\tthis.render();\r\n\t\t\t\tbreak;\r\n\t\t\t}\r\n\t\t\tcase \"chnInsert\": {\r\n\t\t\t\tthis._doc.channel = this._channelDropDownChannel;\r\n\t\t\t\tthis._doc.selection.resetBoxSelection();\r\n\t\t\t\tthis._doc.selection.insertChannel();\r\n\t\t\t\tbreak;\r\n\t\t\t}\r\n\t\t\tcase \"chnDelete\": {\r\n\t\t\t\tthis._doc.record(new ChangeRemoveChannel(this._doc, this._channelDropDownChannel, this._channelDropDownChannel));\r\n\r\n\t\t\t\tbreak;\r\n\t\t\t}\r\n\t\t}\r\n\t\tif (this._channelDropDown.value != \"rename\")\r\n\t\t\tthis._editor.refocusStage();\r\n\r\n\t\tthis._channelDropDown.selectedIndex = -1;\r\n\t}\r\n\r\n\tprivate _onClick = (event: MouseEvent): void => {\r\n\r\n\t\tconst index = this._buttons.indexOf(<HTMLDivElement>event.target);\r\n\t\tif (index == -1) return;\r\n\t\tlet xPos: number = event.clientX - this._buttons[0].getBoundingClientRect().left;\r\n\t\tif (xPos < 21.0) {\r\n\t\t\tthis._doc.song.channels[index].muted = !this._doc.song.channels[index].muted;\r\n\t\t}\r\n\t\tthis._doc.notifier.changed();\r\n\t}\r\n\r\n\tprivate _onMouseMove = (event: MouseEvent): void => {\r\n\t\tconst index = this._buttons.indexOf(<HTMLDivElement>event.target);\r\n\t\tif (index == -1) {\r\n\t\t\tif (!this._channelDropDownOpen && event.target != this._channelNameDisplay && event.target != this._channelDropDown) {\r\n\t\t\t\tthis._channelNameDisplay.style.setProperty(\"display\", \"none\");\r\n\t\t\t\tthis._channelDropDown.style.setProperty(\"display\", \"none\");\r\n\t\t\t\tthis._channelDropDown.style.setProperty(\"width\", \"0px\");\r\n\t\t\t}\r\n\t\t\treturn;\r\n\t\t}\r\n\t\tlet xPos: number = event.clientX - this._buttons[0].getBoundingClientRect().left;\r\n\t\tif (xPos >= 21.0) {\r\n\t\t\tif (!this._channelDropDownOpen) {\r\n\t\t\t\t// Mouse over chn. number\r\n\t\t\t\tthis._channelDropDown.style.setProperty(\"display\", \"\");\r\n\t\t\t\tvar height = this._doc.getChannelHeight();\r\n\t\t\t\tthis._channelNameDisplay.style.setProperty(\"transform\", \"translate(20px, \" + (height / 4 + height * index) + \"px)\");\r\n\r\n\t\t\t\tif (this._doc.song.channels[index].name != \"\") {\r\n\t\t\t\t\tthis._channelNameDisplay.textContent = this._doc.song.channels[index].name;\r\n\t\t\t\t\tthis._channelNameDisplay.style.setProperty(\"display\", \"\");\r\n\t\t\t\t}\r\n\t\t\t\telse {\r\n\t\t\t\t\tif (index < this._doc.song.pitchChannelCount) {\r\n\t\t\t\t\t\tthis._channelNameDisplay.textContent = \"Pitch \" + (index + 1);\r\n\t\t\t\t\t} else if (index < this._doc.song.pitchChannelCount + this._doc.song.noiseChannelCount) {\r\n\t\t\t\t\t\tthis._channelNameDisplay.textContent = \"Noise \" + (index - this._doc.song.pitchChannelCount + 1);\r\n\t\t\t\t\t}\r\n\t\t\t\t\telse {\r\n\t\t\t\t\t\tthis._channelNameDisplay.textContent = \"Mod \" + (index - this._doc.song.pitchChannelCount - this._doc.song.noiseChannelCount + 1);\r\n\t\t\t\t\t}\r\n\t\t\t\t\t// The name set will only show up when this becomes visible, e.g. when the dropdown is opened.\r\n\t\t\t\t\tthis._channelNameDisplay.style.setProperty(\"display\", \"none\");\r\n\t\t\t\t}\r\n\r\n\t\t\t\tthis._channelDropDown.style.top = (Config.barEditorHeight + 2 + index * this._renderedChannelHeight) + \"px\";\r\n\t\t\t\tthis._channelDropDown.style.setProperty(\"width\", \"15px\");\r\n\t\t\t}\r\n\t\t}\r\n\t\telse {\r\n\t\t\tif (!this._channelDropDownOpen) {\r\n\t\t\t\tthis._channelNameDisplay.style.setProperty(\"display\", \"none\");\r\n\t\t\t\tthis._channelDropDown.style.setProperty(\"display\", \"none\");\r\n\t\t\t\tthis._channelDropDown.style.setProperty(\"width\", \"0px\");\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\r\n\tprivate _onMouseLeave = (event: MouseEvent): void => {\r\n\t\tif (!this._channelDropDownOpen) {\r\n\t\t\tthis._channelNameDisplay.style.setProperty(\"display\", \"none\");\r\n\t\t\tthis._channelDropDown.style.setProperty(\"width\", \"0px\");\r\n\t\t}\r\n\t}\r\n\r\n\tpublic onKeyUp(event: KeyboardEvent): void {\r\n\t\tswitch (event.keyCode) {\r\n\t\t\tcase 27: // esc\r\n\t\t\t\tthis._channelDropDownOpen = false;\r\n\t\t\t\t//console.log(\"close\");\r\n\t\t\t\tthis._channelNameDisplay.style.setProperty(\"display\", \"none\");\r\n\t\t\t\tbreak;\r\n\t\t\tcase 13: // enter\r\n\t\t\t\tthis._channelDropDownOpen = false;\r\n\t\t\t\t//console.log(\"close\");\r\n\t\t\t\tthis._channelNameDisplay.style.setProperty(\"display\", \"none\");\r\n\t\t\t\tbreak;\r\n\t\t\tdefault:\r\n\t\t\t\tbreak;\r\n\t\t}\r\n\t}\r\n\r\n\tpublic render(): void {\r\n\t\tif (!this._doc.prefs.enableChannelMuting) return;\r\n\t\t\r\n\t\tconst channelHeight = this._doc.getChannelHeight();\r\n\r\n\t\tif (this._renderedChannelCount != this._doc.song.getChannelCount()) {\r\n\t\t\tfor (let y: number = this._renderedChannelCount; y < this._doc.song.getChannelCount(); y++) {\r\n\r\n\t\t\t\tconst channelCountText: HTMLDivElement = HTML.div({ class: \"noSelection muteButtonText\", style: \"display: table-cell; -webkit-text-stroke: 1.5px; vertical-align: middle; text-align: center; -webkit-user-select: none; -webkit-touch-callout: none; -moz-user-select: none; -ms-user-select: none; user-select: none; pointer-events: none; width: 12px; height: 20px; transform: translate(0px, 1px);\" });\r\n\t\t\t\tconst muteButton: HTMLDivElement = HTML.div({ class: \"mute-button\", title: \"Mute (M), Mute All (⇧M), Solo (S), Exclude (⇧S)\", style: `display: block; pointer-events: none; width: 16px; height: 20px; transform: translate(2px, 1px);` });\r\n\r\n\t\t\t\tconst muteContainer: HTMLDivElement = HTML.div({ style: \"align-items: center; height: 20px; margin: 0px; display: table; flex-direction: row; justify-content: space-between;\" }, [\r\n\t\t\t\t\tmuteButton,\r\n\t\t\t\t\tchannelCountText,\r\n\t\t\t\t]);\r\n\t\t\t\tthis.container.appendChild(muteContainer);\r\n\t\t\t\tthis._buttons[y] = muteContainer;\r\n\t\t\t\tthis._channelCounts[y] = channelCountText;\r\n\t\t\t}\r\n\r\n\t\t\tfor (let y: number = this._doc.song.getChannelCount(); y < this._renderedChannelCount; y++) {\r\n\t\t\t\tthis.container.removeChild(this._buttons[y]);\r\n\t\t\t}\r\n\r\n\t\t\tthis._buttons.length = this._doc.song.getChannelCount();\r\n\r\n\t\t\tthis.container.appendChild(this._cornerFiller);\r\n\t\t}\r\n\r\n\t\tfor (let y: number = 0; y < this._doc.song.getChannelCount(); y++) {\r\n\t\t\tif (this._doc.song.channels[y].muted) {\r\n\t\t\t\tthis._buttons[y].children[0].classList.add(\"muted\");\r\n\r\n\t\t\t\tif (y < this._doc.song.pitchChannelCount)\r\n\t\t\t\t\tthis._channelCounts[y].style.color = ColorConfig.trackEditorBgPitchDim;\r\n\t\t\t\telse if (y < this._doc.song.pitchChannelCount + this._doc.song.noiseChannelCount)\r\n\t\t\t\t\tthis._channelCounts[y].style.color = ColorConfig.trackEditorBgNoiseDim;\r\n\t\t\t\telse\r\n\t\t\t\t\tthis._channelCounts[y].style.color = ColorConfig.trackEditorBgModDim;\r\n\r\n\t\t\t} else {\r\n\t\t\t\tthis._buttons[y].children[0].classList.remove(\"muted\");\r\n\r\n\t\t\t\tif (y < this._doc.song.pitchChannelCount)\r\n\t\t\t\t\tthis._channelCounts[y].style.color = ColorConfig.trackEditorBgPitch;\r\n\t\t\t\telse if (y < this._doc.song.pitchChannelCount + this._doc.song.noiseChannelCount)\r\n\t\t\t\t\tthis._channelCounts[y].style.color = ColorConfig.trackEditorBgNoise;\r\n\t\t\t\telse\r\n\t\t\t\t\tthis._channelCounts[y].style.color = ColorConfig.trackEditorBgMod;\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tif (this._renderedChannelHeight != channelHeight || this._renderedChannelCount != this._doc.song.getChannelCount()) {\r\n\t\t\tfor (let y: number = 0; y < this._doc.song.getChannelCount(); y++) {\r\n\t\t\t\tthis._buttons[y].style.marginTop = ((channelHeight - 20) / 2) + \"px\";\r\n\t\t\t\tthis._buttons[y].style.marginBottom = ((channelHeight - 20) / 2) + \"px\";\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tif (this._renderedModChannels != this._doc.song.modChannelCount || this._renderedChannelCount != this._doc.song.getChannelCount()) {\r\n\t\t\tfor (let y: number = 0; y < this._doc.song.getChannelCount(); y++) {\r\n\t\t\t\tif (y < this._doc.song.pitchChannelCount + this._doc.song.noiseChannelCount) {\r\n\t\t\t\t\tthis._buttons[y].children[0].classList.remove(\"modMute\");\r\n\t\t\t\t}\r\n\t\t\t\telse {\r\n\t\t\t\t\tthis._buttons[y].children[0].classList.add(\"modMute\");\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tif (this._renderedModChannels != this._doc.song.modChannelCount || this._renderedPitchChannels != this._doc.song.pitchChannelCount || this._renderedNoiseChannels != this._doc.song.noiseChannelCount) {\r\n\t\t\tfor (let y: number = 0; y < this._doc.song.getChannelCount(); y++) {\r\n\t\t\t\tif (y < this._doc.song.pitchChannelCount) {\r\n\t\t\t\t\tlet val: number = (y + 1);\r\n\t\t\t\t\tthis._channelCounts[y].textContent = val + \"\";\r\n\t\t\t\t\tthis._channelCounts[y].style.fontSize = (val >= 10) ? \"xx-small\" : \"inherit\";\r\n\t\t\t\t}\r\n\t\t\t\telse if (y < this._doc.song.pitchChannelCount + this._doc.song.noiseChannelCount) {\r\n\t\t\t\t\tlet val: number = (y - this._doc.song.pitchChannelCount + 1);\r\n\t\t\t\t\tthis._channelCounts[y].textContent = val + \"\";\r\n\t\t\t\t\tthis._channelCounts[y].style.fontSize = (val >= 10) ? \"xx-small\" : \"inherit\";\r\n\t\t\t\t}\r\n\t\t\t\telse {\r\n\t\t\t\t\tlet val: number = (y - this._doc.song.pitchChannelCount - this._doc.song.noiseChannelCount + 1);\r\n\t\t\t\t\tthis._channelCounts[y].textContent = val + \"\";\r\n\t\t\t\t\tthis._channelCounts[y].style.fontSize = (val >= 10) ? \"xx-small\" : \"inherit\";\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\tthis._renderedPitchChannels = this._doc.song.pitchChannelCount;\r\n\t\t\tthis._renderedNoiseChannels = this._doc.song.noiseChannelCount;\r\n\t\t\tthis._renderedModChannels = this._doc.song.modChannelCount;\r\n\t\t}\r\n\r\n\t\tif (this._renderedChannelHeight != channelHeight || this._renderedChannelCount != this._doc.song.getChannelCount()) {\r\n\t\t\tthis._renderedChannelHeight = channelHeight;\r\n\t\t\tthis._renderedChannelCount = this._doc.song.getChannelCount();\r\n\t\t\tthis._editorHeight = Config.barEditorHeight + this._doc.song.getChannelCount() * channelHeight;\r\n\t\t\tthis._channelNameDisplay.style.setProperty(\"display\", \"none\");\r\n\t\t\tthis.container.style.height = (this._editorHeight + 16) + \"px\";\r\n\r\n\t\t\tif (this._renderedChannelHeight < 27) {\r\n\t\t\t\tthis._channelNameDisplay.style.setProperty(\"margin-top\", \"-2px\");\r\n\t\t\t\tthis._channelDropDown.style.setProperty(\"margin-top\", \"-4px\");\r\n\t\t\t\tthis._channelNameInput.input.style.setProperty(\"margin-top\", \"-4px\");\r\n\r\n\t\t\t}\r\n\t\t\telse if (this._renderedChannelHeight < 30) {\r\n\t\t\t\tthis._channelNameDisplay.style.setProperty(\"margin-top\", \"-1px\");\r\n\t\t\t\tthis._channelDropDown.style.setProperty(\"margin-top\", \"-3px\");\r\n\t\t\t\tthis._channelNameInput.input.style.setProperty(\"margin-top\", \"-3px\");\r\n\t\t\t}\r\n\t\t\telse {\r\n\t\t\t\tthis._channelNameDisplay.style.setProperty(\"margin-top\", \"0px\");\r\n\t\t\t\tthis._channelDropDown.style.setProperty(\"margin-top\", \"0px\");\r\n\t\t\t\tthis._channelNameInput.input.style.setProperty(\"margin-top\", \"-2px\");\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n}\r\n//}\r\n","// Copyright (c) 2012-2022 John Nesky and contributing authors, distributed under the MIT license, see accompanying the LICENSE.md file.\r\n\r\nimport { Config } from \"../synth/SynthConfig\";\r\nimport { SongDocument } from \"./SongDocument\";\r\nimport { HTML, SVG } from \"imperative-html/dist/esm/elements-strict\";\r\nimport { ChangeOctave } from \"./changes\";\r\nimport { ColorConfig } from \"./ColorConfig\";\r\nimport { Piano } from \"./Piano\";\r\n\r\nexport class OctaveScrollBar {\r\n\tprivate readonly _editorWidth: number = 20;\r\n\tprivate readonly _editorHeight: number = 481;\r\n\tprivate readonly _notchHeight: number = 4.0;\r\n\tprivate readonly _octaveCount: number = Config.pitchOctaves;\r\n\tprivate readonly _octaveHeight: number = (this._editorHeight - this._notchHeight) / this._octaveCount;\r\n\t\r\n\tprivate readonly _handle: SVGRectElement = SVG.rect({fill: ColorConfig.uiWidgetBackground, x: 2, y: 0, width: this._editorWidth - 4});\r\n\tprivate readonly _handleHighlight: SVGRectElement = SVG.rect({fill: \"none\", stroke: ColorConfig.hoverPreview, \"stroke-width\": 2, \"pointer-events\": \"none\", x: 1, y: 0, width: this._editorWidth - 2});\r\n\t\tprivate readonly _upHighlight: SVGPathElement = SVG.path({fill: ColorConfig.hoverPreview, \"pointer-events\": \"none\"});\r\n\t\tprivate readonly _downHighlight: SVGPathElement = SVG.path({fill: ColorConfig.hoverPreview, \"pointer-events\": \"none\"});\r\n\t\t\r\n\tprivate readonly _svg: SVGSVGElement = SVG.svg({ style: \"background-color: ${ColorConfig.editorBackground}; touch-action: pan-x; position: absolute;\", width: this._editorWidth, height: \"100%\", viewBox: \"0 0 20 \" + this._editorHeight, preserveAspectRatio: \"none\" });\r\n\t\tpublic readonly container: HTMLDivElement = HTML.div({id: \"octaveScrollBarContainer\", style: \"width: 20px; height: 100%; overflow: hidden; position: relative; flex-shrink: 0;\"}, this._svg);\r\n\t\t\r\n\t//private _mouseX: number = 0;\r\n\tprivate _mouseY: number = 0;\r\n\tprivate _mouseDown: boolean = false;\r\n\tprivate _mouseOver: boolean = false;\r\n\tprivate _dragging: boolean = false;\r\n\tprivate _dragStart: number;\r\n\tprivate _barBottom: number;\r\n\tprivate _barHeight: number;\r\n\tprivate _renderedBarBottom: number = -1;\r\n\tprivate _renderedVisibleOctaveCount: number = -1;\r\n\tprivate _change: ChangeOctave | null = null;\r\n\t\t\r\n\tconstructor(private _doc: SongDocument, private _piano: Piano) {\r\n\t\tthis._doc.notifier.watch(this._documentChanged);\r\n\t\tthis._documentChanged();\r\n\t\t\t\r\n\t\tthis._svg.appendChild(this._handle);\r\n\t\t\t\r\n\t\t// notches:\r\n\t\tfor (let i: number = 0; i <= this._octaveCount; i++) {\r\n\t\t\t\tthis._svg.appendChild(SVG.rect({fill: ColorConfig.tonic, x: 0, y: i * this._octaveHeight, width: this._editorWidth, height: this._notchHeight}));\r\n\t\t}\r\n\t\t\t\r\n\t\tthis._svg.appendChild(this._handleHighlight);\r\n\t\tthis._svg.appendChild(this._upHighlight);\r\n\t\tthis._svg.appendChild(this._downHighlight);\r\n\t\t\t\r\n\t\tconst center: number = this._editorWidth * 0.5;\r\n\t\tconst base: number = 20;\r\n\t\tconst tip: number = 9;\r\n\t\tconst arrowWidth: number = 6;\r\n\t\tthis._upHighlight.setAttribute(\"d\", `M ${center} ${tip} L ${center + arrowWidth} ${base} L ${center - arrowWidth} ${base} z`);\r\n\t\tthis._downHighlight.setAttribute(\"d\", `M ${center} ${this._editorHeight - tip} L ${center + arrowWidth} ${this._editorHeight - base} L ${center - arrowWidth} ${this._editorHeight - base} z`);\r\n\t\t\t\r\n\t\tthis.container.addEventListener(\"mousedown\", this._whenMousePressed);\r\n\t\tdocument.addEventListener(\"mousemove\", this._whenMouseMoved);\r\n\t\tdocument.addEventListener(\"mouseup\", this._whenCursorReleased);\r\n\t\tthis.container.addEventListener(\"mouseover\", this._whenMouseOver);\r\n\t\tthis.container.addEventListener(\"mouseout\", this._whenMouseOut);\r\n\t\t\t\r\n\t\tthis.container.addEventListener(\"touchstart\", this._whenTouchPressed);\r\n\t\tthis.container.addEventListener(\"touchmove\", this._whenTouchMoved);\r\n\t\tthis.container.addEventListener(\"touchend\", this._whenCursorReleased);\r\n\t\tthis.container.addEventListener(\"touchcancel\", this._whenCursorReleased);\r\n\t}\r\n\t\t\r\n\tprivate _whenMouseOver = (event: MouseEvent): void => {\r\n\t\tif (this._mouseOver) return;\r\n\t\tthis._mouseOver = true;\r\n\t\tthis._updatePreview();\r\n\t}\r\n\t\t\r\n\tprivate _whenMouseOut = (event: MouseEvent): void => {\r\n\t\tif (!this._mouseOver) return;\r\n\t\tthis._mouseOver = false;\r\n\t\tthis._updatePreview();\r\n\t}\r\n\t\t\r\n\tprivate _whenMousePressed = (event: MouseEvent): void => {\r\n\t\tevent.preventDefault();\r\n\t\tthis._mouseDown = true;\r\n\t\tconst boundingRect: ClientRect = this._svg.getBoundingClientRect();\r\n\t\t//this._mouseX = (event.clientX || event.pageX) - boundingRect.left;\r\n\t\tthis._mouseY = ((event.clientY || event.pageY) - boundingRect.top) * this._editorHeight / (boundingRect.bottom - boundingRect.top);\r\n\t\tif (isNaN(this._mouseY)) this._mouseY = 0;\r\n\t\tif (this._doc.song.getChannelIsNoise(this._doc.channel) || this._doc.song.getChannelIsMod(this._doc.channel)) return;\r\n\t\tthis._updatePreview();\r\n\t\t\t\r\n\t\tif (this._mouseY >= this._barBottom - this._barHeight && this._mouseY <= this._barBottom) {\r\n\t\t\tthis._dragging = true;\r\n\t\t\tthis._change = null;\r\n\t\t\tthis._dragStart = this._mouseY;\r\n\t\t}\r\n\t}\r\n\t\t\r\n\tprivate _whenTouchPressed = (event: TouchEvent): void => {\r\n\t\tevent.preventDefault();\r\n\t\tthis._mouseDown = true;\r\n\t\tconst boundingRect: ClientRect = this._svg.getBoundingClientRect();\r\n\t\t//this._mouseX = event.touches[0].clientX - boundingRect.left;\r\n\t\tthis._mouseY = (event.touches[0].clientY - boundingRect.top) * this._editorHeight / (boundingRect.bottom - boundingRect.top);\r\n\t\tif (isNaN(this._mouseY)) this._mouseY = 0;\r\n\t\tif (this._doc.song.getChannelIsNoise(this._doc.channel) || this._doc.song.getChannelIsMod(this._doc.channel)) return;\r\n\t\tthis._updatePreview();\r\n\t\t\t\r\n\t\tif (this._mouseY >= this._barBottom - this._barHeight && this._mouseY <= this._barBottom) {\r\n\t\t\tthis._dragging = true;\r\n\t\t\tthis._change = null;\r\n\t\t\tthis._dragStart = this._mouseY;\r\n\t\t}\r\n\t}\r\n\t\t\r\n\tprivate _whenMouseMoved = (event: MouseEvent): void => {\r\n\t\tconst boundingRect: ClientRect = this._svg.getBoundingClientRect();\r\n\t\t//this._mouseX = (event.clientX || event.pageX) - boundingRect.left;\r\n\t\tthis._mouseY = ((event.clientY || event.pageY) - boundingRect.top) * this._editorHeight / (boundingRect.bottom - boundingRect.top);\r\n\t\tif (isNaN(this._mouseY)) this._mouseY = 0;\r\n\t\tthis._whenCursorMoved();\r\n\t}\r\n\t\t\r\n\tprivate _whenTouchMoved = (event: TouchEvent): void => {\r\n\t\tif (!this._mouseDown) return;\r\n\t\tevent.preventDefault();\r\n\t\tconst boundingRect: ClientRect = this._svg.getBoundingClientRect();\r\n\t\t//this._mouseX = event.touches[0].clientX - boundingRect.left;\r\n\t\tthis._mouseY = (event.touches[0].clientY - boundingRect.top) * this._editorHeight / (boundingRect.bottom - boundingRect.top);\r\n\t\tif (isNaN(this._mouseY)) this._mouseY = 0;\r\n\t\tthis._whenCursorMoved();\r\n\t}\r\n\t\t\r\n\tprivate _whenCursorMoved(): void {\r\n\t\tif (this._doc.song.getChannelIsNoise(this._doc.channel) || this._doc.song.getChannelIsMod(this._doc.channel)) return;\r\n\t\tif (this._dragging) {\r\n\t\t\tconst visibleOctaveCount: number = this._doc.getVisibleOctaveCount();\r\n\t\t\tconst scrollableOctaves: number = Config.pitchOctaves - visibleOctaveCount;\r\n\t\t\tconst continuingProspectiveChange: boolean = this._doc.lastChangeWas(this._change);\r\n\t\t\tconst oldValue: number = continuingProspectiveChange ? this._change!.oldValue : this._doc.song.channels[this._doc.channel].octave;\r\n\t\t\t\r\n\t\t\tconst currentOctave: number = this._doc.getBaseVisibleOctave(this._doc.channel);\r\n\t\t\tlet octave: number = currentOctave;\r\n\t\t\twhile (this._mouseY - this._dragStart < -this._octaveHeight * 0.5) {\r\n\t\t\t\t\tif (octave < scrollableOctaves) {\r\n\t\t\t\t\toctave++;\r\n\t\t\t\t\tthis._dragStart -= this._octaveHeight;\r\n\t\t\t\t} else {\r\n\t\t\t\t\tbreak;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\twhile (this._mouseY - this._dragStart > this._octaveHeight * 0.5) {\r\n\t\t\t\tif (octave > 0) {\r\n\t\t\t\t\toctave--;\r\n\t\t\t\t\tthis._dragStart += this._octaveHeight;\r\n\t\t\t\t} else {\r\n\t\t\t\t\tbreak;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\t\t\r\n\t\t\tthis._change = new ChangeOctave(this._doc, oldValue, Math.floor(octave + visibleOctaveCount * 0.5));\r\n\t\t\tthis._doc.setProspectiveChange(this._change);\r\n\t\t}\r\n\t\t\t\r\n\t\tif (this._mouseOver) this._updatePreview();\r\n\t}\r\n\t\t\r\n\tprivate _whenCursorReleased = (event: Event): void => {\r\n\t\tif (!this._doc.song.getChannelIsNoise(this._doc.channel) && !this._doc.song.getChannelIsMod(this._doc.channel) && this._mouseDown) {\r\n\t\t\tif (this._dragging) {\r\n\t\t\t\tif (this._change != null) this._doc.record(this._change);\r\n\t\t\t} else {\r\n\t\t\t\tconst visibleOctaveCount: number = this._doc.getVisibleOctaveCount();\r\n\t\t\t\tconst scrollableOctaves: number = Config.pitchOctaves - visibleOctaveCount;\r\n\t\t\t\tconst canReplaceLastChange: boolean = this._doc.lastChangeWas(this._change);\r\n\t\t\t\tconst oldValue: number = canReplaceLastChange ? this._change!.oldValue : this._doc.song.channels[this._doc.channel].octave;\r\n\t\t\t\r\n\t\t\t\tconst currentOctave: number = this._doc.getBaseVisibleOctave(this._doc.channel);\r\n\t\t\t\tif (this._mouseY < this._barBottom - this._barHeight * 0.5) {\r\n\t\t\t\t\tif (currentOctave < scrollableOctaves) {\r\n\t\t\t\t\t\tthis._change = new ChangeOctave(this._doc, oldValue, Math.floor(currentOctave + 1 + visibleOctaveCount * 0.5));\r\n\t\t\t\t\t\tthis._doc.record(this._change, canReplaceLastChange);\r\n\t\t\t\t\t}\r\n\t\t\t\t} else {\r\n\t\t\t\t\tif (currentOctave > 0) {\r\n\t\t\t\t\t\tthis._change = new ChangeOctave(this._doc, oldValue, Math.floor(currentOctave - 1 + visibleOctaveCount * 0.5));\r\n\t\t\t\t\t\tthis._doc.record(this._change, canReplaceLastChange);\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\t\tthis._mouseDown = false;\r\n\t\tthis._dragging = false;\r\n\t\tthis._updatePreview();\r\n\t}\r\n\t\t\r\n\tprivate _updatePreview(): void {\r\n\t\tconst showHighlight: boolean = this._mouseOver && !this._mouseDown;\r\n\t\tlet showUpHighlight: boolean = false;\r\n\t\tlet showDownHighlight: boolean = false;\r\n\t\tlet showHandleHighlight: boolean = false;\r\n\t\t\t\r\n\t\tif (showHighlight) {\r\n\t\t\tif (this._mouseY < this._barBottom - this._barHeight) {\r\n\t\t\t\tshowUpHighlight = true;\r\n\t\t\t} else if (this._mouseY > this._barBottom) {\r\n\t\t\t\tshowDownHighlight = true;\r\n\t\t\t} else {\r\n\t\t\t\tshowHandleHighlight = true;\r\n\t\t\t}\r\n\t\t}\r\n\t\t\t\r\n\t\tthis._upHighlight.style.visibility = showUpHighlight ? \"inherit\" : \"hidden\";\r\n\t\tthis._downHighlight.style.visibility = showDownHighlight ? \"inherit\" : \"hidden\";\r\n\t\tthis._handleHighlight.style.visibility = showHandleHighlight ? \"inherit\" : \"hidden\";\r\n\t}\r\n\t\t\r\n\tprivate _documentChanged = (): void => {\r\n\t\tthis._barBottom = this._editorHeight - (this._octaveHeight * this._doc.getBaseVisibleOctave(this._doc.channel));\r\n\t\tthis._svg.style.visibility = (this._doc.song.getChannelIsNoise(this._doc.channel) || this._doc.song.getChannelIsMod(this._doc.channel)) ? \"hidden\" : \"visible\";\r\n\t\tconst visibleOctaveCount: number = this._doc.getVisibleOctaveCount();\r\n\t\tif (this._renderedBarBottom != this._barBottom || this._renderedVisibleOctaveCount != visibleOctaveCount) {\r\n\t\t\tthis._renderedBarBottom = this._barBottom;\r\n\t\t\tthis._renderedVisibleOctaveCount = visibleOctaveCount;\r\n\t\t\tthis._barHeight = (this._octaveHeight * visibleOctaveCount + this._notchHeight);\r\n\t\t\tthis._handle.setAttribute(\"height\", String(this._barHeight));\r\n\t\t\tthis._handleHighlight.setAttribute(\"height\", String(this._barHeight));\r\n\t\t\tthis._handle.setAttribute(\"y\", String(this._barBottom - this._barHeight));\r\n\t\t\tthis._handleHighlight.setAttribute(\"y\", String(this._barBottom - this._barHeight));\r\n\r\n\t\t\tthis._piano.forceRender();\r\n\t\t}\r\n\t\tthis._updatePreview();\r\n\t}\r\n}\r\n","// Copyright (c) 2012-2022 John Nesky and contributing authors, distributed under the MIT license, see accompanying the LICENSE.md file.\r\n\r\nimport {Config} from \"../synth/SynthConfig\";\r\nimport {SongDocument} from \"./SongDocument\";\r\nimport {AnalogousDrum, analogousDrumMap, MidiEventType} from \"./Midi\";\r\n\r\ndeclare global {\r\n\tinterface Navigator {\r\n\t\trequestMIDIAccess?(): Promise<any>;\r\n\t}\r\n}\r\n\r\ninterface MIDIInput extends EventTarget {\r\n\tid: string;\r\n\ttype: \"input\" | \"output\";\r\n\tstate: \"disconnected\" | \"connected\";\r\n}\r\n\r\ninterface MIDIConnectionEvent {\r\n\tport: MIDIInput;\r\n}\r\n\r\ninterface MIDIMessageEvent {\r\n\tdata: [type: number, key: number, velocity: number];\r\n\ttarget: MIDIInput;\r\n}\r\n\r\n// A unique id for this tab.\r\nconst id: string = ((Math.random() * 0xffffffff) >>> 0).toString(16);\r\n\r\nexport class MidiInputHandler {\r\n\tconstructor(private _doc: SongDocument) {\r\n\t\tthis.registerMidiAccessHandler();\r\n\t}\r\n\t\r\n\tprivate async registerMidiAccessHandler() {\r\n\t\tif (navigator.requestMIDIAccess == null) return;\r\n\t\t\r\n\t\ttry {\r\n\t\t\tconst midiAccess = await navigator.requestMIDIAccess();\r\n\t\t\t\r\n\t\t\tmidiAccess.inputs.forEach(this._registerMidiInput);\r\n\t\t\tmidiAccess.addEventListener(\"statechange\", this._handleStateChange);\r\n\t\t\t\r\n\t\t\tthis._takeMidiHandlerFocus();\r\n\t\t\twindow.addEventListener(\"focus\", this._takeMidiHandlerFocus);\r\n\t\t} catch (e) {\r\n\t\t\tconsole.error(\"Failed to get MIDI access\", e);\r\n\t\t}\r\n\t}\r\n\t\r\n\tprivate _takeMidiHandlerFocus = (event?: Event) => {\r\n\t\t// Record that this browser tab is the one that should handle midi\r\n\t\t// events and any other open tabs should ignore midi events for now.\r\n\t\tlocalStorage.setItem(\"midiHandlerId\", id);\r\n\t}\r\n\t\r\n\tprivate _handleStateChange = (event: MIDIConnectionEvent) => {\r\n\t\tif (event.port.type !== \"input\") return;\r\n\t\t\r\n\t\tswitch (event.port.state) {\r\n\t\t\tcase \"connected\":\r\n\t\t\t\tthis._registerMidiInput(event.port);\r\n\t\t\t\tbreak;\r\n\t\t\tcase \"disconnected\":\r\n\t\t\t\tthis._unregisterMidiInput(event.port);\r\n\t\t\t\tbreak;\r\n\t\t}\r\n\t}\r\n\t\r\n\tprivate _registerMidiInput = (midiInput: MIDIInput) => {\r\n\t\tmidiInput.addEventListener(\"midimessage\", this._onMidiMessage as any);\r\n\t}\r\n\t\r\n\tprivate _unregisterMidiInput = (midiInput: MIDIInput) => {\r\n\t\tmidiInput.removeEventListener(\"midimessage\", this._onMidiMessage as any);\r\n\t\tthis._doc.performance.clearAllPitches();\r\n\t}\r\n\t\r\n\tprivate _onMidiMessage = (event: MIDIMessageEvent) => {\r\n\t\t// Ignore midi events if disabled or a different tab is handling them.\r\n\t\tif (!this._doc.prefs.enableMidi || localStorage.getItem(\"midiHandlerId\") != id) return;\r\n\t\t\r\n\t\tconst isDrum: boolean = this._doc.song.getChannelIsNoise(this._doc.channel);\r\n\t\tlet [eventType, key, velocity] = event.data;\r\n\t\teventType &= 0xF0;\r\n\t\t\r\n\t\tif (isDrum) {\r\n\t\t\tconst drum: AnalogousDrum | undefined = analogousDrumMap[key];\r\n\t\t\tif (drum != undefined) {\r\n\t\t\t\tkey = drum.frequency;\r\n\t\t\t} else {\r\n\t\t\t\treturn;\r\n\t\t\t}\r\n\t\t} else {\r\n\t\t\tkey -= Config.keys[this._doc.song.key].basePitch; // The basePitch of the song key is implicit so don't include it.\r\n\t\t\tif (key < 0 || key > Config.maxPitch) return;\r\n\t\t}\r\n\t\t\r\n\t\tif (eventType == MidiEventType.noteOn && velocity == 0) {\r\n\t\t\teventType = MidiEventType.noteOff;\r\n\t\t}\r\n\t\t\r\n\t\tswitch (eventType) {\r\n\t\t\tcase MidiEventType.noteOn:\r\n\t\t\t\tthis._doc.synth.preferLowerLatency = true;\r\n\t\t\t\tthis._doc.performance.addPerformedPitch(key);\r\n\t\t\t\tbreak;\r\n\t\t\tcase MidiEventType.noteOff:\r\n\t\t\t\tthis._doc.performance.removePerformedPitch(key);\r\n\t\t\t\tbreak;\r\n\t\t}\r\n\t}\r\n}\r\n","// Copyright (c) 2012-2022 John Nesky and contributing authors, distributed under the MIT license, see accompanying the LICENSE.md file.\r\n\r\nimport {Config} from \"../synth/SynthConfig\";\r\nimport {SongDocument} from \"./SongDocument\";\r\n\r\nexport class KeyboardLayout {\r\n\tprivate static _pianoAtC: ReadonlyArray<ReadonlyArray<number | null>> = [\r\n\t\t[   0,   2,   4,   5,   7,   9,  11,  12,  14,  16,  17],\r\n\t\t[null,   1,   3,null,   6,   8,  10,null,  13,  15,null,  18],\r\n\t\t[  12,  14,  16,  17,  19,  21,  23,  24,  26,  28,  29,  31,  33],\r\n\t\t[null,  13,  15,null,  18,  20,  22,null,  25,  27,null,  30,  32],\r\n\t];\r\n\tprivate static _pianoAtA: ReadonlyArray<ReadonlyArray<number | null>> = [\r\n\t\t[   0,   2,   3,   5,   7,   8,  10,  12,  14,  15,  17],\r\n\t\t[  -1,   1,null,   4,   6,null,   9,  11,  13,null,  16,  18],\r\n\t\t[  12,  14,  15,  17,  19,  20,  22,  24,  26,  27,  29,  31,  32],\r\n\t\t[  11,  13,null,  16,  18,null,  21,  23,  25,null,  28,  30,null],\r\n\t];\r\n\t\r\n\tpublic static keyPosToPitch(doc: SongDocument, x: number, y: number, keyboardLayout: string): number | null {\r\n\t\tlet pitchOffset: number | null = null;\r\n\t\tlet forcedKey: number | null = null;\r\n\t\tswitch (keyboardLayout) {\r\n\t\t\tcase \"wickiHayden\":\r\n\t\t\t\tpitchOffset = y * 5 + x * 2 - 2;\r\n\t\t\t\tbreak;\r\n\t\t\tcase \"songScale\":\r\n\t\t\t\tconst scaleFlags: ReadonlyArray<boolean> = Config.scales[doc.song.scale].flags;\r\n\t\t\t\tconst scaleIndices: number[] = <number[]> scaleFlags.map((flag, index) => flag ? index : null).filter((index) => index != null);\r\n\t\t\t\tpitchOffset = (y - 1 + Math.floor(x / scaleIndices.length)) * Config.pitchesPerOctave + scaleIndices[(x + scaleIndices.length) % scaleIndices.length];\r\n\t\t\t\tbreak;\r\n\t\t\tcase \"pianoAtC\":\r\n\t\t\t\tpitchOffset = KeyboardLayout._pianoAtC[y][x];\r\n\t\t\t\tforcedKey = Config.keys.dictionary[\"C\"].basePitch;\r\n\t\t\t\tbreak;\r\n\t\t\tcase \"pianoAtA\":\r\n\t\t\t\tpitchOffset = KeyboardLayout._pianoAtA[y][x];\r\n\t\t\t\tforcedKey = Config.keys.dictionary[\"A\"].basePitch;\r\n\t\t\t\tbreak;\r\n\t\t\tcase \"pianoTransposingC\":\r\n\t\t\t\tpitchOffset = KeyboardLayout._pianoAtC[y][x];\r\n\t\t\t\tbreak;\r\n\t\t\tcase \"pianoTransposingA\":\r\n\t\t\t\tpitchOffset = KeyboardLayout._pianoAtA[y][x];\r\n\t\t\t\tbreak;\r\n\t\t}\r\n\t\t\r\n\t\tif (pitchOffset == null) return null;\r\n\t\t\r\n\t\tconst octaveOffset: number = Math.max(0, doc.song.channels[doc.channel].octave - 1) * Config.pitchesPerOctave;\r\n\t\tlet keyOffset: number = 0; // The basePitch of the song key is implicit.\r\n\t\t\r\n\t\tif (forcedKey != null) {\r\n\t\t\tconst keyBasePitch: number = Config.keys[doc.song.key].basePitch;\r\n\t\t\tkeyOffset = (forcedKey - keyBasePitch + 144) % 12;\r\n\t\t}\r\n\t\t\r\n\t\tconst pitch = octaveOffset + keyOffset + pitchOffset;\r\n\t\tif (pitch < 0 || pitch > Config.maxPitch) return null;\r\n\t\t\t\r\n\t\treturn pitch;\r\n\t}\r\n\t\r\n\tprivate _possiblyPlayingPitchesFromKeyboard: boolean = false;\r\n\t\r\n\tconstructor(private _doc: SongDocument) {\r\n\t\twindow.addEventListener(\"blur\", this._onWindowBlur);\r\n\t}\r\n\t\r\n\tprivate _onWindowBlur = (event: Event) => {\r\n\t\t// Browsers don't explicitly release keys when the page isn't in focus so let's just assume they're all released.\r\n\t\tif (this._possiblyPlayingPitchesFromKeyboard) {\r\n\t\t\tthis._doc.performance.clearAllPitches();\r\n\t\t\tthis._possiblyPlayingPitchesFromKeyboard = false;\r\n\t\t}\r\n\t}\r\n\t\r\n\tpublic handleKeyEvent(event: KeyboardEvent, pressed: boolean): void {\r\n\t\t// See: https://www.w3.org/TR/uievents-code/#key-alphanumeric-writing-system\r\n\t\tswitch (event.code) {\r\n\t\t\tcase \"Backquote\": this.handleKey(-1, 3, pressed); break;\r\n\t\t\tcase \"Digit1\": this.handleKey(0, 3, pressed); break;\r\n\t\t\tcase \"Digit2\": this.handleKey(1, 3, pressed); break;\r\n\t\t\tcase \"Digit3\": this.handleKey(2, 3, pressed); break;\r\n\t\t\tcase \"Digit4\": this.handleKey(3, 3, pressed); break;\r\n\t\t\tcase \"Digit5\": this.handleKey(4, 3, pressed); break;\r\n\t\t\tcase \"Digit6\": this.handleKey(5, 3, pressed); break;\r\n\t\t\tcase \"Digit7\": this.handleKey(6, 3, pressed); break;\r\n\t\t\tcase \"Digit8\": this.handleKey(7, 3, pressed); break;\r\n\t\t\tcase \"Digit9\": this.handleKey(8, 3, pressed); break;\r\n\t\t\tcase \"Digit0\": this.handleKey(9, 3, pressed); break;\r\n\t\t\tcase \"Minus\": this.handleKey(10, 3, pressed); break;\r\n\t\t\tcase \"Equal\": this.handleKey(11, 3, pressed); break;\r\n\t\t\tcase \"IntlYen\": this.handleKey(12, 3, pressed); break; // Present on Russian and Japanese keyboards.\r\n\t\t\t\r\n\t\t\tcase \"KeyQ\": this.handleKey(0, 2, pressed); break;\r\n\t\t\tcase \"KeyW\": this.handleKey(1, 2, pressed); break;\r\n\t\t\tcase \"KeyE\": this.handleKey(2, 2, pressed); break;\r\n\t\t\tcase \"KeyR\": this.handleKey(3, 2, pressed); break;\r\n\t\t\tcase \"KeyT\": this.handleKey(4, 2, pressed); break;\r\n\t\t\tcase \"KeyY\": this.handleKey(5, 2, pressed); break;\r\n\t\t\tcase \"KeyU\": this.handleKey(6, 2, pressed); break;\r\n\t\t\tcase \"KeyI\": this.handleKey(7, 2, pressed); break;\r\n\t\t\tcase \"KeyO\": this.handleKey(8, 2, pressed); break;\r\n\t\t\tcase \"KeyP\": this.handleKey(9, 2, pressed); break;\r\n\t\t\tcase \"BracketLeft\": this.handleKey(10, 2, pressed); break;\r\n\t\t\tcase \"BracketRight\": this.handleKey(11, 2, pressed); break;\r\n\t\t\tcase \"Backslash\":\r\n\t\t\t\t// Present on US keyboards... but on non-US keyboards it's also used at a different location, see \"IntlHash\" below. :/\r\n\t\t\t\tif (event.key == \"\\\\\" || event.key == \"|\") {\r\n\t\t\t\t\tthis.handleKey(12, 2, pressed);\r\n\t\t\t\t} else {\r\n\t\t\t\t\tthis.handleKey(11, 1, pressed);\r\n\t\t\t\t}\r\n\t\t\t\tbreak;\r\n\t\t\t\r\n\t\t\tcase \"KeyA\": this.handleKey(0, 1, pressed); break;\r\n\t\t\tcase \"KeyS\": this.handleKey(1, 1, pressed); break;\r\n\t\t\tcase \"KeyD\": this.handleKey(2, 1, pressed); break;\r\n\t\t\tcase \"KeyF\": this.handleKey(3, 1, pressed); break;\r\n\t\t\tcase \"KeyG\": this.handleKey(4, 1, pressed); break;\r\n\t\t\tcase \"KeyH\": this.handleKey(5, 1, pressed); break;\r\n\t\t\tcase \"KeyJ\": this.handleKey(6, 1, pressed); break;\r\n\t\t\tcase \"KeyK\": this.handleKey(7, 1, pressed); break;\r\n\t\t\tcase \"KeyL\": this.handleKey(8, 1, pressed); break;\r\n\t\t\tcase \"Semicolon\": this.handleKey(9, 1, pressed); break;\r\n\t\t\tcase \"Quote\": this.handleKey(10, 1, pressed); break;\r\n\t\t\tcase \"IntlHash\": this.handleKey(11, 1, pressed); break; // Present on non-US keyboards... but in practice it is actually represented as \"Backslash\" so this is obsolete. Oh well. :/\r\n\t\t\t\r\n\t\t\tcase \"IntlBackslash\": this.handleKey(-1, 0, pressed); break; // Present on Brazillian and many European keyboards.\r\n\t\t\tcase \"KeyZ\": this.handleKey(0, 0, pressed); break;\r\n\t\t\tcase \"KeyX\": this.handleKey(1, 0, pressed); break;\r\n\t\t\tcase \"KeyC\": this.handleKey(2, 0, pressed); break;\r\n\t\t\tcase \"KeyV\": this.handleKey(3, 0, pressed); break;\r\n\t\t\tcase \"KeyB\": this.handleKey(4, 0, pressed); break;\r\n\t\t\tcase \"KeyN\": this.handleKey(5, 0, pressed); break;\r\n\t\t\tcase \"KeyM\": this.handleKey(6, 0, pressed); break;\r\n\t\t\tcase \"Comma\": this.handleKey(7, 0, pressed); break;\r\n\t\t\tcase \"Period\": this.handleKey(8, 0, pressed); break;\r\n\t\t\tcase \"Slash\": this.handleKey(9, 0, pressed); break;\r\n\t\t\tcase \"IntlRo\": this.handleKey(10, 0, pressed); break; // Present on Brazillian and Japanese keyboards.\r\n\t\t\t\r\n\t\t\tdefault: return; //unhandled, don't prevent default.\r\n\t\t}\r\n\t\t\r\n\t\t// If the key event was handled as a note, prevent default behavior.\r\n\t\tevent.preventDefault();\r\n\t}\r\n\t\r\n\tpublic handleKey(x: number, y: number, pressed: boolean): void {\r\n\t\t\r\n\t\tconst isDrum: boolean = this._doc.song.getChannelIsNoise(this._doc.channel);\r\n\t\tif (isDrum) {\r\n\t\t\tif (x >= 0 && x < Config.drumCount) {\r\n\t\t\t\tif (pressed) {\r\n\t\t\t\t\tthis._doc.synth.preferLowerLatency = true;\r\n\t\t\t\t\tthis._doc.performance.addPerformedPitch(x);\r\n\t\t\t\t\tthis._possiblyPlayingPitchesFromKeyboard = true;\r\n\t\t\t\t} else {\r\n\t\t\t\t\tthis._doc.performance.removePerformedPitch(x);\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\treturn;\r\n\t\t}\r\n\t\t\r\n\t\tconst pitch: number | null = KeyboardLayout.keyPosToPitch(this._doc, x, y, this._doc.prefs.keyboardLayout);\r\n\t\t\r\n\t\tif (pitch != null) {\r\n\t\t\tif (pressed) {\r\n\t\t\t\tthis._doc.synth.preferLowerLatency = true;\r\n\t\t\t\tthis._doc.performance.addPerformedPitch(pitch);\r\n\t\t\t\tthis._possiblyPlayingPitchesFromKeyboard = true;\r\n\t\t\t} else {\r\n\t\t\t\tthis._doc.performance.removePerformedPitch(pitch);\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n}\r\n","// Copyright (c) 2012-2022 John Nesky and contributing authors, distributed under the MIT license, see accompanying the LICENSE.md file.\r\n\r\nimport { getLocalStorageItem, Chord, Transition, Config } from \"../synth/SynthConfig\";\r\nimport { NotePin, Note, makeNotePin, Pattern, Instrument } from \"../synth/synth\";\r\nimport { ColorConfig } from \"./ColorConfig\";\r\nimport { SongDocument } from \"./SongDocument\";\r\nimport { HTML, SVG } from \"imperative-html/dist/esm/elements-strict\";\r\nimport { ChangeSequence, UndoableChange } from \"./Change\";\r\nimport { ChangeChannelBar, ChangeDragSelectedNotes, ChangeEnsurePatternExists, ChangeNoteTruncate, ChangeNoteAdded, ChangePatternSelection, ChangePinTime, ChangeSizeBend, ChangePitchBend, ChangePitchAdded } from \"./changes\";\r\nimport { prettyNumber } from \"./EditorConfig\";\r\n\r\nfunction makeEmptyReplacementElement<T extends Node>(node: T): T {\r\n    const clone: T = <T>node.cloneNode(false);\r\n    node.parentNode!.replaceChild(clone, node);\r\n    return clone;\r\n}\r\n\r\nclass PatternCursor {\r\n    public valid: boolean = false;\r\n    public prevNote: Note | null = null;\r\n    public curNote: Note | null = null;\r\n    public nextNote: Note | null = null;\r\n    public pitch: number = 0;\r\n    public pitchIndex: number = -1;\r\n    public curIndex: number = 0;\r\n    public start: number = 0;\r\n    public end: number = 0;\r\n    public part: number = 0;\r\n    public exactPart: number = 0;\r\n    public nearPinIndex: number = 0;\r\n    public pins: NotePin[] = [];\r\n}\r\n\r\nexport class PatternEditor {\r\n    public controlMode: boolean = false;\r\n    public shiftMode: boolean = false;\r\n    private readonly _svgNoteBackground: SVGPatternElement = SVG.pattern({ id: \"patternEditorNoteBackground\" + this._barOffset, x: \"0\", y: \"0\", patternUnits: \"userSpaceOnUse\" });\r\n    private readonly _svgDrumBackground: SVGPatternElement = SVG.pattern({ id: \"patternEditorDrumBackground\" + this._barOffset, x: \"0\", y: \"0\", patternUnits: \"userSpaceOnUse\" });\r\n    private readonly _svgModBackground: SVGPatternElement = SVG.pattern({ id: \"patternEditorModBackground\" + this._barOffset, x: \"0\", y: \"0\", patternUnits: \"userSpaceOnUse\" });\r\n    private readonly _svgBackground: SVGRectElement = SVG.rect({ x: \"0\", y: \"0\", \"pointer-events\": \"none\", fill: \"url(#patternEditorNoteBackground\" + this._barOffset + \")\" });\r\n    private _svgNoteContainer: SVGSVGElement = SVG.svg();\r\n    private readonly _svgPlayhead: SVGRectElement = SVG.rect({ x: \"0\", y: \"0\", width: \"4\", fill: ColorConfig.playhead, \"pointer-events\": \"none\" });\r\n    private readonly _selectionRect: SVGRectElement = SVG.rect({ class: \"dashed-line dash-move\", fill: ColorConfig.boxSelectionFill, stroke: ColorConfig.hoverPreview, \"stroke-width\": 2, \"stroke-dasharray\": \"5, 3\", \"fill-opacity\": \"0.4\", \"pointer-events\": \"none\", visibility: \"hidden\" });\r\n    private readonly _svgPreview: SVGPathElement = SVG.path({ fill: \"none\", stroke: ColorConfig.hoverPreview, \"stroke-width\": \"2\", \"pointer-events\": \"none\" });\r\n    public modDragValueLabel: HTMLDivElement = HTML.div({ width: \"90\", \"text-anchor\": \"start\", contenteditable: \"true\", style: \"display: flex, justify-content: center; align-items:center; position:absolute; pointer-events: none;\", \"dominant-baseline\": \"central\", });\r\n    public _svg: SVGSVGElement = SVG.svg({ id:'firstImage', style: `background-image: url(${getLocalStorageItem(\"customTheme\", \"\")}); background-repeat: no-repeat; background-size: 100% 100%; background-color: ${ColorConfig.editorBackground}; touch-action: none; position: absolute;`, width: \"100%\", height: \"100%\" },\r\n\tSVG.defs(\r\n            this._svgNoteBackground,\r\n            this._svgDrumBackground,\r\n            this._svgModBackground,\r\n        ),\r\n        this._svgBackground,\r\n        this._selectionRect,\r\n        this._svgNoteContainer,\r\n        this._svgPreview,\r\n        this._svgPlayhead,\r\n    );\r\n    public readonly container: HTMLDivElement = HTML.div({ style: \"height: 100%; overflow:hidden; position: relative; flex-grow: 1;\" }, this._svg, this.modDragValueLabel);\r\n\r\n    private readonly _defaultModBorder: number = 34;\r\n    private readonly _backgroundPitchRows: SVGRectElement[] = [];\r\n    private readonly _backgroundDrumRow: SVGRectElement = SVG.rect();\r\n    private readonly _backgroundModRow: SVGRectElement = SVG.rect();\r\n\r\n    private _editorWidth: number;\r\n\r\n    private _modDragValueLabelLeft: number = 0;\r\n    private _modDragValueLabelTop: number = 0;\r\n    private _modDragValueLabelWidth: number = 0;\r\n    public editingModLabel: boolean = false;\r\n    private _modDragStartValue: number = 0;\r\n    private _modDragPin: NotePin;\r\n    private _modDragNote: Note;\r\n    private _modDragSetting: number;\r\n    private _modDragLowerBound: number = 0;\r\n    private _modDragUpperBound: number = 6;\r\n\r\n    private _editorHeight: number;\r\n    private _partWidth: number;\r\n    private _pitchHeight: number = -1;\r\n    private _pitchBorder: number;\r\n    private _pitchCount: number;\r\n    private _mouseX: number = 0;\r\n    private _mouseY: number = 0;\r\n    private _mouseDown: boolean = false;\r\n    private _mouseOver: boolean = false;\r\n    private _mouseDragging: boolean = false;\r\n    private _mouseHorizontal: boolean = false;\r\n    private _usingTouch: boolean = false;\r\n    private _copiedPinChannels: NotePin[][] = [];\r\n    private _copiedPins: NotePin[];\r\n    private _mouseXStart: number = 0;\r\n    private _mouseYStart: number = 0;\r\n    private _touchTime: number = 0;\r\n    private _shiftHeld: boolean = false;\r\n    private _dragConfirmed: boolean = false;\r\n    private _draggingStartOfSelection: boolean = false;\r\n    private _draggingEndOfSelection: boolean = false;\r\n    private _draggingSelectionContents: boolean = false;\r\n    private _dragTime: number = 0;\r\n    private _dragPitch: number = 0;\r\n    private _dragSize: number = 0;\r\n    private _dragVisible: boolean = false;\r\n    private _dragChange: UndoableChange | null = null;\r\n    private _changePatternSelection: UndoableChange | null = null;\r\n    private _lastChangeWasPatternSelection: boolean = false;\r\n    private _cursor: PatternCursor = new PatternCursor();\r\n    private _stashCursorPinVols: number[][] = [];\r\n    private _pattern: Pattern | null = null;\r\n    private _playheadX: number = 0.0;\r\n    private _octaveOffset: number = 0;\r\n    private _renderedWidth: number = -1;\r\n    private _renderedHeight: number = -1;\r\n    private _renderedBeatWidth: number = -1;\r\n    private _renderedPitchHeight: number = -1;\r\n    private _renderedFifths: boolean = false;\r\n    private _renderedDrums: boolean = false;\r\n    private _renderedMod: boolean = false;\r\n    private _renderedRhythm: number = -1;\r\n    private _renderedPitchChannelCount: number = -1;\r\n    private _renderedNoiseChannelCount: number = -1;\r\n    private _renderedModChannelCount: number = -1;\r\n    private _followPlayheadBar: number = -1;\r\n\r\n    constructor(private _doc: SongDocument, private _interactive: boolean, private _barOffset: number) {\r\n        for (let i: number = 0; i < Config.pitchesPerOctave; i++) {\r\n            const rectangle: SVGRectElement = SVG.rect();\r\n            rectangle.setAttribute(\"x\", \"1\");\r\n            rectangle.setAttribute(\"fill\", (i == 0) ? ColorConfig.tonic : ColorConfig.pitchBackground);\r\n            this._svgNoteBackground.appendChild(rectangle);\r\n            this._backgroundPitchRows[i] = rectangle;\r\n        }\r\n\r\n        this._backgroundDrumRow.setAttribute(\"x\", \"1\");\r\n        this._backgroundDrumRow.setAttribute(\"y\", \"1\");\r\n        this._backgroundDrumRow.setAttribute(\"fill\", ColorConfig.pitchBackground);\r\n        this._svgDrumBackground.appendChild(this._backgroundDrumRow);\r\n        this._backgroundModRow.setAttribute(\"fill\", ColorConfig.pitchBackground);\r\n        this._svgModBackground.appendChild(this._backgroundModRow);\r\n\r\n        if (this._interactive) {\r\n            this._updateCursorStatus();\r\n            this._updatePreview();\r\n            window.requestAnimationFrame(this._animatePlayhead);\r\n            this._svg.addEventListener(\"mousedown\", this._whenMousePressed);\r\n            document.addEventListener(\"mousemove\", this._whenMouseMoved);\r\n            document.addEventListener(\"mouseup\", this._whenCursorReleased);\r\n            this._svg.addEventListener(\"mouseover\", this._whenMouseOver);\r\n            this._svg.addEventListener(\"mouseout\", this._whenMouseOut);\r\n\r\n            this._svg.addEventListener(\"touchstart\", this._whenTouchPressed);\r\n            this._svg.addEventListener(\"touchmove\", this._whenTouchMoved);\r\n            this._svg.addEventListener(\"touchend\", this._whenCursorReleased);\r\n            this._svg.addEventListener(\"touchcancel\", this._whenCursorReleased);\r\n\r\n            this.modDragValueLabel.addEventListener(\"input\", this._validateModDragLabelInput);\r\n        } else {\r\n            this._svgPlayhead.style.display = \"none\";\r\n            this._svg.appendChild(SVG.rect({ x: 0, y: 0, width: 10000, height: 10000, fill: ColorConfig.editorBackground, style: \"opacity: 0.5;\" }));\r\n        }\r\n\r\n        this.resetCopiedPins();\r\n    }\r\n\r\n    private _validateModDragLabelInput = (event: Event): void => {\r\n        const label: HTMLDivElement = <HTMLDivElement>event.target;\r\n\r\n        // Special case - when user is typing a number between zero and min, allow it (the alternative is quite annoying, when min is nonzero)\r\n        let converted: number = Number(label.innerText);\r\n        if (!isNaN(converted) && converted >= 0 && converted < this._modDragLowerBound)\r\n            return;\r\n\r\n        // Another special case - allow \"\" e.g. the empty string and a single negative sign, but don't do anything about it.\r\n        if (label.innerText != \"\" && label.innerText != \"-\") {\r\n            // Force NaN results to be 0\r\n            if (isNaN(converted)) {\r\n                converted = this._modDragLowerBound;\r\n                label.innerText = \"\" + this._modDragLowerBound;\r\n            }\r\n\r\n            let presValue: number = Math.floor(Math.max(Number(this._modDragLowerBound), Math.min(Number(this._modDragUpperBound), converted)));\r\n            if (label.innerText != presValue + \"\")\r\n                label.innerText = presValue + \"\";\r\n\r\n            // This is me being too lazy to fiddle with the css to get it to align center.\r\n            let xOffset: number = (+(presValue >= 10.0)) + (+(presValue >= 100.0)) + (+(presValue < 0.0)) + (+(presValue <= -10.0));\r\n            this._modDragValueLabelLeft = +prettyNumber(Math.max(Math.min(this._editorWidth - 10 - xOffset * 8, this._partWidth * (this._modDragNote.start + this._modDragPin.time) - 4 - xOffset * 4), 2));\r\n            this.modDragValueLabel.style.setProperty(\"left\", \"\" + this._modDragValueLabelLeft + \"px\");\r\n\r\n            const sequence: ChangeSequence = new ChangeSequence();\r\n            this._dragChange = sequence;\r\n            this._doc.setProspectiveChange(this._dragChange);\r\n\r\n            sequence.append(new ChangeSizeBend(this._doc, this._modDragNote, this._modDragPin.time, presValue- Config.modulators[this._modDragSetting].convertRealFactor, this._modDragPin.interval, this.shiftMode));\r\n\r\n        }\r\n    }\r\n\r\n    private _getMaxDivision(): number {\r\n        const rhythmStepsPerBeat: number = Config.rhythms[this._doc.song.rhythm].stepsPerBeat;\r\n        if (rhythmStepsPerBeat % 4 == 0) {\r\n            // Beat is divisible by 2 (and 4).\r\n            return Config.partsPerBeat / 2;\r\n        } else if (rhythmStepsPerBeat % 3 == 0) {\r\n            // Beat is divisible by 3.\r\n            return Config.partsPerBeat / 3;\r\n        } else if (rhythmStepsPerBeat % 2 == 0) {\r\n            // Beat is divisible by 2.\r\n            return Config.partsPerBeat / 2;\r\n        }\r\n        return Config.partsPerBeat;\r\n    }\r\n\r\n    private _getMinDivision(): number {\r\n        return Config.partsPerBeat / Config.rhythms[this._doc.song.rhythm].stepsPerBeat;\r\n    }\r\n\r\n    private _snapToMinDivision(input: number): number {\r\n        const minDivision: number = this._getMinDivision();\r\n        return Math.floor(input / minDivision) * minDivision;\r\n    }\r\n\r\n    private _updateCursorStatus(): void {\r\n        this._cursor = new PatternCursor();\r\n\r\n        if (this._mouseX < 0 || this._mouseX > this._editorWidth || this._mouseY < 0 || this._mouseY > this._editorHeight || this._pitchHeight <= 0) return;\r\n\r\n        const minDivision: number = this._getMinDivision();\r\n        this._cursor.exactPart = this._mouseX / this._partWidth;\r\n        this._cursor.part =\r\n            Math.floor(\r\n                Math.max(0,\r\n                    Math.min(this._doc.song.beatsPerBar * Config.partsPerBeat - minDivision, this._cursor.exactPart)\r\n                )\r\n                / minDivision) * minDivision;\r\n\r\n        let foundNote: boolean = false;\r\n\r\n        if (this._pattern != null) {\r\n            for (const note of this._pattern.notes) {\r\n                if (note.end <= this._cursor.exactPart) {\r\n                    if (this._doc.song.getChannelIsMod(this._doc.channel)) {\r\n                        if (note.pitches[0] == Math.floor(this._findMousePitch(this._mouseY))) {\r\n                            this._cursor.prevNote = note;\r\n                        }\r\n                        if (!foundNote)\r\n                            this._cursor.curIndex++;\r\n\r\n                    } else {\r\n                        this._cursor.prevNote = note;\r\n                        this._cursor.curIndex++;\r\n                    }\r\n                } else if (note.start <= this._cursor.exactPart && note.end > this._cursor.exactPart) {\r\n                    if (this._doc.song.getChannelIsMod(this._doc.channel)) {\r\n                        if (note.pitches[0] == Math.floor(this._findMousePitch(this._mouseY))) {\r\n                            this._cursor.curNote = note;\r\n                            foundNote = true;\r\n                        }\r\n                        // Only increment index if the sought note has been found... or if this note truly starts before the other\r\n                        else if (!foundNote || (this._cursor.curNote != null && note.start < this._cursor.curNote.start))\r\n                            this._cursor.curIndex++;\r\n                    }\r\n                    else {\r\n                        this._cursor.curNote = note;\r\n                    }\r\n                } else if (note.start > this._cursor.exactPart) {\r\n                    if (this._doc.song.getChannelIsMod(this._doc.channel)) {\r\n                        if (note.pitches[0] == Math.floor(this._findMousePitch(this._mouseY))) {\r\n                            this._cursor.nextNote = note;\r\n                            break;\r\n                        }\r\n                    } else {\r\n                        this._cursor.nextNote = note;\r\n                        break;\r\n                    }\r\n                }\r\n            }\r\n\r\n            if (this._doc.song.getChannelIsMod(this._doc.channel) && !this.editingModLabel) {\r\n\r\n                if (this._pattern.notes[this._cursor.curIndex] != null && this._cursor.curNote != null) {\r\n\r\n                    let pinIdx: number = 0;\r\n\r\n                    while (this._cursor.curNote.start + this._cursor.curNote.pins[pinIdx].time < this._cursor.exactPart && pinIdx < this._cursor.curNote.pins.length) {\r\n                        pinIdx++;\r\n                    }\r\n                    // Decide if the previous pin is closer\r\n                    if (pinIdx > 0) {\r\n                        if (this._cursor.curNote.start + this._cursor.curNote.pins[pinIdx].time - this._cursor.exactPart > this._cursor.exactPart - (this._cursor.curNote.start + this._cursor.curNote.pins[pinIdx - 1].time)) {\r\n                            pinIdx--;\r\n                        }\r\n                    }\r\n\r\n                    this.modDragValueLabel.style.setProperty(\"color\", \"#666688\");\r\n                    this.modDragValueLabel.style.setProperty(\"display\", \"\");\r\n                    const mod: number = Math.max( 0, Config.modCount - 1 - this._cursor.curNote.pitches[0]);\r\n\r\n                    let setting: number = this._doc.song.channels[this._doc.channel].instruments[this._doc.getCurrentInstrument(this._barOffset)].modulators[mod];\r\n\r\n                    let presValue: number = this._cursor.curNote.pins[pinIdx].size + Config.modulators[setting].convertRealFactor;\r\n\r\n                    // This is me being too lazy to fiddle with the css to get it to align center.\r\n                    let xOffset: number = (+(presValue >= 10.0)) + (+(presValue >= 100.0)) + (+(presValue < 0.0)) + (+(presValue <= -10.0));\r\n\r\n                    this._modDragValueLabelWidth = 8 + xOffset * 8;\r\n                    this._modDragValueLabelLeft = +prettyNumber(Math.max(Math.min(this._editorWidth - 10 - xOffset * 8, this._partWidth * (this._cursor.curNote.start + this._cursor.curNote.pins[pinIdx].time) - 4 - xOffset * 4), 2));\r\n                    this._modDragValueLabelTop = +prettyNumber(this._pitchToPixelHeight(this._cursor.curNote.pitches[0] - this._octaveOffset) - 17 - (this._pitchHeight - this._pitchBorder) / 2);\r\n\r\n                    this._modDragStartValue = this._cursor.curNote.pins[pinIdx].size;\r\n                    this._modDragNote = this._cursor.curNote;\r\n                    this._modDragPin = this._cursor.curNote.pins[pinIdx];\r\n                    this._modDragLowerBound = Config.modulators[setting].convertRealFactor;\r\n                    this._modDragUpperBound = Config.modulators[setting].convertRealFactor + Config.modulators[setting].maxRawVol;\r\n                    this._modDragSetting = setting;\r\n\r\n                    this.modDragValueLabel.style.setProperty(\"left\", \"\" + this._modDragValueLabelLeft + \"px\");\r\n                    this.modDragValueLabel.style.setProperty(\"top\", \"\" + this._modDragValueLabelTop + \"px\");\r\n                    this.modDragValueLabel.textContent = \"\" + presValue;\r\n\r\n                }\r\n                else {\r\n                    this.modDragValueLabel.style.setProperty(\"display\", \"none\");\r\n                    this.modDragValueLabel.style.setProperty(\"pointer-events\", \"none\");\r\n                    this.modDragValueLabel.setAttribute(\"contenteditable\", \"false\");\r\n                }\r\n            }\r\n            else if (!this.editingModLabel) {\r\n                this.modDragValueLabel.style.setProperty(\"display\", \"none\");\r\n                this.modDragValueLabel.style.setProperty(\"pointer-events\", \"none\");\r\n                this.modDragValueLabel.setAttribute(\"contenteditable\", \"false\");\r\n            }\r\n        }\r\n        else {\r\n            this.modDragValueLabel.style.setProperty(\"display\", \"none\");\r\n            this.modDragValueLabel.style.setProperty(\"pointer-events\", \"none\");\r\n            this.modDragValueLabel.setAttribute(\"contenteditable\", \"false\");\r\n        }\r\n\r\n        let mousePitch: number = this._findMousePitch(this._mouseY);\r\n\r\n        if (this._cursor.curNote != null) {\r\n\r\n            this._cursor.start = this._cursor.curNote.start;\r\n            this._cursor.end = this._cursor.curNote.end;\r\n            this._cursor.pins = this._cursor.curNote.pins;\r\n\r\n            let interval: number = 0;\r\n            let error: number = 0;\r\n            let prevPin: NotePin;\r\n            let nextPin: NotePin = this._cursor.curNote.pins[0];\r\n            for (let j: number = 1; j < this._cursor.curNote.pins.length; j++) {\r\n                prevPin = nextPin;\r\n                nextPin = this._cursor.curNote.pins[j];\r\n                const leftSide: number = this._partWidth * (this._cursor.curNote.start + prevPin.time);\r\n                const rightSide: number = this._partWidth * (this._cursor.curNote.start + nextPin.time);\r\n                if (this._mouseX > rightSide) continue;\r\n                if (this._mouseX < leftSide) throw new Error();\r\n                const intervalRatio: number = (this._mouseX - leftSide) / (rightSide - leftSide);\r\n                const arc: number = Math.sqrt(1.0 / Math.sqrt(4.0) - Math.pow(intervalRatio - 0.5, 2.0)) - 0.5;\r\n                const bendHeight: number = Math.abs(nextPin.interval - prevPin.interval);\r\n                interval = prevPin.interval * (1.0 - intervalRatio) + nextPin.interval * intervalRatio;\r\n                error = arc * bendHeight + 0.95;\r\n                break;\r\n            }\r\n\r\n            let minInterval: number = Number.MAX_VALUE;\r\n            let maxInterval: number = -Number.MAX_VALUE;\r\n            let bestDistance: number = Number.MAX_VALUE;\r\n            for (const pin of this._cursor.curNote.pins) {\r\n                if (minInterval > pin.interval) minInterval = pin.interval;\r\n                if (maxInterval < pin.interval) maxInterval = pin.interval;\r\n                const pinDistance: number = Math.abs(this._cursor.curNote.start + pin.time - this._mouseX / this._partWidth);\r\n                if (bestDistance > pinDistance) {\r\n                    bestDistance = pinDistance;\r\n                    this._cursor.nearPinIndex = this._cursor.curNote.pins.indexOf(pin);\r\n                }\r\n            }\r\n\r\n            mousePitch -= interval;\r\n            const maxPitch: number = this._doc.song.getChannelIsNoise(this._doc.channel) ? Config.drumCount - 1 :\r\n                    this._doc.song.getChannelIsMod(this._doc.channel) ? Config.modCount - 1 : Config.maxPitch;\r\n            this._cursor.pitch = this._snapToPitch(mousePitch, -minInterval, maxPitch - maxInterval);\r\n\r\n            // Snap to nearby existing note if present.\r\n            if (!this._doc.song.getChannelIsNoise(this._doc.channel) && !this._doc.song.getChannelIsMod(this._doc.channel)) {\r\n                let nearest: number = error;\r\n                for (let i: number = 0; i < this._cursor.curNote.pitches.length; i++) {\r\n                    const distance: number = Math.abs(this._cursor.curNote.pitches[i] - mousePitch + 0.5);\r\n                    if (distance > nearest) continue;\r\n                    nearest = distance;\r\n                    this._cursor.pitch = this._cursor.curNote.pitches[i];\r\n                }\r\n            }\r\n\r\n            for (let i: number = 0; i < this._cursor.curNote.pitches.length; i++) {\r\n                if (this._cursor.curNote.pitches[i] == this._cursor.pitch) {\r\n                    this._cursor.pitchIndex = i;\r\n                    break;\r\n                }\r\n            }\r\n        } else {\r\n\r\n            const maxPitch: number = this._doc.song.getChannelIsNoise(this._doc.channel) ? Config.drumCount - 1 :\r\n                this._doc.song.getChannelIsMod(this._doc.channel) ? Config.modCount : Config.maxPitch;\r\n            this._cursor.pitch = this._snapToPitch(mousePitch, 0, maxPitch);\r\n            const defaultLength: number = this._copiedPins[this._copiedPins.length - 1].time;\r\n            const fullBeats: number = Math.floor(this._cursor.part / Config.partsPerBeat);\r\n            const maxDivision: number = this._getMaxDivision();\r\n            const modMouse: number = this._cursor.part % Config.partsPerBeat;\r\n            if (defaultLength == 1) {\r\n                this._cursor.start = this._cursor.part;\r\n            } else if (defaultLength > Config.partsPerBeat) {\r\n                this._cursor.start = fullBeats * Config.partsPerBeat;\r\n            } else if (defaultLength == Config.partsPerBeat) {\r\n                this._cursor.start = fullBeats * Config.partsPerBeat;\r\n                if (maxDivision < Config.partsPerBeat && modMouse > maxDivision) {\r\n                    this._cursor.start += Math.floor(modMouse / maxDivision) * maxDivision;\r\n                }\r\n            } else {\r\n                this._cursor.start = fullBeats * Config.partsPerBeat;\r\n                let division = Config.partsPerBeat % defaultLength == 0 ? defaultLength : Math.min(defaultLength, maxDivision);\r\n                while (division < maxDivision && Config.partsPerBeat % division != 0) {\r\n                    division++;\r\n                }\r\n                this._cursor.start += Math.floor(modMouse / division) * division;\r\n            }\r\n            this._cursor.end = this._cursor.start + defaultLength;\r\n            let forceStart: number = 0;\r\n            let forceEnd: number = this._doc.song.beatsPerBar * Config.partsPerBeat;\r\n            if (this._cursor.prevNote != null) {\r\n                forceStart = this._cursor.prevNote.end;\r\n            }\r\n            if (this._cursor.nextNote != null) {\r\n                forceEnd = this._cursor.nextNote.start;\r\n            }\r\n            if (this._cursor.start < forceStart) {\r\n                this._cursor.start = forceStart;\r\n                this._cursor.end = this._cursor.start + defaultLength;\r\n                if (this._cursor.end > forceEnd) {\r\n                    this._cursor.end = forceEnd;\r\n                }\r\n            } else if (this._cursor.end > forceEnd) {\r\n                this._cursor.end = forceEnd;\r\n                this._cursor.start = this._cursor.end - defaultLength;\r\n                if (this._cursor.start < forceStart) {\r\n                    this._cursor.start = forceStart;\r\n                }\r\n            }\r\n\r\n            if (this._cursor.end - this._cursor.start == defaultLength) {\r\n                this._copiedPins = this._copiedPinChannels[this._doc.channel];\r\n                this._cursor.pins = this._copiedPins;\r\n            } else {\r\n                this._cursor.pins = [];\r\n                for (const oldPin of this._copiedPins) {\r\n                    if (oldPin.time <= this._cursor.end - this._cursor.start) {\r\n                        this._cursor.pins.push(makeNotePin(0, oldPin.time, oldPin.size));\r\n                        if (oldPin.time == this._cursor.end - this._cursor.start) break;\r\n                    } else {\r\n                        this._cursor.pins.push(makeNotePin(0, this._cursor.end - this._cursor.start, oldPin.size));\r\n                        break;\r\n                    }\r\n                }\r\n            }\r\n\r\n            if (this._doc.song.getChannelIsMod(this._doc.channel)) {\r\n\r\n                this._cursor.pitch = Math.max(0, Math.min(Config.modCount - 1, this._cursor.pitch));\r\n\r\n                // Return cursor to stashed cursor volumes (so pins aren't destroyed by moving the preview around several volume scales.)\r\n                if (this._stashCursorPinVols != null && this._stashCursorPinVols[this._doc.channel] != null) {\r\n                    for (let pin: number = 0; pin < this._cursor.pins.length; pin++) {\r\n                        this._cursor.pins[pin].size = this._stashCursorPinVols[this._doc.channel][pin];\r\n                    }\r\n                }\r\n\r\n                // Scale volume of copied pin to cap for this row\r\n                let maxHeight: number = this._doc.song.getVolumeCap(this._doc.song.getChannelIsMod(this._doc.channel), this._doc.channel, this._doc.getCurrentInstrument(this._barOffset), this._cursor.pitch);\r\n                let maxFoundHeight: number = 0;\r\n                for (const pin of this._cursor.pins) {\r\n                    if (pin.size > maxFoundHeight) {\r\n                        maxFoundHeight = pin.size;\r\n                    }\r\n                }\r\n                // Apply scaling if the max height is below any pin setting.\r\n                if (maxFoundHeight > maxHeight) {\r\n                    for (const pin of this._cursor.pins) {\r\n                        pin.size = Math.round(pin.size * (maxHeight / maxFoundHeight));\r\n                    }\r\n                }\r\n            }\r\n\r\n        }\r\n\r\n        this._cursor.valid = true;\r\n\r\n    }\r\n\r\n    private _cursorIsInSelection(): boolean {\r\n        return this._cursor.valid && this._doc.selection.patternSelectionActive && this._doc.selection.patternSelectionStart <= this._cursor.exactPart && this._cursor.exactPart <= this._doc.selection.patternSelectionEnd;\r\n    }\r\n\r\n    private _cursorAtStartOfSelection(): boolean {\r\n        return this._cursor.valid && this._doc.selection.patternSelectionActive && this._cursor.pitchIndex == -1 && this._doc.selection.patternSelectionStart - 3 <= this._cursor.exactPart && this._cursor.exactPart <= this._doc.selection.patternSelectionStart + 1.25;\r\n    }\r\n\r\n    private _cursorAtEndOfSelection(): boolean {\r\n        return this._cursor.valid && this._doc.selection.patternSelectionActive && this._cursor.pitchIndex == -1 && this._doc.selection.patternSelectionEnd - 1.25 <= this._cursor.exactPart && this._cursor.exactPart <= this._doc.selection.patternSelectionEnd + 3;\r\n    }\r\n\r\n    private _findMousePitch(pixelY: number): number {\r\n        return Math.max(0, Math.min(this._pitchCount - 1, this._pitchCount - (pixelY / this._pitchHeight))) + this._octaveOffset;\r\n    }\r\n\r\n    private _snapToPitch(guess: number, min: number, max: number): number {\r\n        if (guess < min) guess = min;\r\n        if (guess > max) guess = max;\r\n        const scale: ReadonlyArray<boolean> = this._doc.prefs.notesOutsideScale ? Config.scales.dictionary[\"Free\"].flags : this._doc.song.scale == Config.scales.dictionary[\"Custom\"].index ? this._doc.song.scaleCustom : Config.scales[this._doc.song.scale].flags;\r\n        if (scale[Math.floor(guess) % Config.pitchesPerOctave] || this._doc.song.getChannelIsNoise(this._doc.channel) || this._doc.song.getChannelIsMod(this._doc.channel)) {\r\n\r\n            return Math.floor(guess);\r\n        } else {\r\n            let topPitch: number = Math.floor(guess) + 1;\r\n            let bottomPitch: number = Math.floor(guess) - 1;\r\n            while (!scale[topPitch % Config.pitchesPerOctave]) {\r\n                topPitch++;\r\n            }\r\n            while (!scale[(bottomPitch) % Config.pitchesPerOctave]) {\r\n                bottomPitch--;\r\n            }\r\n            if (topPitch > max) {\r\n                if (bottomPitch < min) {\r\n                    return min;\r\n                } else {\r\n                    return bottomPitch;\r\n                }\r\n            } else if (bottomPitch < min) {\r\n                return topPitch;\r\n            }\r\n            let topRange: number = topPitch;\r\n            let bottomRange: number = bottomPitch + 1;\r\n            if (topPitch % Config.pitchesPerOctave == 0 || topPitch % Config.pitchesPerOctave == 7) {\r\n                topRange -= 0.5;\r\n            }\r\n            if (bottomPitch % Config.pitchesPerOctave == 0 || bottomPitch % Config.pitchesPerOctave == 7) {\r\n                bottomRange += 0.5;\r\n            }\r\n            return guess - bottomRange > topRange - guess ? topPitch : bottomPitch;\r\n        }\r\n    }\r\n\r\n    private _copyPins(note: Note): void {\r\n        this._copiedPins = [];\r\n        for (const oldPin of note.pins) {\r\n            this._copiedPins.push(makeNotePin(0, oldPin.time, oldPin.size));\r\n        }\r\n        for (let i: number = 1; i < this._copiedPins.length - 1;) {\r\n            if (this._copiedPins[i - 1].size == this._copiedPins[i].size &&\r\n                this._copiedPins[i].size == this._copiedPins[i + 1].size) {\r\n                this._copiedPins.splice(i, 1);\r\n            } else {\r\n                i++;\r\n            }\r\n        }\r\n        this._copiedPinChannels[this._doc.channel] = this._copiedPins;\r\n\r\n        this._stashCursorPinVols[this._doc.channel] = [];\r\n        for (let pin: number = 0; pin < this._copiedPins.length; pin++) {\r\n            this._stashCursorPinVols[this._doc.channel].push(this._copiedPins[pin].size);\r\n        }\r\n    }\r\n\r\n    public movePlayheadToMouse(): boolean {\r\n\t\tif (this._mouseOver) {\r\n\t\t\tthis._doc.synth.playhead = this._doc.bar + this._barOffset + (this._mouseX / this._editorWidth);\r\n\t\t\treturn true;\r\n\t\t}\r\n\t\treturn false;\r\n\t}\r\n\r\n    public resetCopiedPins = (): void => {\r\n        const maxDivision: number = this._getMaxDivision();\r\n        let cap: number = this._doc.song.getVolumeCap(false);\r\n        this._copiedPinChannels.length = this._doc.song.getChannelCount();\r\n        this._stashCursorPinVols.length = this._doc.song.getChannelCount();\r\n        for (let i: number = 0; i < this._doc.song.pitchChannelCount; i++) {\r\n            this._copiedPinChannels[i] = [makeNotePin(0, 0, cap), makeNotePin(0, maxDivision, cap)];\r\n            this._stashCursorPinVols[i] = [cap, cap];\r\n        }\r\n        for (let i: number = this._doc.song.pitchChannelCount; i < this._doc.song.pitchChannelCount + this._doc.song.noiseChannelCount; i++) {\r\n            this._copiedPinChannels[i] = [makeNotePin(0, 0, cap), makeNotePin(0, maxDivision, 0)];\r\n            this._stashCursorPinVols[i] = [cap, 0];\r\n        }\r\n        for (let i: number = this._doc.song.pitchChannelCount + this._doc.song.noiseChannelCount; i < this._doc.song.getChannelCount(); i++) {\r\n            this._copiedPinChannels[i] = [makeNotePin(0, 0, cap), makeNotePin(0, maxDivision, 0)];\r\n            this._stashCursorPinVols[i] = [cap, 0];\r\n        }\r\n    }\r\n\r\n    private _animatePlayhead = (timestamp: number): void => {\r\n\r\n        if (this._usingTouch && !this.shiftMode && !this._mouseDragging && this._mouseDown && performance.now() > this._touchTime + 1000 && this._cursor.valid && this._doc.lastChangeWas(this._dragChange)) {\r\n            // On a mobile device, the pattern editor supports using a long stationary touch to activate selection.\r\n            this._dragChange!.undo();\r\n            this._shiftHeld = true;\r\n            this._dragConfirmed = false;\r\n            this._whenCursorPressed();\r\n            // The full interface is usually only rerendered in response to user input events, not animation events, but in this case go ahead and rerender everything.\r\n            this._doc.notifier.notifyWatchers();\r\n        }\r\n\r\n        const playheadBar: number = Math.floor(this._doc.synth.playhead);\r\n\r\n        if (this._doc.synth.playing && ((this._pattern != null && this._doc.song.getPattern(this._doc.channel, Math.floor(this._doc.synth.playhead)) == this._pattern) || Math.floor(this._doc.synth.playhead) == this._doc.bar + this._barOffset)) {\r\n            this._svgPlayhead.setAttribute(\"visibility\", \"visible\");\r\n            const modPlayhead: number = this._doc.synth.playhead - playheadBar;\r\n            if (Math.abs(modPlayhead - this._playheadX) > 0.1) {\r\n                this._playheadX = modPlayhead;\r\n            } else {\r\n                this._playheadX += (modPlayhead - this._playheadX) * 0.2;\r\n            }\r\n            this._svgPlayhead.setAttribute(\"x\", \"\" + prettyNumber(this._playheadX * this._editorWidth - 2));\r\n        } else {\r\n            this._svgPlayhead.setAttribute(\"visibility\", \"hidden\");\r\n        }\r\n\r\n        if (this._doc.synth.playing && (this._doc.synth.recording || this._doc.prefs.autoFollow) && this._followPlayheadBar != playheadBar) {\r\n            // When autofollow is enabled, select the current bar (but don't record it in undo history).\r\n            new ChangeChannelBar(this._doc, this._doc.channel, playheadBar);\r\n            // The full interface is usually only rerendered in response to user input events, not animation events, but in this case go ahead and rerender everything.\r\n            this._doc.notifier.notifyWatchers();\r\n        }\r\n        this._followPlayheadBar = playheadBar;\r\n\r\n        if (this._doc.currentPatternIsDirty) {\r\n            this._redrawNotePatterns();\r\n        }\r\n\r\n        window.requestAnimationFrame(this._animatePlayhead);\r\n    }\r\n\r\n    private _whenMouseOver = (event: MouseEvent): void => {\r\n        if (this._mouseOver) return;\r\n        this._mouseOver = true;\r\n        this._usingTouch = false;\r\n    }\r\n\r\n    private _whenMouseOut = (event: MouseEvent): void => {\r\n        if (!this._mouseOver) return;\r\n        this._mouseOver = false;\r\n    }\r\n\r\n    private _whenMousePressed = (event: MouseEvent): void => {\r\n        event.preventDefault();\r\n        const boundingRect: ClientRect = this._svg.getBoundingClientRect();\r\n        this._mouseX = ((event.clientX || event.pageX) - boundingRect.left) * this._editorWidth / (boundingRect.right - boundingRect.left);\r\n        this._mouseY = ((event.clientY || event.pageY) - boundingRect.top) * this._editorHeight / (boundingRect.bottom - boundingRect.top);\r\n        if (isNaN(this._mouseX)) this._mouseX = 0;\r\n        if (isNaN(this._mouseY)) this._mouseY = 0;\r\n        this._usingTouch = false;\r\n        this._shiftHeld = event.shiftKey;\r\n        this._dragConfirmed = false;\r\n        this._whenCursorPressed();\r\n    }\r\n\r\n    private _whenTouchPressed = (event: TouchEvent): void => {\r\n        event.preventDefault();\r\n        const boundingRect: ClientRect = this._svg.getBoundingClientRect();\r\n        this._mouseX = (event.touches[0].clientX - boundingRect.left) * this._editorWidth / (boundingRect.right - boundingRect.left);\r\n        this._mouseY = (event.touches[0].clientY - boundingRect.top) * this._editorHeight / (boundingRect.bottom - boundingRect.top);\r\n        if (isNaN(this._mouseX)) this._mouseX = 0;\r\n        if (isNaN(this._mouseY)) this._mouseY = 0;\r\n        this._usingTouch = true;\r\n        this._shiftHeld = event.shiftKey;\r\n        this._dragConfirmed = false;\r\n        this._touchTime = performance.now();\r\n        this._whenCursorPressed();\r\n    }\r\n\r\n    public stopEditingModLabel(discardChanges: boolean) {\r\n        if (this.editingModLabel) {\r\n            this.editingModLabel = false;\r\n            this.modDragValueLabel.style.setProperty(\"pointer-events\", \"none\");\r\n\r\n            if (window.getSelection) {\r\n                let sel: Selection | null = window.getSelection();\r\n                if (sel != null)\r\n                    sel.removeAllRanges();\r\n            }\r\n            // Return pin to its state before text editing\r\n            if (discardChanges) {\r\n                this._modDragPin.size = this._modDragStartValue;\r\n\r\n                let presValue: number = this._modDragStartValue + Config.modulators[this._modDragSetting].convertRealFactor;\r\n\r\n                // This is me being too lazy to fiddle with the css to get it to align center.\r\n                let xOffset: number = (+(presValue >= 10.0)) + (+(presValue >= 100.0)) + (+(presValue < 0.0)) + (+(presValue <= -10.0));\r\n                this._modDragValueLabelLeft = +prettyNumber(Math.max(Math.min(this._editorWidth - 10 - xOffset * 8, this._partWidth * (this._modDragNote.start + this._modDragPin.time) - 4 - xOffset * 4), 2));\r\n                this.modDragValueLabel.style.setProperty(\"left\", \"\" + this._modDragValueLabelLeft + \"px\");\r\n\r\n                const sequence: ChangeSequence = new ChangeSequence();\r\n                this._dragChange = sequence;\r\n                this._doc.setProspectiveChange(this._dragChange);\r\n\r\n                sequence.append(new ChangeSizeBend(this._doc, this._modDragNote, this._modDragPin.time, this._modDragStartValue, this._modDragPin.interval, this.shiftMode));\r\n\r\n                this._dragChange = null;\r\n            }\r\n\r\n            const continuousState: boolean = this._doc.lastChangeWas(this._dragChange);\r\n            if (continuousState) {\r\n                if (this._dragChange != null) {\r\n                    this._doc.record(this._dragChange);\r\n                    this._dragChange = null;\r\n                }\r\n            }\r\n        }\r\n    }\r\n\r\n    private _whenCursorPressed(): void {\r\n        // Check for click on mod value label\r\n        if (this._doc.song.getChannelIsMod(this._doc.channel) && this.modDragValueLabel.style.getPropertyValue(\"display\") != \"none\" &&\r\n            this._mouseX > +this._modDragValueLabelLeft - 6 &&\r\n            this._mouseX < +this._modDragValueLabelLeft + this._modDragValueLabelWidth + 6 &&\r\n            this._mouseY > +this._modDragValueLabelTop - 8 &&\r\n            this._mouseY < +this._modDragValueLabelTop + 11) {\r\n            // Mod value label clicked, select it\r\n            this.modDragValueLabel.style.setProperty(\"pointer-events\", \"fill\");\r\n            this.modDragValueLabel.setAttribute(\"contenteditable\", \"true\");\r\n            if (window.getSelection) {\r\n                let sel: Selection | null = window.getSelection();\r\n                if (sel != null)\r\n                    sel.selectAllChildren(this.modDragValueLabel);\r\n            }\r\n\r\n            window.setTimeout(() => { this.modDragValueLabel.focus(); });\r\n            this.editingModLabel = true;\r\n        } else {\r\n            this.stopEditingModLabel(false);\r\n            if (this._doc.prefs.enableNotePreview) this._doc.synth.maintainLiveInput();\r\n            this._mouseDown = true;\r\n            this._mouseXStart = this._mouseX;\r\n            this._mouseYStart = this._mouseY;\r\n            this._updateCursorStatus();\r\n            this._updatePreview();\r\n            const sequence: ChangeSequence = new ChangeSequence();\r\n            this._dragChange = sequence;\r\n            this._lastChangeWasPatternSelection = this._doc.lastChangeWas(this._changePatternSelection);\r\n            this._doc.setProspectiveChange(this._dragChange);\r\n\r\n            if (this._cursorAtStartOfSelection()) {\r\n                this._draggingStartOfSelection = true;\r\n            } else if (this._cursorAtEndOfSelection()) {\r\n                this._draggingEndOfSelection = true;\r\n            } else if (this._shiftHeld) {\r\n                if ((this._doc.selection.patternSelectionActive && this._cursor.pitchIndex == -1) || this._cursorIsInSelection()) {\r\n                    sequence.append(new ChangePatternSelection(this._doc, 0, 0));\r\n                } else {\r\n                    if (this._cursor.curNote != null) {\r\n                        sequence.append(new ChangePatternSelection(this._doc, this._cursor.curNote.start, this._cursor.curNote.end));\r\n                    } else {\r\n                        const start: number = Math.max(0, Math.min((this._doc.song.beatsPerBar - 1) * Config.partsPerBeat, Math.floor(this._cursor.exactPart / Config.partsPerBeat) * Config.partsPerBeat));\r\n                        const end: number = start + Config.partsPerBeat;\r\n                        sequence.append(new ChangePatternSelection(this._doc, start, end));\r\n                    }\r\n                }\r\n            } else if (this._cursorIsInSelection()) {\r\n                this._draggingSelectionContents = true;\r\n            } else if (this._cursor.valid && this._cursor.curNote == null) {\r\n                sequence.append(new ChangePatternSelection(this._doc, 0, 0));\r\n\r\n                // If clicking in empty space, the result will be adding a note,\r\n                // so we can safely add it immediately. Note that if clicking on\r\n                // or near an existing note, the result will depend on whether\r\n                // a drag follows, so we couldn't add the note yet without being\r\n                // confusing.\r\n\r\n                const note: Note = new Note(this._cursor.pitch, this._cursor.start, this._cursor.end, Config.noteSizeMax, this._doc.song.getChannelIsNoise(this._doc.channel));\r\n                note.pins = [];\r\n                for (const oldPin of this._cursor.pins) {\r\n                    note.pins.push(makeNotePin(0, oldPin.time, oldPin.size));\r\n                }\r\n                sequence.append(new ChangeEnsurePatternExists(this._doc, this._doc.channel, this._doc.bar));\r\n                const pattern: Pattern | null = this._doc.getCurrentPattern(this._barOffset);\r\n                if (pattern == null) throw new Error();\r\n                sequence.append(new ChangeNoteAdded(this._doc, pattern, note, this._cursor.curIndex));\r\n\r\n                if (this._doc.prefs.enableNotePreview && !this._doc.synth.playing) {\r\n                    // Play the new note out loud if enabled.\r\n                    const duration: number = Math.min(Config.partsPerBeat, this._cursor.end - this._cursor.start);\r\n                    this._doc.performance.setTemporaryPitches([this._cursor.pitch], duration);\r\n                }\r\n            }\r\n            this._updateSelection();\r\n        }\r\n    }\r\n\r\n    private _whenMouseMoved = (event: MouseEvent): void => {\r\n        this.controlMode = event.ctrlKey;\r\n        this.shiftMode = event.shiftKey;\r\n\r\n        const boundingRect: ClientRect = this._svg.getBoundingClientRect();\r\n        this._mouseX = ((event.clientX || event.pageX) - boundingRect.left) * this._editorWidth / (boundingRect.right - boundingRect.left);\r\n        this._mouseY = ((event.clientY || event.pageY) - boundingRect.top) * this._editorHeight / (boundingRect.bottom - boundingRect.top);\r\n        if (isNaN(this._mouseX)) this._mouseX = 0;\r\n        if (isNaN(this._mouseY)) this._mouseY = 0;\r\n        this._usingTouch = false;\r\n        this._whenCursorMoved();\r\n    }\r\n\r\n    private _whenTouchMoved = (event: TouchEvent): void => {\r\n        if (!this._mouseDown) return;\r\n        event.preventDefault();\r\n        const boundingRect: ClientRect = this._svg.getBoundingClientRect();\r\n        this._mouseX = (event.touches[0].clientX - boundingRect.left) * this._editorWidth / (boundingRect.right - boundingRect.left);\r\n        this._mouseY = (event.touches[0].clientY - boundingRect.top) * this._editorHeight / (boundingRect.bottom - boundingRect.top);\r\n        if (isNaN(this._mouseX)) this._mouseX = 0;\r\n        if (isNaN(this._mouseY)) this._mouseY = 0;\r\n        this._whenCursorMoved();\r\n    }\r\n\r\n    private _whenCursorMoved(): void {\r\n        if (this._doc.prefs.enableNotePreview && this._mouseOver) this._doc.synth.maintainLiveInput();\r\n\r\n        // HACK: Undoable pattern changes rely on persistent instance\r\n        // references. Loading song from hash via undo/redo breaks that,\r\n        // so changes are no longer undoable and the cursor status may be\r\n        // invalid. Abort further drag changes until the mouse is released.\r\n        const continuousState: boolean = this._doc.lastChangeWas(this._dragChange);\r\n\r\n        if (!this._mouseDragging && this._mouseDown && this._cursor.valid && continuousState) {\r\n            const dx: number = this._mouseX - this._mouseXStart;\r\n            const dy: number = this._mouseY - this._mouseYStart;\r\n            if (Math.sqrt(dx * dx + dy * dy) > 5) {\r\n                this._mouseDragging = true;\r\n                this._mouseHorizontal = Math.abs(dx) >= Math.abs(dy);\r\n            }\r\n        }\r\n\r\n        if (this._shiftHeld && this._mouseHorizontal && Math.abs(this._mouseXStart - this._mouseX) > 5) {\r\n            this._dragConfirmed = true;\r\n        }\r\n\r\n        if (this._mouseDragging && this._mouseDown && this._cursor.valid && continuousState) {\r\n            this._dragChange!.undo();\r\n            const sequence: ChangeSequence = new ChangeSequence();\r\n            this._dragChange = sequence;\r\n            this._doc.setProspectiveChange(this._dragChange);\r\n\r\n            const minDivision: number = this._getMinDivision();\r\n            const currentPart: number = this._snapToMinDivision(this._mouseX / this._partWidth);\r\n            if (this._draggingStartOfSelection) {\r\n                sequence.append(new ChangePatternSelection(this._doc, Math.max(0, Math.min(this._doc.song.beatsPerBar * Config.partsPerBeat, currentPart)), this._doc.selection.patternSelectionEnd));\r\n                this._updateSelection();\r\n            } else if (this._draggingEndOfSelection) {\r\n                sequence.append(new ChangePatternSelection(this._doc, this._doc.selection.patternSelectionStart, Math.max(0, Math.min(this._doc.song.beatsPerBar * Config.partsPerBeat, currentPart))));\r\n                this._updateSelection();\r\n            } else if (this._draggingSelectionContents) {\r\n                const pattern: Pattern | null = this._doc.getCurrentPattern(this._barOffset);\r\n                if (this._mouseDragging && pattern != null) {\r\n                    this._dragChange!.undo();\r\n                    const sequence: ChangeSequence = new ChangeSequence();\r\n                    this._dragChange = sequence;\r\n                    this._doc.setProspectiveChange(this._dragChange);\r\n\r\n                    let scale = this._doc.song.scale == Config.scales.dictionary[\"Custom\"].index ? this._doc.song.scaleCustom : Config.scales[this._doc.song.scale].flags;\r\n                    const notesInScale: number = scale.filter(x => x).length;\r\n                    //const pitchRatio: number = this._doc.song.getChannelIsNoise(this._doc.channel) ? 1 : 12 / notesInScale;\r\n                    const pitchRatio: number = this._doc.song.getChannelIsNoise(this._doc.channel) ? 1 : Config.pitchesPerOctave / notesInScale;\r\n                    //microtonal changes\r\n                    const draggedParts: number = Math.round((this._mouseX - this._mouseXStart) / (this._partWidth * minDivision)) * minDivision;\r\n                    const draggedTranspose: number = Math.round((this._mouseYStart - this._mouseY) / (this._pitchHeight * pitchRatio));\r\n                    sequence.append(new ChangeDragSelectedNotes(this._doc, this._doc.channel, pattern, draggedParts, draggedTranspose));\r\n                }\r\n\r\n            } else if (this._shiftHeld && this._dragConfirmed) {\r\n\r\n                if (this._mouseDragging) {\r\n                    let start: number = Math.max(0, Math.min((this._doc.song.beatsPerBar - 1) * Config.partsPerBeat, Math.floor(this._cursor.exactPart / Config.partsPerBeat) * Config.partsPerBeat));\r\n                    let end: number = start + Config.partsPerBeat;\r\n                    if (this._cursor.curNote != null) {\r\n                        start = Math.max(start, this._cursor.curNote.start);\r\n                        end = Math.min(end, this._cursor.curNote.end);\r\n                    }\r\n\r\n                    // Todo: The following two conditional blocks could maybe be refactored.\r\n                    if (currentPart < start) {\r\n                        start = 0;\r\n                        const pattern: Pattern | null = this._doc.getCurrentPattern(this._barOffset);\r\n                        if (pattern != null) {\r\n                            for (let i: number = 0; i < pattern.notes.length; i++) {\r\n                                if (pattern.notes[i].start <= currentPart) {\r\n                                    start = pattern.notes[i].start;\r\n                                }\r\n                                if (pattern.notes[i].end <= currentPart) {\r\n                                    start = pattern.notes[i].end;\r\n                                }\r\n                            }\r\n                        }\r\n                        for (let beat: number = 0; beat <= this._doc.song.beatsPerBar; beat++) {\r\n                            const part: number = beat * Config.partsPerBeat;\r\n                            if (start <= part && part <= currentPart) {\r\n                                start = part;\r\n                            }\r\n                        }\r\n                    }\r\n\r\n                    if (currentPart > end) {\r\n                        end = Config.partsPerBeat * this._doc.song.beatsPerBar;\r\n                        const pattern: Pattern | null = this._doc.getCurrentPattern(this._barOffset);\r\n                        if (pattern != null) {\r\n                            for (let i: number = 0; i < pattern.notes.length; i++) {\r\n                                if (pattern.notes[i].start >= currentPart) {\r\n                                    end = pattern.notes[i].start;\r\n                                    break;\r\n                                }\r\n                                if (pattern.notes[i].end >= currentPart) {\r\n                                    end = pattern.notes[i].end;\r\n                                    break;\r\n                                }\r\n                            }\r\n                        }\r\n                        for (let beat: number = 0; beat <= this._doc.song.beatsPerBar; beat++) {\r\n                            const part: number = beat * Config.partsPerBeat;\r\n                            if (currentPart < part && part < end) {\r\n                                end = part;\r\n                            }\r\n                        }\r\n                    }\r\n\r\n                    sequence.append(new ChangePatternSelection(this._doc, start, end));\r\n                    this._updateSelection();\r\n                }\r\n            } else {\r\n\r\n                if (this._cursor.curNote == null) {\r\n                    sequence.append(new ChangePatternSelection(this._doc, 0, 0));\r\n\r\n\r\n                    let backwards: boolean;\r\n                    let directLength: number;\r\n                    if (currentPart < this._cursor.start) {\r\n                        backwards = true;\r\n                        directLength = this._cursor.start - currentPart;\r\n                    } else {\r\n                        backwards = false;\r\n                        directLength = currentPart - this._cursor.start + minDivision;\r\n                    }\r\n\r\n                    let defaultLength: number = minDivision;\r\n                    for (let i: number = minDivision; i <= this._doc.song.beatsPerBar * Config.partsPerBeat; i += minDivision) {\r\n                        if (minDivision == 1) {\r\n                            if (i < 5) {\r\n                                // Allow small lengths.\r\n                            } else if (i <= Config.partsPerBeat / 2.0) {\r\n                                if (i % 3 != 0 && i % 4 != 0) {\r\n                                    continue;\r\n                                }\r\n                            } else if (i <= Config.partsPerBeat * 1.5) {\r\n                                if (i % 6 != 0 && i % 8 != 0) {\r\n                                    continue;\r\n                                }\r\n                            } else if (i % Config.partsPerBeat != 0) {\r\n                                continue;\r\n                            }\r\n                        } else {\r\n                            if (i >= 5 * minDivision &&\r\n                                i % Config.partsPerBeat != 0 &&\r\n                                i != Config.partsPerBeat * 3.0 / 4.0 &&\r\n                                i != Config.partsPerBeat * 3.0 / 2.0 &&\r\n                                i != Config.partsPerBeat * 4.0 / 3.0) {\r\n                                continue;\r\n                            }\r\n                        }\r\n\r\n                        const blessedLength: number = i;\r\n                        if (blessedLength == directLength) {\r\n                            defaultLength = blessedLength;\r\n                            break;\r\n                        }\r\n                        if (blessedLength < directLength) {\r\n                            defaultLength = blessedLength;\r\n                        }\r\n\r\n                        if (blessedLength > directLength) {\r\n                            if (defaultLength < directLength - minDivision) {\r\n                                defaultLength = blessedLength;\r\n                            }\r\n                            break;\r\n                        }\r\n                    }\r\n\r\n                    let start: number;\r\n                    let end: number;\r\n\r\n                    if (backwards) {\r\n                        end = this._cursor.start;\r\n                        start = end - defaultLength;\r\n                    } else {\r\n                        start = this._cursor.start;\r\n                        end = start + defaultLength;\r\n                    }\r\n                    const continuesLastPattern: boolean = (start < 0 && this._doc.channel < this._doc.song.pitchChannelCount + this._doc.song.noiseChannelCount);\r\n                    if (start < 0) start = 0;\r\n                    if (end > this._doc.song.beatsPerBar * Config.partsPerBeat) end = this._doc.song.beatsPerBar * Config.partsPerBeat;\r\n\r\n                    if (start < end) {\r\n                        sequence.append(new ChangeEnsurePatternExists(this._doc, this._doc.channel, this._doc.bar));\r\n                        const pattern: Pattern | null = this._doc.getCurrentPattern(this._barOffset);\r\n                        if (pattern == null) throw new Error();\r\n                        // Using parameter skipNote to force proper \"collision\" checking vis-a-vis pitch for mod channels.\r\n                        sequence.append(new ChangeNoteTruncate(this._doc, pattern, start, end, new Note(this._cursor.pitch, 0, 0, 0)));\r\n                        let i: number;\r\n                        for (i = 0; i < pattern.notes.length; i++) {\r\n                            if (pattern.notes[i].start >= end) break;\r\n                        }\r\n                        const theNote: Note = new Note(this._cursor.pitch, start, end,\r\n                            this._doc.song.getNewNoteVolume(this._doc.song.getChannelIsMod(this._doc.channel), this._doc.channel, this._doc.getCurrentInstrument(this._barOffset), this._cursor.pitch),\r\n                            this._doc.song.getChannelIsNoise(this._doc.channel));\r\n                        theNote.continuesLastPattern = continuesLastPattern;\r\n                        sequence.append(new ChangeNoteAdded(this._doc, pattern, theNote, i));\r\n                        this._copyPins(theNote);\r\n\r\n                        this._dragTime = backwards ? start : end;\r\n                        this._dragPitch = this._cursor.pitch;\r\n                        this._dragSize = theNote.pins[backwards ? 0 : 1].size;\r\n                        this._dragVisible = true;\r\n                    }\r\n\r\n                    let prevPattern: Pattern | null = this._pattern;\r\n\r\n                    this._pattern = this._doc.getCurrentPattern(this._barOffset);\r\n\r\n                    if (this._pattern != null && this._doc.song.getChannelIsMod(this._doc.channel) && this._interactive && prevPattern != this._pattern) {\r\n                        // Need to re-sort the notes by start time as they might change order if user drags them around.\r\n                        this._pattern.notes.sort(function (a, b) { return (a.start == b.start) ? a.pitches[0] - b.pitches[0] : a.start - b.start; });\r\n                    }\r\n\r\n                } else if (this._mouseHorizontal) {\r\n\r\n                    sequence.append(new ChangePatternSelection(this._doc, 0, 0));\r\n\r\n                    const shift: number = (this._mouseX - this._mouseXStart) / this._partWidth;\r\n\r\n                    const shiftedPin: NotePin = this._cursor.curNote.pins[this._cursor.nearPinIndex];\r\n                    let shiftedTime: number = Math.round((this._cursor.curNote.start + shiftedPin.time + shift) / minDivision) * minDivision;\r\n                    const continuesLastPattern: boolean = (shiftedTime < 0.0 && this._doc.channel < this._doc.song.pitchChannelCount + this._doc.song.noiseChannelCount);\r\n                    if (shiftedTime < 0) shiftedTime = 0;\r\n                    if (shiftedTime > this._doc.song.beatsPerBar * Config.partsPerBeat) shiftedTime = this._doc.song.beatsPerBar * Config.partsPerBeat;\r\n\r\n                    if (this._pattern == null) throw new Error();\r\n\r\n                    if (shiftedTime <= this._cursor.curNote.start && this._cursor.nearPinIndex == this._cursor.curNote.pins.length - 1 ||\r\n                        shiftedTime >= this._cursor.curNote.end && this._cursor.nearPinIndex == 0) {\r\n\r\n                        sequence.append(new ChangeNoteAdded(this._doc, this._pattern, this._cursor.curNote, this._cursor.curIndex, true));\r\n\r\n                        this._dragVisible = false;\r\n                    } else {\r\n                        const start: number = Math.min(this._cursor.curNote.start, shiftedTime);\r\n                        const end: number = Math.max(this._cursor.curNote.end, shiftedTime);\r\n\r\n                        this._dragTime = shiftedTime;\r\n                        this._dragPitch = this._cursor.curNote.pitches[this._cursor.pitchIndex == -1 ? 0 : this._cursor.pitchIndex] + this._cursor.curNote.pins[this._cursor.nearPinIndex].interval;\r\n                        this._dragSize = this._cursor.curNote.pins[this._cursor.nearPinIndex].size;\r\n                        this._dragVisible = true;\r\n\r\n                        sequence.append(new ChangeNoteTruncate(this._doc, this._pattern, start, end, this._cursor.curNote));\r\n                        sequence.append(new ChangePinTime(this._doc, this._cursor.curNote, this._cursor.nearPinIndex, shiftedTime, continuesLastPattern));\r\n                        this._copyPins(this._cursor.curNote);\r\n                    }\r\n                } else if (this._cursor.pitchIndex == -1 || this._doc.song.getChannelIsMod(this._doc.channel)) {\r\n\r\n                    if (!this._mouseDragging)\r\n                    sequence.append(new ChangePatternSelection(this._doc, 0, 0));\r\n\r\n                    const bendPart: number =\r\n                        Math.max(this._cursor.curNote.start,\r\n                            Math.min(this._cursor.curNote.end,\r\n                                Math.round(this._mouseX / (this._partWidth * minDivision)) * minDivision\r\n                            )\r\n                        ) - this._cursor.curNote.start;\r\n\r\n                    let prevPin: NotePin;\r\n                    let nextPin: NotePin = this._cursor.curNote.pins[0];\r\n                    let bendSize: number = 0;\r\n                    let bendInterval: number = 0;\r\n                    let cap: number = this._doc.song.getVolumeCap(this._doc.song.getChannelIsMod(this._doc.channel), this._doc.channel, this._doc.getCurrentInstrument(this._barOffset), this._cursor.pitch);\r\n\r\n                    // Dragging gets a bit faster after difference in drag counts is >8.\r\n                    let dragFactorSlow: number = 25.0 / Math.pow(cap, 0.4);\r\n                    let dragFactorFast: number = 22.0 / Math.pow(cap, 0.5);\r\n                    let dragSign: number = (this._mouseYStart > this._mouseY ? 1 : -1);\r\n                    let dragCounts: number = Math.min(Math.abs(this._mouseYStart - this._mouseY) / dragFactorSlow, 8) + Math.max(0, Math.abs(this._mouseYStart - this._mouseY) / dragFactorFast - 8);\r\n\r\n                    // Note volume drag overrides attempts to make a pattern selection\r\n                    if (dragCounts > 0) {\r\n                        this._shiftHeld = false;\r\n                    }\r\n\r\n                    for (let i: number = 1; i < this._cursor.curNote.pins.length; i++) {\r\n                        prevPin = nextPin;\r\n                        nextPin = this._cursor.curNote.pins[i];\r\n                        if (bendPart > nextPin.time) continue;\r\n                        if (bendPart < prevPin.time) throw new Error();\r\n                        const sizeRatio: number = (bendPart - prevPin.time) / (nextPin.time - prevPin.time);\r\n                        bendSize = Math.round(prevPin.size * (1.0 - sizeRatio) + nextPin.size * sizeRatio + dragSign * dragCounts);\r\n                        // If not in fine control mode, round to 0~2~4~6 (normal 4 settings)\r\n                        if (!this.controlMode && !this._doc.prefs.alwaysFineNoteVol && !this._doc.song.getChannelIsMod(this._doc.channel)) {\r\n                            bendSize = Math.floor(bendSize / 2) * 2;\r\n                        }\r\n                        if (bendSize < 0) bendSize = 0;\r\n                        if (bendSize > cap) bendSize = cap;\r\n                        bendInterval = this._snapToPitch(prevPin.interval * (1.0 - sizeRatio) + nextPin.interval * sizeRatio + this._cursor.curNote.pitches[0], 0, Config.maxPitch) - this._cursor.curNote.pitches[0];\r\n                        break;\r\n                    }\r\n                    if (this._doc.song.getChannelIsMod(this._doc.channel) && this.controlMode) {\r\n                        // Link bend to the next note over\r\n                        if (bendPart >= this._cursor.curNote.pins[this._cursor.curNote.pins.length - 1].time) {\r\n                            if (this._cursor.curNote.start + this._cursor.curNote.pins[this._cursor.curNote.pins.length - 1].time < this._doc.song.beatsPerBar * Config.partsPerBeat) {\r\n                                for (const note of this._pattern!.notes) {\r\n                                    if (note.start == this._cursor.curNote.start + this._cursor.curNote.pins[this._cursor.curNote.pins.length - 1].time && note.pitches[0] == this._cursor.curNote.pitches[0]) {\r\n                                        sequence.append(new ChangeSizeBend(this._doc, note, note.pins[0].time, bendSize, bendInterval, this.shiftMode));\r\n                                    }\r\n                                }\r\n                            }\r\n                            else {\r\n                                // Try to bend to the next pattern over. Only do this if a note starts at 0, and instrument is identical in next pattern.\r\n                                const nextPattern: Pattern | null = this._doc.getCurrentPattern(1);\r\n\r\n                                if (nextPattern != null && nextPattern.instruments[0] == this._pattern!.instruments[0]) {\r\n                                    for (const note of nextPattern.notes) {\r\n                                        if (note.start == 0 && note.pitches[0] == this._cursor.curNote.pitches[0]) {\r\n                                            sequence.append(new ChangeSizeBend(this._doc, note, note.pins[0].time, bendSize, bendInterval, this.shiftMode));\r\n                                        }\r\n                                    }\r\n                                }\r\n\r\n                            }\r\n                        }\r\n                        // Link bend to the previous note\r\n                        else if (bendPart <= this._cursor.curNote.pins[0].time) {\r\n                            if (this._cursor.curNote.start > 0) {\r\n                                for (const note of this._pattern!.notes) {\r\n                                    if (note.end == this._cursor.curNote.start && note.pitches[0] == this._cursor.curNote.pitches[0]) {\r\n                                        sequence.append(new ChangeSizeBend(this._doc, note, note.pins[note.pins.length - 1].time, bendSize, bendInterval, this.shiftMode));\r\n                                    }\r\n                                }\r\n                            }\r\n                            else {\r\n                                // Try to bend to the previous pattern over. Only do this if a note starts at the end, and instrument is identical in previous pattern.\r\n                                const prevPattern: Pattern | null = this._doc.getCurrentPattern(-1);\r\n\r\n                                if (prevPattern != null && prevPattern.instruments[0] == this._pattern!.instruments[0]) {\r\n                                    for (const note of prevPattern.notes) {\r\n                                        if (note.end == this._doc.song.beatsPerBar * Config.partsPerBeat && note.pitches[0] == this._cursor.curNote.pitches[0]) {\r\n                                            sequence.append(new ChangeSizeBend(this._doc, note, note.pins[note.pins.length - 1].time, bendSize, bendInterval, this.shiftMode));\r\n                                        }\r\n                                    }\r\n                                }\r\n                            }\r\n                        }\r\n                    }\r\n\r\n                    this._dragTime = this._cursor.curNote.start + bendPart;\r\n                    this._dragPitch = this._cursor.curNote.pitches[this._cursor.pitchIndex == -1 ? 0 : this._cursor.pitchIndex] + bendInterval;\r\n                    this._dragSize = bendSize;\r\n                    this._dragVisible = true;\r\n\r\n                    sequence.append(new ChangeSizeBend(this._doc, this._cursor.curNote, bendPart, bendSize, bendInterval, this.shiftMode));\r\n                    this._copyPins(this._cursor.curNote);\r\n                } else {\r\n                    sequence.append(new ChangePatternSelection(this._doc, 0, 0));\r\n\r\n                    this._dragSize = this._cursor.curNote.pins[this._cursor.nearPinIndex].size;\r\n\r\n                    if (this._pattern == null) throw new Error();\r\n\r\n                    let bendStart: number;\r\n                    let bendEnd: number;\r\n                    if (this._mouseX >= this._mouseXStart) {\r\n                        bendStart = Math.max(this._cursor.curNote.start, this._cursor.part);\r\n                        bendEnd = currentPart + minDivision;\r\n                    } else {\r\n                        bendStart = Math.min(this._cursor.curNote.end, this._cursor.part + minDivision);\r\n                        bendEnd = currentPart;\r\n                    }\r\n                    if (bendEnd < 0) bendEnd = 0;\r\n                    if (bendEnd > this._doc.song.beatsPerBar * Config.partsPerBeat) bendEnd = this._doc.song.beatsPerBar * Config.partsPerBeat;\r\n                    if (bendEnd > this._cursor.curNote.end) {\r\n                        sequence.append(new ChangeNoteTruncate(this._doc, this._pattern, this._cursor.curNote.start, bendEnd, this._cursor.curNote));\r\n                    }\r\n                    if (bendEnd < this._cursor.curNote.start) {\r\n                        sequence.append(new ChangeNoteTruncate(this._doc, this._pattern, bendEnd, this._cursor.curNote.end, this._cursor.curNote));\r\n                    }\r\n\r\n                    let minPitch: number = Number.MAX_VALUE;\r\n                    let maxPitch: number = -Number.MAX_VALUE;\r\n                    for (const pitch of this._cursor.curNote.pitches) {\r\n                        if (minPitch > pitch) minPitch = pitch;\r\n                        if (maxPitch < pitch) maxPitch = pitch;\r\n                    }\r\n                    minPitch -= this._cursor.curNote.pitches[this._cursor.pitchIndex];\r\n                    maxPitch -= this._cursor.curNote.pitches[this._cursor.pitchIndex];\r\n\r\n                    if (!this._doc.song.getChannelIsMod(this._doc.channel)) {\r\n                        const bendTo: number = this._snapToPitch(this._findMousePitch(this._mouseY), -minPitch, (this._doc.song.getChannelIsNoise(this._doc.channel) ? Config.drumCount - 1 : Config.maxPitch) - maxPitch);\r\n                        sequence.append(new ChangePitchBend(this._doc, this._cursor.curNote, bendStart, bendEnd, bendTo, this._cursor.pitchIndex));\r\n                        this._dragPitch = bendTo;\r\n                    }\r\n                    else {\r\n                        const bendTo: number = this._snapToPitch(this._dragPitch, -minPitch, Config.modCount - 1);\r\n                        sequence.append(new ChangePitchBend(this._doc, this._cursor.curNote, bendStart, bendEnd, bendTo, this._cursor.pitchIndex));\r\n                        this._dragPitch = bendTo;\r\n                    }\r\n                    this._copyPins(this._cursor.curNote);\r\n\r\n                    this._dragTime = bendEnd;\r\n                    this._dragVisible = true;\r\n                }\r\n            }\r\n        }\r\n\r\n        if (!(this._mouseDown && this._cursor.valid && continuousState)) {\r\n            this._updateCursorStatus();\r\n            this._updatePreview();\r\n        }\r\n    }\r\n\r\n    private _whenCursorReleased = (event: Event | null): void => {\r\n        if (!this._cursor.valid) return;\r\n\r\n        const continuousState: boolean = this._doc.lastChangeWas(this._dragChange);\r\n        if (this._mouseDown && continuousState && this._dragChange != null) {\r\n\r\n            if (this._draggingSelectionContents) {\r\n                this._doc.record(this._dragChange);\r\n                this._dragChange = null;\r\n                // Need to re-sort the notes by start time as they might change order if user drags them around.\r\n                if (this._pattern != null && this._doc.song.getChannelIsMod(this._doc.channel)) this._pattern.notes.sort(function (a, b) { return (a.start == b.start) ? a.pitches[0] - b.pitches[0] : a.start - b.start; });\r\n\r\n            } else if (this._draggingStartOfSelection || this._draggingEndOfSelection || this._shiftHeld) {\r\n                this._setPatternSelection(this._dragChange);\r\n                this._dragChange = null;\r\n            } else if (this._mouseDragging || this._cursor.curNote == null || !this._dragChange.isNoop() || this._draggingStartOfSelection || this._draggingEndOfSelection || this._draggingSelectionContents || this._shiftHeld) {\r\n                this._doc.record(this._dragChange);\r\n                this._dragChange = null;\r\n                // Need to re-sort the notes by start time as they might change order if user drags them around.\r\n                if (this._pattern != null && this._doc.song.getChannelIsMod(this._doc.channel)) this._pattern.notes.sort(function (a, b) { return (a.start == b.start) ? a.pitches[0] - b.pitches[0] : a.start - b.start; });\r\n\r\n            } else {\r\n\r\n                if (this._pattern == null) throw new Error();\r\n\r\n                const sequence: ChangeSequence = new ChangeSequence();\r\n                sequence.append(new ChangePatternSelection(this._doc, 0, 0));\r\n\r\n                if (this._cursor.pitchIndex == -1) {\r\n                    if (this._cursor.curNote.pitches.length == Config.maxChordSize) {\r\n                        sequence.append(new ChangePitchAdded(this._doc, this._cursor.curNote, this._cursor.curNote.pitches[0], 0, true));\r\n                    }\r\n                    sequence.append(new ChangePitchAdded(this._doc, this._cursor.curNote, this._cursor.pitch, this._cursor.curNote.pitches.length));\r\n                    this._copyPins(this._cursor.curNote);\r\n\r\n                    if (this._doc.prefs.enableNotePreview && !this._doc.synth.playing) {\r\n                        const duration: number = Math.min(Config.partsPerBeat, this._cursor.end - this._cursor.start);\r\n                        this._doc.performance.setTemporaryPitches(this._cursor.curNote.pitches, duration);\r\n                    }\r\n                } else {\r\n                    if (this._cursor.curNote.pitches.length == 1) {\r\n                        sequence.append(new ChangeNoteAdded(this._doc, this._pattern, this._cursor.curNote, this._cursor.curIndex, true));\r\n                    } else {\r\n                        sequence.append(new ChangePitchAdded(this._doc, this._cursor.curNote, this._cursor.pitch, this._cursor.curNote.pitches.indexOf(this._cursor.pitch), true));\r\n                    }\r\n                }\r\n\r\n                this._doc.record(sequence);\r\n            }\r\n        }\r\n\r\n        this._mouseDown = false;\r\n        this._mouseDragging = false;\r\n        this._draggingStartOfSelection = false;\r\n        this._draggingEndOfSelection = false;\r\n        this._draggingSelectionContents = false;\r\n        this._lastChangeWasPatternSelection = false;\r\n        this.modDragValueLabel.setAttribute(\"fill\", ColorConfig.secondaryText);\r\n        this._updateCursorStatus();\r\n        this._updatePreview();\r\n    }\r\n\r\n    private _setPatternSelection(change: UndoableChange): void {\r\n        this._changePatternSelection = change;\r\n        this._doc.record(this._changePatternSelection, this._lastChangeWasPatternSelection);\r\n    }\r\n\r\n\r\n    private _updatePreview(): void {\r\n        if (this._usingTouch) {\r\n            if (!this._mouseDown || !this._cursor.valid || !this._mouseDragging || !this._dragVisible || this._shiftHeld || this._draggingStartOfSelection || this._draggingEndOfSelection || this._draggingSelectionContents) {\r\n                this._svgPreview.setAttribute(\"visibility\", \"hidden\");\r\n\r\n                if (!this.editingModLabel) {\r\n                    this.modDragValueLabel.style.setProperty(\"display\", \"none\");\r\n                    this.modDragValueLabel.style.setProperty(\"pointer-events\", \"none\");\r\n                    this.modDragValueLabel.setAttribute(\"contenteditable\", \"false\");\r\n                }\r\n\r\n            } else {\r\n                this._svgPreview.setAttribute(\"visibility\", \"visible\");\r\n\r\n                const x: number = this._partWidth * this._dragTime;\r\n                const y: number = this._pitchToPixelHeight(this._dragPitch - this._octaveOffset);\r\n                const radius: number = (this._pitchHeight - this._pitchBorder) / 2;\r\n                const width: number = 80;\r\n                const height: number = 60;\r\n                const cap: number = this._doc.song.getVolumeCap(this._doc.song.getChannelIsMod(this._doc.channel), this._doc.channel, this._doc.getCurrentInstrument(this._barOffset), this._cursor.pitch);\r\n                //this._drawNote(this._svgPreview, this._cursor.pitch, this._cursor.start, this._cursor.pins, this._pitchHeight / 2 + 1, true, this._octaveOffset);\r\n\r\n                let pathString: string = \"\";\r\n\r\n                pathString += \"M \" + prettyNumber(x) + \" \" + prettyNumber(y - radius * (this._dragSize / cap)) + \" \";\r\n                pathString += \"L \" + prettyNumber(x) + \" \" + prettyNumber(y - radius * (this._dragSize / cap) - height) + \" \";\r\n                pathString += \"M \" + prettyNumber(x) + \" \" + prettyNumber(y + radius * (this._dragSize / cap)) + \" \";\r\n                pathString += \"L \" + prettyNumber(x) + \" \" + prettyNumber(y + radius * (this._dragSize / cap) + height) + \" \";\r\n                pathString += \"M \" + prettyNumber(x) + \" \" + prettyNumber(y - radius * (this._dragSize / cap)) + \" \";\r\n                pathString += \"L \" + prettyNumber(x + width) + \" \" + prettyNumber(y - radius * (this._dragSize / cap)) + \" \";\r\n                pathString += \"M \" + prettyNumber(x) + \" \" + prettyNumber(y + radius * (this._dragSize / cap)) + \" \";\r\n                pathString += \"L \" + prettyNumber(x + width) + \" \" + prettyNumber(y + radius * (this._dragSize / cap)) + \" \";\r\n                pathString += \"M \" + prettyNumber(x) + \" \" + prettyNumber(y - radius * (this._dragSize / cap)) + \" \";\r\n                pathString += \"L \" + prettyNumber(x - width) + \" \" + prettyNumber(y - radius * (this._dragSize / cap)) + \" \";\r\n                pathString += \"M \" + prettyNumber(x) + \" \" + prettyNumber(y + radius * (this._dragSize / cap)) + \" \";\r\n                pathString += \"L \" + prettyNumber(x - width) + \" \" + prettyNumber(y + radius * (this._dragSize / cap)) + \" \";\r\n\r\n                this._svgPreview.setAttribute(\"d\", pathString);\r\n            }\r\n        } else {\r\n            if (!this._mouseOver || this._mouseDown || !this._cursor.valid) {\r\n                this._svgPreview.setAttribute(\"visibility\", \"hidden\");\r\n                if (!this.editingModLabel) {\r\n                    this.modDragValueLabel.style.setProperty(\"display\", \"none\");\r\n                    this.modDragValueLabel.style.setProperty(\"pointer-events\", \"none\");\r\n                    this.modDragValueLabel.setAttribute(\"contenteditable\", \"false\");\r\n                }\r\n            } else {\r\n                this._svgPreview.setAttribute(\"visibility\", \"visible\");\r\n\r\n                if (this._cursorAtStartOfSelection()) {\r\n                    const center: number = this._partWidth * this._doc.selection.patternSelectionStart;\r\n                    const left: string = prettyNumber(center - 4);\r\n                    const right: string = prettyNumber(center + 4);\r\n                    const bottom: number = this._pitchToPixelHeight(-0.5);\r\n                    this._svgPreview.setAttribute(\"d\", \"M \" + left + \" 0 L \" + left + \" \" + bottom + \" L \" + right + \" \" + bottom + \" L \" + right + \" 0 z\");\r\n                } else if (this._cursorAtEndOfSelection()) {\r\n                    const center: number = this._partWidth * this._doc.selection.patternSelectionEnd;\r\n                    const left: string = prettyNumber(center - 4);\r\n                    const right: string = prettyNumber(center + 4);\r\n                    const bottom: number = this._pitchToPixelHeight(-0.5);\r\n                    this._svgPreview.setAttribute(\"d\", \"M \" + left + \" 0 L \" + left + \" \" + bottom + \" L \" + right + \" \" + bottom + \" L \" + right + \" 0 z\");\r\n                } else if (this._cursorIsInSelection()) {\r\n                    const left: string = prettyNumber(this._partWidth * this._doc.selection.patternSelectionStart - 2);\r\n                    const right: string = prettyNumber(this._partWidth * this._doc.selection.patternSelectionEnd + 2);\r\n                    const bottom: number = this._pitchToPixelHeight(-0.5);\r\n                    this._svgPreview.setAttribute(\"d\", \"M \" + left + \" 0 L \" + left + \" \" + bottom + \" L \" + right + \" \" + bottom + \" L \" + right + \" 0 z\");\r\n                } else {\r\n                    this._drawNote(this._svgPreview, this._cursor.pitch, this._cursor.start, this._cursor.pins, (this._pitchHeight - this._pitchBorder) / 2 + 1, true, this._octaveOffset);\r\n                }\r\n            }\r\n        }\r\n    }\r\n\r\n    private _updateSelection(): void {\r\n        if (this._doc.selection.patternSelectionActive) {\r\n            this._selectionRect.setAttribute(\"visibility\", \"visible\");\r\n            this._selectionRect.setAttribute(\"x\", String(this._partWidth * this._doc.selection.patternSelectionStart));\r\n            this._selectionRect.setAttribute(\"width\", String(this._partWidth * (this._doc.selection.patternSelectionEnd - this._doc.selection.patternSelectionStart)));\r\n        } else {\r\n            this._selectionRect.setAttribute(\"visibility\", \"hidden\");\r\n        }\r\n    }\r\n\r\n    public render(): void {\r\n        const nextPattern: Pattern | null = this._doc.getCurrentPattern(this._barOffset);\r\n\r\n        if (this._pattern != nextPattern && this._pattern != null) {\r\n            if (this._doc.song.getChannelIsMod(this._doc.channel) && this._interactive && nextPattern != null) {\r\n                // Need to re-sort the notes by start time as they might change order if user drags them around.\r\n                nextPattern.notes.sort(function (a, b) { return (a.start == b.start) ? a.pitches[0] - b.pitches[0] : a.start - b.start; });\r\n            }\r\n            this._dragChange = null;\r\n            this._whenCursorReleased(null);\r\n        }\r\n        this._pattern = nextPattern;\r\n\r\n        this._editorWidth = this.container.clientWidth;\r\n        this._editorHeight = this.container.clientHeight;\r\n        this._partWidth = this._editorWidth / (this._doc.song.beatsPerBar * Config.partsPerBeat);\r\n        this._octaveOffset = (this._doc.channel >= this._doc.song.pitchChannelCount) ? 0 : this._doc.song.channels[this._doc.channel].octave * Config.pitchesPerOctave;\r\n\r\n        if (this._doc.song.getChannelIsNoise(this._doc.channel)) {\r\n            this._pitchBorder = 0;\r\n            this._pitchCount = Config.drumCount;\r\n        }\r\n        else if (this._doc.song.getChannelIsMod(this._doc.channel)) {\r\n            this._pitchBorder = this._defaultModBorder;\r\n            this._pitchCount = Config.modCount;\r\n\r\n            if (this._pattern != null) {\r\n                // Force max height of mod channels to conform to settings.\r\n                for (const note of this._pattern.notes) {\r\n                    let pitch = note.pitches[0]; // No pitch bend possible in mod channels.\r\n                    let maxHeight: number = this._doc.song.getVolumeCap(true, this._doc.channel, this._doc.getCurrentInstrument(this._barOffset), pitch);\r\n                    let maxFoundHeight: number = 0;\r\n                    for (const pin of note.pins) {\r\n                        if (pin.size > maxFoundHeight) {\r\n                            maxFoundHeight = pin.size;\r\n                        }\r\n                    }\r\n                    // Apply scaling if the max height is below any pin setting.\r\n                    if (maxFoundHeight > maxHeight) {\r\n                        for (const pin of note.pins) {\r\n                            pin.size = Math.round(pin.size * (maxHeight / maxFoundHeight));\r\n                        }\r\n                    }\r\n                }\r\n            }\r\n        }\r\n        else {\r\n            this._pitchBorder = 0;\r\n            this._pitchCount = this._doc.getVisiblePitchCount();\r\n        }\r\n\r\n        this._pitchHeight = this._editorHeight / this._pitchCount;\r\n        this._octaveOffset = (this._doc.channel >= this._doc.song.pitchChannelCount) ? 0 : this._doc.getBaseVisibleOctave(this._doc.channel) * Config.pitchesPerOctave;\r\n\r\n        if (this._renderedRhythm != this._doc.song.rhythm ||\r\n            this._renderedPitchChannelCount != this._doc.song.pitchChannelCount ||\r\n            this._renderedNoiseChannelCount != this._doc.song.noiseChannelCount ||\r\n            this._renderedModChannelCount != this._doc.song.modChannelCount) {\r\n            this._renderedRhythm = this._doc.song.rhythm;\r\n            this._renderedPitchChannelCount = this._doc.song.pitchChannelCount;\r\n            this._renderedNoiseChannelCount = this._doc.song.noiseChannelCount;\r\n            this._renderedModChannelCount = this._doc.song.modChannelCount;\r\n            this.resetCopiedPins();\r\n        }\r\n\r\n        this._copiedPins = this._copiedPinChannels[this._doc.channel];\r\n\r\n        if (this._renderedWidth != this._editorWidth || this._renderedHeight != this._editorHeight) {\r\n            this._renderedWidth = this._editorWidth;\r\n            this._renderedHeight = this._editorHeight;\r\n            this._svgBackground.setAttribute(\"width\", \"\" + this._editorWidth);\r\n            this._svgBackground.setAttribute(\"height\", \"\" + this._editorHeight);\r\n            this._svgPlayhead.setAttribute(\"height\", \"\" + this._editorHeight);\r\n            this._selectionRect.setAttribute(\"y\", \"0\");\r\n            this._selectionRect.setAttribute(\"height\", \"\" + this._editorHeight);\r\n        }\r\n\r\n        const beatWidth = this._editorWidth / this._doc.song.beatsPerBar;\r\n        if (this._renderedBeatWidth != beatWidth || this._renderedPitchHeight != this._pitchHeight) {\r\n            this._renderedBeatWidth = beatWidth;\r\n            this._renderedPitchHeight = this._pitchHeight;\r\n            this._svgNoteBackground.setAttribute(\"width\", \"\" + beatWidth);\r\n            this._svgNoteBackground.setAttribute(\"height\", \"\" + (this._pitchHeight * Config.pitchesPerOctave));\r\n            this._svgDrumBackground.setAttribute(\"width\", \"\" + beatWidth);\r\n            this._svgDrumBackground.setAttribute(\"height\", \"\" + this._pitchHeight);\r\n            this._svgModBackground.setAttribute(\"width\", \"\" + beatWidth);\r\n            this._svgModBackground.setAttribute(\"height\", \"\" + (this._pitchHeight));\r\n            this._svgModBackground.setAttribute(\"y\", \"\" + (this._pitchBorder / 2));\r\n            this._backgroundDrumRow.setAttribute(\"width\", \"\" + (beatWidth - 2));\r\n            this._backgroundDrumRow.setAttribute(\"height\", \"\" + (this._pitchHeight - 2));\r\n            if (this._pitchHeight > this._pitchBorder) {\r\n                this._backgroundModRow.setAttribute(\"width\", \"\" + (beatWidth - 2));\r\n                this._backgroundModRow.setAttribute(\"height\", \"\" + (this._pitchHeight - this._pitchBorder));\r\n            }\r\n\r\n\r\n\r\n            for (let j: number = 0; j < Config.pitchesPerOctave; j++) {\r\n                const rectangle: SVGRectElement = this._backgroundPitchRows[j];\r\n                const y: number = (Config.pitchesPerOctave - j) % Config.pitchesPerOctave;\r\n                rectangle.setAttribute(\"width\", \"\" + (beatWidth - 2));\r\n                rectangle.setAttribute(\"y\", \"\" + (y * this._pitchHeight + 1));\r\n                rectangle.setAttribute(\"height\", \"\" + (this._pitchHeight - 2));\r\n            }\r\n        }\r\n\r\n        if (this._interactive) {\r\n            if (!this._mouseDown) this._updateCursorStatus();\r\n            this._updatePreview();\r\n            this._updateSelection();\r\n        }\r\n\r\n        if (this._renderedFifths != this._doc.prefs.showFifth) {\r\n            this._renderedFifths = this._doc.prefs.showFifth;\r\n            this._backgroundPitchRows[7].setAttribute(\"fill\", this._doc.prefs.showFifth ? ColorConfig.fifthNote : ColorConfig.pitchBackground);\r\n        }\r\n\r\n        for (let j: number = 0; j < Config.pitchesPerOctave; j++) {\r\n            let scale = this._doc.song.scale == Config.scales.dictionary[\"Custom\"].index ? this._doc.song.scaleCustom : Config.scales[this._doc.song.scale].flags;\r\n            \r\n            this._backgroundPitchRows[j].style.visibility = scale[j] ? \"visible\" : \"hidden\";\r\n        }\r\n\r\n        if (this._doc.song.getChannelIsNoise(this._doc.channel)) {\r\n            if (!this._renderedDrums) {\r\n                this._renderedDrums = true;\r\n                this._renderedMod = false;\r\n                this._svgBackground.setAttribute(\"fill\", \"url(#patternEditorDrumBackground\" + this._barOffset + \")\");\r\n            }\r\n        } else if (this._doc.song.getChannelIsMod(this._doc.channel)) {\r\n            if (!this._renderedMod) {\r\n                this._renderedDrums = false;\r\n                this._renderedMod = true;\r\n                this._svgBackground.setAttribute(\"fill\", \"url(#patternEditorModBackground\" + this._barOffset + \")\");\r\n            }\r\n        } else {\r\n            if (this._renderedDrums || this._renderedMod) {\r\n                this._renderedDrums = false;\r\n                this._renderedMod = false;\r\n                this._svgBackground.setAttribute(\"fill\", \"url(#patternEditorNoteBackground\" + this._barOffset + \")\");\r\n            }\r\n        }\r\n\r\n        this._redrawNotePatterns();\r\n    }\r\n\r\n    private _redrawNotePatterns(): void {\r\n        this._svgNoteContainer = makeEmptyReplacementElement(this._svgNoteContainer);\r\n\r\n        if (this._doc.prefs.showChannels) {\r\n            if (!this._doc.song.getChannelIsMod(this._doc.channel)) {\r\n                for (let channel: number = this._doc.song.pitchChannelCount + this._doc.song.noiseChannelCount - 1; channel >= 0; channel--) {\r\n                    if (channel == this._doc.channel) continue;\r\n                    if (this._doc.song.getChannelIsNoise(channel) != this._doc.song.getChannelIsNoise(this._doc.channel)) continue;\r\n\r\n                    const pattern2: Pattern | null = this._doc.song.getPattern(channel, this._doc.bar + this._barOffset);\r\n                    if (pattern2 == null) continue;\r\n\r\n                    const octaveOffset: number = this._doc.getBaseVisibleOctave(channel) * Config.pitchesPerOctave;\r\n                    for (const note of pattern2.notes) {\r\n                        for (const pitch of note.pitches) {\r\n                            const notePath: SVGPathElement = SVG.path();\r\n                            notePath.setAttribute(\"fill\", ColorConfig.getChannelColor(this._doc.song, channel).secondaryNote);\r\n                            notePath.setAttribute(\"pointer-events\", \"none\");\r\n                            this._drawNote(notePath, pitch, note.start, note.pins, this._pitchHeight * 0.19, false, octaveOffset);\r\n                            this._svgNoteContainer.appendChild(notePath);\r\n                        }\r\n                    }\r\n                }\r\n            }\r\n        }\r\n\r\n        if (this._pattern != null) {\r\n            const instrument: Instrument = this._doc.song.channels[this._doc.channel].instruments[this._doc.getCurrentInstrument(this._barOffset)];\r\n            const chord: Chord = instrument.getChord();\r\n            const transition: Transition = instrument.getTransition();\r\n            const displayNumberedChords: boolean = chord.customInterval || chord.arpeggiates || chord.strumParts > 0 || transition.slides;\r\n            for (const note of this._pattern.notes) {\r\n                let disabled: boolean = false;\r\n                if (this._doc.song.getChannelIsMod(this._doc.channel)) {\r\n                    const modIndex: number = instrument.modulators[Config.modCount - 1 - note.pitches[0]];\r\n                    if ((modIndex == Config.modulators.dictionary[\"none\"].index)\r\n                    || instrument.invalidModulators[Config.modCount - 1 - note.pitches[0]])\r\n                        disabled = true;\r\n                }\r\n                for (let i: number = 0; i < note.pitches.length; i++) {\r\n                    const pitch: number = note.pitches[i];\r\n                    let notePath: SVGPathElement = SVG.path();\r\n                    let colorPrimary: string = (disabled ? ColorConfig.disabledNotePrimary : ColorConfig.getChannelColor(this._doc.song, this._doc.channel).primaryNote);\r\n                    let colorSecondary: string = (disabled ? ColorConfig.disabledNoteSecondary : ColorConfig.getChannelColor(this._doc.song, this._doc.channel).secondaryNote);\r\n                    notePath.setAttribute(\"fill\", colorSecondary);\r\n                    notePath.setAttribute(\"pointer-events\", \"none\");\r\n                    this._drawNote(notePath, pitch, note.start, note.pins, (this._pitchHeight - this._pitchBorder) / 2 + 1, false, this._octaveOffset);\r\n                    this._svgNoteContainer.appendChild(notePath);\r\n                    notePath = SVG.path();\r\n                    notePath.setAttribute(\"fill\", colorPrimary);\r\n                    notePath.setAttribute(\"pointer-events\", \"none\");\r\n                    this._drawNote(notePath, pitch, note.start, note.pins, (this._pitchHeight - this._pitchBorder) / 2 + 1, true, this._octaveOffset);\r\n                    this._svgNoteContainer.appendChild(notePath);\r\n\r\n                    let indicatorOffset: number = 2;\r\n                    if (note.continuesLastPattern) {\r\n                        const arrowHeight: number = Math.min(this._pitchHeight, 20);\r\n                        let arrowPath: string;\r\n                        arrowPath = \"M \" + prettyNumber(this._partWidth * note.start + indicatorOffset) + \" \" + prettyNumber(this._pitchToPixelHeight(pitch - this._octaveOffset) - 0.1 * arrowHeight);\r\n                        arrowPath += \"L \" + prettyNumber(this._partWidth * note.start + indicatorOffset) + \" \" + prettyNumber(this._pitchToPixelHeight(pitch - this._octaveOffset) + 0.1 * arrowHeight);\r\n                        arrowPath += \"L \" + prettyNumber(this._partWidth * note.start + indicatorOffset + 4) + \" \" + prettyNumber(this._pitchToPixelHeight(pitch - this._octaveOffset) + 0.1 * arrowHeight);\r\n                        arrowPath += \"L \" + prettyNumber(this._partWidth * note.start + indicatorOffset + 4) + \" \" + prettyNumber(this._pitchToPixelHeight(pitch - this._octaveOffset) + 0.3 * arrowHeight);\r\n                        arrowPath += \"L \" + prettyNumber(this._partWidth * note.start + indicatorOffset + 12) + \" \" + prettyNumber(this._pitchToPixelHeight(pitch - this._octaveOffset));\r\n                        arrowPath += \"L \" + prettyNumber(this._partWidth * note.start + indicatorOffset + 4) + \" \" + prettyNumber(this._pitchToPixelHeight(pitch - this._octaveOffset) - 0.3 * arrowHeight);\r\n                        arrowPath += \"L \" + prettyNumber(this._partWidth * note.start + indicatorOffset + 4) + \" \" + prettyNumber(this._pitchToPixelHeight(pitch - this._octaveOffset) - 0.1 * arrowHeight);\r\n                        const arrow: SVGPathElement = SVG.path();\r\n                        arrow.setAttribute(\"d\", arrowPath);\r\n                        arrow.setAttribute(\"fill\", ColorConfig.invertedText);\r\n                        this._svgNoteContainer.appendChild(arrow);\r\n                        indicatorOffset += 12;\r\n                    }\r\n\r\n                    if (note.pitches.length > 1) {\r\n                        if (displayNumberedChords) {\r\n                            const oscillatorLabel: SVGTextElement = SVG.text();\r\n                            oscillatorLabel.setAttribute(\"x\", \"\" + prettyNumber(this._partWidth * note.start + indicatorOffset));\r\n                            oscillatorLabel.setAttribute(\"y\", \"\" + prettyNumber(this._pitchToPixelHeight(pitch - this._octaveOffset)));\r\n                            oscillatorLabel.setAttribute(\"width\", \"30\");\r\n                            oscillatorLabel.setAttribute(\"fill\", ColorConfig.invertedText);\r\n                            oscillatorLabel.setAttribute(\"text-anchor\", \"start\");\r\n                            oscillatorLabel.setAttribute(\"dominant-baseline\", \"central\");\r\n                            oscillatorLabel.setAttribute(\"pointer-events\", \"none\");\r\n                            oscillatorLabel.textContent = \"\" + (i + 1);\r\n                            this._svgNoteContainer.appendChild(oscillatorLabel);\r\n                        }\r\n                    }\r\n                }\r\n\r\n\r\n                if (this._doc.song.getChannelIsMod(this._doc.channel) && this._mouseDragging && !this._mouseHorizontal && note == this._cursor.curNote) {\r\n\r\n                    this.modDragValueLabel.style.setProperty(\"display\", \"\");\r\n                    this.modDragValueLabel.style.setProperty(\"pointer-events\", \"none\");\r\n                    this.modDragValueLabel.setAttribute(\"contenteditable\", \"false\");\r\n                    this.modDragValueLabel.style.setProperty(\"color\", \"#FFFFFF\");\r\n                    let setting: number = this._doc.song.channels[this._doc.channel].instruments[this._doc.getCurrentInstrument(this._barOffset)].modulators[Config.modCount - 1 - note.pitches[0]];\r\n                    let presValue: number = this._dragSize + Config.modulators[setting].convertRealFactor;\r\n\r\n                    // This is me being too lazy to fiddle with the css to get it to align center.\r\n                    let xOffset: number = (+(presValue >= 10.0)) + (+(presValue >= 100.0)) + (+(presValue < 0.0)) + (+(presValue <= -10.0));\r\n\r\n                    this._modDragValueLabelWidth = 8 + xOffset * 8;\r\n                    this._modDragValueLabelLeft = +prettyNumber(Math.max(Math.min(this._editorWidth - 10 - xOffset * 8, this._partWidth * this._dragTime - 4 - xOffset * 4), 2));\r\n                    this._modDragValueLabelTop = +prettyNumber(this._pitchToPixelHeight(note.pitches[0] - this._octaveOffset) - 17 - (this._pitchHeight - this._pitchBorder) / 2);\r\n\r\n                    this.modDragValueLabel.style.setProperty(\"left\", \"\" + this._modDragValueLabelLeft + \"px\");\r\n                    this.modDragValueLabel.style.setProperty(\"top\", \"\" + this._modDragValueLabelTop + \"px\");\r\n                    this.modDragValueLabel.textContent = \"\" + presValue;\r\n\r\n                }\r\n            }\r\n        }\r\n\r\n        this._doc.currentPatternIsDirty = false;\r\n    }\r\n\r\n    private _drawNote(svgElement: SVGPathElement, pitch: number, start: number, pins: NotePin[], radius: number, showSize: boolean, offset: number): void {\r\n        const totalWidth: number = this._partWidth * (pins[pins.length - 1].time + pins[0].time);\r\n        const endOffset: number = 0.5 * Math.min(2, totalWidth - 1);\r\n\r\n        let nextPin: NotePin = pins[0];\r\n\r\n        const cap: number = this._doc.song.getVolumeCap(this._doc.song.getChannelIsMod(this._doc.channel), this._doc.channel, this._doc.getCurrentInstrument(this._barOffset), pitch);\r\n\r\n        let pathString: string = \"M \" + prettyNumber(this._partWidth * (start + nextPin.time) + endOffset) + \" \" + prettyNumber(this._pitchToPixelHeight(pitch - offset) + radius * (showSize ? nextPin.size / cap : 1.0)) + \" \";\r\n\r\n        for (let i: number = 1; i < pins.length; i++) {\r\n            let prevPin: NotePin = nextPin;\r\n            nextPin = pins[i];\r\n            let prevSide: number = this._partWidth * (start + prevPin.time) + (i == 1 ? endOffset : 0);\r\n            let nextSide: number = this._partWidth * (start + nextPin.time) - (i == pins.length - 1 ? endOffset : 0);\r\n            let prevHeight: number = this._pitchToPixelHeight(pitch + prevPin.interval - offset);\r\n            let nextHeight: number = this._pitchToPixelHeight(pitch + nextPin.interval - offset);\r\n            let prevSize: number = showSize ? prevPin.size / cap : 1.0;\r\n            let nextSize: number = showSize ? nextPin.size / cap : 1.0;\r\n            pathString += \"L \" + prettyNumber(prevSide) + \" \" + prettyNumber(prevHeight - radius * prevSize) + \" \";\r\n            if (prevPin.interval > nextPin.interval) pathString += \"L \" + prettyNumber(prevSide + 1) + \" \" + prettyNumber(prevHeight - radius * prevSize) + \" \";\r\n            if (prevPin.interval < nextPin.interval) pathString += \"L \" + prettyNumber(nextSide - 1) + \" \" + prettyNumber(nextHeight - radius * nextSize) + \" \";\r\n            pathString += \"L \" + prettyNumber(nextSide) + \" \" + prettyNumber(nextHeight - radius * nextSize) + \" \";\r\n        }\r\n        for (let i: number = pins.length - 2; i >= 0; i--) {\r\n            let prevPin: NotePin = nextPin;\r\n            nextPin = pins[i];\r\n            let prevSide: number = this._partWidth * (start + prevPin.time) - (i == pins.length - 2 ? endOffset : 0);\r\n            let nextSide: number = this._partWidth * (start + nextPin.time) + (i == 0 ? endOffset : 0);\r\n            let prevHeight: number = this._pitchToPixelHeight(pitch + prevPin.interval - offset);\r\n            let nextHeight: number = this._pitchToPixelHeight(pitch + nextPin.interval - offset);\r\n            let prevSize: number = showSize ? prevPin.size / cap : 1.0;\r\n            let nextSize: number = showSize ? nextPin.size / cap : 1.0;\r\n            pathString += \"L \" + prettyNumber(prevSide) + \" \" + prettyNumber(prevHeight + radius * prevSize) + \" \";\r\n            if (prevPin.interval < nextPin.interval) pathString += \"L \" + prettyNumber(prevSide - 1) + \" \" + prettyNumber(prevHeight + radius * prevSize) + \" \";\r\n            if (prevPin.interval > nextPin.interval) pathString += \"L \" + prettyNumber(nextSide + 1) + \" \" + prettyNumber(nextHeight + radius * nextSize) + \" \";\r\n            pathString += \"L \" + prettyNumber(nextSide) + \" \" + prettyNumber(nextHeight + radius * nextSize) + \" \";\r\n        }\r\n        pathString += \"z\";\r\n\r\n        svgElement.setAttribute(\"d\", pathString);\r\n    }\r\n\r\n    private _pitchToPixelHeight(pitch: number): number {\r\n        return this._pitchHeight * (this._pitchCount - (pitch) - 0.5);\r\n    }\r\n}\r\n","// Copyright (c) 2012-2022 John Nesky and contributing authors, distributed under the MIT license, see accompanying the LICENSE.md file.\r\n\r\nimport { Config } from \"../synth/SynthConfig\";\r\nimport { SongDocument } from \"./SongDocument\";\r\nimport { HTML, SVG } from \"imperative-html/dist/esm/elements-strict\";\r\nimport { ColorConfig } from \"./ColorConfig\";\r\nimport { Instrument } from \"../synth/synth\";\r\n\r\nexport class Piano {\r\n\t\tprivate readonly _pianoContainer: HTMLDivElement = HTML.div({style: \"width: 100%; height: 100%; display: flex; flex-direction: column-reverse; align-items: stretch;\"});\r\n\t\tprivate readonly _drumContainer: HTMLDivElement = HTML.div({style: \"width: 100%; height: 100%; display: flex; flex-direction: column-reverse; align-items: stretch;\"});\r\n\t\tprivate readonly _modContainer: HTMLDivElement = HTML.div({ style: \"width: 100%; height: 100%; display: flex; flex-direction: column-reverse; align-items: stretch;\" });\r\n\t\tprivate readonly _preview: HTMLDivElement = HTML.div({style: `width: 100%; height: 40px; border: 2px solid ${ColorConfig.primaryText}; position: absolute; box-sizing: border-box; pointer-events: none;`});\r\n\t\tpublic readonly container: HTMLDivElement = HTML.div({style: \"width: 32px; height: 100%; overflow: hidden; position: relative; flex-shrink: 0; touch-action: none;\"},\r\n\t\tthis._pianoContainer,\r\n\t\tthis._drumContainer,\r\n\t\tthis._modContainer,\r\n\t\tthis._preview,\r\n\t);\r\n\tprivate readonly _editorHeight: number = 481;\r\n\tprivate readonly _pianoKeys: HTMLDivElement[] = [];\r\n\tprivate readonly _pianoLabels: HTMLDivElement[] = [];\r\n\tprivate readonly _modFirstLabels: SVGTextElement[] = [];\r\n\tprivate readonly _modSecondLabels: SVGTextElement[] = [];\r\n\tprivate readonly _modCountLabels: SVGTextElement[] = [];\r\n\tprivate readonly _modCountRects: SVGRectElement[] = [];\r\n\t\t\r\n\tprivate _pitchHeight: number;\r\n\tprivate _pitchCount: number;\r\n\t//private _mouseX: number = 0;\r\n\tprivate _mouseY: number = 0;\r\n\tprivate _mouseDown: boolean = false;\r\n\tprivate _mouseOver: boolean = false;\r\n\tprivate _cursorPitch: number;\r\n\tprivate _playedPitch: number = -1;\r\n\tprivate _renderedScale: number = -1;\r\n\tprivate _renderedDrums: boolean = false;\r\n\tprivate _renderedMod: boolean = false;\r\n\tprivate _renderedKey: number = -1;\r\n\tprivate _renderedPitchCount: number = -1;\r\n\tprivate readonly _renderedLiveInputPitches: number[] = [];\r\n\t\r\n\t\t\r\n\tpublic forceRender(): void {\r\n\t\tthis._renderedScale = -1;\r\n\t\tthis._documentChanged();\r\n\t}\r\n\r\n\tconstructor(private _doc: SongDocument) {\r\n\t\t\t\r\n\t\tfor (let i: number = 0; i < Config.drumCount; i++) {\r\n\t\t\tconst scale: number = (1.0 - (i / Config.drumCount) * 0.35) * 100;\r\n\t\t\tthis._drumContainer.appendChild(HTML.div({class: \"drum-button\", style: `background-size: ${scale}% ${scale}%;`}));\r\n\t\t}\r\n\t\t\t\r\n\t\tfor (let i: number = 0; i < Config.modCount; i++) {\r\n\r\n\r\n\t\t\tconst firstRowText: SVGTextElement = SVG.text({ class: \"modulator-label\", \"text-anchor\": \"left\", fill: ColorConfig.modLabelPrimaryText, style: \"font-weight: bold; align-self: flex-start; transform-origin: center; transform: rotate(-90deg) translate(-19px, 39px); font-size: 11px; font-family: sans-serif;\" });\r\n\t\t\tconst secondRowText: SVGTextElement = SVG.text({ class: \"modulator-label\", \"text-anchor\": \"left\", fill: ColorConfig.modLabelPrimaryText, style: \"font-weight: bold; align-self: flex-end; transform-origin: center; transform: rotate(-90deg) translate(-26px, 42px); font-size: 11px; font-family: sans-serif;\" });\r\n\t\t\tconst countText: SVGTextElement = SVG.text({ class: \"modulator-inverse-label\", fill: ColorConfig.modLabelPrimary, style: \"font-weight: bold; align-self: flex-start; transform-origin: center; transform: rotate(-90deg) translate(4px, 13px); font-size: 11px; font-family: sans-serif;\" });\r\n\t\t\tconst countRect: SVGRectElement = SVG.rect({ width: \"12px\", height: \"9px\", fill: ColorConfig.indicatorPrimary, style: \"pointer-events: none; transform: translate(4px, 4px);\" });\r\n\r\n\t\t\tconst firstRowSVG: SVGSVGElement = SVG.svg({ viewBox: \"0 0 16 66\", width: \"16px\", style: \"pointer-events: none; flex-grow: 1;\" }, [\r\n\t\t\t\tfirstRowText,\r\n\t\t\t]);\r\n\t\t\tconst countSVG: SVGSVGElement = SVG.svg({ viewBox: \"0 0 16 14\", width: \"16px\", style: \"pointer-events: none;\" }, [\r\n\t\t\t\tcountRect,\r\n\t\t\t\tcountText,\r\n\t\t\t]);\r\n\t\t\tconst secondRowSVG: SVGSVGElement = SVG.svg({ viewBox: \"0 0 16 80\", width: \"16px\", style: \"pointer-events: none;\" }, [\r\n\t\t\t\tsecondRowText,\r\n\t\t\t]);\r\n\r\n\t\t\tconst flexRow1: HTMLDivElement = HTML.div({ style: \"display: flex; flex-direction: column; justify-content: space-between; pointer-events: none;\" }, [\r\n\t\t\t\tcountSVG,\r\n\t\t\t\tfirstRowSVG,\r\n\t\t\t]);\r\n\t\t\tconst flexRow2: HTMLDivElement = HTML.div({ style: \"display: flex; flex-direction: column-reverse; justify-content: space-between; pointer-events: none;\" }, [\r\n\t\t\t\tsecondRowSVG,\r\n\t\t\t]);\r\n\r\n\t\t\tconst flexContainer: HTMLDivElement = HTML.div({ style: \"display: flex; flex-direction: row; justify-content: space-between; padding: 0px; width: 32px; height: 100%; overflow: hidden; pointer-events: none;\" }, [\r\n\t\t\t\tflexRow1,\r\n\t\t\t\tflexRow2,\r\n\t\t\t]);\r\n\r\n\t\t\tconst modKey: HTMLDivElement = HTML.div({ class: \"modulator-button\", style: \"background: \" + ColorConfig.modLabelPrimary + \";\" }, flexContainer);\r\n\t\t\tthis._modContainer.appendChild(modKey);\r\n\t\t\tthis._modFirstLabels.push(firstRowText);\r\n\t\t\tthis._modSecondLabels.push(secondRowText);\r\n\t\t\tthis._modCountLabels.push(countText);\r\n\t\t\tthis._modCountRects.push(countRect);\r\n\t\t}\r\n\r\n\t\tthis.container.addEventListener(\"mousedown\", this._whenMousePressed);\r\n\t\tdocument.addEventListener(\"mousemove\", this._whenMouseMoved);\r\n\t\tdocument.addEventListener(\"mouseup\", this._whenMouseReleased);\r\n\t\tthis.container.addEventListener(\"mouseover\", this._whenMouseOver);\r\n\t\tthis.container.addEventListener(\"mouseout\", this._whenMouseOut);\r\n\t\t\t\r\n\t\tthis.container.addEventListener(\"touchstart\", this._whenTouchPressed);\r\n\t\tthis.container.addEventListener(\"touchmove\", this._whenTouchMoved);\r\n\t\tthis.container.addEventListener(\"touchend\", this._whenTouchReleased);\r\n\t\tthis.container.addEventListener(\"touchcancel\", this._whenTouchReleased);\r\n\t\t\t\r\n\t\tthis._doc.notifier.watch(this._documentChanged);\r\n\t\tthis._documentChanged();\r\n\t\t\r\n\t\twindow.requestAnimationFrame(this._onAnimationFrame);\r\n\t}\r\n\t\t\r\n\tprivate _updateCursorPitch(): void {\r\n\t\tconst scale: ReadonlyArray<boolean> = this._doc.song.scale == Config.scales.dictionary[\"Custom\"].index ? this._doc.song.scaleCustom : Config.scales[this._doc.song.scale].flags;\r\n\t\tconst mousePitch: number = Math.max(0, Math.min(this._pitchCount-1, this._pitchCount - (this._mouseY / this._pitchHeight)));\r\n\t\tif (scale[Math.floor(mousePitch) % Config.pitchesPerOctave] || this._doc.song.getChannelIsNoise(this._doc.channel)) {\r\n\t\t\tthis._cursorPitch = Math.floor(mousePitch);\r\n\t\t} else {\r\n\t\t\tlet topPitch: number = Math.floor(mousePitch) + 1;\r\n\t\t\tlet bottomPitch: number = Math.floor(mousePitch) - 1;\r\n\t\t\twhile (!scale[topPitch % Config.pitchesPerOctave]) {\r\n\t\t\t\ttopPitch++;\r\n\t\t\t}\r\n\t\t\twhile (!scale[(bottomPitch) % Config.pitchesPerOctave]) {\r\n\t\t\t\tbottomPitch--;\r\n\t\t\t}\r\n\t\t\tlet topRange: number = topPitch;\r\n\t\t\tlet bottomRange: number = bottomPitch + 1;\r\n\t\t\tif (topPitch % Config.pitchesPerOctave == 0 || topPitch % Config.pitchesPerOctave == 7) {\r\n\t\t\t\ttopRange -= 0.5;\r\n\t\t\t}\r\n\t\t\tif (bottomPitch % Config.pitchesPerOctave == 0 || bottomPitch % Config.pitchesPerOctave == 7) {\r\n\t\t\t\tbottomRange += 0.5;\r\n\t\t\t}\r\n\t\t\tthis._cursorPitch = mousePitch - bottomRange > topRange - mousePitch ? topPitch : bottomPitch;\r\n\t\t}\r\n\t}\r\n\t\t\r\n\tprivate _playLiveInput(): void {\r\n\t\tconst octaveOffset: number = this._doc.getBaseVisibleOctave(this._doc.channel) * Config.pitchesPerOctave;\r\n\t\tconst currentPitch: number = this._cursorPitch + octaveOffset;\r\n\t\tif (this._playedPitch == currentPitch) return;\r\n\t\tthis._doc.performance.removePerformedPitch(this._playedPitch);\r\n\t\tthis._playedPitch = currentPitch;\r\n\t\tthis._doc.performance.addPerformedPitch(currentPitch);\r\n\t}\r\n\t\t\r\n\tprivate _releaseLiveInput(): void {\r\n\t\tthis._doc.performance.removePerformedPitch(this._playedPitch);\r\n\t\tthis._playedPitch = -1;\r\n\t}\r\n\t\t\r\n\tprivate _whenMouseOver = (event: MouseEvent): void => {\r\n\t\tif (this._mouseOver) return;\r\n\t\tthis._mouseOver = true;\r\n\t\tthis._updatePreview();\r\n\t}\r\n\t\t\r\n\tprivate _whenMouseOut = (event: MouseEvent): void => {\r\n\t\tif (!this._mouseOver) return;\r\n\t\tthis._mouseOver = false;\r\n\t\tthis._updatePreview();\r\n\t}\r\n\t\t\r\n\tprivate _whenMousePressed = (event: MouseEvent): void => {\r\n\t\tevent.preventDefault();\r\n\t\tthis._doc.synth.maintainLiveInput();\r\n\t\tthis._mouseDown = true;\r\n\t\tconst boundingRect: ClientRect = this.container.getBoundingClientRect();\r\n\t\t//this._mouseX = (event.clientX || event.pageX) - boundingRect.left;\r\n\t\tthis._mouseY = ((event.clientY || event.pageY) - boundingRect.top) * this._editorHeight / (boundingRect.bottom - boundingRect.top);\r\n\t\tif (isNaN(this._mouseY)) this._mouseY = 0;\r\n\t\tthis._updateCursorPitch();\r\n\t\tthis._playLiveInput();\r\n\t\tthis._updatePreview();\r\n\t}\r\n\t\t\r\n\tprivate _whenMouseMoved = (event: MouseEvent): void => {\r\n\t\tif (this._mouseDown || this._mouseOver) this._doc.synth.maintainLiveInput();\r\n\t\tconst boundingRect: ClientRect = this.container.getBoundingClientRect();\r\n\t\t//this._mouseX = (event.clientX || event.pageX) - boundingRect.left;\r\n\t\tthis._mouseY = ((event.clientY || event.pageY) - boundingRect.top) * this._editorHeight / (boundingRect.bottom - boundingRect.top);\r\n\t\tif (isNaN(this._mouseY)) this._mouseY = 0;\r\n\t\tthis._updateCursorPitch();\r\n\t\tif (this._mouseDown) this._playLiveInput();\r\n\t\tthis._updatePreview();\r\n\t}\r\n\t\t\r\n\tprivate _whenMouseReleased = (event: MouseEvent): void => {\r\n\t\tif (this._mouseDown) this._releaseLiveInput();\r\n\t\tthis._mouseDown = false;\r\n\t\tthis._updatePreview();\r\n\t}\r\n\t\t\r\n\tprivate _whenTouchPressed = (event: TouchEvent): void => {\r\n\t\tevent.preventDefault();\r\n\t\tthis._doc.synth.maintainLiveInput();\r\n\t\tthis._mouseDown = true;\r\n\t\tconst boundingRect: ClientRect = this.container.getBoundingClientRect();\r\n\t\t//this._mouseX = event.touches[0].clientX - boundingRect.left;\r\n\t\tthis._mouseY = (event.touches[0].clientY - boundingRect.top) * this._editorHeight / (boundingRect.bottom - boundingRect.top);\r\n\t\tif (isNaN(this._mouseY)) this._mouseY = 0;\r\n\t\tthis._updateCursorPitch();\r\n\t\tthis._playLiveInput();\r\n\t}\r\n\t\t\r\n\tprivate _whenTouchMoved = (event: TouchEvent): void => {\r\n\t\tevent.preventDefault();\r\n\t\tthis._doc.synth.maintainLiveInput();\r\n\t\tconst boundingRect: ClientRect = this.container.getBoundingClientRect();\r\n\t\t//this._mouseX = event.touches[0].clientX - boundingRect.left;\r\n\t\tthis._mouseY = (event.touches[0].clientY - boundingRect.top) * this._editorHeight / (boundingRect.bottom - boundingRect.top);\r\n\t\tif (isNaN(this._mouseY)) this._mouseY = 0;\r\n\t\tthis._updateCursorPitch();\r\n\t\tif (this._mouseDown) this._playLiveInput();\r\n\t}\r\n\t\t\r\n\tprivate _whenTouchReleased = (event: TouchEvent): void => {\r\n\t\tevent.preventDefault();\r\n\t\tthis._mouseDown = false;\r\n\t\tthis._releaseLiveInput();\r\n\t}\r\n\t\r\n\tprivate _onAnimationFrame = (): void => {\r\n\t\twindow.requestAnimationFrame(this._onAnimationFrame);\r\n\t\t\r\n\t\tlet liveInputChanged: boolean = false;\r\n\t\tconst liveInputPitchCount: number = !this._doc.performance.pitchesAreTemporary() ? this._doc.synth.liveInputPitches.length : 0;\r\n\t\tif (this._renderedLiveInputPitches.length != liveInputPitchCount) {\r\n\t\t\tliveInputChanged = true;\r\n\t\t}\r\n\t\tfor (let i: number = 0; i < liveInputPitchCount; i++) {\r\n\t\t\tif (this._renderedLiveInputPitches[i] != this._doc.synth.liveInputPitches[i]) {\r\n\t\t\t\tthis._renderedLiveInputPitches[i] = this._doc.synth.liveInputPitches[i];\r\n\t\t\t\tliveInputChanged = true;\r\n\t\t\t}\r\n\t\t}\r\n\t\tthis._renderedLiveInputPitches.length = liveInputPitchCount;\r\n\t\t\r\n\t\tif (liveInputChanged) {\r\n\t\t\tthis._updatePreview();\r\n\t\t}\r\n\t}\r\n\t\r\n\tprivate _updatePreview(): void {\r\n\t\tthis._preview.style.visibility = (!this._mouseOver || this._mouseDown) ? \"hidden\" : \"visible\";\r\n\t\t\r\n\t\tif (this._mouseOver && !this._mouseDown) {\r\n\t\t\tconst boundingRect: ClientRect = this.container.getBoundingClientRect();\r\n\t\t\tconst pitchHeight: number = this._pitchHeight / (this._editorHeight / (boundingRect.bottom - boundingRect.top));\r\n\t\t\t\r\n\t\t\tthis._preview.style.left = \"0px\";\r\n\t\t\tthis._preview.style.top = pitchHeight * (this._pitchCount - this._cursorPitch - 1) + \"px\";\r\n\t\t\tthis._preview.style.height = pitchHeight + \"px\";\r\n\t\t}\r\n\t\t\r\n\t\tconst octaveOffset: number = this._doc.getBaseVisibleOctave(this._doc.channel) * Config.pitchesPerOctave;\r\n\t\tconst container: HTMLDivElement = this._doc.song.getChannelIsNoise(this._doc.channel) ? this._drumContainer : this._pianoContainer;\r\n\t\tconst children: HTMLCollection = container.children;\r\n\t\tfor (let i: number = 0; i < children.length; i++) {\r\n\t\t\tconst child: Element = children[i];\r\n\t\t\tif (this._renderedLiveInputPitches.indexOf(i + octaveOffset) == -1) {\r\n\t\t\t\tchild.classList.remove(\"pressed\");\r\n\t\t\t} else {\r\n\t\t\t\tchild.classList.add(\"pressed\");\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\t\r\n\tprivate _documentChanged = (): void => {\r\n\t\tconst isDrum: boolean = this._doc.song.getChannelIsNoise(this._doc.channel);\r\n\t\tconst isMod: boolean = this._doc.song.getChannelIsMod(this._doc.channel);\r\n\t\tthis._pitchCount = isMod ? Config.modCount : ( isDrum ? Config.drumCount : this._doc.getVisiblePitchCount() );\r\n\r\n\t\tthis._pitchHeight = this._editorHeight / this._pitchCount;\r\n\t\tthis._updateCursorPitch();\r\n\t\tif (this._mouseDown) this._playLiveInput();\r\n\t\t\r\n\t\tif (!this._doc.prefs.showLetters) return;\r\n\t\tif ((this._renderedScale == this._doc.song.scale && this._doc.song.scale != Config.scales.dictionary[\"Custom\"].index) && this._renderedKey == this._doc.song.key && this._renderedDrums == isDrum && this._renderedMod == isMod && this._renderedPitchCount == this._pitchCount) return;\r\n\t\t\r\n\t\tthis._renderedScale = this._doc.song.scale;\r\n\t\tthis._renderedKey = this._doc.song.key;\r\n\t\tthis._renderedDrums = isDrum;\r\n\t\tthis._renderedMod = isMod;\r\n\t\tconst instrument: Instrument = this._doc.song.channels[this._doc.channel].instruments[this._doc.getCurrentInstrument()];\r\n\t\t\r\n\t\tthis._pianoContainer.style.display = (isDrum || isMod) ? \"none\" : \"flex\";\r\n\t\tthis._drumContainer.style.display = isDrum ? \"flex\" : \"none\";\r\n\t\tthis._modContainer.style.display = isMod ? \"flex\" : \"none\";\r\n\t\t\r\n\t\tif (!isDrum && !isMod) {\r\n\t\t\tif (this._renderedPitchCount != this._pitchCount) {\r\n\t\t\t\tthis._pianoContainer.innerHTML = \"\";\r\n\t\t\t\tfor (let i: number = 0; i < this._pitchCount; i++) {\r\n\t\t\t\t\tconst pianoLabel: HTMLDivElement = HTML.div({class: \"piano-label\", style: \"font-weight: bold; -webkit-text-stroke-width: 0; font-size: 11px; font-family: sans-serif; position: absolute; padding-left: 15px;\"});\r\n\t\t\t\t\tconst pianoKey: HTMLDivElement = HTML.div({class: \"piano-button\", style: \"background: gray;\"}, pianoLabel);\r\n\t\t\t\t\tthis._pianoContainer.appendChild(pianoKey);\r\n\t\t\t\t\tthis._pianoLabels[i] = pianoLabel;\r\n\t\t\t\t\tthis._pianoKeys[i] = pianoKey;\r\n\t\t\t\t}\r\n\t\t\t\tthis._pianoLabels.length = this._pitchCount;\r\n\t\t\t\tthis._pianoKeys.length = this._pitchCount;\r\n\t\t\t\tthis._renderedPitchCount = this._pitchCount;\r\n\t\t\t}\r\n\t\t\t\r\n\t\t\tfor (let j: number = 0; j < this._pitchCount; j++) {\r\n\t\t\t\tconst pitchNameIndex: number = (j + Config.keys[this._doc.song.key].basePitch) % Config.pitchesPerOctave;\r\n\t\t\t\tconst isWhiteKey: boolean = Config.keys[pitchNameIndex].isWhiteKey;\r\n\t\t\t\tthis._pianoKeys[j].style.background = isWhiteKey ? ColorConfig.whitePianoKey : ColorConfig.blackPianoKey;\r\n                let scale = this._doc.song.scale == Config.scales.dictionary[\"Custom\"].index ? this._doc.song.scaleCustom : Config.scales[this._doc.song.scale].flags;\r\n\t\t\t\tif (!scale[j % Config.pitchesPerOctave]) {\r\n\t\t\t\t\tthis._pianoKeys[j].classList.add(\"disabled\");\r\n\t\t\t\t\tthis._pianoLabels[j].style.display = \"none\";\r\n\t\t\t\t} else {\r\n\t\t\t\t\tthis._pianoKeys[j].classList.remove(\"disabled\");\r\n\t\t\t\t\tthis._pianoLabels[j].style.display = \"\";\r\n\t\t\t\t\t\t\r\n\t\t\t\t\tconst label: HTMLDivElement = this._pianoLabels[j];\r\n\r\n\t\t\t\t\tif ((j % 12) == 0) {\r\n\t\t\t\t\t\tlabel.style.transform = \"translate(-5px, 0px)\";\r\n\t\t\t\t\t}\r\n\t\t\t\t\telse {\r\n\t\t\t\t\t\tlabel.style.transform = \"translate(0px, 0px)\";\r\n\t\t\t\t\t}\r\n\r\n\r\n\t\t\t\t\tlabel.style.color = Config.keys[pitchNameIndex].isWhiteKey ? ColorConfig.whitePianoKeyText : ColorConfig.blackPianoKeyText;\r\n\t\t\t\t\tlabel.textContent = Piano.getPitchName(pitchNameIndex, j, this._doc.getBaseVisibleOctave(this._doc.channel) + this._doc.song.octave);\r\n\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\t\telse if (isMod) {\r\n\t\t\tlet firstRow: string = \"\";\r\n\t\t\tlet secondRow: string = \"\";\r\n\t\t\tlet useFirstColor: string = ColorConfig.modLabelPrimaryText;\r\n\t\t\tlet useSecondColor: string = ColorConfig.modLabelSecondaryText;\r\n\t\t\tfor (let j: number = 0; j < Config.modCount; j++) {\r\n\r\n\t\t\t\tlet usingSecondRow: boolean = true;\r\n\t\t\t\tlet usingMod: boolean = true;\r\n\t\t\t\tlet instrumentVal: number = instrument.modInstruments[Config.modCount - j - 1] + 1;\r\n\t\t\t\tlet channelVal: number = instrument.modChannels[Config.modCount - j - 1] + 1;\r\n\t\t\t\tlet modulator: number = instrument.modulators[Config.modCount - j - 1];\r\n\t\t\t\tlet status: number = 1 + +(channelVal - 1 >= this._doc.song.pitchChannelCount);\r\n\t\t\t\tif (instrument.modChannels[Config.modCount - j - 1] == -2)\r\n\t\t\t\t\tstatus = 0;\r\n\t\t\t\telse if (instrument.modChannels[Config.modCount - j - 1] == -1)\r\n\t\t\t\t\tstatus = 3;\r\n\t\t\t\tlet instrumentsLength: number = this._doc.song.channels[Math.max(0,channelVal - 1)].instruments.length;\r\n\t\t\t\t// 0 - none\r\n\t\t\t\t// 1 - pitch\r\n\t\t\t\t// 2 - noise\r\n\t\t\t\t// 3 - song\r\n\r\n\r\n\t\t\t\tswitch (status) {\r\n\t\t\t\t\tcase 0:\r\n\t\t\t\t\t\tfirstRow = \"Mod\"\r\n\t\t\t\t\t\tusingSecondRow = false;\r\n\t\t\t\t\t\tuseSecondColor = ColorConfig.modLabelSecondaryText;\r\n\t\t\t\t\t\tusingMod = false;\r\n\t\t\t\t\t\tbreak;\r\n\t\t\t\t\tcase 1:\r\n\t\t\t\t\t\tif (this._doc.song.channels[channelVal - 1].name == \"\") {\r\n\r\n\t\t\t\t\t\t\tif (instrumentsLength > 1) {\r\n\t\t\t\t\t\t\t\tif (channelVal >= 10 || instrumentVal >= 10) {\r\n\t\t\t\t\t\t\t\t\tfirstRow = \"P\" + channelVal;\r\n\t\t\t\t\t\t\t\t\tif (instrumentVal - 1 == instrumentsLength) {\r\n\t\t\t\t\t\t\t\t\t\tfirstRow += \" All\";\r\n\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t\telse if (instrumentVal - 1 > instrumentsLength) {\r\n\t\t\t\t\t\t\t\t\t\tfirstRow += \" Act\";\r\n\t\t\t\t\t\t\t\t\t} else {\r\n\t\t\t\t\t\t\t\t\t\tfirstRow += \" I\" + instrumentVal;\r\n\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\telse {\r\n\t\t\t\t\t\t\t\t\tfirstRow = \"Pitch\" + channelVal;\r\n\t\t\t\t\t\t\t\t\tif (instrumentVal-1 == instrumentsLength) {\r\n\t\t\t\t\t\t\t\t\t\tfirstRow += \" All\";\r\n\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t\telse if (instrumentVal - 1 > instrumentsLength) {\r\n\t\t\t\t\t\t\t\t\t\tfirstRow += \" Act\";\r\n\t\t\t\t\t\t\t\t\t} else {\r\n\t\t\t\t\t\t\t\t\t\tfirstRow += \" Ins\" + instrumentVal;\r\n\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\telse {\r\n\t\t\t\t\t\t\t\tfirstRow = \"Pitch \" + channelVal;\r\n\t\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t\t} else {\r\n\r\n\t\t\t\t\t\t\t// Channel name display\r\n\t\t\t\t\t\t\tlet insText: string;\r\n\t\t\t\t\t\t\tif (instrumentVal - 1 == instrumentsLength) {\r\n\t\t\t\t\t\t\t\tinsText = \" All\";\r\n\t\t\t\t\t\t\t} else if (instrumentVal - 1 > instrumentsLength) {\r\n\t\t\t\t\t\t\t\tinsText = \" Act\";\r\n\t\t\t\t\t\t\t} else {\r\n\t\t\t\t\t\t\t\tinsText = \" I\" + instrumentVal;\r\n                            }\r\n\t\t\t\t\t\t\tif (instrumentsLength > 1) {\r\n\t\t\t\t\t\t\t\tfirstRow = \"P\" + channelVal + \" \" + this._doc.song.channels[channelVal - 1].name + insText;\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\telse {\r\n\t\t\t\t\t\t\t\tfirstRow = \"P\" + channelVal + \" \" + this._doc.song.channels[channelVal - 1].name;\r\n\t\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\tbreak;\r\n\t\t\t\t\tcase 2:\r\n\t\t\t\t\t\tchannelVal = instrument.modChannels[Config.modCount - j - 1] + 1 - this._doc.song.pitchChannelCount;\r\n\t\t\t\t\t\tinstrumentsLength = this._doc.song.channels[channelVal - 1].instruments.length;\r\n\r\n\t\t\t\t\t\tif (this._doc.song.channels[channelVal - 1].name == \"\") {\r\n\r\n\t\t\t\t\t\t\tif (instrumentsLength > 1) {\r\n\r\n\t\t\t\t\t\t\t\tif (channelVal >= 10 || instrumentVal >= 10) {\r\n\t\t\t\t\t\t\t\t\tfirstRow = \"N\" + channelVal;\r\n\t\t\t\t\t\t\t\t\tif (instrumentVal - 1 == instrumentsLength) {\r\n\t\t\t\t\t\t\t\t\t\tfirstRow += \" All\";\r\n\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t\telse if (instrumentVal - 1 > instrumentsLength) {\r\n\t\t\t\t\t\t\t\t\t\tfirstRow += \" Act\";\r\n\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t\telse {\r\n\t\t\t\t\t\t\t\t\t\tfirstRow += \" I\" + instrumentVal;\r\n\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\telse {\r\n\t\t\t\t\t\t\t\t\tfirstRow = \"Noise\" + channelVal;\r\n\t\t\t\t\t\t\t\t\tif (instrumentVal - 1 == instrumentsLength) {\r\n\t\t\t\t\t\t\t\t\t\tfirstRow += \" All\";\r\n\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t\telse if (instrumentVal - 1 > instrumentsLength) {\r\n\t\t\t\t\t\t\t\t\t\tfirstRow += \" Act\";\r\n\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t\telse {\r\n\t\t\t\t\t\t\t\t\t\tfirstRow += \" Ins\" + instrumentVal;\r\n\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\telse {\r\n\t\t\t\t\t\t\t\tfirstRow = \"Noise \" + channelVal;\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t} else {\r\n\r\n\t\t\t\t\t\t\t// Channel name display\r\n\t\t\t\t\t\t\tif (instrumentsLength > 1) {\r\n\t\t\t\t\t\t\t\tlet insText: string;\r\n\t\t\t\t\t\t\t\tif (instrumentVal - 1 == instrumentsLength) {\r\n\t\t\t\t\t\t\t\t\tinsText = \" All\";\r\n\t\t\t\t\t\t\t\t} else if (instrumentVal - 1 > instrumentsLength) {\r\n\t\t\t\t\t\t\t\t\tinsText = \" Act\";\r\n\t\t\t\t\t\t\t\t} else {\r\n\t\t\t\t\t\t\t\t\tinsText = \" I\" + instrumentVal;\r\n\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\tfirstRow = \"N\" + channelVal + \" \" + this._doc.song.channels[channelVal - 1].name + insText;\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\telse {\r\n\t\t\t\t\t\t\t\tfirstRow = \"N\" + channelVal + \" \" + this._doc.song.channels[channelVal - 1].name;\r\n\t\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\tbreak;\r\n\t\t\t\t\tcase 3:\r\n\t\t\t\t\t\tfirstRow = \"Song\";\r\n\t\t\t\t\t\tbreak;\r\n\t\t\t\t}\r\n\r\n\t\t\t\t// When unused, show name of mod on second row\r\n\t\t\t\tif (usingSecondRow) {\r\n\t\t\t\t\tsecondRow = Config.modulators[modulator].pianoName;\r\n\t\t\t\t\tif (modulator == Config.modulators.dictionary[\"none\"].index) {\r\n\t\t\t\t\t\tuseSecondColor = ColorConfig.modLabelSecondaryText;\r\n\t\t\t\t\t\tusingMod = false;\r\n\t\t\t\t\t}\r\n\t\t\t\t\telse if (modulator == Config.modulators.dictionary[\"eq filter\"].index || modulator == Config.modulators.dictionary[\"note filter\"].index) {\r\n\t\t\t\t\t\tvar text = \" Morph\";\r\n\t\t\t\t\t\tvar filterVal = instrument.modFilterTypes[Config.modCount - j - 1];\r\n\t\t\t\t\t\tif (filterVal > 0 && (filterVal % 2)) {\r\n\t\t\t\t\t\t\ttext = \" Dot\" + Math.ceil(filterVal / 2) + \"X\";\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\telse if (filterVal > 0) {\r\n\t\t\t\t\t\t\ttext = \" Dot\" + Math.ceil(filterVal / 2) + \"Y\";\r\n                        }\r\n\t\t\t\t\t\t\r\n\t\t\t\t\t\tsecondRow += text;\r\n                    }\r\n\t\t\t\t}\r\n\r\n\t\t\t\tconst firstLabel: SVGTextElement = this._modFirstLabels[j];\r\n\t\t\t\tconst secondLabel: SVGTextElement = this._modSecondLabels[j];\r\n\t\t\t\tconst modCountLabel: SVGTextElement = this._modCountLabels[j];\r\n\t\t\t\tconst modCountRect: SVGRectElement = this._modCountRects[j];\r\n\t\t\t\tfirstLabel.style.fill = useFirstColor;\r\n\t\t\t\tfirstLabel.textContent = firstRow;\r\n\t\t\t\tsecondLabel.style.fill = useSecondColor;\r\n\t\t\t\tsecondLabel.textContent = usingSecondRow ? secondRow : \"Not set\";\r\n\t\t\t\tmodCountLabel.textContent = \"\" + (Config.modCount - j);\r\n\t\t\t\tmodCountRect.style.fill = usingMod ? ColorConfig.indicatorPrimary : ColorConfig.modLabelSecondaryText;\r\n\r\n\t\t\t\t// Check if text is too long, if name is set\r\n\t\t\t\tif (this._doc.song.channels[Math.max(0,instrument.modChannels[Config.modCount - j - 1])].name != \"\") {\r\n\t\t\t\t\tlet scaleFactor: string = \"1\";\r\n\t\t\t\t\tlet height: number = firstLabel.parentElement!.parentElement!.getBoundingClientRect().height;\r\n\t\t\t\t\tlet length: number = firstLabel.getComputedTextLength();\r\n\t\t\t\t\tlet squeeze: number = 0;\r\n\t\t\t\t\tif (length > height - 8) {\r\n\t\t\t\t\t\tscaleFactor = \"0.65\";\r\n\t\t\t\t\t\tsqueeze = 2;\r\n\t\t\t\t\t}\r\n\t\t\t\t\telse if (length > height - 24) {\r\n\t\t\t\t\t\tscaleFactor = \"0.8\";\r\n\t\t\t\t\t\tsqueeze = 1;\r\n\t\t\t\t\t}\r\n\t\t\t\t\tfirstLabel.style.transform = \"rotate(-90deg) translate(\" + (-20 - squeeze - Math.round(Math.max(0, (height - 80) / 2))) + \"px, 39px) scale(\" + scaleFactor + \", 1)\";\r\n\t\t\t\t\t// Truncate end of string if it's too long, but keep instrument num\r\n\t\t\t\t\twhile (scaleFactor == \"0.65\" && firstLabel.getComputedTextLength() > height + 8) {\r\n\t\t\t\t\t\tvar offset = 4 + (instrumentVal >= 10 ? 1 : 0);\r\n\t\t\t\t\t\tfirstLabel.textContent = firstLabel.textContent.substr(0, firstLabel.textContent.length - offset) + firstLabel.textContent.substr(firstLabel.textContent.length - offset + 1);\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t\telse {\r\n\t\t\t\t\tlet height: number = firstLabel.parentElement!.parentElement!.getBoundingClientRect().height;\r\n\t\t\t\t\tfirstLabel.style.transform = \"rotate(-90deg) translate(\" + (-20 - Math.round(Math.max(0, (height - 80) / 2))) + \"px, 39px) scale(1, 1)\";\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\t\tthis._updatePreview();\r\n\t}\r\n\r\n\tpublic static getPitchName(pitchNameIndex: number, scaleIndex: number, baseVisibleOctave: number): string {\r\n\t\tlet text: string;\r\n\r\n\t\tif (Config.keys[pitchNameIndex].isWhiteKey) {\r\n\t\t\ttext = Config.keys[pitchNameIndex].name;\r\n\t\t} else {\r\n\t\t\tconst shiftDir: number = Config.blackKeyNameParents[scaleIndex % Config.pitchesPerOctave];\r\n\t\t\ttext = Config.keys[(pitchNameIndex + Config.pitchesPerOctave + shiftDir) % Config.pitchesPerOctave].name;\r\n\t\t\tif (shiftDir == 1) {\r\n\t\t\t\ttext += \"♭\";\r\n\t\t\t} else if (shiftDir == -1) {\r\n\t\t\t\ttext += \"♯\";\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tif (scaleIndex % 12 == 0) {\r\n\t\t\ttext += Math.floor(scaleIndex / 12) + baseVisibleOctave;\r\n\t\t}\r\n\r\n\t\treturn text;\r\n\t}\r\n}\r\n","// Copyright (c) 2012-2022 John Nesky and contributing authors, distributed under the MIT license, see accompanying the LICENSE.md file.\r\n\r\nimport { Config } from \"../synth/SynthConfig\";\r\nimport { HTML } from \"imperative-html/dist/esm/elements-strict\";\r\nimport { SongDocument } from \"./SongDocument\";\r\nimport { Prompt } from \"./Prompt\";\r\nimport { ChangeGroup } from \"./Change\";\r\nimport { ChangeBarCount } from \"./changes\";\r\nimport { ColorConfig } from \"./ColorConfig\";\r\n\r\n\tconst {button, div, span, h2, input, br, select, option} = HTML;\r\n\r\nexport class SongDurationPrompt implements Prompt {\r\n\t\tprivate readonly _barsStepper: HTMLInputElement = input({style: \"width: 3em; margin-left: 1em;\", type: \"number\", step: \"1\"});\r\n\t\tprivate readonly _positionSelect: HTMLSelectElement = select({style: \"width: 100%;\"},\r\n\t\t\toption({value: \"end\"},       \"Apply change at end of song.\"),\r\n\t\t\toption({value: \"beginning\"}, \"Apply change at beginning of song.\"),\r\n\t);\r\n\t\tprivate readonly _cancelButton: HTMLButtonElement = button({class: \"cancelButton\"});\r\n\t\tprivate readonly _okayButton: HTMLButtonElement = button({class: \"okayButton\", style: \"width:45%;\"}, \"Okay\");\r\n\t\t\r\n\t\tpublic readonly container: HTMLDivElement = div({class: \"prompt noSelection\", style: \"width: 250px;\"},\r\n\t\th2(\"Song Length\"),\r\n\t\t\tdiv({style: \"display: flex; flex-direction: row; align-items: center; height: 2em; justify-content: flex-end;\"},\r\n\t\t\t\tdiv({style: \"display: inline-block; text-align: right;\"},\r\n\t\t\t\t\"Bars per song:\",\r\n\t\t\t\tbr(),\r\n\t\t\t\t\tspan({style: `font-size: smaller; color: ${ColorConfig.secondaryText};`}, \"(Multiples of 4 are recommended)\"),\r\n\r\n\t\t\t),\r\n\t\t\tthis._barsStepper,\r\n\t\t),\r\n\t\t\tdiv({style: \"display: flex; flex-direction: row; align-items: center; height: 2em; justify-content: flex-end;\"},\r\n\t\t\t\tdiv({class: \"selectContainer\", style: \"width: 100%;\"}, this._positionSelect),\r\n\t\t),\r\n\t\t\tdiv({style: \"display: flex; flex-direction: row-reverse; justify-content: space-between;\"},\r\n\t\t\tthis._okayButton,\r\n\t\t),\r\n\t\tthis._cancelButton,\r\n\t);\r\n\t\t\r\n\tconstructor(private _doc: SongDocument) {\r\n\r\n\t\tthis._barsStepper.value = this._doc.song.barCount + \"\";\r\n\t\tthis._barsStepper.min = Config.barCountMin + \"\";\r\n\t\tthis._barsStepper.max = Config.barCountMax + \"\";\r\n\t\t\t\r\n\t\tconst lastPosition: string | null = window.localStorage.getItem(\"barCountPosition\");\r\n\t\tif (lastPosition != null) {\r\n\t\t\tthis._positionSelect.value = lastPosition;\r\n\t\t}\r\n\t\t\t\r\n\t\tthis._barsStepper.select();\r\n\t\t\tsetTimeout(()=>this._barsStepper.focus());\r\n\t\t\t\r\n\t\tthis._okayButton.addEventListener(\"click\", this._saveChanges);\r\n\t\tthis._cancelButton.addEventListener(\"click\", this._close);\r\n\t\tthis._barsStepper.addEventListener(\"keypress\", SongDurationPrompt._validateKey);\r\n\t\tthis._barsStepper.addEventListener(\"blur\", SongDurationPrompt._validateNumber);\r\n\t\tthis.container.addEventListener(\"keydown\", this._whenKeyPressed);\r\n\t}\r\n\t\t\r\n\t\tprivate _close = (): void => { \r\n\t\tthis._doc.undo();\r\n\t}\r\n\t\t\r\n\tpublic cleanUp = (): void => {\r\n\t\tthis._okayButton.removeEventListener(\"click\", this._saveChanges);\r\n\t\tthis._cancelButton.removeEventListener(\"click\", this._close);\r\n\t\tthis._barsStepper.removeEventListener(\"keypress\", SongDurationPrompt._validateKey);\r\n\t\tthis._barsStepper.removeEventListener(\"blur\", SongDurationPrompt._validateNumber);\r\n\t\tthis.container.removeEventListener(\"keydown\", this._whenKeyPressed);\r\n\t}\r\n\t\t\r\n\tprivate _whenKeyPressed = (event: KeyboardEvent): void => {\r\n\t\t\tif ((<Element> event.target).tagName != \"BUTTON\" && event.keyCode == 13) { // Enter key\r\n\t\t\tthis._saveChanges();\r\n\t\t}\r\n\t}\r\n\t\t\r\n\tprivate static _validateKey(event: KeyboardEvent): boolean {\r\n\t\tconst charCode = (event.which) ? event.which : event.keyCode;\r\n\t\tif (charCode != 46 && charCode > 31 && (charCode < 48 || charCode > 57)) {\r\n\t\t\tevent.preventDefault();\r\n\t\t\treturn true;\r\n\t\t}\r\n\t\treturn false;\r\n\t}\r\n\t\t\r\n\tprivate static _validateNumber(event: Event): void {\r\n\t\tconst input: HTMLInputElement = <HTMLInputElement>event.target;\r\n\t\tinput.value = String(SongDurationPrompt._validate(input));\r\n\t}\r\n\t\t\r\n\tprivate static _validate(input: HTMLInputElement): number {\r\n\t\treturn Math.floor(Math.max(Number(input.min), Math.min(Number(input.max), Number(input.value))));\r\n\t}\r\n\t\t\r\n\tprivate _saveChanges = (): void => {\r\n\t\twindow.localStorage.setItem(\"barCountPosition\", this._positionSelect.value);\r\n\t\tconst group: ChangeGroup = new ChangeGroup();\r\n\t\tgroup.append(new ChangeBarCount(this._doc, SongDurationPrompt._validate(this._barsStepper), this._positionSelect.value == \"beginning\"));\r\n\t\tthis._doc.prompt = null;\r\n\t\tthis._doc.record(group, true);\r\n\t}\r\n}\r\n","// Copyright (c) 2012-2022 John Nesky and contributing authors, distributed under the MIT license, see accompanying the LICENSE.md file.\r\n\r\nimport { Dictionary } from \"../synth/SynthConfig\";\r\nimport { Song } from \"../synth/synth\";\r\n\r\n\t\r\nexport interface RecoveredVersion {\r\n\tuid: string;\r\n\ttime: number;\r\n\tname: string;\r\n\twork: number;\r\n}\r\n\r\nexport interface RecoveredSong {\r\n\tversions: RecoveredVersion[];\r\n}\r\n\r\nconst versionPrefix = \"songVersion: \";\r\nconst maximumSongCount = 8;\r\nconst maximumWorkPerVersion = 3 * 60 * 1000; // 3 minutes\r\nconst minimumWorkPerSpan = 1 * 60 * 1000; // 1 minute\r\n\r\nfunction keyIsVersion(key: string): boolean {\r\n\treturn key.indexOf(versionPrefix) == 0;\r\n}\r\n\r\nfunction keyToVersion(key: string): RecoveredVersion {\r\n\treturn JSON.parse(key.substring(versionPrefix.length));\r\n}\r\n\r\nexport function versionToKey(version: RecoveredVersion): string {\r\n\treturn versionPrefix + JSON.stringify(version);\r\n}\r\n\r\nexport function generateUid(): string {\r\n\t// Not especially robust, but simple and effective!\r\n\treturn ((Math.random() * (-1 >>> 0)) >>> 0).toString(32);\r\n}\r\n\r\nfunction compareSongs(a: RecoveredSong, b: RecoveredSong): number {\r\n\treturn b.versions[0].time - a.versions[0].time;\r\n}\r\n\r\nfunction compareVersions(a: RecoveredVersion, b: RecoveredVersion): number {\r\n\treturn b.time - a.time;\r\n}\r\n\t\t\r\nexport class SongRecovery {\r\n\tprivate _saveVersionTimeoutHandle: ReturnType<typeof setTimeout>;\r\n\t\t\r\n\tprivate _song: Song = new Song();\r\n\t\t\r\n\tpublic static getAllRecoveredSongs(): RecoveredSong[] {\r\n\t\tconst songs: RecoveredSong[] = [];\r\n\t\tconst songsByUid: Dictionary<RecoveredSong> = {};\r\n\t\tfor (let i = 0; i < localStorage.length; i++) {\r\n\t\t\tconst itemKey: string = localStorage.key(i)!;\r\n\t\t\tif (keyIsVersion(itemKey)) {\r\n\t\t\t\tconst version: RecoveredVersion = keyToVersion(itemKey);\r\n\t\t\t\tlet song: RecoveredSong | undefined = songsByUid[version.uid];\r\n\t\t\t\tif (song == undefined) {\r\n\t\t\t\t\t\tsong = {versions: []};\r\n\t\t\t\t\tsongsByUid[version.uid] = song;\r\n\t\t\t\t\tsongs.push(song);\r\n\t\t\t\t}\r\n\t\t\t\tsong.versions.push(version);\r\n\t\t\t}\r\n\t\t}\r\n\t\tfor (const song of songs) {\r\n\t\t\tsong.versions.sort(compareVersions);\r\n\t\t}\r\n\t\tsongs.sort(compareSongs);\r\n\t\treturn songs;\r\n\t}\r\n\t\t\r\n\tpublic saveVersion(uid: string, name: string, songData: string): void {\r\n\t\tconst newName: string = name;\r\n\t\tconst newTime: number = Math.round(Date.now());\r\n\t\t\t\r\n\t\tclearTimeout(this._saveVersionTimeoutHandle);\r\n\t\tthis._saveVersionTimeoutHandle = setTimeout((): void => {\r\n\t\t\ttry {\r\n\t\t\t\t// Ensure that the song is not corrupted.\r\n\t\t\t\tthis._song.fromBase64String(songData);\r\n\t\t\t} catch (error) {\r\n\t\t\t\twindow.alert(\"Whoops, the song data appears to have been corrupted! Please try to recover the last working version of the song from the \\\"Recover Recent Song...\\\" option in BeepBox's \\\"File\\\" menu.\");\r\n\t\t\t\treturn;\r\n\t\t\t}\r\n\t\t\t\t\r\n\t\t\tconst songs: RecoveredSong[] = SongRecovery.getAllRecoveredSongs();\r\n\t\t\tlet currentSong: RecoveredSong | null = null;\r\n\t\t\tfor (const song of songs) {\r\n\t\t\t\tif (song.versions[0].uid == uid) {\r\n\t\t\t\t\tcurrentSong = song;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\tif (currentSong == null) {\r\n\t\t\t\t\tcurrentSong = {versions: []};\r\n\t\t\t\tsongs.unshift(currentSong);\r\n\t\t\t}\r\n\t\t\tlet versions: RecoveredVersion[] = currentSong.versions;\r\n\t\t\t\t\r\n\t\t\tlet newWork: number = 1000; // default to 1 second of work for the first change.\r\n\t\t\tif (versions.length > 0) {\r\n\t\t\t\tconst mostRecentTime: number = versions[0].time;\r\n\t\t\t\tconst mostRecentWork: number = versions[0].work;\r\n\t\t\t\tnewWork = mostRecentWork + Math.min(maximumWorkPerVersion, newTime - mostRecentTime);\r\n\t\t\t}\r\n\t\t\t\t\r\n\t\t\tconst newVersion: RecoveredVersion = { uid: uid, name: newName, time: newTime, work: newWork };\r\n\t\t\tconst newKey: string = versionToKey(newVersion);\r\n\t\t\tversions.unshift(newVersion);\r\n\t\t\tlocalStorage.setItem(newKey, songData);\r\n\t\t\t\t\r\n\t\t\t// Consider deleting an old version to free up space.\r\n\t\t\tlet minSpan: number = minimumWorkPerSpan; // start out with a gap between versions.\r\n\t\t\tconst spanMult: number = Math.pow(2, 1 / 2); // Double the span every 2 versions back.\r\n\t\t\tfor (var i: number = 1; i < versions.length; i++) {\r\n\t\t\t\tconst currentWork: number = versions[i].work;\r\n\t\t\t\tconst olderWork: number = (i == versions.length - 1) ? 0.0 : versions[i + 1].work;\r\n\t\t\t\t// If not enough work happened between two versions, discard one of them.\r\n\t\t\t\tif (currentWork - olderWork < minSpan) {\r\n\t\t\t\t\tlet indexToDiscard: number = i;\r\n\t\t\t\t\tif (i < versions.length - 1) {\r\n\t\t\t\t\t\tconst currentTime: number = versions[i].time;\r\n\t\t\t\t\t\tconst newerTime: number = versions[i - 1].time;\r\n\t\t\t\t\t\tconst olderTime: number = versions[i + 1].time;\r\n\t\t\t\t\t\t// Weird heuristic: Between the three adjacent versions, prefer to keep\r\n\t\t\t\t\t\t// the newest and the oldest, discarding the middle one (i), unless\r\n\t\t\t\t\t\t// there is a large gap of time between the newest and middle one, in\r\n\t\t\t\t\t\t// which case the middle one represents the end of a span of work and is\r\n\t\t\t\t\t\t// thus more memorable.\r\n\t\t\t\t\t\tif ((currentTime - olderTime) < 0.5 * (newerTime - currentTime)) {\r\n\t\t\t\t\t\t\tindexToDiscard = i + 1;\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t\tlocalStorage.removeItem(versionToKey(versions[indexToDiscard]));\r\n\t\t\t\t\tbreak;\r\n\t\t\t\t}\r\n\t\t\t\tminSpan *= spanMult;\r\n\t\t\t}\r\n\t\t\t\t\r\n\t\t\t// If there are too many songs, discard the least important ones.\r\n\t\t\t// Songs that are older, or have less work, are less important.\r\n\t\t\twhile (songs.length > maximumSongCount) {\r\n\t\t\t\tlet leastImportantSong: RecoveredSong | null = null;\r\n\t\t\t\tlet leastImportance: number = Number.POSITIVE_INFINITY;\r\n\t\t\t\tfor (let i: number = Math.round(maximumSongCount / 2); i < songs.length; i++) {\r\n\t\t\t\t\tconst song: RecoveredSong = songs[i];\r\n\t\t\t\t\tconst timePassed: number = newTime - song.versions[0].time;\r\n\t\t\t\t\t// Convert the time into a factor of 12 hours, add one, then divide by the result.\r\n\t\t\t\t\t// This creates a curve that starts at 1, and then gradually drops off.\r\n\t\t\t\t\tconst timeScale: number = 1.0 / ((timePassed / (12 * 60 * 60 * 1000)) + 1.0);\r\n\t\t\t\t\t// Add 5 minutes of work, to balance out simple songs a little bit.\r\n\t\t\t\t\tconst adjustedWork: number = song.versions[0].work + 5 * 60 * 1000;\r\n\t\t\t\t\tconst weight: number = adjustedWork * timeScale;\r\n\t\t\t\t\tif (leastImportance > weight) {\r\n\t\t\t\t\t\tleastImportance = weight;\r\n\t\t\t\t\t\tleastImportantSong = song;\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t\tfor (const version of leastImportantSong!.versions) {\r\n\t\t\t\t\tlocalStorage.removeItem(versionToKey(version));\r\n\t\t\t\t}\r\n\t\t\t\tsongs.splice(songs.indexOf(leastImportantSong!), 1);\r\n\t\t\t}\r\n\t\t}, 750); // Wait 3/4 of a second before saving a version.\r\n\t}\r\n}\r\n","// Copyright (c) 2012-2022 John Nesky and contributing authors, distributed under the MIT license, see accompanying the LICENSE.md file.\r\n\r\nimport { SongDocument } from \"./SongDocument\";\r\nimport { RecoveredSong, RecoveredVersion, SongRecovery, versionToKey } from \"./SongRecovery\";\r\nimport { Prompt } from \"./Prompt\";\r\nimport { HTML } from \"imperative-html/dist/esm/elements-strict\";\r\n\r\n\tconst {button, div, h2, p, select, option, iframe} = HTML;\r\n\r\nexport class SongRecoveryPrompt implements Prompt {\r\n\tprivate readonly _songContainer: HTMLDivElement = div();\r\n\t\tprivate readonly _cancelButton: HTMLButtonElement = button({class: \"cancelButton\"});\r\n\t\t\r\n\t\tpublic readonly container: HTMLDivElement = div({class: \"prompt\", style: \"width: 300px;\"},\r\n\t\th2(\"Song Recovery\"),\r\n\t\t\tdiv({style: \"max-height: 385px; overflow-y: auto;\"},\r\n\t\t\tp(\"This is a TEMPORARY list of songs you have recently modified. Please keep your own backups of songs you care about! SONGS THAT USE SAMPLES WILL TAKE A WHILE TO LOAD, so be patient!\"),\r\n\t\t\tthis._songContainer,\r\n\t\t\tp(\"(If \\\"Display Song Data in URL\\\" is enabled in your preferences, then you may also be able to find song versions in your browser history. However, song recovery won't work if you were browsing in private/incognito mode.)\"),\r\n\t\t),\r\n\t\tthis._cancelButton,\r\n\t);\r\n\t\t\r\n\tconstructor(private _doc: SongDocument) {\r\n\t\tthis._cancelButton.addEventListener(\"click\", this._close);\r\n\t\t\t\r\n\t\tconst songs: RecoveredSong[] = SongRecovery.getAllRecoveredSongs();\r\n\t\t\t\r\n\t\tif (songs.length == 0) {\r\n\t\t\tthis._songContainer.appendChild(p(\"There are no recovered songs available yet. Try making a song!\"));\r\n\t\t}\r\n\t\t\t\r\n\t\tfor (const song of songs) {\r\n\t\t\t\tconst versionMenu: HTMLSelectElement = select({style: \"width: 100%;\"});\r\n\t\t\t\t\r\n\t\t\tfor (const version of song.versions) {\r\n\t\t\t\tversionMenu.appendChild(option({ value: version.time }, version.name + \": \" + new Date(version.time).toLocaleString()));\r\n\t\t\t}\r\n\t\t\t\t\r\n\t\t\t\tconst player: HTMLIFrameElement = iframe({style: \"width: 100%; height: 60px; border: none; display: block;\"});\r\n\t\t\tplayer.src = \"player/#song=\" + window.localStorage.getItem(versionToKey(song.versions[0]));\r\n\t\t\t\tconst container: HTMLDivElement = div({style: \"margin: 4px 0;\"}, div({class: \"selectContainer\", style: \"width: 100%; margin: 2px 0;\"}, versionMenu), player);\r\n\t\t\tthis._songContainer.appendChild(container);\r\n\t\t\t\t\r\n\t\t\tversionMenu.addEventListener(\"change\", () => {\r\n\t\t\t\tconst version: RecoveredVersion = song.versions[versionMenu.selectedIndex];\r\n\t\t\t\tplayer.contentWindow!.location.replace(\"player/#song=\" + window.localStorage.getItem(versionToKey(version)));\r\n\t\t\t\tplayer.contentWindow!.dispatchEvent(new Event(\"hashchange\"));\r\n\t\t\t});\r\n\t\t}\r\n\t}\r\n\t\t\r\n\t\tprivate _close = (): void => { \r\n\t\tthis._doc.undo();\r\n\t}\r\n\t\t\r\n\t\tpublic cleanUp = (): void => { \r\n\t\tthis._cancelButton.removeEventListener(\"click\", this._close);\r\n\t}\r\n}\r\n","// Copyright (c) 2012-2022 John Nesky and contributing authors, distributed under the MIT license, see accompanying the LICENSE.md file.\r\n\r\nimport {Config} from \"../synth/SynthConfig\";\r\nimport {EditorConfig} from \"./EditorConfig\";\r\nimport {SongDocument} from \"./SongDocument\";\r\nimport {Prompt} from \"./Prompt\";\r\nimport {HTML} from \"imperative-html/dist/esm/elements-strict\";\r\nimport {ColorConfig} from \"./ColorConfig\";\r\nimport {KeyboardLayout} from \"./KeyboardLayout\";\r\nimport {Piano} from \"./Piano\";\r\n\r\nconst {button, label, div, p, a, h2, input, select, option} = HTML;\r\n\r\nexport class RecordingSetupPrompt implements Prompt {\r\n\tprivate readonly _keyboardMode: HTMLSelectElement = select({style: \"width: 100%;\"},\r\n\t\toption({value: \"useCapsLockForNotes\"}, \"simple shortcuts, use caps lock to play notes\"),\r\n\t\toption({value: \"pressControlForShortcuts\"}, \"simple notes, press \" + EditorConfig.ctrlName + \" for shortcuts\"),\r\n\t);\r\n\tprivate readonly _keyboardLayout: HTMLSelectElement = select({style: \"width: 100%;\"},\r\n\t\toption({value: \"wickiHayden\"}, \"Wicki-Hayden\"),\r\n\t\toption({value: \"songScale\"}, \"selected song scale\"),\r\n\t\toption({value: \"pianoAtC\"}, \"piano starting at C :)\"),\r\n\t\toption({value: \"pianoAtA\"}, \"piano starting at A :(\"),\r\n\t\toption({value: \"pianoTransposingC\"}, \"piano transposing C :) to song key\"),\r\n\t\toption({value: \"pianoTransposingA\"}, \"piano transposing A :( to song key\"),\r\n\t);\r\n\tprivate readonly _keyboardLayoutPreview: HTMLDivElement = div({style: \"display: grid; row-gap: 4px; margin: 4px auto; font-size: 10px;\"});\r\n\tprivate readonly _enableMidi: HTMLInputElement = input({style: \"width: 2em; margin-left: 1em;\", type: \"checkbox\"});\r\n\tprivate readonly _showRecordButton: HTMLInputElement = input({style: \"width: 2em; margin-left: 1em;\", type: \"checkbox\"});\r\n\tprivate readonly _snapRecordedNotesToRhythm: HTMLInputElement = input({style: \"width: 2em; margin-left: 1em;\", type: \"checkbox\"});\r\n\tprivate readonly _ignorePerformedNotesNotInScale: HTMLInputElement = input({style: \"width: 2em; margin-left: 1em;\", type: \"checkbox\"});\r\n\tprivate readonly _metronomeCountIn: HTMLInputElement = input({style: \"width: 2em; margin-left: 1em;\", type: \"checkbox\"});\r\n\tprivate readonly _metronomeWhileRecording: HTMLInputElement = input({style: \"width: 2em; margin-left: 1em;\", type: \"checkbox\"});\r\n\t\r\n\tprivate readonly _okayButton: HTMLButtonElement = button({class: \"okayButton\", style: \"width:45%;\"}, \"Okay\");\r\n\tprivate readonly _cancelButton: HTMLButtonElement = button({class: \"cancelButton\"});\r\n\tpublic readonly container: HTMLDivElement = div({class: \"prompt noSelection recordingSetupPrompt\", style: \"width: 333px; text-align: right; max-height: 90%;\"},\r\n\t\th2(\"Note Recording Setup\"),\r\n\t\tdiv({style: \"display: grid; overflow-y: auto; overflow-x: hidden; flex-shrink: 1;\"},\r\n\t\t\tp(\"BeepBox can record notes as you perform them. You can start recording by pressing Ctrl+Space (or \" + EditorConfig.ctrlSymbol + \"P).\"),\r\n\t\t\tlabel({style: \"display: flex; flex-direction: row; align-items: center; height: 2em; justify-content: flex-end;\"},\r\n\t\t\t\t\"Add ● record button next to ▶ play button:\",\r\n\t\t\t\tthis._showRecordButton,\r\n\t\t\t),\r\n\t\t\tlabel({style: \"display: flex; flex-direction: row; align-items: center; height: 2em; justify-content: flex-end;\"},\r\n\t\t\t\t\"Snap recorded notes to the song's rhythm:\",\r\n\t\t\t\tthis._snapRecordedNotesToRhythm,\r\n\t\t\t),\r\n\t\t\tlabel({style: \"display: flex; flex-direction: row; align-items: center; height: 2em; justify-content: flex-end;\"},\r\n\t\t\t\t\"Ignore notes not in the song's scale:\",\r\n\t\t\t\tthis._ignorePerformedNotesNotInScale,\r\n\t\t\t),\r\n\t\t\tp(\"While recording, you can perform notes on your keyboard!\"),\r\n\t\t\tlabel({style: \"display: flex; flex-direction: row; align-items: center; height: 2em; justify-content: flex-end;\"},\r\n\t\t\t\t\"Keyboard layout:\",\r\n\t\t\t\tdiv({class: \"selectContainer\", style: \"width: 65%; margin-left: 1em;\"}, this._keyboardLayout),\r\n\t\t\t),\r\n\t\t\tthis._keyboardLayoutPreview,\r\n\t\t\tp(\"When not recording, you can use the computer keyboard either for shortcuts (like C and V for copy and paste) or for performing notes, depending on this mode:\"),\r\n\t\t\tlabel({style: \"display: flex; flex-direction: row; align-items: center; height: 2em; justify-content: flex-end;\"},\r\n\t\t\t\tdiv({class: \"selectContainer\", style: \"width: 100%;\"}, this._keyboardMode),\r\n\t\t\t),\r\n\t\t\tp(\"Performing music takes practice! Try slowing the tempo and using this metronome to help you keep a rhythm.\"),\r\n\t\t\tlabel({style: \"display: flex; flex-direction: row; align-items: center; height: 2em; justify-content: flex-end;\"},\r\n\t\t\t\t\"Hear metronome while recording:\",\r\n\t\t\t\tthis._metronomeWhileRecording,\r\n\t\t\t),\r\n\t\t\tlabel({style: \"display: flex; flex-direction: row; align-items: center; height: 2em; justify-content: flex-end;\"},\r\n\t\t\t\t\"Count-in 1 bar of metronome before recording:\",\r\n\t\t\t\tthis._metronomeCountIn,\r\n\t\t\t),\r\n\t\t\tp(\"If you have a \", a({href: \"https://caniuse.com/midi\", target: \"_blank\"}, \"compatible browser\"), \" on a device connected to a MIDI keyboard, you can use it to perform notes in BeepBox! (Or you could buy \", a({href: \"https://imitone.com/\", target: \"_blank\"}, \"Imitone\"), \" or \", a({href: \"https://vochlea.com/\", target: \"_blank\"}, \"Dubler\"), \" to hum notes into a microphone while wearing headphones!)\"),\r\n\t\t\tlabel({style: \"display: flex; flex-direction: row; align-items: center; height: 2em; justify-content: flex-end;\"},\r\n\t\t\t\t\"Enable MIDI performance:\",\r\n\t\t\t\tthis._enableMidi,\r\n\t\t\t),\r\n\t\t\tp(\"Tip: Recorded notes often overlap such that one note ends after the next note already started. In BeepBox, these notes get split into two notes which may sound different when re-played than they did when you were recording. To fix the sound, you can either manually clean up the notes in the pattern editor, or you could try enabling the \\\"transition type\\\" effect on the instrument and setting it to \\\"continue\\\".\"),\r\n\t\t\tdiv({style: `width: 100%; height: 80px; background: linear-gradient(rgba(0,0,0,0), ${ColorConfig.editorBackground}); position: sticky; bottom: 0; pointer-events: none;`}),\r\n\t\t),\r\n\t\tlabel({style: \"display: flex; flex-direction: row-reverse; justify-content: space-between;\"},\r\n\t\t\tthis._okayButton,\r\n\t\t),\r\n\t\tthis._cancelButton,\r\n\t);\r\n\t\r\n\tconstructor(private _doc: SongDocument) {\r\n\t\tthis._keyboardMode.value = this._doc.prefs.pressControlForShortcuts ? \"pressControlForShortcuts\" : \"useCapsLockForNotes\";\r\n\t\tthis._keyboardLayout.value = this._doc.prefs.keyboardLayout;\r\n\t\tthis._enableMidi.checked = this._doc.prefs.enableMidi;\r\n\t\tthis._showRecordButton.checked = this._doc.prefs.showRecordButton;\r\n\t\tthis._snapRecordedNotesToRhythm.checked = this._doc.prefs.snapRecordedNotesToRhythm;\r\n\t\tthis._ignorePerformedNotesNotInScale.checked = this._doc.prefs.ignorePerformedNotesNotInScale;\r\n\t\tthis._metronomeCountIn.checked = this._doc.prefs.metronomeCountIn;\r\n\t\tthis._metronomeWhileRecording.checked = this._doc.prefs.metronomeWhileRecording;\r\n\t\t\r\n\t\tsetTimeout(()=>this._showRecordButton.focus());\r\n\t\t\r\n\t\tthis._okayButton.addEventListener(\"click\", this._confirm);\r\n\t\tthis._cancelButton.addEventListener(\"click\", this._close);\r\n\t\tthis.container.addEventListener(\"keydown\", this._whenKeyPressed);\r\n\t\t\r\n\t\tthis._renderKeyboardLayoutPreview();\r\n\t\tthis._keyboardLayout.addEventListener(\"change\", this._renderKeyboardLayoutPreview);\r\n\t}\r\n\t\r\n\tprivate _close = (): void => { \r\n\t\tthis._doc.undo();\r\n\t}\r\n\t\r\n\tpublic cleanUp = (): void => { \r\n\t\tthis._okayButton.removeEventListener(\"click\", this._confirm);\r\n\t\tthis._cancelButton.removeEventListener(\"click\", this._close);\r\n\t\tthis.container.removeEventListener(\"keydown\", this._whenKeyPressed);\r\n\t}\r\n\t\r\n\tprivate _whenKeyPressed = (event: KeyboardEvent): void => {\r\n\t\tif ((<Element> event.target).tagName != \"BUTTON\" && event.keyCode == 13) { // Enter key\r\n\t\t\tthis._confirm();\r\n\t\t}\r\n\t}\r\n\t\r\n\tprivate _confirm = (): void => { \r\n\t\tthis._doc.prefs.pressControlForShortcuts = (this._keyboardMode.value == \"pressControlForShortcuts\");\r\n\t\tthis._doc.prefs.keyboardLayout = this._keyboardLayout.value;\r\n\t\tthis._doc.prefs.enableMidi = this._enableMidi.checked;\r\n\t\tthis._doc.prefs.showRecordButton = this._showRecordButton.checked;\r\n\t\tthis._doc.prefs.snapRecordedNotesToRhythm = this._snapRecordedNotesToRhythm.checked;\r\n\t\tthis._doc.prefs.ignorePerformedNotesNotInScale = this._ignorePerformedNotesNotInScale.checked;\r\n\t\tthis._doc.prefs.metronomeCountIn = this._metronomeCountIn.checked;\r\n\t\tthis._doc.prefs.metronomeWhileRecording = this._metronomeWhileRecording.checked;\r\n\t\tthis._doc.prefs.save();\r\n\t\tthis._close();\r\n\t}\r\n\t\r\n\tprivate _renderKeyboardLayoutPreview = (): void => {\r\n\t\twhile (this._keyboardLayoutPreview.firstChild) {\r\n\t\t\tthis._keyboardLayoutPreview.removeChild(this._keyboardLayoutPreview.firstChild);\r\n\t\t}\r\n\t\tconst rowLengths: number[] = [12, 12, 11, 10];\r\n\t\tconst scale: ReadonlyArray<boolean> = Config.scales[this._doc.song.scale].flags;\r\n\t\tfor (let rowIndex: number = 0; rowIndex < 4; rowIndex++) {\r\n\t\t\tconst row: HTMLDivElement = div({style: \"display: flex;\"});\r\n\t\t\tthis._keyboardLayoutPreview.appendChild(row);\r\n\t\t\tconst spacer: HTMLDivElement = div({style: \"width: \" + (rowIndex * 12) + \"px; height: 20px; flex-shrink: 0;\"});\r\n\t\t\trow.appendChild(spacer);\r\n\t\t\tfor (let colIndex: number = 0; colIndex < rowLengths[rowIndex]; colIndex++) {\r\n\t\t\t\tconst key: HTMLDivElement = div({style: `width: 20px; height: 20px; margin: 0 2px; box-sizing: border-box; flex-shrink: 0; display: flex; justify-content: center; align-items: center;`});\r\n\t\t\t\trow.appendChild(key);\r\n\t\t\t\tconst pitch: number | null = KeyboardLayout.keyPosToPitch(this._doc, colIndex, 3 - rowIndex, this._keyboardLayout.value);\r\n\t\t\t\tif (pitch != null) {\r\n\t\t\t\t\tconst scalePitch: number = pitch % 12;\r\n\t\t\t\t\tif (scale[scalePitch]) {\r\n\t\t\t\t\t\tif (scalePitch == 0) {\r\n\t\t\t\t\t\t\tkey.style.background = ColorConfig.tonic;\r\n\t\t\t\t\t\t} else if (scalePitch == 7 && this._doc.prefs.showFifth) {\r\n\t\t\t\t\t\t\tkey.style.background = ColorConfig.fifthNote;\r\n\t\t\t\t\t\t} else {\r\n\t\t\t\t\t\t\tkey.style.background = ColorConfig.pitchBackground;\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t} else {\r\n\t\t\t\t\t\tkey.style.border = \"2px solid \" + ColorConfig.pitchBackground;\r\n\t\t\t\t\t}\r\n\t\t\t\t\t\r\n\t\t\t\t\tconst pitchNameIndex: number = (scalePitch + Config.keys[this._doc.song.key].basePitch) % Config.pitchesPerOctave;\r\n\t\t\t\t\tkey.textContent = Piano.getPitchName(pitchNameIndex, scalePitch, Math.floor(pitch / 12));\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n}\r\n","// Copyright (c) 2012-2022 John Nesky and contributing authors, distributed under the MIT license, see accompanying the LICENSE.md file.\r\n\r\nimport { Config } from \"../synth/SynthConfig\";\r\nimport { SpectrumWave, Instrument } from \"../synth/synth\";\r\nimport { SongDocument } from \"./SongDocument\";\r\nimport { HTML, SVG } from \"imperative-html/dist/esm/elements-strict\";\r\nimport { ColorConfig } from \"./ColorConfig\";\r\nimport { ChangeSpectrum } from \"./changes\";\r\nimport { prettyNumber } from \"./EditorConfig\";\r\n\r\nexport class SpectrumEditor {\r\n\tprivate readonly _editorWidth: number = 120;\r\n\tprivate readonly _editorHeight: number = 26;\r\n\t\tprivate readonly _fill: SVGPathElement = SVG.path({fill: ColorConfig.uiWidgetBackground, \"pointer-events\": \"none\"});\r\n\t\tprivate readonly _octaves: SVGSVGElement = SVG.svg({\"pointer-events\": \"none\"});\r\n\t\tprivate readonly _fifths: SVGSVGElement = SVG.svg({\"pointer-events\": \"none\"});\r\n\t\tprivate readonly _curve: SVGPathElement = SVG.path({fill: \"none\", stroke: \"currentColor\", \"stroke-width\": 2, \"pointer-events\": \"none\"});\r\n\t\tprivate readonly _arrow: SVGPathElement = SVG.path({fill: \"currentColor\", \"pointer-events\": \"none\"});\r\n\t\tprivate readonly _svg: SVGSVGElement = SVG.svg({style: `background-color: ${ColorConfig.editorBackground}; touch-action: none; cursor: crosshair;`, width: \"100%\", height: \"100%\", viewBox: \"0 0 \"+this._editorWidth+\" \"+this._editorHeight, preserveAspectRatio: \"none\"},\r\n\t\tthis._fill,\r\n\t\tthis._octaves,\r\n\t\tthis._fifths,\r\n\t\tthis._curve,\r\n\t\tthis._arrow,\r\n\t);\r\n\t\t\r\n\tpublic readonly container: HTMLElement = HTML.div({class: \"spectrum\", style: \"height: 100%;\"}, this._svg);\r\n\t\t\r\n\tprivate _mouseX: number = 0;\r\n\tprivate _mouseY: number = 0;\r\n\tprivate _freqPrev: number = 0;\r\n\tprivate _ampPrev: number = 0;\r\n\tprivate _mouseDown: boolean = false;\r\n\tprivate _change: ChangeSpectrum | null = null;\r\n\tprivate _renderedPath: String = \"\";\r\n\tprivate _renderedFifths: boolean = true;\r\n\t\t\r\n\tconstructor(private _doc: SongDocument, private _spectrumIndex: number | null) {\r\n\t\tfor (let i: number = 0; i < Config.spectrumControlPoints; i += Config.spectrumControlPointsPerOctave) {\r\n\t\t\t\tthis._octaves.appendChild(SVG.rect({fill: ColorConfig.tonic, x: (i+1) * this._editorWidth / (Config.spectrumControlPoints + 2) - 1, y: 0, width: 2, height: this._editorHeight}));\r\n\t\t}\r\n\t\tfor (let i: number = 4; i <= Config.spectrumControlPoints; i += Config.spectrumControlPointsPerOctave) {\r\n\t\t\t\tthis._fifths.appendChild(SVG.rect({fill: ColorConfig.fifthNote, x: (i+1) * this._editorWidth / (Config.spectrumControlPoints + 2) - 1, y: 0, width: 2, height: this._editorHeight}));\r\n\t\t}\r\n\t\t\t\r\n\t\tthis.container.addEventListener(\"mousedown\", this._whenMousePressed);\r\n\t\tdocument.addEventListener(\"mousemove\", this._whenMouseMoved);\r\n\t\tdocument.addEventListener(\"mouseup\", this._whenCursorReleased);\r\n\t\t\t\r\n\t\tthis.container.addEventListener(\"touchstart\", this._whenTouchPressed);\r\n\t\tthis.container.addEventListener(\"touchmove\", this._whenTouchMoved);\r\n\t\tthis.container.addEventListener(\"touchend\", this._whenCursorReleased);\r\n\t\tthis.container.addEventListener(\"touchcancel\", this._whenCursorReleased);\r\n\t}\r\n\t\t\r\n\tprivate _xToFreq(x: number): number {\r\n\t\treturn (Config.spectrumControlPoints + 2) * x / this._editorWidth - 1;\r\n\t}\r\n\t\t\r\n\tprivate _yToAmp(y: number): number {\r\n\t\treturn Config.spectrumMax * (1 - (y - 1) / (this._editorHeight - 2));\r\n\t}\r\n\t\t\r\n\tprivate _whenMousePressed = (event: MouseEvent): void => {\r\n\t\tevent.preventDefault();\r\n\t\tthis._mouseDown = true;\r\n\t\tconst boundingRect: ClientRect = this._svg.getBoundingClientRect();\r\n\t\tthis._mouseX = ((event.clientX || event.pageX) - boundingRect.left) * this._editorWidth / (boundingRect.right - boundingRect.left);\r\n\t\tthis._mouseY = ((event.clientY || event.pageY) - boundingRect.top) * this._editorHeight / (boundingRect.bottom - boundingRect.top);\r\n\t\tif (isNaN(this._mouseX)) this._mouseX = 0;\r\n\t\tif (isNaN(this._mouseY)) this._mouseY = 0;\r\n\t\t    \r\n\t\tthis._freqPrev = this._xToFreq(this._mouseX);\r\n\t\tthis._ampPrev = this._yToAmp(this._mouseY);\r\n\t\tthis._whenCursorMoved();\r\n\t}\r\n\t\t\r\n\tprivate _whenTouchPressed = (event: TouchEvent): void => {\r\n\t\tevent.preventDefault();\r\n\t\tthis._mouseDown = true;\r\n\t\tconst boundingRect: ClientRect = this._svg.getBoundingClientRect();\r\n\t\tthis._mouseX = (event.touches[0].clientX - boundingRect.left) * this._editorWidth / (boundingRect.right - boundingRect.left);\r\n\t\tthis._mouseY = (event.touches[0].clientY - boundingRect.top) * this._editorHeight / (boundingRect.bottom - boundingRect.top);\r\n\t\tif (isNaN(this._mouseX)) this._mouseX = 0;\r\n\t\tif (isNaN(this._mouseY)) this._mouseY = 0;\r\n\t\t    \r\n\t\tthis._freqPrev = this._xToFreq(this._mouseX);\r\n\t\tthis._ampPrev = this._yToAmp(this._mouseY);\r\n\t\tthis._whenCursorMoved();\r\n\t}\r\n\t\t\r\n\tprivate _whenMouseMoved = (event: MouseEvent): void => {\r\n\t\tif (this.container.offsetParent == null) return;\r\n\t\tconst boundingRect: ClientRect = this._svg.getBoundingClientRect();\r\n\t\tthis._mouseX = ((event.clientX || event.pageX) - boundingRect.left) * this._editorWidth / (boundingRect.right - boundingRect.left);\r\n\t\tthis._mouseY = ((event.clientY || event.pageY) - boundingRect.top) * this._editorHeight / (boundingRect.bottom - boundingRect.top);\r\n\t\tif (isNaN(this._mouseX)) this._mouseX = 0;\r\n\t\tif (isNaN(this._mouseY)) this._mouseY = 0;\r\n\t\tthis._whenCursorMoved();\r\n\t}\r\n\t\t\r\n\tprivate _whenTouchMoved = (event: TouchEvent): void => {\r\n\t\tif (this.container.offsetParent == null) return;\r\n\t\tif (!this._mouseDown) return;\r\n\t\tevent.preventDefault();\r\n\t\tconst boundingRect: ClientRect = this._svg.getBoundingClientRect();\r\n\t\tthis._mouseX = (event.touches[0].clientX - boundingRect.left) * this._editorWidth / (boundingRect.right - boundingRect.left);\r\n\t\tthis._mouseY = (event.touches[0].clientY - boundingRect.top) * this._editorHeight / (boundingRect.bottom - boundingRect.top);\r\n\t\tif (isNaN(this._mouseX)) this._mouseX = 0;\r\n\t\tif (isNaN(this._mouseY)) this._mouseY = 0;\r\n\t\tthis._whenCursorMoved();\r\n\t}\r\n\t\t\r\n\tprivate _whenCursorMoved(): void {\r\n\t\tif (this._mouseDown) {\r\n\t\t\tconst freq: number = this._xToFreq(this._mouseX);\r\n\t\t\tconst amp: number = this._yToAmp(this._mouseY);\r\n\t\t\t\t\r\n\t\t\tconst instrument: Instrument = this._doc.song.channels[this._doc.channel].instruments[this._doc.getCurrentInstrument()];\r\n\t\t\tconst spectrumWave: SpectrumWave = (this._spectrumIndex == null) ? instrument.spectrumWave : instrument.drumsetSpectrumWaves[this._spectrumIndex];\r\n\t\t\t\t\r\n\t\t\tif (freq != this._freqPrev) {\r\n\t\t\t\tconst slope: number = (amp - this._ampPrev) / (freq - this._freqPrev);\r\n\t\t\t\tconst offset: number = this._ampPrev - this._freqPrev * slope;\r\n\t\t\t\tconst lowerFreq: number = Math.ceil(Math.min(this._freqPrev, freq));\r\n\t\t\t\tconst upperFreq: number = Math.floor(Math.max(this._freqPrev, freq));\r\n\t\t\t\tfor (let i: number = lowerFreq; i <= upperFreq; i++) {\r\n\t\t\t\t\tif (i < 0 || i >= Config.spectrumControlPoints) continue;\r\n\t\t\t\t\tspectrumWave.spectrum[i] = Math.max(0, Math.min(Config.spectrumMax, Math.round(i * slope + offset)));\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\t\t\r\n\t\t\tspectrumWave.spectrum[Math.max(0, Math.min(Config.spectrumControlPoints - 1, Math.round(freq)))] = Math.max(0, Math.min(Config.spectrumMax, Math.round(amp)));\r\n\t\t\t\t\r\n\t\t\tthis._freqPrev = freq;\r\n\t\t\tthis._ampPrev = amp;\r\n\t\t\t\t\r\n\t\t\tthis._change = new ChangeSpectrum(this._doc, instrument, spectrumWave);\r\n\t\t\tthis._doc.setProspectiveChange(this._change);\r\n\t\t}\r\n\t}\r\n\t\t\r\n\tprivate _whenCursorReleased = (event: Event): void => {\r\n\t\tif (this._mouseDown) {\r\n\t\t\tthis._doc.record(this._change!);\r\n\t\t\tthis._change = null;\r\n\t\t}\r\n\t\tthis._mouseDown = false;\r\n\t}\r\n\t\t\r\n\tpublic render(): void {\r\n\t\tconst instrument: Instrument = this._doc.song.channels[this._doc.channel].instruments[this._doc.getCurrentInstrument()];\r\n\t\tconst spectrumWave: SpectrumWave = (this._spectrumIndex == null) ? instrument.spectrumWave : instrument.drumsetSpectrumWaves[this._spectrumIndex];\r\n\t\tconst controlPointToHeight = (point: number): number => {\r\n\t\t\treturn (1 - (point / Config.spectrumMax)) * (this._editorHeight - 1) + 1;\r\n\t\t}\r\n\t\t\t\r\n\t\tlet lastValue: number = 0;\r\n\t\tlet path: string = \"M 0 \" + prettyNumber(this._editorHeight) + \" \";\r\n\t\tfor (let i: number = 0; i < Config.spectrumControlPoints; i++) {\r\n\t\t\tlet nextValue: number = spectrumWave.spectrum[i];\r\n\t\t\tif (lastValue != 0 || nextValue != 0) {\r\n\t\t\t\tpath += \"L \";\r\n\t\t\t} else {\r\n\t\t\t\tpath += \"M \";\r\n\t\t\t}\r\n\t\t\tpath += prettyNumber((i + 1) * this._editorWidth / (Config.spectrumControlPoints + 2)) + \" \" + prettyNumber(controlPointToHeight(nextValue)) + \" \";\r\n\t\t\tlastValue = nextValue;\r\n\t\t}\r\n\t\t\t\r\n\t\tconst lastHeight: number = controlPointToHeight(lastValue);\r\n\t\tif (lastValue > 0) {\r\n\t\t\tpath += \"L \" + (this._editorWidth - 1) + \" \" + prettyNumber(lastHeight) + \" \";\r\n\t\t}\r\n\t\t\t\r\n\t\tif (this._renderedPath != path) {\r\n\t\t\tthis._renderedPath = path;\r\n\t\t\tthis._curve.setAttribute(\"d\", path);\r\n\t\t\tthis._fill.setAttribute(\"d\", path + \"L \" + this._editorWidth + \" \" + prettyNumber(lastHeight) + \" L \" + this._editorWidth + \" \" + prettyNumber(this._editorHeight) + \" L 0 \" + prettyNumber(this._editorHeight) + \" z \");\r\n\t\t\t\t\r\n\t\t\tthis._arrow.setAttribute(\"d\", \"M \" + this._editorWidth + \" \" + prettyNumber(lastHeight) + \" L \" + (this._editorWidth - 4) + \" \" + prettyNumber(lastHeight - 4) + \" L \" + (this._editorWidth - 4) + \" \" + prettyNumber(lastHeight + 4) + \" z\");\r\n\t\t\tthis._arrow.style.display = (lastValue > 0) ? \"\" : \"none\";\r\n\t\t}\r\n\t\tif (this._renderedFifths != this._doc.prefs.showFifth) {\r\n\t\t\tthis._renderedFifths = this._doc.prefs.showFifth;\r\n\t\t\tthis._fifths.style.display = this._doc.prefs.showFifth ? \"\" : \"none\";\r\n\t\t}\r\n\t}\r\n}\r\n","// Copyright (C) 2020 John Nesky, distributed under the MIT license.\r\n\r\nimport { HTML } from \"imperative-html/dist/esm/elements-strict\";\r\nimport { Prompt } from \"./Prompt\";\r\nimport { SongDocument } from \"./SongDocument\";\r\n\r\nimport { PatternEditor } from \"./PatternEditor\";\r\n// import { ColorConfig } from \"./ColorConfig\";\r\n\r\n//namespace beepbox {\r\nconst { button, div, h2, input, p} = HTML;\r\nlet doReload = false;\r\nexport class CustomPrompt implements Prompt {\r\n\tprivate readonly _fileInput: HTMLInputElement = input({ type: \"file\", accept: \".png,.jpg,.jpeg\", text: \"choose editor background image\"});\r\n\tprivate readonly _fileInput2: HTMLInputElement = input({ type: \"file\", accept: \".png,.jpg,.jpeg\", text: \"choose website background image\" });\r\n\tprivate readonly _colorInput: HTMLInputElement = input({ type: \"text\", value: localStorage.getItem(\"customColors\") || `:root {\r\n\t\t--page-margin: #040410;\r\n\t\t--editor-background: #040410;\r\n\t\t--hover-preview: white;\r\n\t\t--playhead: rgba(255, 255, 255, 0.9);\r\n\t\t--primary-text: white;\r\n\t\t--secondary-text: #84859a;\r\n\t\t--inverted-text: black;\r\n\t\t--text-selection: rgba(119,68,255,0.99);\r\n\t\t--box-selection-fill: #044b94;\r\n\t\t--loop-accent: #74f;\r\n\t\t--link-accent: #98f;\r\n\t\t--ui-widget-background: #393e4f;\r\n\t\t--ui-widget-focus: #6d6886;\r\n\t\t--pitch-background: #393e4f99;\r\n\t\t--tonic: #725491;\r\n\t\t--fifth-note: #54547a;\r\n\t\t--white-piano-key: #eee;\r\n\t\t--black-piano-key: #666;\r\n\t\t--use-color-formula: true;\r\n\t\t--track-editor-bg-pitch: #393e4f;\r\n\t\t--track-editor-bg-pitch-dim: #1c1d28;\r\n\t\t--track-editor-bg-noise: #3d3535;\r\n\t\t--track-editor-bg-noise-dim: #161313;\r\n\t\t--track-editor-bg-mod: #283560;\r\n\t\t--track-editor-bg-mod-dim: #0a101f;\r\n\t\t--multiplicative-mod-slider: #606c9f;\r\n\t\t--overwriting-mod-slider: #6850b5;\r\n\t\t--indicator-primary: #9c64f7;\r\n\t\t--indicator-secondary: #393e4f;\r\n\t\t--select2-opt-group: #5d576f;\r\n\t\t--input-box-outline: #222;\r\n\t\t--mute-button-normal: #dda85d;\r\n\t\t--mute-button-mod: #886eae;\r\n\t\t--mod-label-primary: #282840;\r\n\t\t--mod-label-secondary-text: rgb(87, 86, 120);\r\n\t\t--mod-label-primary-text: white;\r\n\t\t--pitch-secondary-channel-hue: 0;\r\n\t\t--pitch-secondary-channel-hue-scale: 6.1;\r\n\t\t--pitch-secondary-channel-sat: 83.3;\r\n\t\t--pitch-secondary-channel-sat-scale: 0.1;\r\n\t\t--pitch-secondary-channel-lum: 40;\r\n\t\t--pitch-secondary-channel-lum-scale: 0.05;\r\n\t\t--pitch-primary-channel-hue: 0;\r\n\t\t--pitch-primary-channel-hue-scale: 6.1;\r\n\t\t--pitch-primary-channel-sat: 100;\r\n\t\t--pitch-primary-channel-sat-scale: 0.1;\r\n\t\t--pitch-primary-channel-lum: 67.5;\r\n\t\t--pitch-primary-channel-lum-scale: 0.05;\r\n\t\t--pitch-secondary-note-hue: 0;\r\n\t\t--pitch-secondary-note-hue-scale: 6.1;\r\n\t\t--pitch-secondary-note-sat: 93.9;\r\n\t\t--pitch-secondary-note-sat-scale: 0.1;\r\n\t\t--pitch-secondary-note-lum: 25;\r\n\t\t--pitch-secondary-note-lum-scale: 0.05;\r\n\t\t--pitch-primary-note-hue: 0;\r\n\t\t--pitch-primary-note-hue-scale: 6.1;\r\n\t\t--pitch-primary-note-sat: 100;\r\n\t\t--pitch-primary-note-sat-scale: 0.05;\r\n\t\t--pitch-primary-note-lum: 85.6;\r\n\t\t--pitch-primary-note-lum-scale: 0.025;\r\n\t\t--noise-secondary-channel-hue: 0;\r\n\t\t--noise-secondary-channel-hue-scale: 2;\r\n\t\t--noise-secondary-channel-sat: 25;\r\n\t\t--noise-secondary-channel-sat-scale: 0;\r\n\t\t--noise-secondary-channel-lum: 42;\r\n\t\t--noise-secondary-channel-lum-scale: 0;\r\n\t\t--noise-primary-channel-hue: 0;\r\n\t\t--noise-primary-channel-hue-scale: 2;\r\n\t\t--noise-primary-channel-sat: 33;\r\n\t\t--noise-primary-channel-sat-scale: 0;\r\n\t\t--noise-primary-channel-lum: 63.5;\r\n\t\t--noise-primary-channel-lum-scale: 0;\r\n\t\t--noise-secondary-note-hue: 0;\r\n\t\t--noise-secondary-note-hue-scale: 2;\r\n\t\t--noise-secondary-note-sat: 33.5;\r\n\t\t--noise-secondary-note-sat-scale: 0;\r\n\t\t--noise-secondary-note-lum: 55;\r\n\t\t--noise-secondary-note-lum-scale: 0;\r\n\t\t--noise-primary-note-hue: 0;\r\n\t\t--noise-primary-note-hue-scale: 2;\r\n\t\t--noise-primary-note-sat: 46.5;\r\n\t\t--noise-primary-note-sat-scale: 0;\r\n\t\t--noise-primary-note-lum: 74;\r\n\t\t--noise-primary-note-lum-scale: 0;\r\n\t\t--mod-secondary-channel-hue: 192;\r\n\t\t--mod-secondary-channel-hue-scale: 1.5;\r\n\t\t--mod-secondary-channel-sat: 88;\r\n\t\t--mod-secondary-channel-sat-scale: 0;\r\n\t\t--mod-secondary-channel-lum: 50;\r\n\t\t--mod-secondary-channel-lum-scale: 0;\r\n\t\t--mod-primary-channel-hue: 192;\r\n\t\t--mod-primary-channel-hue-scale: 1.5;\r\n\t\t--mod-primary-channel-sat: 96;\r\n\t\t--mod-primary-channel-sat-scale: 0;\r\n\t\t--mod-primary-channel-lum: 80;\r\n\t\t--mod-primary-channel-lum-scale: 0;\r\n\t\t--mod-secondary-note-hue: 192;\r\n\t\t--mod-secondary-note-hue-scale: 1.5;\r\n\t\t--mod-secondary-note-sat: 92;\r\n\t\t--mod-secondary-note-sat-scale: 0;\r\n\t\t--mod-secondary-note-lum: 45;\r\n\t\t--mod-secondary-note-lum-scale: 0;\r\n\t\t--mod-primary-note-hue: 192;\r\n\t\t--mod-primary-note-hue-scale: 1.5;\r\n\t\t--mod-primary-note-sat: 96;\r\n\t\t--mod-primary-note-sat-scale: 0;\r\n\t\t--mod-primary-note-lum: 85;\r\n\t\t--mod-primary-note-lum-scale: 0;\r\n\t}`});\r\n\tprivate readonly _cancelButton: HTMLButtonElement = button({ class: \"cancelButton\" });\r\n\tprivate readonly _okayButton: HTMLButtonElement = button({ class: \"okayButton\", style: \"width:45%;\" }, \"Okay\");\r\n\tprivate readonly _resetButton: HTMLButtonElement = button({ style: \"height: auto; min-height: var(--button-size);\" }, \"Reset to defaults\");\r\n\r\n\tpublic readonly container: HTMLDivElement = div({ class: \"prompt noSelection\", style: \"width: 300px;\" },\r\n\t\th2(\"Import\"),\r\n\t\tp({ style: \"text-align: left; margin: 0.5em 0;\" },\r\n\t\t\t\"You can upload images to create a custom theme.\",\r\n\t\t),\r\n\t\tp({ style: \"text-align: left; margin: 0.5em 0;\" },\r\n\t\t\t\"The first image will become the editor background, and the second image will be tiled across the webpage.\",\r\n\t\t),\r\n\t\tdiv(),\r\n\t\tp({ style: \"text-align: left; margin: 0;\" },\r\n\t\t\t\"Editor Background Image:\",\r\n\t\t\tthis._fileInput\r\n\t\t),\r\n\t\tp({ style: \"text-align: left; margin: 0.5em 0;\"},\r\n\t\t\t\"Website Background Image:\",\r\n\t\t\tthis._fileInput2\r\n\t\t),\r\n\t\tdiv(),\r\n\t\tp({ style: \"text-align: left; margin: 0;\"},\r\n\t\t\t\"If you want to mess with custom color schemes, mess with the hexcodes yourself, I dare you:\",\r\n\t\t),\r\n\t\tthis._colorInput,\r\n\t\tdiv({ style: \"display: flex; flex-direction: row-reverse; justify-content: space-between;\" },\r\n\t\t\tthis._resetButton\r\n\t\t),\r\n\t\tdiv({ style: \"display: flex; flex-direction: row-reverse; justify-content: space-between;\" },\r\n\t\t\tthis._okayButton,\r\n\t\t),\r\n\t\tthis._cancelButton,\r\n\t);\r\n\t// private readonly lastTheme: string | null = window.localStorage.getItem(\"colorTheme\")\r\n\r\n\tconstructor(private _doc: SongDocument, private _pattern: PatternEditor, private _pattern2: HTMLDivElement, private _pattern3: HTMLElement) {\r\n\t\tthis._fileInput.addEventListener(\"change\", this._whenFileSelected);\r\n\t\tthis._fileInput2.addEventListener(\"change\", this._whenFileSelected2);\r\n\t\tthis._colorInput.addEventListener(\"change\", this._whenColorsChanged);\r\n\t\tthis._okayButton.addEventListener(\"click\", this._close);\r\n\t\tthis._cancelButton.addEventListener(\"click\", this._close);\r\n\t\tthis._resetButton.addEventListener(\"click\", this._reset);\r\n\t}\r\n\r\n\tprivate _close = (): void => {\r\n\t\tthis._doc.prompt = null;\r\n\t\tthis._doc.undo();\r\n\t\tif(doReload) {\r\n\t\t\t// The prompt seems to get stuck if reloading is done too quickly.\r\n\t\t\tsetTimeout(() => { window.location.reload(); }, 50);\r\n\t\t}\r\n\t}\r\n\r\n\tpublic cleanUp = (): void => {\r\n\t\tthis._okayButton.removeEventListener(\"click\", this._close);\r\n\t\tthis._cancelButton.removeEventListener(\"click\", this._close);\r\n\t\t// this.container.removeEventListener(\"keydown\", this._whenKeyPressed);\r\n\t\tthis._resetButton.removeEventListener(\"click\", this._reset);\r\n\t}\r\n\tprivate _reset = (): void => {\r\n\t\twindow.localStorage.removeItem(\"colorTheme\");\r\n\t\twindow.localStorage.removeItem(\"customTheme\");\r\n\t\twindow.localStorage.removeItem(\"customTheme2\");\r\n\t\twindow.localStorage.removeItem(\"customColors\");\r\n\t\tthis._pattern._svg.style.backgroundImage = \"\";\r\n\t\tdocument.body.style.backgroundImage = \"\";\r\n\t\tthis._pattern2.style.backgroundImage = \"\";\r\n\t\tthis._pattern3.style.backgroundImage = \"\";\r\n\t\tconst secondImage: HTMLElement | null = document.getElementById(\"secondImage\");\r\n\t\tif (secondImage != null) {\r\n\t\t\tsecondImage.style.backgroundImage = \"\";\r\n\t\t}\r\n\t\tdoReload = true;\r\n\t\tthis._close();\r\n\t}\r\n\tprivate _whenColorsChanged = (): void => {\r\n\t\tlocalStorage.setItem(\"customColors\", this._colorInput.value);\r\n\t\twindow.localStorage.setItem(\"colorTheme\", \"custom\");\r\n\t\tthis._doc.colorTheme = \"custom\";\r\n\t\tdoReload = true;\r\n\t}\r\n\tprivate _whenFileSelected = (): void => {\r\n\t\tconst file: File = this._fileInput.files![0];\r\n\t\tif (!file) return;\r\n\t\tconst reader: FileReader = new FileReader();\r\n\t\treader.addEventListener(\"load\", (event: Event): void => {\r\n\t\t\t//this._doc.prompt = null;\r\n\t\t\t//this._doc.goBackToStart();\r\n\t\t\tlet base64 = <string>reader.result;\r\n\t\t\twindow.localStorage.setItem(\"customTheme\", base64);\r\n\t\t\tconst value = `url(\"${window.localStorage.getItem('customTheme')}\")`\r\n\t\t\tconsole.log('setting', value)\r\n\t\t\tthis._pattern._svg.style.backgroundImage = value;\r\n\t\t\tconsole.log('done')\r\n\t\t});\r\n\t\treader.readAsDataURL(file);\r\n\t}\r\n\tprivate _whenFileSelected2 = (): void => {\r\n\t\tconst file: File = this._fileInput2.files![0];\r\n\t\tif (!file) return;\r\n\t\tconst reader: FileReader = new FileReader();\r\n\t\treader.addEventListener(\"load\", (event: Event): void => {\r\n\t\t\t//this._doc.prompt = null;\r\n\t\t\t//this._doc.goBackToStart();\r\n\t\t\tlet base64 = <string>reader.result;\r\n\t\t\twindow.localStorage.setItem(\"customTheme2\", base64);\r\n\t\t\tconst value = `url(\"${window.localStorage.getItem('customTheme2')}\")`\r\n\t\t\tdocument.body.style.backgroundImage = `url(${base64})`;\r\n\t\t\tthis._pattern2.style.backgroundImage = value;\r\n\t\t\tthis._pattern3.style.backgroundImage = value;\r\n\t\t\tconst secondImage: HTMLElement | null = document.getElementById(\"secondImage\");\r\n\t\t\tif (secondImage != null) {\r\n\t\t\t\tsecondImage.style.backgroundImage = `url(${base64})`;\r\n\t\t\t}\r\n\t\t\t// document.body.style.backgroundImage = `url(${newURL})`;\r\n\t\t\t// window.localStorage.setItem(\"customTheme2\", <string>reader.result);\r\n\t\t\t// this._doc.record(new ChangeSong(this._doc, <string>reader.result), true, true);\r\n\t\t});\r\n\t\treader.readAsDataURL(file);\r\n\t}\r\n\t// private _whenKeyPressed = (event: KeyboardEvent): void => {\r\n\t// \tif ((<Element>event.target).tagName != \"BUTTON\" && event.keyCode == 13) { // Enter key\r\n\t// \t\tthis._saveChanges();\r\n\t// \t}\r\n\t// }\r\n\r\n\t// private _previewTheme = (): void => {\r\n\t// \tColorConfig.setTheme(this._themeSelect.value);\r\n\t// }\r\n}\r\n//}\r\n","// Copyright (C) 2020 John Nesky, distributed under the MIT license.\r\n\r\nimport { HTML } from \"imperative-html/dist/esm/elements-strict\";\r\nimport { Prompt } from \"./Prompt\";\r\nimport { SongDocument } from \"./SongDocument\";\r\nimport { ColorConfig } from \"./ColorConfig\";\r\n\r\n//namespace beepbox {\r\nconst { button, div, h2, select, option } = HTML;\r\n\r\nexport class ThemePrompt implements Prompt {\r\n\tprivate readonly _themeSelect: HTMLSelectElement = select({ style: \"width: 100%;\" },\r\n\t\t\t\t\toption({ value: \"dark classic\" }, \"BeepBox Dark\"),\r\n\t\t\toption({ value: \"light classic\" }, \"BeepBox Light\"),\r\n\t\t\toption({ value: \"dark competition\" }, \"BeepBox Competition Dark\"),\r\n\t\t\toption({ value: \"jummbox classic\" }, \"JummBox Dark\"),\r\n\t\t\toption({ value: \"jummbox light\" }, \"Gold Light\"),\r\n\t\t\toption({ value: \"forest\" }, \"Forest\"),\r\n\t\t\toption({ value: \"canyon\" }, \"Canyon\"),\r\n\t\t\toption({ value: \"midnight\" }, \"Midnight\"),\r\n\t\t\toption({ value: \"beachcombing\" }, \"Beachcombing\"),\r\n\t\t\toption({ value: \"violet verdant\" }, \"Violet Verdant\"),\r\n\t\t\toption({ value: \"sunset\" }, \"Sunset\"),\r\n\t\t\toption({ value: \"autumn\" }, \"Autumn\"),\r\n\t\t\toption({ value: \"fruit\" }, \"Shadowfruit\"),\r\n\t\t\toption({ value: \"toxic\" }, \"Toxic\"),\r\n\t\t\toption({ value: \"roe\" }, \"Roe\"),\r\n\t\t\toption({ value: \"moonlight\" }, \"Moonlight\"),\r\n\t\t\toption({ value: \"portal\" }, \"Portal\"),\r\n\t\t\toption({ value: \"fusion\" }, \"Fusion\"),\r\n\t\t\toption({ value: \"inverse\" }, \"Inverse\"),\r\n\t\t\toption({ value: \"nebula\" }, \"Nebula\"),\r\n\t\t\toption({ value: \"roe light\" }, \"Roe Light\"),\r\n\t\t\toption({ value: \"amoled dark\" }, \"High Contrast Dark\"),\r\n\t\t\toption({ value: \"energized\" }, \"Energized\"),\r\n\t\t\toption({ value: \"neapolitan\" }, \"Neapolitan\"),\r\n\t\t\toption({ value: \"mono\" }, \"Mono\"),\r\n\t\t\toption({ value: \"slushie\" }, \"Slushie\"),\r\n\t\t\toption({ value: \"modbox classic\" }, \"Modbox Classic\"),\r\n\t\t\toption({ value: \"sandbox classic\" }, \"Sandbox 3.0\"),\r\n\t\t\toption({ value: \"harrybox\" }, \"Haileybox\"),\r\n\t\t\toption({ value: \"brucebox\" }, \"Brucebox\"),\r\n\t\t\toption({ value: \"shitbox 2.0\" }, \"Shitbox 2.0\"),\r\n\t\t\toption({ value: \"shitbox 3.0\" }, \"Shitbox 3.0\"),\r\n\t\t\toption({ value: \"nerdbox\" }, \"Nerdbox\"),\r\n\t\t\toption({ value: \"zefbox\" }, \"Zefbox\"),\r\n\t\t\toption({ value: \"cardboardbox classic\" }, \"Cardboardbox\"),\r\n\t\t\toption({ value: \"blubox classic\" }, \"Blubox 1.0\"),\r\n\t\t\toption({ value: \"dogebox classic\" }, \"Dogebox\"),\r\n\t\t\toption({ value: \"wackybox\" }, \"Wackybox\"),\r\n\t\t\toption({ value: \"todbox dark mode\" }, \"Todbox Dark Mode\"),\r\n\t\t\toption({ value: \"mainbox 1.0\" }, \"Mainbox\"),\r\n\t\t\toption({ value: \"microbox\" }, \"MicroBox\"),\r\n\t\t\toption({ value: \"foxbox\" }, \"FoxBox\"),\r\n\t\t\toption({ value: \"ultrabox rainbow\" }, \"UltraBox Rainbow\"),\r\n\t\t\toption({ value: \"ultrabox terminal\" }, \"UltraBox Terminal\"),\r\n\t\t\toption({ value: \"ultrabox upside-down beepbox\" }, \"UltraBox Upside-down Beepbox\"),\r\n\t\t\toption({ value: \"mainbox reimagined\" }, \"Mainbox Reimagined\"),\r\n\t\t\toption({ value: \"custom\" }, \"Custom\")\r\n\t);\r\n\tprivate readonly _cancelButton: HTMLButtonElement = button({ class: \"cancelButton\" });\r\n\tprivate readonly _okayButton: HTMLButtonElement = button({ class: \"okayButton\", style: \"width:45%;\" }, \"Okay\");\r\n\r\n\tpublic readonly container: HTMLDivElement = div({ class: \"prompt noSelection\", style: \"width: 220px;\" },\r\n\t\th2(\"Set Theme\"),\r\n\t\tdiv({ style: \"display: flex; flex-direction: row; align-items: center; height: 2em; justify-content: flex-end;\" },\r\n\t\t\tdiv({ class: \"selectContainer\", style: \"width: 100%;\" }, this._themeSelect),\r\n\t\t),\r\n\t\tdiv({ style: \"display: flex; flex-direction: row-reverse; justify-content: space-between;\" },\r\n\t\t\tthis._okayButton,\r\n\t\t),\r\n\t\tthis._cancelButton,\r\n\t);\r\n\tprivate readonly lastTheme: string | null = window.localStorage.getItem(\"colorTheme\")\r\n\r\n\tconstructor(private _doc: SongDocument) {\r\n\t\tif (this.lastTheme != null) {\r\n\t\t\tthis._themeSelect.value = this.lastTheme;\r\n\t\t}\r\n\t\tthis._okayButton.addEventListener(\"click\", this._saveChanges);\r\n\t\tthis._cancelButton.addEventListener(\"click\", this._close);\r\n\t\tthis.container.addEventListener(\"keydown\", this._whenKeyPressed);\r\n\t\tthis._themeSelect.addEventListener(\"change\", this._previewTheme);\r\n\t}\r\n\r\n\tprivate _close = (): void => {\r\n\t\tif (this.lastTheme != null) {\r\n\t\t\tColorConfig.setTheme(this.lastTheme);\r\n\t\t} else {\r\n\t\t\tColorConfig.setTheme(\"dark classic\");\r\n\t\t}\r\n\t\tthis._doc.undo();\r\n\t}\r\n\r\n\tpublic cleanUp = (): void => {\r\n\t\tthis._okayButton.removeEventListener(\"click\", this._saveChanges);\r\n\t\tthis._cancelButton.removeEventListener(\"click\", this._close);\r\n\t\tthis.container.removeEventListener(\"keydown\", this._whenKeyPressed);\r\n\t}\r\n\r\n\tprivate _whenKeyPressed = (event: KeyboardEvent): void => {\r\n\t\tif ((<Element>event.target).tagName != \"BUTTON\" && event.keyCode == 13) { // Enter key\r\n\t\t\tthis._saveChanges();\r\n\t\t}\r\n\t}\r\n\r\n\tprivate _saveChanges = (): void => {\r\n\t\twindow.localStorage.setItem(\"colorTheme\", this._themeSelect.value);\r\n\t\tthis._doc.prompt = null;\r\n\t\tthis._doc.prefs.colorTheme = this._themeSelect.value;\r\n\t\tthis._doc.undo();\r\n\t}\r\n\r\n\tprivate _previewTheme = (): void => {\r\n\t\tColorConfig.setTheme(this._themeSelect.value);\r\n\t\tthis._doc.notifier.changed();\r\n\t}\r\n}\r\n//}\r\n","// Copyright (c) 2012-2022 John Nesky and contributing authors, distributed under the MIT license, see accompanying the LICENSE.md file.\r\n\r\nimport { HTML } from \"imperative-html/dist/esm/elements-strict\";\r\nimport { Prompt } from \"./Prompt\";\r\nimport { SongDocument } from \"./SongDocument\";\r\nimport { Config } from \"../synth/SynthConfig\";\r\n\r\nconst { button, div, p, h2, h3 } = HTML;\r\n\r\nexport class TipPrompt implements Prompt {\r\n\t\tprivate readonly _closeButton: HTMLButtonElement = button({class: \"cancelButton\"});\r\n\t\t\r\n\tpublic readonly container: HTMLDivElement;\r\n\t\t\r\n\tconstructor(private _doc: SongDocument, type: string) {\r\n\t\tlet message: HTMLDivElement;\r\n\t\t\t\r\n\t\tswitch (type) {\r\n\t\t\tcase \"scale\": {\r\n\t\t\t\tmessage = div(\r\n\t\t\t\t\th2(\"Scale\"),\r\n\t\t\t\t\tp(\"This setting limits the available pitches for adding notes. You may think that there's no point in limiting your choices, but the set of pitches you use has a strong influence on the mood and feel of your song, and these scales serve as guides to help you choose appropriate pitches. Don't worry, you can change the scale at any time, so you're not locked into it. Try making little melodies using all the available pitches of a scale to get a sense for how it sounds.\"),\r\n\t\t\t\t\tp(\"The most common scales are major and minor. Assuming your song uses all pitches in the scale and especially \\\"tonic\\\" pitches (the purple rows in the pattern editor) then major scales tend to sound more playful or optimistic, whereas minor scales sound more serious or sad.\"),\r\n\t\t\t\t);\r\n\t\t\t} break;\r\n\t\t\tcase \"key\": {\r\n\t\t\t\tmessage = div(\r\n\t\t\t\t\th2(\"Song Key\"),\r\n\t\t\t\t\tp(\"This setting can shift the frequency of every note in your entire song up or down, keeping the \\\"tonic\\\" pitches (the brown rows in the pattern editor) aligned with the selected \\\"key\\\" pitch.\"),\r\n\t\t\t\t\tp(\"If you've already placed some notes but they don't emphasize \\\"tonic\\\" pitches then the selected key isn't very meaningful. You can select the \\\"Detect Key\\\" option in the key menu to automatically align the most emphasized notes with \\\"tonic\\\" pitches.\"),\r\n\t\t\t\t);\r\n\t\t\t} break;\r\n\t\t\tcase \"key_octave\": {\r\n\t\t\t\tmessage = div(\r\n\t\t\t\t\th2(\"Octave\"),\r\n\t\t\t\t\tp(\"This setting can shift the \\\"key\\\" by an octave, allowing you to use a B- or C+ key.\"),\r\n\t\t\t\t\tp(`This goes from ${Config.octaveMin} to ${Config.octaveMax}.`),\r\n\t\t\t\t);\r\n\t\t\t} break;\r\n\t\t\tcase \"tempo\": {\r\n\t\t\t\tmessage = div(\r\n\t\t\t\t\th2(\"Song Tempo\"),\r\n\t\t\t\t\tp(\"This setting controls the speed of your song, measured in beats-per-minute. A \\\"beat\\\" is the duration of the little gray rectangles in the pattern editor. (In conventional music notation, a \\\"quarter note\\\" is usually equivalent to \\\"beat\\\".)\"),\r\n\t\t\t\t);\r\n\t\t\t} break;\r\n\t\t\tcase \"reverb\": {\r\n\t\t\t\tmessage = div(\r\n\t\t\t\t\th2(\"Reverb\"),\r\n\t\t\t\t\tp(\"Reverb is like a continuous echo effect. A little bit helps instruments sound more natural. Adding a lot of reverb can add sense of depth or mystery, but too much reverb can kinda \\\"smear\\\" sounds so that it's harder to distinguish notes or instruments, especially for lower \\\"bass\\\" notes.\"),\r\n\t\t\t\t);\r\n\t\t\t} break;\r\n\t\t\tcase \"rhythm\": {\r\n\t\t\t\tmessage = div(\r\n\t\t\t\t\th2(\"Rhythm\"),\r\n\t\t\t\t\tp(\"This setting determines how beats are divided. The pattern editor helps you align notes to fractions of a beat based on this setting.\"),\r\n\t\t\t\t\tp(\"If you've already placed some notes but they don't align with the selected rhythm, you can select the \\\"Snap Notes To Rhythm\\\" option in the rhythm menu to force the notes in the currently selected pattern(s) to align with the selected rhythm.\"),\r\n\t\t\t\t);\r\n\t\t\t} break;\r\n\t\t\tcase \"instrumentIndex\": {\r\n\t\t\t\tmessage = div(\r\n\t\t\t\t\th2(\"Instrument Number\"),\r\n\t\t\t\t\tp(\"In the \\\"Channel Settings\\\" option from JummBox's \\\"File\\\" menu, there are a few ways to enable multiple instruments per channel.\"),\r\n\t\t\t\t\tp(\"First, you could enable multiple simultaneous instruments per channel. All of the channel's instruments will play all of the notes in the channel at the same time, and you can click an instrument number to view and edit its settings.\"),\r\n\t\t\t\t\tp(\"Second, you could enable different instruments per pattern. Only one of the instruments will play at any given time, but you can click the instrument number to change which instrument is used for the currently selected pattern(s).\"),\r\n\t\t\t\t\tp(\"Finally, you can enable them both, in which case you can click an instrument number once to view it, and again to toggle whether the instrument is used for the currently selected pattern(s).\"),\r\n\t\t\t\t\tp(\"Either way, you can click the + button to add more instruments to a channel, and you can press shift and a number key on your keyboard to select an instrument as if you had clicked the corresponding button here.\"),\r\n\t\t\t\t);\r\n\t\t\t} break;\r\n\t\t\tcase \"instrumentVolume\": {\r\n\t\t\t\tmessage = div(\r\n\t\t\t\t\th2(\"Instrument Volume\"),\r\n\t\t\t\t\tp(\"This setting controls the volume of the selected instrument without affecting the volume of the other instruments. This allows you to balance the loudness of each instrument relative to each other.\"),\r\n\t\t\t\t\tp(\"Please be careful when using volume settings above 0. This indicates amplification and too much of that can trip the audio limiter built into this tool. This can lead to your song sounding muffled if overused. But when used carefully, amplification can be a powerful tool!\"),\r\n\t\t\t\t);\r\n\t\t\t} break;\r\n\t\t\tcase \"pan\": {\r\n\t\t\t\tmessage = div(\r\n\t\t\t\t\th2(\"Instrument Panning\"),\r\n\t\t\t\t\tp(\"If you're listening through headphones or some other stereo sound system, this controls the position of the instrument and where the sound is coming from, ranging from left to right.\"),\r\n\t\t\t\t\tp(\"As a suggestion, composers often put lead melodies, drums, and basses in the center, and spread other instruments toward either side. If too many instruments seem like they're coming from the same place, it can feel crowded and harder to distinguish individual sounds, especially if they cover a similar pitch range.\"),\r\n\t\t\t\t);\r\n\t\t\t} break;\r\n\t\t\tcase \"panDelay\":\r\n\t\t\t\t{\r\n\t\t\t\t\tmessage = div(\r\n\t\t\t\t\t\th2(\"Stereo Delay\"),\r\n\t\t\t\t\t\tp(\"When panning, a slight delay is often added between the left and right ear to help make a sound feel more 'directional'. For example, in the real world your left ear will hear a sound coming from the left just slightly before the right ear.\"),\r\n\t\t\t\t\t\tp(\"This setting controls how much delay is added. When this is set to minimum, panning only affects the volume of the left/right ear without changing the delay. This can help to get a more 'uniform' feeling sound, which can be desirable for making 8-bit music.\")\r\n\t\t\t\t\t);\r\n\t\t\t\t}\r\n\t\t\t\tbreak;\r\n\t\t\tcase \"arpeggioSpeed\":\r\n\t\t\t\t{\r\n\t\t\t\t\tmessage = div(\r\n\t\t\t\t\t\th2(\"Arpeggio Speed\"),\r\n\t\t\t\t\t\tp(\"This setting affects how fast your chord will 'arpeggiate', or cycle between notes. With a fast arpeggio speed it will sound rapid-fire, with a slow speed you can hear each note one after another.\")\r\n\t\t\t\t\t);\r\n\t\t\t\t}\r\n\t\t\t\tbreak;\r\n\t\t\tcase \"twoNoteArpeggio\":\r\n\t\t\t\t{\r\n\t\t\t\t\tmessage = div(\r\n\t\t\t\t\t\th2(\"Faster Two-Note Arpeggio\"),\r\n\t\t\t\t\t\tp(\"This setting makes arpeggios with only two notes in them happen twice as fast. Arpeggios with more notes in them are unaffected.\")\r\n\t\t\t\t\t);\r\n\t\t\t\t}\r\n\t\t\t\tbreak;\r\n\t\t\tcase \"detune\": {\r\n\t\t\t\tmessage = div(\r\n\t\t\t\t\th2(\"Detune\"),\r\n\t\t\t\t\tp(\"This setting can be used to finely control the pitch of your instrument. It is in units of 'cents', 100 of which equal a pitch shift of one semitone.\"),\r\n\t\t\t\t\tp(\"Careful - you can quickly get very dissonant sounding songs by using this setting.\"),\r\n\t\t\t\t);\r\n\t\t\t} break;\r\n\t\t\tcase \"instrumentType\": {\r\n\t\t\t\tmessage = div(\r\n\t\t\t\t\th2(\"Instrument Type\"),\r\n\t\t\t\t\tp(\"JummBox comes with many instrument presets, try them out! You can also create your own custom instruments!\"),\r\n\t\t\t\t\tp(\"There are also options for copying and pasting instrument settings and for generating random instruments at the top of the instrument type menu.\"),\r\n\t\t\t\t);\r\n\t\t\t} break;\r\n\t\t\tcase \"eqFilter\": {\r\n\t\t\t\tmessage = div(\r\n\t\t\t\t\th2(\"EQ Filter\"),\r\n\t\t\t\t\tp(\"Filters are a way of emphasizing or diminishing different parts of a sound. Musical notes have a fundamental (base) frequency, but the sound of a musical note also has parts at higher frequencies and filters can adjust the volume of each of these parts based on their frequency.\"),\r\n\t\t\t\t\tp(\"Click in the filter editor to insert, delete, or drag a filter control point. The horizontal position of the point determines which frequencies it affects, and the vertical position determines how the volume is affected at that frequency.\"),\r\n\t\t\t\t\tp(\"Insert a new point on the left side of the filter editor to add a \\\"high-pass\\\" filter point, which additionally reduces the volume of lower frequencies, or insert a new point on the right side to add a \\\"low-pass\\\" filter point which reduces the volume of higher frequencies.\"),\r\n\t\t\t\t\tp(\"You can also enable a \\\"Note Filter\\\" as an effect. EQ and note filters are mostly the same, but have different purposes. EQ filters are for overall adjustments, whereas note filters are for dynamic control and can be moved with envelopes. Note filters also change how the distortion effect sounds.\"),\r\n\t\t\t\t);\r\n\t\t\t} break;\r\n\t\t\tcase \"noteFilter\": {\r\n\t\t\t\tmessage = div(\r\n\t\t\t\t\th2(\"Note Filter\"),\r\n\t\t\t\t\tp(\"Note filters are mostly the same as EQ filters, but have a different purpose. EQ filters are for overall adjustments, whereas note filters are for dynamic control and can be moved with envelopes. Note filters also change how the distortion effect sounds.\"),\r\n\t\t\t\t\tp(\"Filters are a way of emphasizing or diminishing different parts of a sound. Musical notes have a fundamental (base) frequency, but the sound of a musical note also has parts at higher frequencies and filters can adjust the volume of each of these parts based on their frequency.\"),\r\n\t\t\t\t\tp(\"Click in the filter editor to insert, delete, or drag a filter control point. The horizontal position of the point determines which frequencies it affects, and the vertical position determines how the volume is affected at that frequency.\"),\r\n\t\t\t\t\tp(\"Insert a new point on the left side of the filter editor to add a \\\"high-pass\\\" filter point, which additionally reduces the volume of lower frequencies, or insert a new point on the right side to add a \\\"low-pass\\\" filter point which reduces the volume of higher frequencies.\"),\r\n\t\t\t\t);\r\n\t\t\t} break;\r\n\t\t\tcase \"fadeInOut\": {\r\n\t\t\t\tmessage = div(\r\n\t\t\t\t\th2(\"Fade In/Out\"),\r\n\t\t\t\t\tp(\"This setting controls how long it takes for notes to reach full volume at the beginning or decay to silence at the end.\"),\r\n\t\t\t\t\tp(\"An instant fade-in sounds like instruments that are played by hitting or plucking, whereas slower fade-ins sound like instruments that are played by blowing air.\"),\r\n\t\t\t\t\tp(\"You can also make the fade-out start before the note ends to leave a gap before the next note starts, or after the note ends to allow the sound of the end of the note to overlap with the start of the next note.\"),\r\n\t\t\t\t);\r\n\t\t\t} break;\r\n\t\t\tcase \"transition\": {\r\n\t\t\t\tmessage = div(\r\n\t\t\t\t\th2(\"Transition\"),\r\n\t\t\t\t\tp(\"Usually, when one note ends at the same time another begins, the old note will fade out and the new note will fade in based on the fade in/out settings, but this setting can override that, connecting the end of one note to the beginning of the next.\"),\r\n\t\t\t\t\tp(\"The \\\"interrupt\\\" transition makes the wave suddenly change from the old note's frequency to the new note's frequency without any fading, but still restarts envelopes at the beginning of the new note. The \\\"continue\\\" transition is similar but it doesn't even restart envelopes, and can be used to make each of the notes in a chord start or stop at different times!\"),\r\n\t\t\t\t\tp(\"The \\\"slide\\\" transition makes the pitch shift quickly but not instantaneously from the old note's frequency to the new note's frequency, and softly restarts envelopes. The \\\"slide in pattern\\\" transition is the same except it doesn't connect the last note in a pattern to the first note in the next pattern.\"),\r\n\t\t\t\t);\r\n\t\t\t} break;\r\n\t\t\tcase \"chipWave\": {\r\n\t\t\t\tmessage = div(\r\n\t\t\t\t\th2(\"Chip Wave\"),\r\n\t\t\t\t\tp(\"JummBox comes with some sound waves based on classic electronic sound chips, as well as several unique waves. This is the basic source of the sound of the instrument, which is modified by the other instrument settings.\"),\r\n\t\t\t\t);\r\n\t\t\t} break;\r\n\t\t\tcase \"chipNoise\": {\r\n\t\t\t\tmessage = div(\r\n\t\t\t\t\th2(\"Noise\"),\r\n\t\t\t\t\tp(\"JummBox comes with several basic noise sounds. These do not have any distinct musical pitch, and can be used like drums to create beats and emphasize your song's rhythm.\"),\r\n\t\t\t\t);\r\n\t\t\t} break;\r\n\t\t\tcase \"pulseWidth\": {\r\n\t\t\t\tmessage = div(\r\n\t\t\t\t\th2(\"Pulse Wave Width\"),\r\n\t\t\t\t\tp(\"This setting controls the shape and sound of a pulse wave. At the minimum width, it sounds light and buzzy. At the maximum width, it is shaped like a classic square wave.\"),\r\n\t\t\t\t);\r\n\t\t\t} break;\r\n\t\t\tcase \"unison\": {\r\n\t\t\t\tmessage = div(\r\n\t\t\t\t\th2(\"Unison\"),\r\n\t\t\t\t\tp(\"This instrument can play two identical waves at different frequencies. When two waves play at slightly different frequencies, they move in and out of phase with each other over time as different parts of the waves line up. This creates a dynamic, shifting sound. Pianos are a common example of this kind of sound, because each piano key strikes multiple strings that are tuned to slightly different frequencies.\"),\r\n\t\t\t\t\tp(\"The distance between two frequencies is called an \\\"interval\\\", and this setting controls how large it is. If the interval is too wide, then the waves may sound out-of-tune and \\\"dissonant\\\". However, if the interval is even larger, then the two frequencies can even be distinct pitches.\"),\r\n\t\t\t\t);\r\n\t\t\t} break;\r\n\t\t\tcase \"chords\": {\r\n\t\t\t\tmessage = div(\r\n\t\t\t\t\th2(\"Chords\"),\r\n\t\t\t\t\tp(\"When multiple different notes occur at the same time, this is called a chord. Chords can be created in JummBox's pattern editor by adding notes above or below another note.\"),\r\n\t\t\t\t\tp(\"This setting determines how chords are played. The standard option is \\\"simultaneous\\\" which starts playing all of the pitches in a chord at the same instant. The \\\"strum\\\" option is similar, but plays the notes starting at slightly different times. The \\\"arpeggio\\\" option is used in \\\"chiptune\\\" style music and plays a single tone that rapidly alternates between all of the pitches in the chord.\"),\r\n\t\t\t\t\tp(\"Some JummBox instruments have an option called \\\"custom interval\\\" which uses the chord notes to control the interval between the waves of a single tone. This can create strange sound effects when combined with FM modulators.\"),\r\n\t\t\t\t);\r\n\t\t\t} break;\r\n\t\t\tcase \"vibrato\": {\r\n\t\t\t\tmessage = div(\r\n\t\t\t\t\th2(\"Vibrato\"),\r\n\t\t\t\t\tp(\"This setting causes the frequency of a note to wobble slightly. Singers and violinists often use vibrato.\"),\r\n\t\t\t\t);\r\n\t\t\t} break;\r\n\t\t\tcase \"vibratoDepth\":\r\n\t\t\t\t{\r\n\t\t\t\t\tmessage = div(\r\n\t\t\t\t\t\th2(\"Vibrato Depth\"),\r\n\t\t\t\t\t\tp(\"This setting affects the depth of your instrument's vibrato, making the wobbling effect sound stronger or weaker.\")\r\n\t\t\t\t\t);\r\n\t\t\t\t} break;\r\n\t\t\tcase \"vibratoDelay\":\r\n\t\t\t\t{\r\n\t\t\t\t\tmessage = div(\r\n\t\t\t\t\t\th2(\"Vibrato Delay\"),\r\n\t\t\t\t\t\tp(\"This setting changes when vibrato starts to kick in after a note is played. Vibrato is most common for long held notes and less common in short notes, so this can help you achieve that effect.\")\r\n\t\t\t\t\t);\r\n\t\t\t\t} break;\r\n\t\t\tcase \"vibratoSpeed\":\r\n\t\t\t\t{\r\n\t\t\t\t\tmessage = div(\r\n\t\t\t\t\t\th2(\"Vibrato Speed\"),\r\n\t\t\t\t\t\tp(\"This setting determines how fast the vibrato's up-and-down wobble effect will happen for your instrument.\")\r\n\t\t\t\t\t);\r\n\t\t\t\t}\r\n\t\t\t\tbreak;\r\n\t\t\tcase \"vibratoType\":\r\n\t\t\t\t{\r\n\t\t\t\t\tmessage = div(\r\n\t\t\t\t\t\th2(\"Vibrato Type\"),\r\n\t\t\t\t\t\tp(\"This determines the way vibrato causes your instrument's pitch to wobble. The normal type is smooth up and down, the shaky type is chaotic.\")\r\n\t\t\t\t\t);\r\n\t\t\t\t}\r\n\t\t\t\tbreak;\r\n\t\t\tcase \"algorithm\": {\r\n\t\t\t\tmessage = div(\r\n\t\t\t\t\th2(\"FM Algorithm\"),\r\n\t\t\t\t\tp('FM Synthesis is a mysterious but powerful technique for crafting sounds, popularized by Yamaha keyboards and the Sega Genesis/Mega Drive. It may seem confusing, but try playing around with the options until you get a feel for it, or check out some of the preset examples!'),\r\n\t\t\t\t\tp('This FM synthesizer uses up to four waves, numbered 1, 2, 3, and 4. Each wave may have its own frequency and volume.'),\r\n\t\t\t\t\tp('There are two kinds of waves: \"carrier\" waves play a tone out loud, but \"modulator\" waves distort other waves instead. Wave 1 is always a carrier and plays a tone, but other waves may distort it. The \"Algorithm\" setting determines which waves are modulators, and which other waves those modulators distort. For example, \"1←2\" means that wave 2 modulates wave 1, and wave 1 plays out loud.'),\r\n\t\t\t\t);\r\n\t\t\t} break;\r\n\t\t\tcase \"feedbackType\": {\r\n\t\t\t\tmessage = div(\r\n\t\t\t\t\th2(\"Feedback Type\"),\r\n\t\t\t\t\tp('Modulators distort in one direction (like 1←2), but you can also use the feedback setting to make any wave distort in the opposite direction (1→2), or even itself (1⟲).'),\r\n\t\t\t\t);\r\n\t\t\t} break;\r\n\t\t\tcase \"feedbackVolume\": {\r\n\t\t\t\tmessage = div(\r\n\t\t\t\t\th2(\"Feedback Distortion\"),\r\n\t\t\t\t\tp(\"This setting controls the amount of feedback distortion based on the feedback type setting.\"),\r\n\t\t\t\t);\r\n\t\t\t} break;\r\n\t\t\tcase \"operatorFrequency\": {\r\n\t\t\t\tmessage = div(\r\n\t\t\t\t\th2(\"Operator Frequency\"),\r\n\t\t\t\t\tp('This setting controls the frequency of an individual FM wave, relative to the fundamental frequency of the note. The multiplier 1× is the same as the fundamental frequency, whereas 2x would be an octave (12 semitones) above it. The frequencies with a \"~\" are slightly detuned and shift in and out of phase over time compared to the other frequencies.'),\r\n\t\t\t\t\tp('Try different combinations of a \"carrier\" wave and a \"modulator\" wave with different frequencies to get a feel for how they sound together.'),\r\n\t\t\t\t);\r\n\t\t\t} break;\r\n\t\t\tcase \"operatorVolume\": {\r\n\t\t\t\tmessage = div(\r\n\t\t\t\t\th2(\"Operator Volume\"),\r\n\t\t\t\t\tp(\"This setting controls the volume of \\\"carrier\\\" waves, or the amount of distortion that \\\"modulator\\\" waves apply to other waves.\"),\r\n\t\t\t\t);\r\n\t\t\t} break;\r\n\t\t\tcase \"spectrum\": {\r\n\t\t\t\tmessage = div(\r\n\t\t\t\t\th2(\"Spectrum\"),\r\n\t\t\t\t\tp(\"This setting allows you to draw your own noise spectrum! This is good for making drum sounds.\"),\r\n\t\t\t\t\tp(\"If you only use certain frequencies and a soft fade in/out, it's also possible to make howling wind sounds or even musical wind instruments.\"),\r\n\t\t\t\t\tp(\"The left side of the spectrum editor controls the noise energy at lower frequencies, and the right side controls higher frequencies.\"),\r\n\t\t\t\t);\r\n\t\t\t} break;\r\n\t\t\tcase \"harmonics\": {\r\n\t\t\t\tmessage = div(\r\n\t\t\t\t\th2(\"Harmonics\"),\r\n\t\t\t\t\tp(\"This setting allows you to design your own sound wave! Most musical waves are actually a combination of sine waves at certain frequencies, and this lets you control the volume of each sine wave individually.\"),\r\n\t\t\t\t\tp(\"The left side of the harmonics editor controls the sine wave volumes at lower frequencies, and the right side controls higher frequencies.\"),\r\n\t\t\t\t);\r\n\t\t\t} break;\r\n\t\t\tcase \"effects\": {\r\n\t\t\t\tmessage = div(\r\n\t\t\t\t\th2(\"Effects\"),\r\n\t\t\t\t\tp(\"JummBox has many different kinds of special effects you can add to instruments. You can turn on multiple effects at once, and they can be configured individually. Try them all out!\"),\r\n\t\t\t\t);\r\n\t\t\t} break;\r\n\t\t\tcase \"drumsetEnvelope\": {\r\n\t\t\t\tmessage = div(\r\n\t\t\t\t\th2(\"Drumset Envelope\"),\r\n\t\t\t\t\tp(\"This drumset comes with a low-pass filter, and this setting can dynamically change the low-pass filter frequency over time. Each row in the pattern editor can have a different envelope shape.\"),\r\n\t\t\t\t);\r\n\t\t\t} break;\r\n\t\t\tcase \"drumsetSpectrum\": {\r\n\t\t\t\tmessage = div(\r\n\t\t\t\t\th2(\"Drumset Spectrum\"),\r\n\t\t\t\t\tp(\"This setting allows you to draw your own noise spectrum! This is good for making drumsets. Each row in the pattern editor gets its own spectrum.\"),\r\n\t\t\t\t\tp(\"The left side of the spectrum editor controls the noise energy at lower frequencies, and the right side controls higher frequencies.\"),\r\n\t\t\t\t);\r\n\t\t\t} break;\r\n\t\t\tcase \"chorus\": {\r\n\t\t\t\tmessage = div(\r\n\t\t\t\t\th2(\"Chorus\"),\r\n\t\t\t\t\tp(\"The chorus effect combines multiple copies of the instrument's sound and adds a bit of vibrato to simulate an ensemble of instruments or voices. Drag the slider to control how much chorus is added.\"),\r\n\t\t\t\t);\r\n\t\t\t} break;\r\n\t\t\tcase \"echoSustain\": {\r\n\t\t\t\tmessage = div(\r\n\t\t\t\t\th2(\"Echo Volume\"),\r\n\t\t\t\t\tp(\"The echo effect repeats the instrument's sound after a delay. Each echo is a little bit quieter than the last, and this setting controls how much quieter.\"),\r\n\t\t\t\t);\r\n\t\t\t} break;\r\n\t\t\tcase \"echoDelay\": {\r\n\t\t\t\tmessage = div(\r\n\t\t\t\t\th2(\"Echo Delay\"),\r\n\t\t\t\t\tp(\"The echo effect repeats the instrument's sound after a delay, and this setting controls how long the delay is.\"),\r\n\t\t\t\t);\r\n\t\t\t} break;\r\n\t\t\tcase \"pitchShift\": {\r\n\t\t\t\tmessage = div(\r\n\t\t\t\t\th2(\"Pitch Shift\"),\r\n\t\t\t\t\tp(\"This setting makes instruments play higher or lower pitches than the ones displayed in the pattern editor. Be careful that you don't confuse yourself!\"),\r\n\t\t\t\t\tp(\"You can combine this with envelopes to bend pitch over time, or play multiple simultaneous instruments with different pitch shifts for interesting layered sounds.\"),\r\n\t\t\t\t\tp(\"The intervals created by this setting are in \\\"just intonation\\\" which means they stay in phase with the original pitch instead of shifting in and out of phase over time. If you want the shifting, add the detune effect!\"),\r\n\t\t\t\t);\r\n\t\t\t} break;\r\n\t\t\tcase \"detune\": {\r\n\t\t\t\tmessage = div(\r\n\t\t\t\t\th2(\"Detune\"),\r\n\t\t\t\t\tp(\"This setting slightly adjusts the frequency of notes played by the instrument. You can use a little bit to add a pleasing shifting sound similar to the \\\"unison\\\" feature when combined with other instruments. If you use too much, then the instrument may sound unpleasantly out-of-tune.\"),\r\n\t\t\t\t);\r\n\t\t\t} break;\r\n\t\t\tcase \"distortion\": {\r\n\t\t\t\tmessage = div(\r\n\t\t\t\t\th2(\"Distortion\"),\r\n\t\t\t\t\tp(\"This is the famous electric guitar effect! However, there are some things to be aware of.\"),\r\n\t\t\t\t\tp(\"First, most chords don't sound right when combined with heavy distortion. The only chords commonly used with distorted electric guitars are \\\"power chords\\\" which consist of a root note, a \\\"fifth\\\" note above that, and/or any octaves of those two notes.\"),\r\n\t\t\t\t\tp(\"Second, the distortion sound depends a lot on filtering. In particular, I recommend enabling the note filter effect, and adding both high-pass and low-pass points to the note filter. (Note filters are applied first, then distortion which transforms the sound based on that filtering, then the EQ filter is applied last.)\"),\r\n\t\t\t\t\tp(\"Finally, I recommend adjusting the fade-out setting to allow the end of each note to overlap a little bit with the beginning of the next, but not too much!\"),\r\n\t\t\t\t);\r\n\t\t\t} break;\r\n\t\t\tcase \"bitcrusherQuantization\": {\r\n\t\t\t\tmessage = div(\r\n\t\t\t\t\th2(\"Bitcrusher Quantization\"),\r\n\t\t\t\t\tp(\"This effect makes stuff sounds harsher, artificial, and \\\"low quality\\\", which is great if that's what you're going for!\"),\r\n\t\t\t\t);\r\n\t\t\t} break;\r\n\t\t\tcase \"bitcrusherFreq\": {\r\n\t\t\t\tmessage = div(\r\n\t\t\t\t\th2(\"Frequency Quantization\"),\r\n\t\t\t\t\tp(\"The bitcrusher effect comes with an additional frequency quantization effect! This is a fun one to play with, especially when combined with the note filter effect.\"),\r\n\t\t\t\t\tp(\"Every other notch on this slider is aligned with the currently selected key of the song, and the in-between notches are aligned with the tritones of the key.\"),\r\n\t\t\t\t);\r\n\t\t\t} break;\r\n\t\t\tcase \"stringSustain\": {\r\n\t\t\t\tmessage = div(\r\n\t\t\t\t\th2(\"String sustain\"),\r\n\t\t\t\t\tp(\"This setting controls how quickly the picked string vibration decays.\"),\r\n\t\t\t\t\tp(\"Unlike most of BeepBox's instrument synthesizer features, a picked string cannot change frequency suddenly while maintaining its decay. If a tone's pitch changes suddenly (e.g. if the chord type is set to \\\"arpeggio\\\" or the transition type is set to \\\"continues\\\") then the string will be re-picked and start decaying from the beginning again, even if the envelopes don't otherwise restart.\"),\r\n\t\t\t\t);\r\n\t\t\t} break;\r\n\t\t\tcase \"envelopes\": {\r\n\t\t\t\tmessage = div(\r\n\t\t\t\t\th2(\"Envelopes\"),\r\n\t\t\t\t\tp(\"Envelopes are a way to dynamically adjust various other settings over time, usually based on how long the note lasts. Press the + button to add an envelope, then use the menus below to select which setting to control and the curve of the envelope. Try different combinations to see how they sound!\"),\r\n\t\t\t\t\tp(\"Most envelope curves restart from the beginning every time a new note plays. The \\\"note size\\\" option is based on the note width as drawn in the pattern editor.\"),\r\n\t\t\t\t\tp(\"Envelope curves move in the range from 0 to 1 (or vice versa), where 0 means as quiet as possible and 1 is the same as the corresponding position selected in the instrument settings above. If multiple envelopes are targetting the same setting, they are multiplied before applying to the setting.\"),\r\n\t\t\t\t);\r\n\t\t\t} break;\r\n\t\t\tcase \"usedInstrument\": {\r\n\t\t\t\tmessage = div(\r\n\t\t\t\t\th3(\"'Is this instrument used somewhere else?'\"),\r\n\t\t\t\t\tp(\"This indicator will light up when the instrument you're currently looking at is used in another place in your song (outside the selection).\"),\r\n\t\t\t\t\tp(\"This can be useful when you're not sure if you've used the instrument before and making edits carelessly could change other parts of the song.\"),\r\n\t\t\t\t);\r\n\t\t\t} break;\r\n\t\t\tcase \"usedPattern\": {\r\n\t\t\t\tmessage = div(\r\n\t\t\t\t\th3(\"'Is this pattern used somewhere else?'\"),\r\n\t\t\t\t\tp(\"This indicator will light up when the pattern you're currently looking at is used in another place in your song (outside the selection).\"),\r\n\t\t\t\t\tp(\"This can be useful when you're not sure if you've used the pattern before and making edits carelessly could change other parts of the song.\"),\r\n\t\t\t\t);\r\n\t\t\t} break;\r\n\t\t\tcase \"modChannel\": {\r\n\t\t\t\tmessage = div(\r\n\t\t\t\t\th2(\"Modulator Channel\"),\r\n\t\t\t\t\tp(\"Modulators can be used to change settings in your song automatically over time. This technique is also known as automation.\"),\r\n\t\t\t\t\tp(\"This setting controls which channel the modulators will take effect for. If you choose 'Song', you can change song-wide settings too!\"),\r\n\t\t\t\t);\r\n\t\t\t} break;\r\n\t\t\tcase \"modInstrument\": {\r\n\t\t\t\tmessage = div(\r\n\t\t\t\t\th2(\"Modulator Instrument\"),\r\n\t\t\t\t\tp(\"Modulators can be used to change settings in your song automatically over time. This technique is also known as automation.\"),\r\n\t\t\t\t\tp(\"This setting controls which instrument your modulator will apply to within the given channel you've chosen.\"),\r\n\t\t\t\t\tp(\"If you choose 'all', every instrument in the channel will be affected. If you choose 'active', just the current ones used in this pattern will be instead.\"),\r\n\t\t\t\t\tp(\"Note that with 'all' or 'active', effects will only be applied to instruments that the effect is applicable on. For example if an instrument does not have panning effects, modulating panning will not affect it.\")\r\n\t\t\t\t);\r\n\t\t\t} break;\r\n\t\t\tcase \"modSet\": {\r\n\t\t\t\tmessage = div(\r\n\t\t\t\t\th2(\"Modulator Setting\"),\r\n\t\t\t\t\tp(\"This is the parameter that you want to change with this modulator. For example, if you set this to 'Tempo', you can speed up or slow down your song by laying notes in the pattern editor.\"),\r\n\t\t\t\t\tp(\"Note that you'll see different options if your channel is set to 'Song' versus a channel number. With 'Song', you'll see song-wide settings such as tempo. With a channel, you'll see specific instrument settings. Adding more effects to the instrument causes modulators for them to be available, so be sure to experiment!\"),\r\n\t\t\t\t\tp(\"Most modulators behave as you'd expect and work just as if you were moving their associated slider. Click the '?' when you have a setting selected to get more info about it!\"),\r\n\t\t\t\t);\r\n\t\t\t} break;\r\n\t\t\tcase \"modFilter\": {\r\n\t\t\t\tmessage = div(\r\n\t\t\t\t\th2(\"Filter Target\"),\r\n\t\t\t\t\tp(\"This setting specifies which parameter of your targeted filter you would like to change.\"),\r\n\t\t\t\t\tp(\"With the 'morph' setting, the note value for your modulator represents the number of a subfilter to 'morph' into over time. For example, dragging a note from 0 to 7 will morph from your main filter to the 7th subfilter. To change how your subfilters are set up, click the '+' button on the target filter.\"),\r\n\t\t\t\t\tp(\"With a Dot setting, you can fine-tune the exact location of every dot on your filter graph. Note that this is extremely intensive if you want to modulate all dots - a morph is better in that case - but this can come in handy for small adjustments.\"),\r\n\t\t\t\t);\r\n\t\t\t} break;\r\n\t\t\tcase \"transitionBar\": {\r\n\t\t\t\tmessage = div(\r\n\t\t\t\t\th2(\"Tie Notes Over Bars\"),\r\n\t\t\t\t\tp(\"With this option ticked, notes won't transition across bars if you put notes with the same pitches at the start of the next bar. Instead they will 'tie over' and sound like one long note.\"),\r\n\t\t\t\t);\r\n\t\t\t} break;\r\n\t\t\tcase \"clicklessTransition\": {\r\n\t\t\t\tmessage = div(\r\n\t\t\t\t\th2(\"Clickless Transition\"),\r\n\t\t\t\t\tp(\"Sometimes, seamless and other transition types can make audible 'clicks' when changing between notes. Ticking this option will cause those clicks to be silenced as much as possible.\"),\r\n\t\t\t\t);\r\n            } break;\r\n\t\t\tcase \"aliases\": {\r\n\t\t\t\tmessage = div(\r\n\t\t\t\t\th2(\"Aliasing\"),\r\n\t\t\t\t\tp(\"JummBox applies a technique called 'anti-aliasing' to instruments normally to help them sound cleaner even at high frequencies and low sample rates.\"),\r\n\t\t\t\t\tp(\"When this setting is ticked that technique is disabled, so you may hear strange audio artifacts especially at high pitches and when bending notes. However, this can lend a grungy sound to an instrument that could be desirable.\"),\r\n\t\t\t\t);\r\n\t\t\t} break;\r\n            case \"operatorWaveform\": {\r\n                message = div(\r\n                    h2(\"Operator Waveform\"),\r\n                    p('This setting controls the what kind of sound wave an individual FM wave uses.'),\r\n                    p('By defualt the FM synth uses sinewaves.'),\r\n                );\r\n            } break;\r\n\t\t\tcase \"filterType\": {\r\n\t\t\t\tmessage = div(\r\n\t\t\t\t\th2(\"Filter Type\"),\r\n\t\t\t\t\tp('Toggling these buttons lets you choose between a simple filter interface with two sliders, or the more advanced filter graph.'),\r\n\t\t\t\t\tp('The two-slider version controls a single low-pass filter and was used in legacy versions. It is not as powerful, but if you feel overwhelmed you can start with this.'),\r\n\t\t\t\t\tp('Note that switching from the simple interface to the advanced interface will convert your current settings, so you can also use it as a basis for later tweaking.'),\r\n\t\t\t\t);\r\n\t\t\t} break;\r\n\t\t\tcase \"filterCutoff\": {\r\n\t\t\t\tmessage = div(\r\n\t\t\t\t\th2(\"Low-Pass Filter Cutoff Frequency\"),\r\n\t\t\t\t\tp(\"The lowest setting feels \\\"muffled\\\" or \\\"dark\\\", and the highest setting feels \\\"harsh\\\" or \\\"bright\\\".\"),\r\n\t\t\t\t\tp(\"Most sounds include a range of frequencies from low to high. JummBox instruments have a filter that allows the lowest frequencies to pass through at full volume, but can reduce the volume of the higher frequencies that are above a cutoff frequency. This setting controls the cutoff frequency and thus the range of higher frequencies that are reduced.\"),\r\n\t\t\t\t\tp(\"This cutoff setting also determines which frequency resonates when the resonance peak setting is used.\"),\r\n\t\t\t\t);\r\n\t\t\t} break;\r\n\t\t\tcase \"filterResonance\": {\r\n\t\t\t\tmessage = div(\r\n\t\t\t\t\th2(\"Low-Pass Filter Resonance Peak\"),\r\n\t\t\t\t\tp(\"Increasing this setting emphasizes a narrow range of frequencies, based on the position of the filter cutoff setting. This can be used to imitate the resonant bodies of acoustic instruments and other interesting effects.\"),\r\n\t\t\t\t\tp(\"The filter preserves the volume of frequencies that are below the cutoff frequency, and reduces the volume of frequencies that are above the cutoff. If this setting is used, the filter also increases the volume of frequencies that are near the cutoff.\"),\r\n\t\t\t\t);\r\n\t\t\t} break;\r\n\t\t\t\t\t\t\t\t\t case \"loopControls\":\r\n                    {\r\n                        message = div(h2(\"Loop Controls\"), p(\"This enables the use of parameters that control how a chip wave should repeat.\"));\r\n                    }\r\n                    break;\r\n\t\t\t\t\t case \"loopMode\":\r\n                    {\r\n                        message = div(h2(\"Loop Mode\"), p(\"This sets the way the chip wave loops when its ends are reached.\"), p(\"The \\\"Loop\\\" mode is the default: when the end of the loop is reached, it will jump back to the starting point of the loop.\"), p(\"The \\\"Ping-Pong\\\" mode starts playing the chip wave backwards when the end of the loop is reached. Once it reaches the start of the loop, it will start playing forwards again, endlessly going back and forth.\"), p(\"The \\\"Play Once\\\" mode stops the chip wave once the end is reached (or the start of the loop, if it's playing backwards).\"), p(\"The \\\"Play Loop Once\\\" mode stops the chip wave once the end of the loop is reached (or the start of the loop, if it's playing backwards).\"));\r\n                    }\r\n                    break;\r\n\t\t\t\t\t case \"loopStart\":\r\n                     {\r\n                        message = div(h2(\"Loop Start Point\"), p(\"This specifies where the loop region of the chip wave starts. It's measured in \\\"samples\\\", or rather, it refers to a point on a waveform.\"), p(\"Be careful with tiny loop sizes (especially combined with high pitches), they may re-introduce aliasing even if the \\\"Aliasing\\\" checkbox is unchecked.\"));\r\n                     }\r\n                     break;\r\n \t\t\t\t\t case \"loopEnd\":\r\n                     {\r\n                       message = div(h2(\"Loop End Point\"), p(\"This specifies where the loop region of the chip wave ends. It's measured in \\\"samples\\\", or rather, it refers to a point on a waveform.\"), p(\"The button next to the input box sets this to end of the chip wave.\"), p(\"Be careful with tiny loop sizes (especially combined with high pitches), they may re-introduce aliasing even if the \\\"Aliasing\\\" checkbox is unchecked.\"));\r\n                     }\r\n                    break;\r\n\t\t\t\t\t case \"offset\":\r\n                    {\r\n                        message = div(h2(\"Offset\"), p(\"This specifies where the chip wave should start playing from. You can use this to chop up a large sample, to say, turn a drum loop into a drum kit! It's measured in \\\"samples\\\", or rather, it refers to a point on a waveform.\"));\r\n                    }\r\n                    break;\r\n\t\t\t\t\t case \"backwards\":\r\n                    {\r\n                        message = div(h2(\"Backwards\"), p(\"When set, the chip wave will start playing backwards. After checking this, you may want to adjust the offset to start from a different point that makes sense for this mode.\"));\r\n                    }\r\n                    break;\r\n\r\n\t\t\tdefault:\r\n\t\t\t\t// Check for modSetinfo#\r\n\t\t\t\tif (type.indexOf(\"modSetInfo\") >= 0) {\r\n\t\t\t\t\tlet modNum: number = +type[type.length - 1];\r\n\t\t\t\t\tlet modulator: number = _doc.song.channels[_doc.channel].instruments[_doc.getCurrentInstrument()].modulators[modNum];\r\n\t\t\t\t\tlet pList: HTMLParagraphElement[] = [];\r\n\t\t\t\t\tfor (let s: number = 0; s < Config.modulators[modulator].promptDesc.length; s++) {\r\n\t\t\t\t\t\tpList.push(p(\r\n\t\t\t\t\t\t\tConfig.modulators[modulator].promptDesc[s]\r\n\t\t\t\t\t\t\t\t.replace(\"$LO\", \"\" + Config.modulators[modulator].convertRealFactor)\r\n\t\t\t\t\t\t\t\t.replace(\"$MID\", \"\" + (Config.modulators[modulator].convertRealFactor + Config.modulators[modulator].maxRawVol / 2))\r\n\t\t\t\t\t\t\t\t.replace(\"$HI\", \"\" + (Config.modulators[modulator].convertRealFactor + Config.modulators[modulator].maxRawVol))\r\n\r\n\t\t\t\t\t\t));\r\n\t\t\t\t\t}\r\n\t\t\t\t\t// Last element for mod settings is just some miscellaneous data for nerds like me.\r\n\t\t\t\t\tpList[pList.length-1].style.setProperty(\"color\", \"var(--secondary-text)\");\r\n\t\t\t\t\tmessage = div(\r\n\t\t\t\t\t\th2(Config.modulators[modulator].promptName),\r\n\t\t\t\t\t\tpList,\r\n\t\t\t\t\t);\r\n\t\t\t\t\tbreak;\r\n\t\t\t\t}\r\n\t\t\t\telse {\r\n\t\t\t\t\tthrow new Error(\"Unhandled TipPrompt type: \" + type);\r\n\t\t\t\t}\r\n\t\t}\r\n\t\t\r\n\t\tthis.container = div({class: \"prompt\", style: \"width: 300px;\"},\r\n\t\t\tmessage,\r\n\t\t\tthis._closeButton,\r\n\t\t);\r\n\t\t\t\r\n\t\t\tsetTimeout(()=>this._closeButton.focus());\r\n\t\t\t\r\n\t\tthis._closeButton.addEventListener(\"click\", this._close);\r\n\t}\r\n\t\t\r\n\t\tprivate _close = (): void => { \r\n\t\tthis._doc.undo();\r\n\t}\r\n\t\t\r\n\t\tpublic cleanUp = (): void => { \r\n\t\tthis._closeButton.removeEventListener(\"click\", this._close);\r\n\t}\r\n}\r\n","// Copyright (c) 2012-2022 John Nesky and contributing authors, distributed under the MIT license, see accompanying the LICENSE.md file.\r\n\r\nimport { Pattern } from \"../synth/synth\";\r\nimport { ColorConfig, ChannelColors } from \"./ColorConfig\";\r\nimport { Config } from \"../synth/SynthConfig\";\r\nimport { isMobile } from \"./EditorConfig\";\r\nimport { SongDocument } from \"./SongDocument\";\r\nimport { SongEditor } from \"./SongEditor\";\r\nimport { HTML, SVG } from \"imperative-html/dist/esm/elements-strict\";\r\n\r\n\r\nclass Box {\r\n\tprivate readonly _text: Text = document.createTextNode(\"1\");\r\n\t\tprivate readonly _label: SVGTextElement = SVG.text({\"font-family\": \"sans-serif\", \"font-size\": 20, \"text-anchor\": \"middle\", \"font-weight\": \"bold\", fill: \"red\"}, this._text);\r\n\t\tprivate readonly _rect: SVGRectElement = SVG.rect({x: 1, y: 1});\r\n\tpublic readonly container: SVGSVGElement = SVG.svg(this._rect, this._label);\r\n\tprivate _renderedIndex: number = 1;\r\n\tprivate _renderedDim: boolean = true;\r\n\tprivate _renderedSelected: boolean = false;\r\n\tprivate _renderedColor: string = \"\";\r\n\r\n\tconstructor(channel: number, private readonly _x: number, private readonly _y: number, color: string) {\r\n\t\tthis._rect.setAttribute(\"fill\", ColorConfig.uiWidgetBackground);\r\n\t\tthis._label.setAttribute(\"fill\", color);\r\n\t}\r\n\t\t\r\n\tpublic setSize(width: number, height: number): void {\r\n\t\tthis.container.setAttribute(\"x\", \"\" + (this._x * width));\r\n\t\tthis.container.setAttribute(\"y\", \"\" + (Config.barEditorHeight + this._y * height));\r\n\t\tthis._rect.setAttribute(\"width\", \"\" + (width - 2));\r\n\t\tthis._rect.setAttribute(\"height\", \"\" + (height - 2));\r\n\t\tthis._label.setAttribute(\"x\", \"\" + (width / 2));\r\n\t\tthis._label.setAttribute(\"y\", \"\" + Math.round(height / 2 + 7));\r\n\t}\r\n\t\t\r\n\tpublic setIndex(index: number, dim: boolean, selected: boolean, color: string, isNoise: boolean, isMod: boolean): void {\r\n\t\tif (this._renderedIndex != index) {\r\n\t\t\tif (!this._renderedSelected && ((index == 0) != (this._renderedIndex == 0))) {\r\n\t\t\t\tif (index == 0) {\r\n\t\t\t\t\tthis._rect.setAttribute(\"fill\", \"none\");\r\n\t\t\t\t}\r\n\t\t\t\telse {\r\n\t\t\t\t\tif (isNoise)\r\n\t\t\t\t\t\tthis._rect.setAttribute(\"fill\", dim ? ColorConfig.trackEditorBgNoiseDim : ColorConfig.trackEditorBgNoise);\r\n\t\t\t\t\telse if (isMod)\r\n\t\t\t\t\t\tthis._rect.setAttribute(\"fill\", dim ? ColorConfig.trackEditorBgModDim : ColorConfig.trackEditorBgMod);\r\n\t\t\t\t\telse\r\n\t\t\t\t\t\tthis._rect.setAttribute(\"fill\", dim ? ColorConfig.trackEditorBgPitchDim : ColorConfig.trackEditorBgPitch);\r\n\r\n\t\t\t}\r\n\t\t\t}\r\n\t\t\t\r\n\t\t\tif (index >= 100) {\r\n\t\t\t\tthis._label.setAttribute(\"font-size\", \"16\");\r\n\t\t\t\tthis._label.setAttribute(\"style\", \"transform: translate(0px, -1.5px);\");\r\n\t\t\t}\r\n\t\t\telse {\r\n\t\t\t\tthis._label.setAttribute(\"font-size\", \"20\");\r\n\t\t\t\tthis._label.setAttribute(\"style\", \"transform: translate(0px, 0px);\");\r\n\t\t\t}\r\n\r\n\t\t\tthis._renderedIndex = index;\r\n\t\t\t\tthis._text.data = \"\"+index;\r\n\t\t}\r\n\t\t\t\r\n\t\tif (this._renderedDim != dim || this._renderedColor != color) {\r\n\t\t\tthis._renderedDim = dim;\r\n\t\t\tif (selected) {\r\n\t\t\t\tthis._label.setAttribute(\"fill\", ColorConfig.invertedText);\r\n\t\t\t} else {\r\n\t\t\t\tthis._label.setAttribute(\"fill\", color);\r\n\r\n\t\t\t\tif (this._renderedIndex == 0) {\r\n\t\t\t\t\tthis._rect.setAttribute(\"fill\", ColorConfig.editorBackground);\r\n\t\t\t}\r\n\t\t\t\telse {\r\n\t\t\t\t\tif (isNoise)\r\n\t\t\t\t\t\tthis._rect.setAttribute(\"fill\", dim ? ColorConfig.trackEditorBgNoiseDim : ColorConfig.trackEditorBgNoise);\r\n\t\t\t\t\telse if (isMod)\r\n\t\t\t\t\t\tthis._rect.setAttribute(\"fill\", dim ? ColorConfig.trackEditorBgModDim : ColorConfig.trackEditorBgMod);\r\n\t\t\t\t\telse\r\n\t\t\t\t\t\tthis._rect.setAttribute(\"fill\", dim ? ColorConfig.trackEditorBgPitchDim : ColorConfig.trackEditorBgPitch);\r\n\t\t\t\t}\r\n\t\t}\r\n\t\t}\r\n\t\t\t\r\n\t\tif (this._renderedSelected != selected || this._renderedColor != color) {\r\n\t\t\tthis._renderedSelected = selected;\r\n\t\t\tif (selected) {\r\n\t\t\t\tthis._rect.setAttribute(\"fill\", color);\r\n\t\t\t\tthis._label.setAttribute(\"fill\", ColorConfig.invertedText);\r\n\t\t\t} else {\r\n\t\t\t\tthis._label.setAttribute(\"fill\", color);\r\n\r\n\t\t\t\tif (this._renderedIndex == 0) {\r\n\t\t\t\t\tthis._rect.setAttribute(\"fill\", ColorConfig.editorBackground);\r\n\t\t\t}\r\n\t\t\t\telse {\r\n\t\t\t\t\tif (isNoise)\r\n\t\t\t\t\t\tthis._rect.setAttribute(\"fill\", dim ? ColorConfig.trackEditorBgNoiseDim : ColorConfig.trackEditorBgNoise);\r\n\t\t\t\t\telse if (isMod)\r\n\t\t\t\t\t\tthis._rect.setAttribute(\"fill\", dim ? ColorConfig.trackEditorBgModDim : ColorConfig.trackEditorBgMod);\r\n\t\t\t\t\telse\r\n\t\t\t\t\t\tthis._rect.setAttribute(\"fill\", dim ? ColorConfig.trackEditorBgPitchDim : ColorConfig.trackEditorBgPitch);\r\n\t\t\t\t}\r\n\t\t}\r\n\t\t}\r\n\t\t\t\r\n\t\tthis._renderedColor = color;\r\n\t}\r\n}\r\n\r\nexport class TrackEditor {\r\n\tpublic readonly _barDropDown: HTMLSelectElement = HTML.select({ style: \"width: 32px; height: \" + Config.barEditorHeight + \"px; top: 0px; position: absolute; opacity: 0\" },\r\n\r\n\t\tHTML.option({ value: \"barBefore\" }, \"Insert Bar Before\"),\r\n\t\tHTML.option({ value: \"barAfter\" }, \"Insert Bar After\"),\r\n\t\tHTML.option({ value: \"deleteBar\" }, \"Delete This Bar\"),\r\n\t);\r\n\tprivate readonly _boxContainer: SVGGElement = SVG.g();\r\n\tprivate readonly _barNumberContainer: SVGGElement = SVG.g();\r\n\t\tprivate readonly _playhead: SVGRectElement = SVG.rect({fill: ColorConfig.playhead, x: 0, y: 0, width: 4, height: 128});\r\n\t\tprivate readonly _boxHighlight: SVGRectElement = SVG.rect({fill: \"none\", stroke: ColorConfig.hoverPreview, \"stroke-width\": 2, \"pointer-events\": \"none\", x: 1, y: 1, width: 30, height: 30});\r\n\t\tprivate readonly _upHighlight: SVGPathElement = SVG.path({fill: ColorConfig.invertedText, stroke: ColorConfig.invertedText, \"stroke-width\": 1, \"pointer-events\": \"none\"});\r\n\t\tprivate readonly _downHighlight: SVGPathElement = SVG.path({fill: ColorConfig.invertedText, stroke: ColorConfig.invertedText, \"stroke-width\": 1, \"pointer-events\": \"none\"});\r\n\tprivate readonly _barEditorPath: SVGPathElement = SVG.path({ fill: ColorConfig.uiWidgetBackground, stroke: ColorConfig.uiWidgetBackground, \"stroke-width\": 1, \"pointer-events\": \"none\" });\r\n\tprivate readonly _selectionRect: SVGRectElement = SVG.rect({ class: \"dashed-line dash-move\", fill: ColorConfig.boxSelectionFill, stroke: ColorConfig.hoverPreview, \"stroke-width\": 2, \"stroke-dasharray\": \"5, 3\", \"fill-opacity\": \"0.4\", \"pointer-events\": \"none\", visibility: \"hidden\", x: 1, y: 1, width: 62, height: 62 });\r\n\t\tprivate readonly _svg: SVGSVGElement = SVG.svg({style: `background-color: ${ColorConfig.editorBackground}; position: absolute;`, height: 128},\r\n\t\tthis._boxContainer,\r\n\t\tthis._barEditorPath,\r\n\t\tthis._selectionRect,\r\n\t\tthis._barNumberContainer,\r\n\t\tthis._boxHighlight,\r\n\t\tthis._upHighlight,\r\n\t\tthis._downHighlight,\r\n\t\tthis._playhead,\r\n\t);\r\n\t\tprivate readonly _select: HTMLSelectElement = HTML.select({class: \"trackSelectBox\", style: \"background: none; border: none; appearance: none; border-radius: initial; box-shadow: none; color: transparent; position: absolute; touch-action: none;\"});\r\n\tpublic readonly container: HTMLElement = HTML.div({ class: \"noSelection\", style: \"height: 128px; position: relative; overflow:hidden;\" }, this._svg, this._select, this._barDropDown);\r\n\t\t\r\n\tprivate readonly _grid: Box[][] = [];\r\n\tprivate readonly _barNumbers: SVGTextElement[] = [];\r\n\tprivate _mouseX: number = 0;\r\n\tprivate _mouseY: number = 0;\r\n\t//private _lastScrollTime: number = 0;\r\n\t//private _selecting: boolean = false;\r\n\t//private _selectionStartBar: number = 0;\r\n\t//private _selectionStartChannel: number = 0;\r\n\t//private _pattern: Pattern | null = null;\r\n\tprivate _mouseStartBar: number = 0;\r\n\tprivate _mouseStartChannel: number = 0;\r\n\tprivate _mouseBar: number = 0;\r\n\tprivate _mouseChannel: number = 0;\r\n\tprivate _mouseOver: boolean = false;\r\n\tprivate _mousePressed: boolean = false;\r\n\tprivate _mouseDragging = false;\r\n\tprivate _barWidth: number = 32;\r\n\tprivate _channelHeight: number = 32;\r\n\tprivate _renderedChannelCount: number = 0;\r\n\tprivate _renderedBarCount: number = 0;\r\n\tprivate _renderedPatternCount: number = 0;\r\n\tprivate _renderedPlayhead: number = -1;\r\n\tprivate _renderedBarWidth: number = -1;\r\n\tprivate _renderedChannelHeight: number = -1;\r\n\tprivate _touchMode: boolean = isMobile;\r\n\tprivate _barDropDownBar: number = 0;\r\n\tprivate _lastScrollTime: number = 0;\r\n\t\t\r\n\tconstructor(private _doc: SongDocument, private _songEditor: SongEditor) {\r\n\t\twindow.requestAnimationFrame(this._animatePlayhead);\r\n\t\tthis._svg.addEventListener(\"mousedown\", this._whenMousePressed);\r\n\t\tdocument.addEventListener(\"mousemove\", this._whenMouseMoved);\r\n\t\tdocument.addEventListener(\"mouseup\", this._whenMouseReleased);\r\n\t\tthis._svg.addEventListener(\"mouseover\", this._whenMouseOver);\r\n\t\tthis._svg.addEventListener(\"mouseout\", this._whenMouseOut);\r\n\t\t\t\r\n\t\tthis._select.addEventListener(\"change\", this._whenSelectChanged);\r\n\t\tthis._select.addEventListener(\"touchstart\", this._whenSelectPressed);\r\n\t\tthis._select.addEventListener(\"touchmove\", this._whenSelectMoved);\r\n\t\tthis._select.addEventListener(\"touchend\", this._whenSelectReleased);\r\n\t\tthis._select.addEventListener(\"touchcancel\", this._whenSelectReleased);\r\n\t\t\t\r\n\t\tlet determinedCursorType: boolean = false;\r\n\t\tdocument.addEventListener(\"mousedown\", () => {\r\n\t\t\tif (!determinedCursorType) {\r\n\t\t\t\tthis._touchMode = false;\r\n\t\t\t\tthis._updatePreview();\r\n\t\t\t}\r\n\t\t\tdeterminedCursorType = true;\r\n\t\t}, true);\r\n\t\tdocument.addEventListener(\"touchstart\", () => {\r\n\t\t\tif (!determinedCursorType) {\r\n\t\t\t\tthis._touchMode = true;\r\n\t\t\t\tthis._updatePreview();\r\n\t\t\t}\r\n\t\t\tdeterminedCursorType = true;\r\n\t\t}, true);\r\n\r\n\t\tthis._barDropDown.selectedIndex = -1;\r\n\t\tthis._barDropDown.addEventListener(\"change\", this._barDropDownHandler);\r\n\t\tthis._barDropDown.addEventListener(\"mousedown\", this._barDropDownGetOpenedPosition);\r\n\r\n\t}\r\n\r\n\tprivate _barDropDownGetOpenedPosition = (event: MouseEvent): void => {\r\n\t\tthis._barDropDownBar = Math.floor(Math.min(this._doc.song.barCount - 1, Math.max(0, this._mouseX / this._barWidth)));\r\n\t}\r\n\r\n\tprivate _barDropDownHandler = (event: Event): void => {\r\n\r\n\t\tvar moveBarOffset = (this._barDropDown.value == \"barBefore\") ? 0 : 1;\r\n\r\n\t\tif (this._barDropDown.value == \"barBefore\" || this._barDropDown.value == \"barAfter\") {\r\n\r\n\t\t\t//var prevBar = this._doc.bar;\r\n\r\n\t\t\tthis._doc.bar = this._barDropDownBar - 1 + moveBarOffset;\r\n\r\n\t\t\tthis._doc.selection.resetBoxSelection();\r\n\t\t\tthis._doc.selection.insertBars();\r\n\r\n\t\t\t// This moves doc.bar back. I kind of like moving it to the inserted zone, though.\r\n\t\t\t// this._doc.bar = prevBar + ((prevBar < this._barDropDownBar + moveBarOffset) ? 0 : 1);\r\n\r\n\t\t\t// Adjust song playhead\r\n\t\t\tif (this._doc.synth.playhead >= this._barDropDownBar + moveBarOffset) {\r\n\t\t\t\tthis._doc.synth.playhead++;\r\n\t\t\t\tthis._songEditor._barScrollBar.animatePlayhead();\r\n\t\t\t}\r\n\r\n\t}\r\n\t\telse if (this._barDropDown.value == \"deleteBar\") {\r\n\t\t\r\n\t\t\t//var prevBar = this._doc.bar;\r\n\r\n\t\t\tthis._doc.bar = this._barDropDownBar;\r\n\r\n\t\t\tthis._doc.selection.resetBoxSelection();\r\n\t\t\tthis._doc.selection.deleteBars();\r\n\r\n\t\t\t// This moves doc.bar back. I kind of like moving it to the deleted zone, though.\r\n\t\t\t// this._doc.bar = prevBar - ((prevBar <= this._barDropDownBar) ? 0 : 1);\r\n\r\n\t\t\t// Adjust song playhead\r\n\t\t\tif (this._doc.synth.playhead > this._barDropDownBar) {\r\n\t\t\t\tthis._doc.synth.playhead--;\r\n\t\t\t\tthis._songEditor._barScrollBar.animatePlayhead();\r\n\t\t\t}\r\n\r\n\t\t}\r\n\r\n\t\tthis._barDropDown.selectedIndex = -1;\r\n\t}\r\n\r\n\tprivate _whenSelectChanged = (): void => {\r\n\t\tthis._doc.selection.setPattern(this._select.selectedIndex);\r\n\t}\r\n\t\t\r\n\tprivate _animatePlayhead = (timestamp: number): void => {\r\n\t\tconst playhead = (this._barWidth * this._doc.synth.playhead - 2);\r\n\t\tif (this._renderedPlayhead != playhead) {\r\n\t\t\tthis._renderedPlayhead = playhead;\r\n\t\t\tthis._playhead.setAttribute(\"x\", \"\" + playhead);\r\n\t\t}\r\n\t\twindow.requestAnimationFrame(this._animatePlayhead);\r\n\t}\r\n\t\r\n\tpublic movePlayheadToMouse(): boolean {\r\n\t\tif (this._mouseOver) {\r\n\t\t\tthis._doc.synth.playhead = this._mouseBar + (this._mouseX % this._barWidth) / this._barWidth;\r\n\t\t\treturn true;\r\n\t\t}\r\n\t\treturn false;\r\n\t}\r\n\t\r\n\tprivate _dragBoxSelection(): void {\r\n\t\tthis._doc.selection.setTrackSelection(this._doc.selection.boxSelectionX0, this._mouseBar, this._doc.selection.boxSelectionY0, this._mouseChannel);\r\n\t\tthis._doc.selection.selectionUpdated();\r\n\t}\r\n\t\t\r\n\tprivate _updateSelectPos(event: TouchEvent): void {\r\n\t\tconst boundingRect: ClientRect = this._svg.getBoundingClientRect();\r\n\t\tthis._mouseX = event.touches[0].clientX - boundingRect.left;\r\n\t\tthis._mouseY = event.touches[0].clientY - boundingRect.top;\r\n\t\tif (isNaN(this._mouseX)) this._mouseX = 0;\r\n\t\tif (isNaN(this._mouseY)) this._mouseY = 0;\r\n\t\tthis._mouseBar = Math.floor(Math.min(this._doc.song.barCount - 1, Math.max(0, this._mouseX / this._barWidth)));\r\n\t\tthis._mouseChannel = Math.floor(Math.min(this._doc.song.getChannelCount() - 1, Math.max(0, (this._mouseY - Config.barEditorHeight) / this._channelHeight)));\r\n\t}\r\n\t\t\r\n\tprivate _whenSelectPressed = (event: TouchEvent): void => {\r\n\t\tthis._mousePressed = true;\r\n\t\tthis._mouseDragging = true;\r\n\t\tthis._updateSelectPos(event);\r\n\t\tthis._mouseStartBar = this._mouseBar;\r\n\t\tthis._mouseStartChannel = this._mouseChannel;\r\n\t}\r\n\t\t\r\n\tprivate _whenSelectMoved = (event: TouchEvent): void => {\r\n\t\tthis._updateSelectPos(event);\r\n\t\tif (this._mouseStartBar != this._mouseBar || this._mouseStartChannel != this._mouseChannel) {\r\n\t\t\t// if the touch has started dragging, cancel opening the select menu.\r\n\t\t\tevent.preventDefault();\r\n\t\t}\r\n\t\tif (this._mousePressed) this._dragBoxSelection();\r\n\t\tthis._updatePreview();\r\n\t}\r\n\t\t\r\n\tprivate _whenSelectReleased = (event: TouchEvent): void => {\r\n\t\tthis._mousePressed = false;\r\n\t\tthis._mouseDragging = false;\r\n\t\tthis._updatePreview();\r\n\t}\r\n\t\t\r\n\tprivate _whenMouseOver = (event: MouseEvent): void => {\r\n\t\tif (this._mouseOver) return;\r\n\t\tthis._mouseOver = true;\r\n\t}\r\n\t\t\r\n\tprivate _whenMouseOut = (event: MouseEvent): void => {\r\n\t\tif (!this._mouseOver) return;\r\n\t\tthis._mouseOver = false;\r\n\t}\r\n\t\t\r\n\tprivate _updateMousePos(event: MouseEvent): void {\r\n\t\tconst boundingRect: ClientRect = this._svg.getBoundingClientRect();\r\n\t\tthis._mouseX = (event.clientX || event.pageX) - boundingRect.left;\r\n\t\tthis._mouseY = (event.clientY || event.pageY) - boundingRect.top;\r\n\t\tthis._mouseBar = Math.floor(Math.min(this._doc.song.barCount - 1, Math.max(0, this._mouseX / this._barWidth)));\r\n\t\tthis._mouseChannel = Math.floor(Math.min(this._doc.song.getChannelCount() - 1, Math.max(0, (this._mouseY - Config.barEditorHeight) / this._channelHeight)));\r\n\t}\r\n\t\t\r\n\tprivate _whenMousePressed = (event: MouseEvent): void => {\r\n\t\tevent.preventDefault();\r\n\t\tthis._mousePressed = true;\r\n\t\tthis._updateMousePos(event);\r\n\t\tthis._mouseStartBar = this._mouseBar;\r\n\t\tthis._mouseStartChannel = this._mouseChannel;\r\n\r\n\t\t// Act on track portion\r\n\t\tif (this._mouseY >= Config.barEditorHeight) {\r\n\r\n\t\tif (event.shiftKey) {\r\n\t\t\tthis._mouseDragging = true;\r\n\t\t\tthis._doc.selection.setTrackSelection(this._doc.selection.boxSelectionX0, this._mouseBar, this._doc.selection.boxSelectionY0, this._mouseChannel);\r\n\t\t\tthis._doc.selection.selectionUpdated();\r\n\t\t} else {\r\n\t\t\tthis._mouseDragging = false;\r\n\t\t\tif (this._doc.channel != this._mouseChannel || this._doc.bar != this._mouseBar) {\r\n\t\t\t\tthis._doc.selection.setChannelBar(this._mouseChannel, this._mouseBar);\r\n\t\t\t\tthis._mouseDragging = true;\r\n\t\t\t}\r\n\t\t\tthis._doc.selection.resetBoxSelection();\r\n\t\t}\r\n\t}\r\n\t}\r\n\t\t\r\n\tprivate _whenMouseMoved = (event: MouseEvent): void => {\r\n\t\tthis._updateMousePos(event);\r\n\t\tif (this._mousePressed) {\r\n\t\t\tif (this._mouseStartBar != this._mouseBar || this._mouseStartChannel != this._mouseChannel) {\r\n\t\t\t\tthis._mouseDragging = true;\r\n\t\t\t}\r\n\t\t\tthis._dragBoxSelection();\r\n\t\t}\r\n\t\tthis._updatePreview();\r\n\t}\r\n\t\t\r\n\tprivate _whenMouseReleased = (event: MouseEvent): void => {\r\n\t\tif (this._mousePressed && !this._mouseDragging) {\r\n\t\t\tif (this._doc.channel == this._mouseChannel && this._doc.bar == this._mouseBar) {\r\n\t\t\t\tconst up: boolean = ((this._mouseY - Config.barEditorHeight) % this._channelHeight) < this._channelHeight / 2;\r\n\t\t\t\tconst patternCount: number = this._doc.song.patternsPerChannel;\r\n\t\t\t\tthis._doc.selection.setPattern((this._doc.song.channels[this._mouseChannel].bars[this._mouseBar] + (up ? 1 : patternCount)) % (patternCount + 1));\r\n\t\t\t}\r\n\t\t}\r\n\t\tthis._mousePressed = false;\r\n\t\tthis._mouseDragging = false;\r\n\t\tthis._updatePreview();\r\n\t}\r\n\t\t\r\n\tprivate _updatePreview(): void {\r\n\t\tlet channel: number = this._mouseChannel;\r\n\t\tlet bar: number = this._mouseBar;\r\n\t\t\t\r\n\t\tif (this._touchMode) {\r\n\t\t\tbar = this._doc.bar;\r\n\t\t\tchannel = this._doc.channel;\r\n\t\t}\r\n\t\t\t\r\n\t\tconst selected: boolean = (bar == this._doc.bar && channel == this._doc.channel);\r\n\t\tconst overTrackEditor: boolean = (this._mouseY >= Config.barEditorHeight);\r\n\t\t\t\r\n\t\tif (this._mouseDragging && this._mouseStartBar != this._mouseBar) {\r\n\r\n\t\t\t// Handle auto-scroll in selection. Only @50ms or slower.\r\n\t\t\tvar timestamp: number = Date.now();\r\n\r\n\t\t\tif (timestamp - this._lastScrollTime >= 50) {\r\n\r\n\t\t\t\tif (bar > this._doc.barScrollPos + this._doc.trackVisibleBars - 1 && this._doc.barScrollPos < this._doc.song.barCount - this._doc.trackVisibleBars) {\r\n\r\n\t\t\t\t\tthis._songEditor.changeBarScrollPos(1);\r\n\t\t\t\t}\r\n\t\t\t\tif (bar < this._doc.barScrollPos && this._doc.barScrollPos > 0) {\r\n\r\n\t\t\t\t\tthis._songEditor.changeBarScrollPos(-1);\r\n\t\t\t\t}\r\n\r\n\t\t\t\tthis._lastScrollTime = timestamp;\r\n\r\n\t\t\t}\r\n\r\n\t\t}\r\n\r\n\t\tif (this._mouseOver && !this._mousePressed && !selected && overTrackEditor) {\r\n\t\t\tthis._boxHighlight.setAttribute(\"x\", \"\" + (1 + this._barWidth * bar));\r\n\t\t\tthis._boxHighlight.setAttribute(\"y\", \"\" + (1 + Config.barEditorHeight + (this._channelHeight * channel)));\r\n\t\t\tthis._boxHighlight.setAttribute(\"height\", \"\" + (this._channelHeight - 2));\r\n\t\t\tthis._boxHighlight.setAttribute(\"width\", \"\" + (this._barWidth - 2));\r\n\t\t\tthis._boxHighlight.style.visibility = \"visible\";\r\n\t\t} else if ((this._mouseOver || ((this._mouseX >= bar * this._barWidth) && (this._mouseX < bar * this._barWidth + this._barWidth) && (this._mouseY > 0))) && (!overTrackEditor)) {\r\n\t\t\tthis._boxHighlight.setAttribute(\"x\", \"\" + (1 + this._barWidth * bar));\r\n\t\t\tthis._boxHighlight.setAttribute(\"y\", \"1\"); // The y is set to 1 instead of 0 due to the thickness of the box causing it to go slightly outside the frame at y=0.\r\n\t\t\tthis._boxHighlight.setAttribute(\"height\", \"\" + (Config.barEditorHeight - 3));\r\n\t\t\tthis._boxHighlight.style.visibility = \"visible\";\r\n\t\t} else {\r\n\t\t\tthis._boxHighlight.style.visibility = \"hidden\";\r\n\t\t}\r\n\t\t\t\r\n\t\tif ((this._mouseOver || this._touchMode) && selected && overTrackEditor) {\r\n\t\t\tconst up: boolean = ((this._mouseY - Config.barEditorHeight) % this._channelHeight) < this._channelHeight / 2;\r\n\t\t\tconst center: number = this._barWidth * (bar + 0.8);\r\n\t\t\tconst middle: number = Config.barEditorHeight + this._channelHeight * (channel + 0.5);\r\n\t\t\tconst base: number = this._channelHeight * 0.1;\r\n\t\t\tconst tip: number = this._channelHeight * 0.4;\r\n\t\t\tconst width: number = this._channelHeight * 0.175;\r\n\t\t\t\t\r\n\t\t\tthis._upHighlight.setAttribute(\"fill\", up && !this._touchMode ? ColorConfig.hoverPreview : ColorConfig.invertedText);\r\n\t\t\tthis._downHighlight.setAttribute(\"fill\", !up && !this._touchMode ? ColorConfig.hoverPreview : ColorConfig.invertedText);\r\n\t\t\t\t\r\n\t\t\tthis._upHighlight.setAttribute(\"d\", `M ${center} ${middle - tip} L ${center + width} ${middle - base} L ${center - width} ${middle - base} z`);\r\n\t\t\tthis._downHighlight.setAttribute(\"d\", `M ${center} ${middle + tip} L ${center + width} ${middle + base} L ${center - width} ${middle + base} z`);\r\n\t\t\t\t\r\n\t\t\tthis._upHighlight.style.visibility = \"visible\";\r\n\t\t\tthis._downHighlight.style.visibility = \"visible\";\r\n\t\t} else {\r\n\t\t\tthis._upHighlight.style.visibility = \"hidden\";\r\n\t\t\tthis._downHighlight.style.visibility = \"hidden\";\r\n\t\t}\r\n\t\t\t\r\n\t\tthis._selectionRect.style.left = (this._barWidth * this._doc.bar) + \"px\";\r\n\t\tthis._selectionRect.style.top = (Config.barEditorHeight + (this._channelHeight * this._doc.channel)) + \"px\";\r\n\r\n\t\tthis._select.style.left = (this._barWidth * this._doc.bar) + \"px\";\r\n\r\n\t\tthis._select.style.width = this._barWidth + \"px\";\r\n\t\tthis._select.style.top = (Config.barEditorHeight + this._channelHeight * this._doc.channel) + \"px\";\r\n\t\tthis._select.style.height = this._channelHeight + \"px\";\r\n\t\t\t\r\n\t\tthis._barDropDown.style.left = (this._barWidth * bar) + \"px\";\r\n\r\n\t\tconst patternCount: number = this._doc.song.patternsPerChannel + 1;\r\n\t\tfor (let i: number = this._renderedPatternCount; i < patternCount; i++) {\r\n\t\t\t\tthis._select.appendChild(HTML.option({value: i}, i));\r\n\t\t}\r\n\t\tfor (let i: number = patternCount; i < this._renderedPatternCount; i++) {\r\n\t\t\t\tthis._select.removeChild(<Node> this._select.lastChild);\r\n\t\t}\r\n\t\tthis._renderedPatternCount = patternCount;\r\n\t\tconst selectedPattern: number = this._doc.song.channels[this._doc.channel].bars[this._doc.bar];\r\n\t\tif (this._select.selectedIndex != selectedPattern) this._select.selectedIndex = selectedPattern;\r\n\t}\r\n\t\t\r\n\tpublic render(): void {\r\n\r\n\t\tthis._barWidth = this._doc.getBarWidth();\r\n\t\tthis._channelHeight = this._doc.getChannelHeight();\r\n\t\t\t\r\n\t\tif (this._renderedChannelCount != this._doc.song.getChannelCount()) {\r\n\r\n\t\t\t// Add new channel boxes if needed\r\n\t\t\tfor (let y: number = this._renderedChannelCount; y < this._doc.song.getChannelCount(); y++) {\r\n\t\t\t\tthis._grid[y] = [];\r\n\t\t\t\tfor (let x: number = 0; x < this._renderedBarCount; x++) {\r\n\t\t\t\t\tconst box: Box = new Box(y, x, y, ColorConfig.getChannelColor(this._doc.song, y).secondaryChannel);\r\n\t\t\t\t\tbox.setSize(this._barWidth, this._channelHeight);\r\n\t\t\t\t\tthis._boxContainer.appendChild(box.container);\r\n\t\t\t\t\tthis._grid[y][x] = box;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\t\t\r\n\t\t\t// Remove old channel boxes\r\n\t\t\tfor (let y: number = this._doc.song.getChannelCount(); y < this._renderedChannelCount; y++) {\r\n\t\t\t\tfor (let x: number = 0; x < this._renderedBarCount; x++) {\r\n\t\t\t\t\tthis._boxContainer.removeChild(this._grid[y][x].container);\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\t\t\r\n\t\t\tthis._grid.length = this._doc.song.getChannelCount();\r\n\t\t\tthis._mousePressed = false;\r\n\t\t}\r\n\t\t\t\r\n\t\tif (this._renderedBarCount != this._doc.song.barCount || this._renderedBarWidth != this._barWidth) {\r\n\t\t\tfor (let y: number = 0; y < this._doc.song.getChannelCount(); y++) {\r\n\t\t\t\tfor (let x: number = this._renderedBarCount; x < this._doc.song.barCount; x++) {\r\n\t\t\t\t\tconst box: Box = new Box(y, x, y, ColorConfig.getChannelColor(this._doc.song, y).secondaryChannel);\r\n\t\t\t\t\tbox.setSize(this._barWidth, this._channelHeight);\r\n\t\t\t\t\tthis._boxContainer.appendChild(box.container);\r\n\t\t\t\t\tthis._grid[y][x] = box;\r\n\t\t\t\t}\r\n\t\t\t\tfor (let x: number = this._doc.song.barCount; x < this._renderedBarCount; x++) {\r\n\t\t\t\t\tthis._boxContainer.removeChild(this._grid[y][x].container);\r\n\t\t\t\t}\r\n\t\t\t\tthis._grid[y].length = this._doc.song.barCount;\r\n\t\t\t}\r\n\r\n\t\t\t// Update bar editor's SVG\r\n\t\t\t// this._upHighlight.setAttribute(\"d\", `M ${center} ${middle - tip} L ${center + width} ${middle - base} L ${center - width} ${middle - base} z`);\r\n\t\t\t//this._downHighlight.setAttribute(\"d\", `M ${center} ${middle + tip} L ${center + width} ${middle + base} L ${center - width} ${middle + base} z`);\r\n\r\n\t\t\tvar pathString = \"\";\r\n\r\n\t\t\tfor (let x: number = 0; x < this._doc.song.barCount; x++) {\r\n\t\t\t\tvar pathLeft = x * this._barWidth + 2;\r\n\t\t\t\tvar pathTop = 1;\r\n\t\t\t\tvar pathRight = x * this._barWidth + this._barWidth - 2;\r\n\t\t\t\tvar pathBottom = Config.barEditorHeight - 3;\r\n\r\n\t\t\t\tpathString += `M ${pathLeft} ${pathTop} H ${pathRight} V ${pathBottom} H ${pathLeft} V ${pathTop} Z `;\r\n\t\t}\r\n\t\t\t\r\n\t\t\tthis._barEditorPath.setAttribute(\"d\", pathString);\r\n\r\n\t\t\tif (this._renderedBarCount < this._doc.song.barCount) {\r\n\t\t\t\tthis._barNumbers.length = this._doc.song.barCount;\r\n\t\t\t\tfor (var pos = this._renderedBarCount; pos < this._barNumbers.length; pos++) {\r\n\t\t\t\t\tthis._barNumbers[pos] = SVG.text({ \"font-family\": \"sans-serif\", \"font-size\": \"8px\", \"text-anchor\": \"middle\", \"font-weight\": \"bold\", \"x\": (pos * this._barWidth + this._barWidth / 2) + \"px\", \"y\": \"7px\", fill: ColorConfig.secondaryText }, \"\" + (pos + 1));\r\n\t\t\t\t\tif (pos % 4 == 0) {\r\n\t\t\t\t\t\t// Highlighting every 4 bars\r\n\t\t\t\t\t\tthis._barNumbers[pos].setAttribute(\"fill\", ColorConfig.primaryText);\r\n\t\t\t\t\t}\r\n\t\t\t\t\tthis._barNumberContainer.appendChild(this._barNumbers[pos]);\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\telse if (this._renderedBarCount > this._doc.song.barCount) {\r\n\t\t\t\tfor (var pos = this._renderedBarCount - 1; pos >= this._doc.song.barCount; pos--) {\r\n\t\t\t\t\tthis._barNumberContainer.removeChild(this._barNumbers[pos]);\r\n\t\t\t\t}\r\n\t\t\t\tthis._barNumbers.length = this._doc.song.barCount;\r\n\t\t\t}\r\n\r\n\t\t\t// Update x of bar editor numbers\r\n\t\t\tif (this._renderedBarWidth != this._barWidth) {\r\n\t\t\t\tfor (var pos = 0; pos < this._barNumbers.length; pos++) {\r\n\t\t\t\t\tthis._barNumbers[pos].setAttribute(\"x\", (pos * this._barWidth + this._barWidth / 2) + \"px\");\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\r\n\t\t\tthis._renderedBarCount = this._doc.song.barCount;\r\n\t\t\tconst editorWidth = this._barWidth * this._doc.song.barCount;\r\n\t\t\tthis.container.style.width = editorWidth + \"px\";\r\n\t\t\tthis._svg.setAttribute(\"width\", editorWidth + \"\");\r\n\t\t\tthis._mousePressed = false;\r\n\t\t}\r\n\t\t\t\r\n\t\tif (this._renderedChannelHeight != this._channelHeight || this._renderedBarWidth != this._barWidth) {\r\n\t\t\tthis._renderedBarWidth = this._barWidth;\r\n\t\t\tfor (let y: number = 0; y < this._doc.song.getChannelCount(); y++) {\r\n\t\t\t\tfor (let x: number = 0; x < this._renderedBarCount; x++) {\r\n\t\t\t\t\tthis._grid[y][x].setSize(this._barWidth, this._channelHeight);\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\tthis._mousePressed = false;\r\n\t\t}\r\n\t\t\t\r\n\t\tif (this._renderedChannelHeight != this._channelHeight || this._renderedChannelCount != this._doc.song.getChannelCount()) {\r\n\t\t\tthis._renderedChannelHeight = this._channelHeight;\r\n\t\t\tthis._renderedChannelCount = this._doc.song.getChannelCount();\r\n\t\t\tconst editorHeight: number = Config.barEditorHeight + this._doc.song.getChannelCount() * this._channelHeight;\r\n\t\t\tthis._svg.setAttribute(\"height\", \"\" + editorHeight);\r\n\t\t\tthis._playhead.setAttribute(\"height\", \"\" + editorHeight);\r\n\t\t\tthis.container.style.height = editorHeight + \"px\";\r\n\t\t}\r\n\t\t\t\r\n\t\tfor (let j: number = 0; j < this._doc.song.getChannelCount(); j++) {\r\n\t\t\tfor (let i: number = 0; i < this._renderedBarCount; i++) {\r\n\t\t\t\tconst pattern: Pattern | null = this._doc.song.getPattern(j, i);\r\n\t\t\t\tconst selected: boolean = (i == this._doc.bar && j == this._doc.channel);\r\n\t\t\t\tconst dim: boolean = (pattern == null || pattern.notes.length == 0);\r\n\t\t\t\t\t\r\n\t\t\t\tconst box: Box = this._grid[j][i];\r\n\t\t\t\tif (i < this._doc.song.barCount) {\r\n\t\t\t\t\tconst colors: ChannelColors = ColorConfig.getChannelColor(this._doc.song, j);\r\n\t\t\t\t\tbox.setIndex(this._doc.song.channels[j].bars[i], dim, selected, dim && !selected ? colors.secondaryChannel : colors.primaryChannel, j >= this._doc.song.pitchChannelCount && j < this._doc.song.pitchChannelCount + this._doc.song.noiseChannelCount, j >= this._doc.song.pitchChannelCount + this._doc.song.noiseChannelCount);\r\n\t\t\t\t\tbox.container.style.visibility = \"visible\";\r\n\t\t\t\t} else {\r\n\t\t\t\t\tbox.container.style.visibility = \"hidden\";\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t}\r\n\t\t\t\r\n\t\tthis._select.style.display = this._touchMode ? \"\" : \"none\";\r\n\t\t\r\n\t\tif (this._doc.selection.boxSelectionActive) {\r\n\t\t\t// TODO: This causes the selection rectangle to repaint every time the\r\n\t\t\t// editor renders and the selection is visible. Check if anything changed\r\n\t\t\t// before overwriting the attributes?\r\n\t\t\tthis._selectionRect.setAttribute(\"x\", String(this._barWidth * this._doc.selection.boxSelectionBar + 1));\r\n\t\t\tthis._selectionRect.setAttribute(\"y\", String(Config.barEditorHeight + this._channelHeight * this._doc.selection.boxSelectionChannel + 1));\r\n\t\t\tthis._selectionRect.setAttribute(\"width\", String(this._barWidth * this._doc.selection.boxSelectionWidth - 2));\r\n\t\t\tthis._selectionRect.setAttribute(\"height\", String(this._channelHeight * this._doc.selection.boxSelectionHeight - 2));\r\n\t\t\tthis._selectionRect.setAttribute(\"visibility\", \"visible\");\r\n\t\t} else {\r\n\t\t\tthis._selectionRect.setAttribute(\"visibility\", \"hidden\");\r\n\t\t}\r\n\t\t\t\r\n\t\tthis._updatePreview();\r\n\t}\r\n}\r\n","import { ColorConfig } from \"../editor/ColorConfig\";\r\nimport { events } from \"./Events\";\r\n\r\nexport class oscilascopeCanvas {\r\n    public _EventUpdateCanvas:Function;\r\n\r\n    constructor(public readonly canvas: HTMLCanvasElement, readonly scale: number = 1) {\r\n        this._EventUpdateCanvas = function(directlinkL: Float32Array, directlinkR ?: Float32Array): void {\r\n            if(directlinkR) {\r\n                var ctx = canvas.getContext(\"2d\") as CanvasRenderingContext2D;\r\n\r\n                ctx.fillStyle = ColorConfig.getComputed(\"--editor-background\");\r\n                ctx.fillRect(0, 0, canvas.width, canvas.height);\r\n\r\n                ctx.fillStyle = ColorConfig.getComputed(\"--primary-text\");\r\n                for (let i: number = directlinkL.length - 1; i >= directlinkL.length - 1 - (canvas.width/scale); i--) {\r\n                    let x = i - (directlinkL.length - 1) + (canvas.width/scale);\r\n                    let yl = (directlinkL[i] * (canvas.height/scale / 2) + (canvas.height/scale / 2));\r\n\r\n                    ctx.fillRect((x - 1)*scale, (yl - 1)*scale, 1*scale, 1.5*scale);\r\n                    if (x == 0) break;\r\n                }\r\n                ctx.fillStyle = ColorConfig.getComputed(\"--text-selection\"); //less ctx style calls = less expensive??? also avoiding uncached colors\r\n                for (let i: number = directlinkR.length - 1; i >= directlinkR.length - 1 - (canvas.width/scale); i--) {\r\n                    let x = i - (directlinkR.length - 1) + (canvas.width/scale);\r\n                    let yr = (directlinkR[i] * (canvas.height/scale / 2) + (canvas.height/scale / 2));\r\n                    \r\n                    ctx.fillRect((x - 1)*scale, (yr - 1)*scale, 1*scale, 1.5*scale);\r\n                    if (x == 0) break;\r\n                }\r\n            }\r\n        };\r\n        events.listen(\"oscillascopeUpdate\", this._EventUpdateCanvas);\r\n    }\r\n\r\n    \r\n}\r\n","import { HTML, SVG } from \"imperative-html/dist/esm/elements-strict\";\r\nimport { sampleLoadingState, SampleLoadingStatus, ChipWave, Config } from \"../synth/SynthConfig\";\r\nimport { Instrument } from \"../synth/synth\";\r\nimport { ColorConfig } from \"./ColorConfig\";\r\nimport { ChangeGroup } from \"./Change\";\r\nimport { SongDocument } from \"./SongDocument\";\r\nimport { SongEditor } from \"./SongEditor\";\r\nimport { ChangeChipWaveLoopMode, ChangeChipWaveStartOffset, ChangeChipWaveLoopStart, ChangeChipWaveLoopEnd, ChangeChipWavePlayBackwards } from \"./changes\";\r\n\r\nconst { div, input, button, h2, select, option, canvas } = HTML;\r\n\r\n// Some of the code here was adapted from this library:\r\n// https://github.com/chdh/function-curve-viewer\r\n// which is MIT licensed (https://github.com/chdh/function-curve-viewer/blob/master/LICENSE.md).\r\n\r\ntype HandleValueValidator = (value: number) => number;\r\ntype HandleValueChangeHandler = (value: number) => void;\r\ntype ShapeFunction = (canvas: HTMLCanvasElement, context: CanvasRenderingContext2D, x: number, y: number, w: number, h: number) => void;\r\n\r\nconst defaultShapeFunction: ShapeFunction = (cnv, ctx, x, y, w, h) => {\r\n    ctx.fillRect(x, y, w, h);\r\n};\r\n\r\nclass VisualLoopControlsHandle {\r\n    private _value: number;\r\n    private readonly _validator: HandleValueValidator;\r\n    private readonly _whenValueChanges: HandleValueChangeHandler;\r\n    private readonly _whenMouseUpHappens: () => void;\r\n    private readonly _shapeFunction: ShapeFunction;\r\n    private readonly _handleWidth: number = 40;\r\n    private _mouseDown: boolean = false;\r\n    private _viewportX0: number;\r\n    private _viewportX1: number;\r\n    private _handleDragOffset: number | null = null;\r\n    private _canvasWidth: number;\r\n    private _canvasHeight: number;\r\n    public canvas: HTMLCanvasElement | null = null;\r\n    private _context: CanvasRenderingContext2D | null = null;\r\n\r\n    constructor(value: number, canvasWidth: number, canvasHeight: number, viewportX0: number, viewportX1: number, validator: HandleValueValidator, whenValueChanges: HandleValueChangeHandler, whenMouseUpHappens: () => void, shapeFunction: ShapeFunction | null) {\r\n        this._value = value;\r\n        this._validator = validator;\r\n        this._whenValueChanges = whenValueChanges;\r\n        this._whenMouseUpHappens = whenMouseUpHappens;\r\n        this._shapeFunction = shapeFunction == null ? defaultShapeFunction : shapeFunction;\r\n        this._viewportX0 = viewportX0;\r\n        this._viewportX1 = viewportX1;\r\n        this._canvasWidth = canvasWidth;\r\n        this._canvasHeight = canvasHeight;\r\n        this.canvas = canvas({ width: this._canvasWidth, height: this._canvasHeight, style: \"cursor: default; position: static; margin-bottom: 0.5em; margin-left: auto; margin-right: auto; outline: 1px solid var(--ui-widget-background); box-sizing: border-box; width: 100%;\" });\r\n        this._context = this.canvas.getContext(\"2d\");\r\n        window.addEventListener(\"mousemove\", this._whenMouseMoves);\r\n        this.canvas!.addEventListener(\"mousedown\", this._whenMouseIsDown);\r\n        window.addEventListener(\"mouseup\", this._whenMouseIsUp);\r\n        this.canvas!.addEventListener(\"touchstart\", this._whenTouchIsDown);\r\n        this.canvas!.addEventListener(\"touchmove\", this._whenTouchMoves);\r\n        this.canvas!.addEventListener(\"touchend\", this._whenTouchIsUp);\r\n        this.canvas!.addEventListener(\"touchcancel\", this._whenTouchIsUp);\r\n    }\r\n\r\n    public update = (newValue: number): void => {\r\n        this._value = this._validator(newValue);\r\n    }\r\n\r\n    public render = (): void => {\r\n        const cnv: HTMLCanvasElement = this.canvas!;\r\n        const ctx: CanvasRenderingContext2D = this._context!;\r\n        const w: number = cnv.width;\r\n        const h: number = cnv.height;\r\n        const vx0: number = this._viewportX0;\r\n        const vx1: number = this._viewportX1;\r\n\r\n        const v: number = this._value;\r\n\r\n        ctx.clearRect(0, 0, w, h);\r\n\r\n        ctx.fillStyle = ColorConfig.getComputed(\"--loop-accent\");\r\n        const bw: number = this._handleWidth;\r\n        const bh: number = h;\r\n        const bx: number = Math.floor((v - vx0) * w / (vx1 - vx0)) - bw / 2;\r\n        const by: number = 0;\r\n        this._shapeFunction(cnv, ctx, bx, by, bw, bh);\r\n    }\r\n\r\n    public updateViewport = (x0: number, x1: number): void => {\r\n        this._viewportX0 = x0;\r\n        this._viewportX1 = x1;\r\n    }\r\n\r\n    private _whenMouseMoves = (event: MouseEvent): void => {\r\n        if (!this._mouseDown) return;\r\n\r\n        const w: number = this._canvasWidth;\r\n        const vx0: number = this._viewportX0;\r\n        const vx1: number = this._viewportX1;\r\n\r\n        const bounds: DOMRect = this.canvas!.getBoundingClientRect();\r\n        const canvasXScale: number = w / bounds.width;\r\n\r\n        const mx: number = ((event.clientX || event.pageX) - bounds.left) * canvasXScale;\r\n\r\n        const wmx: number = vx0 + mx * (vx1 - vx0) / w;\r\n\r\n        this._value = this._validator(wmx - (this._handleDragOffset != null ? this._handleDragOffset : 0));\r\n        this.render();\r\n        if (this._whenValueChanges) this._whenValueChanges(this._value);\r\n    }\r\n\r\n    private _whenMouseIsDown = (event: MouseEvent): void => {\r\n        this._mouseDown = true;\r\n\r\n        const w: number = this._canvasWidth;\r\n        const vx0: number = this._viewportX0;\r\n        const vx1: number = this._viewportX1;\r\n\r\n        const bounds: DOMRect = this.canvas!.getBoundingClientRect();\r\n        const canvasXScale: number = w / bounds.width;\r\n\r\n        const mx: number = ((event.clientX || event.pageX) - bounds.left) * canvasXScale;\r\n\r\n        const bw: number = this._handleWidth;\r\n        const bx0: number = ((this._value - vx0) * w / (vx1 - vx0)) - bw / 2;\r\n        const bx1: number = bx0 + bw;\r\n        if (mx >= bx0 && mx <= bx1) {\r\n            this._handleDragOffset = (mx - (bx0 + bw / 2)) * (vx1 - vx0) / w;\r\n        }\r\n\r\n        const wmx: number = vx0 + mx * (vx1 - vx0) / w;\r\n\r\n        this._value = this._validator(wmx - (this._handleDragOffset != null ? this._handleDragOffset : 0));\r\n        this.render();\r\n        if (this._whenValueChanges) this._whenValueChanges(this._value);\r\n    };\r\n\r\n    private _whenMouseIsUp = (event: MouseEvent): void => {\r\n        // event.preventDefault();\r\n        // event.stopPropagation();\r\n        if (!this._mouseDown) return;\r\n        this._mouseDown = false;\r\n        this._handleDragOffset = null;\r\n        this._whenMouseUpHappens();\r\n    }\r\n\r\n    private _whenTouchMoves = (event: TouchEvent): void => {\r\n        if (!this._mouseDown) return;\r\n\r\n        event.preventDefault();\r\n\r\n        const w: number = this._canvasWidth;\r\n        const vx0: number = this._viewportX0;\r\n        const vx1: number = this._viewportX1;\r\n\r\n        const bounds: DOMRect = this.canvas!.getBoundingClientRect();\r\n        const canvasXScale: number = w / bounds.width;\r\n\r\n        const mx: number = (event.touches[0].clientX - bounds.left) * canvasXScale;\r\n\r\n        const wmx: number = vx0 + mx * (vx1 - vx0) / w;\r\n\r\n        this._value = this._validator(wmx - (this._handleDragOffset != null ? this._handleDragOffset : 0));\r\n        this.render();\r\n        if (this._whenValueChanges) this._whenValueChanges(this._value);\r\n    }\r\n\r\n    private _whenTouchIsDown = (event: TouchEvent): void => {\r\n        event.preventDefault();\r\n\r\n        this._mouseDown = true;\r\n\r\n        const w: number = this._canvasWidth;\r\n        const vx0: number = this._viewportX0;\r\n        const vx1: number = this._viewportX1;\r\n\r\n        const bounds: DOMRect = this.canvas!.getBoundingClientRect();\r\n        const canvasXScale: number = w / bounds.width;\r\n\r\n        const mx: number = (event.touches[0].clientX - bounds.left) * canvasXScale;\r\n\r\n        const bw: number = this._handleWidth;\r\n        const bx0: number = ((this._value - vx0) * w / (vx1 - vx0)) - bw / 2;\r\n        const bx1: number = bx0 + bw;\r\n        if (mx >= bx0 && mx <= bx1) {\r\n            this._handleDragOffset = (mx - (bx0 + bw / 2)) * (vx1 - vx0) / w;\r\n        }\r\n\r\n        const wmx: number = vx0 + mx * (vx1 - vx0) / w;\r\n\r\n        this._value = this._validator(wmx - (this._handleDragOffset != null ? this._handleDragOffset : 0));\r\n        this.render();\r\n        if (this._whenValueChanges) this._whenValueChanges(this._value);\r\n    }\r\n\r\n    private _whenTouchIsUp = (event: TouchEvent): void => {\r\n        event.preventDefault();\r\n        // event.stopPropagation();\r\n\r\n        this._mouseDown = false;\r\n        this._handleDragOffset = null;\r\n        this._whenMouseUpHappens();\r\n    }\r\n    \r\n    public cleanUp = (): void => {\r\n        window.removeEventListener(\"mousemove\", this._whenMouseMoves);\r\n        this.canvas!.removeEventListener(\"mousedown\", this._whenMouseIsDown);\r\n        window.removeEventListener(\"mouseup\", this._whenMouseIsUp);\r\n        this.canvas!.removeEventListener(\"touchstart\", this._whenTouchIsDown);\r\n        this.canvas!.removeEventListener(\"touchmove\", this._whenTouchMoves);\r\n        this.canvas!.removeEventListener(\"touchend\", this._whenTouchIsUp);\r\n        this.canvas!.removeEventListener(\"touchcancel\", this._whenTouchIsUp);\r\n    }\r\n}\r\n\r\nexport class VisualLoopControlsPrompt {\r\n    private readonly _waveformCanvasWidth: number = 500;\r\n    private readonly _waveformCanvasHeight: number = 200;\r\n    private readonly _handleCanvasHeight: number = 20;\r\n\r\n    private readonly _doc: SongDocument;\r\n    private readonly _songEditor: SongEditor;\r\n    private _instrument: Instrument | null = null;\r\n    private _waveformData: Float32Array | null = null;\r\n    private _waveformDataLength: number | null = null;\r\n    private _initialChipWaveLoopMode: number | null = null;\r\n    private _initialChipWaveStartOffset: number | null = null;\r\n    private _initialChipWaveLoopStart: number | null = null;\r\n    private _initialChipWaveLoopEnd: number | null = null;\r\n    private _initialChipWavePlayBackwards: boolean | null = null;\r\n    private _chipWaveLoopMode: number = 0;\r\n    private _chipWaveStartOffset: number = 0;\r\n    private _chipWaveLoopStart: number = 0;\r\n    private _chipWaveLoopEnd: number = 0;\r\n    private _chipWavePlayBackwards: boolean = false;\r\n    private _waveformViewportX0: number = 0;\r\n    private _waveformViewportX1: number = 1;\r\n    private _waveformViewportY0: number = -1.01;\r\n    private _waveformViewportY1: number = 1.01;\r\n    private _waveformViewportWidth: number = 1;\r\n    private _waveformViewportOffset: number = 0;\r\n    private _waveformViewportMaxOffset: number = 0;\r\n    private _overlayIsMouseDown: boolean = false;\r\n    private _overlaySelectionX0: number | null = null;\r\n    private _overlaySelectionX1: number | null = null;\r\n\r\n    private _startOffsetValidator = (v: number): number => {\r\n        return Math.max(0, Math.min(this._waveformDataLength!, Math.floor(v)));\r\n    }\r\n\r\n    private _loopStartValidator = (v: number): number => {\r\n        return Math.max(0, Math.min(this._waveformDataLength!, Math.min(this._chipWaveLoopEnd - 2, Math.floor(v))));\r\n    }\r\n\r\n    private _loopEndValidator = (v: number): number => {\r\n        return Math.max(0, Math.min(this._waveformDataLength!, Math.max(this._chipWaveLoopStart + 2, Math.floor(v))));\r\n    }\r\n\r\n    private _startOffsetHandle: VisualLoopControlsHandle = new VisualLoopControlsHandle(\r\n        this._chipWaveStartOffset,\r\n        this._waveformCanvasWidth,\r\n        this._handleCanvasHeight,\r\n        this._waveformViewportX0,\r\n        this._waveformViewportX1,\r\n        this._startOffsetValidator,\r\n        (v: number): void => {\r\n            this._chipWaveStartOffset = v;\r\n            this._instrument!.chipWaveStartOffset = this._chipWaveStartOffset;\r\n            this._renderOverlay();\r\n            this._reconfigureLoopControls();\r\n        },\r\n        (): void => {\r\n            this.gotMouseUp = true;\r\n            setTimeout(() => { this.gotMouseUp = false; }, 10);\r\n        },\r\n        (cnv: HTMLCanvasElement, ctx: CanvasRenderingContext2D, x: number, y: number, w: number, h: number): void => {\r\n            const th: number = h / 4;\r\n            ctx.beginPath();\r\n            ctx.moveTo(x, y);\r\n            ctx.lineTo(x + w, y);\r\n            ctx.lineTo(x + w, y + h - th);\r\n            ctx.lineTo(x + w / 2, y + h);\r\n            ctx.lineTo(x, y + h - th);\r\n            ctx.fill();\r\n        }\r\n    );\r\n    private _loopStartHandle: VisualLoopControlsHandle = new VisualLoopControlsHandle(\r\n        this._chipWaveLoopStart,\r\n        this._waveformCanvasWidth,\r\n        this._handleCanvasHeight,\r\n        this._waveformViewportX0,\r\n        this._waveformViewportX1,\r\n        this._loopStartValidator,\r\n        (v: number): void => {\r\n            this._chipWaveLoopStart = v;\r\n            this._instrument!.chipWaveLoopStart = this._chipWaveLoopStart;\r\n            this._renderOverlay();\r\n            this._reconfigureLoopControls();\r\n        },\r\n        (): void => {\r\n            this.gotMouseUp = true;\r\n            setTimeout(() => { this.gotMouseUp = false; }, 10);\r\n        },\r\n        (cnv: HTMLCanvasElement, ctx: CanvasRenderingContext2D, x: number, y: number, w: number, h: number): void => {\r\n            const tw: number = w / 4;\r\n            ctx.beginPath();\r\n            ctx.moveTo(x, y);\r\n            ctx.lineTo(x + w - tw, y);\r\n            ctx.lineTo(x + w, y + h / 2);\r\n            ctx.lineTo(x + w - tw, y + h);\r\n            ctx.lineTo(x, y + h);\r\n            ctx.fill();\r\n        }\r\n    );\r\n    private _loopEndHandle: VisualLoopControlsHandle = new VisualLoopControlsHandle(\r\n        this._chipWaveLoopEnd,\r\n        this._waveformCanvasWidth,\r\n        this._handleCanvasHeight,\r\n        this._waveformViewportX0,\r\n        this._waveformViewportX1,\r\n        this._loopEndValidator,\r\n        (v: number): void => {\r\n            this._chipWaveLoopEnd = v;\r\n            this._instrument!.chipWaveLoopEnd = this._chipWaveLoopEnd;\r\n            this._renderOverlay();\r\n            this._reconfigureLoopControls();\r\n        },\r\n        (): void => {\r\n            this.gotMouseUp = true;\r\n            setTimeout(() => { this.gotMouseUp = false; }, 10);\r\n        },\r\n        (cnv: HTMLCanvasElement, ctx: CanvasRenderingContext2D, x: number, y: number, w: number, h: number): void => {\r\n            const tw: number = w / 4;\r\n            ctx.beginPath();\r\n            ctx.moveTo(x + w, y);\r\n            ctx.lineTo(x + w, y + h);\r\n            ctx.lineTo(x + tw, y + h);\r\n            ctx.lineTo(x, y + h / 2);\r\n            ctx.lineTo(x + tw, y);\r\n            ctx.fill();\r\n        }\r\n    );\r\n    private _chipWaveIsUnavailable: boolean = true;\r\n\r\n    private _waveformCanvas: HTMLCanvasElement = canvas({ width: this._waveformCanvasWidth, height: this._waveformCanvasHeight, style: \"cursor: default; position: static; width: 100%;\" });\r\n    private _waveformContext: CanvasRenderingContext2D | null = null;\r\n    private _overlayCanvas: HTMLCanvasElement = canvas({ width: this._waveformCanvasWidth, height: this._waveformCanvasHeight, style: \"cursor: default; position: absolute; top: 0; left: 0; width: 100%;\" });\r\n    private _overlayContext: CanvasRenderingContext2D | null = null;\r\n    private _waveformContainer: HTMLDivElement = div({ style: `position: relative; margin-bottom: 0.5em; margin-left: auto; margin-right: auto; width: 100%; outline: 1px solid ${ColorConfig.uiWidgetBackground};` },\r\n        this._waveformCanvas,\r\n        this._overlayCanvas\r\n    );\r\n    private _viewportOffsetSlider: HTMLInputElement = input({ style: \"width: 100%; flex-grow: 1; margin: 0;\", type: \"range\", min: \"0\", max: \"1\", value: \"0\", step: \"0.00001\" });\r\n    private _zoomInButton: HTMLButtonElement = button({ type: \"button\", title: \"Zoom In\", style: \"height: var(--button-size); margin-left: 0.5em;\" },\r\n        SVG.svg({ width: \"20\", height: \"20\", viewBox: \"-10 -10 20 20\", \"pointer-events\": \"none\", style: \"width: 100%; height: 100%;\" }, SVG.circle({ cx: -1, cy: -1, r: 6, \"stroke-width\": 2, stroke: ColorConfig.primaryText, fill: \"none\" }), SVG.path({ stroke: ColorConfig.primaryText, \"stroke-width\": 2, d: \"M 3 3 L 7 7 M -1 -4 L -1 2 M -4 -1 L 2 -1\", fill: \"none\" }))\r\n    );\r\n    private _zoomOutButton: HTMLButtonElement = button({ type: \"button\", title: \"Zoom Out\", style: \"height: var(--button-size); margin-left: 0.5em;\" },\r\n        SVG.svg({ width: \"20\", height: \"20\", viewBox: \"-10 -10 20 20\", \"pointer-events\": \"none\", style: \"width: 100%; height: 100%;\" }, SVG.circle({ cx: -1, cy: -1, r: 6, \"stroke-width\": 2, stroke: ColorConfig.primaryText, fill: \"none\" }), SVG.path({ stroke: ColorConfig.primaryText, \"stroke-width\": 2, d: \"M 3 3 L 7 7 M -4 -1 L 2 -1\", fill: \"none\" }))\r\n    );\r\n    private _zoom100Button: HTMLButtonElement = button({ type: \"button\", title: \"Zoom 100%\", style: \"height: var(--button-size); margin-left: 0.5em;\" }, \"100%\");\r\n    private readonly _loopModeSelect: HTMLSelectElement = select({ style: \"width: 100%; flex-grow: 1; margin-left: 0.5em;\" },\r\n        option({ value: 0 }, \"Loop\"),\r\n        option({ value: 1 }, \"Ping-Pong\"),\r\n        option({ value: 2 }, \"Play Once\"),\r\n        option({ value: 3 }, \"Play Loop Once\")\r\n    );\r\n    private _startOffsetStepper: HTMLInputElement = input({ style: \"flex-grow: 1; margin-left: 1em; width: 100%;\", type: \"number\", value: this._chipWaveStartOffset, min: \"0\", step: \"1\" });\r\n    private _loopStartStepper: HTMLInputElement = input({ style: \"flex-grow: 1; margin-left: 1em; width: 100%;\", type: \"number\", value: this._chipWaveLoopStart, min: \"0\", step: \"1\" });\r\n    private _loopEndStepper: HTMLInputElement = input({ style: \"flex-grow: 1; margin-left: 1em; width: 100%;\", type: \"number\", value: this._chipWaveLoopEnd, min: \"0\", step: \"1\" });\r\n    private _playBackwardsBox: HTMLInputElement = input({ type: \"checkbox\", style: \"width: 1em; padding: 0; margin-left: auto; margin-right: auto;\" });\r\n    private _playSongButton: HTMLButtonElement = button({ style: \"width: 55%;\", type: \"button\" });\r\n    private _cancelButton: HTMLButtonElement = button({ class: \"cancelButton\" });\r\n    private _okayButton: HTMLButtonElement = button({ class: \"okayButton\", style: \"width: 25%;\" }, \"Okay\");\r\n    private _sampleIsLoadingMessage: HTMLDivElement = div({ style: \"margin-bottom: 0.5em; display: none;\" },\r\n        \"Sample is loading\"\r\n    );\r\n    private _loopControlsContainer: HTMLDivElement = div(\r\n        div({ style: \"display: flex; flex-direction: column; align-items: center; justify-content: center; margin-bottom: 0.5em;\" },\r\n            div({ style: `width: 100%; margin-bottom: 0.5em; text-align: center; color: ${ColorConfig.secondaryText};` },\r\n                \"You can also zoom by dragging horizontally on the waveform.\"\r\n            )\r\n        ),\r\n        this._startOffsetHandle.canvas,\r\n        this._waveformContainer,\r\n        this._loopStartHandle.canvas,\r\n        this._loopEndHandle.canvas,\r\n        div({ style: \"display: flex; flex-direction: row; align-items: center; justify-content: center; margin-bottom: 0.5em;\" },\r\n            this._viewportOffsetSlider,\r\n            this._zoomInButton,\r\n            this._zoomOutButton,\r\n            this._zoom100Button\r\n        ),\r\n        div({ style: \"display: flex; flex-direction: column; align-items: center; justify-content: center; margin-bottom: 0.5em;\" },\r\n            div({ style: \"width: 100%; display: flex; flex-direction: row; margin-bottom: 0.5em;\" },\r\n                div({ style: `flex-shrink: 0; text-align: right: color: ${ColorConfig.primaryText}; align-self: center;` }, \"Loop Mode\"),\r\n                this._loopModeSelect\r\n            ),\r\n            div({ style: \"width: 100%; display: flex; flex-direction: row; margin-bottom: 0.5em;\" },\r\n                div({ style: `flex-shrink: 0; text-align: right; color: ${ColorConfig.primaryText}; align-self: center;` }, \"Offset\"),\r\n                this._startOffsetStepper\r\n            ),\r\n            div({ style: \"width: 100%; display: flex; flex-direction: row; margin-bottom: 0.5em;\" },\r\n                div({ style: `flex-shrink: 0; text-align: right; color: ${ColorConfig.primaryText}; align-self: center;` }, \"Loop Start\"),\r\n                this._loopStartStepper\r\n            ),\r\n            div({ style: \"width: 100%; display: flex; flex-direction: row; margin-bottom: 0.5em;\" },\r\n                div({ style: `flex-shrink: 0; text-align: right; color: ${ColorConfig.primaryText}; align-self: center;` }, \"Loop End\"),\r\n                this._loopEndStepper\r\n            ),\r\n            div({ style: \"width: 100%; display: flex; flex-direction: row; margin-bottom: 0.5em;\" },\r\n                div({ style: `flex-shrink: 0; text-align: right; color: ${ColorConfig.primaryText}; align-self: center;` }, \"Backwards\"),\r\n                this._playBackwardsBox\r\n            ),\r\n            div({ style: \"width: 100%; display: flex; flex-direction: row; margin-bottom: 0.5em; justify-content: center;\" },\r\n                this._playSongButton\r\n            )\r\n        )\r\n    );\r\n    public container: HTMLDivElement = div({ class: \"prompt noSelection\", style: \"width: 500px;\" },\r\n        div(\r\n            h2({ style: \"margin-bottom: 0.5em;\" }, \"Loop Controls\"),\r\n            this._sampleIsLoadingMessage,\r\n            this._loopControlsContainer,\r\n            div({ style: \"display: flex; flex-direction: row-reverse; justify-content: space-between;\" }, this._okayButton)\r\n        ),\r\n        this._cancelButton\r\n    );\r\n\r\n    public gotMouseUp: boolean = false;\r\n\r\n    constructor(_doc: SongDocument, _songEditor: SongEditor) {\r\n        this._doc = _doc;\r\n        this._songEditor = _songEditor;\r\n        this._waveformContext = this._waveformCanvas.getContext(\"2d\");\r\n        this._overlayContext = this._overlayCanvas.getContext(\"2d\");\r\n        this._instrument = this._doc.song.channels[this._doc.channel].instruments[this._doc.getCurrentInstrument()];\r\n        const rawChipWave: ChipWave = Config.rawRawChipWaves[this._instrument.chipWave];\r\n        const customSampleIsLoading: boolean = (rawChipWave.isCustomSampled === true || rawChipWave.isSampled == true) && sampleLoadingState.statusTable[this._instrument.chipWave] !== SampleLoadingStatus.loaded;\r\n        if (customSampleIsLoading) {\r\n            this._sampleIsLoadingMessage.style.display = \"\";\r\n            this._loopControlsContainer.style.display = \"none\";\r\n            this._chipWaveIsUnavailable = true;\r\n        } else {\r\n            this._sampleIsLoadingMessage.style.display = \"none\";\r\n            this._loopControlsContainer.style.display = \"\";\r\n            this._chipWaveIsUnavailable = false;\r\n            this._waveformData = rawChipWave.samples;\r\n            this._waveformDataLength = this._waveformData.length - 1;\r\n            this._initialChipWaveLoopMode = this._instrument.chipWaveLoopMode;\r\n            this._initialChipWaveStartOffset = this._instrument.chipWaveStartOffset;\r\n            this._initialChipWaveLoopStart = this._instrument.chipWaveLoopStart;\r\n            this._initialChipWaveLoopEnd = this._instrument.chipWaveLoopEnd;\r\n            this._initialChipWavePlayBackwards = this._instrument.chipWavePlayBackwards;\r\n            this._chipWaveLoopMode = this._initialChipWaveLoopMode;\r\n            this._chipWaveStartOffset = this._initialChipWaveStartOffset;\r\n            this._chipWaveLoopStart = this._initialChipWaveLoopStart;\r\n            this._chipWaveLoopEnd = this._initialChipWaveLoopEnd;\r\n            this._chipWavePlayBackwards = this._initialChipWavePlayBackwards;\r\n            const verticalBounds: [number, number] = this._waveformSamplesLookup(0, this._waveformDataLength);\r\n            const maxVerticalBound: number = Math.max(Math.abs(verticalBounds[0]), Math.abs(verticalBounds[1])) + 0.01;\r\n            verticalBounds[0] = -maxVerticalBound;\r\n            verticalBounds[1] = maxVerticalBound;\r\n            this._waveformViewportX0 = 0;\r\n            this._waveformViewportX1 = this._waveformDataLength;\r\n            this._waveformViewportY0 = verticalBounds[0];\r\n            this._waveformViewportY1 = verticalBounds[1];\r\n            this._waveformViewportWidth = this._waveformViewportX1 - this._waveformViewportX0;\r\n            this._waveformViewportOffset = 0;\r\n            this._waveformViewportMaxOffset = this._waveformDataLength - this._waveformViewportWidth;\r\n            this._startOffsetHandle.update(this._chipWaveStartOffset);\r\n            this._loopStartHandle.update(this._chipWaveLoopStart);\r\n            this._loopEndHandle.update(this._chipWaveLoopEnd);\r\n            this._propagateViewportUpdate();\r\n        }\r\n        this._updatePlaySongButton();\r\n        this._render();\r\n        this._reconfigureLoopControls();\r\n        this.container.addEventListener(\"keydown\", this._whenKeyPressed);\r\n        this._okayButton.addEventListener(\"click\", this._saveChanges);\r\n        this._cancelButton.addEventListener(\"click\", this._close);\r\n        this._viewportOffsetSlider.addEventListener(\"input\", this._whenViewportOffsetSliderChanges);\r\n        this._zoomInButton.addEventListener(\"click\", this._whenZoomInClicked);\r\n        this._zoomOutButton.addEventListener(\"click\", this._whenZoomOutClicked);\r\n        this._zoom100Button.addEventListener(\"click\", this._whenZoom100Clicked);\r\n        this._loopModeSelect.addEventListener(\"change\", this._whenLoopModeSelectChanges);\r\n        this._startOffsetStepper.addEventListener(\"change\", this._whenStartOffsetStepperChanges);\r\n        this._loopStartStepper.addEventListener(\"change\", this._whenLoopStartStepperChanges);\r\n        this._loopEndStepper.addEventListener(\"change\", this._whenLoopEndStepperChanges);\r\n        this._playBackwardsBox.addEventListener(\"input\", this._whenPlayBackwardsBoxChanges);\r\n        this._playSongButton.addEventListener(\"click\", this._togglePlaySong);\r\n        window.addEventListener(\"mousemove\", this._whenOverlayMouseMoves);\r\n        this._overlayCanvas.addEventListener(\"mousedown\", this._whenOverlayMouseIsDown);\r\n        window.addEventListener(\"mouseup\", this._whenOverlayMouseIsUp);\r\n        this._overlayCanvas.addEventListener(\"touchstart\", this._whenOverlayTouchIsDown);\r\n        this._overlayCanvas.addEventListener(\"touchmove\", this._whenOverlayTouchMoves);\r\n        this._overlayCanvas.addEventListener(\"touchend\", this._whenOverlayTouchIsUp);\r\n        this._overlayCanvas.addEventListener(\"touchcancel\", this._whenOverlayTouchIsUp);\r\n    }\r\n\r\n    private _waveformSampleLookup = (x: number): number => {\r\n        const n: number = this._waveformDataLength!;\r\n        if (x >= 0 && x < n) {\r\n            return this._waveformData![Math.floor(x)];\r\n        } else {\r\n            return 0;\r\n        }\r\n    }\r\n\r\n    private _waveformSamplesLookup = (x0: number, x1: number): [number, number] => {\r\n        const n: number = this._waveformDataLength!;\r\n        const a: number = Math.max(0, Math.min(n, Math.ceil(x0)));\r\n        const b: number = Math.max(0, Math.min(n, Math.ceil(x1)));\r\n        if (a >= b) return [0, 0];\r\n        let y0: number = this._waveformData![a];\r\n        let y1: number = y0;\r\n        for (let i: number = a + 1; i < b; i++) {\r\n            const v: number = this._waveformData![i];\r\n            y0 = Math.min(y0, v);\r\n            y1 = Math.max(y1, v);\r\n        }\r\n        return [y0, y1];\r\n    }\r\n\r\n    public cleanUp = (): void => {\r\n        this._startOffsetHandle.cleanUp();\r\n        this._loopStartHandle.cleanUp();\r\n        this._loopEndHandle.cleanUp();\r\n        this.container.removeEventListener(\"keydown\", this._whenKeyPressed);\r\n        this._okayButton.removeEventListener(\"click\", this._saveChanges);\r\n        this._cancelButton.removeEventListener(\"click\", this._close);\r\n        this._viewportOffsetSlider.removeEventListener(\"input\", this._whenViewportOffsetSliderChanges);\r\n        this._zoomInButton.removeEventListener(\"click\", this._whenZoomInClicked);\r\n        this._zoomOutButton.removeEventListener(\"click\", this._whenZoomOutClicked);\r\n        this._zoom100Button.removeEventListener(\"click\", this._whenZoom100Clicked);\r\n        this._loopModeSelect.removeEventListener(\"change\", this._whenLoopModeSelectChanges);\r\n        this._startOffsetStepper.removeEventListener(\"change\", this._whenStartOffsetStepperChanges);\r\n        this._loopStartStepper.removeEventListener(\"change\", this._whenLoopStartStepperChanges);\r\n        this._loopEndStepper.removeEventListener(\"change\", this._whenLoopEndStepperChanges);\r\n        this._playBackwardsBox.removeEventListener(\"input\", this._whenPlayBackwardsBoxChanges);\r\n        this._playSongButton.removeEventListener(\"click\", this._togglePlaySong);\r\n        this._overlayCanvas.removeEventListener(\"mousemove\", this._whenOverlayMouseMoves);\r\n        this._overlayCanvas.removeEventListener(\"mousedown\", this._whenOverlayMouseIsDown);\r\n        this._overlayCanvas.removeEventListener(\"mouseup\", this._whenOverlayMouseIsUp);\r\n        this._overlayCanvas.removeEventListener(\"touchstart\", this._whenOverlayTouchIsDown);\r\n        this._overlayCanvas.removeEventListener(\"touchmove\", this._whenOverlayTouchMoves);\r\n        this._overlayCanvas.removeEventListener(\"touchend\", this._whenOverlayTouchIsUp);\r\n        this._overlayCanvas.removeEventListener(\"touchcancel\", this._whenOverlayTouchIsUp);\r\n    }\r\n\r\n    private _close = (): void => {\r\n        this._doc.prompt = null;\r\n        this._doc.undo();\r\n    }\r\n\r\n    private _saveChanges = (): void => {\r\n        if (!this._chipWaveIsUnavailable) {\r\n            this._doc.prompt = null;\r\n            this._instrument!.chipWaveLoopMode = this._initialChipWaveLoopMode!;\r\n            this._instrument!.chipWaveStartOffset = this._initialChipWaveStartOffset!;\r\n            this._instrument!.chipWaveLoopStart = this._initialChipWaveLoopStart!;\r\n            this._instrument!.chipWaveLoopEnd = this._initialChipWaveLoopEnd!;\r\n            this._instrument!.chipWavePlayBackwards = this._initialChipWavePlayBackwards!;\r\n            const group: ChangeGroup = new ChangeGroup();\r\n            group.append(new ChangeChipWaveLoopMode(this._doc, this._chipWaveLoopMode));\r\n            group.append(new ChangeChipWaveStartOffset(this._doc, this._chipWaveStartOffset));\r\n            group.append(new ChangeChipWaveLoopStart(this._doc, this._chipWaveLoopStart));\r\n            group.append(new ChangeChipWaveLoopEnd(this._doc, this._chipWaveLoopEnd));\r\n            group.append(new ChangeChipWavePlayBackwards(this._doc, this._chipWavePlayBackwards));\r\n            this._doc.record(group, true);\r\n        } else {\r\n            this._doc.prompt = null;\r\n            this._doc.undo();\r\n        }\r\n    }\r\n\r\n    private _togglePlaySong = (): void => {\r\n        this._songEditor.togglePlay();\r\n        this._updatePlaySongButton();\r\n    }\r\n\r\n    private _renderWaveform = (): void => {\r\n        if (this._chipWaveIsUnavailable) return;\r\n\r\n        const cnv: HTMLCanvasElement = this._waveformCanvas;\r\n        const ctx: CanvasRenderingContext2D = this._waveformContext!;\r\n        const w: number = cnv.width;\r\n        const h: number = cnv.height;\r\n        const vx0: number = this._waveformViewportX0;\r\n        const vx1: number = this._waveformViewportX1;\r\n        const vy0: number = this._waveformViewportY0;\r\n        const vy1: number = this._waveformViewportY1;\r\n\r\n        const sampleWidth: number = (vx1 - vx0) / w;\r\n\r\n        ctx.clearRect(0, 0, w, h);\r\n\r\n        // Line going through 0.\r\n        ctx.fillStyle = ColorConfig.getComputed(\"--ui-widget-background\");\r\n        ctx.fillRect(0, h / 2, w, 1);\r\n\r\n        const waveformColor: string = ColorConfig.getComputed(\"--primary-text\");\r\n        if (sampleWidth < 1) {\r\n            // Very zoomed in.\r\n            ctx.strokeStyle = waveformColor;\r\n            ctx.lineWidth = 1;\r\n            let firstMove: boolean = true;\r\n            ctx.beginPath();\r\n            for (let cx: number = 0; cx < w; cx++) {\r\n                const wx: number = vx0 + cx * sampleWidth;\r\n                const wy: number = this._waveformSampleLookup(wx);\r\n                const cy: number = h - (wy - vy0) * h / (vy1 - vy0);\r\n                if (firstMove) {\r\n                    ctx.moveTo(cx, cy);\r\n                    firstMove = false;\r\n                } else {\r\n                    ctx.lineTo(cx, cy);\r\n                }\r\n            }\r\n            ctx.stroke();\r\n        } else {\r\n            // Zoomed out.\r\n            ctx.fillStyle = waveformColor;\r\n            let pcy0: number | null = null;\r\n            let pcy1: number | null = null;\r\n            for (let cx: number = 0; cx < w; cx++) {\r\n                const wx: number = vx0 + cx * sampleWidth;\r\n                const [wy0, wy1]: [number, number] = this._waveformSamplesLookup(\r\n                    wx - sampleWidth / 2, wx + sampleWidth / 2\r\n                );\r\n                const cy0: number = Math.max(-1, Math.min(h, h - (wy1 - vy0) * h / (vy1 - vy0)));\r\n                const cy1: number = Math.max(-1, Math.min(h, h - (wy0 - vy0) * h / (vy1 - vy0)));\r\n                const cy0i: number = Math.floor(cy0);\r\n                const cy1i: number = Math.max(Math.ceil(cy1), cy0i + 1);\r\n                const ocy0: number = pcy1 == null ? cy0i : Math.min(cy0i, pcy1);\r\n                const ocy1: number = pcy0 == null ? cy1i : Math.max(cy1i, pcy0);\r\n                const bh: number = Math.max(1, ocy1 - ocy0);\r\n                ctx.fillRect(cx, ocy0, 1, bh);\r\n                pcy0 = ocy0;\r\n                pcy1 = ocy1;\r\n            }\r\n        }\r\n    }\r\n\r\n    private _renderOverlay = (): void => {\r\n        const cnv: HTMLCanvasElement = this._overlayCanvas;\r\n        const ctx: CanvasRenderingContext2D = this._overlayContext!;\r\n        const w: number = cnv.width;\r\n        const h: number = cnv.height;\r\n        const vx0: number = this._waveformViewportX0;\r\n        const vx1: number = this._waveformViewportX1;\r\n\r\n        const so: number = this._chipWaveStartOffset;\r\n        const ls: number = this._chipWaveLoopStart;\r\n        const le: number = this._chipWaveLoopEnd;\r\n\r\n        ctx.clearRect(0, 0, w, h);\r\n\r\n        ctx.fillStyle = ColorConfig.getComputed(\"--loop-accent\");\r\n        const obx: number = Math.floor((so - vx0) * w / (vx1 - vx0));\r\n        const oby: number = 0;\r\n        const obw: number = 1;\r\n        const obh: number = h;\r\n        ctx.fillRect(obx, oby, obw, obh);\r\n\r\n        ctx.fillStyle = ColorConfig.getComputed(\"--loop-accent\");\r\n        ctx.globalAlpha = 0.5;\r\n        const lbx0: number = Math.floor((ls - vx0) * w / (vx1 - vx0));\r\n        const lbx1: number = Math.floor((le - vx0) * w / (vx1 - vx0));\r\n        const lbx: number = lbx0;\r\n        const lby: number = 0;\r\n        const lbw: number = lbx1 - lbx0;\r\n        const lbh: number = h;\r\n        ctx.fillRect(lbx, lby, lbw, lbh);\r\n        ctx.globalAlpha = 1;\r\n\r\n        if (this._overlaySelectionX0 != null && this._overlaySelectionX1 != null) {\r\n            ctx.fillStyle = ColorConfig.getComputed(\"--box-selection-fill\");\r\n            ctx.globalAlpha = 0.5;\r\n            ctx.fillRect(this._overlaySelectionX0, 0, this._overlaySelectionX1 - this._overlaySelectionX0, h);\r\n            ctx.globalAlpha = 1;\r\n        }\r\n    }\r\n\r\n    private _reconfigureLoopControls = (): void => {\r\n        this._loopModeSelect.value = \"\" + this._chipWaveLoopMode;\r\n        this._startOffsetStepper.value = \"\" + this._chipWaveStartOffset;\r\n        this._loopStartStepper.value = \"\" + this._chipWaveLoopStart;\r\n        this._loopEndStepper.value = \"\" + this._chipWaveLoopEnd;\r\n        this._playBackwardsBox.checked = this._chipWavePlayBackwards;\r\n    }\r\n\r\n    private _whenViewportOffsetSliderChanges = (event: Event): void => {\r\n        const rawOffset: number = Math.max(0, Math.min(1, +(<HTMLInputElement>event.target).value));\r\n        const newViewportOffset: number = Math.max(0, Math.min(this._waveformViewportMaxOffset, rawOffset * this._waveformViewportMaxOffset));\r\n        this._waveformViewportOffset = Math.min(this._waveformViewportMaxOffset, newViewportOffset);\r\n        this._viewportOffsetSlider.value = \"\" + (this._waveformViewportOffset / this._waveformViewportMaxOffset);\r\n        this._waveformViewportX0 = 0 + this._waveformViewportOffset;\r\n        this._waveformViewportX1 = this._waveformViewportWidth + this._waveformViewportOffset;\r\n        this._propagateViewportUpdate();\r\n        this._render();\r\n    }\r\n\r\n    private _whenZoomInClicked = (event: Event): void => {\r\n        const newViewportWidth: number = Math.max(1, Math.min(this._waveformDataLength!, this._waveformViewportWidth / 2));\r\n        this._waveformViewportWidth = newViewportWidth;\r\n        this._waveformViewportMaxOffset = this._waveformDataLength! - this._waveformViewportWidth;\r\n        const centerX: number = this._waveformViewportX0 + (this._waveformCanvasWidth / 2) * (this._waveformViewportX1 - this._waveformViewportX0) / this._waveformCanvasWidth;\r\n        this._waveformViewportOffset = Math.max(0, Math.min(this._waveformViewportMaxOffset, centerX - (this._waveformCanvasWidth / 2) * this._waveformViewportWidth / this._waveformCanvasWidth));\r\n        this._waveformViewportX0 = 0 + this._waveformViewportOffset;\r\n        this._waveformViewportX1 = this._waveformViewportWidth + this._waveformViewportOffset;\r\n        this._viewportOffsetSlider.value = \"\" + (this._waveformViewportOffset / this._waveformViewportMaxOffset);\r\n        this._propagateViewportUpdate();\r\n        this._render();\r\n    }\r\n\r\n    private _whenZoomOutClicked = (event: Event): void => {\r\n        const newViewportWidth: number = Math.max(1, Math.min(this._waveformDataLength!, this._waveformViewportWidth * 2));\r\n        this._waveformViewportWidth = newViewportWidth;\r\n        this._waveformViewportMaxOffset = this._waveformDataLength! - this._waveformViewportWidth;\r\n        const centerX: number = this._waveformViewportX0 + (this._waveformCanvasWidth / 2) * (this._waveformViewportX1 - this._waveformViewportX0) / this._waveformCanvasWidth;\r\n        this._waveformViewportOffset = Math.max(0, Math.min(this._waveformViewportMaxOffset, centerX - (this._waveformCanvas.width / 2) * this._waveformViewportWidth / this._waveformCanvasWidth));\r\n        this._waveformViewportX0 = 0 + this._waveformViewportOffset;\r\n        this._waveformViewportX1 = this._waveformViewportWidth + this._waveformViewportOffset;\r\n        if (this._waveformViewportWidth === this._waveformDataLength!) {\r\n            this._viewportOffsetSlider.value = \"0\";\r\n        } else {\r\n            this._viewportOffsetSlider.value = \"\" + (this._waveformViewportOffset / this._waveformViewportMaxOffset);\r\n        }\r\n        this._propagateViewportUpdate();\r\n        this._render();\r\n    }\r\n\r\n    private _whenZoom100Clicked = (event: Event): void => {\r\n        const newViewportWidth: number = this._waveformDataLength!;\r\n        this._waveformViewportWidth = newViewportWidth;\r\n        this._waveformViewportMaxOffset = this._waveformDataLength! - this._waveformViewportWidth;\r\n        this._waveformViewportOffset = Math.max(0, Math.min(this._waveformViewportMaxOffset, 0));\r\n        this._waveformViewportX0 = 0 + this._waveformViewportOffset;\r\n        this._waveformViewportX1 = this._waveformViewportWidth + this._waveformViewportOffset;\r\n        if (this._waveformViewportWidth === this._waveformDataLength!) {\r\n            this._viewportOffsetSlider.value = \"0\";\r\n        } else {\r\n            this._viewportOffsetSlider.value = \"\" + (this._waveformViewportOffset / this._waveformViewportMaxOffset);\r\n        }\r\n        this._propagateViewportUpdate();\r\n        this._render();\r\n    }\r\n\r\n    private _whenLoopModeSelectChanges = (event: Event): void => {\r\n        const element: HTMLSelectElement = <HTMLSelectElement>event.target;\r\n        const newValue: number = +element.value;\r\n        this._chipWaveLoopMode = newValue;\r\n        this._instrument!.chipWaveLoopMode = this._chipWaveLoopMode;\r\n    }\r\n\r\n    private _whenStartOffsetStepperChanges = (event: Event): void => {\r\n        const element: HTMLInputElement = <HTMLInputElement>event.target;\r\n        const newValue: number = this._startOffsetValidator(+element.value);\r\n        this._chipWaveStartOffset = newValue;\r\n        this._instrument!.chipWaveStartOffset = this._chipWaveStartOffset;\r\n        element.value = \"\" + newValue;\r\n        this._startOffsetHandle.update(newValue);\r\n        this._startOffsetHandle.render();\r\n        this._renderOverlay();\r\n    }\r\n\r\n    private _whenLoopStartStepperChanges = (event: Event): void => {\r\n        const element: HTMLInputElement = <HTMLInputElement>event.target;\r\n        const newValue: number = this._loopStartValidator(+element.value);\r\n        this._chipWaveLoopStart = newValue;\r\n        this._instrument!.chipWaveLoopStart = this._chipWaveLoopStart;\r\n        element.value = \"\" + newValue;\r\n        this._loopStartHandle.update(newValue);\r\n        this._loopStartHandle.render();\r\n        this._renderOverlay();\r\n    }\r\n\r\n    private _whenLoopEndStepperChanges = (event: Event): void => {\r\n        const element: HTMLInputElement = <HTMLInputElement>event.target;\r\n        const newValue: number = this._loopEndValidator(+element.value);\r\n        this._chipWaveLoopEnd = newValue;\r\n        this._instrument!.chipWaveLoopEnd = this._chipWaveLoopEnd;\r\n        element.value = \"\" + newValue;\r\n        this._loopEndHandle.update(newValue);\r\n        this._loopEndHandle.render();\r\n        this._renderOverlay();\r\n    }\r\n\r\n    private _whenPlayBackwardsBoxChanges = (event: Event): void => {\r\n        const element: HTMLInputElement = <HTMLInputElement>event.target;\r\n        const newValue: boolean = element.checked;\r\n        this._chipWavePlayBackwards = newValue;\r\n        this._instrument!.chipWavePlayBackwards = this._chipWavePlayBackwards;\r\n    };\r\n\r\n    private _whenOverlayMouseMoves = (event: MouseEvent): void => {\r\n        if (!this._overlayIsMouseDown) return;\r\n\r\n        const w: number = this._overlayCanvas.width;\r\n\r\n        const bounds: DOMRect = this._overlayCanvas.getBoundingClientRect();\r\n        const canvasXScale: number = w / bounds.width;\r\n\r\n        const mx: number = ((event.clientX || event.pageX) - bounds.left) * canvasXScale;\r\n\r\n        this._overlaySelectionX1 = mx;\r\n\r\n        this._renderOverlay();\r\n    }\r\n\r\n    private _whenOverlayMouseIsDown = (event: MouseEvent): void => {\r\n        this._overlayIsMouseDown = true;\r\n\r\n        const w: number = this._overlayCanvas.width;\r\n\r\n        const bounds: DOMRect = this._overlayCanvas.getBoundingClientRect();\r\n        const canvasXScale: number = w / bounds.width;\r\n\r\n        const mx: number = ((event.clientX || event.pageX) - bounds.left) * canvasXScale;\r\n\r\n        this._overlaySelectionX0 = mx;\r\n        this._overlaySelectionX1 = mx;\r\n\r\n        this._renderOverlay();\r\n    }\r\n\r\n    private _whenOverlayMouseIsUp = (event: MouseEvent): void => {\r\n        // event.preventDefault();\r\n        // event.stopPropagation();\r\n        if (!this._overlayIsMouseDown) return;\r\n        this.gotMouseUp = true;\r\n        setTimeout(() => { this.gotMouseUp = false; }, 10);\r\n        this._overlayIsMouseDown = false;\r\n\r\n        const w: number = this._overlayCanvas.width;\r\n        const vx0: number = this._waveformViewportX0;\r\n        const vx1: number = this._waveformViewportX1;\r\n\r\n        const bounds: DOMRect = this._overlayCanvas.getBoundingClientRect();\r\n        const canvasXScale: number = w / bounds.width;\r\n\r\n        const mx: number = ((event.clientX || event.pageX) - bounds.left) * canvasXScale;\r\n\r\n        this._overlaySelectionX1 = mx;\r\n\r\n        this._overlaySelectionX0 = Math.max(0, Math.min(w, this._overlaySelectionX0!));\r\n        this._overlaySelectionX1 = Math.max(0, Math.min(w, this._overlaySelectionX1!));\r\n\r\n        if (this._overlaySelectionX0 > this._overlaySelectionX1) {\r\n            const t: number = this._overlaySelectionX0;\r\n            this._overlaySelectionX0 = this._overlaySelectionX1;\r\n            this._overlaySelectionX1 = t;\r\n        }\r\n\r\n        let zoomAreaIsTooSmall: boolean = false;\r\n        if (this._overlaySelectionX1 - this._overlaySelectionX0 > 2) {\r\n            const wosx0: number = vx0 + this._overlaySelectionX0 * (vx1 - vx0) / w;\r\n            const wosx1: number = vx0 + this._overlaySelectionX1 * (vx1 - vx0) / w;\r\n            const newViewportWidth: number = Math.max(1, Math.min(this._waveformDataLength!, wosx1 - wosx0));\r\n            this._waveformViewportWidth = newViewportWidth;\r\n            this._waveformViewportMaxOffset = this._waveformDataLength! - this._waveformViewportWidth;\r\n            const centerX: number = vx0 + (this._overlaySelectionX0) * (this._waveformViewportX1 - this._waveformViewportX0) / this._waveformCanvasWidth;\r\n            this._waveformViewportOffset = Math.max(0, Math.min(this._waveformViewportMaxOffset, centerX));\r\n            this._waveformViewportX0 = 0 + this._waveformViewportOffset;\r\n            this._waveformViewportX1 = this._waveformViewportWidth + this._waveformViewportOffset;\r\n            if (this._waveformViewportWidth === this._waveformDataLength!) {\r\n                this._viewportOffsetSlider.value = \"0\";\r\n            } else {\r\n                this._viewportOffsetSlider.value = \"\" + (this._waveformViewportOffset / this._waveformViewportMaxOffset);\r\n            }\r\n        } else {\r\n            zoomAreaIsTooSmall = true;\r\n        }\r\n\r\n        this._overlaySelectionX0 = null;\r\n        this._overlaySelectionX1 = null;\r\n\r\n        if (!zoomAreaIsTooSmall) {\r\n            this._propagateViewportUpdate();\r\n            this._render();\r\n        }\r\n        this._renderOverlay();\r\n    }\r\n\r\n    private _whenOverlayTouchIsDown = (event: TouchEvent): void => {\r\n        event.preventDefault();\r\n\r\n        this._overlayIsMouseDown = true;\r\n\r\n        const w: number = this._overlayCanvas.width;\r\n\r\n        const bounds: DOMRect = this._overlayCanvas.getBoundingClientRect();\r\n        const canvasXScale: number = w / bounds.width;\r\n\r\n        const mx: number = (event.touches[0].clientX - bounds.left) * canvasXScale;\r\n\r\n        this._overlaySelectionX0 = mx;\r\n        this._overlaySelectionX1 = mx;\r\n\r\n        this._renderOverlay();\r\n    }\r\n\r\n    private _whenOverlayTouchMoves = (event: TouchEvent): void => {\r\n        if (!this._overlayIsMouseDown) return;\r\n\r\n        event.preventDefault();\r\n\r\n        const w: number = this._overlayCanvas.width;\r\n\r\n        const bounds: DOMRect = this._overlayCanvas.getBoundingClientRect();\r\n        const canvasXScale: number = w / bounds.width;\r\n\r\n        const mx: number = (event.touches[0].clientX - bounds.left) * canvasXScale;\r\n\r\n        this._overlaySelectionX1 = mx;\r\n\r\n        this._renderOverlay();\r\n    }\r\n\r\n    private _whenOverlayTouchIsUp = (event: TouchEvent): void => {\r\n        event.preventDefault();\r\n        // event.stopPropagation();\r\n\r\n        if (!this._overlayIsMouseDown) return;\r\n        this.gotMouseUp = true;\r\n        setTimeout(() => { this.gotMouseUp = false; }, 10);\r\n\r\n        this._overlayIsMouseDown = false;\r\n\r\n        const w: number = this._overlayCanvas.width;\r\n        const vx0: number = this._waveformViewportX0;\r\n        const vx1: number = this._waveformViewportX1;\r\n\r\n        this._overlaySelectionX0 = Math.max(0, Math.min(w, this._overlaySelectionX0!));\r\n        this._overlaySelectionX1 = Math.max(0, Math.min(w, this._overlaySelectionX1!));\r\n\r\n        if (this._overlaySelectionX0 > this._overlaySelectionX1) {\r\n            const t: number = this._overlaySelectionX0;\r\n            this._overlaySelectionX0 = this._overlaySelectionX1;\r\n            this._overlaySelectionX1 = t;\r\n        }\r\n\r\n        let zoomAreaIsTooSmall: boolean = false;\r\n        if (this._overlaySelectionX1 - this._overlaySelectionX0 > 2) {\r\n            const wosx0: number = vx0 + this._overlaySelectionX0 * (vx1 - vx0) / w;\r\n            const wosx1: number = vx0 + this._overlaySelectionX1 * (vx1 - vx0) / w;\r\n            const newViewportWidth: number = Math.max(1, Math.min(this._waveformDataLength!, wosx1 - wosx0));\r\n            this._waveformViewportWidth = newViewportWidth;\r\n            this._waveformViewportMaxOffset = this._waveformDataLength! - this._waveformViewportWidth;\r\n            const centerX: number = vx0 + (this._overlaySelectionX0) * (this._waveformViewportX1 - this._waveformViewportX0) / this._waveformCanvasWidth;\r\n            this._waveformViewportOffset = Math.max(0, Math.min(this._waveformViewportMaxOffset, centerX));\r\n            this._waveformViewportX0 = 0 + this._waveformViewportOffset;\r\n            this._waveformViewportX1 = this._waveformViewportWidth + this._waveformViewportOffset;\r\n            if (this._waveformViewportWidth === this._waveformDataLength!) {\r\n                this._viewportOffsetSlider.value = \"0\";\r\n            } else {\r\n                this._viewportOffsetSlider.value = \"\" + (this._waveformViewportOffset / this._waveformViewportMaxOffset);\r\n            }\r\n        } else {\r\n            zoomAreaIsTooSmall = true;\r\n        }\r\n\r\n        this._overlaySelectionX0 = null;\r\n        this._overlaySelectionX1 = null;\r\n\r\n        if (!zoomAreaIsTooSmall) {\r\n            this._propagateViewportUpdate();\r\n            this._render();\r\n        }\r\n        this._renderOverlay();\r\n    }\r\n\r\n    private _whenKeyPressed = (event: KeyboardEvent): void => {\r\n        if ((<Element>event.target).tagName != \"BUTTON\" && event.keyCode == 13) {\r\n            this._saveChanges();\r\n        }\r\n        if (event.keyCode == 32) {\r\n            this._togglePlaySong();\r\n            event.preventDefault();\r\n        }\r\n    }\r\n\r\n    private _updatePlaySongButton = (): void => {\r\n        if (this._doc.synth.playing) {\r\n            this._playSongButton.classList.remove(\"playButton\");\r\n            this._playSongButton.classList.add(\"pauseButton\");\r\n            this._playSongButton.title = \"Pause (Space)\";\r\n            this._playSongButton.innerText = \"Pause\";\r\n        }\r\n        else {\r\n            this._playSongButton.classList.remove(\"pauseButton\");\r\n            this._playSongButton.classList.add(\"playButton\");\r\n            this._playSongButton.title = \"Play (Space)\";\r\n            this._playSongButton.innerText = \"Play\";\r\n        }\r\n    }\r\n\r\n    private _propagateViewportUpdate = (): void => {\r\n        this._startOffsetHandle.updateViewport(this._waveformViewportX0, this._waveformViewportX1);\r\n        this._loopStartHandle.updateViewport(this._waveformViewportX0, this._waveformViewportX1);\r\n        this._loopEndHandle.updateViewport(this._waveformViewportX0, this._waveformViewportX1);\r\n    };\r\n\r\n    private _render = (): void => {\r\n        if (this._chipWaveIsUnavailable) return;\r\n\r\n        this._renderWaveform();\r\n        this._startOffsetHandle.render();\r\n        this._loopStartHandle.render();\r\n        this._loopEndHandle.render();\r\n        this._renderOverlay();\r\n    }\r\n}\r\n","import { HTML } from \"imperative-html/dist/esm/elements-strict\";\r\nimport { sampleLoadingState, SampleLoadingStatus, getSampleLoadingStatusName, ChipWave, Config } from \"../synth/SynthConfig\";\r\nimport { ColorConfig } from \"./ColorConfig\";\r\nimport { EditorConfig } from \"./EditorConfig\";\r\nimport { SongDocument } from \"./SongDocument\";\r\n\r\nconst { div, h2, span, input, button } = HTML;\r\n\r\nexport class SampleLoadingStatusPrompt {\r\n    private readonly _intervalDuration: number = 2000;\r\n\r\n    private readonly _doc: SongDocument;\r\n    private _interval: ReturnType<typeof setInterval> | null = null;\r\n    private _renderedWhenAllHaveStoppedChanging: boolean = false;\r\n    private readonly _cancelButton: HTMLButtonElement = button({ class: \"cancelButton\" });\r\n    private _statusesContainer: HTMLDivElement = div();\r\n    private _noSamplesMessage: HTMLDivElement = div({ style: \"margin-top: 0.5em; display: none;\" }, \"There's no custom samples in this song.\");\r\n    public container: HTMLDivElement = div({ class: \"prompt noSelection\", style: \"width: 350px;\" },\r\n        div(\r\n            h2(\"Sample Loading Status\"),\r\n            div({ style: \"display: flex; flex-direction: column; align-items: center; margin-bottom: 0.5em;\" },\r\n                this._noSamplesMessage,\r\n                div({ style: \"width: 100%; max-height: 350px; overflow-y: scroll;\" }, this._statusesContainer),\r\n            )\r\n        ),\r\n        this._cancelButton\r\n    );\r\n\r\n    constructor(_doc: SongDocument) {\r\n        this._doc = _doc;\r\n        this._interval = setInterval(() => this._render(), this._intervalDuration);\r\n        this._render();\r\n        this._cancelButton.addEventListener(\"click\", this._close);\r\n    }\r\n\r\n    private _close = (): void => {\r\n        this._doc.prompt = null;\r\n        this._doc.undo();\r\n    }\r\n\r\n    public cleanUp = (): void => {\r\n        while (this._statusesContainer.firstChild !== null) {\r\n            this._statusesContainer.removeChild(this._statusesContainer.firstChild);\r\n        }\r\n\r\n        this._cancelButton.removeEventListener(\"click\", this._close);\r\n        clearInterval(this._interval!);\r\n    }\r\n\r\n    private _render = (): void => {\r\n        const hasNoCustomSamples: boolean = EditorConfig.customSamples == null;\r\n\r\n        if (hasNoCustomSamples) {\r\n            this._noSamplesMessage.style.display = \"\";\r\n        }\r\n\r\n        if (hasNoCustomSamples || this._renderedWhenAllHaveStoppedChanging) {\r\n            clearInterval(this._interval!);\r\n            return;\r\n        }\r\n\r\n        let allHaveStoppedChanging: boolean = true;\r\n        for (let chipWaveIndex: number = 0; chipWaveIndex < Config.chipWaves.length; chipWaveIndex++) {\r\n            const chipWave: ChipWave = Config.chipWaves[chipWaveIndex];\r\n            if (chipWave.isCustomSampled !== true && chipWave.isSampled !== true) continue;\r\n            const loadingStatus: SampleLoadingStatus = sampleLoadingState.statusTable[chipWaveIndex];\r\n            if (loadingStatus === SampleLoadingStatus.loading) {\r\n                allHaveStoppedChanging = false;\r\n                break;\r\n            }\r\n        }\r\n\r\n        // @TODO: This is very much not efficient. The slowness here\r\n        // isn't harmless if more samples are to be allowed.\r\n\r\n        while (this._statusesContainer.firstChild !== null) {\r\n            this._statusesContainer.removeChild(this._statusesContainer.firstChild);\r\n        }\r\n\r\n        for (let chipWaveIndex: number = 0; chipWaveIndex < Config.chipWaves.length; chipWaveIndex++) {\r\n            const chipWave: ChipWave = Config.chipWaves[chipWaveIndex];\r\n            if (chipWave.isCustomSampled !== true && chipWave.isSampled !== true) continue;\r\n            const sampleName: string = chipWave.name;\r\n            const url: string = sampleLoadingState.urlTable[chipWaveIndex];\r\n            const loadingStatus: string = getSampleLoadingStatusName(sampleLoadingState.statusTable[chipWaveIndex]);\r\n            const urlDisplay: HTMLInputElement = input({ style: `margin-left: 0.5em; color: ${ColorConfig.primaryText}; background-color: ${ColorConfig.editorBackground}; width: 100%; border: 1px solid ${ColorConfig.uiWidgetBackground}; -webkit-user-select: none; -webkit-touch-callout: none; -moz-user-select: none; -ms-user-select: none; user-select: none;`, value: url, title: url, disabled: true });\r\n            const loadingStatusColor: string = loadingStatus === \"loaded\" ? ColorConfig.indicatorPrimary : ColorConfig.secondaryText;\r\n            const loadingStatusDisplay: HTMLSpanElement = span({ style: `margin-left: 0.5em; color: ${loadingStatusColor}` }, loadingStatus);\r\n            const chipWaveElement: HTMLDivElement = div({ style: `padding: 0.6em; margin: 0.4em; border: 1px solid ${ColorConfig.uiWidgetBackground}; border-radius: 4px;` },\r\n                div({\r\n                    class: \"add-sample-prompt-sample-name\",\r\n                    style: `margin-bottom: 0.5em; color: ${ColorConfig.secondaryText}; text-overflow: ellipsis; overflow: hidden; white-space: nowrap;`,\r\n                    title: sampleName,\r\n                },\r\n                    sampleName\r\n                ),\r\n                div({ style: \"display: flex; flex-direction: row; align-items: center; justify-content: center; margin-bottom: 0.5em;\" },\r\n                    div({ style: `text-align: right; color: ${ColorConfig.primaryText};` }, \"URL\"),\r\n                    urlDisplay\r\n                ),\r\n                div({ style: \"display: flex; flex-direction: row; align-items: center; justify-content: center; margin-bottom: 0.5em;\" },\r\n                    div({ style: `text-align: right; color: ${ColorConfig.primaryText};` }, \"Status\"),\r\n                    loadingStatusDisplay\r\n                )\r\n            );\r\n            this._statusesContainer.appendChild(chipWaveElement);\r\n        }\r\n\r\n        if (allHaveStoppedChanging) {\r\n            this._renderedWhenAllHaveStoppedChanging = true;\r\n        }\r\n    }\r\n}\r\n","import { HTML, SVG } from \"imperative-html/dist/esm/elements-strict\";\r\nimport { Dictionary, Config } from \"../synth/SynthConfig\";\r\nimport { clamp } from \"../synth/synth\";\r\nimport { ColorConfig } from \"./ColorConfig\";\r\nimport { EditorConfig } from \"./EditorConfig\";\r\nimport { SongDocument } from \"./SongDocument\";\r\n\r\nconst { div, input, button, a, code, textarea, details, summary, span, ul, li, select, option, h2 } = HTML;\r\n\r\ninterface SampleEntry {\r\n    url: string;\r\n    sampleRate: number;\r\n    rootKey: number;\r\n    percussion: boolean;\r\n    chipWaveLoopStart: number | null;\r\n    chipWaveLoopEnd: number | null;\r\n    chipWaveStartOffset: number | null;\r\n    chipWaveLoopMode: number | null;\r\n    chipWavePlayBackwards: boolean;\r\n}\r\n\r\ninterface ParsedEntries {\r\n    entries: SampleEntry[];\r\n}\r\n\r\n// @TODO:\r\n// - Check for duplicate sample URLs and names.\r\n// - Maybe the Backwards checkbox should be a select as well? Right now though,\r\n//   assuming that false is the same as if it wasn't actually set should work\r\n//   fine.\r\n// - Use constants or an enum for the key-value pairs.\r\n\r\nexport class AddSamplesPrompt {\r\n    private readonly _maxSamples: number = 64;\r\n\r\n    private _doc: SongDocument;\r\n    private readonly _entries: SampleEntry[] = [];\r\n    private readonly _entryOptionsDisplayStates: Dictionary<boolean> = {};\r\n    private readonly _cancelButton: HTMLButtonElement = button({ class: \"cancelButton\" });\r\n    private readonly _okayButton: HTMLButtonElement = button({ class: \"okayButton\", style: \"width: 45%;\" }, \"Okay\");\r\n    private readonly _addSampleButton: HTMLButtonElement = button({ style: \"height: auto; min-height: var(--button-size);\" }, \"Add sample\");\r\n    private readonly _entryContainer: HTMLDivElement = div();\r\n    private readonly _addMultipleSamplesButton: HTMLButtonElement = button({ style: \"height: auto; min-height: var(--button-size); margin-left: 0.5em;\" }, \"Add multiple samples\");\r\n    private readonly _addSamplesAreaBottom: HTMLDivElement = div({ style: \"margin-top: 0.5em;\" },\r\n        this._addSampleButton,\r\n        this._addMultipleSamplesButton\r\n    );\r\n    private readonly _instructionsLink: HTMLAnchorElement = a({ href: \"#\" }, \"Here's more information and some instructions on how to use custom samples in UltraBox.\");\r\n    private readonly _description: HTMLDivElement = div(\r\n        div({ style: \"margin-bottom: 0.5em; -webkit-user-select: text; -moz-user-select: text; -ms-user-select: text; user-select: text; cursor: text;\" },\r\n            \"In order to use the old UltraBox samples, you should add \",\r\n            code(\"legacySamples\"),\r\n            \" as an URL. You can also use \",\r\n            code(\"nintariboxSamples\"),\r\n            \" and \",\r\n            code(\"marioPaintboxSamples\"),\r\n            \" for more built-in sample packs.\"\r\n        ),\r\n        div({ style: \"margin-bottom: 0.5em;\" },\r\n            \"The order of these samples is important - if you change it you'll break your song!\"\r\n        ),\r\n        div({ style: \"margin-bottom: 0.5em;\" },\r\n            this._instructionsLink,\r\n        )\r\n    );\r\n    private readonly _closeInstructionsButton: HTMLButtonElement = button({ style: \"height: auto; min-height: var(--button-size); width: 100%;\" }, \"Close instructions\");\r\n    private readonly _instructionsArea: HTMLDivElement = div(\r\n        { style: \"display: none; margin-top: 0; -webkit-user-select: text; -moz-user-select: text; -ms-user-select: text; user-select: text; cursor: text;\" },\r\n        h2(\"Add Samples\"),\r\n        div({ style: \"margin-top: 0.5em; margin-bottom: 0.5em;\" },\r\n            \"In UltraBox, custom samples are loaded from arbitrary URLs.\",\r\n        ),\r\n        div({ style: `margin-top: 0.5em; margin-bottom: 0.5em; color: ${ColorConfig.secondaryText};` },\r\n            \"(Technically, the web server behind the URL needs to support \",\r\n              a({ href: \"https://developer.mozilla.org/en-US/docs/Web/HTTP/CORS\", target: \"_blank\", }, \"CORS\"),\r\n              \", but you don't need to know about that: \",\r\n              \" the sample just won't load if that's not the case)\",\r\n        ),\r\n        div({ style: \"margin-top: 0.5em; margin-bottom: 0.5em;\" },\r\n            details(\r\n                summary(\"Why arbitrary URLs?\"),\r\n                a({ href: \"https://pandoras-box-archive.neptendo.repl.co/\" }, \"A certain BeepBox mod\"),\r\n                \" did this with one central server, but it went down, taking down\",\r\n                \" the samples with it, though thankfully it got archived.\",\r\n                \" This is always an issue with servers: it may run out of space,\",\r\n                \" stop working, and so on. With arbitrary URLs, you can always \",\r\n                \" change them to different ones if they stop working.\"\r\n            )\r\n        ),\r\n        div({ style: \"margin-top: 0.5em; margin-bottom: 0.5em;\" },\r\n            \"As for where to upload your samples, here are some suggestions:\",\r\n            ul({ style: \"text-align: left;\" },\r\n                li(a({ href: \"https://filegarden.com\" }, \"File Garden\")),\r\n                li(a({ href: \"https://www.dropbox.com\" }, \"Dropbox\"), \" (domain needs to be \", code(\"https://dl.dropboxusercontent.com\"), \")\"),\r\n                li(a({ href: \"https://discord.com\" }, \"Discord\"), \" (domain needs to be \", code(\"https://media.discordapp.net\"), \")\")\r\n            )\r\n        ),\r\n        div({ style: \"margin-top: 0.5em; margin-bottom: 0.5em;\" },\r\n            \"Static website hosting services may also work (such as \", a({ href: \"https://pages.github.com\" }, \"GitHub Pages\"), \")\",\r\n            \" but those require a bit more setup.\"\r\n        ),\r\n        div({ style: \"margin-top: 0.5em; margin-bottom: 1em;\" },\r\n            \"Finally, if have a soundfont you'd like to get samples from, consider using this \",\r\n            a({ href: \"./sample_extractor.html\", target: \"_blank\" }, \"sample extractor\"),\r\n            \".\"\r\n        ),\r\n        div({ style: \"display: flex; flex-direction: row-reverse; justify-content: space-between; margin-top: 0.5em;\" }, this._closeInstructionsButton)\r\n    );\r\n    private readonly _addSamplesArea: HTMLDivElement = div(\r\n        h2(\"Add Samples\"),\r\n        div({ style: \"display: flex; flex-direction: column; align-items: center; margin-bottom: 0.5em;\" },\r\n            this._description,\r\n            div({ style: \"width: 100%; max-height: 450px; overflow-y: scroll;\" }, this._entryContainer),\r\n            this._addSamplesAreaBottom\r\n        ),\r\n        div({ style: \"display: flex; flex-direction: row-reverse; justify-content: space-between;\" }, this._okayButton)\r\n    );\r\n    private readonly _bulkAddTextarea: HTMLTextAreaElement = textarea({\r\n        style: \"width: 100%; height: 100%; resize: none; box-sizing: border-box;\",\r\n    });\r\n    private readonly _bulkAddConfirmButton: HTMLButtonElement = button({ style: \"height: auto; min-height: var(--button-size); width: 100%;\" }, \"Add\");\r\n    private readonly _bulkAddArea: HTMLDivElement = div(\r\n        { style: \"display: none;\" },\r\n        h2({ style: \"margin-bottom: 0.5em;\" }, \"Add Multiple Samples\"),\r\n        div({ style: \"display: flex; flex-direction: column; align-items: center;\" },\r\n            div(`Add one URL per line. Remember that you can only have ${this._maxSamples} samples!`),\r\n            div({ style: `color: ${ColorConfig.secondaryText}` }, \"(This supports the syntax used to store samples in the song URLs as well)\"),\r\n            div({ style: \"width: 100%; height: 250px; margin-top: 0.5em; margin-bottom: 0.5em;\" }, this._bulkAddTextarea),\r\n        ),\r\n        div({ style: \"display: flex; flex-direction: row-reverse; justify-content: space-between;\" }, this._bulkAddConfirmButton),\r\n    );\r\n    public container: HTMLDivElement = div({ class: \"prompt noSelection\", style: \"width: 350px;\" },\r\n        this._addSamplesArea,\r\n        this._bulkAddArea,\r\n        this._instructionsArea,\r\n        this._cancelButton\r\n    );\r\n\r\n    constructor(_doc: SongDocument) {\r\n        this._doc = _doc;\r\n        if (EditorConfig.customSamples != null) {\r\n            const parsed = this._parseURLs(EditorConfig.customSamples);\r\n            this._entries = parsed.entries;\r\n        }\r\n        this._addSampleButton.addEventListener(\"click\", this._whenAddSampleClicked);\r\n        this._addMultipleSamplesButton.addEventListener(\"click\", this._whenAddMultipleSamplesClicked);\r\n        this._bulkAddConfirmButton.addEventListener(\"click\", this._whenBulkAddConfirmClicked);\r\n        this._okayButton.addEventListener(\"click\", this._saveChanges);\r\n        this._cancelButton.addEventListener(\"click\", this._close);\r\n        this._instructionsLink.addEventListener(\"click\", this._whenInstructionsLinkClicked);\r\n        this._closeInstructionsButton.addEventListener(\"click\", this._whenCloseInstructionsButtonClicked);\r\n        this._reconfigureAddSampleButton();\r\n        this._render(false);\r\n    }\r\n\r\n    public cleanUp = (): void => {\r\n        while (this._entryContainer.firstChild !== null) {\r\n            this._entryContainer.removeChild(this._entryContainer.firstChild);\r\n        }\r\n        this._addSampleButton.removeEventListener(\"click\", this._whenAddSampleClicked);\r\n        this._addMultipleSamplesButton.removeEventListener(\"click\", this._whenAddMultipleSamplesClicked);\r\n        this._bulkAddConfirmButton.removeEventListener(\"click\", this._whenBulkAddConfirmClicked);\r\n        this._okayButton.removeEventListener(\"click\", this._saveChanges);\r\n        this._cancelButton.removeEventListener(\"click\", this._close);\r\n        this._instructionsLink.removeEventListener(\"click\", this._whenInstructionsLinkClicked);\r\n        this._closeInstructionsButton.removeEventListener(\"click\", this._whenCloseInstructionsButtonClicked);\r\n    }\r\n\r\n    private _close = (): void => {\r\n        this._doc.prompt = null;\r\n        this._doc.undo();\r\n        this._saveChanges();\r\n    }\r\n\r\n    private _saveChanges = (): void => {\r\n        const urlData: string = this._generateURLData();\r\n        EditorConfig.customSamples = urlData.split(\"|\").filter(x => x !== \"\");\r\n        Config.willReloadForCustomSamples = true;\r\n        window.location.hash = this._doc.song.toBase64String();\r\n        // The prompt seems to get stuck if reloading is done too quickly.\r\n        setTimeout(() => { location.reload(); }, 50);\r\n    }\r\n\r\n    private _whenAddSampleClicked = (event: Event): void => {\r\n        const entryIndex: number = this._entries.length;\r\n        this._entries.push({\r\n            url: \"\",\r\n            sampleRate: 44100,\r\n            rootKey: 60,\r\n            percussion: false,\r\n            chipWaveLoopStart: null,\r\n            chipWaveLoopEnd: null,\r\n            chipWaveStartOffset: null,\r\n            chipWaveLoopMode: null,\r\n            chipWavePlayBackwards: false,\r\n        });\r\n        this._entryOptionsDisplayStates[entryIndex] = false;\r\n        this._reconfigureAddSampleButton();\r\n        this._render(true);\r\n    }\r\n\r\n    private _whenAddMultipleSamplesClicked = (event: Event): void => {\r\n        this._addSamplesArea.style.display = \"none\";\r\n        this._bulkAddArea.style.display = \"\";\r\n        this._bulkAddTextarea.value = \"\";\r\n    }\r\n\r\n    private _whenInstructionsLinkClicked = (event: Event): void => {\r\n        event.preventDefault();\r\n        this._addSamplesArea.style.display = \"none\";\r\n        this._instructionsArea.style.display = \"\";\r\n    }\r\n\r\n    private _whenCloseInstructionsButtonClicked = (event: Event): void => {\r\n        this._addSamplesArea.style.display = \"\";\r\n        this._instructionsArea.style.display = \"none\";\r\n    }\r\n\r\n    private _whenBulkAddConfirmClicked = (event: Event): void => {\r\n        this._addSamplesArea.style.display = \"\";\r\n        this._bulkAddArea.style.display = \"none\";\r\n        const parsed: ParsedEntries = this._parseURLs(\r\n            this._bulkAddTextarea.value\r\n                .replace(/\\n/g, \"|\")\r\n                .split(\"|\")\r\n                .map((x: string) => decodeURIComponent(x.trim()))\r\n                .filter((x: string) => x !== \"\")\r\n        );\r\n        const seen: Map<string, boolean> = new Map();\r\n        for (const entry of this._entries) {\r\n            seen.set(entry.url, true);\r\n        }\r\n        for (const entry of parsed.entries) {\r\n            if (this._entries.length >= this._maxSamples) break;\r\n            if (seen.has(entry.url)) continue;\r\n            seen.set(entry.url, true);\r\n            const entryIndex: number = this._entries.length;\r\n            this._entries.push(entry);\r\n            this._entryOptionsDisplayStates[entryIndex] = false;\r\n        }\r\n        this._reconfigureAddSampleButton();\r\n        this._render(false);\r\n    }\r\n\r\n    private _whenOptionsAreToggled = (event: Event): void => {\r\n        const element: HTMLDetailsElement = <HTMLDetailsElement>event.target;\r\n        const entryIndex: number = +(element.dataset.index!);\r\n        if (element.open) {\r\n            this._entryOptionsDisplayStates[entryIndex] = true;\r\n        } else {\r\n            this._entryOptionsDisplayStates[entryIndex] = false;\r\n        }\r\n    }\r\n\r\n    private _whenURLChanges = (event: Event): void => {\r\n        const element: HTMLInputElement = <HTMLInputElement>event.target;\r\n        const entryIndex: number = +(element.dataset.index!);\r\n        this._entries[entryIndex].url = element.value;\r\n        const sampleNameElement: HTMLDivElement | null | undefined = element.parentNode?.parentNode?.querySelector(\".add-sample-prompt-sample-name\");\r\n        if (sampleNameElement != null) {\r\n            const sampleName: string = this._getSampleName(this._entries[entryIndex]);\r\n            sampleNameElement.innerText = sampleName;\r\n            sampleNameElement.title = sampleName;\r\n        }\r\n    }\r\n\r\n    private _whenSampleRateChanges = (event: Event): void => {\r\n        const element: HTMLInputElement = <HTMLInputElement>event.target;\r\n        const entryIndex: number = +(element.dataset.index!);\r\n        if (element.value === \"\") {\r\n            this._entries[entryIndex].sampleRate = 44100;\r\n        } else {\r\n            this._entries[entryIndex].sampleRate = clamp(8000, 96000 + 1, +element.value);\r\n        }\r\n    }\r\n\r\n    private _whenRootKeyChanges = (event: Event): void => {\r\n        const element: HTMLInputElement = <HTMLInputElement>event.target;\r\n        const entryIndex: number = +(element.dataset.index!);\r\n        if (element.value === \"\") {\r\n            this._entries[entryIndex].rootKey = 60;\r\n        } else {\r\n            this._entries[entryIndex].rootKey = +element.value;\r\n        }\r\n        const rootKeyDisplay: HTMLSpanElement | null | undefined = element.parentNode?.parentNode?.querySelector(\".add-sample-prompt-root-key-display\");\r\n        if (rootKeyDisplay != null) {\r\n            const noteName: string = this._noteNameFromPitchNumber(this._entries[entryIndex].rootKey);\r\n            if (noteName !== \"\") {\r\n                rootKeyDisplay.innerText = `(${noteName})`;\r\n            }\r\n        }\r\n    }\r\n\r\n    private _whenPercussionChanges = (event: Event): void => {\r\n        const element: HTMLInputElement = <HTMLInputElement>event.target;\r\n        const entryIndex: number = +(element.dataset.index!);\r\n        this._entries[entryIndex].percussion = element.checked ? true : false;\r\n    }\r\n\r\n    private _whenChipWaveLoopStartChanges = (event: Event): void => {\r\n        const element: HTMLInputElement = <HTMLInputElement>event.target;\r\n        const entryIndex: number = +(element.dataset.index!);\r\n        if (element.value === \"\") {\r\n            this._entries[entryIndex].chipWaveLoopStart = null;\r\n        } else {\r\n            this._entries[entryIndex].chipWaveLoopStart = +element.value;\r\n        }\r\n    }\r\n\r\n    private _whenChipWaveLoopEndChanges = (event: Event): void => {\r\n        const element: HTMLInputElement = <HTMLInputElement>event.target;\r\n        const entryIndex: number = +(element.dataset.index!);\r\n        if (element.value === \"\") {\r\n            this._entries[entryIndex].chipWaveLoopEnd = null;\r\n        } else {\r\n            this._entries[entryIndex].chipWaveLoopEnd = +element.value;\r\n        }\r\n    }\r\n\r\n    private _whenChipWaveStartOffsetChanges = (event: Event): void => {\r\n        const element: HTMLInputElement = <HTMLInputElement>event.target;\r\n        const entryIndex: number = +(element.dataset.index!);\r\n        if (element.value === \"\") {\r\n            this._entries[entryIndex].chipWaveStartOffset = null;\r\n        } else {\r\n            this._entries[entryIndex].chipWaveStartOffset = +element.value;\r\n        }\r\n    }\r\n\r\n    private _whenChipWaveLoopModeChanges = (event: Event): void => {\r\n        const element: HTMLSelectElement = <HTMLSelectElement>event.target;\r\n        const entryIndex: number = +(element.dataset.index!);\r\n        const newValue: number = +element.value;\r\n        if (newValue === -1) {\r\n            this._entries[entryIndex].chipWaveLoopMode = null;\r\n        } else {\r\n            this._entries[entryIndex].chipWaveLoopMode = newValue;\r\n        }\r\n    }\r\n\r\n    private _whenChipWavePlayBackwardsChanges = (event: Event): void => {\r\n        const element: HTMLInputElement = <HTMLInputElement>event.target;\r\n        const entryIndex: number = +(element.dataset.index!);\r\n        const newValue: boolean = element.checked;\r\n        this._entries[entryIndex].chipWavePlayBackwards = newValue;\r\n    }\r\n\r\n    // @TODO: This is copy pasted from SongEditor, should probably be moved to\r\n    //        somewhere else that can be imported from both places.\r\n    private _copyTextToClipboard(text: string): void {\r\n        // Set as any to allow compilation without clipboard types (since, uh, I didn't write this bit and don't know the proper types library) -jummbus\r\n        let nav: any;\r\n        nav = navigator;\r\n\r\n        if (nav.clipboard && nav.clipboard.writeText) {\r\n            nav.clipboard.writeText(text).catch(() => {\r\n                window.prompt(\"Copy to clipboard:\", text);\r\n            });\r\n            return;\r\n        }\r\n        const textField: HTMLTextAreaElement = document.createElement(\"textarea\");\r\n        textField.textContent = text;\r\n        document.body.appendChild(textField);\r\n        textField.select();\r\n        const succeeded: boolean = document.execCommand(\"copy\");\r\n        textField.remove();\r\n        this.container.focus({ preventScroll: true });\r\n        if (!succeeded) window.prompt(\"Copy this:\", text);\r\n    }\r\n\r\n    private _whenCopyLinkPresetClicked = (event: Event): void => {\r\n        const element: HTMLButtonElement = <HTMLButtonElement>event.target;\r\n        const entryIndex: number = +(element.dataset.index!);\r\n        this._copyTextToClipboard(this._generateURLDataForEntry(this._entries[entryIndex]));\r\n    }\r\n\r\n    private _whenRemoveSampleClicked = (event: Event): void => {\r\n        const element: HTMLButtonElement = <HTMLButtonElement>event.target;\r\n        const entryIndex: number = +(element.dataset.index!);\r\n        this._entryOptionsDisplayStates[entryIndex] = false;\r\n        this._entries.splice(entryIndex, 1);\r\n        this._reconfigureAddSampleButton();\r\n        this._render(false);\r\n    }\r\n\r\n    private _whenMoveSampleUpClicked = (event: Event): void => {\r\n        const element: HTMLButtonElement = <HTMLButtonElement>event.target;\r\n        const entryIndex: number = +(element.dataset.index!);\r\n        const upEntryIndex: number = entryIndex - 1;\r\n        if (this._entries.length >= 2 && upEntryIndex >= 0) {\r\n            const upEntry: SampleEntry = this._entries[upEntryIndex];\r\n            const entry: SampleEntry = this._entries[entryIndex];\r\n            const upEntryOptionsVisibility: boolean = this._entryOptionsDisplayStates[upEntryIndex];\r\n            const entryOptionsVisibility: boolean = this._entryOptionsDisplayStates[entryIndex];\r\n            this._entries[upEntryIndex] = entry;\r\n            this._entries[entryIndex] = upEntry;\r\n            this._entryOptionsDisplayStates[upEntryIndex] = entryOptionsVisibility;\r\n            this._entryOptionsDisplayStates[entryIndex] = upEntryOptionsVisibility;\r\n            this._render(false);\r\n        }\r\n    }\r\n\r\n    private _whenMoveSampleDownClicked = (event: Event): void => {\r\n        const element: HTMLButtonElement = <HTMLButtonElement>event.target;\r\n        const entryIndex: number = +(element.dataset.index!);\r\n        const downEntryIndex: number = entryIndex + 1;\r\n        if (this._entries.length >= 2 && downEntryIndex < this._entries.length) {\r\n            const downEntry: SampleEntry = this._entries[downEntryIndex];\r\n            const entry: SampleEntry = this._entries[entryIndex];\r\n            const downEntryOptionsVisibility: boolean = this._entryOptionsDisplayStates[downEntryIndex];\r\n            const entryOptionsVisibility: boolean = this._entryOptionsDisplayStates[entryIndex];\r\n            this._entries[downEntryIndex] = entry;\r\n            this._entries[entryIndex] = downEntry;\r\n            this._entryOptionsDisplayStates[downEntryIndex] = entryOptionsVisibility;\r\n            this._entryOptionsDisplayStates[entryIndex] = downEntryOptionsVisibility;\r\n            this._render(false);\r\n        }\r\n    }\r\n\r\n    private _reconfigureAddSampleButton = (): void => {\r\n        if (this._entries.length >= this._maxSamples) {\r\n            this._addSampleButton.style.display = \"none\";\r\n        } else {\r\n            this._addSampleButton.style.display = \"\";\r\n        }\r\n    }\r\n\r\n    private _parseURLs = (urls: string[]): ParsedEntries => {\r\n        // @TODO: Duplicated code like this isn't great (in this case coming from Song.fromBase64String).\r\n        function sliceForSampleRate(url: string): [string, number] {\r\n            const newUrl = url.slice(0, url.indexOf(\",\"));\r\n            const sampleRate = clamp(8000, 96000 + 1, parseFloat(url.slice(url.indexOf(\",\") + 1)));\r\n            return [newUrl, sampleRate];\r\n        }\r\n        function sliceForRootKey(url: string): [string, number] {\r\n            const newUrl = url.slice(0, url.indexOf(\"!\"));\r\n            const rootKey = parseFloat(url.slice(url.indexOf(\"!\") + 1));\r\n            return [newUrl, rootKey];\r\n        }\r\n        let useLegacySamples: boolean = false;\r\n        let useNintariboxSamples: boolean = false;\r\n        let useMarioPaintboxSamples: boolean = false;\r\n        const parsedEntries: SampleEntry[] = [];\r\n        for (const url of urls) {\r\n            if (url === \"\") continue;\r\n            if (url.toLowerCase() === \"legacysamples\") {\r\n                if (!useLegacySamples) {\r\n                    parsedEntries.push({\r\n                        url: \"legacySamples\",\r\n                        sampleRate: 44100,\r\n                        rootKey: 60,\r\n                        percussion: false,\r\n                        chipWaveLoopStart: null,\r\n                        chipWaveLoopEnd: null,\r\n                        chipWaveStartOffset: null,\r\n                        chipWaveLoopMode: null,\r\n                        chipWavePlayBackwards: false,\r\n                    });\r\n                }\r\n                useLegacySamples = true;\r\n            } else if (url.toLowerCase() === \"nintariboxsamples\") {\r\n                if (!useNintariboxSamples) {\r\n                    parsedEntries.push({\r\n                        url: \"nintariboxSamples\",\r\n                        sampleRate: 44100,\r\n                        rootKey: 60,\r\n                        percussion: false,\r\n                        chipWaveLoopStart: null,\r\n                        chipWaveLoopEnd: null,\r\n                        chipWaveStartOffset: null,\r\n                        chipWaveLoopMode: null,\r\n                        chipWavePlayBackwards: false,\r\n                    });\r\n                }\r\n                useNintariboxSamples = true;\r\n            } else if (url.toLowerCase() === \"mariopaintboxsamples\") {\r\n                if (!useMarioPaintboxSamples) {\r\n                    parsedEntries.push({\r\n                        url: \"marioPaintboxSamples\",\r\n                        sampleRate: 44100,\r\n                        rootKey: 60,\r\n                        percussion: false,\r\n                        chipWaveLoopStart: null,\r\n                        chipWaveLoopEnd: null,\r\n                        chipWaveStartOffset: null,\r\n                        chipWaveLoopMode: null,\r\n                        chipWavePlayBackwards: false,\r\n                    });\r\n                }\r\n                useMarioPaintboxSamples = true;\r\n            } else {\r\n                let urlSliced: string = url;\r\n                let sampleRate: number = 44100;\r\n                let rootKey: number = 60;\r\n                let percussion: boolean = false;\r\n                let chipWaveLoopStart: number | null = null;\r\n                let chipWaveLoopEnd: number | null = null;\r\n                let chipWaveStartOffset: number | null = null;\r\n                let chipWaveLoopMode: number | null = null;\r\n                let chipWavePlayBackwards: boolean = false;\r\n                let optionsStartIndex: number = url.indexOf(\"!\");\r\n                let optionsEndIndex: number = -1;\r\n                let parsedSampleOptions: boolean = false;\r\n                if (optionsStartIndex === 0) {\r\n                    optionsEndIndex = url.indexOf(\"!\", optionsStartIndex + 1);\r\n                    if (optionsEndIndex !== -1) {\r\n                        const rawOptions: string[] = url.slice(optionsStartIndex + 1, optionsEndIndex).split(\",\");\r\n                        for (const rawOption of rawOptions) {\r\n                            const optionCode: string = rawOption.charAt(0);\r\n                            const optionData: string = rawOption.slice(1, rawOption.length);\r\n                            if (optionCode === \"s\") {\r\n                                sampleRate = clamp(8000, 96000 + 1, parseFloat(optionData));\r\n                            } else if (optionCode === \"r\") {\r\n                                rootKey = parseFloat(optionData);\r\n                            } else if (optionCode === \"p\") {\r\n                                percussion = true;\r\n                            } else if (optionCode === \"a\") {\r\n                                chipWaveLoopStart = parseInt(optionData);\r\n                            } else if (optionCode === \"b\") {\r\n                                chipWaveLoopEnd = parseInt(optionData);\r\n                            } else if (optionCode === \"c\") {\r\n                                chipWaveStartOffset = parseInt(optionData);\r\n                            } else if (optionCode === \"d\") {\r\n                                chipWaveLoopMode = parseInt(optionData);\r\n                            } else if (optionCode === \"e\") {\r\n                                chipWavePlayBackwards = true;\r\n                            }\r\n                        }\r\n                        urlSliced = url.slice(optionsEndIndex + 1, url.length);\r\n                        parsedSampleOptions = true;\r\n                    }\r\n                }\r\n                if (!parsedSampleOptions) {\r\n                    if (url.indexOf(\"@\") != -1) {\r\n                        urlSliced = url.replaceAll(\"@\", \"\");\r\n                        percussion = true;\r\n                    }\r\n                    if (url.indexOf(\",\") != -1 && url.indexOf(\"!\") != -1) {\r\n                        if (url.indexOf(\",\") < url.indexOf(\"!\")) {\r\n                            [urlSliced, rootKey] = sliceForRootKey(urlSliced);\r\n                            [urlSliced, sampleRate] = sliceForSampleRate(urlSliced);\r\n                        }\r\n                        else {\r\n                            [urlSliced, sampleRate] = sliceForSampleRate(urlSliced);\r\n                            [urlSliced, rootKey] = sliceForRootKey(urlSliced);\r\n                        }\r\n                    }\r\n                    else {\r\n                        if (url.indexOf(\",\") != -1) {\r\n                            [urlSliced, sampleRate] = sliceForSampleRate(urlSliced);\r\n                        }\r\n                        if (url.indexOf(\"!\") != -1) {\r\n                            [urlSliced, rootKey] = sliceForRootKey(urlSliced);\r\n                        }\r\n                    }\r\n                }\r\n                parsedEntries.push({\r\n                    url: urlSliced,\r\n                    sampleRate: sampleRate,\r\n                    rootKey: rootKey,\r\n                    percussion: percussion,\r\n                    chipWaveLoopStart: chipWaveLoopStart,\r\n                    chipWaveLoopEnd: chipWaveLoopEnd,\r\n                    chipWaveStartOffset: chipWaveStartOffset,\r\n                    chipWaveLoopMode: chipWaveLoopMode,\r\n                    chipWavePlayBackwards: chipWavePlayBackwards,\r\n                });\r\n            }\r\n        }\r\n        return { entries: parsedEntries };\r\n    }\r\n\r\n    private _generateURLDataForEntry = (entry: SampleEntry): string => {\r\n        const url: string = entry.url.trim();\r\n        const sampleRate: number = entry.sampleRate;\r\n        const rootKey: number = entry.rootKey;\r\n        const percussion: boolean = entry.percussion;\r\n        const chipWaveLoopStart: number | null = entry.chipWaveLoopStart;\r\n        const chipWaveLoopEnd: number | null = entry.chipWaveLoopEnd;\r\n        const chipWaveStartOffset: number | null = entry.chipWaveStartOffset;\r\n        const chipWaveLoopMode: number | null = entry.chipWaveLoopMode;\r\n        const chipWavePlayBackwards: boolean = entry.chipWavePlayBackwards;\r\n        const urlInLowerCase: string = url.toLowerCase();\r\n        const isBundledSamplePack: boolean = (\r\n            urlInLowerCase === \"legacysamples\"\r\n            || urlInLowerCase === \"nintariboxsamples\"\r\n            || urlInLowerCase === \"mariopaintboxsamples\"\r\n        );\r\n        const options: string[] = [];\r\n        if (sampleRate !== 44100) options.push(\"s\" + sampleRate);\r\n        if (rootKey !== 60) options.push(\"r\" + rootKey);\r\n        if (percussion) options.push(\"p\");\r\n        if (chipWaveLoopStart != null) options.push(\"a\" + chipWaveLoopStart);\r\n        if (chipWaveLoopEnd != null) options.push(\"b\" + chipWaveLoopEnd);\r\n        if (chipWaveStartOffset != null) options.push(\"c\" + chipWaveStartOffset);\r\n        if (chipWaveLoopMode != null) options.push(\"d\" + chipWaveLoopMode);\r\n        if (chipWavePlayBackwards) options.push(\"e\");\r\n        if (isBundledSamplePack || options.length <= 0) {\r\n            return url;\r\n        } else {\r\n            return \"!\" + options.join(\",\") + \"!\" + url;\r\n        }\r\n    }\r\n\r\n    private _generateURLData = (): string => {\r\n        let output = \"\";\r\n        for (const entry of this._entries) {\r\n            const url: string = entry.url.trim();\r\n            if (url === \"\") continue;\r\n            output += \"|\" + this._generateURLDataForEntry(entry);\r\n        }\r\n        return output;\r\n    }\r\n\r\n    private _getSampleName = (entry: SampleEntry): string => {\r\n        try {\r\n            const parsedUrl: URL = new URL(entry.url);\r\n            return decodeURIComponent(parsedUrl.pathname.replace(/^([^\\/]*\\/)+/, \"\"));\r\n        } catch (error) {\r\n            return entry.url;\r\n        }\r\n    }\r\n\r\n    private _noteNameFromPitchNumber = (n: number): string => {\r\n        function wrap(x: number, b: number): number {\r\n            return (x % b + b) % b;\r\n        }\r\n        n = Math.floor(n) - 12;\r\n        const pitchNameIndex: number = wrap(n + Config.keys[this._doc.song.key].basePitch, Config.pitchesPerOctave);\r\n        let pitch: string = \"\";\r\n        if (Config.keys[pitchNameIndex].isWhiteKey) {\r\n            pitch = Config.keys[pitchNameIndex].name;\r\n        }\r\n        else {\r\n            const shiftDir: number = Config.blackKeyNameParents[wrap(n, Config.pitchesPerOctave)];\r\n            pitch = Config.keys[wrap(pitchNameIndex + Config.pitchesPerOctave + shiftDir, Config.pitchesPerOctave)].name;\r\n            if (shiftDir == 1) {\r\n                pitch += \"♭\";\r\n            }\r\n            else if (shiftDir == -1) {\r\n                pitch += \"♯\";\r\n            }\r\n        }\r\n        pitch += Math.floor(n / Config.pitchesPerOctave);\r\n        return pitch;\r\n    }\r\n\r\n    private _render = (scrollToBottom: boolean): void => {\r\n        // @TODO: This is very much not efficient. The slowness here\r\n        // isn't harmless if more samples are to be allowed.\r\n        while (this._entryContainer.firstChild !== null) {\r\n            this._entryContainer.removeChild(this._entryContainer.firstChild);\r\n        }\r\n        for (let entryIndex: number = 0; entryIndex < this._entries.length; entryIndex++) {\r\n            const canMoveUp: boolean = this._entries.length >= 2 && entryIndex > 0;\r\n            const canMoveDown: boolean = this._entries.length >= 2 && entryIndex < this._entries.length - 1;\r\n            const entry: SampleEntry = this._entries[entryIndex];\r\n            const optionsVisible: boolean = Boolean(this._entryOptionsDisplayStates[entryIndex]);\r\n            const urlInput: HTMLInputElement = input({ style: \"flex-grow: 1; margin-left: 1em; width: 100%;\", value: entry.url });\r\n            const sampleRateStepper: HTMLInputElement = input({ style: \"flex-grow: 1; margin-left: 1em; width: 100%;\", type: \"number\", value: \"\" + entry.sampleRate, min: \"8000\", max: \"96000\", step: \"1\" });\r\n            const rootKeyStepper: HTMLInputElement = input({ style: \"flex-grow: 1; margin-left: 1em; width: 100%;\", type: \"number\", value: \"\" + entry.rootKey, min: \"0\", max: Config.maxPitch + Config.pitchesPerOctave, step: \"1\" });\r\n            const rootKeyDisplay: HTMLSpanElement = span({ class: \"add-sample-prompt-root-key-display\", style: \"margin-left: 0.4em; width: 3em; text-align: left; text-overflow: ellipsis; overflow: hidden; flex-shrink: 0;\" }, `(${this._noteNameFromPitchNumber(entry.rootKey)})`);\r\n            const percussionBox: HTMLInputElement = input({ style: \"width: 1em; margin-left: 1em;\", type: \"checkbox\" });\r\n            const chipWaveLoopStartStepper: HTMLInputElement = input({ style: \"flex-grow: 1; margin-left: 1em; width: 100%;\", type: \"number\", value: \"\" + (entry.chipWaveLoopStart != null ? entry.chipWaveLoopStart : \"\"), min: \"0\", step: \"1\" });\r\n            const chipWaveLoopEndStepper: HTMLInputElement = input({ style: \"flex-grow: 1; margin-left: 1em; width: 100%;\", type: \"number\", value: \"\" + (entry.chipWaveLoopEnd != null ? entry.chipWaveLoopEnd : \"\"), min: \"0\", step: \"1\" });\r\n            const chipWaveStartOffsetStepper: HTMLInputElement = input({ style: \"flex-grow: 1; margin-left: 1em; width: 100%;\", type: \"number\", value: \"\" + (entry.chipWaveStartOffset != null ? entry.chipWaveStartOffset : \"\"), min: \"0\", step: \"1\" });\r\n            const chipWaveLoopModeSelect: HTMLSelectElement = select({ style: \"width: 100%; flex-grow: 1; margin-left: 0.5em;\" },\r\n                option({ value: -1 }, \"\"),\r\n                option({ value: 0 }, \"Loop\"),\r\n                option({ value: 1 }, \"Ping-Pong\"),\r\n                option({ value: 2 }, \"Play Once\"),\r\n                option({ value: 3 }, \"Play Loop Once\"),\r\n            );\r\n            if (entry.chipWaveLoopMode != null) {\r\n                chipWaveLoopModeSelect.value = \"\" + entry.chipWaveLoopMode;\r\n            }\r\n            const chipWavePlayBackwardsBox: HTMLInputElement = input({ type: \"checkbox\", style: \"width: 1em; padding: 0; margin-left: auto; margin-right: auto;\" });\r\n            chipWavePlayBackwardsBox.checked = entry.chipWavePlayBackwards;\r\n            const sampleName: string = this._getSampleName(entry);\r\n            percussionBox.checked = entry.percussion;\r\n            const copyLinkPresetButton: HTMLButtonElement = button({ style: \"height: auto; min-height: var(--button-size);\", title: \"For use with \\\"Add multiple samples\\\"\" }, \"Copy link preset\");\r\n            const removeButton: HTMLButtonElement = button({ style: \"height: auto; min-height: var(--button-size); margin-left: 0.5em;\" }, \"Remove\");\r\n            const moveUpButton: HTMLButtonElement = button({ style: \"height: auto; min-height: var(--button-size); margin-left: 0.5em;\" }, SVG.svg({ width: \"16\", height: \"16\", viewBox: \"-13 -14 26 26\", \"pointer-events\": \"none\", style: \"width: 100%; height: 100%;\" }, SVG.path({ d: \"M -6 6 L 0 -6 L 6 6 z\", fill: ColorConfig.primaryText })));\r\n            const moveDownButton: HTMLButtonElement = button({ style: \"height: auto; min-height: var(--button-size); margin-left: 0.5em;\" }, SVG.svg({ width: \"16\", height: \"16\", viewBox: \"-13 -14 26 26\", \"pointer-events\": \"none\", style: \"width: 100%; height: 100%;\" }, SVG.path({ d: \"M -6 -6 L 6 -6 L 0 6 z\", fill: ColorConfig.primaryText })));\r\n            const optionsContainer: HTMLDetailsElement = details(\r\n                { open: optionsVisible },\r\n                summary({ style: \"margin-bottom: 0.5em;\" }, \"Options\"),\r\n                div({ style: \"display: flex; flex-direction: row; align-items: center; justify-content: flex-end; margin-bottom: 0.5em;\" },\r\n                    div({ style: `flex-shrink: 0; :text-align: right; color: ${ColorConfig.primaryText};` }, span({ title: \"What rate to resample to\" }, \"Sample rate\")),\r\n                    sampleRateStepper\r\n                ),\r\n                div({ style: \"display: flex; flex-direction: row; align-items: center; justify-content: flex-end; margin-bottom: 0.5em;\" },\r\n                    div({ style: `text-align: right; color: ${ColorConfig.primaryText}; flex-shrink: 0;` }, span({ title: \"Pitch where the sample is played as-is\" }, \"Root key\")),\r\n                    rootKeyDisplay,\r\n                    rootKeyStepper\r\n                ),\r\n                div({ style: \"display: flex; flex-direction: row; align-items: center; justify-content: space-between; margin-bottom: 0.5em;\" },\r\n                    div({ style: `text-align: right; color: ${ColorConfig.primaryText};` }, \"Percussion (pitch doesn't change with key)\"),\r\n                    percussionBox\r\n                ),\r\n                div({ style: \"display: flex; flex-direction: row; align-items: center; justify-content: flex-end; margin-bottom: 0.5em;\" },\r\n                    div({ style: `flex-shrink: 0; text-align: right; color: ${ColorConfig.primaryText};` }, span({ title: \"Applies to the \\\"Loop Start\\\" loop control option of the preset created for this sample\" }, \"Loop Start\")),\r\n                    chipWaveLoopStartStepper\r\n                ),\r\n                div({ style: \"display: flex; flex-direction: row; align-items: center; justify-content: flex-end; margin-bottom: 0.5em;\" },\r\n                    div({ style: `flex-shrink: 0; text-align: right; color: ${ColorConfig.primaryText};` }, span({ title: \"Applies to the \\\"Loop End\\\" loop control option of the preset created for this sample\" }, \"Loop End\")),\r\n                    chipWaveLoopEndStepper\r\n                ),\r\n                div({ style: \"display: flex; flex-direction: row; align-items: center; justify-content: flex-end; margin-bottom: 0.5em;\" },\r\n                    div({ style: `flex-shrink: 0; text-align: right; color: ${ColorConfig.primaryText};` }, span({ title: \"Applies to the \\\"Offset\\\" loop control option of the preset created for this sample\" }, \"Sample Start Offset\")),\r\n                    chipWaveStartOffsetStepper\r\n                ),\r\n                div({ style: \"display: flex; flex-direction: row; align-items: center; justify-content: flex-end; margin-bottom: 0.5em;\" },\r\n                    div({ style: `flex-shrink: 0; text-align: right; color: ${ColorConfig.primaryText};` }, span({ title: \"Applies to the \\\"Loop Mode\\\" loop control option of the preset created for this sample\" }, \"Loop Mode\")),\r\n                    chipWaveLoopModeSelect\r\n                ),\r\n                div({ style: \"display: flex; flex-direction: row; align-items: center; justify-content: flex-end; margin-bottom: 0.5em;\" },\r\n                    div({ style: `flex-shrink: 0; text-align: right; color: ${ColorConfig.primaryText};` }, span({ title: \"Applies to the \\\"Backwards\\\" loop control option of the preset created for this sample\" }, \"Backwards\")),\r\n                    chipWavePlayBackwardsBox\r\n                ),\r\n            );\r\n            urlInput.dataset.index = \"\" + entryIndex;\r\n            sampleRateStepper.dataset.index = \"\" + entryIndex;\r\n            rootKeyStepper.dataset.index = \"\" + entryIndex;\r\n            percussionBox.dataset.index = \"\" + entryIndex;\r\n            chipWaveLoopStartStepper.dataset.index = \"\" + entryIndex;\r\n            chipWaveLoopEndStepper.dataset.index = \"\" + entryIndex;\r\n            chipWaveStartOffsetStepper.dataset.index = \"\" + entryIndex;\r\n            chipWaveLoopModeSelect.dataset.index = \"\" + entryIndex;\r\n            chipWavePlayBackwardsBox.dataset.index = \"\" + entryIndex;\r\n            copyLinkPresetButton.dataset.index = \"\" + entryIndex;\r\n            removeButton.dataset.index = \"\" + entryIndex;\r\n            moveUpButton.dataset.index = \"\" + entryIndex;\r\n            moveDownButton.dataset.index = \"\" + entryIndex;\r\n            optionsContainer.dataset.index = \"\" + entryIndex;\r\n            const bottomButtons: HTMLDivElement = div({ style: \"display: flex; flex-direction: row; align-items: center; justify-content: flex-end;\" }, copyLinkPresetButton, removeButton);\r\n            if (canMoveUp) {\r\n                bottomButtons.appendChild(moveUpButton);\r\n            }\r\n            if (canMoveDown) {\r\n                bottomButtons.appendChild(moveDownButton);\r\n            }\r\n            const entryElement: HTMLDivElement = div({ style: `padding: 0.6em; margin: 0.4em; border: 1px solid ${ColorConfig.uiWidgetBackground}; border-radius: 4px;` },\r\n                div({\r\n                    class: \"add-sample-prompt-sample-name\",\r\n                    style: `margin-bottom: 0.5em; color: ${ColorConfig.secondaryText}; text-overflow: ellipsis; overflow: hidden; white-space: nowrap;`,\r\n                    title: sampleName,\r\n                },\r\n                    sampleName\r\n                ),\r\n                div({ style: \"display: flex; flex-direction: row; align-items: center; justify-content: flex-end; margin-bottom: 0.5em;\" },\r\n                    div({ style: `text-align: right; color: ${ColorConfig.primaryText};` }, \"URL\"),\r\n                    urlInput\r\n                ),\r\n                optionsContainer,\r\n                bottomButtons\r\n            );\r\n            optionsContainer.addEventListener(\"toggle\", this._whenOptionsAreToggled);\r\n            urlInput.addEventListener(\"change\", this._whenURLChanges);\r\n            sampleRateStepper.addEventListener(\"change\", this._whenSampleRateChanges);\r\n            rootKeyStepper.addEventListener(\"change\", this._whenRootKeyChanges);\r\n            percussionBox.addEventListener(\"change\", this._whenPercussionChanges);\r\n            chipWaveLoopStartStepper.addEventListener(\"change\", this._whenChipWaveLoopStartChanges);\r\n            chipWaveLoopEndStepper.addEventListener(\"change\", this._whenChipWaveLoopEndChanges);\r\n            chipWaveStartOffsetStepper.addEventListener(\"change\", this._whenChipWaveStartOffsetChanges);\r\n            chipWaveLoopModeSelect.addEventListener(\"change\", this._whenChipWaveLoopModeChanges);\r\n            chipWavePlayBackwardsBox.addEventListener(\"change\", this._whenChipWavePlayBackwardsChanges);\r\n            copyLinkPresetButton.addEventListener(\"click\", this._whenCopyLinkPresetClicked);\r\n            removeButton.addEventListener(\"click\", this._whenRemoveSampleClicked);\r\n            if (canMoveUp) {\r\n                moveUpButton.addEventListener(\"click\", this._whenMoveSampleUpClicked);\r\n            }\r\n            if (canMoveDown) {\r\n                moveDownButton.addEventListener(\"click\", this._whenMoveSampleDownClicked);\r\n            }\r\n            this._entryContainer.appendChild(entryElement);\r\n            const thisIsTheLastElement: boolean = entryIndex === this._entries.length - 1;\r\n            if (scrollToBottom && thisIsTheLastElement) {\r\n                entryElement.scrollIntoView({ \"block\": \"nearest\", \"inline\": \"nearest\" });\r\n            }\r\n        }\r\n    }\r\n}\r\n","// Copyright (c) 2012-2022 John Nesky and contributing authors, distributed under the MIT license, see accompanying the LICENSE.md file.\r\n\r\n//import {Layout} from \"./Layout\";\r\nimport { sampleLoadEvents, SampleLoadedEvent, InstrumentType, EffectType, Config, effectsIncludeTransition, effectsIncludeChord, effectsIncludePitchShift, effectsIncludeDetune, effectsIncludeVibrato, effectsIncludeNoteFilter, effectsIncludeDistortion, effectsIncludeBitcrusher, effectsIncludePanning, effectsIncludeChorus, effectsIncludeEcho, effectsIncludeReverb, DropdownID } from \"../synth/SynthConfig\";\r\nimport { BarScrollBar } from \"./BarScrollBar\";\r\nimport { BeatsPerBarPrompt } from \"./BeatsPerBarPrompt\";\r\nimport { Change, ChangeGroup } from \"./Change\";\r\nimport { ChannelSettingsPrompt } from \"./ChannelSettingsPrompt\";\r\nimport { ColorConfig, ChannelColors } from \"./ColorConfig\";\r\nimport { CustomChipPrompt } from \"./CustomChipPrompt\";\r\nimport { CustomFilterPrompt } from \"./CustomFilterPrompt\";\r\nimport { EditorConfig, isMobile, prettyNumber, Preset, PresetCategory } from \"./EditorConfig\";\r\nimport { EuclideanRhythmPrompt } from \"./EuclidgenRhythmPrompt\";\r\nimport { ExportPrompt } from \"./ExportPrompt\";\r\nimport \"./Layout\"; // Imported here for the sake of ensuring this code is transpiled early.\r\nimport { Instrument, Channel, Synth } from \"../synth/synth\";\r\nimport { HTML, SVG } from \"imperative-html/dist/esm/elements-strict\";\r\nimport { Preferences } from \"./Preferences\";\r\nimport { HarmonicsEditor } from \"./HarmonicsEditor\";\r\nimport { InputBox, Slider } from \"./HTMLWrapper\";\r\nimport { ImportPrompt } from \"./ImportPrompt\";\r\nimport { LayoutPrompt } from \"./LayoutPrompt\";\r\nimport { EnvelopeEditor } from \"./EnvelopeEditor\";\r\nimport { FadeInOutEditor } from \"./FadeInOutEditor\";\r\nimport { FilterEditor } from \"./FilterEditor\";\r\nimport { LimiterPrompt } from \"./LimiterPrompt\";\r\nimport { CustomScalePrompt } from \"./CustomScalePrompt\";\r\nimport { LoopEditor } from \"./LoopEditor\";\r\nimport { MoveNotesSidewaysPrompt } from \"./MoveNotesSidewaysPrompt\";\r\nimport { MuteEditor } from \"./MuteEditor\";\r\nimport { OctaveScrollBar } from \"./OctaveScrollBar\";\r\nimport { MidiInputHandler } from \"./MidiInput\";\r\nimport { KeyboardLayout } from \"./KeyboardLayout\";\r\nimport { PatternEditor } from \"./PatternEditor\";\r\nimport { Piano } from \"./Piano\";\r\nimport { Prompt } from \"./Prompt\";\r\nimport { SongDocument } from \"./SongDocument\";\r\nimport { SongDurationPrompt } from \"./SongDurationPrompt\";\r\nimport { SongRecoveryPrompt } from \"./SongRecoveryPrompt\";\r\nimport { RecordingSetupPrompt } from \"./RecordingSetupPrompt\";\r\nimport { SpectrumEditor } from \"./SpectrumEditor\";\r\nimport { CustomPrompt } from \"./CustomPrompt\";\r\nimport { ThemePrompt } from \"./ThemePrompt\";\r\nimport { TipPrompt } from \"./TipPrompt\";\r\nimport { ChangeTempo, ChangeKeyOctave, ChangeChorus, ChangeEchoDelay, ChangeEchoSustain, ChangeReverb, ChangeVolume, ChangePan, ChangePatternSelection, ChangePatternsPerChannel, ChangePatternNumbers, ChangePulseWidth, ChangeFeedbackAmplitude, ChangeOperatorAmplitude, ChangeOperatorFrequency, ChangeDrumsetEnvelope, ChangePasteInstrument, ChangePreset, pickRandomPresetValue, ChangeRandomGeneratedInstrument, ChangeEQFilterType, ChangeNoteFilterType, ChangeEQFilterSimpleCut, ChangeEQFilterSimplePeak, ChangeNoteFilterSimpleCut, ChangeNoteFilterSimplePeak, ChangeScale, ChangeDetectKey, ChangeKey, ChangeRhythm, ChangeFeedbackType, ChangeAlgorithm, ChangeChipWave, ChangeNoiseWave, ChangeTransition, ChangeToggleEffects, ChangeVibrato, ChangeUnison, ChangeChord, ChangeSong, ChangePitchShift, ChangeDetune, ChangeDistortion, ChangeStringSustain, ChangeBitcrusherFreq, ChangeBitcrusherQuantization, ChangeAddEnvelope, ChangeAddChannelInstrument, ChangeRemoveChannelInstrument, ChangeCustomWave, ChangeOperatorWaveform, ChangeOperatorPulseWidth, ChangeSongTitle, ChangeVibratoDepth, ChangeVibratoSpeed, ChangeVibratoDelay, ChangeVibratoType, ChangePanDelay, ChangeArpeggioSpeed, ChangeFastTwoNoteArp, ChangeClicklessTransition, ChangeAliasing, ChangeChipWavePlayBackwards, ChangeChipWaveStartOffset, ChangeChipWaveLoopEnd, ChangeChipWaveLoopStart, ChangeChipWaveLoopMode, ChangeChipWaveUseAdvancedLoopControls } from \"./changes\";\r\nimport { Change6OpFeedbackType, Change6OpAlgorithm, ChangeCustomAlgorythmorFeedback} from \"./changes\"\r\n\r\nimport { TrackEditor } from \"./TrackEditor\";\r\nimport {oscilascopeCanvas} from \"../global/Oscilascope\";\r\nimport { VisualLoopControlsPrompt } from \"./VisualLoopControlsPrompt\";\r\nimport { SampleLoadingStatusPrompt } from \"./SampleLoadingStatusPrompt\";\r\nimport { AddSamplesPrompt } from \"./AddSamplesPrompt\";\r\n\r\nconst { button, div, input, select, span, optgroup, option, canvas } = HTML;\r\n\r\nfunction buildOptions(menu: HTMLSelectElement, items: ReadonlyArray<string | number>): HTMLSelectElement {\r\n    for (let index: number = 0; index < items.length; index++) {\r\n        menu.appendChild(option({ value: index }, items[index]));\r\n    }\r\n    return menu;\r\n}\r\n\r\n// Similar to the above, but adds a non-interactive header to the list.\r\n// @jummbus: Honestly not necessary with new HTML options interface, but not exactly necessary to change either!\r\n\r\nfunction buildHeaderedOptions(header: string, menu: HTMLSelectElement, items: ReadonlyArray<string | number>): HTMLSelectElement {\r\n    menu.appendChild(option({ selected: true, disabled: true, value: header }, header));\r\n\r\n    for (const item of items) {\r\n        menu.appendChild(option({ value: item }, item));\r\n    }\r\n    return menu;\r\n}\r\n\r\nfunction buildPresetOptions(isNoise: boolean, idSet: string): HTMLSelectElement {\r\n    const menu: HTMLSelectElement = select({ id: idSet });\r\n\r\n\r\n    // Show the \"spectrum\" custom type in both pitched and noise channels.\r\n    //const customTypeGroup: HTMLElement = optgroup({label: EditorConfig.presetCategories[0].name});\r\n    if (isNoise) {\r\n        menu.appendChild(option({ value: InstrumentType.noise }, EditorConfig.valueToPreset(InstrumentType.noise)!.name));\r\n        menu.appendChild(option({ value: InstrumentType.spectrum }, EditorConfig.valueToPreset(InstrumentType.spectrum)!.name));\r\n        menu.appendChild(option({ value: InstrumentType.drumset }, EditorConfig.valueToPreset(InstrumentType.drumset)!.name));\r\n    } else {\r\n        menu.appendChild(option({ value: InstrumentType.chip }, EditorConfig.valueToPreset(InstrumentType.chip)!.name));\r\n        menu.appendChild(option({ value: InstrumentType.pwm }, EditorConfig.valueToPreset(InstrumentType.pwm)!.name));\r\n        menu.appendChild(option({ value: InstrumentType.harmonics }, EditorConfig.valueToPreset(InstrumentType.harmonics)!.name));\r\n        menu.appendChild(option({ value: InstrumentType.pickedString }, EditorConfig.valueToPreset(InstrumentType.pickedString)!.name));\r\n        menu.appendChild(option({ value: InstrumentType.spectrum }, EditorConfig.valueToPreset(InstrumentType.spectrum)!.name));\r\n        menu.appendChild(option({ value: InstrumentType.fm }, EditorConfig.valueToPreset(InstrumentType.fm)!.name));\r\n        menu.appendChild(option({ value: InstrumentType.customChipWave }, EditorConfig.valueToPreset(InstrumentType.customChipWave)!.name));\r\n        menu.appendChild(option({ value: InstrumentType.fm6op }, EditorConfig.instrumentToPreset(InstrumentType.fm6op)!.name));\r\n    }\r\n\r\n    const randomGroup: HTMLElement = optgroup({ label: \"Randomize ▾\" });\r\n    randomGroup.appendChild(option({ value: \"randomPreset\" }, \"Random Preset\"));\r\n    randomGroup.appendChild(option({ value: \"randomGenerated\" }, \"Random Generated\"));\r\n    menu.appendChild(randomGroup);\r\n\r\n    let firstCategoryGroup: HTMLElement | null = null;\r\n    let customSampleCategoryGroup: HTMLElement | null = null;\r\n\r\n    for (let categoryIndex: number = 1; categoryIndex < EditorConfig.presetCategories.length; categoryIndex++) {\r\n        const category: PresetCategory = EditorConfig.presetCategories[categoryIndex];\r\n        const group: HTMLElement = optgroup({ label: category.name + \" ▾\" });\r\n        let foundAny: boolean = false;\r\n        for (let presetIndex: number = 0; presetIndex < category.presets.length; presetIndex++) {\r\n            const preset: Preset = category.presets[presetIndex];\r\n            if ((preset.isNoise == true) == isNoise) {\r\n                group.appendChild(option({ value: (categoryIndex << 6) + presetIndex }, preset.name));\r\n                foundAny = true;\r\n            }\r\n        }\r\n\r\n        if (categoryIndex === 1 && foundAny) {\r\n            firstCategoryGroup = group;\r\n        } else if (category.name === \"Custom Sample Presets\" && foundAny) {\r\n            customSampleCategoryGroup = group;\r\n        }\r\n\r\n        // Need to re-sort some elements for readability. Can't just do this in the menu, because indices are saved in URLs and would get broken if the ordering actually changed.\r\n        if (category.name == \"String Presets\" && foundAny) {\r\n\r\n            // Put violin 2 after violin 1\r\n            let moveViolin2 = group.removeChild(group.children[11]);\r\n            group.insertBefore(moveViolin2, group.children[1]);\r\n        }\r\n\r\n        if (category.name == \"Flute Presets\" && foundAny) {\r\n\r\n            // Put flute 2 after flute 1\r\n            let moveFlute2 = group.removeChild(group.children[11]);\r\n            group.insertBefore(moveFlute2, group.children[1]);\r\n        }\r\n\r\n        if (category.name == \"Keyboard Presets\" && foundAny) {\r\n\r\n            // Put grand piano 2 after grand piano 1\r\n            let moveGrandPiano2 = group.removeChild(group.children[9]);\r\n            group.insertBefore(moveGrandPiano2, group.children[1]);\r\n        }\r\n\r\n        if (foundAny) menu.appendChild(group);\r\n    }\r\n\r\n    if (firstCategoryGroup != null && customSampleCategoryGroup != null) {\r\n        // Put the custom sample presets at the top.\r\n        const parent: HTMLSelectElement = <HTMLSelectElement>customSampleCategoryGroup.parentNode;\r\n        parent.removeChild(customSampleCategoryGroup);\r\n        parent.insertBefore(customSampleCategoryGroup, firstCategoryGroup);\r\n    }\r\n\r\n    return menu;\r\n}\r\n\r\nfunction setSelectedValue(menu: HTMLSelectElement, value: number): void {\r\n    const stringValue = value.toString();\r\n    if (menu.value != stringValue) menu.value = stringValue;\r\n\r\n    // Change select2 value, if this select is a member of that class.\r\n    if ($(menu).data('select2')) {\r\n        $(menu).val(value).trigger('change.select2');\r\n    }\r\n}\r\n\r\nclass CustomChipCanvas {\r\n    private mouseDown: boolean;\r\n    private continuousEdit: boolean;\r\n    private lastX: number;\r\n    private lastY: number;\r\n    public newArray: Float32Array;\r\n\r\n    private _change: Change | null = null;\r\n\r\n    constructor(public readonly canvas: HTMLCanvasElement, private readonly _doc: SongDocument, private readonly _getChange: (newArray: Float32Array) => Change) {\r\n        //canvas.addEventListener(\"input\", this._whenInput);\r\n        //canvas.addEventListener(\"change\", this._whenChange);\r\n        canvas.addEventListener(\"mousemove\", this._onMouseMove);\r\n        canvas.addEventListener(\"mousedown\", this._onMouseDown);\r\n        canvas.addEventListener(\"mouseup\", this._onMouseUp);\r\n        canvas.addEventListener(\"mouseleave\", this._onMouseUp);\r\n\r\n        this.mouseDown = false;\r\n        this.continuousEdit = false;\r\n        this.lastX = 0;\r\n        this.lastY = 0;\r\n\r\n        this.newArray = new Float32Array(64);\r\n\r\n        // Init waveform\r\n        this.redrawCanvas();\r\n\r\n    }\r\n\r\n    public redrawCanvas(): void {\r\n        var ctx = this.canvas.getContext(\"2d\") as CanvasRenderingContext2D;\r\n\r\n        // Black BG\r\n        ctx.fillStyle = ColorConfig.getComputed(\"--editor-background\");\r\n        ctx.fillRect(0, 0, 128, 52);\r\n\r\n        // Mid-bar\r\n        ctx.fillStyle = ColorConfig.getComputed(\"--ui-widget-background\");\r\n        ctx.fillRect(0, 25, 128, 2);\r\n\r\n        // 25-75 bars\r\n        ctx.fillStyle = ColorConfig.getComputed(\"--track-editor-bg-pitch-dim\");\r\n        ctx.fillRect(0, 13, 128, 1);\r\n        ctx.fillRect(0, 39, 128, 1);\r\n\r\n        // Waveform\r\n        ctx.fillStyle = ColorConfig.getComputedChannelColor(this._doc.song, this._doc.channel).primaryNote;\r\n\r\n        for (let x: number = 0; x < 64; x++) {\r\n            var y: number = this._doc.song.channels[this._doc.channel].instruments[this._doc.getCurrentInstrument()].customChipWave[x] + 26;\r\n            ctx.fillRect(x * 2, y - 2, 2, 4);\r\n\r\n            this.newArray[x] = y - 26;\r\n        }\r\n    }\r\n\r\n    private _onMouseMove = (event: MouseEvent): void => {\r\n        if (this.mouseDown) {\r\n\r\n            var x = (event.clientX || event.pageX) - this.canvas.getBoundingClientRect().left;\r\n            var y = Math.floor((event.clientY || event.pageY) - this.canvas.getBoundingClientRect().top);\r\n\r\n            if (y < 2) y = 2;\r\n            if (y > 50) y = 50;\r\n\r\n            var ctx = this.canvas.getContext(\"2d\") as CanvasRenderingContext2D;\r\n\r\n            if (this.continuousEdit == true && Math.abs(this.lastX - x) < 40) {\r\n\r\n                var lowerBound = (x < this.lastX) ? x : this.lastX;\r\n                var upperBound = (x < this.lastX) ? this.lastX : x;\r\n\r\n                for (let i = lowerBound; i <= upperBound; i += 2) {\r\n\r\n                    var progress = (Math.abs(x - this.lastX) > 2.0) ? ((x > this.lastX) ?\r\n                        1.0 - ((i - lowerBound) / (upperBound - lowerBound))\r\n                        : ((i - lowerBound) / (upperBound - lowerBound))) : 0.0;\r\n                    var j = Math.round(y + (this.lastY - y) * progress);\r\n\r\n                    ctx.fillStyle = ColorConfig.getComputed(\"--editor-background\");\r\n                    ctx.fillRect(Math.floor(i / 2) * 2, 0, 2, 53);\r\n                    ctx.fillStyle = ColorConfig.getComputed(\"--ui-widget-background\");\r\n                    ctx.fillRect(Math.floor(i / 2) * 2, 25, 2, 2);\r\n                    ctx.fillStyle = ColorConfig.getComputed(\"--track-editor-bg-pitch-dim\");\r\n                    ctx.fillRect(Math.floor(i / 2) * 2, 13, 2, 1);\r\n                    ctx.fillRect(Math.floor(i / 2) * 2, 39, 2, 1);\r\n                    ctx.fillStyle = ColorConfig.getComputedChannelColor(this._doc.song, this._doc.channel).primaryNote;\r\n                    ctx.fillRect(Math.floor(i / 2) * 2, j - 2, 2, 4);\r\n\r\n                    // Actually update current instrument's custom waveform\r\n                    this.newArray[Math.floor(i / 2)] = (j - 26);\r\n                }\r\n\r\n            }\r\n            else {\r\n\r\n                ctx.fillStyle = ColorConfig.getComputed(\"--editor-background\");\r\n                ctx.fillRect(Math.floor(x / 2) * 2, 0, 2, 52);\r\n                ctx.fillStyle = ColorConfig.getComputed(\"--ui-widget-background\");\r\n                ctx.fillRect(Math.floor(x / 2) * 2, 25, 2, 2);\r\n                ctx.fillStyle = ColorConfig.getComputed(\"--track-editor-bg-pitch-dim\");\r\n                ctx.fillRect(Math.floor(x / 2) * 2, 13, 2, 1);\r\n                ctx.fillRect(Math.floor(x / 2) * 2, 39, 2, 1);\r\n                ctx.fillStyle = ColorConfig.getComputedChannelColor(this._doc.song, this._doc.channel).primaryNote;\r\n                ctx.fillRect(Math.floor(x / 2) * 2, y - 2, 2, 4);\r\n\r\n                // Actually update current instrument's custom waveform\r\n                this.newArray[Math.floor(x / 2)] = (y - 26);\r\n\r\n            }\r\n\r\n            this.continuousEdit = true;\r\n            this.lastX = x;\r\n            this.lastY = y;\r\n\r\n            // Preview - update integral used for sound synthesis based on new array, not actual stored array. When mouse is released, real update will happen.\r\n            let instrument: Instrument = this._doc.song.channels[this._doc.channel].instruments[this._doc.getCurrentInstrument()];\r\n\r\n            let sum: number = 0.0;\r\n            for (let i: number = 0; i < this.newArray.length; i++) {\r\n                sum += this.newArray[i];\r\n            }\r\n            const average: number = sum / this.newArray.length;\r\n\r\n            // Perform the integral on the wave. The chipSynth will perform the derivative to get the original wave back but with antialiasing.\r\n            let cumulative: number = 0;\r\n            let wavePrev: number = 0;\r\n            for (let i: number = 0; i < this.newArray.length; i++) {\r\n                cumulative += wavePrev;\r\n                wavePrev = this.newArray[i] - average;\r\n                instrument.customChipWaveIntegral[i] = cumulative;\r\n            }\r\n\r\n            instrument.customChipWaveIntegral[64] = 0.0;\r\n        }\r\n\r\n    }\r\n\r\n    private _onMouseDown = (event: MouseEvent): void => {\r\n        this.mouseDown = true;\r\n\r\n        // Allow single-click edit\r\n        this._onMouseMove(event);\r\n    }\r\n    private _onMouseUp = (): void => {\r\n        this.mouseDown = false;\r\n        this.continuousEdit = false;\r\n\r\n        this._whenChange();\r\n    }\r\n\r\n    private _whenChange = (): void => {\r\n        this._change = this._getChange(this.newArray);\r\n\r\n        this._doc.record(this._change!);\r\n\r\n        this._change = null;\r\n    };\r\n\r\n}\r\n\r\n\r\nclass CustomAlgorythmCanvas {\r\n    private mouseDown: boolean;\r\n    //private continuousEdit: boolean;\r\n    //private lastX: number;\r\n    //private lastY: number;\r\n    public newMods: number[][];\r\n    public lookUpArray: number[][];\r\n    public selected: number;\r\n    public inverseModulation: number[][];\r\n    public feedback: number[][];\r\n    public inverseFeedback: number[][];\r\n    public carriers: number;\r\n    public drawArray: number[][];\r\n    public mode: string;\r\n\r\n    private _change: Change | null = null;\r\n\r\n    constructor(public readonly canvas: HTMLCanvasElement, private readonly _doc: SongDocument, private readonly _getChange: (newArray: number[][], carry: number, mode: string) => Change) {\r\n        //canvas.addEventListener(\"input\", this._whenInput);\r\n        //canvas.addEventListener(\"change\", this._whenChange);\r\n        canvas.addEventListener(\"mousemove\", this._onMouseMove);\r\n        canvas.addEventListener(\"mousedown\", this._onMouseDown);\r\n        canvas.addEventListener(\"mouseup\", this._onMouseUp);\r\n        canvas.addEventListener(\"mouseleave\", this._onMouseUp);\r\n\r\n        this.mouseDown = false;\r\n        //this.continuousEdit = false;\r\n        //this.lastX = 0;\r\n        //this.lastY = 0;\r\n        this.drawArray = [[], [], [], [], [], []];\r\n        this.lookUpArray = [[], [], [], [], [], []];\r\n        this.carriers = 1;\r\n        this.selected = -1;\r\n        this.newMods = [[], [], [], [], [], []];\r\n        this.inverseModulation = [[], [], [], [], [], []];\r\n        this.feedback = [[], [], [], [], [], []];\r\n        this.inverseFeedback = [[], [], [], [], [], []];\r\n        this.mode = \"algorithm\";\r\n\r\n        this.redrawCanvas();\r\n\r\n    }\r\n\r\n    public reset(): void {\r\n        this.redrawCanvas(false);\r\n        this.selected = -1;\r\n    }\r\n\r\n    public fillDrawArray(noReset: boolean = false): void {\r\n        if (noReset) {\r\n            this.drawArray = [];\r\n            this.drawArray = [[], [], [], [], [], []];\r\n            this.inverseModulation = [[], [], [], [], [], []];\r\n            this.lookUpArray = [[], [], [], [], [], []];\r\n            for (let i: number = 0; i < this.newMods.length; i++) {\r\n                for (let o: number = 0; o < this.newMods[i].length; o++) {\r\n                    this.inverseModulation[this.newMods[i][o] - 1].push(i + 1);\r\n                }\r\n            }\r\n            if (this.mode == \"feedback\") {\r\n                this.inverseFeedback = [[], [], [], [], [], []];\r\n                for (let i: number = 0; i < this.feedback.length; i++) {\r\n                    for (let o: number = 0; o < this.feedback[i].length; o++) {\r\n                        this.inverseFeedback[this.feedback[i][o] - 1].push(i + 1);\r\n                    }\r\n                }\r\n            }\r\n        } else {\r\n            this.drawArray = [];\r\n            this.drawArray = [[], [], [], [], [], []];\r\n            this.carriers = 1;\r\n            this.newMods = [[], [], [], [], [], []];\r\n            this.inverseModulation = [[], [], [], [], [], []];\r\n            this.lookUpArray = [[], [], [], [], [], []];\r\n\r\n            var oldMods = this._doc.song.channels[this._doc.channel].instruments[this._doc.getCurrentInstrument()].customAlgorithm;\r\n            this.carriers = oldMods.carrierCount;\r\n            for (let i: number = 0; i < oldMods.modulatedBy.length; i++) {\r\n                for (let o: number = 0; o < oldMods.modulatedBy[i].length; o++) {\r\n                    this.inverseModulation[oldMods.modulatedBy[i][o] - 1].push(i + 1);\r\n                    this.newMods[i][o] = oldMods.modulatedBy[i][o];\r\n                }\r\n            }\r\n            if (this.mode == \"feedback\") {\r\n                this.feedback = [[], [], [], [], [], []];\r\n                this.inverseFeedback = [[], [], [], [], [], []];\r\n\r\n                var oldfeed = this._doc.song.channels[this._doc.channel].instruments[this._doc.getCurrentInstrument()].customFeedbackType.indices;\r\n                for (let i: number = 0; i < oldfeed.length; i++) {\r\n                    for (let o: number = 0; o < oldfeed[i].length; o++) {\r\n                        this.inverseFeedback[oldfeed[i][o] - 1].push(i + 1);\r\n                        this.feedback[i][o] = oldfeed[i][o];\r\n                    }\r\n                }\r\n            }\r\n        }\r\n        for (let i: number = 0; i < this.inverseModulation.length; i++) {\r\n            if (i < this.carriers) {\r\n                this.drawArray[this.drawArray.length - 1][i] = i + 1;\r\n                this.lookUpArray[i] = [0, i];\r\n            } else {\r\n                if (this.inverseModulation[i][0] != undefined) {\r\n                    let testPos = [this.drawArray.length - (this.lookUpArray[this.inverseModulation[i][this.inverseModulation[i].length - 1] - 1][0] + 2), this.lookUpArray[this.inverseModulation[i][this.inverseModulation[i].length - 1] - 1][1]];\r\n                    if (this.drawArray[testPos[0]][testPos[1]] != undefined) {\r\n                        while (this.drawArray[testPos[0]][testPos[1]] != undefined && testPos[1] < 6) {\r\n                            testPos[1]++;\r\n                            if (this.drawArray[testPos[0]][testPos[1]] == undefined) {\r\n                                this.drawArray[testPos[0]][testPos[1]] = i + 1;\r\n                                this.lookUpArray[i] = [this.drawArray.length - (testPos[0] + 1), testPos[1]];\r\n                                break;\r\n                            }\r\n                            console.log(testPos[1])\r\n                        }\r\n                    } else {\r\n                        this.drawArray[testPos[0] ][testPos[1]] = i + 1;\r\n                        this.lookUpArray[i] = [this.drawArray.length - (testPos[0] + 1), testPos[1]];\r\n                    }\r\n                } else {\r\n                    let testPos = [5, 0];\r\n                    while (this.drawArray[testPos[0]][testPos[1]] != undefined && testPos[1] < 6) {\r\n                        testPos[1]++;\r\n                        if (this.drawArray[testPos[0]][testPos[1]] == undefined) {\r\n                            this.drawArray[testPos[0]][testPos[1]] = i + 1;\r\n                            this.lookUpArray[i] = [this.drawArray.length - (testPos[0] + 1), testPos[1]];\r\n                            break;\r\n                        }\r\n                    }\r\n                }\r\n            }\r\n        }\r\n    }\r\n    \r\n    private drawLines(ctx:CanvasRenderingContext2D):void {\r\n        if (this.mode == \"feedback\") {\r\n            for (let off: number = 0; off < 6; off++) {\r\n                ctx.strokeStyle = ColorConfig.getArbitaryChannelColor(\"pitch\", off).primaryChannel;\r\n                const set = off * 2  + 0.5;\r\n                for (let i: number = 0; i < this.inverseFeedback[off].length; i++) {\r\n                    let tar: number = this.inverseFeedback[off][i] - 1;\r\n\t\t\t\t\tlet srtpos:number[] = this.lookUpArray[off];\r\n\t\t\t\t\tlet tarpos:number[] = this.lookUpArray[tar];\r\n                    ctx.beginPath();\r\n                    ctx.moveTo(srtpos[1] * 24 + 12 + set, (6 - srtpos[0] - 1) * 24 + 12);\r\n                    ctx.lineTo(srtpos[1] * 24 + 12 + set, (6 - srtpos[0] - 1) * 24 + 12 + set);\r\n                    if (tarpos[1] != srtpos[1]) {\r\n\t\t\t\t\t\tlet side:number =0;\r\n\t\t\t\t\t\tif(tarpos[0] >= srtpos[0]){\r\n\t\t\t\t\t\t\tside = 24;\r\n\t\t\t\t\t\t}\r\n                        ctx.lineTo(srtpos[1] * 24 + side + set, (6 - srtpos[0] - 1) * 24 + 12 + set);\r\n                        if ((tarpos[1] == (srtpos[1] - 1)) && (tarpos[0] <= (srtpos[0] - 1))) {\r\n                        } else {\r\n\t\t\t\t\t\t\tif(tarpos[0] >= srtpos[0]){\r\n\t\t\t\t\t\t\t\tctx.lineTo((tarpos[1] + 1) * 24 + set, (6 - srtpos[0] - 1) * 24 + 12 + set);\r\n\t\t\t\t\t\t\t\tctx.lineTo((tarpos[1] + 1) * 24 + set, (6 - tarpos[0] - 1) * 24 + 12 + set);\r\n\t\t\t\t\t\t\t}else{\r\n\t\t\t\t\t\t\t\tctx.lineTo(srtpos[1] * 24 + set, (6 - tarpos[0] - 1) * 24 + 12 + set);\r\n\t\t\t\t\t\t\t\tctx.lineTo((tarpos[1] + 1) * 24 + set, (6 - tarpos[0] - 1) * 24 + 12 + set);\r\n\t\t\t\t\t\t\t}\r\n                        }\r\n                        ctx.lineTo((tarpos[1] + 1) * 24 + set, (6 - tarpos[0] - 1) * 24 + set - 12);\r\n                        ctx.lineTo((tarpos[1]) * 24 + 12 + set, (6 - tarpos[0] - 1) * 24 + set - 12);\r\n                        ctx.lineTo((tarpos[1]) * 24 + 12 + set, (6 - tarpos[0] - 1) * 24);\r\n                    } else {\r\n                        if (srtpos[0] - tarpos[0] == 1) {\r\n                            ctx.lineTo((tarpos[1]) * 24 + 12 + set, (6 - tarpos[0] - 1) * 24);\r\n                        } else {\r\n\t\t\t\t\t\t\tif(tarpos[0] >= srtpos[0]){\r\n\t\t\t\t\t\t\t\tctx.lineTo(srtpos[1] * 24 + 24 + set, (6 - srtpos[0] - 1) * 24 + 12 + set);\r\n\t\t\t\t\t\t\t\tctx.lineTo(srtpos[1] * 24 + 24 + set, (6 - tarpos[0] - 1) * 24 + set - 12);\r\n\t\t\t\t\t\t\t\tctx.lineTo(tarpos[1] * 24 + set + 12, (6 - tarpos[0] - 1) * 24 + set - 12);\r\n\t\t\t\t\t\t\t\tctx.lineTo(tarpos[1] * 24 + set + 12, (6 - tarpos[0] - 1) * 24);\r\n\t\t\t\t\t\t\t}else{\r\n\t\t\t\t\t\t\t\tctx.lineTo(srtpos[1] * 24 + set, (6 - srtpos[0] - 1) * 24 + 12 + set);\r\n\t\t\t\t\t\t\t\tctx.lineTo(srtpos[1] * 24 + set, (6 - tarpos[0] - 1) * 24 + set - 12);\r\n\t\t\t\t\t\t\t\tctx.lineTo(tarpos[1] * 24 + 12 + set, (6 - tarpos[0] - 1) * 24 + set - 12);\r\n\t\t\t\t\t\t\t\tctx.lineTo(tarpos[1] * 24 + 12 + set, (6 - tarpos[0] - 1) * 24);\r\n\t\t\t\t\t\t\t}\r\n                        }\r\n                    }\r\n                    ctx.lineWidth = 1;\r\n                    ctx.stroke();\r\n                }\r\n            }\r\n            return;\r\n        };\r\n\r\n        for (let off: number = 0; off < 6; off++) {\r\n            ctx.strokeStyle = ColorConfig.getArbitaryChannelColor(\"pitch\", off).primaryChannel;\r\n            const set = off * 2 - 1 + 0.5;\r\n            for (let i: number = 0; i < this.inverseModulation[off].length; i++) {\r\n                let tar: number = this.inverseModulation[off][i] - 1;\r\n\t\t\t\tlet srtpos:number[] = this.lookUpArray[off];\r\n\t\t\t\tlet tarpos:number[] = this.lookUpArray[tar];\r\n                ctx.beginPath();\r\n                ctx.moveTo(srtpos[1] * 24 + 12 + set, (6 - srtpos[0] - 1) * 24 + 12);\r\n                ctx.lineTo(srtpos[1] * 24 + 12 + set, (6 - srtpos[0] - 1) * 24 + 12 + set);\r\n                if ((tarpos[1]) != srtpos[1]) {\r\n                    ctx.lineTo(srtpos[1] * 24 + set, (6 - srtpos[0] - 1) * 24 + 12 + set);\r\n                    if ((tarpos[1] == (srtpos[1] - 1)) && (tarpos[0] <= (srtpos[0] - 1))) {\r\n                    } else {\r\n                        ctx.lineTo(srtpos[1] * 24 + set, (6 - tarpos[0] - 1) * 24 + 12 + set);\r\n                        ctx.lineTo((tarpos[1] + 1) * 24 + set, (6 - tarpos[0] - 1) * 24 + 12 + set);\r\n                    }\r\n                    ctx.lineTo((tarpos[1] + 1) * 24 + set, (6 - tarpos[0] - 1) * 24 + set - 12);\r\n                    ctx.lineTo((tarpos[1]) * 24 + 12 + set, (6 - tarpos[0] - 1) * 24 + set - 12);\r\n                    ctx.lineTo((tarpos[1]) * 24 + 12 + set, (6 - tarpos[0] - 1) * 24);\r\n                } else {\r\n                    if (Math.abs(tarpos[0] - srtpos[0]) == 1) {\r\n                        ctx.lineTo((tarpos[1]) * 24 + 12 + set, (6 - tarpos[0] - 1) * 24);\r\n                    } else {\r\n\t\t\t\t\t\tctx.lineTo(srtpos[1] * 24 + set, (6 - srtpos[0] - 1) * 24 + 12 + set);\r\n\t\t\t\t\t\tctx.lineTo(srtpos[1] * 24 + set, (6 - tarpos[0] - 1) * 24 + set - 12);\r\n\t\t\t\t\t\tctx.lineTo(srtpos[1] * 24 + 12 + set, (6 - tarpos[0] - 1) * 24 + set - 12);\r\n\t\t\t\t\t\tctx.lineTo(srtpos[1] * 24 + 12 + set, (6 - tarpos[0] - 1) * 24);\r\n                    }\r\n                }\r\n                ctx.lineWidth = 1;\r\n                ctx.stroke();\r\n            }\r\n        }\r\n    }\r\n\r\n    public redrawCanvas(noReset:boolean = false): void {\r\n        this.fillDrawArray(noReset);\r\n        var ctx = this.canvas.getContext(\"2d\") as CanvasRenderingContext2D;\r\n\r\n        // Black BG\r\n        ctx.fillStyle = ColorConfig.getComputed(\"--editor-background\");\r\n        ctx.fillRect(0, 0, 144, 144);\r\n        \r\n        for (let x: number = 0; x < 6; x++) {\r\n            for (let y: number = 0; y < 6; y++) {\r\n                ctx.fillStyle = ColorConfig.getComputed(\"--track-editor-bg-pitch-dim\");\r\n                ctx.fillRect(x * 24 + 12, ((y) * 24), 12, 12);\r\n                ctx.fillStyle = ColorConfig.getComputed(\"--editor-background\");\r\n                ctx.fillRect(x * 24 + 13, ((y) * 24)+1, 10, 10);\r\n                if (this.drawArray[y][x] != undefined) {\r\n                    if (this.drawArray[y][x] <= this.carriers) {\r\n                        ctx.fillStyle = ColorConfig.getComputed(\"--primary-text\");\r\n                        ctx.fillRect(x * 24 + 12, ((y) * 24), 12, 12);\r\n                        ctx.fillStyle = ColorConfig.getComputed(\"--editor-background\");\r\n                        ctx.fillRect(x * 24 + 13, ((y) * 24) + 1, 10, 10);\r\n                        ctx.fillStyle = ColorConfig.getComputedChannelColor(this._doc.song, this._doc.channel).primaryNote;\r\n                        ctx.fillText(this.drawArray[y][x] + \"\", x * 24 + 14, y * 24+10);\r\n                    }\r\n                    else {\r\n                        ctx.fillStyle = ColorConfig.getComputedChannelColor(this._doc.song, this._doc.channel).primaryNote;\r\n                        ctx.fillRect(x * 24 + 12, (y * 24), 12, 12);\r\n                        ctx.fillStyle = ColorConfig.getComputed(\"--editor-background\");\r\n                        ctx.fillRect(x * 24 + 13, ((y) * 24) + 1, 10, 10);\r\n                        ctx.fillStyle = ColorConfig.getComputed(\"--primary-text\");\r\n                        ctx.fillText(this.drawArray[y][x] + \"\", x * 24 + 14, y * 24+10);\r\n                    }\r\n                }\r\n            }\r\n        }\r\n        this.drawLines(ctx);\r\n        \r\n        //console.log(\"draw complete\")\r\n    }\r\n\r\n    private _onMouseMove = (event: MouseEvent): void => {\r\n        if (this.mouseDown) {//todo rework to handle draging and single clicks differently\r\n\r\n            var x = (event.clientX || event.pageX) - this.canvas.getBoundingClientRect().left;\r\n            var y = Math.floor((event.clientY || event.pageY) - this.canvas.getBoundingClientRect().top);\r\n\r\n            var ctx = this.canvas.getContext(\"2d\") as CanvasRenderingContext2D;\r\n\r\n            ctx.fillStyle = ColorConfig.getComputedChannelColor(this._doc.song, this._doc.channel).primaryNote;\r\n\r\n            var yindex = Math.ceil(y / 12)\r\n            var xindex = Math.ceil(x / 12)\r\n            yindex = (yindex/2)-Math.floor(yindex / 2) >= 0.5 ? Math.floor(yindex / 2) : -1;\r\n            xindex = (xindex / 2)+0.5 - Math.floor(xindex / 2) <= 0.5 ? Math.floor(xindex / 2)-1 : -1;\r\n            yindex = yindex >= 0 && yindex <= 5 ? yindex : -1;\r\n            xindex = xindex >= 0 && xindex <= 5 ? xindex : -1;\r\n            ctx.fillRect(xindex * 24+12, yindex * 24, 2, 2);\r\n\r\n            if (this.selected == -1) {\r\n                if (this.drawArray ?.[yindex] ?.[xindex] != undefined) {\r\n                    this.selected = this.drawArray[yindex][xindex];\r\n                    ctx.fillRect(xindex * 24 + 12, yindex * 24, 12, 12);\r\n                    ctx.fillStyle = ColorConfig.getComputed(\"--editor-background\");\r\n                    ctx.fillText(this.drawArray[yindex][xindex] + \"\", xindex * 24 + 14, yindex * 24 + 10);\r\n                    this.mouseDown = false;\r\n                }\r\n            } else {\r\n                if (this.drawArray ?.[yindex] ?.[xindex] != undefined) {\r\n\t\t\t\t\tif(this.mode == \"feedback\"){\r\n                        const newmod = this.drawArray[yindex][xindex]\r\n\t\t\t\t\t\tlet check = this.feedback[newmod - 1].indexOf(this.selected);\r\n\t\t\t\t\t\tif (check != -1) {\r\n\t\t\t\t\t\t\tthis.feedback[newmod - 1].splice(check, 1);\r\n\t\t\t\t\t\t} else {\r\n\t\t\t\t\t\t\tthis.feedback[newmod - 1].push(this.selected);\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t} else {\r\n\t\t\t\t\t\tif (this.drawArray[yindex][xindex] == this.selected) {\r\n\t\t\t\t\t\t\tif (this.selected == this.carriers) {\r\n\t\t\t\t\t\t\t\tif (this.selected > 1) {\r\n\t\t\t\t\t\t\t\t\tthis.carriers--;\r\n\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t} else if (this.selected - 1 == this.carriers) {\r\n\t\t\t\t\t\t\t\tthis.carriers++\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t} else {\r\n\t\t\t\t\t\t\tconst newmod = this.drawArray[yindex][xindex]\r\n\t\t\t\t\t\t\tif (this.selected > newmod) { //todo try to rebalence then do this in algorithm mode otherwise input as needed\r\n\t\t\t\t\t\t\t\tlet check = this.newMods[newmod - 1].indexOf(this.selected);\r\n\t\t\t\t\t\t\t\tif (check != -1) {\r\n\t\t\t\t\t\t\t\t\tthis.newMods[newmod - 1].splice(check, 1);\r\n\t\t\t\t\t\t\t\t} else {\r\n\t\t\t\t\t\t\t\t\tthis.newMods[newmod - 1].push(this.selected);\r\n\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t} else {\r\n\t\t\t\t\t\t\t\tlet check = this.newMods[this.selected - 1].indexOf(newmod);\r\n\t\t\t\t\t\t\t\tif (check != -1) {\r\n\t\t\t\t\t\t\t\t\tthis.newMods[this.selected - 1].splice(check, 1);\r\n\t\t\t\t\t\t\t\t} else {\r\n\t\t\t\t\t\t\t\t\tthis.newMods[this.selected - 1].push(newmod);\r\n\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n                    this.selected = -1;\r\n                    this.redrawCanvas(true);\r\n                    this.mouseDown = false;\r\n                } else {\r\n                    this.selected = -1;\r\n                    this.redrawCanvas(true);\r\n                    this.mouseDown = false;\r\n                }\r\n            }\r\n\r\n\r\n        }\r\n\r\n    }\r\n\r\n    private _onMouseDown = (event: MouseEvent): void => {\r\n        this.mouseDown = true;\r\n\r\n        // Allow single-click edit\r\n        this._onMouseMove(event);\r\n    }\r\n    private _onMouseUp = (): void => {\r\n        this.mouseDown = false;\r\n        //this.continuousEdit = false;\r\n\r\n        this._whenChange();\r\n    }\r\n\r\n    private _whenChange = (): void => {\r\n        this._change = this._getChange(this.mode == \"algorithm\" ? this.newMods : this.feedback, this.carriers, this.mode);\r\n\r\n        this._doc.record(this._change!);\r\n\r\n        this._change = null;\r\n    };\r\n\r\n}\r\n\r\nexport class SongEditor {\r\n    public prompt: Prompt | null = null;\r\n\r\n    private readonly _keyboardLayout: KeyboardLayout = new KeyboardLayout(this._doc);\r\n    private readonly _patternEditorPrev: PatternEditor = new PatternEditor(this._doc, false, -1);\r\n    private readonly _patternEditor: PatternEditor = new PatternEditor(this._doc, true, 0);\r\n    private readonly _patternEditorNext: PatternEditor = new PatternEditor(this._doc, false, 1);\r\n    private readonly _trackEditor: TrackEditor = new TrackEditor(this._doc, this);\r\n    private readonly _muteEditor: MuteEditor = new MuteEditor(this._doc, this);\r\n    private readonly _loopEditor: LoopEditor = new LoopEditor(this._doc);\r\n    private readonly _piano: Piano = new Piano(this._doc);\r\n    private readonly _octaveScrollBar: OctaveScrollBar = new OctaveScrollBar(this._doc, this._piano);\r\n    private readonly _playButton: HTMLButtonElement = button({ class: \"playButton\", type: \"button\", title: \"Play (Space)\" }, span(\"Play\"));\r\n    private readonly _pauseButton: HTMLButtonElement = button({ class: \"pauseButton\", style: \"display: none;\", type: \"button\", title: \"Pause (Space)\" }, \"Pause\");\r\n    private readonly _recordButton: HTMLButtonElement = button({ class: \"recordButton\", style: \"display: none;\", type: \"button\", title: \"Record (Ctrl+Space)\" }, span(\"Record\"));\r\n    private readonly _stopButton: HTMLButtonElement = button({ class: \"stopButton\", style: \"display: none;\", type: \"button\", title: \"Stop Recording (Space)\" }, \"Stop Recording\");\r\n    private readonly _prevBarButton: HTMLButtonElement = button({ class: \"prevBarButton\", type: \"button\", title: \"Previous Bar (left bracket)\" });\r\n    private readonly _nextBarButton: HTMLButtonElement = button({ class: \"nextBarButton\", type: \"button\", title: \"Next Bar (right bracket)\" });\r\n    private readonly _volumeSlider: Slider = new Slider(input({ title: \"main volume\", style: \"width: 5em; flex-grow: 1; margin: 0;\", type: \"range\", min: \"0\", max: \"75\", value: \"50\", step: \"1\" }), this._doc, null, false);\r\n    private readonly _outVolumeBarBg: SVGRectElement = SVG.rect({ \"pointer-events\": \"none\", width: \"90%\", height: \"50%\", x: \"5%\", y: \"25%\", fill: ColorConfig.uiWidgetBackground });\r\n    private readonly _outVolumeBar: SVGRectElement = SVG.rect({ \"pointer-events\": \"none\", height: \"50%\", width: \"0%\", x: \"5%\", y: \"25%\", fill: \"url('#volumeGrad2')\" });\r\n    private readonly _outVolumeCap: SVGRectElement = SVG.rect({ \"pointer-events\": \"none\", width: \"2px\", height: \"50%\", x: \"5%\", y: \"25%\", fill: ColorConfig.uiWidgetFocus });\r\n    private readonly _stop1: SVGStopElement = SVG.stop({ \"stop-color\": \"lime\", offset: \"60%\" });\r\n    private readonly _stop2: SVGStopElement = SVG.stop({ \"stop-color\": \"orange\", offset: \"90%\" });\r\n    private readonly _stop3: SVGStopElement = SVG.stop({ \"stop-color\": \"red\", offset: \"100%\" });\r\n    private readonly _gradient: SVGGradientElement = SVG.linearGradient({ id: \"volumeGrad2\", gradientUnits: \"userSpaceOnUse\" }, this._stop1, this._stop2, this._stop3);\r\n    private readonly _defs: SVGDefsElement = SVG.defs({}, this._gradient);\r\n    private readonly _volumeBarContainer: SVGSVGElement = SVG.svg({ style: `touch-action: none; overflow: visible; margin: auto; max-width: 20vw;`, width: \"160px\", height: \"100%\", preserveAspectRatio: \"none\", viewBox: \"0 0 160 12\" },\r\n        this._defs,\r\n        this._outVolumeBarBg,\r\n        this._outVolumeBar,\r\n        this._outVolumeCap,\r\n    );\r\n    private readonly _volumeBarBox: HTMLDivElement = div({ class: \"playback-volume-bar\", style: \"height: 12px; align-self: center;\" },\r\n        this._volumeBarContainer,\r\n    );\r\n    private readonly _fileMenu: HTMLSelectElement = select({ style: \"width: 100%;\" },\r\n        option({ selected: true, disabled: true, hidden: false }, \"File\"), // todo: \"hidden\" should be true but looks wrong on mac chrome, adds checkmark next to first visible option even though it's not selected. :(\r\n        option({ value: \"new\" }, \"+ New Blank Song\"),\r\n        option({ value: \"import\" }, \"↑ Import Song... (\" + EditorConfig.ctrlSymbol + \"O)\"),\r\n        option({ value: \"export\" }, \"↓ Export Song... (\" + EditorConfig.ctrlSymbol + \"S)\"),\r\n        option({ value: \"copyUrl\" }, \"⎘ Copy Song URL\"),\r\n        option({ value: \"shareUrl\" }, \"⤳ Share Song URL\"),\r\n        option({ value: \"shortenUrl\" }, \"… Shorten Song URL\"),\r\n        option({ value: \"viewPlayer\" }, \"▶ View in Song Player\"),\r\n        option({ value: \"copyEmbed\" }, \"⎘ Copy HTML Embed Code\"),\r\n        option({ value: \"songRecovery\" }, \"⚠ Recover Recent Song...\"),\r\n    );\r\n    private readonly _editMenu: HTMLSelectElement = select({ style: \"width: 100%;\" },\r\n        option({ selected: true, disabled: true, hidden: false }, \"Edit\"), // todo: \"hidden\" should be true but looks wrong on mac chrome, adds checkmark next to first visible option even though it's not selected. :(\r\n        option({ value: \"undo\" }, \"Undo (Z)\"),\r\n        option({ value: \"redo\" }, \"Redo (Y)\"),\r\n        option({ value: \"copy\" }, \"Copy Pattern (C)\"),\r\n        option({ value: \"pasteNotes\" }, \"Paste Pattern Notes (V)\"),\r\n        option({ value: \"pasteNumbers\" }, \"Paste Pattern Numbers (\" + EditorConfig.ctrlSymbol + \"⇧V)\"),\r\n        option({ value: \"insertBars\" }, \"Insert Bar (⏎)\"),\r\n        option({ value: \"deleteBars\" }, \"Delete Selected Bars (⌫)\"),\r\n        option({ value: \"insertChannel\" }, \"Insert Channel (\" + EditorConfig.ctrlSymbol + \"⏎)\"),\r\n        option({ value: \"deleteChannel\" }, \"Delete Selected Channels (\" + EditorConfig.ctrlSymbol + \"⌫)\"),\r\n        option({ value: \"selectChannel\" }, \"Select Channel (⇧A)\"),\r\n        option({ value: \"selectAll\" }, \"Select All (A)\"),\r\n        option({ value: \"duplicatePatterns\" }, \"Duplicate Reused Patterns (D)\"),\r\n        option({ value: \"transposeUp\" }, \"Move Notes Up (+ or ⇧+)\"),\r\n        option({ value: \"transposeDown\" }, \"Move Notes Down (- or ⇧-)\"),\r\n        option({ value: \"moveNotesSideways\" }, \"Move All Notes Sideways... (W)\"),\r\n\toption({ value: \"generateEuclideanRhythm\" }, \"Generate Euclidean Rhythm... (E)\"),\r\n        option({ value: \"beatsPerBar\" }, \"Change Beats Per Bar... (B)\"),\r\n        option({ value: \"barCount\" }, \"Change Song Length... (L)\"),\r\n        option({ value: \"channelSettings\" }, \"Channel Settings... (Q)\"),\r\n        option({ value: \"limiterSettings\" }, \"Limiter Settings... (⇧L)\"),\r\n\toption({ value: \"addExternal\" }, \"Add Custom Samples... (⇧Q)\"),\r\n    );\r\n    private readonly _optionsMenu: HTMLSelectElement = select({ style: \"width: 100%;\" },\r\n        option({ selected: true, disabled: true, hidden: false }, \"Preferences\"), // todo: \"hidden\" should be true but looks wrong on mac chrome, adds checkmark next to first visible option even though it's not selected. :(\r\n        option({ value: \"autoPlay\" }, \"Auto Play on Load\"),\r\n        option({ value: \"autoFollow\" }, \"Keep Current Pattern Selected\"),\r\n        option({ value: \"enableNotePreview\" }, \"Hear Preview of Added Notes\"),\r\n        option({ value: \"showLetters\" }, \"Show Piano Keys\"),\r\n        option({ value: \"showFifth\" }, 'Highlight \"Fifth\" of Song Key'),\r\n        option({ value: \"notesOutsideScale\" }, \"Allow Adding Notes Not in Scale\"),\r\n        option({ value: \"setDefaultScale\" }, \"Use Current Scale as Default\"),\r\n        option({ value: \"showChannels\" }, \"Show Notes From All Channels\"),\r\n        option({ value: \"showScrollBar\" }, \"Show Octave Scroll Bar\"),\r\n        option({ value: \"alwaysFineNoteVol\" }, \"Always Fine Note Volume\"),\r\n        option({ value: \"enableChannelMuting\" }, \"Enable Channel Muting\"),\r\n        option({ value: \"displayBrowserUrl\" }, \"Display Song Data in URL\"),\r\n        option({ value: \"displayVolumeBar\" }, \"Show Playback Volume\"),\r\n        option({ value: \"showOscilloscope\" }, \"Show Oscilloscope\"),\r\n        option({ value: \"showSampleLoadingStatus\" }, \"Show Sample Loading Status\"),\r\n        option({ value: \"layout\" }, \"Set Layout...\"),\r\n        option({ value: \"colorTheme\" }, \"Set Theme...\"),\r\n\toption({ value: \"customTheme\" }, \"Custom Theme...\"),\r\n        option({ value: \"recordingSetup\" }, \"Set Up Note Recording...\"),\r\n    );\r\n    private readonly _scaleSelect: HTMLSelectElement = buildOptions(select(), Config.scales.map(scale => scale.name));\r\n    private readonly _keySelect: HTMLSelectElement = buildOptions(select(), Config.keys.map(key => key.name).reverse());\r\n    private readonly _octaveStepper: HTMLInputElement = input({ type: \"number\", min: Config.octaveMin, max: Config.octaveMax, value: \"0\" });\r\n    private readonly _tempoSlider: Slider = new Slider(input({ style: \"margin: 0; vertical-align: middle;\", type: \"range\", min: \"1\", max: \"500\", value: \"160\", step: \"1\" }), this._doc, (oldValue: number, newValue: number) => new ChangeTempo(this._doc, oldValue, newValue), false);\r\n    private readonly _tempoStepper: HTMLInputElement = input({ style: \"width: 4em; font-size: 80%; margin-left: 0.4em; vertical-align: middle;\", type: \"number\", step: \"1\" });\r\n    private readonly _chorusSlider: Slider = new Slider(input({ style: \"margin: 0;\", type: \"range\", min: \"0\", max: Config.chorusRange - 1, value: \"0\", step: \"1\" }), this._doc, (oldValue: number, newValue: number) => new ChangeChorus(this._doc, oldValue, newValue), false);\r\n    private readonly _chorusRow: HTMLDivElement = div({ class: \"selectRow\" }, span({ class: \"tip\", onclick: () => this._openPrompt(\"chorus\") }, \"Chorus:\"), this._chorusSlider.container);\r\n    private readonly _reverbSlider: Slider = new Slider(input({ style: \"margin: 0; position: sticky,\", type: \"range\", min: \"0\", max: Config.reverbRange - 1, value: \"0\", step: \"1\" }), this._doc, (oldValue: number, newValue: number) => new ChangeReverb(this._doc, oldValue, newValue), false);\r\n    private readonly _reverbRow: HTMLDivElement = div({ class: \"selectRow\" }, span({ class: \"tip\", onclick: () => this._openPrompt(\"reverb\") }, \"Reverb:\"), this._reverbSlider.container);\r\n    private readonly _echoSustainSlider: Slider = new Slider(input({ style: \"margin: 0;\", type: \"range\", min: \"0\", max: Config.echoSustainRange - 1, value: \"0\", step: \"1\" }), this._doc, (oldValue: number, newValue: number) => new ChangeEchoSustain(this._doc, oldValue, newValue), false);\r\n    private readonly _echoSustainRow: HTMLDivElement = div({ class: \"selectRow\" }, span({ class: \"tip\", onclick: () => this._openPrompt(\"echoSustain\") }, \"Echo:\"), this._echoSustainSlider.container);\r\n    private readonly _echoDelaySlider: Slider = new Slider(input({ style: \"margin: 0;\", type: \"range\", min: \"0\", max: Config.echoDelayRange - 1, value: \"0\", step: \"1\" }), this._doc, (oldValue: number, newValue: number) => new ChangeEchoDelay(this._doc, oldValue, newValue), false);\r\n    private readonly _echoDelayRow: HTMLDivElement = div({ class: \"selectRow\" }, span({ class: \"tip\", onclick: () => this._openPrompt(\"echoDelay\") }, \"Echo Delay:\"), this._echoDelaySlider.container);\r\n    private readonly _rhythmSelect: HTMLSelectElement = buildOptions(select(), Config.rhythms.map(rhythm => rhythm.name));\r\n    private readonly _pitchedPresetSelect: HTMLSelectElement = buildPresetOptions(false, \"pitchPresetSelect\");\r\n    private readonly _drumPresetSelect: HTMLSelectElement = buildPresetOptions(true, \"drumPresetSelect\");\r\n    private readonly _algorithmSelect: HTMLSelectElement = buildOptions(select(), Config.algorithms.map(algorithm => algorithm.name));\r\n    private readonly _algorithmSelectRow: HTMLDivElement = div({ class: \"selectRow\" }, span({ class: \"tip\", onclick: () => this._openPrompt(\"algorithm\") }, \"Algorithm: \"), div({ class: \"selectContainer\" }, this._algorithmSelect));\r\n    private readonly _instrumentButtons: HTMLButtonElement[] = [];\r\n    private readonly _instrumentAddButton: HTMLButtonElement = button({ type: \"button\", class: \"add-instrument last-button\" });\r\n    private readonly _instrumentRemoveButton: HTMLButtonElement = button({ type: \"button\", class: \"remove-instrument\" });\r\n    private readonly _instrumentsButtonBar: HTMLDivElement = div({ class: \"instrument-bar\" }, this._instrumentRemoveButton, this._instrumentAddButton);\r\n    private readonly _instrumentsButtonRow: HTMLDivElement = div({ class: \"selectRow\", style: \"display: none;\" }, span({ class: \"tip\", onclick: () => this._openPrompt(\"instrumentIndex\") }, \"Instrument:\"), this._instrumentsButtonBar);\r\n    private readonly _instrumentVolumeSlider: Slider = new Slider(input({ style: \"margin: 0; position: sticky;\", type: \"range\", min: Math.floor(-Config.volumeRange / 2), max: Math.floor(Config.volumeRange / 2), value: \"0\", step: \"1\" }), this._doc, (oldValue: number, newValue: number) => new ChangeVolume(this._doc, oldValue, newValue), true);\r\n    private readonly _instrumentVolumeSliderInputBox: HTMLInputElement = input({ style: \"width: 4em; font-size: 80%\", id: \"volumeSliderInputBox\", type: \"number\", step: \"1\", min: Math.floor(-Config.volumeRange / 2), max: Math.floor(Config.volumeRange / 2), value: \"0\" });\r\n    private readonly _instrumentVolumeSliderTip: HTMLDivElement = div({ class: \"selectRow\", style: \"height: 1em\" }, span({ class: \"tip\", style: \"font-size: smaller;\", onclick: () => this._openPrompt(\"instrumentVolume\") }, \"Volume: \"));\r\n    private readonly _instrumentVolumeSliderRow: HTMLDivElement = div({ class: \"selectRow\" }, div({},\r\n        div({ style: \"color: \" + ColorConfig.secondaryText + \";\" }, span({ class: \"tip\" }, this._instrumentVolumeSliderTip)),\r\n        div({ style: \"color: \" + ColorConfig.secondaryText + \"; margin-top: -3px;\" }, this._instrumentVolumeSliderInputBox),\r\n    ), this._instrumentVolumeSlider.container);\r\n    private readonly _panSlider: Slider = new Slider(input({ style: \"margin: 0; position: sticky;\", type: \"range\", min: \"0\", max: Config.panMax, value: Config.panCenter, step: \"1\" }), this._doc, (oldValue: number, newValue: number) => new ChangePan(this._doc, oldValue, newValue), true);\r\n    private readonly _panDropdown: HTMLButtonElement = button({ style: \"margin-left:0em; height:1.5em; width: 10px; padding: 0px; font-size: 8px;\", onclick: () => this._toggleDropdownMenu(DropdownID.Pan) }, \"▼\");\r\n    private readonly _panSliderInputBox: HTMLInputElement = input({ style: \"width: 4em; font-size: 80%; \", id: \"panSliderInputBox\", type: \"number\", step: \"1\", min: \"0\", max: \"100\", value: \"0\" });\r\n    private readonly _panSliderRow: HTMLDivElement = div({ class: \"selectRow\" }, div({},\r\n        span({ class: \"tip\", tabindex: \"0\", style: \"height:1em; font-size: smaller;\", onclick: () => this._openPrompt(\"pan\") }, \"Pan: \"),\r\n        div({ style: \"color: \" + ColorConfig.secondaryText + \"; margin-top: -3px;\" }, this._panSliderInputBox),\r\n    ), this._panDropdown, this._panSlider.container);\r\n    private readonly _panDelaySlider: Slider = new Slider(input({ style: \"margin: 0;\", type: \"range\", min: \"0\", max: Config.modulators.dictionary[\"pan delay\"].maxRawVol, value: \"0\", step: \"1\" }), this._doc, (oldValue: number, newValue: number) => new ChangePanDelay(this._doc, oldValue, newValue), false);\r\n    private readonly _panDelayRow: HTMLElement = div({ class: \"selectRow\" }, span({ class: \"tip\", style: \"margin-left:10px;\", onclick: () => this._openPrompt(\"panDelay\") }, \"Delay:\"), this._panDelaySlider.container);\r\n    private readonly _panDropdownGroup: HTMLElement = div({ class: \"editor-controls\", style: \"display: none;\" }, this._panDelayRow);\r\n    private readonly _chipWaveSelect: HTMLSelectElement = buildOptions(select(), Config.chipWaves.map(wave => wave.name));\r\n    private readonly _chipNoiseSelect: HTMLSelectElement = buildOptions(select(), Config.chipNoises.map(wave => wave.name));\r\n    \t\t   // advloop addition\r\n            // @TODO: Add a dropdown for these. Or maybe this checkbox is fine?\r\n             private readonly _useChipWaveAdvancedLoopControlsBox = input({ type: \"checkbox\", style: \"width: 1em; padding: 0; margin-left: 0.4em; margin-right: 4em;\" });\r\n             private readonly _chipWaveLoopModeSelect = buildOptions(select(), [\"Loop\", \"Ping-Pong\", \"Play Once\", \"Play Loop Once\"]);\r\n             private readonly _chipWaveLoopStartStepper = input({ type: \"number\", min: \"0\", step: \"1\", value: \"0\", style: \"width: 100%; height: 1.5em; font-size: 80%; margin-left: 0.4em; vertical-align: middle;\" });\r\n            private readonly _chipWaveLoopEndStepper = input({ type: \"number\", min: \"0\", step: \"1\", value: \"0\", style: \"width: 100%; height: 1.5em; font-size: 80%; margin-left: 0.4em; vertical-align: middle;\" });\r\n             private readonly _setChipWaveLoopEndToEndButton = button({ type: \"button\", style: \"width: 1.5em; height: 1.5em; padding: 0; margin-left: 0.5em;\" }, SVG.svg({ width: \"16\", height: \"16\", viewBox: \"-13 -14 26 26\", \"pointer-events\": \"none\", style: \"width: 100%; height: 100%;\" }, SVG.rect({ x: \"4\", y: \"-6\", width: \"2\", height: \"12\", fill: ColorConfig.primaryText }), SVG.path({ d: \"M -6 -6 L -6 6 L 3 0 z\", fill: ColorConfig.primaryText })));\r\n             private readonly _chipWaveStartOffsetStepper = input({ type: \"number\", min: \"0\", step: \"1\", value: \"0\", style: \"width: 100%; height: 1.5em; font-size: 80%; margin-left: 0.4em; vertical-align: middle;\" });\r\n             private readonly _chipWavePlayBackwardsBox = input({ type: \"checkbox\", style: \"width: 1em; padding: 0; margin-left: 0.4em; margin-right: 4em;\" });\r\n            // advloop addition\r\n\t//are these supposed to be readonly?????\r\n\tprivate readonly _chipWaveSelectRow: HTMLDivElement = div({ class: \"selectRow\" }, span({ class: \"tip\", onclick: () => this._openPrompt(\"chipWave\") }, \"Wave: \"), div({ class: \"selectContainer\" }, this._chipWaveSelect));\r\n    private readonly _chipNoiseSelectRow: HTMLDivElement = div({ class: \"selectRow\" }, span({ class: \"tip\", onclick: () => this._openPrompt(\"chipNoise\") }, \"Noise: \"), div({ class: \"selectContainer\" }, this._chipNoiseSelect));\r\n    private readonly _visualLoopControlsButton: HTMLButtonElement = button({ style: \"margin-left: 0em; padding-left: 0.2em; height: 1.5em; max-width: 12px;\", onclick: () => this._openPrompt(\"visualLoopControls\") }, \"+\");\r\n    private readonly _useChipWaveAdvancedLoopControlsRow: HTMLDivElement = div({ class: \"selectRow\" }, span({ class: \"tip\", style: \"flex-shrink: 0;\", onclick: () => this._openPrompt(\"loopControls\") }, \"Loop Controls: \"), this._useChipWaveAdvancedLoopControlsBox);\r\n    private readonly _chipWaveLoopModeSelectRow = div({ class: \"selectRow\" }, span({ class: \"tip\", style: \"font-size: x-small;\", onclick: () => this._openPrompt(\"loopMode\") }, \"Loop Mode: \"), div({ class: \"selectContainer\" }, this._chipWaveLoopModeSelect));\r\n    private readonly _chipWaveLoopStartRow = div({ class: \"selectRow\" }, span({ class: \"tip\", style: \"font-size: x-small;\", onclick: () => this._openPrompt(\"loopStart\") }, \"Loop Start: \"), this._visualLoopControlsButton, span({ style: \"display: flex;\" }, this._chipWaveLoopStartStepper));\r\n    private readonly _chipWaveLoopEndRow = div({ class: \"selectRow\" }, span({ class: \"tip\", style: \"font-size: x-small;\", onclick: () => this._openPrompt(\"loopEnd\") }, \"Loop End: \"), span({ style: \"display: flex;\" }, this._chipWaveLoopEndStepper, this._setChipWaveLoopEndToEndButton));\r\n    private readonly _chipWaveStartOffsetRow = div({ class: \"selectRow\" }, span({ class: \"tip\", onclick: () => this._openPrompt(\"offset\") }, \"Offset: \"), span({ style: \"display: flex;\" }, this._chipWaveStartOffsetStepper));\r\n    private readonly _chipWavePlayBackwardsRow = div({ class: \"selectRow\" }, span({ class: \"tip\", onclick: () => this._openPrompt(\"backwards\") }, \"Backwards: \"), this._chipWavePlayBackwardsBox);\r\n    private readonly _fadeInOutEditor: FadeInOutEditor = new FadeInOutEditor(this._doc);\r\n    private readonly _fadeInOutRow: HTMLElement = div({ class: \"selectRow\" }, span({ class: \"tip\", onclick: () => this._openPrompt(\"fadeInOut\") }, \"Fade:\"), this._fadeInOutEditor.container);\r\n    private readonly _transitionSelect: HTMLSelectElement = buildOptions(select(), Config.transitions.map(transition => transition.name));\r\n    private readonly _transitionDropdown: HTMLButtonElement = button({ style: \"margin-left:0em; height:1.5em; width: 10px; padding: 0px; font-size: 8px;\", onclick: () => this._toggleDropdownMenu(DropdownID.Transition) }, \"▼\");\r\n    private readonly _transitionRow: HTMLDivElement = div({ class: \"selectRow\" }, span({ class: \"tip\", onclick: () => this._openPrompt(\"transition\") }, \"Transition:\"), this._transitionDropdown, div({ class: \"selectContainer\", style: \"width: 52.5%;\" }, this._transitionSelect));\r\n    private readonly _clicklessTransitionBox: HTMLInputElement = input({ type: \"checkbox\", style: \"width: 1em; padding: 0; margin-right: 4em;\" });\r\n    private readonly _clicklessTransitionRow: HTMLElement = div({ class: \"selectRow\" }, span({ class: \"tip\", style: \"margin-left:10px;\", onclick: () => this._openPrompt(\"clicklessTransition\") }, \"Clickless:\"), this._clicklessTransitionBox);\r\n    private readonly _transitionDropdownGroup: HTMLElement = div({ class: \"editor-controls\", style: \"display: none;\" }, this._clicklessTransitionRow);\r\n\r\n    private readonly _effectsSelect: HTMLSelectElement = select(option({ selected: true, disabled: true, hidden: false })); // todo: \"hidden\" should be true but looks wrong on mac chrome, adds checkmark next to first visible option even though it's not selected. :(\r\n    private readonly _eqFilterSimpleButton: HTMLButtonElement = button({ style: \"font-size: x-small; width: 50%; height: 40%\", class: \"no-underline\", onclick: () => this._switchEQFilterType(true) }, \"simple\");\r\n    private readonly _eqFilterAdvancedButton: HTMLButtonElement = button({ style: \"font-size: x-small; width: 50%; height: 40%\", class: \"last-button no-underline\", onclick: () => this._switchEQFilterType(false) }, \"advanced\");\r\n    private readonly _eqFilterTypeRow: HTMLElement = div({ class: \"selectRow\", style: \"padding-top: 4px; margin-bottom: 0px;\" }, span({ style: \"font-size: x-small;\", class: \"tip\", onclick: () => this._openPrompt(\"filterType\") }, \"EQ Filt.Type:\"), div({ class: \"instrument-bar\" }, this._eqFilterSimpleButton, this._eqFilterAdvancedButton));\r\n    private readonly _eqFilterEditor: FilterEditor = new FilterEditor(this._doc);\r\n    private readonly _eqFilterZoom: HTMLButtonElement = button({ style: \"margin-left:0em; padding-left:0.2em; height:1.5em; max-width: 12px;\", onclick: () => this._openPrompt(\"customEQFilterSettings\") }, \"+\");\r\n    private readonly _eqFilterRow: HTMLElement = div({ class: \"selectRow\" }, span({ class: \"tip\", onclick: () => this._openPrompt(\"eqFilter\") }, \"EQ Filt:\"), this._eqFilterZoom, this._eqFilterEditor.container);\r\n    private readonly _eqFilterSimpleCutSlider: Slider = new Slider(input({ style: \"margin: 0;\", type: \"range\", min: \"0\", max: Config.filterSimpleCutRange - 1, value: \"6\", step: \"1\" }), this._doc, (oldValue: number, newValue: number) => new ChangeEQFilterSimpleCut(this._doc, oldValue, newValue), false);\r\n    private _eqFilterSimpleCutRow: HTMLDivElement = div({ class: \"selectRow\", title: \"Low-pass Filter Cutoff Frequency\" }, span({ class: \"tip\", onclick: () => this._openPrompt(\"filterCutoff\") }, \"Filter Cut:\"), this._eqFilterSimpleCutSlider.container);\r\n    private readonly _eqFilterSimplePeakSlider: Slider = new Slider(input({ style: \"margin: 0;\", type: \"range\", min: \"0\", max: Config.filterSimplePeakRange - 1, value: \"6\", step: \"1\" }), this._doc, (oldValue: number, newValue: number) => new ChangeEQFilterSimplePeak(this._doc, oldValue, newValue), false);\r\n    private _eqFilterSimplePeakRow: HTMLDivElement = div({ class: \"selectRow\", title: \"Low-pass Filter Peak Resonance\" }, span({ class: \"tip\", onclick: () => this._openPrompt(\"filterResonance\") }, \"Filter Peak:\"), this._eqFilterSimplePeakSlider.container);\r\n\r\n    private readonly _noteFilterSimpleButton: HTMLButtonElement = button({ style: \"font-size: x-small; width: 50%; height: 40%\", class: \"no-underline\", onclick: () => this._switchNoteFilterType(true) }, \"simple\");\r\n    private readonly _noteFilterAdvancedButton: HTMLButtonElement = button({ style: \"font-size: x-small; width: 50%; height: 40%\", class: \"last-button no-underline\", onclick: () => this._switchNoteFilterType(false) }, \"advanced\");\r\n    private readonly _noteFilterTypeRow: HTMLElement = div({ class: \"selectRow\", style: \"padding-top: 4px; margin-bottom: 0px;\" }, span({ style: \"font-size: x-small;\", class: \"tip\", onclick: () => this._openPrompt(\"filterType\") }, \"Note Filt.Type:\"), div({ class: \"instrument-bar\" }, this._noteFilterSimpleButton, this._noteFilterAdvancedButton));\r\n    private readonly _noteFilterEditor: FilterEditor = new FilterEditor(this._doc, true);\r\n    private readonly _noteFilterZoom: HTMLButtonElement = button({ style: \"margin-left:0em; padding-left:0.2em; height:1.5em; max-width: 12px;\", onclick: () => this._openPrompt(\"customNoteFilterSettings\") }, \"+\");\r\n    private readonly _noteFilterRow: HTMLElement = div({ class: \"selectRow\" }, span({ class: \"tip\", onclick: () => this._openPrompt(\"noteFilter\") }, \"Note Filt:\"), this._noteFilterZoom, this._noteFilterEditor.container);\r\n    private readonly _noteFilterSimpleCutSlider: Slider = new Slider(input({ style: \"margin: 0;\", type: \"range\", min: \"0\", max: Config.filterSimpleCutRange - 1, value: \"6\", step: \"1\" }), this._doc, (oldValue: number, newValue: number) => new ChangeNoteFilterSimpleCut(this._doc, oldValue, newValue), false);\r\n    private _noteFilterSimpleCutRow: HTMLDivElement = div({ class: \"selectRow\", title: \"Low-pass Filter Cutoff Frequency\" }, span({ class: \"tip\", onclick: () => this._openPrompt(\"filterCutoff\") }, \"Filter Cut:\"), this._noteFilterSimpleCutSlider.container);\r\n    private readonly _noteFilterSimplePeakSlider: Slider = new Slider(input({ style: \"margin: 0;\", type: \"range\", min: \"0\", max: Config.filterSimplePeakRange - 1, value: \"6\", step: \"1\" }), this._doc, (oldValue: number, newValue: number) => new ChangeNoteFilterSimplePeak(this._doc, oldValue, newValue), false);\r\n    private _noteFilterSimplePeakRow: HTMLDivElement = div({ class: \"selectRow\", title: \"Low-pass Filter Peak Resonance\" }, span({ class: \"tip\", onclick: () => this._openPrompt(\"filterResonance\") }, \"Filter Peak:\"), this._noteFilterSimplePeakSlider.container);\r\n\r\n    private readonly _pulseWidthSlider: Slider = new Slider(input({ style: \"margin: 0;\", type: \"range\", min: \"1\", max: Config.pulseWidthRange, value: \"1\", step: \"1\" }), this._doc, (oldValue: number, newValue: number) => new ChangePulseWidth(this._doc, oldValue, newValue), false);\r\n    private readonly _pulseWidthRow: HTMLDivElement = div({ class: \"selectRow\" }, span({ class: \"tip\", onclick: () => this._openPrompt(\"pulseWidth\") }, \"Pulse Width:\"), this._pulseWidthSlider.container);\r\n    private readonly _pitchShiftSlider: Slider = new Slider(input({ style: \"margin: 0;\", type: \"range\", min: \"0\", max: Config.pitchShiftRange - 1, value: \"0\", step: \"1\" }), this._doc, (oldValue: number, newValue: number) => new ChangePitchShift(this._doc, oldValue, newValue), true);\r\n    private readonly _pitchShiftTonicMarkers: HTMLDivElement[] = [div({ class: \"pitchShiftMarker\", style: { color: ColorConfig.tonic } }), div({ class: \"pitchShiftMarker\", style: { color: ColorConfig.tonic, left: \"50%\" } }), div({ class: \"pitchShiftMarker\", style: { color: ColorConfig.tonic, left: \"100%\" } })];\r\n    private readonly _pitchShiftFifthMarkers: HTMLDivElement[] = [div({ class: \"pitchShiftMarker\", style: { color: ColorConfig.fifthNote, left: (100 * 7 / 24) + \"%\" } }), div({ class: \"pitchShiftMarker\", style: { color: ColorConfig.fifthNote, left: (100 * 19 / 24) + \"%\" } })];\r\n    private readonly _pitchShiftMarkerContainer: HTMLDivElement = div({ style: \"display: flex; position: relative;\" }, this._pitchShiftSlider.container, div({ class: \"pitchShiftMarkerContainer\" }, this._pitchShiftTonicMarkers, this._pitchShiftFifthMarkers));\r\n    private readonly _pitchShiftRow: HTMLDivElement = div({ class: \"selectRow\" }, span({ class: \"tip\", onclick: () => this._openPrompt(\"pitchShift\") }, \"Pitch Shift:\"), this._pitchShiftMarkerContainer);\r\n    private readonly _detuneSlider: Slider = new Slider(input({ style: \"margin: 0;\", type: \"range\", min: Config.detuneMin - Config.detuneCenter, max: Config.detuneMax - Config.detuneCenter, value: 0, step: \"4\" }), this._doc, (oldValue: number, newValue: number) => new ChangeDetune(this._doc, oldValue, newValue), true);\r\n    private readonly _detuneSliderInputBox: HTMLInputElement = input({ style: \"width: 4em; font-size: 80%; \", id: \"detuneSliderInputBox\", type: \"number\", step: \"1\", min: Config.detuneMin - Config.detuneCenter, max: Config.detuneMax - Config.detuneCenter, value: 0 });\r\n    private readonly _detuneSliderRow: HTMLDivElement = div({ class: \"selectRow\" }, div({},\r\n        span({ class: \"tip\", style: \"height:1em; font-size: smaller;\", onclick: () => this._openPrompt(\"detune\") }, \"Detune: \"),\r\n        div({ style: \"color: \" + ColorConfig.secondaryText + \"; margin-top: -3px;\" }, this._detuneSliderInputBox),\r\n    ), this._detuneSlider.container);\r\n    private readonly _distortionSlider: Slider = new Slider(input({ style: \"margin: 0; position: sticky;\", type: \"range\", min: \"0\", max: Config.distortionRange - 1, value: \"0\", step: \"1\" }), this._doc, (oldValue: number, newValue: number) => new ChangeDistortion(this._doc, oldValue, newValue), false);\r\n    private readonly _distortionRow: HTMLDivElement = div({ class: \"selectRow\" }, span({ class: \"tip\", onclick: () => this._openPrompt(\"distortion\") }, \"Distortion:\"), this._distortionSlider.container);\r\n    private readonly _aliasingBox: HTMLInputElement = input({ type: \"checkbox\", style: \"width: 1em; padding: 0; margin-right: 4em;\" });\r\n    private readonly _aliasingRow: HTMLElement = div({ class: \"selectRow\" }, span({ class: \"tip\", style: \"margin-left:10px;\", onclick: () => this._openPrompt(\"aliases\") }, \"Aliasing:\"), this._aliasingBox);\r\n    private readonly _bitcrusherQuantizationSlider: Slider = new Slider(input({ style: \"margin: 0;\", type: \"range\", min: \"0\", max: Config.bitcrusherQuantizationRange - 1, value: \"0\", step: \"1\" }), this._doc, (oldValue: number, newValue: number) => new ChangeBitcrusherQuantization(this._doc, oldValue, newValue), false);\r\n    private readonly _bitcrusherQuantizationRow: HTMLDivElement = div({ class: \"selectRow\" }, span({ class: \"tip\", onclick: () => this._openPrompt(\"bitcrusherQuantization\") }, \"Bit Crush:\"), this._bitcrusherQuantizationSlider.container);\r\n    private readonly _bitcrusherFreqSlider: Slider = new Slider(input({ style: \"margin: 0;\", type: \"range\", min: \"0\", max: Config.bitcrusherFreqRange - 1, value: \"0\", step: \"1\" }), this._doc, (oldValue: number, newValue: number) => new ChangeBitcrusherFreq(this._doc, oldValue, newValue), false);\r\n    private readonly _bitcrusherFreqRow: HTMLDivElement = div({ class: \"selectRow\" }, span({ class: \"tip\", onclick: () => this._openPrompt(\"bitcrusherFreq\") }, \"Freq Crush:\"), this._bitcrusherFreqSlider.container);\r\n    private readonly _stringSustainSlider: Slider = new Slider(input({ style: \"margin: 0;\", type: \"range\", min: \"0\", max: Config.stringSustainRange - 1, value: \"0\", step: \"1\" }), this._doc, (oldValue: number, newValue: number) => new ChangeStringSustain(this._doc, oldValue, newValue), false);\r\n    private readonly _stringSustainRow: HTMLDivElement = div({ class: \"selectRow\" }, span({ class: \"tip\", onclick: () => this._openPrompt(\"stringSustain\") }, \"Sustain:\"), this._stringSustainSlider.container);\r\n    private readonly _unisonSelect: HTMLSelectElement = buildOptions(select(), Config.unisons.map(unison => unison.name));\r\n    private readonly _unisonSelectRow: HTMLElement = div({ class: \"selectRow\" }, span({ class: \"tip\", onclick: () => this._openPrompt(\"unison\") }, \"Unison:\"), div({ class: \"selectContainer\" }, this._unisonSelect));\r\n    private readonly _chordSelect: HTMLSelectElement = buildOptions(select(), Config.chords.map(chord => chord.name));\r\n    private readonly _chordDropdown: HTMLButtonElement = button({ style: \"margin-left:0em; height:1.5em; width: 10px; padding: 0px; font-size: 8px;\", onclick: () => this._toggleDropdownMenu(DropdownID.Chord) }, \"▼\");\r\n\r\n    private readonly _chordSelectRow: HTMLElement = div({ class: \"selectRow\" }, span({ class: \"tip\", onclick: () => this._openPrompt(\"chords\") }, \"Chords:\"), this._chordDropdown, div({ class: \"selectContainer\" }, this._chordSelect));\r\n    private readonly _arpeggioSpeedSlider: Slider = new Slider(input({ style: \"margin: 0;\", type: \"range\", min: \"0\", max: Config.modulators.dictionary[\"arp speed\"].maxRawVol, value: \"0\", step: \"1\" }), this._doc, (oldValue: number, newValue: number) => new ChangeArpeggioSpeed(this._doc, oldValue, newValue), false);\r\n    private readonly _arpeggioSpeedRow: HTMLElement = div({ class: \"selectRow\" }, span({ class: \"tip\", style: \"margin-left:10px;\", onclick: () => this._openPrompt(\"arpeggioSpeed\") }, \"Speed:\"), this._arpeggioSpeedSlider.container);\r\n    private readonly _twoNoteArpBox: HTMLInputElement = input({ type: \"checkbox\", style: \"width: 1em; padding: 0; margin-right: 4em;\" });\r\n    private readonly _twoNoteArpRow: HTMLElement = div({ class: \"selectRow\" }, span({ class: \"tip\", style: \"margin-left:10px;\", onclick: () => this._openPrompt(\"twoNoteArpeggio\") }, \"Fast Two-Note:\"), this._twoNoteArpBox);\r\n    private readonly _chordDropdownGroup: HTMLElement = div({ class: \"editor-controls\", style: \"display: none;\" }, this._arpeggioSpeedRow, this._twoNoteArpRow);\r\n\r\n    private readonly _vibratoSelect: HTMLSelectElement = buildOptions(select(), Config.vibratos.map(vibrato => vibrato.name));\r\n    private readonly _vibratoDropdown: HTMLButtonElement = button({ style: \"margin-left:0em; height:1.5em; width: 10px; padding: 0px; font-size: 8px;\", onclick: () => this._toggleDropdownMenu(DropdownID.Vibrato) }, \"▼\");\r\n    private readonly _vibratoSelectRow: HTMLElement = div({ class: \"selectRow\" }, span({ class: \"tip\", onclick: () => this._openPrompt(\"vibrato\") }, \"Vibrato:\"), this._vibratoDropdown, div({ class: \"selectContainer\", style: \"width: 61.5%;\" }, this._vibratoSelect));\r\n    private readonly _vibratoDepthSlider: Slider = new Slider(input({ style: \"margin: 0;\", type: \"range\", min: \"0\", max: Config.modulators.dictionary[\"vibrato depth\"].maxRawVol, value: \"0\", step: \"1\" }), this._doc, (oldValue: number, newValue: number) => new ChangeVibratoDepth(this._doc, oldValue, newValue), false);\r\n    private readonly _vibratoDepthRow: HTMLElement = div({ class: \"selectRow\" }, span({ class: \"tip\", style: \"margin-left:10px;\", onclick: () => this._openPrompt(\"vibratoDepth\") }, \"Depth:\"), this._vibratoDepthSlider.container);\r\n    private readonly _vibratoSpeedSlider: Slider = new Slider(input({ style: \"margin: 0;\", type: \"range\", min: \"0\", max: Config.modulators.dictionary[\"vibrato speed\"].maxRawVol, value: \"0\", step: \"1\" }), this._doc, (oldValue: number, newValue: number) => new ChangeVibratoSpeed(this._doc, oldValue, newValue), false);\r\n    private readonly _vibratoSpeedRow: HTMLElement = div({ class: \"selectRow\" }, span({ class: \"tip\", style: \"margin-left:10px;\", onclick: () => this._openPrompt(\"vibratoSpeed\") }, \"Speed:\"), this._vibratoSpeedSlider.container);\r\n    private readonly _vibratoDelaySlider: Slider = new Slider(input({ style: \"margin: 0;\", type: \"range\", min: \"0\", max: Config.modulators.dictionary[\"vibrato delay\"].maxRawVol, value: \"0\", step: \"1\" }), this._doc, (oldValue: number, newValue: number) => new ChangeVibratoDelay(this._doc, oldValue, newValue), false);\r\n    private readonly _vibratoDelayRow: HTMLElement = div({ class: \"selectRow\" }, span({ class: \"tip\", style: \"margin-left:10px;\", onclick: () => this._openPrompt(\"vibratoDelay\") }, \"Delay:\"), this._vibratoDelaySlider.container);\r\n    private readonly _vibratoTypeSelect: HTMLSelectElement = buildOptions(select(), Config.vibratoTypes.map(vibrato => vibrato.name));\r\n    private readonly _vibratoTypeSelectRow: HTMLElement = div({ class: \"selectRow\" }, span({ class: \"tip\", style: \"margin-left:10px;\", onclick: () => this._openPrompt(\"vibratoType\") }, \"Type:\"), div({ class: \"selectContainer\", style: \"width: 61.5%;\" }, this._vibratoTypeSelect));\r\n    private readonly _vibratoDropdownGroup: HTMLElement = div({ class: \"editor-controls\", style: \"display: none;\" }, this._vibratoDepthRow, this._vibratoSpeedRow, this._vibratoDelayRow, this._vibratoTypeSelectRow);\r\n    private readonly _phaseModGroup: HTMLElement = div({ class: \"editor-controls\" });\r\n    private readonly _feedbackTypeSelect: HTMLSelectElement = buildOptions(select(), Config.feedbacks.map(feedback => feedback.name));\r\n    private readonly _feedbackRow1: HTMLDivElement = div({ class: \"selectRow\" }, span({ class: \"tip\", onclick: () => this._openPrompt(\"feedbackType\") }, \"Feedback:\"), div({ class: \"selectContainer\" }, this._feedbackTypeSelect));\r\n    private readonly _spectrumEditor: SpectrumEditor = new SpectrumEditor(this._doc, null);\r\n    private readonly _spectrumRow: HTMLElement = div({ class: \"selectRow\" }, span({ class: \"tip\", onclick: () => this._openPrompt(\"spectrum\") }, \"Spectrum:\"), this._spectrumEditor.container);\r\n    private readonly _harmonicsEditor: HarmonicsEditor = new HarmonicsEditor(this._doc);\r\n    private readonly _harmonicsRow: HTMLElement = div({ class: \"selectRow\" }, span({ class: \"tip\", onclick: () => this._openPrompt(\"harmonics\") }, \"Harmonics:\"), this._harmonicsEditor.container);\r\n    private readonly _envelopeEditor: EnvelopeEditor = new EnvelopeEditor(this._doc);\r\n    private readonly _drumsetGroup: HTMLElement = div({ class: \"editor-controls\" });\r\n    private readonly _modulatorGroup: HTMLElement = div({ class: \"editor-controls\" });\r\n    private readonly _modNameRows: HTMLElement[];\r\n    private readonly _modChannelBoxes: HTMLSelectElement[];\r\n    private readonly _modInstrumentBoxes: HTMLSelectElement[];\r\n    private readonly _modSetRows: HTMLElement[];\r\n    private readonly _modSetBoxes: HTMLSelectElement[];\r\n    private readonly _modFilterRows: HTMLElement[];\r\n    private readonly _modFilterBoxes: HTMLSelectElement[];\r\n    private readonly _modTargetIndicators: SVGElement[];\r\n\r\n    private readonly _feedback6OpTypeSelect: HTMLSelectElement = buildOptions(select(), Config.feedbacks6Op.map(feedback => feedback.name));\r\n    private readonly _feedback6OpRow1: HTMLDivElement = div({ class: \"selectRow\" }, span({ class: \"tip\", onclick: () => this._openPrompt(\"feedbackType\") }, \"Feedback:\"), div({ class: \"selectContainer\" }, this._feedback6OpTypeSelect));\r\n\r\n    private readonly _algorithmCanvasSwitch: HTMLButtonElement = button({ style: \"margin-left:0em; height:1.5em; width: 10px; padding: 0px; font-size: 8px;\", onclick: (e:Event) => this._toggleAlgorithmCanvas(e) }, \"F\");\r\n    private readonly _customAlgorithmCanvas: CustomAlgorythmCanvas = new CustomAlgorythmCanvas(canvas({ width: 144, height: 144, style: \"border:2px solid \" + ColorConfig.uiWidgetBackground, id: \"customAlgorithmCanvas\" }), this._doc, (newArray: number[][], carry: number, mode: string) => new ChangeCustomAlgorythmorFeedback(this._doc, newArray, carry, mode));\r\n    private readonly _algorithm6OpSelect: HTMLSelectElement = buildOptions(select(), Config.algorithms6Op.map(algorithm => algorithm.name));\r\n    private readonly _algorithm6OpSelectRow: HTMLDivElement = div(div({ class: \"selectRow\" }, span({ class: \"tip\", onclick: () => this._openPrompt(\"algorithm\") }, \"Algorithm: \"), div({ class: \"selectContainer\" }, this._algorithm6OpSelect))\r\n        , div({ style: \"height:144px; display:flex; flex-direction: row; align-items:center; justify-content:center;\" }, div({style:\"display:block; width:10px; margin-right: 0.2em\"},this._algorithmCanvasSwitch), div({style: \"width:144px; height:144px;\"},this._customAlgorithmCanvas.canvas)));//temp\r\n\r\n    private readonly _instrumentCopyButton: HTMLButtonElement = button({ style: \"max-width:86px; width: 86px;\", class: \"copyButton\" }, [\r\n        \"Copy\",\r\n        // Copy icon:\r\n        SVG.svg({ style: \"flex-shrink: 0; position: absolute; left: 0; top: 50%; margin-top: -1em; pointer-events: none;\", width: \"2em\", height: \"2em\", viewBox: \"-5 -21 26 26\" }, [\r\n            SVG.path({ d: \"M 0 -15 L 1 -15 L 1 0 L 13 0 L 13 1 L 0 1 L 0 -15 z M 2 -1 L 2 -17 L 10 -17 L 14 -13 L 14 -1 z M 3 -2 L 13 -2 L 13 -12 L 9 -12 L 9 -16 L 3 -16 z\", fill: \"currentColor\" }),\r\n        ]),\r\n    ]);\r\n    private readonly _instrumentPasteButton: HTMLButtonElement = button({ style: \"max-width:86px;\", class: \"pasteButton\" }, [\r\n        \"Paste\",\r\n        // Paste icon:\r\n        SVG.svg({ style: \"flex-shrink: 0; position: absolute; left: 0; top: 50%; margin-top: -1em; pointer-events: none;\", width: \"2em\", height: \"2em\", viewBox: \"0 0 26 26\" }, [\r\n            SVG.path({ d: \"M 8 18 L 6 18 L 6 5 L 17 5 L 17 7 M 9 8 L 16 8 L 20 12 L 20 22 L 9 22 z\", stroke: \"currentColor\", fill: \"none\" }),\r\n            SVG.path({ d: \"M 9 3 L 14 3 L 14 6 L 9 6 L 9 3 z M 16 8 L 20 12 L 16 12 L 16 8 z\", fill: \"currentColor\", }),\r\n        ]),\r\n    ]);\r\n\r\n    public readonly _globalOscscope: oscilascopeCanvas = new oscilascopeCanvas(canvas({ width: 144, height: 32, style: `border: 2px solid ${ColorConfig.uiWidgetBackground}; position: static;`, id: \"oscilascopeAll\" }), 1);\r\n    private readonly _globalOscscopeContainer: HTMLDivElement = div({ style: \"height: 38px; margin-left: auto; margin-right: auto;\" },\r\n        this._globalOscscope.canvas\r\n    );\r\n    private readonly _customWaveDrawCanvas: CustomChipCanvas = new CustomChipCanvas(canvas({ width: 128, height: 52, style: \"border:2px solid \" + ColorConfig.uiWidgetBackground, id: \"customWaveDrawCanvas\" }), this._doc, (newArray: Float32Array) => new ChangeCustomWave(this._doc, newArray));\r\n    private readonly _customWavePresetDrop: HTMLSelectElement = buildHeaderedOptions(\"Load Preset\", select({ style: \"width: 50%; height:1.5em; text-align: center; text-align-last: center;\" }),\r\n        Config.chipWaves.map(wave => wave.name)\r\n    );\r\n    private readonly _customWaveZoom: HTMLButtonElement = button({ style: \"margin-left:0.5em; height:1.5em; max-width: 20px;\", onclick: () => this._openPrompt(\"customChipSettings\") }, \"+\");\r\n\r\n    private readonly _customWaveDraw: HTMLDivElement = div({ style: \"height:80px; margin-top:10px; margin-bottom:5px\" }, [\r\n        div({ style: \"height:54px; display:flex; justify-content:center;\" }, [this._customWaveDrawCanvas.canvas]),\r\n        div({ style: \"margin-top:5px; display:flex; justify-content:center;\" }, [this._customWavePresetDrop, this._customWaveZoom]),\r\n    ]);\r\n\r\n    private readonly _songTitleInputBox: InputBox = new InputBox(input({ style: \"font-weight:bold; border:none; width: 100%; background-color:${ColorConfig.editorBackground}; color:${ColorConfig.primaryText}; text-align:center\", maxlength: \"30\", type: \"text\", value: EditorConfig.versionDisplayName }), this._doc, (oldValue: string, newValue: string) => new ChangeSongTitle(this._doc, oldValue, newValue));\r\n\r\n\r\n    private readonly _feedbackAmplitudeSlider: Slider = new Slider(input({ type: \"range\", min: \"0\", max: Config.operatorAmplitudeMax, value: \"0\", step: \"1\", title: \"Feedback Amplitude\" }), this._doc, (oldValue: number, newValue: number) => new ChangeFeedbackAmplitude(this._doc, oldValue, newValue), false);\r\n    private readonly _feedbackRow2: HTMLDivElement = div({ class: \"selectRow\" }, span({ class: \"tip\", onclick: () => this._openPrompt(\"feedbackVolume\") }, \"Fdback Vol:\"), this._feedbackAmplitudeSlider.container);\r\n    /*\r\n     * @jummbus - my very real, valid reason for cutting this button: I don't like it.\r\n     * \r\n    private readonly _customizeInstrumentButton: HTMLButtonElement = button({type: \"button\", style: \"margin: 2px 0\"},\r\n\r\n        \"Customize Instrument\",\r\n    );\r\n    */\r\n    private readonly _addEnvelopeButton: HTMLButtonElement = button({ type: \"button\", class: \"add-envelope\" });\r\n    private readonly _customInstrumentSettingsGroup: HTMLDivElement = div({ class: \"editor-controls\" },\r\n        this._panSliderRow,\r\n        this._panDropdownGroup,\r\n        this._chipWaveSelectRow,\r\n        this._chipNoiseSelectRow,\r\n\tthis._useChipWaveAdvancedLoopControlsRow,\r\n\tthis._chipWaveLoopModeSelectRow,\r\n\tthis._chipWaveLoopStartRow,\r\n\tthis._chipWaveLoopEndRow,\r\n\tthis._chipWaveStartOffsetRow,\r\n\tthis._chipWavePlayBackwardsRow,\r\n        this._customWaveDraw,\r\n        this._eqFilterTypeRow,\r\n        this._eqFilterRow,\r\n        this._eqFilterSimpleCutRow,\r\n        this._eqFilterSimplePeakRow,\r\n        this._fadeInOutRow,\r\n        this._algorithmSelectRow,\r\n\t\tthis._algorithm6OpSelectRow,\r\n        this._phaseModGroup,\r\n        this._feedbackRow1,\r\n\t\tthis._feedback6OpRow1,\r\n        this._feedbackRow2,\r\n        this._spectrumRow,\r\n        this._harmonicsRow,\r\n        this._drumsetGroup,\r\n        this._pulseWidthRow,\r\n        this._stringSustainRow,\r\n        this._unisonSelectRow,\r\n        div({ style: `padding: 2px 0; margin-left: 2em; display: flex; align-items: center;` },\r\n            span({ style: `flex-grow: 1; text-align: center;` }, span({ class: \"tip\", onclick: () => this._openPrompt(\"effects\") }, \"Effects\")),\r\n            div({ class: \"effects-menu\" }, this._effectsSelect),\r\n        ),\r\n        this._transitionRow,\r\n        this._transitionDropdownGroup,\r\n        this._chordSelectRow,\r\n        this._chordDropdownGroup,\r\n        this._pitchShiftRow,\r\n        this._detuneSliderRow,\r\n        this._vibratoSelectRow,\r\n        this._vibratoDropdownGroup,\r\n        this._noteFilterTypeRow,\r\n        this._noteFilterRow,\r\n        this._noteFilterSimpleCutRow,\r\n        this._noteFilterSimplePeakRow,\r\n        this._distortionRow,\r\n        this._aliasingRow,\r\n        this._bitcrusherQuantizationRow,\r\n        this._bitcrusherFreqRow,\r\n        this._chorusRow,\r\n        this._echoSustainRow,\r\n        this._echoDelayRow,\r\n        this._reverbRow,\r\n        div({ style: `padding: 2px 0; margin-left: 2em; display: flex; align-items: center;` },\r\n            span({ style: `flex-grow: 1; text-align: center;` }, span({ class: \"tip\", onclick: () => this._openPrompt(\"envelopes\") }, \"Envelopes\")),\r\n            this._addEnvelopeButton,\r\n        ),\r\n        this._envelopeEditor.container,\r\n    );\r\n    private readonly _instrumentCopyGroup: HTMLDivElement = div({ class: \"editor-controls\" },\r\n        div({ class: \"selectRow\" },\r\n            this._instrumentCopyButton,\r\n            this._instrumentPasteButton,\r\n        ),\r\n    );\r\n    private readonly _instrumentSettingsTextRow: HTMLDivElement = div({ id: \"instrumentSettingsText\", style: `padding: 3px 0; max-width: 15em; text-align: center; color: ${ColorConfig.secondaryText};` },\r\n        \"Instrument Settings\"\r\n    );\r\n    private readonly _instrumentTypeSelectRow: HTMLDivElement = div({ class: \"selectRow\", id: \"typeSelectRow\" },\r\n        span({ class: \"tip\", onclick: () => this._openPrompt(\"instrumentType\") }, \"Type:\"),\r\n        div(\r\n            div({ class: \"pitchSelect\" }, this._pitchedPresetSelect),\r\n            div({ class: \"drumSelect\" }, this._drumPresetSelect)\r\n        ),\r\n    );\r\n    private readonly _instrumentSettingsGroup: HTMLDivElement = div({ class: \"editor-controls\" },\r\n        this._instrumentSettingsTextRow,\r\n        this._instrumentsButtonRow,\r\n        this._instrumentTypeSelectRow,\r\n        this._instrumentVolumeSliderRow,\r\n        //this._customizeInstrumentButton,\r\n        this._customInstrumentSettingsGroup,\r\n    );\r\n    private readonly _usedPatternIndicator: SVGElement = SVG.path({ d: \"M -6 -6 H 6 V 6 H -6 V -6 M -2 -3 L -2 -3 L -1 -4 H 1 V 4 H -1 V -1.2 L -1.2 -1 H -2 V -3 z\", fill: ColorConfig.indicatorSecondary, \"fill-rule\": \"evenodd\" });\r\n    private readonly _usedInstrumentIndicator: SVGElement = SVG.path({ d: \"M -6 -0.8 H -3.8 V -6 H 0.8 V 4.4 H 2.2 V -0.8 H 6 V 0.8 H 3.8 V 6 H -0.8 V -4.4 H -2.2 V 0.8 H -6 z\", fill: ColorConfig.indicatorSecondary });\r\n    private readonly _jumpToModIndicator: SVGElement = SVG.svg({ style: \"width: 92%; height: 1.3em; flex-shrink: 0; position: absolute;\", viewBox: \"0 0 200 200\" }, [\r\n        SVG.path({ d: \"M90 155 l0 -45 -45 0 c-25 0 -45 -4 -45 -10 0 -5 20 -10 45 -10 l45 0 0 -45 c0 -25 5 -45 10 -45 6 0 10 20 10 45 l0 45 45 0 c25 0 45 5 45 10 0 6 -20 10 -45 10 l -45 0 0 45 c0 25 -4 45 -10 45 -5 0 -10 -20 -10 -45z\" }),\r\n        SVG.path({ d: \"M42 158 c-15 -15 -16 -38 -2 -38 6 0 10 7 10 15 0 8 7 15 15 15 8 0 15 5 15 10 0 14 -23 13 -38 -2z\" }),\r\n        SVG.path({ d: \"M120 160 c0 -5 7 -10 15 -10 8 0 15 -7 15 -15 0 -8 5 -15 10 -15 14 0 13 23 -2 38 -15 15 -38 16 -38 2z\" }),\r\n        SVG.path({ d: \"M32 58 c3 -23 48 -40 48 -19 0 6 -7 11 -15 11 -8 0 -15 7 -15 15 0 8 -5 15 -11 15 -6 0 -9 -10 -7 -22z\" }),\r\n        SVG.path({ d: \"M150 65 c0 -8 -7 -15 -15 -15 -8 0 -15 -4 -15 -10 0 -14 23 -13 38 2 15 15 16 38 2 38 -5 0 -10 -7 -10 -15z\" })]);\r\n\r\n    private readonly _promptContainer: HTMLDivElement = div({ class: \"promptContainer\", style: \"display: none;\" });\r\n    private readonly _zoomInButton: HTMLButtonElement = button({ class: \"zoomInButton\", type: \"button\", title: \"Zoom In\" });\r\n    private readonly _zoomOutButton: HTMLButtonElement = button({ class: \"zoomOutButton\", type: \"button\", title: \"Zoom Out\" });\r\n    private readonly _patternEditorRow: HTMLDivElement = div({ style: \"flex: 1; height: 100%; display: flex; overflow: hidden; justify-content: center;\" },\r\n        this._patternEditorPrev.container,\r\n        this._patternEditor.container,\r\n        this._patternEditorNext.container,\r\n    );\r\n    private readonly _patternArea: HTMLDivElement = div({ class: \"pattern-area\" },\r\n        this._piano.container,\r\n        this._patternEditorRow,\r\n        this._octaveScrollBar.container,\r\n        this._zoomInButton,\r\n        this._zoomOutButton,\r\n    );\r\n    private readonly _trackContainer: HTMLDivElement = div({ class: \"trackContainer\" },\r\n        this._trackEditor.container,\r\n        this._loopEditor.container,\r\n    );\r\n    private readonly _trackVisibleArea: HTMLDivElement = div({ style: \"position: absolute; width: 100%; height: 100%; pointer-events: none;\" });\r\n    private readonly _trackAndMuteContainer: HTMLDivElement = div({ class: \"trackAndMuteContainer\" },\r\n        this._muteEditor.container,\r\n        this._trackContainer,\r\n        this._trackVisibleArea,\r\n    );\r\n    public readonly _barScrollBar: BarScrollBar = new BarScrollBar(this._doc, this._trackAndMuteContainer);\r\n    private readonly _trackArea: HTMLDivElement = div({ class: \"track-area\" },\r\n        this._trackAndMuteContainer,\r\n        this._barScrollBar.container,\r\n    );\r\n\r\n    private readonly _menuArea: HTMLDivElement = div({ class: \"menu-area\" },\r\n        div({ class: \"selectContainer menu file\" },\r\n            this._fileMenu,\r\n        ),\r\n        div({ class: \"selectContainer menu edit\" },\r\n            this._editMenu,\r\n        ),\r\n        div({ class: \"selectContainer menu preferences\" },\r\n            this._optionsMenu,\r\n        ),\r\n    );\r\n\r\n    private readonly _sampleLoadingBar: HTMLDivElement = div({ style: `width: 0%; height: 100%; background-color: ${ColorConfig.indicatorPrimary};` });\r\n    private readonly _sampleLoadingBarContainer: HTMLDivElement = div({ style: `width: 80%; height: 4px; overflow: hidden; margin-left: auto; margin-right: auto; margin-top: 0.5em; cursor: pointer; background-color: ${ColorConfig.indicatorSecondary};` }, this._sampleLoadingBar);\r\n    private readonly _sampleLoadingStatusContainer: HTMLDivElement = div(\r\n        div({ style: `margin-top: 0.5em; text-align: center; color: ${ColorConfig.secondaryText};` }, \"Sample Loading Status\"),\r\n        div({ class: \"selectRow\", style: \"height: 6px; margin-bottom: 0.5em;\" },\r\n            this._sampleLoadingBarContainer,\r\n        ),\r\n    );\r\n\r\n    private readonly _songSettingsArea: HTMLDivElement = div({ class: \"song-settings-area\" },\r\n        div({ class: \"editor-controls\" },\r\n            div({ class: \"editor-song-settings\" },\r\n                div({ style: \"margin: 3px 0; position: relative; text-align: center; color: ${ColorConfig.secondaryText};\" },\r\n                    div({ class: \"tip\", style: \"flex-shrink: 0; position:absolute; left: 0; top: 0; width: 12px; height: 12px\", onclick: () => this._openPrompt(\"usedPattern\") },\r\n                        SVG.svg({ style: \"flex-shrink: 0; position: absolute; left: 0; top: 0; pointer-events: none;\", width: \"12px\", height: \"12px\", \"margin-right\": \"0.5em\", viewBox: \"-6 -6 12 12\" },\r\n                            this._usedPatternIndicator,\r\n                        ),\r\n                    ),\r\n                    div({ class: \"tip\", style: \"flex-shrink: 0; position: absolute; left: 14px; top: 0; width: 12px; height: 12px\", onclick: () => this._openPrompt(\"usedInstrument\") },\r\n                        SVG.svg({ style: \"flex-shrink: 0; position: absolute; left: 0; top: 0; pointer-events: none;\", width: \"12px\", height: \"12px\", \"margin-right\": \"1em\", viewBox: \"-6 -6 12 12\" },\r\n                            this._usedInstrumentIndicator,\r\n                        ),\r\n                    ),\r\n                    \"Song Settings\",\r\n                    div({ style: \"width: 100%; left: 0; top: -1px; position:absolute; overflow-x:clip;\" }, this._jumpToModIndicator),\r\n                ),\r\n            ),\r\n            div({ class: \"selectRow\" },\r\n                span({ class: \"tip\", onclick: () => this._openPrompt(\"scale\") }, \"Scale: \"),\r\n                div({ class: \"selectContainer\" }, this._scaleSelect),\r\n            ),\r\n            div({ class: \"selectRow\" },\r\n                span({ class: \"tip\", onclick: () => this._openPrompt(\"key\") }, \"Key: \"),\r\n                div({ class: \"selectContainer\" }, this._keySelect),\r\n            ),\r\n            div({ class: \"selectRow\" },\r\n                span({ class: \"tip\", onclick: () => this._openPrompt(\"key_octave\") }, \"Octave: \"),\r\n                this._octaveStepper,\r\n            ),\r\n            div({ class: \"selectRow\" },\r\n                span({ class: \"tip\", onclick: () => this._openPrompt(\"tempo\") }, \"Tempo: \"),\r\n                span({ style: \"display: flex;\" },\r\n                    this._tempoSlider.container,\r\n                    this._tempoStepper,\r\n                ),\r\n            ),\r\n            div({ class: \"selectRow\" },\r\n                span({ class: \"tip\", onclick: () => this._openPrompt(\"rhythm\") }, \"Rhythm: \"),\r\n                div({ class: \"selectContainer\" }, this._rhythmSelect),\r\n            ),\r\n            this._sampleLoadingStatusContainer,\r\n        ),\r\n    );\r\n    private readonly _instrumentSettingsArea: HTMLDivElement = div({ class: \"instrument-settings-area\" },\r\n        this._instrumentSettingsGroup,\r\n        this._modulatorGroup);\r\n    public readonly _settingsArea: HTMLDivElement = div({ class: \"settings-area noSelection\" },\r\n        div({ class: \"version-area\" },\r\n            div({ style: `text-align: center; margin: 3px 0; color: ${ColorConfig.secondaryText};` },\r\n                this._songTitleInputBox.input,\r\n            ),\r\n        ),\r\n        div({ class: \"play-pause-area\" },\r\n            this._volumeBarBox,\r\n            div({ class: \"playback-bar-controls\" },\r\n                this._playButton,\r\n                this._pauseButton,\r\n                this._recordButton,\r\n                this._stopButton,\r\n                this._prevBarButton,\r\n                this._nextBarButton,\r\n            ),\r\n            div({ class: \"playback-volume-controls\" },\r\n                span({ class: \"volume-speaker\" }),\r\n                this._volumeSlider.container,\r\n            ),\r\n            this._globalOscscopeContainer,\r\n        ),\r\n        this._menuArea,\r\n        this._songSettingsArea,\r\n        this._instrumentSettingsArea,\r\n    );\r\n\r\n    public readonly mainLayer: HTMLDivElement = div({ class: \"beepboxEditor\", tabIndex: \"0\" },\r\n        this._patternArea,\r\n        this._trackArea,\r\n        this._settingsArea,\r\n        this._promptContainer,\r\n    );\r\n\r\n    private _wasPlaying: boolean = false;\r\n    private _currentPromptName: string | null = null;\r\n    private _highlightedInstrumentIndex: number = -1;\r\n    private _renderedInstrumentCount: number = 0;\r\n    private _renderedIsPlaying: boolean = false;\r\n    private _renderedIsRecording: boolean = false;\r\n    private _renderedShowRecordButton: boolean = false;\r\n    private _renderedCtrlHeld: boolean = false;\r\n    private _ctrlHeld: boolean = false;\r\n    private _deactivatedInstruments: boolean = false;\r\n    private readonly _operatorRows: HTMLDivElement[] = [];\r\n    private readonly _operatorAmplitudeSliders: Slider[] = [];\r\n    private readonly _operatorFrequencySelects: HTMLSelectElement[] = [];\r\n    private readonly _operatorDropdowns: HTMLButtonElement[] = [];\r\n    private readonly _operatorWaveformSelects: HTMLSelectElement[] = [];\r\n    private readonly _operatorWaveformHints: HTMLSpanElement[] = [];\r\n    private readonly _operatorWaveformPulsewidthSliders: Slider[] = [];\r\n    private readonly _operatorDropdownRows: HTMLElement[] = []\r\n    private readonly _operatorDropdownGroups: HTMLDivElement[] = [];\r\n    private readonly _drumsetSpectrumEditors: SpectrumEditor[] = [];\r\n    private readonly _drumsetEnvelopeSelects: HTMLSelectElement[] = [];\r\n    private _showModSliders: boolean[] = [];\r\n    private _newShowModSliders: boolean[] = [];\r\n    private _modSliderValues: number[] = [];\r\n    private _hasActiveModSliders: boolean = false;\r\n\r\n    private _openPanDropdown: boolean = false;\r\n    private _openVibratoDropdown: boolean = false;\r\n    private _openChordDropdown: boolean = false;\r\n    private _openTransitionDropdown: boolean = false;\r\n    private _openOperatorDropdowns: boolean[] = [];\r\n\r\n    private outVolumeHistoricTimer: number = 0;\r\n    private outVolumeHistoricCap: number = 0;\r\n    private lastOutVolumeCap: number = 0;\r\n\r\n    constructor(private _doc: SongDocument) {\r\n\r\n        this._doc.notifier.watch(this.whenUpdated);\r\n        new MidiInputHandler(this._doc);\r\n        window.addEventListener(\"resize\", this.whenUpdated);\r\n        window.requestAnimationFrame(this.updatePlayButton);\r\n        window.requestAnimationFrame(this._animate);\r\n\r\n        if (!(\"share\" in navigator)) {\r\n            this._fileMenu.removeChild(this._fileMenu.querySelector(\"[value='shareUrl']\")!);\r\n        }\r\n\r\n        this._scaleSelect.appendChild(optgroup({ label: \"Edit\" },\r\n            option({ value: \"forceScale\" }, \"Snap Notes To Scale\"),\r\n            option({ value: \"customize\" }, \"Edit Custom Scale\"),\r\n        ));\r\n        this._keySelect.appendChild(optgroup({ label: \"Edit\" },\r\n            option({ value: \"detectKey\" }, \"Detect Key\"),\r\n        ));\r\n        this._rhythmSelect.appendChild(optgroup({ label: \"Edit\" },\r\n            option({ value: \"forceRhythm\" }, \"Snap Notes To Rhythm\"),\r\n        ));\r\n\r\n        this._vibratoSelect.appendChild(option({ hidden: true, value: 5 }, \"custom\"));\r\n\r\n        this._showModSliders = new Array<boolean>(Config.modulators.length);\r\n        this._modSliderValues = new Array<number>(Config.modulators.length);\r\n\r\n        this._phaseModGroup.appendChild(div({ class: \"selectRow\", style: `color: ${ColorConfig.secondaryText}; height: 1em; margin-top: 0.5em;` },\r\n            div({ style: \"margin-right: .1em; visibility: hidden;\" }, 1 + \".\"),\r\n            div({ style: \"width: 3em; margin-right: .3em;\", class: \"tip\", onclick: () => this._openPrompt(\"operatorFrequency\") }, \"Freq:\"),\r\n            div({ class: \"tip\", onclick: () => this._openPrompt(\"operatorVolume\") }, \"Volume:\"),\r\n        ));\r\n        for (let i: number = 0; i < Config.operatorCount+2; i++) {\r\n            const operatorIndex: number = i;\r\n            const operatorNumber: HTMLDivElement = div({ style: \"margin-right: 0px; color: \" + ColorConfig.secondaryText + \";\" }, i + 1 + \"\");\r\n            const frequencySelect: HTMLSelectElement = buildOptions(select({ style: \"width: 100%;\", title: \"Frequency\" }), Config.operatorFrequencies.map(freq => freq.name));\r\n            const amplitudeSlider: Slider = new Slider(input({ type: \"range\", min: \"0\", max: Config.operatorAmplitudeMax, value: \"0\", step: \"1\", title: \"Volume\" }), this._doc, (oldValue: number, newValue: number) => new ChangeOperatorAmplitude(this._doc, operatorIndex, oldValue, newValue), false);\r\n            const waveformSelect: HTMLSelectElement = buildOptions(select({ style: \"width: 100%;\", title: \"Waveform\" }), Config.operatorWaves.map(wave => wave.name));\r\n            const waveformDropdown: HTMLButtonElement = button({ style: \"margin-left:0em; margin-right: 2px; height:1.5em; width: 8px; max-width: 10px; padding: 0px; font-size: 8px;\", onclick: () => this._toggleDropdownMenu(DropdownID.FM, i) }, \"▼\");\r\n            const waveformDropdownHint: HTMLSpanElement = span({ class: \"tip\", style: \"margin-left: 10px;\", onclick: () => this._openPrompt(\"operatorWaveform\") }, \"Wave:\");\r\n            const waveformPulsewidthSlider: Slider = new Slider(input({ style: \"margin-left: 10px; width: 85%;\", type: \"range\", min: \"0\", max: Config.pwmOperatorWaves.length - 1, value: \"0\", step: \"1\", title: \"Pulse Width\" }), this._doc, (oldValue: number, newValue: number) => new ChangeOperatorPulseWidth(this._doc, operatorIndex, oldValue, newValue), true);\r\n            const waveformDropdownRow: HTMLElement = div({ class: \"selectRow\" }, waveformDropdownHint, waveformPulsewidthSlider.container,\r\n                div({ class: \"selectContainer\", style: \"width: 6em; margin-left: .3em;\" }, waveformSelect));\r\n            const waveformDropdownGroup: HTMLDivElement = div({ class: \"operatorRow\" }, waveformDropdownRow);\r\n            const row: HTMLDivElement = div({ class: \"selectRow\" },\r\n                operatorNumber,\r\n                waveformDropdown,\r\n                div({ class: \"selectContainer\", style: \"width: 3em; margin-right: .3em;\" }, frequencySelect),\r\n                amplitudeSlider.container,\r\n            );\r\n            this._phaseModGroup.appendChild(row);\r\n            this._operatorRows[i] = row;\r\n            this._operatorAmplitudeSliders[i] = amplitudeSlider;\r\n            this._operatorFrequencySelects[i] = frequencySelect;\r\n            this._operatorDropdowns[i] = waveformDropdown;\r\n            this._operatorWaveformHints[i] = waveformDropdownHint;\r\n            this._operatorWaveformSelects[i] = waveformSelect;\r\n            this._operatorWaveformPulsewidthSliders[i] = waveformPulsewidthSlider;\r\n            this._operatorDropdownRows[i] = waveformDropdownRow;\r\n            this._phaseModGroup.appendChild(waveformDropdownGroup);\r\n            this._operatorDropdownGroups[i] = waveformDropdownGroup;\r\n            this._openOperatorDropdowns[i] = false;\r\n\r\n            waveformSelect.addEventListener(\"change\", () => {\r\n                this._doc.record(new ChangeOperatorWaveform(this._doc, operatorIndex, waveformSelect.selectedIndex));\r\n            });\r\n\r\n            frequencySelect.addEventListener(\"change\", () => {\r\n                this._doc.record(new ChangeOperatorFrequency(this._doc, operatorIndex, frequencySelect.selectedIndex));\r\n            });\r\n        }\r\n\r\n        this._drumsetGroup.appendChild(\r\n            div({ class: \"selectRow\" },\r\n                span({ class: \"tip\", onclick: () => this._openPrompt(\"drumsetEnvelope\") }, \"Envelope:\"),\r\n                span({ class: \"tip\", onclick: () => this._openPrompt(\"drumsetSpectrum\") }, \"Spectrum:\"),\r\n            ),\r\n        );\r\n        for (let i: number = Config.drumCount - 1; i >= 0; i--) {\r\n            const drumIndex: number = i;\r\n            const spectrumEditor: SpectrumEditor = new SpectrumEditor(this._doc, drumIndex);\r\n            spectrumEditor.container.addEventListener(\"mousedown\", this.refocusStage);\r\n            this._drumsetSpectrumEditors[i] = spectrumEditor;\r\n\r\n            const envelopeSelect: HTMLSelectElement = buildOptions(select({ style: \"width: 100%;\", title: \"Filter Envelope\" }), Config.envelopes.map(envelope => envelope.name));\r\n            this._drumsetEnvelopeSelects[i] = envelopeSelect;\r\n            envelopeSelect.addEventListener(\"change\", () => {\r\n                this._doc.record(new ChangeDrumsetEnvelope(this._doc, drumIndex, envelopeSelect.selectedIndex));\r\n            });\r\n\r\n            const row: HTMLDivElement = div({ class: \"selectRow\" },\r\n                div({ class: \"selectContainer\", style: \"width: 5em; margin-right: .3em;\" }, envelopeSelect),\r\n                this._drumsetSpectrumEditors[i].container,\r\n            );\r\n            this._drumsetGroup.appendChild(row);\r\n        }\r\n\r\n        this._modNameRows = [];\r\n        this._modChannelBoxes = [];\r\n        this._modInstrumentBoxes = [];\r\n        this._modSetRows = [];\r\n        this._modSetBoxes = [];\r\n        this._modFilterRows = [];\r\n        this._modFilterBoxes = [];\r\n        this._modTargetIndicators = [];\r\n        for (let mod: number = 0; mod < Config.modCount; mod++) {\r\n\r\n            let modChannelBox: HTMLSelectElement = select({ style: \"width: 100%; color: currentColor; text-overflow:ellipsis;\" });\r\n            let modInstrumentBox: HTMLSelectElement = select({ style: \"width: 100%; color: currentColor;\" });\r\n\r\n            let modNameRow: HTMLDivElement = div({ class: \"operatorRow\", style: \"height: 1em; margin-bottom: 0.65em;\" },\r\n                div({ class: \"tip\", style: \"width: 10%; max-width: 5.4em;\", id: \"modChannelText\" + mod, onclick: () => this._openPrompt(\"modChannel\") }, \"Ch:\"),\r\n                div({ class: \"selectContainer\", style: 'width: 35%;' }, modChannelBox),\r\n                div({ class: \"tip\", style: \"width: 1.2em; margin-left: 0.8em;\", id: \"modInstrumentText\" + mod, onclick: () => this._openPrompt(\"modInstrument\") }, \"Ins:\"),\r\n                div({ class: \"selectContainer\", style: \"width: 10%;\" }, modInstrumentBox),\r\n            );\r\n\r\n            let modSetBox: HTMLSelectElement = select();\r\n            let modFilterBox: HTMLSelectElement = select();\r\n            let modSetRow: HTMLDivElement = div({ class: \"selectRow\", id: \"modSettingText\" + mod, style: \"margin-bottom: 0.9em; color: currentColor;\" }, span({ class: \"tip\", onclick: () => this._openPrompt(\"modSet\") }, \"Setting: \"), span({ class: \"tip\", style: \"font-size:x-small;\", onclick: () => this._openPrompt(\"modSetInfo\" + mod) }, \"?\"), div({ class: \"selectContainer\" }, modSetBox));\r\n            let modFilterRow: HTMLDivElement = div({ class: \"selectRow\", id: \"modFilterText\" + mod, style: \"margin-bottom: 0.9em; color: currentColor;\" }, span({ class: \"tip\", onclick: () => this._openPrompt(\"modFilter\" + mod) }, \"Target: \"), div({ class: \"selectContainer\" }, modFilterBox));\r\n\r\n            // @jummbus: I could template this up above and simply create from the template, especially since I also reuse it in song settings, but unsure how to do that with imperative-html :P\r\n            let modTarget: SVGElement = SVG.svg({ style: \"transform: translate(0px, 1px);\", width: \"1.5em\", height: \"1em\", viewBox: \"0 0 200 200\" }, [\r\n                SVG.path({ d: \"M90 155 l0 -45 -45 0 c-25 0 -45 -4 -45 -10 0 -5 20 -10 45 -10 l45 0 0 -45 c0 -25 5 -45 10 -45 6 0 10 20 10 45 l0 45 45 0 c25 0 45 5 45 10 0 6 -20 10 -45 10 l -45 0 0 45 c0 25 -4 45 -10 45 -5 0 -10 -20 -10 -45z\" }),\r\n                SVG.path({ d: \"M42 158 c-15 -15 -16 -38 -2 -38 6 0 10 7 10 15 0 8 7 15 15 15 8 0 15 5 15 10 0 14 -23 13 -38 -2z\" }),\r\n                SVG.path({ d: \"M120 160 c0 -5 7 -10 15 -10 8 0 15 -7 15 -15 0 -8 5 -15 10 -15 14 0 13 23 -2 38 -15 15 -38 16 -38 2z\" }),\r\n                SVG.path({ d: \"M32 58 c3 -23 48 -40 48 -19 0 6 -7 11 -15 11 -8 0 -15 7 -15 15 0 8 -5 15 -11 15 -6 0 -9 -10 -7 -22z\" }),\r\n                SVG.path({ d: \"M150 65 c0 -8 -7 -15 -15 -15 -8 0 -15 -4 -15 -10 0 -14 23 -13 38 2 15 15 16 38 2 38 -5 0 -10 -7 -10 -15z\" })]);\r\n\r\n            this._modNameRows.push(modNameRow);\r\n            this._modChannelBoxes.push(modChannelBox);\r\n            this._modInstrumentBoxes.push(modInstrumentBox);\r\n            this._modSetRows.push(modSetRow);\r\n            this._modSetBoxes.push(modSetBox);\r\n            this._modFilterRows.push(modFilterRow);\r\n            this._modFilterBoxes.push(modFilterBox);\r\n            this._modTargetIndicators.push(modTarget);\r\n\r\n            this._modulatorGroup.appendChild(div({ style: \"margin: 3px 0; font-weight: bold; margin-bottom: 0.7em; text-align: center; color: \" + ColorConfig.secondaryText + \"; background: \" + ColorConfig.uiWidgetBackground + \";\" }, [\"Modulator \" + (mod + 1), modTarget]));\r\n            this._modulatorGroup.appendChild(modNameRow);\r\n            this._modulatorGroup.appendChild(modSetRow);\r\n            this._modulatorGroup.appendChild(modFilterRow);\r\n\r\n        }\r\n\r\n        // @jummbus - Unsure why this hack is needed for alignment, but I've never been a css wiz...\r\n        this._pitchShiftSlider.container.style.setProperty(\"transform\", \"translate(0px, 3px)\");\r\n        this._pitchShiftSlider.container.style.setProperty(\"width\", \"100%\");\r\n\r\n        this._fileMenu.addEventListener(\"change\", this._fileMenuHandler);\r\n        this._editMenu.addEventListener(\"change\", this._editMenuHandler);\r\n        this._optionsMenu.addEventListener(\"change\", this._optionsMenuHandler);\r\n        this._customWavePresetDrop.addEventListener(\"change\", this._customWavePresetHandler);\r\n        this._tempoStepper.addEventListener(\"change\", this._whenSetTempo);\r\n        this._scaleSelect.addEventListener(\"change\", this._whenSetScale);\r\n        this._keySelect.addEventListener(\"change\", this._whenSetKey);\r\n        this._octaveStepper.addEventListener(\"change\", this._whenSetOctave);\r\n        this._rhythmSelect.addEventListener(\"change\", this._whenSetRhythm);\r\n        //this._pitchedPresetSelect.addEventListener(\"change\", this._whenSetPitchedPreset);\r\n        //this._drumPresetSelect.addEventListener(\"change\", this._whenSetDrumPreset);\r\n        this._algorithmSelect.addEventListener(\"change\", this._whenSetAlgorithm);\r\n        this._instrumentsButtonBar.addEventListener(\"click\", this._whenSelectInstrument);\r\n        //this._customizeInstrumentButton.addEventListener(\"click\", this._whenCustomizePressed);\r\n        this._feedbackTypeSelect.addEventListener(\"change\", this._whenSetFeedbackType);\r\n        this._algorithm6OpSelect.addEventListener(\"change\", this._whenSet6OpAlgorithm);\r\n        this._feedback6OpTypeSelect.addEventListener(\"change\", this._whenSet6OpFeedbackType);\r\n        this._chipWaveSelect.addEventListener(\"change\", this._whenSetChipWave);\r\n        \t\t\t // advloop addition\r\n            this._useChipWaveAdvancedLoopControlsBox.addEventListener(\"input\", this._whenSetUseChipWaveAdvancedLoopControls);\r\n            this._chipWaveLoopModeSelect.addEventListener(\"change\", this._whenSetChipWaveLoopMode);\r\n            this._chipWaveLoopStartStepper.addEventListener(\"change\", this._whenSetChipWaveLoopStart);\r\n            this._chipWaveLoopEndStepper.addEventListener(\"change\", this._whenSetChipWaveLoopEnd);\r\n            this._setChipWaveLoopEndToEndButton.addEventListener(\"click\", this._whenSetChipWaveLoopEndToEnd);\r\n            this._chipWaveStartOffsetStepper.addEventListener(\"change\", this._whenSetChipWaveStartOffset);\r\n            this._chipWavePlayBackwardsBox.addEventListener(\"input\", this._whenSetChipWavePlayBackwards);\r\n            // advloop addition\r\n        this._sampleLoadingBarContainer.addEventListener(\"click\", this._whenSampleLoadingBarClicked);\r\n\t    this._chipNoiseSelect.addEventListener(\"change\", this._whenSetNoiseWave);\r\n        this._transitionSelect.addEventListener(\"change\", this._whenSetTransition);\r\n        this._effectsSelect.addEventListener(\"change\", this._whenSetEffects);\r\n        this._unisonSelect.addEventListener(\"change\", this._whenSetUnison);\r\n        this._chordSelect.addEventListener(\"change\", this._whenSetChord);\r\n        this._vibratoSelect.addEventListener(\"change\", this._whenSetVibrato);\r\n        this._vibratoTypeSelect.addEventListener(\"change\", this._whenSetVibratoType);\r\n        this._playButton.addEventListener(\"click\", this.togglePlay);\r\n        this._pauseButton.addEventListener(\"click\", this.togglePlay);\r\n        this._recordButton.addEventListener(\"click\", this._toggleRecord);\r\n        this._stopButton.addEventListener(\"click\", this._toggleRecord);\r\n        // Start recording instead of opening context menu when control-clicking the record button on a Mac.\r\n        this._recordButton.addEventListener(\"contextmenu\", (event: MouseEvent) => {\r\n            if (event.ctrlKey) {\r\n                event.preventDefault();\r\n                this._toggleRecord();\r\n            }\r\n        });\r\n        this._stopButton.addEventListener(\"contextmenu\", (event: MouseEvent) => {\r\n            if (event.ctrlKey) {\r\n                event.preventDefault();\r\n                this._toggleRecord();\r\n            }\r\n        });\r\n        this._prevBarButton.addEventListener(\"click\", this._whenPrevBarPressed);\r\n        this._nextBarButton.addEventListener(\"click\", this._whenNextBarPressed);\r\n        this._volumeSlider.input.addEventListener(\"input\", this._setVolumeSlider);\r\n        this._zoomInButton.addEventListener(\"click\", this._zoomIn);\r\n        this._zoomOutButton.addEventListener(\"click\", this._zoomOut);\r\n        this._patternArea.addEventListener(\"mousedown\", this._refocusStageNotEditing);\r\n        this._trackArea.addEventListener(\"mousedown\", this.refocusStage);\r\n\r\n        // The song volume slider is styled slightly different than the class' default.\r\n        this._volumeSlider.container.style.setProperty(\"flex-grow\", \"1\");\r\n        this._volumeSlider.container.style.setProperty(\"display\", \"flex\");\r\n\r\n        this._volumeBarContainer.style.setProperty(\"flex-grow\", \"1\");\r\n        this._volumeBarContainer.style.setProperty(\"display\", \"flex\");\r\n\r\n        // Also, any slider with a multiplicative effect instead of a replacement effect gets a different mod color, and a round slider.\r\n        this._volumeSlider.container.style.setProperty(\"--mod-color\", ColorConfig.multiplicativeModSlider);\r\n        this._volumeSlider.container.style.setProperty(\"--mod-border-radius\", \"50%\");\r\n        this._instrumentVolumeSlider.container.style.setProperty(\"--mod-color\", ColorConfig.multiplicativeModSlider);\r\n        this._instrumentVolumeSlider.container.style.setProperty(\"--mod-border-radius\", \"50%\");\r\n        this._feedbackAmplitudeSlider.container.style.setProperty(\"--mod-color\", ColorConfig.multiplicativeModSlider);\r\n        this._feedbackAmplitudeSlider.container.style.setProperty(\"--mod-border-radius\", \"50%\");\r\n        for (let i: number = 0; i < Config.operatorCount+2; i++) {\r\n            this._operatorAmplitudeSliders[i].container.style.setProperty(\"--mod-color\", ColorConfig.multiplicativeModSlider);\r\n            this._operatorAmplitudeSliders[i].container.style.setProperty(\"--mod-border-radius\", \"50%\");\r\n        }\r\n\r\n        let thisRef: SongEditor = this;\r\n        for (let mod: number = 0; mod < Config.modCount; mod++) {\r\n            this._modChannelBoxes[mod].addEventListener(\"change\", function () { thisRef._whenSetModChannel(mod); });\r\n            this._modInstrumentBoxes[mod].addEventListener(\"change\", function () { thisRef._whenSetModInstrument(mod); });\r\n            this._modSetBoxes[mod].addEventListener(\"change\", function () { thisRef._whenSetModSetting(mod); });\r\n            this._modFilterBoxes[mod].addEventListener(\"change\", function () { thisRef._whenSetModFilter(mod); });\r\n            this._modTargetIndicators[mod].addEventListener(\"click\", function () { thisRef._whenClickModTarget(mod); });\r\n        }\r\n\r\n        this._jumpToModIndicator.addEventListener(\"click\", function () { thisRef._whenClickJumpToModTarget() });\r\n\r\n        this._patternArea.addEventListener(\"mousedown\", this.refocusStage);\r\n        this._fadeInOutEditor.container.addEventListener(\"mousedown\", this.refocusStage);\r\n        this._spectrumEditor.container.addEventListener(\"mousedown\", this.refocusStage);\r\n        this._eqFilterEditor.container.addEventListener(\"mousedown\", this.refocusStage);\r\n        this._noteFilterEditor.container.addEventListener(\"mousedown\", this.refocusStage);\r\n        this._harmonicsEditor.container.addEventListener(\"mousedown\", this.refocusStage);\r\n        this._tempoStepper.addEventListener(\"keydown\", this._tempoStepperCaptureNumberKeys, false);\r\n        this._addEnvelopeButton.addEventListener(\"click\", this._addNewEnvelope);\r\n        this._patternArea.addEventListener(\"contextmenu\", this._disableCtrlContextMenu);\r\n        this._trackArea.addEventListener(\"contextmenu\", this._disableCtrlContextMenu);\r\n        this.mainLayer.addEventListener(\"keydown\", this._whenKeyPressed);\r\n        this.mainLayer.addEventListener(\"keyup\", this._whenKeyReleased);\r\n        this.mainLayer.addEventListener(\"focusin\", this._onFocusIn);\r\n        this._instrumentCopyButton.addEventListener(\"click\", this._copyInstrument.bind(this));\r\n        this._instrumentPasteButton.addEventListener(\"click\", this._pasteInstrument.bind(this));\r\n\r\n        sampleLoadEvents.addEventListener(\"sampleloaded\", this._updateSampleLoadingBar.bind(this));\r\n\r\n        this._instrumentVolumeSliderInputBox.addEventListener(\"input\", () => { this._doc.record(new ChangeVolume(this._doc, this._doc.song.channels[this._doc.channel].instruments[this._doc.getCurrentInstrument()].volume, Math.min(25.0, Math.max(-25.0, Math.round(+this._instrumentVolumeSliderInputBox.value))))) });\r\n        this._panSliderInputBox.addEventListener(\"input\", () => { this._doc.record(new ChangePan(this._doc, this._doc.song.channels[this._doc.channel].instruments[this._doc.getCurrentInstrument()].pan, Math.min(100.0, Math.max(0.0, Math.round(+this._panSliderInputBox.value))))) });\r\n        this._detuneSliderInputBox.addEventListener(\"input\", () => { this._doc.record(new ChangeDetune(this._doc, this._doc.song.channels[this._doc.channel].instruments[this._doc.getCurrentInstrument()].detune, Math.min(Config.detuneMax - Config.detuneCenter, Math.max(Config.detuneMin - Config.detuneCenter, Math.round(+this._detuneSliderInputBox.value))))) });\r\n        this._customWaveDraw.addEventListener(\"input\", () => { this._doc.record(new ChangeCustomWave(this._doc, this._customWaveDrawCanvas.newArray)) });\r\n        this._twoNoteArpBox.addEventListener(\"input\", () => { this._doc.record(new ChangeFastTwoNoteArp(this._doc, this._twoNoteArpBox.checked)) });\r\n        this._clicklessTransitionBox.addEventListener(\"input\", () => { this._doc.record(new ChangeClicklessTransition(this._doc, this._clicklessTransitionBox.checked)) });\r\n        this._aliasingBox.addEventListener(\"input\", () => { this._doc.record(new ChangeAliasing(this._doc, this._aliasingBox.checked)) });\r\n\r\n        this._promptContainer.addEventListener(\"click\", (event) => {\r\n            if (this.prompt != null && this.prompt.gotMouseUp === true) return;\r\n            if (event.target == this._promptContainer) {\r\n                this._doc.undo();\r\n            }\r\n        });\r\n\r\n        if (isMobile) {\r\n            const autoPlayOption: HTMLOptionElement = <HTMLOptionElement>this._optionsMenu.querySelector(\"[value=autoPlay]\");\r\n            autoPlayOption.disabled = true;\r\n            autoPlayOption.setAttribute(\"hidden\", \"\");\r\n        }\r\n\r\n        // Beepbox uses availHeight too, but I have a display that fails the check even when one of the other layouts would look better on it. -jummbus\r\n        if (window.screen.availWidth < 710 /*|| window.screen.availHeight < 710*/) {\r\n            const layoutOption: HTMLOptionElement = <HTMLOptionElement>this._optionsMenu.querySelector(\"[value=layout]\");\r\n            layoutOption.disabled = true;\r\n            layoutOption.setAttribute(\"hidden\", \"\");\r\n        }\r\n    }\r\n\r\n    private _whenSampleLoadingBarClicked = (): void => {\r\n        this._openPrompt(\"sampleLoadingStatus\");\r\n    }\r\n\r\n    private _updateSampleLoadingBar(_e: Event): void {\r\n        // @TODO: Avoid this cast and type EventTarget/Event properly.\r\n        const e: SampleLoadedEvent = <SampleLoadedEvent>_e;\r\n        const percent: number = (\r\n            e.totalSamples === 0\r\n            ? 0\r\n            : Math.floor((e.samplesLoaded / e.totalSamples) * 100)\r\n        );\r\n        this._sampleLoadingBar.style.width = `${percent}%`;\r\n    }\r\n\r\n    private _toggleAlgorithmCanvas(e:Event):void {\r\n        if (this._customAlgorithmCanvas.mode != \"feedback\") {\r\n            this._customAlgorithmCanvas.mode = \"feedback\";\r\n            (e.target as Element).textContent = \"A\";\r\n            this._algorithmCanvasSwitch.value = \"feedback\";\r\n        } else {\r\n            this._customAlgorithmCanvas.mode = \"algorithm\";\r\n            (e.target as Element).textContent = \"F\";\r\n        }\r\n        this._customAlgorithmCanvas.redrawCanvas();\r\n    }\r\n\r\n    private _toggleDropdownMenu(dropdown: DropdownID, submenu: number = 0): void {\r\n        let target: HTMLButtonElement = this._vibratoDropdown;\r\n        let group: HTMLElement = this._vibratoDropdownGroup;\r\n        switch (dropdown) {\r\n            case DropdownID.Vibrato:\r\n                target = this._vibratoDropdown;\r\n                this._openVibratoDropdown = this._openVibratoDropdown ? false : true;\r\n                group = this._vibratoDropdownGroup;\r\n                break;\r\n            case DropdownID.Pan:\r\n                target = this._panDropdown;\r\n                this._openPanDropdown = this._openPanDropdown ? false : true;\r\n                group = this._panDropdownGroup;\r\n                break;\r\n            case DropdownID.Chord:\r\n                target = this._chordDropdown;\r\n                this._openChordDropdown = this._openChordDropdown ? false : true;\r\n                group = this._chordDropdownGroup;\r\n                break;\r\n            case DropdownID.Transition:\r\n                target = this._transitionDropdown;\r\n                this._openTransitionDropdown = this._openTransitionDropdown ? false : true;\r\n                group = this._transitionDropdownGroup;\r\n                break;\r\n            case DropdownID.FM:\r\n                target = this._operatorDropdowns[submenu];\r\n                this._openOperatorDropdowns[submenu] = this._openOperatorDropdowns[submenu] ? false : true;\r\n                group = this._operatorDropdownGroups[submenu];\r\n                break;\r\n        }\r\n\r\n        if (target.textContent == \"▼\") {\r\n            let instrument: Instrument = this._doc.song.channels[this._doc.channel].instruments[this._doc.getCurrentInstrument()];\r\n            target.textContent = \"▲\";\r\n            if (group != this._chordDropdownGroup) {\r\n                group.style.display = \"\";\r\n            } // Only show arpeggio dropdown if chord arpeggiates\r\n            else if (instrument.chord == Config.chords.dictionary[\"arpeggio\"].index) {\r\n                group.style.display = \"\";\r\n            }\r\n\r\n        }\r\n        else {\r\n            target.textContent = \"▼\";\r\n            group.style.display = \"none\";\r\n        }\r\n    }\r\n\r\n    private _modSliderUpdate(): void {\r\n\r\n        if (!this._doc.synth.playing) {\r\n            this._hasActiveModSliders = false;\r\n\r\n            for (let setting: number = 0; setting < Config.modulators.length; setting++) {\r\n                if (this._showModSliders[setting] == true) {\r\n                    this._showModSliders[setting] = false;\r\n                    this._newShowModSliders[setting] = false;\r\n                    let slider: Slider | null = this._getSliderForModSetting(setting);\r\n\r\n                    if (slider != null) {\r\n                        slider.container.classList.remove(\"modSlider\");\r\n\r\n                    }\r\n                }\r\n            }\r\n        }\r\n        else {\r\n\r\n            let instrument: number = this._doc.getCurrentInstrument();\r\n            const anyModActive: boolean = this._doc.synth.isAnyModActive(this._doc.channel, instrument);\r\n\r\n            // Check and update mod values on sliders\r\n            if (anyModActive) {\r\n\r\n                let instrument: number = this._doc.getCurrentInstrument();\r\n\r\n                function updateModSlider(editor: SongEditor, slider: Slider, setting: number, channel: number, instrument: number): boolean {\r\n                    if (editor._doc.synth.isModActive(setting, channel, instrument)) {\r\n                        let currentVal: number = (editor._doc.synth.getModValue(setting, channel, instrument, false) - Config.modulators[setting].convertRealFactor) / Config.modulators[setting].maxRawVol;\r\n                        if (currentVal != editor._modSliderValues[setting]) {\r\n                            editor._modSliderValues[setting] = currentVal;\r\n                            slider.container.style.setProperty(\"--mod-position\", (currentVal * 96.0 + 2.0) + \"%\");\r\n                        }\r\n                        return true;\r\n                    }\r\n                    return false;\r\n                }\r\n\r\n                // Set mod sliders to present values\r\n                for (let setting: number = 0; setting < Config.modulators.length; setting++) {\r\n                    // Set to last value\r\n                    this._newShowModSliders[setting] = this._showModSliders[setting];\r\n\r\n                    // Check for newer value\r\n                    let slider: Slider | null = this._getSliderForModSetting(setting);\r\n                    if (slider != null) {\r\n                        this._newShowModSliders[setting] = updateModSlider(this, slider, setting, this._doc.channel, instrument);\r\n                    }\r\n                }\r\n\r\n            }\r\n            else if (this._hasActiveModSliders) {\r\n                // Zero out show-mod-slider settings (since none are active) to kill active mod slider flag\r\n                for (let setting: number = 0; setting < Config.modulators.length; setting++) {\r\n                    this._newShowModSliders[setting] = false;\r\n                }\r\n            }\r\n\r\n            // Class or unclass mod sliders based on present status\r\n            if (anyModActive || this._hasActiveModSliders) {\r\n\r\n                let anySliderActive: boolean = false;\r\n\r\n                for (let setting: number = 0; setting < Config.modulators.length; setting++) {\r\n                    if (this._newShowModSliders[setting] != this._showModSliders[setting]) {\r\n                        this._showModSliders[setting] = this._newShowModSliders[setting];\r\n                        let slider: Slider | null = this._getSliderForModSetting(setting);\r\n\r\n                        if (slider != null) {\r\n\r\n                            if (this._showModSliders[setting] == true) {\r\n                                slider.container.classList.add(\"modSlider\");\r\n                            }\r\n                            else {\r\n                                slider.container.classList.remove(\"modSlider\");\r\n                            }\r\n\r\n                        }\r\n                    }\r\n\r\n                    if (this._newShowModSliders[setting] == true)\r\n                        anySliderActive = true;\r\n                }\r\n\r\n                this._hasActiveModSliders = anySliderActive;\r\n\r\n            }\r\n\r\n        }\r\n\r\n    }\r\n\r\n    private _getSliderForModSetting(setting: number): Slider | null {\r\n        switch (setting) {\r\n            case Config.modulators.dictionary[\"pan\"].index:\r\n                return this._panSlider;\r\n            case Config.modulators.dictionary[\"detune\"].index:\r\n                return this._detuneSlider;\r\n            case Config.modulators.dictionary[\"fm slider 1\"].index:\r\n                return this._operatorAmplitudeSliders[0];\r\n            case Config.modulators.dictionary[\"fm slider 2\"].index:\r\n                return this._operatorAmplitudeSliders[1];\r\n            case Config.modulators.dictionary[\"fm slider 3\"].index:\r\n                return this._operatorAmplitudeSliders[2];\r\n            case Config.modulators.dictionary[\"fm slider 4\"].index:\r\n                return this._operatorAmplitudeSliders[3];\r\n            case Config.modulators.dictionary[\"fm feedback\"].index:\r\n                return this._feedbackAmplitudeSlider;\r\n            case Config.modulators.dictionary[\"pulse width\"].index:\r\n                return this._pulseWidthSlider;\r\n            case Config.modulators.dictionary[\"reverb\"].index:\r\n                return this._reverbSlider;\r\n            case Config.modulators.dictionary[\"distortion\"].index:\r\n                return this._distortionSlider;\r\n            case Config.modulators.dictionary[\"note volume\"].index:\r\n                // So, this should technically not affect this slider, but it will look better as legacy songs used this mod as 'volume'.\r\n                // In the case that mix volume is used as well, they'd fight for the display, so just don't use this.\r\n                if (!this._showModSliders[Config.modulators.dictionary[\"mix volume\"].index])\r\n                    return this._instrumentVolumeSlider;\r\n                return null;\r\n            case Config.modulators.dictionary[\"mix volume\"].index:\r\n                return this._instrumentVolumeSlider;\r\n            case Config.modulators.dictionary[\"vibrato depth\"].index:\r\n                return this._vibratoDepthSlider;\r\n            case Config.modulators.dictionary[\"vibrato speed\"].index:\r\n                return this._vibratoSpeedSlider;\r\n            case Config.modulators.dictionary[\"vibrato delay\"].index:\r\n                return this._vibratoDelaySlider;\r\n            case Config.modulators.dictionary[\"arp speed\"].index:\r\n                return this._arpeggioSpeedSlider;\r\n            case Config.modulators.dictionary[\"pan delay\"].index:\r\n                return this._panDelaySlider;\r\n            case Config.modulators.dictionary[\"tempo\"].index:\r\n                return this._tempoSlider;\r\n            case Config.modulators.dictionary[\"song volume\"].index:\r\n                return this._volumeSlider;\r\n            case Config.modulators.dictionary[\"eq filt cut\"].index:\r\n                return this._eqFilterSimpleCutSlider;\r\n            case Config.modulators.dictionary[\"eq filt peak\"].index:\r\n                return this._eqFilterSimplePeakSlider;\r\n            case Config.modulators.dictionary[\"note filt cut\"].index:\r\n                return this._noteFilterSimpleCutSlider;\r\n            case Config.modulators.dictionary[\"note filt peak\"].index:\r\n                return this._noteFilterSimplePeakSlider;\r\n            case Config.modulators.dictionary[\"bit crush\"].index:\r\n                return this._bitcrusherQuantizationSlider;\r\n            case Config.modulators.dictionary[\"freq crush\"].index:\r\n                return this._bitcrusherFreqSlider;\r\n            case Config.modulators.dictionary[\"pitch shift\"].index:\r\n                return this._pitchShiftSlider;\r\n            case Config.modulators.dictionary[\"chorus\"].index:\r\n                return this._chorusSlider;\r\n            case Config.modulators.dictionary[\"echo\"].index:\r\n                return this._echoSustainSlider;\r\n            case Config.modulators.dictionary[\"echo delay\"].index:\r\n                return this._echoDelaySlider;\r\n            case Config.modulators.dictionary[\"sustain\"].index:\r\n                return this._stringSustainSlider;\r\n            case Config.modulators.dictionary[\"fm slider 5\"].index:\r\n                return this._operatorAmplitudeSliders[4];\r\n            case Config.modulators.dictionary[\"fm slider 6\"].index:\r\n                return this._operatorAmplitudeSliders[5];\r\n            default:\r\n                return null;\r\n        }\r\n\r\n    }\r\n\r\n    private _openPrompt(promptName: string): void {\r\n        this._doc.openPrompt(promptName);\r\n        this._setPrompt(promptName);\r\n    }\r\n\r\n    private _setPrompt(promptName: string | null): void {\r\n        if (this._currentPromptName == promptName) return;\r\n        this._currentPromptName = promptName;\r\n\r\n        if (this.prompt) {\r\n            if (this._wasPlaying && !(this.prompt instanceof TipPrompt || this.prompt instanceof LimiterPrompt || this.prompt instanceof CustomScalePrompt || this.prompt instanceof CustomChipPrompt || this.prompt instanceof CustomFilterPrompt || this.prompt instanceof VisualLoopControlsPrompt)) {\r\n                this._doc.performance.play();\r\n            }\r\n            this._wasPlaying = false;\r\n            this._promptContainer.style.display = \"none\";\r\n            this._promptContainer.removeChild(this.prompt.container);\r\n            this.prompt.cleanUp();\r\n            this.prompt = null;\r\n            this.refocusStage();\r\n        }\r\n\r\n        if (promptName) {\r\n            switch (promptName) {\r\n                case \"export\":\r\n                    this.prompt = new ExportPrompt(this._doc);\r\n                    break;\r\n                case \"import\":\r\n                    this.prompt = new ImportPrompt(this._doc);\r\n                    break;\r\n                case \"songRecovery\":\r\n                    this.prompt = new SongRecoveryPrompt(this._doc);\r\n                    break;\r\n                case \"barCount\":\r\n                    this.prompt = new SongDurationPrompt(this._doc);\r\n                    break;\r\n                case \"beatsPerBar\":\r\n                    this.prompt = new BeatsPerBarPrompt(this._doc);\r\n                    break;\r\n                case \"moveNotesSideways\":\r\n                    this.prompt = new MoveNotesSidewaysPrompt(this._doc);\r\n                    break;\r\n                case \"channelSettings\":\r\n                    this.prompt = new ChannelSettingsPrompt(this._doc);\r\n                    break;\r\n                case \"limiterSettings\":\r\n                    this.prompt = new LimiterPrompt(this._doc, this);\r\n                    break;\r\n                case \"customScale\":\r\n                    this.prompt = new CustomScalePrompt(this._doc);\r\n                    break;\r\n                case \"customChipSettings\":\r\n                    this.prompt = new CustomChipPrompt(this._doc, this);\r\n                    break;\r\n                case \"customEQFilterSettings\":\r\n                    this.prompt = new CustomFilterPrompt(this._doc, this, false);\r\n                    break;\r\n                case \"customNoteFilterSettings\":\r\n                    this.prompt = new CustomFilterPrompt(this._doc, this, true);\r\n                    break;\r\n                case \"theme\":\r\n                    this.prompt = new ThemePrompt(this._doc);\r\n                    break;\r\n                case \"layout\":\r\n                    this.prompt = new LayoutPrompt(this._doc);\r\n                    break;\r\n                case \"recordingSetup\":\r\n                    this.prompt = new RecordingSetupPrompt(this._doc);\r\n                    break;\r\n\t\tcase \"addExternal\":\r\n                        this.prompt = new AddSamplesPrompt(this._doc);\r\n                        break;\r\n\t\tcase \"generateEuclideanRhythm\":\r\n                        this.prompt = new EuclideanRhythmPrompt(this._doc);\r\n                        break;\r\n\t\tcase \"custom\":\r\n                        this.prompt = new CustomPrompt(this._doc, this._patternEditor, this._trackArea, document.getElementById(\"beepboxEditorContainer\")!);\r\n                        break;\r\n                case \"visualLoopControls\":\r\n                    this.prompt = new VisualLoopControlsPrompt(this._doc, this);\r\n                    break;\r\n                case \"sampleLoadingStatus\":\r\n                    this.prompt = new SampleLoadingStatusPrompt(this._doc);\r\n                    break;\r\n                default:\r\n                    this.prompt = new TipPrompt(this._doc, promptName);\r\n                    break;\r\n            }\r\n\r\n            if (this.prompt) {\r\n                if (!(this.prompt instanceof TipPrompt || this.prompt instanceof LimiterPrompt || this.prompt instanceof CustomChipPrompt || this.prompt instanceof CustomFilterPrompt || this.prompt instanceof VisualLoopControlsPrompt)) {\r\n                    this._wasPlaying = this._doc.synth.playing;\r\n                    this._doc.performance.pause();\r\n                }\r\n                this._promptContainer.style.display = \"\";\r\n                this._promptContainer.appendChild(this.prompt.container);\r\n            }\r\n        }\r\n    }\r\n\r\n    public refocusStage = (): void => {\r\n        this.mainLayer.focus({ preventScroll: true });\r\n    }\r\n\r\n    private _onFocusIn = (event: Event): void => {\r\n        if (this._doc.synth.recording && event.target != this.mainLayer && event.target != this._stopButton && event.target != this._volumeSlider.input) {\r\n            // Don't allow using tab to focus on the song settings while recording,\r\n            // since interacting with them while recording would mess up the recording.\r\n            this.refocusStage();\r\n        }\r\n    }\r\n\r\n    // Refocus stage if a sub-element that needs focus isn't being edited.\r\n    private _refocusStageNotEditing = (): void => {\r\n        if (!this._patternEditor.editingModLabel)\r\n            this.mainLayer.focus({ preventScroll: true });\r\n    }\r\n\r\n    public changeBarScrollPos(offset: number) {\r\n        this._barScrollBar.changePos(offset);\r\n    }\r\n\r\n    public whenUpdated = (): void => {\r\n        const prefs: Preferences = this._doc.prefs;\r\n        this._muteEditor.container.style.display = prefs.enableChannelMuting ? \"\" : \"none\";\r\n        const trackBounds: DOMRect = this._trackVisibleArea.getBoundingClientRect();\r\n        this._doc.trackVisibleBars = Math.floor((trackBounds.right - trackBounds.left - (prefs.enableChannelMuting ? 32 : 0)) / this._doc.getBarWidth());\r\n        this._doc.trackVisibleChannels = Math.floor((trackBounds.bottom - trackBounds.top - 30) / this._doc.getChannelHeight());\r\n        for (let i: number = this._doc.song.pitchChannelCount + this._doc.song.noiseChannelCount; i < this._doc.song.channels.length; i++) {\r\n            const channel: Channel = this._doc.song.channels[i];\r\n            for (let j: number = 0; j < channel.instruments.length; j++) {\r\n                this._doc.synth.determineInvalidModulators(channel.instruments[j]);\r\n            }\r\n        }\r\n        this._barScrollBar.render();\r\n        this._muteEditor.render();\r\n        this._trackEditor.render();\r\n\r\n        if (document.activeElement != this._patternEditor.modDragValueLabel && this._patternEditor.editingModLabel) {\r\n            this._patternEditor.stopEditingModLabel(false);\r\n        }\r\n\r\n        this._piano.container.style.display = prefs.showLetters ? \"\" : \"none\";\r\n        this._octaveScrollBar.container.style.display = prefs.showScrollBar ? \"\" : \"none\";\r\n        this._barScrollBar.container.style.display = this._doc.song.barCount > this._doc.trackVisibleBars ? \"\" : \"none\";\r\n        this._volumeBarBox.style.display = this._doc.prefs.displayVolumeBar ? \"\" : \"none\";\r\n        this._globalOscscopeContainer.style.display = this._doc.prefs.showOscilloscope ? \"\" : \"none\";\r\n        this._doc.synth.oscEnabled = this._doc.prefs.showOscilloscope;\r\n        this._sampleLoadingStatusContainer.style.display = this._doc.prefs.showSampleLoadingStatus ? \"\" : \"none\";\r\n\r\n        if (this._doc.getFullScreen()) {\r\n            const semitoneHeight: number = this._patternEditorRow.clientHeight / this._doc.getVisiblePitchCount();\r\n            const targetBeatWidth: number = semitoneHeight * 5;\r\n            const minBeatWidth: number = this._patternEditorRow.clientWidth / (this._doc.song.beatsPerBar * 3);\r\n            const maxBeatWidth: number = this._patternEditorRow.clientWidth / (this._doc.song.beatsPerBar + 2);\r\n            const beatWidth: number = Math.max(minBeatWidth, Math.min(maxBeatWidth, targetBeatWidth));\r\n            const patternEditorWidth: number = beatWidth * this._doc.song.beatsPerBar;\r\n\r\n            this._patternEditorPrev.container.style.width = patternEditorWidth + \"px\";\r\n            this._patternEditor.container.style.width = patternEditorWidth + \"px\";\r\n            this._patternEditorNext.container.style.width = patternEditorWidth + \"px\";\r\n            this._patternEditorPrev.container.style.flexShrink = \"0\";\r\n            this._patternEditor.container.style.flexShrink = \"0\";\r\n            this._patternEditorNext.container.style.flexShrink = \"0\";\r\n            this._patternEditorPrev.container.style.display = \"\";\r\n            this._patternEditorNext.container.style.display = \"\";\r\n            this._patternEditorPrev.render();\r\n            this._patternEditorNext.render();\r\n            this._zoomInButton.style.display = (this._doc.channel < this._doc.song.pitchChannelCount) ? \"\" : \"none\";\r\n            this._zoomOutButton.style.display = (this._doc.channel < this._doc.song.pitchChannelCount) ? \"\" : \"none\";\r\n            this._zoomInButton.style.right = prefs.showScrollBar ? \"24px\" : \"4px\";\r\n            this._zoomOutButton.style.right = prefs.showScrollBar ? \"24px\" : \"4px\";\r\n        } else {\r\n            this._patternEditor.container.style.width = \"\";\r\n            this._patternEditor.container.style.flexShrink = \"\";\r\n            this._patternEditorPrev.container.style.display = \"none\";\r\n            this._patternEditorNext.container.style.display = \"none\";\r\n            this._zoomInButton.style.display = \"none\";\r\n            this._zoomOutButton.style.display = \"none\";\r\n        }\r\n        this._patternEditor.render();\r\n\r\n        const optionCommands: ReadonlyArray<string> = [\r\n            (prefs.autoPlay ? \"✓ \" : \"　\") + \"Auto Play on Load\",\r\n            (prefs.autoFollow ? \"✓ \" : \"　\") + \"Keep Current Pattern Selected\",\r\n            (prefs.enableNotePreview ? \"✓ \" : \"　\") + \"Hear Preview of Added Notes\",\r\n            (prefs.showLetters ? \"✓ \" : \"　\") + \"Show Piano Keys\",\r\n            (prefs.showFifth ? \"✓ \" : \"　\") + 'Highlight \"Fifth\" of Song Key',\r\n            (prefs.notesOutsideScale ? \"✓ \" : \"　\") + \"Allow Adding Notes Not in Scale\",\r\n            (prefs.defaultScale == this._doc.song.scale ? \"✓ \" : \"　\") + \"Use Current Scale as Default\",\r\n            (prefs.showChannels ? \"✓ \" : \"　\") + \"Show Notes From All Channels\",\r\n            (prefs.showScrollBar ? \"✓ \" : \"　\") + \"Show Octave Scroll Bar\",\r\n            (prefs.alwaysFineNoteVol ? \"✓ \" : \"　\") + \"Always Fine Note Volume\",\r\n            (prefs.enableChannelMuting ? \"✓ \" : \"　\") + \"Enable Channel Muting\",\r\n            (prefs.displayBrowserUrl ? \"✓ \" : \"　\") + \"Display Song Data in URL\",\r\n            (prefs.displayVolumeBar ? \"✓ \" : \"　\") + \"Show Playback Volume\",\r\n            (prefs.showOscilloscope ? \"✓ \" : \"　\") + \"Show Oscilloscope\",\r\n            (prefs.showSampleLoadingStatus ? \"✓ \" : \"　\") + \"Show Sample Loading Status\",\r\n            \"　Set Layout...\",\r\n            \"　Set Theme...\",\r\n\t    \"　Custom Theme...\",\r\n            \"　Set Up Note Recording...\",\r\n        ];\r\n        for (let i: number = 0; i < optionCommands.length; i++) {\r\n            const option: HTMLOptionElement = <HTMLOptionElement>this._optionsMenu.children[i + 1];\r\n            if (option.textContent != optionCommands[i]) option.textContent = optionCommands[i];\r\n        }\r\n\r\n        const channel: Channel = this._doc.song.channels[this._doc.channel];\r\n        const instrumentIndex: number = this._doc.getCurrentInstrument();\r\n        const instrument: Instrument = channel.instruments[instrumentIndex];\r\n        const wasActive: boolean = this.mainLayer.contains(document.activeElement);\r\n        const activeElement: Element | null = document.activeElement;\r\n        const colors: ChannelColors = ColorConfig.getChannelColor(this._doc.song, this._doc.channel);\r\n\r\n        for (let i: number = this._effectsSelect.childElementCount - 1; i < Config.effectOrder.length; i++) {\r\n            this._effectsSelect.appendChild(option({ value: i }));\r\n        }\r\n        this._effectsSelect.selectedIndex = -1;\r\n        for (let i: number = 0; i < Config.effectOrder.length; i++) {\r\n            let effectFlag: number = Config.effectOrder[i];\r\n            const selected: boolean = ((instrument.effects & (1 << effectFlag)) != 0);\r\n            const label: string = (selected ? \"✓ \" : \"　\") + Config.effectNames[effectFlag];\r\n            const option: HTMLOptionElement = <HTMLOptionElement>this._effectsSelect.children[i + 1];\r\n            if (option.textContent != label) option.textContent = label;\r\n        }\r\n\r\n        setSelectedValue(this._scaleSelect, this._doc.song.scale);\r\n        this._scaleSelect.title = Config.scales[this._doc.song.scale].realName;\r\n        setSelectedValue(this._keySelect, Config.keys.length - 1 - this._doc.song.key);\r\n        this._octaveStepper.value = Math.round(this._doc.song.octave).toString();\r\n        this._tempoSlider.updateValue(Math.max(0, Math.round(this._doc.song.tempo)));\r\n        this._tempoStepper.value = Math.round(this._doc.song.tempo).toString();\r\n        this._songTitleInputBox.updateValue(this._doc.song.title);\r\n\r\n        this._eqFilterTypeRow.style.setProperty(\"--text-color-lit\", colors.primaryNote);\r\n        this._eqFilterTypeRow.style.setProperty(\"--text-color-dim\", colors.secondaryNote);\r\n        this._eqFilterTypeRow.style.setProperty(\"--background-color-lit\", colors.primaryChannel);\r\n        this._eqFilterTypeRow.style.setProperty(\"--background-color-dim\", colors.secondaryChannel);\r\n\r\n        if (instrument.eqFilterType) {\r\n            this._eqFilterSimpleButton.classList.remove(\"deactivated\");\r\n            this._eqFilterAdvancedButton.classList.add(\"deactivated\");\r\n            this._eqFilterRow.style.display = \"none\";\r\n            this._eqFilterSimpleCutRow.style.display = \"\";\r\n            this._eqFilterSimplePeakRow.style.display = \"\";\r\n        } else {\r\n            this._eqFilterSimpleButton.classList.add(\"deactivated\");\r\n            this._eqFilterAdvancedButton.classList.remove(\"deactivated\");\r\n            this._eqFilterRow.style.display = \"\";\r\n            this._eqFilterSimpleCutRow.style.display = \"none\";\r\n            this._eqFilterSimplePeakRow.style.display = \"none\";\r\n        }\r\n\r\n        setSelectedValue(this._rhythmSelect, this._doc.song.rhythm);\r\n\r\n        if (!this._doc.song.getChannelIsMod(this._doc.channel)) {\r\n\r\n            this._customInstrumentSettingsGroup.style.display = \"\";\r\n            this._panSliderRow.style.display = \"\";\r\n            this._panDropdownGroup.style.display = (this._openPanDropdown ? \"\" : \"none\");\r\n            this._detuneSliderRow.style.display = \"\";\r\n            this._instrumentVolumeSliderRow.style.display = \"\";\r\n            this._instrumentTypeSelectRow.style.setProperty(\"display\", \"\");\r\n            this._instrumentSettingsGroup.appendChild(this._instrumentCopyGroup);\r\n            this._instrumentSettingsGroup.insertBefore(this._instrumentsButtonRow, this._instrumentSettingsGroup.firstChild);\r\n            this._instrumentSettingsGroup.insertBefore(this._instrumentSettingsTextRow, this._instrumentSettingsGroup.firstChild);\r\n\r\n            if (this._doc.song.channels[this._doc.channel].name == \"\") {\r\n                this._instrumentSettingsTextRow.textContent = \"Instrument Settings\";\r\n            }\r\n            else {\r\n                this._instrumentSettingsTextRow.textContent = this._doc.song.channels[this._doc.channel].name;\r\n            }\r\n\r\n            this._modulatorGroup.style.display = \"none\";\r\n\r\n            // Check if current viewed pattern on channel is used anywhere\r\n            // + Check if current instrument on channel is used anywhere\r\n            // + Check if a mod targets this\r\n            this._usageCheck(this._doc.channel, instrumentIndex);\r\n\r\n            if (this._doc.song.getChannelIsNoise(this._doc.channel)) {\r\n                this._pitchedPresetSelect.style.display = \"none\";\r\n                this._drumPresetSelect.style.display = \"\";\r\n                // Also hide select2\r\n                $(\"#pitchPresetSelect\").parent().hide();\r\n                $(\"#drumPresetSelect\").parent().show();\r\n\r\n                setSelectedValue(this._drumPresetSelect, instrument.preset);\r\n            } else {\r\n                this._pitchedPresetSelect.style.display = \"\";\r\n                this._drumPresetSelect.style.display = \"none\";\r\n\r\n                // Also hide select2\r\n                $(\"#pitchPresetSelect\").parent().show();\r\n                $(\"#drumPresetSelect\").parent().hide();\r\n\r\n                setSelectedValue(this._pitchedPresetSelect, instrument.preset);\r\n            }\r\n\r\n            if (instrument.type == InstrumentType.noise) {\r\n                this._chipWaveSelectRow.style.display = \"none\";\r\n\t\t    \t\t\t\t\t\t// advloop addition\r\n                        this._useChipWaveAdvancedLoopControlsRow.style.display = \"none\";\r\n                        this._chipWaveLoopModeSelectRow.style.display = \"none\";\r\n                        this._chipWaveLoopStartRow.style.display = \"none\";\r\n                        this._chipWaveLoopEndRow.style.display = \"none\";\r\n                        this._chipWaveStartOffsetRow.style.display = \"none\";\r\n                        this._chipWavePlayBackwardsRow.style.display = \"none\";\r\n                        // advloop addition\r\n                this._chipNoiseSelectRow.style.display = \"\";\r\n                setSelectedValue(this._chipNoiseSelect, instrument.chipNoise);\r\n            } else {\r\n                this._chipNoiseSelectRow.style.display = \"none\";\r\n            }\r\n            if (instrument.type == InstrumentType.spectrum) {\r\n                this._chipWaveSelectRow.style.display = \"none\";\r\n\t\t    \t\t\t\t\t\t// advloop addition\r\n                        this._useChipWaveAdvancedLoopControlsRow.style.display = \"none\";\r\n                        this._chipWaveLoopModeSelectRow.style.display = \"none\";\r\n                        this._chipWaveLoopStartRow.style.display = \"none\";\r\n                        this._chipWaveLoopEndRow.style.display = \"none\";\r\n                        this._chipWaveStartOffsetRow.style.display = \"none\";\r\n                        this._chipWavePlayBackwardsRow.style.display = \"none\";\r\n                        // advloop addition\r\n                this._spectrumRow.style.display = \"\";\r\n                this._spectrumEditor.render();\r\n            } else {\r\n                this._spectrumRow.style.display = \"none\";\r\n            }\r\n            if (instrument.type == InstrumentType.harmonics || instrument.type == InstrumentType.pickedString) {\r\n                this._chipWaveSelectRow.style.display = \"none\";\r\n\t\t    \t\t\t\t\t\t// advloop addition\r\n                        this._useChipWaveAdvancedLoopControlsRow.style.display = \"none\";\r\n                        this._chipWaveLoopModeSelectRow.style.display = \"none\";\r\n                        this._chipWaveLoopStartRow.style.display = \"none\";\r\n                        this._chipWaveLoopEndRow.style.display = \"none\";\r\n                        this._chipWaveStartOffsetRow.style.display = \"none\";\r\n                        this._chipWavePlayBackwardsRow.style.display = \"none\";\r\n                        // advloop addition\r\n                this._harmonicsRow.style.display = \"\";\r\n                this._harmonicsEditor.render();\r\n            } else {\r\n                this._harmonicsRow.style.display = \"none\";\r\n            }\r\n            if (instrument.type == InstrumentType.pickedString) {\r\n                this._chipWaveSelectRow.style.display = \"none\";\r\n\t\t    \t\t\t\t\t\t// advloop addition\r\n                        this._useChipWaveAdvancedLoopControlsRow.style.display = \"none\";\r\n                        this._chipWaveLoopModeSelectRow.style.display = \"none\";\r\n                        this._chipWaveLoopStartRow.style.display = \"none\";\r\n                        this._chipWaveLoopEndRow.style.display = \"none\";\r\n                        this._chipWaveStartOffsetRow.style.display = \"none\";\r\n                        this._chipWavePlayBackwardsRow.style.display = \"none\";\r\n                        // advloop addition\r\n                this._stringSustainRow.style.display = \"\";\r\n                this._stringSustainSlider.updateValue(instrument.stringSustain);\r\n            } else {\r\n                this._stringSustainRow.style.display = \"none\";\r\n            }\r\n            if (instrument.type == InstrumentType.drumset) {\r\n                this._drumsetGroup.style.display = \"\";\r\n                this._chipWaveSelectRow.style.display = \"none\";\r\n\t\t    \t\t\t\t\t\t// advloop addition\r\n                        this._useChipWaveAdvancedLoopControlsRow.style.display = \"none\";\r\n                        this._chipWaveLoopModeSelectRow.style.display = \"none\";\r\n                        this._chipWaveLoopStartRow.style.display = \"none\";\r\n                        this._chipWaveLoopEndRow.style.display = \"none\";\r\n                        this._chipWaveStartOffsetRow.style.display = \"none\";\r\n                        this._chipWavePlayBackwardsRow.style.display = \"none\";\r\n                        // advloop addition\r\n                this._fadeInOutRow.style.display = \"none\";\r\n                for (let i: number = 0; i < Config.drumCount; i++) {\r\n                    setSelectedValue(this._drumsetEnvelopeSelects[i], instrument.drumsetEnvelopes[i]);\r\n                    this._drumsetSpectrumEditors[i].render();\r\n                }\r\n            } else {\r\n                this._drumsetGroup.style.display = \"none\";\r\n                this._fadeInOutRow.style.display = \"\";\r\n                this._fadeInOutEditor.render();\r\n            }\r\n\r\n            if (instrument.type == InstrumentType.chip) {\r\n                this._chipWaveSelectRow.style.display = \"\";\r\n\t\t    \t\t\t\t\t\t// advloop addition\r\n                        this._useChipWaveAdvancedLoopControlsRow.style.display = \"\";\r\n                        if (instrument.isUsingAdvancedLoopControls) {\r\n                            this._chipWaveLoopModeSelectRow.style.display = \"\";\r\n                            this._chipWaveLoopStartRow.style.display = \"\";\r\n                            this._chipWaveLoopEndRow.style.display = \"\";\r\n                            this._chipWaveStartOffsetRow.style.display = \"\";\r\n                            this._chipWavePlayBackwardsRow.style.display = \"\";\r\n                        } else {\r\n                            this._chipWaveLoopModeSelectRow.style.display = \"none\";\r\n                            this._chipWaveLoopStartRow.style.display = \"none\";\r\n                            this._chipWaveLoopEndRow.style.display = \"none\";\r\n                            this._chipWaveStartOffsetRow.style.display = \"none\";\r\n                            this._chipWavePlayBackwardsRow.style.display = \"none\";\r\n                        }\r\n                        // advloop addition\r\n                setSelectedValue(this._chipWaveSelect, instrument.chipWave);\r\n\t\t    \t\t\t\t\t\t // advloop addition\r\n                        this._useChipWaveAdvancedLoopControlsBox.checked = instrument.isUsingAdvancedLoopControls ? true : false;\r\n                        setSelectedValue(this._chipWaveLoopModeSelect, instrument.chipWaveLoopMode);\r\n                        this._chipWaveLoopStartStepper.value = instrument.chipWaveLoopStart + \"\";\r\n                        // this._chipWaveLoopStartStepper.max = (chipWaveLength - 1) + \"\";\r\n                        this._chipWaveLoopEndStepper.value = instrument.chipWaveLoopEnd + \"\";\r\n                        // this._chipWaveLoopEndStepper.max = (chipWaveLength - 1) + \"\";\r\n                        this._chipWaveStartOffsetStepper.value = instrument.chipWaveStartOffset + \"\";\r\n                        // this._chipWaveStartOffsetStepper.max = (chipWaveLength - 1) + \"\";\r\n                        this._chipWavePlayBackwardsBox.checked = instrument.chipWavePlayBackwards ? true : false;\r\n                        // advloop addition\r\n            }\r\n\r\n            if (instrument.type == InstrumentType.customChipWave) {\r\n                this._customWaveDraw.style.display = \"\";\r\n                this._chipWaveSelectRow.style.display = \"none\";\r\n\t\t    \t\t\t\t\t\t// advloop addition\r\n                        this._useChipWaveAdvancedLoopControlsRow.style.display = \"none\";\r\n                        this._chipWaveLoopModeSelectRow.style.display = \"none\";\r\n                        this._chipWaveLoopStartRow.style.display = \"none\";\r\n                        this._chipWaveLoopEndRow.style.display = \"none\";\r\n                        this._chipWaveStartOffsetRow.style.display = \"none\";\r\n                        this._chipWavePlayBackwardsRow.style.display = \"none\";\r\n                        // advloop addition\r\n            }\r\n            else {\r\n                this._customWaveDraw.style.display = \"none\";\r\n            }\r\n\r\n            if (instrument.type == InstrumentType.pwm) {\r\n                this._chipWaveSelectRow.style.display = \"none\";\r\n\t\t    \t\t\t\t\t\t// advloop addition\r\n                        this._useChipWaveAdvancedLoopControlsRow.style.display = \"none\";\r\n                        this._chipWaveLoopModeSelectRow.style.display = \"none\";\r\n                        this._chipWaveLoopStartRow.style.display = \"none\";\r\n                        this._chipWaveLoopEndRow.style.display = \"none\";\r\n                        this._chipWaveStartOffsetRow.style.display = \"none\";\r\n                        this._chipWavePlayBackwardsRow.style.display = \"none\";\r\n                        // advloop addition\r\n                this._pulseWidthRow.style.display = \"\";\r\n                this._pulseWidthSlider.input.title = prettyNumber(instrument.pulseWidth) + \"%\";\r\n                this._pulseWidthSlider.updateValue(instrument.pulseWidth);\r\n            } else {\r\n                this._pulseWidthRow.style.display = \"none\";\r\n            }\r\n\r\n\r\n            if (instrument.type == InstrumentType.fm || instrument.type == InstrumentType.fm6op) {\r\n                this._phaseModGroup.style.display = \"\";\r\n                this._feedbackRow2.style.display = \"\";\r\n                this._chipWaveSelectRow.style.display = \"none\";\r\n\t\t    \t\t\t\t\t\t// advloop addition\r\n                        this._useChipWaveAdvancedLoopControlsRow.style.display = \"none\";\r\n                        this._chipWaveLoopModeSelectRow.style.display = \"none\";\r\n                        this._chipWaveLoopStartRow.style.display = \"none\";\r\n                        this._chipWaveLoopEndRow.style.display = \"none\";\r\n                        this._chipWaveStartOffsetRow.style.display = \"none\";\r\n                        this._chipWavePlayBackwardsRow.style.display = \"none\";\r\n                        // advloop addition\r\n                setSelectedValue(this._algorithmSelect, instrument.algorithm);\r\n                setSelectedValue(this._feedbackTypeSelect, instrument.feedbackType);\r\n                this._feedbackAmplitudeSlider.updateValue(instrument.feedbackAmplitude);\r\n                for (let i: number = 0; i < Config.operatorCount + (instrument.type == InstrumentType.fm6op? 2 : 0); i++) {\r\n                    const isCarrier: boolean = instrument.type == InstrumentType.fm ? (i < Config.algorithms[instrument.algorithm].carrierCount): (i < instrument.customAlgorithm.carrierCount);\r\n                    this._operatorRows[i].style.color = isCarrier ? ColorConfig.primaryText : \"\";\r\n                    setSelectedValue(this._operatorFrequencySelects[i], instrument.operators[i].frequency);\r\n                    this._operatorAmplitudeSliders[i].updateValue(instrument.operators[i].amplitude);\r\n                    setSelectedValue(this._operatorWaveformSelects[i], instrument.operators[i].waveform);\r\n                    this._operatorWaveformPulsewidthSliders[i].updateValue(instrument.operators[i].pulseWidth);\r\n                    this._operatorWaveformPulsewidthSliders[i].input.title = \"\" + Config.pwmOperatorWaves[instrument.operators[i].pulseWidth].name;\r\n                    this._operatorDropdownGroups[i].style.color = isCarrier ? ColorConfig.primaryText : \"\";\r\n                    const operatorName: string = (isCarrier ? \"Voice \" : \"Modulator \") + (i + 1);\r\n                    this._operatorFrequencySelects[i].title = operatorName + \" Frequency\";\r\n                    this._operatorAmplitudeSliders[i].input.title = operatorName + (isCarrier ? \" Volume\" : \" Amplitude\");\r\n                    this._operatorDropdownGroups[i].style.display = (this._openOperatorDropdowns[i] ? \"\" : \"none\");\r\n                    if (instrument.operators[i].waveform == 2) {\r\n                        this._operatorWaveformPulsewidthSliders[i].container.style.display = \"\";\r\n                        this._operatorWaveformHints[i].style.display = \"none\";\r\n                    } else {\r\n                        this._operatorWaveformPulsewidthSliders[i].container.style.display = \"none\";\r\n                        this._operatorWaveformHints[i].style.display = \"\";\r\n                    }\r\n                }\r\n                if (instrument.type == InstrumentType.fm6op){\r\n                    setSelectedValue(this._algorithm6OpSelect, instrument.algorithm6Op);\r\n                    setSelectedValue(this._feedback6OpTypeSelect, instrument.feedbackType6Op);\r\n                    this._customAlgorithmCanvas.redrawCanvas();\r\n                    this._algorithm6OpSelectRow.style.display = \"\";\r\n                    this._feedback6OpRow1.style.display = \"\";\r\n                    this._operatorRows[4].style.display = \"\";\r\n                    this._operatorRows[5].style.display = \"\";\r\n                    this._operatorDropdownGroups[4].style.display = (this._openOperatorDropdowns[4] ? \"\" : \"none\");\r\n                    this._operatorDropdownGroups[5].style.display = (this._openOperatorDropdowns[5] ? \"\" : \"none\");\r\n                    this._algorithmSelectRow.style.display = \"none\";\r\n                    this._feedbackRow1.style.display = \"none\";\r\n                }else{\r\n                    this._algorithm6OpSelectRow.style.display = \"none\";\r\n                    this._feedback6OpRow1.style.display = \"none\";\r\n                    this._operatorRows[4].style.display = \"none\";\r\n                    this._operatorRows[5].style.display = \"none\";\r\n                    this._operatorDropdownGroups[4].style.display = \"none\";\r\n                    this._operatorDropdownGroups[5].style.display = \"none\";\r\n                    this._feedbackRow1.style.display = \"\";\r\n                    this._algorithmSelectRow.style.display = \"\";\r\n                }\r\n            }\r\n            else {\r\n                this._algorithm6OpSelectRow.style.display = \"none\";\r\n                this._feedback6OpRow1.style.display = \"none\";\r\n                this._algorithmSelectRow.style.display = \"none\";\r\n                this._phaseModGroup.style.display = \"none\";\r\n                this._feedbackRow1.style.display = \"none\";\r\n                this._feedbackRow2.style.display = \"none\";\r\n            }\r\n            this._pulseWidthSlider.input.title = prettyNumber(instrument.pulseWidth) + \"%\";\r\n\r\n\r\n            if (effectsIncludeTransition(instrument.effects)) {\r\n                this._transitionRow.style.display = \"\";\r\n                if (this._openTransitionDropdown)\r\n                    this._transitionDropdownGroup.style.display = \"\";\r\n                setSelectedValue(this._transitionSelect, instrument.transition);\r\n            } else {\r\n                this._transitionDropdownGroup.style.display = \"none\";\r\n                this._transitionRow.style.display = \"none\";\r\n            }\r\n\r\n            if (effectsIncludeChord(instrument.effects)) {\r\n                this._chordSelectRow.style.display = \"\";\r\n                this._chordDropdown.style.display = (instrument.chord == Config.chords.dictionary[\"arpeggio\"].index) ? \"\" : \"none\";\r\n                this._chordDropdownGroup.style.display = (instrument.chord == Config.chords.dictionary[\"arpeggio\"].index && this._openChordDropdown) ? \"\" : \"none\";\r\n                setSelectedValue(this._chordSelect, instrument.chord);\r\n            } else {\r\n                this._chordSelectRow.style.display = \"none\";\r\n                this._chordDropdown.style.display = \"none\";\r\n                this._chordDropdownGroup.style.display = \"none\";\r\n            }\r\n\r\n            if (effectsIncludePitchShift(instrument.effects)) {\r\n                this._pitchShiftRow.style.display = \"\";\r\n                this._pitchShiftSlider.updateValue(instrument.pitchShift);\r\n                this._pitchShiftSlider.input.title = (instrument.pitchShift - Config.pitchShiftCenter) + \" semitone(s)\";\r\n                for (const marker of this._pitchShiftFifthMarkers) {\r\n                    marker.style.display = prefs.showFifth ? \"\" : \"none\";\r\n                }\r\n            } else {\r\n                this._pitchShiftRow.style.display = \"none\";\r\n            }\r\n\r\n            if (effectsIncludeDetune(instrument.effects)) {\r\n                this._detuneSliderRow.style.display = \"\";\r\n                this._detuneSlider.updateValue(instrument.detune - Config.detuneCenter);\r\n                this._detuneSlider.input.title = (Synth.detuneToCents(instrument.detune)) + \" cent(s)\";\r\n            } else {\r\n                this._detuneSliderRow.style.display = \"none\";\r\n            }\r\n\r\n            if (effectsIncludeVibrato(instrument.effects)) {\r\n                this._vibratoSelectRow.style.display = \"\";\r\n                if (this._openVibratoDropdown)\r\n                    this._vibratoDropdownGroup.style.display = \"\";\r\n                setSelectedValue(this._vibratoSelect, instrument.vibrato);\r\n            } else {\r\n                this._vibratoDropdownGroup.style.display = \"none\";\r\n                this._vibratoSelectRow.style.display = \"none\";\r\n            }\r\n\r\n            if (effectsIncludeNoteFilter(instrument.effects)) {\r\n\r\n                this._noteFilterTypeRow.style.setProperty(\"--text-color-lit\", colors.primaryNote);\r\n                this._noteFilterTypeRow.style.setProperty(\"--text-color-dim\", colors.secondaryNote);\r\n                this._noteFilterTypeRow.style.setProperty(\"--background-color-lit\", colors.primaryChannel);\r\n                this._noteFilterTypeRow.style.setProperty(\"--background-color-dim\", colors.secondaryChannel);\r\n                this._noteFilterTypeRow.style.display = \"\";\r\n\r\n                this._noteFilterEditor.render();\r\n\r\n                if (instrument.noteFilterType) {\r\n                    this._noteFilterSimpleButton.classList.remove(\"deactivated\");\r\n                    this._noteFilterAdvancedButton.classList.add(\"deactivated\");\r\n                    this._noteFilterRow.style.display = \"none\";\r\n                    this._noteFilterSimpleCutRow.style.display = \"\";\r\n                    this._noteFilterSimplePeakRow.style.display = \"\";\r\n                } else {\r\n                    this._noteFilterSimpleButton.classList.add(\"deactivated\");\r\n                    this._noteFilterAdvancedButton.classList.remove(\"deactivated\");\r\n                    this._noteFilterRow.style.display = \"\";\r\n                    this._noteFilterSimpleCutRow.style.display = \"none\";\r\n                    this._noteFilterSimplePeakRow.style.display = \"none\";\r\n                }\r\n            } else {\r\n                this._noteFilterRow.style.display = \"none\";\r\n                this._noteFilterSimpleCutRow.style.display = \"none\";\r\n                this._noteFilterSimplePeakRow.style.display = \"none\";\r\n                this._noteFilterTypeRow.style.display = \"none\";\r\n            }\r\n\r\n            if (effectsIncludeDistortion(instrument.effects)) {\r\n                this._distortionRow.style.display = \"\";\r\n                if (instrument.type == InstrumentType.chip || instrument.type == InstrumentType.customChipWave || instrument.type == InstrumentType.pwm)\r\n                    this._aliasingRow.style.display = \"\";\r\n                else\r\n                    this._aliasingRow.style.display = \"none\";\r\n                this._distortionSlider.updateValue(instrument.distortion);\r\n            } else {\r\n                this._distortionRow.style.display = \"none\";\r\n                this._aliasingRow.style.display = \"none\";\r\n            }\r\n\r\n            if (effectsIncludeBitcrusher(instrument.effects)) {\r\n                this._bitcrusherQuantizationRow.style.display = \"\";\r\n                this._bitcrusherFreqRow.style.display = \"\";\r\n                this._bitcrusherQuantizationSlider.updateValue(instrument.bitcrusherQuantization);\r\n                this._bitcrusherFreqSlider.updateValue(instrument.bitcrusherFreq);\r\n            } else {\r\n                this._bitcrusherQuantizationRow.style.display = \"none\";\r\n                this._bitcrusherFreqRow.style.display = \"none\";\r\n            }\r\n\r\n            if (effectsIncludePanning(instrument.effects)) {\r\n                this._panSliderRow.style.display = \"\";\r\n                if (this._openPanDropdown)\r\n                    this._panDropdownGroup.style.display = \"\";\r\n                this._panSlider.updateValue(instrument.pan);\r\n            } else {\r\n                this._panSliderRow.style.display = \"none\";\r\n                this._panDropdownGroup.style.display = \"none\";\r\n            }\r\n\r\n            if (effectsIncludeChorus(instrument.effects)) {\r\n                this._chorusRow.style.display = \"\";\r\n                this._chorusSlider.updateValue(instrument.chorus);\r\n            } else {\r\n                this._chorusRow.style.display = \"none\";\r\n            }\r\n\r\n            if (effectsIncludeEcho(instrument.effects)) {\r\n                this._echoSustainRow.style.display = \"\";\r\n                this._echoSustainSlider.updateValue(instrument.echoSustain);\r\n                this._echoDelayRow.style.display = \"\";\r\n                this._echoDelaySlider.updateValue(instrument.echoDelay);\r\n                this._echoDelaySlider.input.title = (Math.round((instrument.echoDelay + 1) * Config.echoDelayStepTicks / (Config.ticksPerPart * Config.partsPerBeat) * 1000) / 1000) + \" beat(s)\";\r\n            } else {\r\n                this._echoSustainRow.style.display = \"none\";\r\n                this._echoDelayRow.style.display = \"none\";\r\n            }\r\n\r\n            if (effectsIncludeReverb(instrument.effects)) {\r\n                this._reverbRow.style.display = \"\";\r\n                this._reverbSlider.updateValue(instrument.reverb);\r\n            } else {\r\n                this._reverbRow.style.display = \"none\";\r\n            }\r\n\r\n            if (instrument.type == InstrumentType.chip || instrument.type == InstrumentType.customChipWave || instrument.type == InstrumentType.harmonics || instrument.type == InstrumentType.pickedString) {\r\n                this._unisonSelectRow.style.display = \"\";\r\n                setSelectedValue(this._unisonSelect, instrument.unison);\r\n            } else {\r\n                this._unisonSelectRow.style.display = \"none\";\r\n            }\r\n\r\n            this._envelopeEditor.render();\r\n\r\n            for (let chordIndex: number = 0; chordIndex < Config.chords.length; chordIndex++) {\r\n                let hidden: boolean = (!Config.instrumentTypeHasSpecialInterval[instrument.type] && Config.chords[chordIndex].customInterval);\r\n                const option: Element = this._chordSelect.children[chordIndex];\r\n                if (hidden) {\r\n                    if (!option.hasAttribute(\"hidden\")) {\r\n                        option.setAttribute(\"hidden\", \"\");\r\n                    }\r\n                } else {\r\n                    option.removeAttribute(\"hidden\");\r\n                }\r\n            }\r\n\r\n            this._instrumentSettingsGroup.style.color = ColorConfig.getChannelColor(this._doc.song, this._doc.channel).primaryNote;\r\n\r\n            setSelectedValue(this._transitionSelect, instrument.transition);\r\n            setSelectedValue(this._vibratoSelect, instrument.vibrato);\r\n            setSelectedValue(this._vibratoTypeSelect, instrument.vibratoType);\r\n            setSelectedValue(this._chordSelect, instrument.chord);\r\n            this._panSliderInputBox.value = instrument.pan + \"\";\r\n            this._detuneSliderInputBox.value = (instrument.detune - Config.detuneCenter) + \"\";\r\n            this._instrumentVolumeSlider.updateValue(instrument.volume);\r\n            this._instrumentVolumeSliderInputBox.value = \"\" + (instrument.volume);\r\n            this._vibratoDepthSlider.updateValue(Math.round(instrument.vibratoDepth * 25));\r\n            this._vibratoDelaySlider.updateValue(Math.round(instrument.vibratoDelay));\r\n            this._vibratoSpeedSlider.updateValue(instrument.vibratoSpeed);\r\n            setSelectedValue(this._vibratoTypeSelect, instrument.vibratoType);\r\n            this._arpeggioSpeedSlider.updateValue(instrument.arpeggioSpeed);\r\n            this._panDelaySlider.updateValue(instrument.panDelay);\r\n            this._vibratoDelaySlider.input.title = \"\" + Math.round(instrument.vibratoDelay);\r\n            this._vibratoDepthSlider.input.title = \"\" + instrument.vibratoDepth;\r\n            this._vibratoSpeedSlider.input.title = \"\" + instrument.vibratoSpeed;\r\n            this._panDelaySlider.input.title = \"\" + instrument.panDelay;\r\n            this._arpeggioSpeedSlider.input.title = \"x\" + prettyNumber(Config.arpSpeedScale[instrument.arpeggioSpeed]);\r\n            this._eqFilterSimpleCutSlider.updateValue(instrument.eqFilterSimpleCut);\r\n            this._eqFilterSimplePeakSlider.updateValue(instrument.eqFilterSimplePeak);\r\n            this._noteFilterSimpleCutSlider.updateValue(instrument.noteFilterSimpleCut);\r\n            this._noteFilterSimplePeakSlider.updateValue(instrument.noteFilterSimplePeak);\r\n\r\n            if (instrument.type == InstrumentType.customChipWave) {\r\n                this._customWaveDrawCanvas.redrawCanvas();\r\n\r\n                if (this.prompt instanceof CustomChipPrompt) {\r\n                    this.prompt.customChipCanvas.render();\r\n                }\r\n            }\r\n\r\n            this._renderInstrumentBar(channel, instrumentIndex, colors);\r\n        }\r\n        // Options for mod channel\r\n        else {\r\n            this._usageCheck(this._doc.channel, instrumentIndex);\r\n\r\n            this._pitchedPresetSelect.style.display = \"none\";\r\n            this._drumPresetSelect.style.display = \"none\";\r\n            $(\"#pitchPresetSelect\").parent().hide();\r\n            $(\"#drumPresetSelect\").parent().hide();\r\n            this._modulatorGroup.appendChild(this._instrumentCopyGroup);\r\n\r\n            this._modulatorGroup.insertBefore(this._instrumentsButtonRow, this._modulatorGroup.firstChild);\r\n            this._modulatorGroup.insertBefore(this._instrumentSettingsTextRow, this._modulatorGroup.firstChild);\r\n            if (this._doc.song.channels[this._doc.channel].name == \"\") {\r\n                this._instrumentSettingsTextRow.textContent = \"Modulator Settings\";\r\n            }\r\n            else {\r\n                this._instrumentSettingsTextRow.textContent = this._doc.song.channels[this._doc.channel].name;\r\n            }\r\n\r\n            this._chipNoiseSelectRow.style.display = \"none\";\r\n            this._chipWaveSelectRow.style.display = \"none\";\r\n\t\t\t\t\t\t\t // advloop addition\r\n                    this._useChipWaveAdvancedLoopControlsRow.style.display = \"none\";\r\n                    this._chipWaveLoopModeSelectRow.style.display = \"none\";\r\n                    this._chipWaveLoopStartRow.style.display = \"none\";\r\n                    this._chipWaveLoopEndRow.style.display = \"none\";\r\n                    this._chipWaveStartOffsetRow.style.display = \"none\";\r\n                    this._chipWavePlayBackwardsRow.style.display = \"none\";\r\n                    // advloop addition\r\n            this._spectrumRow.style.display = \"none\";\r\n            this._harmonicsRow.style.display = \"none\";\r\n            this._transitionRow.style.display = \"none\";\r\n            this._chordSelectRow.style.display = \"none\";\r\n            this._chordDropdownGroup.style.display = \"none\";\r\n            //this._filterCutoffRow.style.display = \"none\";\r\n            //this._filterResonanceRow.style.display = \"none\";\r\n            //this._filterEnvelopeRow.style.display = \"none\";\r\n            this._drumsetGroup.style.display = \"none\";\r\n            this._customWaveDraw.style.display = \"none\";\r\n            this._algorithmSelectRow.style.display = \"none\";\r\n            this._phaseModGroup.style.display = \"none\";\r\n            this._feedbackRow1.style.display = \"none\";\r\n            this._feedbackRow2.style.display = \"none\";\r\n            //this._pulseEnvelopeRow.style.display = \"none\";\r\n            this._pulseWidthRow.style.display = \"none\";\r\n            this._vibratoSelectRow.style.display = \"none\";\r\n            this._vibratoDropdownGroup.style.display = \"none\";\r\n            //this._intervalSelectRow.style.display = \"none\";\r\n            this._detuneSliderRow.style.display = \"none\";\r\n            this._panSliderRow.style.display = \"none\";\r\n            this._panDropdownGroup.style.display = \"none\";\r\n\r\n            this._modulatorGroup.style.display = \"\";\r\n            this._modulatorGroup.style.color = ColorConfig.getChannelColor(this._doc.song, this._doc.channel).primaryNote;\r\n\r\n            for (let mod: number = 0; mod < Config.modCount; mod++) {\r\n\r\n                let instrument: Instrument = this._doc.song.channels[this._doc.channel].instruments[this._doc.getCurrentInstrument()];\r\n                let modChannel: number = Math.max(0, instrument.modChannels[mod]);\r\n                let modInstrument: number = instrument.modInstruments[mod];\r\n\r\n                // Boundary checking\r\n                if (modInstrument >= this._doc.song.channels[modChannel].instruments.length + 2 || (modInstrument > 0 && this._doc.song.channels[modChannel].instruments.length <= 1)) {\r\n                    modInstrument = 0;\r\n                    instrument.modInstruments[mod] = 0;\r\n                    instrument.modulators[mod] = 0;\r\n                }\r\n                if (modChannel >= this._doc.song.pitchChannelCount + this._doc.song.noiseChannelCount) {\r\n                    instrument.modInstruments[mod] = 0;\r\n                    instrument.modulators[mod] = 0;\r\n                }\r\n\r\n                // Build options for modulator channels (make sure it has the right number).\r\n                if (this._doc.recalcChannelNames || (this._modChannelBoxes[mod].children.length != 2 + this._doc.song.pitchChannelCount + this._doc.song.noiseChannelCount)) {\r\n                    while (this._modChannelBoxes[mod].firstChild) this._modChannelBoxes[mod].remove(0);\r\n                    const channelList: string[] = [];\r\n                    channelList.push(\"none\");\r\n                    channelList.push(\"song\");\r\n                    for (let i: number = 0; i < this._doc.song.pitchChannelCount; i++) {\r\n                        if (this._doc.song.channels[i].name == \"\") {\r\n                            channelList.push(\"pitch \" + (i + 1));\r\n                        }\r\n                        else {\r\n                            channelList.push(this._doc.song.channels[i].name);\r\n                        }\r\n                    }\r\n                    for (let i: number = 0; i < this._doc.song.noiseChannelCount; i++) {\r\n                        if (this._doc.song.channels[i + this._doc.song.pitchChannelCount].name == \"\") {\r\n                            channelList.push(\"noise \" + (i + 1));\r\n                        }\r\n                        else {\r\n                            channelList.push(this._doc.song.channels[i + this._doc.song.pitchChannelCount].name);\r\n                        }\r\n                    }\r\n                    buildOptions(this._modChannelBoxes[mod], channelList);\r\n                }\r\n\r\n                // Set selected index based on channel info.\r\n\r\n                this._modChannelBoxes[mod].selectedIndex = instrument.modChannels[mod] + 2; // Offset to get to first pitch channel\r\n\r\n                let channel: Channel = this._doc.song.channels[modChannel];\r\n\r\n                // Build options for modulator instruments (make sure it has the right number).\r\n                if (this._modInstrumentBoxes[mod].children.length != channel.instruments.length + 2) {\r\n                    while (this._modInstrumentBoxes[mod].firstChild) this._modInstrumentBoxes[mod].remove(0);\r\n                    const instrumentList: string[] = [];\r\n                    for (let i: number = 0; i < channel.instruments.length; i++) {\r\n                        instrumentList.push(\"\" + i + 1);\r\n                    }\r\n                    instrumentList.push(\"all\");\r\n                    instrumentList.push(\"active\");\r\n                    buildOptions(this._modInstrumentBoxes[mod], instrumentList);\r\n                }\r\n\r\n                // If non-zero pattern, point to which instrument(s) is/are the current\r\n                if (channel.bars[this._doc.bar] > 0) {\r\n\r\n                    let usedInstruments: number[] = channel.patterns[channel.bars[this._doc.bar] - 1].instruments;\r\n\r\n                    for (let i: number = 0; i < channel.instruments.length; i++) {\r\n\r\n                        if (usedInstruments.includes(i)) {\r\n                            this._modInstrumentBoxes[mod].options[i].label = \"🢒\" + (i + 1);\r\n                        }\r\n                        else {\r\n                            this._modInstrumentBoxes[mod].options[i].label = \"\" + (i + 1);\r\n                        }\r\n                    }\r\n                }\r\n                else {\r\n                    for (let i: number = 0; i < channel.instruments.length; i++) {\r\n                        this._modInstrumentBoxes[mod].options[i].label = \"\" + (i + 1);\r\n                    }\r\n                }\r\n\r\n                // Set selected index based on instrument info.\r\n                this._modInstrumentBoxes[mod].selectedIndex = instrument.modInstruments[mod];\r\n\r\n                // Build options for modulator settings (based on channel settings)\r\n\r\n                if (instrument.modChannels[mod] != -2) {\r\n                    while (this._modSetBoxes[mod].firstChild) this._modSetBoxes[mod].remove(0);\r\n                    const settingList: string[] = [];\r\n                    const unusedSettingList: string[] = [];\r\n\r\n                    // Make sure these names match the names declared for modulators in SynthConfig.ts.\r\n\r\n                    settingList.push(\"none\");\r\n\r\n                    // Populate mod setting options for the song scope.\r\n                    if (instrument.modChannels[mod] == -1) {\r\n                        settingList.push(\"song volume\");\r\n                        settingList.push(\"tempo\");\r\n                        settingList.push(\"song reverb\");\r\n                        settingList.push(\"next bar\");\r\n                        settingList.push(\"song detune\");\r\n                    }\r\n                    // Populate mod setting options for instrument scope.\r\n                    else {\r\n\r\n                        settingList.push(\"note volume\");\r\n                        settingList.push(\"mix volume\");\r\n\r\n                        // Build a list of target instrument indices, types and other info. It will be a single type for a single instrument, but with \"all\" and \"active\" it could be more.\r\n                        // All or active are included together. Active allows any to be set, just in case the user fiddles with which are active later.\r\n                        let tgtInstrumentTypes: InstrumentType[] = [];\r\n                        let anyInstrumentAdvancedEQ:   boolean = false,\r\n                            anyInstrumentSimpleEQ:     boolean = false,\r\n                            anyInstrumentAdvancedNote: boolean = false,\r\n                            anyInstrumentSimpleNote:   boolean = false,\r\n                            anyInstrumentArps:         boolean = false,\r\n                            anyInstrumentPitchShifts:  boolean = false,\r\n                            anyInstrumentDetunes:      boolean = false,\r\n                            anyInstrumentVibratos:     boolean = false,\r\n                            anyInstrumentNoteFilters:  boolean = false,\r\n                            anyInstrumentDistorts:     boolean = false,\r\n                            anyInstrumentBitcrushes:   boolean = false,\r\n                            anyInstrumentPans:         boolean = false,\r\n                            anyInstrumentChorus:       boolean = false,\r\n                            anyInstrumentEchoes:       boolean = false,\r\n                            anyInstrumentReverbs:      boolean = false;\r\n                        let allInstrumentPitchShifts:  boolean = true,\r\n                            allInstrumentNoteFilters:  boolean = true,\r\n                            allInstrumentDetunes:      boolean = true,\r\n                            allInstrumentVibratos:     boolean = true,\r\n                            allInstrumentDistorts:     boolean = true,\r\n                            allInstrumentBitcrushes:   boolean = true,\r\n                            allInstrumentPans:         boolean = true,\r\n                            allInstrumentChorus:       boolean = true,\r\n                            allInstrumentEchoes:       boolean = true,\r\n                            allInstrumentReverbs:      boolean = true;\r\n                        let instrumentCandidates: number[] = [];\r\n                        if (modInstrument >= channel.instruments.length) {\r\n                            for (let i: number = 0; i < channel.instruments.length; i++) {\r\n                                instrumentCandidates.push(i);\r\n                            }\r\n                        } else {\r\n                            instrumentCandidates.push(modInstrument);\r\n                        }\r\n                        for (let i: number = 0; i < instrumentCandidates.length; i++) {\r\n                            let instrumentIndex = instrumentCandidates[i];\r\n\r\n                            if (!tgtInstrumentTypes.includes(channel.instruments[instrumentIndex].type))\r\n                                tgtInstrumentTypes.push(channel.instruments[instrumentIndex].type);\r\n                            if (channel.instruments[instrumentIndex].eqFilterType)\r\n                                anyInstrumentSimpleEQ = true;\r\n                            else\r\n                                anyInstrumentAdvancedEQ = true;\r\n                            if (effectsIncludeChord(channel.instruments[instrumentIndex].effects) && channel.instruments[instrumentIndex].getChord().arpeggiates) {\r\n                                anyInstrumentArps = true;\r\n                            }\r\n                            if (effectsIncludePitchShift(channel.instruments[instrumentIndex].effects)) {\r\n                                anyInstrumentPitchShifts = true;\r\n                            }\r\n                            if (effectsIncludeDetune(channel.instruments[instrumentIndex].effects)) {\r\n                                anyInstrumentDetunes = true;\r\n                            }\r\n                            else {\r\n                                allInstrumentDetunes = false;\r\n                            }\r\n                            if (effectsIncludeVibrato(channel.instruments[instrumentIndex].effects)) {\r\n                                anyInstrumentVibratos = true;\r\n                            }\r\n                            else {\r\n                                allInstrumentVibratos = false;\r\n                            }\r\n                            if (effectsIncludeNoteFilter(channel.instruments[instrumentIndex].effects)) {\r\n                                anyInstrumentNoteFilters = true;\r\n                                if (channel.instruments[instrumentIndex].noteFilterType)\r\n                                    anyInstrumentSimpleNote = true;\r\n                                else\r\n                                    anyInstrumentAdvancedNote = true;\r\n                            }\r\n                            else {\r\n                                allInstrumentNoteFilters = false;\r\n                            }\r\n                            if (effectsIncludeDistortion(channel.instruments[instrumentIndex].effects)) {\r\n                                anyInstrumentDistorts = true;\r\n                            }\r\n                            else {\r\n                                allInstrumentDistorts = false;\r\n                            }\r\n                            if (effectsIncludeBitcrusher(channel.instruments[instrumentIndex].effects)) {\r\n                                anyInstrumentBitcrushes = true;\r\n                            }\r\n                            else {\r\n                                allInstrumentBitcrushes = false;\r\n                            }\r\n                            if (effectsIncludePanning(channel.instruments[instrumentIndex].effects)) {\r\n                                anyInstrumentPans = true;\r\n                            }\r\n                            else {\r\n                                allInstrumentPans = false;\r\n                            }\r\n                            if (effectsIncludeChorus(channel.instruments[instrumentIndex].effects)) {\r\n                                anyInstrumentChorus = true;\r\n                            }\r\n                            else {\r\n                                allInstrumentChorus = false;\r\n                            }\r\n                            if (effectsIncludeEcho(channel.instruments[instrumentIndex].effects)) {\r\n                                anyInstrumentEchoes = true;\r\n                            }\r\n                            else {\r\n                                allInstrumentEchoes = false;\r\n                            }\r\n                            if (effectsIncludeReverb(channel.instruments[instrumentIndex].effects)) {\r\n                                anyInstrumentReverbs = true;\r\n                            }\r\n                            else {\r\n                                allInstrumentReverbs = false;\r\n                            }\r\n\r\n                        }\r\n                        if (anyInstrumentAdvancedEQ) {\r\n                            settingList.push(\"eq filter\");\r\n                        }\r\n                        if (anyInstrumentSimpleEQ) {\r\n                            settingList.push(\"eq filt cut\");\r\n                            settingList.push(\"eq filt peak\");\r\n                        }\r\n                        if (tgtInstrumentTypes.includes(InstrumentType.fm)) {\r\n                            settingList.push(\"fm slider 1\");\r\n                            settingList.push(\"fm slider 2\");\r\n                            settingList.push(\"fm slider 3\");\r\n                            settingList.push(\"fm slider 4\");\r\n                            settingList.push(\"fm feedback\");\r\n                        }\r\n                        if (tgtInstrumentTypes.includes(InstrumentType.fm6op)) {\r\n                            settingList.push(\"fm slider 1\");\r\n                            settingList.push(\"fm slider 2\");\r\n                            settingList.push(\"fm slider 3\");\r\n                            settingList.push(\"fm slider 4\");\r\n                            settingList.push(\"fm slider 5\");\r\n                            settingList.push(\"fm slider 6\");\r\n                            settingList.push(\"fm feedback\");\r\n                        }\r\n                        if (tgtInstrumentTypes.includes(InstrumentType.pwm)) {\r\n                            settingList.push(\"pulse width\");\r\n                        }\r\n                        if (tgtInstrumentTypes.includes(InstrumentType.pickedString)) {\r\n                            settingList.push(\"sustain\");\r\n                        }\r\n                        if (anyInstrumentArps) {\r\n                            settingList.push(\"arp speed\");\r\n                            settingList.push(\"reset arp\");\r\n                        }\r\n                        if (anyInstrumentPitchShifts) {\r\n                            settingList.push(\"pitch shift\");\r\n                        }\r\n                        if (!allInstrumentPitchShifts) {\r\n                            unusedSettingList.push(\"+ pitch shift\");\r\n                        }\r\n                        if (anyInstrumentDetunes) {\r\n                            settingList.push(\"detune\");\r\n                        }\r\n                        if (!allInstrumentDetunes) {\r\n                            unusedSettingList.push(\"+ detune\");\r\n                        }\r\n                        if (anyInstrumentVibratos) {\r\n                            settingList.push(\"vibrato depth\");\r\n                            settingList.push(\"vibrato speed\");\r\n                            settingList.push(\"vibrato delay\");\r\n                        }\r\n                        if (!allInstrumentVibratos) {\r\n                            unusedSettingList.push(\"+ vibrato depth\");\r\n                            unusedSettingList.push(\"+ vibrato speed\");\r\n                            unusedSettingList.push(\"+ vibrato delay\");\r\n                        }\r\n                        if (anyInstrumentNoteFilters) {\r\n                            if (anyInstrumentAdvancedNote) {\r\n                                settingList.push(\"note filter\");\r\n                            }\r\n                            if (anyInstrumentSimpleNote) {\r\n                                settingList.push(\"note filt cut\");\r\n                                settingList.push(\"note filt peak\");\r\n                            }\r\n                        }\r\n                        if (!allInstrumentNoteFilters) {\r\n                            unusedSettingList.push(\"+ note filter\");\r\n                        }\r\n                        if (anyInstrumentDistorts) {\r\n                            settingList.push(\"distortion\");\r\n                        }\r\n                        if (!allInstrumentDistorts) {\r\n                            unusedSettingList.push(\"+ distortion\");\r\n                        }\r\n                        if (anyInstrumentBitcrushes) {\r\n                            settingList.push(\"bit crush\");\r\n                            settingList.push(\"freq crush\");\r\n                        }\r\n                        if (!allInstrumentBitcrushes) {\r\n                            unusedSettingList.push(\"+ bit crush\");\r\n                            unusedSettingList.push(\"+ freq crush\");\r\n                        }\r\n                        if (anyInstrumentPans) {\r\n                            settingList.push(\"pan\");\r\n                            settingList.push(\"pan delay\");\r\n                        }\r\n                        if (!allInstrumentPans) {\r\n                            unusedSettingList.push(\"+ pan\");\r\n                            unusedSettingList.push(\"+ pan delay\");\r\n                        }\r\n                        if (anyInstrumentChorus) {\r\n                            settingList.push(\"chorus\");\r\n                        }\r\n                        if (!allInstrumentChorus) {\r\n                            unusedSettingList.push(\"+ chorus\");\r\n                        }\r\n                        if (anyInstrumentEchoes) {\r\n                            settingList.push(\"echo\");\r\n                            // Disabled currently!\r\n                            //settingList.push(\"echo delay\");\r\n                        }\r\n                        if (!allInstrumentEchoes) {\r\n                            unusedSettingList.push(\"+ echo\");\r\n                            //unusedSettingList.push(\"echo delay\");\r\n                        }\r\n                        if (anyInstrumentReverbs) {\r\n                            settingList.push(\"reverb\");\r\n                        }\r\n                        if (!allInstrumentReverbs) {\r\n                            unusedSettingList.push(\"+ reverb\");\r\n                        }\r\n\r\n                    }\r\n\r\n                    buildOptions(this._modSetBoxes[mod], settingList);\r\n                    if (unusedSettingList.length > 0) {\r\n                        this._modSetBoxes[mod].appendChild(option({ selected: false, disabled: true, value: \"Add Effect\" }, \"Add Effect\"));\r\n                        buildOptions(this._modSetBoxes[mod], unusedSettingList);\r\n                    }\r\n\r\n                    let setIndex: number = settingList.indexOf(Config.modulators[instrument.modulators[mod]].name);\r\n\r\n                    // Catch instances where invalid set forced setting to \"none\"\r\n                    if (setIndex == -1) {\r\n                        this._modSetBoxes[mod].insertBefore(option({ value: Config.modulators[instrument.modulators[mod]].name, style: \"color: red;\" }, Config.modulators[instrument.modulators[mod]].name), this._modSetBoxes[mod].children[0]);\r\n                        this._modSetBoxes[mod].selectedIndex = 0;\r\n                        //instrument.modulators[mod] = 0;\r\n                        //instrument.modInstruments[mod] = 0;\r\n                        this._whenSetModSetting(mod, true);\r\n                    }\r\n                    else {\r\n                        this._modSetBoxes[mod].selectedIndex = setIndex;\r\n                        this._modSetBoxes[mod].classList.remove(\"invalidSetting\");\r\n                        instrument.invalidModulators[mod] = false;\r\n                    }\r\n\r\n                } else if (this._modSetBoxes[mod].selectedIndex > 0) {\r\n                    this._modSetBoxes[mod].selectedIndex = 0;\r\n                    this._whenSetModSetting(mod);\r\n                }\r\n\r\n                //Hide instrument select if channel is \"none\" or \"song\"\r\n                if (instrument.modChannels[mod] < 0) {\r\n                    ((this._modInstrumentBoxes[mod].parentElement) as HTMLDivElement).style.display = \"none\";\r\n                    $(\"#modInstrumentText\" + mod).get(0).style.display = \"none\";\r\n                    $(\"#modChannelText\" + mod).get(0).innerText = \"Channel:\";\r\n\r\n                    //Hide setting select if channel is \"none\"\r\n                    if (instrument.modChannels[mod] == -2) {\r\n                        $(\"#modSettingText\" + mod).get(0).style.display = \"none\";\r\n                        ((this._modSetBoxes[mod].parentElement) as HTMLDivElement).style.display = \"none\";\r\n                    }\r\n                    else {\r\n                        $(\"#modSettingText\" + mod).get(0).style.display = \"\";\r\n                        ((this._modSetBoxes[mod].parentElement) as HTMLDivElement).style.display = \"\";\r\n                    }\r\n\r\n                    this._modTargetIndicators[mod].style.setProperty(\"fill\", ColorConfig.uiWidgetFocus);\r\n                    this._modTargetIndicators[mod].classList.remove(\"modTarget\");\r\n\r\n                }\r\n                else {\r\n                    ((this._modInstrumentBoxes[mod].parentElement) as HTMLDivElement).style.display = (channel.instruments.length > 1) ? \"\" : \"none\";\r\n                    $(\"#modInstrumentText\" + mod).get(0).style.display = (channel.instruments.length > 1) ? \"\" : \"none\";\r\n                    $(\"#modChannelText\" + mod).get(0).innerText = (channel.instruments.length > 1) ? \"Ch:\" : \"Channel:\";\r\n                    $(\"#modSettingText\" + mod).get(0).style.display = \"\";\r\n                    ((this._modSetBoxes[mod].parentElement) as HTMLDivElement).style.display = \"\";\r\n\r\n                    this._modTargetIndicators[mod].style.setProperty(\"fill\", ColorConfig.indicatorPrimary);\r\n                    this._modTargetIndicators[mod].classList.add(\"modTarget\");\r\n                }\r\n\r\n                let filterType: string = Config.modulators[instrument.modulators[mod]].name;\r\n                if (filterType == \"eq filter\" || filterType == \"note filter\") {\r\n                    $(\"#modFilterText\" + mod).get(0).style.display = \"\";\r\n                    $(\"#modSettingText\" + mod).get(0).style.setProperty(\"margin-bottom\", \"2px\");\r\n\r\n                    let useInstrument: number = instrument.modInstruments[mod];\r\n                    let modChannel: Channel = this._doc.song.channels[Math.max(0, instrument.modChannels[mod])];\r\n                    let tmpCount: number = -1;\r\n                    if (useInstrument >= modChannel.instruments.length) {\r\n                        // Use greatest number of dots among all instruments if setting is 'all' or 'active'. If it won't have an effect on one, no worry.\r\n                        for (let i: number = 0; i < modChannel.instruments.length; i++) {\r\n                            if (filterType == \"eq filter\") {\r\n                                if (modChannel.instruments[i].eqFilter.controlPointCount > tmpCount) {\r\n                                    tmpCount = modChannel.instruments[i].eqFilter.controlPointCount;\r\n                                    useInstrument = i;\r\n                                }\r\n                            } else {\r\n                                if (modChannel.instruments[i].noteFilter.controlPointCount > tmpCount) {\r\n                                    tmpCount = modChannel.instruments[i].noteFilter.controlPointCount;\r\n                                    useInstrument = i;\r\n                                }\r\n                            }\r\n                        }\r\n                    }\r\n\r\n                    // Build options for modulator filters (make sure it has the right number of filter dots).\r\n                    let dotCount: number = (filterType == \"eq filter\")\r\n                        ? channel.instruments[useInstrument].eqFilter.controlPointCount\r\n                        : channel.instruments[useInstrument].noteFilter.controlPointCount;\r\n\r\n                    const isSimple: boolean = (filterType == \"eq filter\" ? channel.instruments[useInstrument].eqFilterType : channel.instruments[useInstrument].noteFilterType);\r\n                    if (isSimple)\r\n                        dotCount = 0;\r\n\r\n                    if (isSimple || this._modFilterBoxes[mod].children.length != 1 + dotCount * 2) {\r\n                        while (this._modFilterBoxes[mod].firstChild) this._modFilterBoxes[mod].remove(0);\r\n                        const dotList: string[] = [];\r\n                        if (!isSimple)\r\n                            dotList.push(\"morph\");\r\n                        for (let i: number = 0; i < dotCount; i++) {\r\n                            dotList.push(\"dot \" + (i + 1) + \" x\");\r\n                            dotList.push(\"dot \" + (i + 1) + \" y\");\r\n                        }\r\n                        buildOptions(this._modFilterBoxes[mod], dotList);\r\n                    }\r\n\r\n                    if (isSimple || instrument.modFilterTypes[mod] >= this._modFilterBoxes[mod].length) {\r\n                        this._modFilterBoxes[mod].classList.add(\"invalidSetting\");\r\n                        instrument.invalidModulators[mod] = true;\r\n                        let useName: string = ((instrument.modFilterTypes[mod] - 1) % 2 == 1) ?\r\n                            \"dot \" + (Math.floor((instrument.modFilterTypes[mod] - 1) / 2) + 1) + \" y\"\r\n                            : \"dot \" + (Math.floor((instrument.modFilterTypes[mod] - 1) / 2) + 1) + \" x\";\r\n                        if (instrument.modFilterTypes[mod] == 0)\r\n                            useName = \"morph\";\r\n                        this._modFilterBoxes[mod].insertBefore(option({ value: useName, style: \"color: red;\" }, useName), this._modFilterBoxes[mod].children[0]);\r\n                        this._modFilterBoxes[mod].selectedIndex = 0;\r\n\r\n                    }\r\n                    else {\r\n                        this._modFilterBoxes[mod].classList.remove(\"invalidSetting\");\r\n                        instrument.invalidModulators[mod] = false;\r\n                        this._modFilterBoxes[mod].selectedIndex = instrument.modFilterTypes[mod];\r\n                    }\r\n\r\n\r\n\r\n                } else {\r\n                    $(\"#modFilterText\" + mod).get(0).style.display = \"none\";\r\n                    $(\"#modSettingText\" + mod).get(0).style.setProperty(\"margin-bottom\", \"0.9em\");\r\n\r\n                }\r\n            }\r\n\r\n            this._doc.recalcChannelNames = false;\r\n\r\n            for (let chordIndex: number = 0; chordIndex < Config.chords.length; chordIndex++) {\r\n                const option: Element = this._chordSelect.children[chordIndex];\r\n                if (!option.hasAttribute(\"hidden\")) {\r\n                    option.setAttribute(\"hidden\", \"\");\r\n                }\r\n\r\n            }\r\n\r\n            //this._instrumentSelectRow.style.display = \"none\";\r\n\r\n            this._customInstrumentSettingsGroup.style.display = \"none\";\r\n            this._panSliderRow.style.display = \"none\";\r\n            this._panDropdownGroup.style.display = \"none\";\r\n            this._instrumentVolumeSliderRow.style.display = \"none\";\r\n            this._instrumentTypeSelectRow.style.setProperty(\"display\", \"none\");\r\n\r\n            this._instrumentSettingsGroup.style.color = ColorConfig.getChannelColor(this._doc.song, this._doc.channel).primaryNote;\r\n\r\n            // Force piano to re-show, if channel is modulator\r\n            if (this._doc.channel >= this._doc.song.pitchChannelCount + this._doc.song.noiseChannelCount) {\r\n                this._piano.forceRender();\r\n            }\r\n\r\n            this._renderInstrumentBar(channel, instrumentIndex, colors);\r\n\r\n        }\r\n\r\n        this._instrumentSettingsGroup.style.color = colors.primaryNote;\r\n\r\n        this._eqFilterEditor.render();\r\n        this._instrumentVolumeSlider.updateValue(instrument.volume);\r\n        this._detuneSlider.updateValue(instrument.detune - Config.detuneCenter);\r\n        this._twoNoteArpBox.checked = instrument.fastTwoNoteArp ? true : false;\r\n        this._clicklessTransitionBox.checked = instrument.clicklessTransition ? true : false;\r\n        this._aliasingBox.checked = instrument.aliases ? true : false;\r\n        this._addEnvelopeButton.disabled = (instrument.envelopeCount >= Config.maxEnvelopeCount);\r\n\r\n        this._volumeSlider.updateValue(prefs.volume);\r\n\r\n        // If an interface element was selected, but becomes invisible (e.g. an instrument\r\n        // select menu) just select the editor container so keyboard commands still work.\r\n        if (wasActive && activeElement != null && activeElement.clientWidth == 0) {\r\n            this.refocusStage();\r\n        }\r\n\r\n        this._setPrompt(this._doc.prompt);\r\n\r\n        if (prefs.autoFollow && !this._doc.synth.playing) {\r\n            this._doc.synth.goToBar(this._doc.bar);\r\n        }\r\n\r\n        // When adding effects or envelopes to an instrument in fullscreen modes,\r\n        // auto-scroll the settings areas to ensure the new settings are visible.\r\n        if (this._doc.addedEffect) {\r\n            const envButtonRect: DOMRect = this._addEnvelopeButton.getBoundingClientRect();\r\n            const instSettingsRect: DOMRect = this._instrumentSettingsArea.getBoundingClientRect();\r\n            const settingsRect: DOMRect = this._settingsArea.getBoundingClientRect();\r\n            this._instrumentSettingsArea.scrollTop += Math.max(0, envButtonRect.top - (instSettingsRect.top + instSettingsRect.height));\r\n            this._settingsArea.scrollTop += Math.max(0, envButtonRect.top - (settingsRect.top + settingsRect.height));\r\n            this._doc.addedEffect = false;\r\n        }\r\n        if (this._doc.addedEnvelope) {\r\n            this._instrumentSettingsArea.scrollTop = this._instrumentSettingsArea.scrollHeight;\r\n            this._settingsArea.scrollTop = this._settingsArea.scrollHeight;\r\n            this._doc.addedEnvelope = false;\r\n        }\r\n    }\r\n\r\n    private _renderInstrumentBar(channel: Channel, instrumentIndex: number, colors: ChannelColors) {\r\n        if (this._doc.song.layeredInstruments || this._doc.song.patternInstruments) {\r\n            this._instrumentsButtonRow.style.display = \"\";\r\n            this._instrumentsButtonBar.style.setProperty(\"--text-color-lit\", colors.primaryNote);\r\n            this._instrumentsButtonBar.style.setProperty(\"--text-color-dim\", colors.secondaryNote);\r\n            this._instrumentsButtonBar.style.setProperty(\"--background-color-lit\", colors.primaryChannel);\r\n            this._instrumentsButtonBar.style.setProperty(\"--background-color-dim\", colors.secondaryChannel);\r\n\r\n            const maxInstrumentsPerChannel = this._doc.song.getMaxInstrumentsPerChannel();\r\n            while (this._instrumentButtons.length < channel.instruments.length) {\r\n                const instrumentButton: HTMLButtonElement = button(String(this._instrumentButtons.length + 1));\r\n                this._instrumentButtons.push(instrumentButton);\r\n                this._instrumentsButtonBar.insertBefore(instrumentButton, this._instrumentRemoveButton);\r\n            }\r\n            for (let i: number = this._renderedInstrumentCount; i < channel.instruments.length; i++) {\r\n                this._instrumentButtons[i].style.display = \"\";\r\n            }\r\n            for (let i: number = channel.instruments.length; i < this._renderedInstrumentCount; i++) {\r\n                this._instrumentButtons[i].style.display = \"none\";\r\n            }\r\n            this._renderedInstrumentCount = channel.instruments.length;\r\n            while (this._instrumentButtons.length > maxInstrumentsPerChannel) {\r\n                this._instrumentsButtonBar.removeChild(this._instrumentButtons.pop()!);\r\n            }\r\n\r\n            this._instrumentRemoveButton.style.display = (channel.instruments.length > Config.instrumentCountMin) ? \"\" : \"none\";\r\n            this._instrumentAddButton.style.display = (channel.instruments.length < maxInstrumentsPerChannel) ? \"\" : \"none\";\r\n            if (channel.instruments.length < maxInstrumentsPerChannel) {\r\n                this._instrumentRemoveButton.classList.remove(\"last-button\");\r\n            } else {\r\n                this._instrumentRemoveButton.classList.add(\"last-button\");\r\n            }\r\n            if (channel.instruments.length > 1) {\r\n                if (this._highlightedInstrumentIndex != instrumentIndex) {\r\n                    const oldButton: HTMLButtonElement = this._instrumentButtons[this._highlightedInstrumentIndex];\r\n                    if (oldButton != null) oldButton.classList.remove(\"selected-instrument\");\r\n                    const newButton: HTMLButtonElement = this._instrumentButtons[instrumentIndex];\r\n                    newButton.classList.add(\"selected-instrument\");\r\n                    this._highlightedInstrumentIndex = instrumentIndex;\r\n                }\r\n            } else {\r\n                const oldButton: HTMLButtonElement = this._instrumentButtons[this._highlightedInstrumentIndex];\r\n                if (oldButton != null) oldButton.classList.remove(\"selected-instrument\");\r\n                this._highlightedInstrumentIndex = -1;\r\n            }\r\n\r\n            if (this._doc.song.layeredInstruments && this._doc.song.patternInstruments && (this._doc.channel < this._doc.song.pitchChannelCount + this._doc.song.noiseChannelCount)) {\r\n                //const pattern: Pattern | null = this._doc.getCurrentPattern();\r\n                for (let i: number = 0; i < channel.instruments.length; i++) {\r\n                    if (this._doc.recentPatternInstruments[this._doc.channel].indexOf(i) != -1) {\r\n                        this._instrumentButtons[i].classList.remove(\"deactivated\");\r\n                    } else {\r\n                        this._instrumentButtons[i].classList.add(\"deactivated\");\r\n                    }\r\n                }\r\n                this._deactivatedInstruments = true;\r\n            } else if (this._deactivatedInstruments || (this._doc.channel >= this._doc.song.pitchChannelCount + this._doc.song.noiseChannelCount)) {\r\n                for (let i: number = 0; i < channel.instruments.length; i++) {\r\n\r\n                    this._instrumentButtons[i].classList.remove(\"deactivated\");\r\n                }\r\n                this._deactivatedInstruments = false;\r\n            }\r\n\r\n            if ((this._doc.song.layeredInstruments && this._doc.song.patternInstruments) && channel.instruments.length > 1 && (this._doc.channel < this._doc.song.pitchChannelCount + this._doc.song.noiseChannelCount)) {\r\n                for (let i: number = 0; i < channel.instruments.length; i++) {\r\n                    this._instrumentButtons[i].classList.remove(\"no-underline\");\r\n                }\r\n            }\r\n            else {\r\n                for (let i: number = 0; i < channel.instruments.length; i++) {\r\n                    this._instrumentButtons[i].classList.add(\"no-underline\");\r\n                }\r\n            }\r\n        } else {\r\n            this._instrumentsButtonRow.style.display = \"none\";\r\n        }\r\n    }\r\n\r\n    public updatePlayButton = (): void => {\r\n        if (this._renderedIsPlaying != this._doc.synth.playing || this._renderedIsRecording != this._doc.synth.recording || this._renderedShowRecordButton != this._doc.prefs.showRecordButton || this._renderedCtrlHeld != this._ctrlHeld) {\r\n            this._renderedIsPlaying = this._doc.synth.playing;\r\n            this._renderedIsRecording = this._doc.synth.recording;\r\n            this._renderedShowRecordButton = this._doc.prefs.showRecordButton;\r\n            this._renderedCtrlHeld = this._ctrlHeld;\r\n\r\n            if (document.activeElement == this._playButton || document.activeElement == this._pauseButton || document.activeElement == this._recordButton || document.activeElement == this._stopButton) {\r\n                // When a focused element is hidden, focus is transferred to the document, so let's refocus the editor instead to make sure we can still capture keyboard input.\r\n                this.refocusStage();\r\n            }\r\n\r\n            this._playButton.style.display = \"none\";\r\n            this._pauseButton.style.display = \"none\";\r\n            this._recordButton.style.display = \"none\";\r\n            this._stopButton.style.display = \"none\";\r\n            this._prevBarButton.style.display = \"\";\r\n            this._nextBarButton.style.display = \"\";\r\n            this._playButton.classList.remove(\"shrunk\");\r\n            this._recordButton.classList.remove(\"shrunk\");\r\n            this._patternEditorRow.style.pointerEvents = \"\";\r\n            this._octaveScrollBar.container.style.pointerEvents = \"\";\r\n            this._octaveScrollBar.container.style.opacity = \"\";\r\n            this._trackContainer.style.pointerEvents = \"\";\r\n            this._loopEditor.container.style.opacity = \"\";\r\n            this._instrumentSettingsArea.style.pointerEvents = \"\";\r\n            this._instrumentSettingsArea.style.opacity = \"\";\r\n            this._menuArea.style.pointerEvents = \"\";\r\n            this._menuArea.style.opacity = \"\";\r\n            this._songSettingsArea.style.pointerEvents = \"\";\r\n            this._songSettingsArea.style.opacity = \"\";\r\n\r\n            if (this._doc.synth.recording) {\r\n                this._stopButton.style.display = \"\";\r\n                this._prevBarButton.style.display = \"none\";\r\n                this._nextBarButton.style.display = \"none\";\r\n                this._patternEditorRow.style.pointerEvents = \"none\";\r\n                this._octaveScrollBar.container.style.pointerEvents = \"none\";\r\n                this._octaveScrollBar.container.style.opacity = \"0.5\";\r\n                this._trackContainer.style.pointerEvents = \"none\";\r\n                this._loopEditor.container.style.opacity = \"0.5\";\r\n                this._instrumentSettingsArea.style.pointerEvents = \"none\";\r\n                this._instrumentSettingsArea.style.opacity = \"0.5\";\r\n                this._menuArea.style.pointerEvents = \"none\";\r\n                this._menuArea.style.opacity = \"0.5\";\r\n                this._songSettingsArea.style.pointerEvents = \"none\";\r\n                this._songSettingsArea.style.opacity = \"0.5\";\r\n            } else if (this._doc.synth.playing) {\r\n                this._pauseButton.style.display = \"\";\r\n            } else if (this._doc.prefs.showRecordButton) {\r\n                this._playButton.style.display = \"\";\r\n                this._recordButton.style.display = \"\";\r\n                this._playButton.classList.add(\"shrunk\");\r\n                this._recordButton.classList.add(\"shrunk\");\r\n            } else if (this._ctrlHeld) {\r\n                this._recordButton.style.display = \"\";\r\n            } else {\r\n                this._playButton.style.display = \"\";\r\n            }\r\n        }\r\n        window.requestAnimationFrame(this.updatePlayButton);\r\n    }\r\n\r\n    private _disableCtrlContextMenu = (event: MouseEvent): boolean => {\r\n        // On a Mac, clicking while holding control opens the right-click context menu.\r\n        // But in the pattern and track editors I'd rather prevent that and instead allow\r\n        // custom behaviors such as setting the volume of a note.\r\n        if (event.ctrlKey) {\r\n            event.preventDefault();\r\n            return false;\r\n        }\r\n        return true;\r\n    }\r\n\r\n    private _usageCheck(channelIndex: number, instrumentIndex: number): void {\r\n        var instrumentUsed = false;\r\n        var patternUsed = false;\r\n        var modUsed = false;\r\n        const channel: Channel = this._doc.song.channels[channelIndex];\r\n\r\n        if (channelIndex < this._doc.song.pitchChannelCount + this._doc.song.noiseChannelCount) {\r\n            for (let modChannelIdx: number = this._doc.song.pitchChannelCount + this._doc.song.noiseChannelCount; modChannelIdx < this._doc.song.channels.length; modChannelIdx++) {\r\n                const modChannel: Channel = this._doc.song.channels[modChannelIdx];\r\n                const patternIdx = modChannel.bars[this._doc.bar];\r\n                if (patternIdx > 0) {\r\n                    const modInstrumentIdx: number = modChannel.patterns[patternIdx - 1].instruments[0];\r\n                    const modInstrument: Instrument = modChannel.instruments[modInstrumentIdx];\r\n                    for (let mod: number = 0; mod < Config.modCount; mod++) {\r\n                        if (modInstrument.modChannels[mod] == channelIndex && (modInstrument.modInstruments[mod] == instrumentIndex || modInstrument.modInstruments[mod] >= channel.instruments.length)) {\r\n                            modUsed = true;\r\n                        }\r\n                    }\r\n                }\r\n            }\r\n        }\r\n\r\n        if (channel.bars[this._doc.bar] != 0) {\r\n\r\n            let lowestSelX: number = Math.min(this._doc.selection.boxSelectionX0, this._doc.selection.boxSelectionX1);\r\n            let highestSelX: number = Math.max(this._doc.selection.boxSelectionX0, this._doc.selection.boxSelectionX1);\r\n            let lowestSelY: number = Math.min(this._doc.selection.boxSelectionY0, this._doc.selection.boxSelectionY1);\r\n            let highestSelY: number = Math.max(this._doc.selection.boxSelectionY0, this._doc.selection.boxSelectionY1);\r\n\r\n            for (let i: number = 0; i < this._doc.song.barCount; i++) {\r\n                // Check for this exact bar in another place, but only count it if it's not within the selection\r\n                if (channel.bars[i] == channel.bars[this._doc.bar] && i != this._doc.bar &&\r\n                    (i < lowestSelX || i > highestSelX || this._doc.channel < lowestSelY || this._doc.channel > highestSelY)) {\r\n\r\n                    patternUsed = true;\r\n                    i = this._doc.song.barCount;\r\n                }\r\n            }\r\n\r\n            for (let i: number = 0; i < this._doc.song.barCount; i++) {\r\n                // Check for this exact instrument in another place, but only count it if it's not within the selection\r\n                if (channel.bars[i] != 0 && channel.bars[i] != channel.bars[this._doc.bar] &&\r\n                    channel.patterns[channel.bars[i] - 1].instruments.includes(instrumentIndex) && i != this._doc.bar &&\r\n                    (i < lowestSelX || i > highestSelX || this._doc.channel < lowestSelY || this._doc.channel > highestSelY)) {\r\n\r\n                    instrumentUsed = true;\r\n                    i = this._doc.song.barCount;\r\n                }\r\n            }\r\n\r\n        }\r\n\r\n        if (patternUsed) {\r\n            this._usedPatternIndicator.style.setProperty(\"fill\", ColorConfig.indicatorPrimary);\r\n        }\r\n        else {\r\n            this._usedPatternIndicator.style.setProperty(\"fill\", ColorConfig.indicatorSecondary);\r\n        }\r\n        if (instrumentUsed) {\r\n            this._usedInstrumentIndicator.style.setProperty(\"fill\", ColorConfig.indicatorPrimary);\r\n        }\r\n        else {\r\n            this._usedInstrumentIndicator.style.setProperty(\"fill\", ColorConfig.indicatorSecondary);\r\n        }\r\n        if (modUsed) {\r\n            this._jumpToModIndicator.style.setProperty(\"display\", \"\");\r\n            this._jumpToModIndicator.style.setProperty(\"fill\", ColorConfig.indicatorPrimary);\r\n            this._jumpToModIndicator.classList.add(\"modTarget\");\r\n        }\r\n        else if (channelIndex < this._doc.song.pitchChannelCount + this._doc.song.noiseChannelCount) {\r\n            this._jumpToModIndicator.style.setProperty(\"display\", \"\");\r\n            this._jumpToModIndicator.style.setProperty(\"fill\", ColorConfig.indicatorSecondary);\r\n            this._jumpToModIndicator.classList.remove(\"modTarget\");\r\n        } else {\r\n            this._jumpToModIndicator.style.setProperty(\"display\", \"none\");\r\n        }\r\n\r\n    }\r\n\r\n    private _tempoStepperCaptureNumberKeys = (event: KeyboardEvent): void => {\r\n        // When the number input is in focus, allow some keyboard events to\r\n        // edit the input without accidentally editing the song otherwise.\r\n        switch (event.keyCode) {\r\n            case 8: // backspace/delete\r\n            case 13: // enter/return\r\n            case 38: // up\r\n            case 40: // down\r\n            case 37: // left\r\n            case 39: // right\r\n            case 48: // 0\r\n            case 49: // 1\r\n            case 50: // 2\r\n            case 51: // 3\r\n            case 52: // 4\r\n            case 53: // 5\r\n            case 54: // 6\r\n            case 55: // 7\r\n            case 56: // 8\r\n            case 57: // 9\r\n                event.stopPropagation();\r\n                break;\r\n        }\r\n    }\r\n\r\n    private _whenKeyPressed = (event: KeyboardEvent): void => {\r\n        this._ctrlHeld = event.ctrlKey;\r\n\r\n        if (this.prompt) {\r\n            if (this.prompt instanceof CustomChipPrompt || this.prompt instanceof LimiterPrompt || this.prompt instanceof CustomScalePrompt || this.prompt instanceof CustomFilterPrompt) {\r\n                this.prompt.whenKeyPressed(event);\r\n            }\r\n            if (event.keyCode == 27) { // ESC key\r\n                // close prompt.\r\n                this._doc.undo();\r\n            }\r\n            return;\r\n        }\r\n\r\n        // Defer to actively editing song title, channel name, or mod label\r\n        if (document.activeElement == this._songTitleInputBox.input || this._patternEditor.editingModLabel || document.activeElement == this._muteEditor._channelNameInput.input) {\r\n            // Enter/esc returns focus to form\r\n            if (event.keyCode == 13 || event.keyCode == 27) {\r\n                this.mainLayer.focus();\r\n                this._patternEditor.stopEditingModLabel(event.keyCode == 27);\r\n            }\r\n\r\n            return;\r\n        }\r\n\r\n        // Defer to actively editing volume/pan rows\r\n        if (\r\n                   document.activeElement == this._panSliderInputBox\r\n                    || document.activeElement == this._detuneSliderInputBox\r\n                    || document.activeElement == this._instrumentVolumeSliderInputBox\r\n                    // advloop addition\r\n                    || document.activeElement == this._chipWaveLoopStartStepper\r\n                    || document.activeElement == this._chipWaveLoopEndStepper\r\n                    || document.activeElement == this._chipWaveStartOffsetStepper\r\n                    // advloop addition\r\n                    || document.activeElement == this._octaveStepper\r\n                ) {\r\n            // Enter/esc returns focus to form\r\n            if (event.keyCode == 13 || event.keyCode == 27) {\r\n                this.mainLayer.focus();\r\n            }\r\n\r\n            return;\r\n        }\r\n\r\n        if (this._doc.synth.recording) {\r\n            // The only valid keyboard interactions when recording are playing notes or pressing space OR P to stop.\r\n            if (!event.ctrlKey && !event.metaKey) {\r\n                this._keyboardLayout.handleKeyEvent(event, true);\r\n            }\r\n            if (event.keyCode == 32) { // space\r\n                this._toggleRecord();\r\n                event.preventDefault();\r\n                this.refocusStage();\r\n            } else if (event.keyCode == 80 && (event.ctrlKey || event.metaKey)) { // p\r\n                this._toggleRecord();\r\n                event.preventDefault();\r\n                this.refocusStage();\r\n            }\r\n            return;\r\n        }\r\n\r\n        const needControlForShortcuts: boolean = (this._doc.prefs.pressControlForShortcuts != event.getModifierState(\"CapsLock\"));\r\n        const canPlayNotes: boolean = (!event.ctrlKey && !event.metaKey && needControlForShortcuts);\r\n        if (canPlayNotes) this._keyboardLayout.handleKeyEvent(event, true);\r\n\r\n        //this._trackEditor.onKeyPressed(event);\r\n        switch (event.keyCode) {\r\n            case 27: // ESC key\r\n                if (!event.ctrlKey && !event.metaKey) {\r\n                    new ChangePatternSelection(this._doc, 0, 0);\r\n                    this._doc.selection.resetBoxSelection();\r\n                }\r\n                break;\r\n            case 16: // Shift\r\n                this._patternEditor.shiftMode = true;\r\n                break;\r\n            case 17: // Ctrl\r\n                this._patternEditor.controlMode = true;\r\n                break;\r\n            case 32: // space\r\n                if (event.ctrlKey) {\r\n                    this._toggleRecord();\r\n                } else if (event.shiftKey) {\r\n                    // Jump to mouse\r\n                    if (this._trackEditor.movePlayheadToMouse() || this._patternEditor.movePlayheadToMouse()) {\r\n                        if (!this._doc.synth.playing) this._doc.performance.play();\r\n                    }\r\n                } else {\r\n                    this.togglePlay();\r\n                }\r\n                event.preventDefault();\r\n                this.refocusStage();\r\n                break;\r\n            case 80: // p\r\n                if (canPlayNotes) break;\r\n                if (event.ctrlKey || event.metaKey) {\r\n                    this._toggleRecord();\r\n                    event.preventDefault();\r\n                    this.refocusStage();\r\n                }\r\n                break;\r\n            case 90: // z\r\n                if (canPlayNotes) break;\r\n                if (event.shiftKey) {\r\n                    this._doc.redo();\r\n                } else {\r\n                    this._doc.undo();\r\n                }\r\n                event.preventDefault();\r\n                break;\r\n            case 89: // y\r\n                if (canPlayNotes) break;\r\n                this._doc.redo();\r\n                event.preventDefault();\r\n                break;\r\n            case 67: // c\r\n                if (canPlayNotes) break;\r\n                if (event.shiftKey) {\r\n                    this._copyInstrument();\r\n                } else {\r\n                    this._doc.selection.copy();\r\n                }\r\n                this._doc.selection.resetBoxSelection();\r\n                this._doc.selection.selectionUpdated();\r\n                event.preventDefault();\r\n                break;\r\n            case 13: // enter/return\r\n                if (event.ctrlKey || event.metaKey) {\r\n                    this._doc.selection.insertChannel();\r\n                } else {\r\n                    this._doc.selection.insertBars();\r\n                }\r\n                event.preventDefault();\r\n                break;\r\n            case 8: // backspace/delete\r\n                if (event.ctrlKey || event.metaKey) {\r\n                    this._doc.selection.deleteChannel();\r\n                } else {\r\n                    this._doc.selection.deleteBars();\r\n                }\r\n                this._barScrollBar.animatePlayhead();\r\n                event.preventDefault();\r\n                break;\r\n            case 65: // a\r\n                if (canPlayNotes) break;\r\n                if (event.shiftKey) {\r\n                    this._doc.selection.selectChannel();\r\n                } else {\r\n                    this._doc.selection.selectAll();\r\n                }\r\n                event.preventDefault();\r\n                break;\r\n            case 68: // d\r\n                if (canPlayNotes) break;\r\n                if (needControlForShortcuts == (event.ctrlKey || event.metaKey)) {\r\n                    this._doc.selection.duplicatePatterns();\r\n                    event.preventDefault();\r\n                }\r\n                break;\r\n            case 69: // e (+shift: eq filter settings)\r\n                if (event.shiftKey) {\r\n                    const instrument: Instrument = this._doc.song.channels[this._doc.channel].instruments[this._doc.getCurrentInstrument()];\r\n                    if (!instrument.eqFilterType && this._doc.channel < this._doc.song.pitchChannelCount + this._doc.song.noiseChannelCount)\r\n                        this._openPrompt(\"customEQFilterSettings\");\r\n                }\r\n\t\t\telse if (needControlForShortcuts == (event.ctrlKey || event.metaKey)) {\r\n\t\t\t\tthis._openPrompt(\"generateEuclideanRhythm\");\r\n\t\t\t\tbreak;\r\n\t\t\t\t//EUCLEDIAN RHYTHM SHORTCUT (E)\r\n\t\t\t}\r\n                break;\r\n            case 70: // f\r\n                if (canPlayNotes) break;\r\n                if (needControlForShortcuts == (event.ctrlKey || event.metaKey)) {\r\n                    this._doc.synth.snapToStart();\r\n                    this._doc.synth.computeLatestModValues();\r\n                    if (this._doc.prefs.autoFollow) {\r\n                        this._doc.selection.setChannelBar(this._doc.channel, Math.floor(this._doc.synth.playhead));\r\n                    }\r\n                    event.preventDefault();\r\n                }\r\n                break;\r\n            case 72: // h\r\n                if (canPlayNotes) break;\r\n                if (needControlForShortcuts == (event.ctrlKey || event.metaKey)) {\r\n                    this._doc.synth.goToBar(this._doc.bar);\r\n                    this._doc.synth.snapToBar();\r\n                    this._doc.synth.computeLatestModValues();\r\n                    if (this._doc.prefs.autoFollow) {\r\n                        this._doc.selection.setChannelBar(this._doc.channel, Math.floor(this._doc.synth.playhead));\r\n                    }\r\n                    event.preventDefault();\r\n                }\r\n                break;\r\n            case 74: // j\r\n                if (canPlayNotes) break;\r\n                // Ctrl Alt Shift J: Jummbify - set all prefs to my preferred ones lol\r\n                if (event.shiftKey && event.ctrlKey && event.altKey) {\r\n                    this._doc.prefs.autoPlay = false;\r\n                    this._doc.prefs.autoFollow = false;\r\n                    this._doc.prefs.enableNotePreview = true;\r\n                    this._doc.prefs.showFifth = true;\r\n                    this._doc.prefs.notesOutsideScale = false;\r\n                    this._doc.prefs.defaultScale = 0;\r\n                    this._doc.prefs.showLetters = true;\r\n                    this._doc.prefs.showChannels = true;\r\n                    this._doc.prefs.showScrollBar = true;\r\n                    this._doc.prefs.alwaysFineNoteVol = false;\r\n                    this._doc.prefs.enableChannelMuting = true;\r\n                    this._doc.prefs.displayBrowserUrl = true;\r\n                    this._doc.prefs.displayVolumeBar = true;\r\n                    this._doc.prefs.layout = \"wide\";\r\n                    this._doc.prefs.visibleOctaves = 5;\r\n                    this._doc.prefs.save();\r\n                    event.preventDefault();\r\n                    location.reload();\r\n                }\r\n                break;\r\n            case 76: // l\r\n                if (canPlayNotes) break;\r\n                if (event.shiftKey) {\r\n                    this._openPrompt(\"limiterSettings\");\r\n                }\r\n                else {\r\n                    this._openPrompt(\"barCount\");\r\n                }\r\n                break;\r\n            case 77: // m\r\n                if (canPlayNotes) break;\r\n                if (needControlForShortcuts == (event.ctrlKey || event.metaKey)) {\r\n                    if (this._doc.prefs.enableChannelMuting) {\r\n                        this._doc.selection.muteChannels(event.shiftKey);\r\n                        event.preventDefault();\r\n                    }\r\n                }\r\n                break;\r\n            case 78: // n\r\n                if (canPlayNotes) break;\r\n                // Find lowest-index unused pattern for current channel\r\n                // Ctrl+n - lowest-index completely empty pattern\r\n                // Shift+n - note filter settings\r\n\r\n                const group: ChangeGroup = new ChangeGroup();\r\n\r\n                if (event.shiftKey) {\r\n                    const instrument: Instrument = this._doc.song.channels[this._doc.channel].instruments[this._doc.getCurrentInstrument()];\r\n                    if (effectsIncludeNoteFilter(instrument.effects) && !instrument.noteFilterType && this._doc.channel < this._doc.song.pitchChannelCount + this._doc.song.noiseChannelCount)\r\n                        this._openPrompt(\"customNoteFilterSettings\");\r\n                    break;\r\n                }\r\n                else if (event.ctrlKey) {\r\n                    let nextEmpty: number = 0;\r\n                    while (nextEmpty < this._doc.song.patternsPerChannel && this._doc.song.channels[this._doc.channel].patterns[nextEmpty].notes.length > 0)\r\n                        nextEmpty++;\r\n\r\n                    nextEmpty++; // The next empty pattern is actually the one after the found one\r\n\r\n                    // Can't set anything if we're at the absolute limit.\r\n                    if (nextEmpty <= Config.barCountMax) {\r\n\r\n                        if (nextEmpty > this._doc.song.patternsPerChannel) {\r\n\r\n                            // Add extra empty pattern, if all the rest have something in them.\r\n                            group.append(new ChangePatternsPerChannel(this._doc, nextEmpty));\r\n                        }\r\n\r\n                        // Change pattern number to lowest-index unused\r\n                        group.append(new ChangePatternNumbers(this._doc, nextEmpty, this._doc.bar, this._doc.channel, 1, 1));\r\n\r\n\r\n                    }\r\n                }\r\n                else {\r\n                    let nextUnused: number = 1;\r\n                    while (this._doc.song.channels[this._doc.channel].bars.indexOf(nextUnused) != -1\r\n                        && nextUnused <= this._doc.song.patternsPerChannel)\r\n                        nextUnused++;\r\n\r\n                    // Can't set anything if we're at the absolute limit.\r\n                    if (nextUnused <= Config.barCountMax) {\r\n\r\n                        if (nextUnused > this._doc.song.patternsPerChannel) {\r\n\r\n                            // Add extra empty pattern, if all the rest are used.\r\n                            group.append(new ChangePatternsPerChannel(this._doc, nextUnused));\r\n                        }\r\n\r\n                        // Change pattern number to lowest-index unused\r\n                        group.append(new ChangePatternNumbers(this._doc, nextUnused, this._doc.bar, this._doc.channel, 1, 1));\r\n\r\n                    }\r\n                }\r\n\r\n                this._doc.record(group);\r\n\r\n                event.preventDefault();\r\n                break;\r\n            case 81: // q\r\n                if (canPlayNotes) break;\r\n                if (needControlForShortcuts == (event.ctrlKey || event.metaKey)) {\r\n\t\t\tif (event.shiftKey) {\r\n\t\t\t\tthis._openPrompt(\"addExternal\");\r\n\t\t\t\tevent.preventDefault();\r\n\t\t\t\tbreak;\r\n\t\t\t}\r\n\t\t\telse {\r\n\t\t\t\tthis._openPrompt(\"channelSettings\");\r\n\t\t\t\tevent.preventDefault();\r\n\t\t\t\tbreak;\r\n\t\t\t}\r\n                }\r\n                break;\r\n            case 83: // s\r\n                if (canPlayNotes) break;\r\n                if (event.ctrlKey || event.metaKey) {\r\n                    this._openPrompt(\"export\");\r\n                    event.preventDefault();\r\n                } else {\r\n                    if (this._doc.prefs.enableChannelMuting) {\r\n                        // JummBox deviation: I like shift+s as just another mute toggle personally.\r\n                        // Easier to reach than M and the shift+s invert functionality I am overwriting could be \r\n                        // obtained with M anyway. Useability-wise you very often want to 'add' channels on to a solo as you work.\r\n                        if (event.shiftKey) {\r\n                            this._doc.selection.muteChannels(false);\r\n                        } else {\r\n                            this._doc.selection.soloChannels(false);\r\n                        }\r\n                        event.preventDefault();\r\n                    }\r\n                }\r\n                break;\r\n            case 79: // o\r\n                if (canPlayNotes) break;\r\n                if (event.ctrlKey || event.metaKey) {\r\n                    this._openPrompt(\"import\");\r\n                    event.preventDefault();\r\n                }\r\n                break;\r\n            case 86: // v\r\n                if (canPlayNotes) break;\r\n                if ((event.ctrlKey || event.metaKey) && event.shiftKey && !needControlForShortcuts) {\r\n                    this._doc.selection.pasteNumbers();\r\n                } else if (event.shiftKey) {\r\n                    this._pasteInstrument();\r\n                } else {\r\n                    this._doc.selection.pasteNotes();\r\n                }\r\n                event.preventDefault();\r\n                break;\r\n            case 87: // w\r\n                if (canPlayNotes) break;\r\n                this._openPrompt(\"moveNotesSideways\");\r\n                break;\r\n            case 73: // i\r\n                if (canPlayNotes) break;\r\n                if (needControlForShortcuts == (event.ctrlKey || event.metaKey) && event.shiftKey) {\r\n                    // Copy the current instrument as a preset to the clipboard.\r\n                    const instrument: Instrument = this._doc.song.channels[this._doc.channel].instruments[this._doc.getCurrentInstrument()];\r\n                    const instrumentObject: any = instrument.toJsonObject();\r\n                    delete instrumentObject[\"preset\"];\r\n                    // Volume and the panning effect are not included in presets.\r\n                    delete instrumentObject[\"volume\"];\r\n                    delete instrumentObject[\"pan\"];\r\n                    const panningEffectIndex: number = instrumentObject[\"effects\"].indexOf(Config.effectNames[EffectType.panning]);\r\n                    if (panningEffectIndex != -1) instrumentObject[\"effects\"].splice(panningEffectIndex, 1);\r\n                    for (let i: number = 0; i < instrumentObject[\"envelopes\"].length; i++) {\r\n                        const envelope: any = instrumentObject[\"envelopes\"][i];\r\n                        // If there are any envelopes targeting panning or none, remove those too.\r\n                        if (envelope[\"target\"] == \"panning\" || envelope[\"target\"] == \"none\" || envelope[\"envelope\"] == \"none\") {\r\n                            instrumentObject[\"envelopes\"].splice(i, 1);\r\n                            i--;\r\n                        }\r\n                    }\r\n                    this._copyTextToClipboard(JSON.stringify(instrumentObject));\r\n                    event.preventDefault();\r\n                }\r\n                break;\r\n            case 82: // r\r\n                if (canPlayNotes) break;\r\n                if (needControlForShortcuts == (event.ctrlKey || event.metaKey)) {\r\n                    if (event.shiftKey) {\r\n                        this._randomGenerated();\r\n                    } else {\r\n                        this._randomPreset();\r\n                    }\r\n                    event.preventDefault();\r\n                }\r\n                break;\r\n            case 219: // left brace\r\n                if (canPlayNotes) break;\r\n                if (needControlForShortcuts == (event.ctrlKey || event.metaKey)) {\r\n                    this._doc.synth.goToPrevBar();\r\n                    if (this._doc.prefs.autoFollow) {\r\n                        this._doc.selection.setChannelBar(this._doc.channel, Math.floor(this._doc.synth.playhead));\r\n                    }\r\n                    event.preventDefault();\r\n                }\r\n                break;\r\n            case 221: // right brace\r\n                if (canPlayNotes) break;\r\n                if (needControlForShortcuts == (event.ctrlKey || event.metaKey)) {\r\n                    this._doc.synth.goToNextBar();\r\n                    if (this._doc.prefs.autoFollow) {\r\n                        this._doc.selection.setChannelBar(this._doc.channel, Math.floor(this._doc.synth.playhead));\r\n                    }\r\n                    event.preventDefault();\r\n                }\r\n                break;\r\n            case 189: // -\r\n            case 173: // Firefox -\r\n                if (canPlayNotes) break;\r\n                if (needControlForShortcuts == (event.ctrlKey || event.metaKey)) {\r\n                    this._doc.selection.transpose(false, event.shiftKey);\r\n                    event.preventDefault();\r\n                }\r\n                break;\r\n            case 187: // +\r\n            case 61: // Firefox +\r\n            case 171: // Some users have this as +? Hmm.\r\n                if (canPlayNotes) break;\r\n                if (needControlForShortcuts == (event.ctrlKey || event.metaKey)) {\r\n                    this._doc.selection.transpose(true, event.shiftKey);\r\n                    event.preventDefault();\r\n                }\r\n                break;\r\n            case 38: // up\r\n                if (event.ctrlKey || event.metaKey) {\r\n                    this._doc.selection.swapChannels(-1);\r\n                } else if (event.shiftKey) {\r\n                    this._doc.selection.boxSelectionY1 = Math.max(0, this._doc.selection.boxSelectionY1 - 1);\r\n                    this._doc.selection.scrollToEndOfSelection();\r\n                    this._doc.selection.selectionUpdated();\r\n                } else {\r\n                    this._doc.selection.setChannelBar((this._doc.channel - 1 + this._doc.song.getChannelCount()) % this._doc.song.getChannelCount(), this._doc.bar);\r\n                    this._doc.selection.resetBoxSelection();\r\n                }\r\n                event.preventDefault();\r\n                break;\r\n            case 40: // down\r\n                if (event.ctrlKey || event.metaKey) {\r\n                    this._doc.selection.swapChannels(1);\r\n                } else if (event.shiftKey) {\r\n                    this._doc.selection.boxSelectionY1 = Math.min(this._doc.song.getChannelCount() - 1, this._doc.selection.boxSelectionY1 + 1);\r\n                    this._doc.selection.scrollToEndOfSelection();\r\n                    this._doc.selection.selectionUpdated();\r\n                } else {\r\n                    this._doc.selection.setChannelBar((this._doc.channel + 1) % this._doc.song.getChannelCount(), this._doc.bar);\r\n                    this._doc.selection.resetBoxSelection();\r\n                }\r\n                event.preventDefault();\r\n                break;\r\n            case 37: // left\r\n                if (event.shiftKey) {\r\n                    this._doc.selection.boxSelectionX1 = Math.max(0, this._doc.selection.boxSelectionX1 - 1);\r\n                    this._doc.selection.scrollToEndOfSelection();\r\n                    this._doc.selection.selectionUpdated();\r\n                } else {\r\n                    this._doc.selection.setChannelBar(this._doc.channel, (this._doc.bar + this._doc.song.barCount - 1) % this._doc.song.barCount);\r\n                    this._doc.selection.resetBoxSelection();\r\n                }\r\n                event.preventDefault();\r\n                break;\r\n            case 39: // right\r\n                if (event.shiftKey) {\r\n                    this._doc.selection.boxSelectionX1 = Math.min(this._doc.song.barCount - 1, this._doc.selection.boxSelectionX1 + 1);\r\n                    this._doc.selection.scrollToEndOfSelection();\r\n                    this._doc.selection.selectionUpdated();\r\n                } else {\r\n                    this._doc.selection.setChannelBar(this._doc.channel, (this._doc.bar + 1) % this._doc.song.barCount);\r\n                    this._doc.selection.resetBoxSelection();\r\n                }\r\n                event.preventDefault();\r\n                break;\r\n            case 46: // Delete\r\n                this._doc.selection.digits = \"\";\r\n                this._doc.selection.nextDigit(\"0\", false, false);\r\n                break;\r\n            case 48: // 0\r\n                if (canPlayNotes) break;\r\n                this._doc.selection.nextDigit(\"0\", needControlForShortcuts != (event.shiftKey || event.ctrlKey || event.metaKey), event.altKey);\r\n                this._renderInstrumentBar(this._doc.song.channels[this._doc.channel], this._doc.getCurrentInstrument(), ColorConfig.getChannelColor(this._doc.song, this._doc.channel));\r\n\t\t\tevent.preventDefault();\r\n                break;\r\n            case 49: // 1\r\n                if (canPlayNotes) break;\r\n                this._doc.selection.nextDigit(\"1\", needControlForShortcuts != (event.shiftKey || event.ctrlKey || event.metaKey), event.altKey);\r\n                this._renderInstrumentBar(this._doc.song.channels[this._doc.channel], this._doc.getCurrentInstrument(), ColorConfig.getChannelColor(this._doc.song, this._doc.channel));\r\n\t\t\tevent.preventDefault();\r\n                break;\r\n            case 50: // 2\r\n                if (canPlayNotes) break;\r\n                this._doc.selection.nextDigit(\"2\", needControlForShortcuts != (event.shiftKey || event.ctrlKey || event.metaKey), event.altKey);\r\n                this._renderInstrumentBar(this._doc.song.channels[this._doc.channel], this._doc.getCurrentInstrument(), ColorConfig.getChannelColor(this._doc.song, this._doc.channel));\r\n\t\t\tevent.preventDefault();\r\n                break;\r\n            case 51: // 3\r\n                if (canPlayNotes) break;\r\n                this._doc.selection.nextDigit(\"3\", needControlForShortcuts != (event.shiftKey || event.ctrlKey || event.metaKey), event.altKey);\r\n               this._renderInstrumentBar(this._doc.song.channels[this._doc.channel], this._doc.getCurrentInstrument(), ColorConfig.getChannelColor(this._doc.song, this._doc.channel));\r\n\t\t\tevent.preventDefault();\r\n                break;\r\n            case 52: // 4\r\n                if (canPlayNotes) break;\r\n                this._doc.selection.nextDigit(\"4\", needControlForShortcuts != (event.shiftKey || event.ctrlKey || event.metaKey), event.altKey);\r\n                this._renderInstrumentBar(this._doc.song.channels[this._doc.channel], this._doc.getCurrentInstrument(), ColorConfig.getChannelColor(this._doc.song, this._doc.channel));\r\n\t\t\tevent.preventDefault();\r\n                break;\r\n            case 53: // 5\r\n                if (canPlayNotes) break;\r\n                this._doc.selection.nextDigit(\"5\", needControlForShortcuts != (event.shiftKey || event.ctrlKey || event.metaKey), event.altKey);\r\n               this._renderInstrumentBar(this._doc.song.channels[this._doc.channel], this._doc.getCurrentInstrument(), ColorConfig.getChannelColor(this._doc.song, this._doc.channel));\r\n\t\t\tevent.preventDefault();\r\n                break;\r\n            case 54: // 6\r\n                if (canPlayNotes) break;\r\n                this._doc.selection.nextDigit(\"6\", needControlForShortcuts != (event.shiftKey || event.ctrlKey || event.metaKey), event.altKey);\r\n               this._renderInstrumentBar(this._doc.song.channels[this._doc.channel], this._doc.getCurrentInstrument(), ColorConfig.getChannelColor(this._doc.song, this._doc.channel));\r\n\t\t\tevent.preventDefault();\r\n                break;\r\n            case 55: // 7\r\n                if (canPlayNotes) break;\r\n                this._doc.selection.nextDigit(\"7\", needControlForShortcuts != (event.shiftKey || event.ctrlKey || event.metaKey), event.altKey);\r\n               this._renderInstrumentBar(this._doc.song.channels[this._doc.channel], this._doc.getCurrentInstrument(), ColorConfig.getChannelColor(this._doc.song, this._doc.channel));\r\n\t\t\tevent.preventDefault();\r\n                break;\r\n            case 56: // 8\r\n                if (canPlayNotes) break;\r\n                this._doc.selection.nextDigit(\"8\", needControlForShortcuts != (event.shiftKey || event.ctrlKey || event.metaKey), event.altKey);\r\n                this._renderInstrumentBar(this._doc.song.channels[this._doc.channel], this._doc.getCurrentInstrument(), ColorConfig.getChannelColor(this._doc.song, this._doc.channel));\r\n\t\t\tevent.preventDefault();\r\n                break;\r\n            case 57: // 9\r\n                if (canPlayNotes) break;\r\n                this._doc.selection.nextDigit(\"9\", needControlForShortcuts != (event.shiftKey || event.ctrlKey || event.metaKey), event.altKey);\r\n                this._renderInstrumentBar(this._doc.song.channels[this._doc.channel], this._doc.getCurrentInstrument(), ColorConfig.getChannelColor(this._doc.song, this._doc.channel));\r\n\t\t\tevent.preventDefault();\r\n                break;\r\n\tcase 66: //b\r\n                if (canPlayNotes) break;\r\n                this._openPrompt(\"beatsPerBar\");\r\n                break;\r\n            default:\r\n                this._doc.selection.digits = \"\";\r\n                this._doc.selection.instrumentDigits = \"\";\r\n                break;\r\n        }\r\n\r\n        if (canPlayNotes) {\r\n            this._doc.selection.digits = \"\";\r\n            this._doc.selection.instrumentDigits = \"\";\r\n        }\r\n    }\r\n\r\n\r\n    private _whenKeyReleased = (event: KeyboardEvent): void => {\r\n        this._muteEditor.onKeyUp(event);\r\n        if (!event.ctrlKey) { // Ctrl\r\n            this._patternEditor.controlMode = false;\r\n        }\r\n        if (!event.shiftKey) { // Shift\r\n            this._patternEditor.shiftMode = false;\r\n        }\r\n\r\n        this._ctrlHeld = event.ctrlKey;\r\n        // Release live pitches regardless of control or caps lock so that any pitches played before will get released even if the modifier keys changed.\r\n        this._keyboardLayout.handleKeyEvent(event, false);\r\n    }\r\n\r\n    private _copyTextToClipboard(text: string): void {\r\n        // Set as any to allow compilation without clipboard types (since, uh, I didn't write this bit and don't know the proper types library) -jummbus\r\n        let nav: any;\r\n        nav = navigator;\r\n\r\n        if (nav.clipboard && nav.clipboard.writeText) {\r\n            nav.clipboard.writeText(text).catch(() => {\r\n                window.prompt(\"Copy to clipboard:\", text);\r\n            });\r\n            return;\r\n        }\r\n        const textField: HTMLTextAreaElement = document.createElement(\"textarea\");\r\n        textField.textContent = text;\r\n        document.body.appendChild(textField);\r\n        textField.select();\r\n        const succeeded: boolean = document.execCommand(\"copy\");\r\n        textField.remove();\r\n        this.refocusStage();\r\n        if (!succeeded) window.prompt(\"Copy this:\", text);\r\n    }\r\n\r\n    private _whenPrevBarPressed = (): void => {\r\n        this._doc.synth.goToPrevBar();\r\n        this._barScrollBar.animatePlayhead();\r\n    }\r\n\r\n    private _whenNextBarPressed = (): void => {\r\n        this._doc.synth.goToNextBar();\r\n        this._barScrollBar.animatePlayhead();\r\n    }\r\n\r\n    public togglePlay = (): void => {\r\n        if (this._doc.synth.playing) {\r\n            this._doc.performance.pause();\r\n            this.outVolumeHistoricCap = 0;\r\n        } else {\r\n            this._doc.synth.snapToBar();\r\n            this._doc.performance.play();\r\n        }\r\n    }\r\n\r\n    private _toggleRecord = (): void => {\r\n        if (this._doc.synth.playing) {\r\n            this._doc.performance.pause();\r\n        } else {\r\n            this._doc.performance.record();\r\n        }\r\n    }\r\n\r\n    public _animate = (): void => {\r\n        // Need to update mods once more to clear the slider display\r\n        this._modSliderUpdate();\r\n        // Same for volume display\r\n        if (this._doc.prefs.displayVolumeBar) {\r\n            this._volumeUpdate();\r\n        }\r\n        // ...and barscrollbar playhead\r\n        this._barScrollBar.animatePlayhead();\r\n        // ...and filters\r\n        if (this._doc.synth.isFilterModActive(false, this._doc.channel, this._doc.getCurrentInstrument())) {\r\n            this._eqFilterEditor.render(true);\r\n        }\r\n        if (this._doc.synth.isFilterModActive(true, this._doc.channel, this._doc.getCurrentInstrument())) {\r\n            this._noteFilterEditor.render(true);\r\n        }\r\n\r\n\r\n        window.requestAnimationFrame(this._animate);\r\n    }\r\n\r\n    public _volumeUpdate = (): void => {\r\n        this.outVolumeHistoricTimer--;\r\n        if (this.outVolumeHistoricTimer <= 0) {\r\n            this.outVolumeHistoricCap -= 0.03;\r\n        }\r\n        if (this._doc.song.outVolumeCap > this.outVolumeHistoricCap) {\r\n            this.outVolumeHistoricCap = this._doc.song.outVolumeCap;\r\n            this.outVolumeHistoricTimer = 50;\r\n        }\r\n\r\n        if (this._doc.song.outVolumeCap != this.lastOutVolumeCap) {\r\n            this.lastOutVolumeCap = this._doc.song.outVolumeCap;\r\n            this._animateVolume(this._doc.song.outVolumeCap, this.outVolumeHistoricCap);\r\n        }\r\n    }\r\n\r\n    private _animateVolume(outVolumeCap: number, historicOutCap: number): void {\r\n        this._outVolumeBar.setAttribute(\"width\", \"\" + Math.min(144, outVolumeCap * 144));\r\n        this._outVolumeCap.setAttribute(\"x\", \"\" + (8 + Math.min(144, historicOutCap * 144)));\r\n    }\r\n\r\n    private _setVolumeSlider = (): void => {\r\n        this._doc.setVolume(Number(this._volumeSlider.input.value));\r\n    }\r\n\r\n    private _copyInstrument = (): void => {\r\n        const channel: Channel = this._doc.song.channels[this._doc.channel];\r\n        const instrument: Instrument = channel.instruments[this._doc.getCurrentInstrument()];\r\n        const instrumentCopy: any = instrument.toJsonObject();\r\n        instrumentCopy[\"isDrum\"] = this._doc.song.getChannelIsNoise(this._doc.channel);\r\n        window.localStorage.setItem(\"instrumentCopy\", JSON.stringify(instrumentCopy));\r\n        this.refocusStage();\r\n    }\r\n\r\n    private _pasteInstrument = (): void => {\r\n        const channel: Channel = this._doc.song.channels[this._doc.channel];\r\n        const instrument: Instrument = channel.instruments[this._doc.getCurrentInstrument()];\r\n        const instrumentCopy: any = JSON.parse(String(window.localStorage.getItem(\"instrumentCopy\")));\r\n        if (instrumentCopy != null && instrumentCopy[\"isDrum\"] == this._doc.song.getChannelIsNoise(this._doc.channel)) {\r\n            this._doc.record(new ChangePasteInstrument(this._doc, instrument, instrumentCopy));\r\n        }\r\n        this.refocusStage();\r\n    }\r\n\r\n    private _switchEQFilterType(toSimple: boolean) {\r\n        const channel: Channel = this._doc.song.channels[this._doc.channel];\r\n        const instrument: Instrument = channel.instruments[this._doc.getCurrentInstrument()];\r\n        if (instrument.eqFilterType != toSimple) {\r\n            this._doc.record(new ChangeEQFilterType(this._doc, instrument, toSimple));\r\n        }\r\n    }\r\n\r\n    private _switchNoteFilterType(toSimple: boolean) {\r\n        const channel: Channel = this._doc.song.channels[this._doc.channel];\r\n        const instrument: Instrument = channel.instruments[this._doc.getCurrentInstrument()];\r\n        if (instrument.noteFilterType != toSimple) {\r\n            this._doc.record(new ChangeNoteFilterType(this._doc, instrument, toSimple));\r\n        }\r\n    }\r\n\r\n    private _randomPreset(): void {\r\n        const isNoise: boolean = this._doc.song.getChannelIsNoise(this._doc.channel);\r\n        this._doc.record(new ChangePreset(this._doc, pickRandomPresetValue(isNoise)));\r\n    }\r\n\r\n    private _randomGenerated(): void {\r\n        this._doc.record(new ChangeRandomGeneratedInstrument(this._doc));\r\n    }\r\n\r\n\r\n    private _whenSetTempo = (): void => {\r\n        this._doc.record(new ChangeTempo(this._doc, -1, parseInt(this._tempoStepper.value) | 0));\r\n    }\r\n\r\n    private _whenSetOctave = (): void => {\r\n        this._doc.record(new ChangeKeyOctave(this._doc, this._doc.song.octave, parseInt(this._octaveStepper.value) | 0));\r\n        this._piano.forceRender();\r\n    }\r\n\r\n    private _whenSetScale = (): void => {\r\n        if (isNaN(<number><unknown>this._scaleSelect.value)) {\r\n            switch (this._scaleSelect.value) {\r\n                case \"forceScale\":\r\n                    this._doc.selection.forceScale();\r\n                    break;\r\n                case \"customize\":\r\n                    this._openPrompt(\"customScale\")\r\n                    break;\r\n            }\r\n            this._doc.notifier.changed();\r\n        } else {\r\n            this._doc.record(new ChangeScale(this._doc, this._scaleSelect.selectedIndex));\r\n        }\r\n    }\r\n\r\n    private _whenSetKey = (): void => {\r\n        if (isNaN(<number><unknown>this._keySelect.value)) {\r\n            switch (this._keySelect.value) {\r\n                case \"detectKey\":\r\n                    this._doc.record(new ChangeDetectKey(this._doc));\r\n                    break;\r\n            }\r\n            this._doc.notifier.changed();\r\n        } else {\r\n            this._doc.record(new ChangeKey(this._doc, Config.keys.length - 1 - this._keySelect.selectedIndex));\r\n        }\r\n    }\r\n\r\n    private _whenSetRhythm = (): void => {\r\n        if (isNaN(<number><unknown>this._rhythmSelect.value)) {\r\n            switch (this._rhythmSelect.value) {\r\n                case \"forceRhythm\":\r\n                    this._doc.selection.forceRhythm();\r\n                    break;\r\n            }\r\n            this._doc.notifier.changed();\r\n        } else {\r\n            this._doc.record(new ChangeRhythm(this._doc, this._rhythmSelect.selectedIndex));\r\n        }\r\n    }\r\n\r\n    public _refocus = (): void => {\r\n        // Waits a bit because select2 \"steals\" back focus even after the close event fires.\r\n        var selfRef = this;\r\n        setTimeout(function () { selfRef.mainLayer.focus(); }, 20);\r\n    }\r\n\r\n    public _whenSetPitchedPreset = (): void => {\r\n        this._setPreset($('#pitchPresetSelect').val() + \"\");\r\n    }\r\n\r\n    public _whenSetDrumPreset = (): void => {\r\n        this._setPreset($('#drumPresetSelect').val() + \"\");\r\n    }\r\n\r\n    private _setPreset(preset: string): void {\r\n        if (isNaN(<number><unknown>preset)) {\r\n            switch (preset) {\r\n                case \"copyInstrument\":\r\n                    this._copyInstrument();\r\n                    break;\r\n                case \"pasteInstrument\":\r\n                    this._pasteInstrument();\r\n                    break;\r\n                case \"randomPreset\":\r\n                    this._randomPreset();\r\n                    break;\r\n                case \"randomGenerated\":\r\n                    this._randomGenerated();\r\n                    break;\r\n            }\r\n            this._doc.notifier.changed();\r\n        } else {\r\n            this._doc.record(new ChangePreset(this._doc, parseInt(preset)));\r\n        }\r\n    }\r\n\r\n    private _whenSetFeedbackType = (): void => {\r\n        this._doc.record(new ChangeFeedbackType(this._doc, this._feedbackTypeSelect.selectedIndex));\r\n    }\r\n\r\n\r\n    private _whenSetAlgorithm = (): void => {\r\n        this._doc.record(new ChangeAlgorithm(this._doc, this._algorithmSelect.selectedIndex));\r\n    }\r\n\r\n    private _whenSet6OpFeedbackType = (): void => {\r\n        this._doc.record(new Change6OpFeedbackType(this._doc, this._feedback6OpTypeSelect.selectedIndex));\r\n        this._customAlgorithmCanvas.reset()\r\n    }\r\n    private _whenSet6OpAlgorithm = (): void => {\r\n        this._doc.record(new Change6OpAlgorithm(this._doc, this._algorithm6OpSelect.selectedIndex));\r\n        this._customAlgorithmCanvas.reset()\r\n    }\r\n    \r\n    private _whenSelectInstrument = (event: MouseEvent): void => {\r\n        if (event.target == this._instrumentAddButton) {\r\n            this._doc.record(new ChangeAddChannelInstrument(this._doc));\r\n        } else if (event.target == this._instrumentRemoveButton) {\r\n            this._doc.record(new ChangeRemoveChannelInstrument(this._doc));\r\n        } else {\r\n            const index: number = this._instrumentButtons.indexOf(<any>event.target);\r\n            if (index != -1) {\r\n                this._doc.selection.selectInstrument(index);\r\n            }\r\n            // Force piano to re-show, if channel is modulator\r\n            if (this._doc.channel >= this._doc.song.pitchChannelCount + this._doc.song.noiseChannelCount) {\r\n                this._piano.forceRender();\r\n            }\r\n\t\tthis._renderInstrumentBar(this._doc.song.channels[this._doc.channel], index, ColorConfig.getChannelColor(this._doc.song, this._doc.channel));\r\n        }\r\n\r\n        this.refocusStage();\r\n    }\r\n\r\n    private _whenSetModChannel = (mod: number): void => {\r\n\r\n        let instrument: Instrument = this._doc.song.channels[this._doc.channel].instruments[this._doc.getCurrentInstrument()];\r\n        let previouslyUnset: boolean = (instrument.modulators[mod] == 0 || Config.modulators[instrument.modulators[mod]].forSong);\r\n\r\n        this._doc.selection.setModChannel(mod, this._modChannelBoxes[mod].selectedIndex);\r\n\r\n        const modChannel: number = Math.max(0, instrument.modChannels[mod]);\r\n\r\n        // Check if setting was 'song' or 'none' and is changing to a channel number, in which case suggested instrument to mod will auto-set to the current one.\r\n        if (this._doc.song.channels[modChannel].instruments.length > 1 && previouslyUnset && this._modChannelBoxes[mod].selectedIndex >= 2) {\r\n            if (this._doc.song.channels[modChannel].bars[this._doc.bar] > 0) {\r\n                this._doc.selection.setModInstrument(mod, this._doc.song.channels[modChannel].patterns[this._doc.song.channels[modChannel].bars[this._doc.bar] - 1].instruments[0]);\r\n            }\r\n        }\r\n\r\n        // Force piano to re-show\r\n        this._piano.forceRender();\r\n    }\r\n\r\n    private _whenSetModInstrument = (mod: number): void => {\r\n        this._doc.selection.setModInstrument(mod, this._modInstrumentBoxes[mod].selectedIndex);\r\n\r\n        // Force piano to re-show\r\n        this._piano.forceRender();\r\n    }\r\n\r\n    private _whenSetModSetting = (mod: number, invalidIndex: boolean = false): void => {\r\n        let text: string = \"none\";\r\n        if (this._modSetBoxes[mod].selectedIndex != -1) {\r\n            text = this._modSetBoxes[mod].children[this._modSetBoxes[mod].selectedIndex].textContent as string;\r\n\r\n            if (invalidIndex) {\r\n                // A setting is invalid (not in instrument's effects). It will be the first index. Allow it, but mark it as red.\r\n                this._modSetBoxes[mod].selectedOptions.item(0)!.style.setProperty(\"color\", \"red\");\r\n                this._modSetBoxes[mod].classList.add(\"invalidSetting\");\r\n                this._doc.song.channels[this._doc.channel].instruments[this._doc.getCurrentInstrument()].invalidModulators[mod] = true;\r\n            } else {\r\n                this._modSetBoxes[mod].classList.remove(\"invalidSetting\");\r\n                this._doc.song.channels[this._doc.channel].instruments[this._doc.getCurrentInstrument()].invalidModulators[mod] = false;\r\n            }\r\n        }\r\n        if (!invalidIndex) // Invalid index means a set is actually not occurring, just the same index and a warning.\r\n            this._doc.selection.setModSetting(mod, text);\r\n\r\n        // Force piano to re-show if channel is modulator, as text shown on it needs to update\r\n        this._piano.forceRender();\r\n\r\n    }\r\n\r\n    private _whenClickModTarget = (mod: number): void => {\r\n        if (this._modChannelBoxes[mod].selectedIndex >= 2) {\r\n            this._doc.selection.setChannelBar(this._modChannelBoxes[mod].selectedIndex - 2, this._doc.bar);\r\n        }\r\n    }\r\n\r\n    private _whenClickJumpToModTarget = (): void => {\r\n        const channelIndex: number = this._doc.channel;\r\n        const instrumentIndex: number = this._doc.getCurrentInstrument();\r\n        if (channelIndex < this._doc.song.pitchChannelCount + this._doc.song.noiseChannelCount) {\r\n            for (let modChannelIdx: number = this._doc.song.pitchChannelCount + this._doc.song.noiseChannelCount; modChannelIdx < this._doc.song.channels.length; modChannelIdx++) {\r\n                const modChannel: Channel = this._doc.song.channels[modChannelIdx];\r\n                const patternIdx = modChannel.bars[this._doc.bar];\r\n                if (patternIdx > 0) {\r\n                    const modInstrumentIdx: number = modChannel.patterns[patternIdx - 1].instruments[0];\r\n                    const modInstrument: Instrument = modChannel.instruments[modInstrumentIdx];\r\n                    for (let mod: number = 0; mod < Config.modCount; mod++) {\r\n                        if (modInstrument.modChannels[mod] == channelIndex && (modInstrument.modInstruments[mod] == instrumentIndex || modInstrument.modInstruments[mod] >= this._doc.song.channels[channelIndex].instruments.length)) {\r\n                            this._doc.selection.setChannelBar(modChannelIdx, this._doc.bar);\r\n                            return;\r\n                        }\r\n                    }\r\n                }\r\n            }\r\n        }\r\n    }\r\n\r\n    private _whenSetModFilter = (mod: number): void => {\r\n        this._doc.selection.setModFilter(mod, this._modFilterBoxes[mod].selectedIndex);\r\n    }\r\n\r\n    private _whenSetChipWave = (): void => {\r\n        this._doc.record(new ChangeChipWave(this._doc, this._chipWaveSelect.selectedIndex));\r\n    }\r\n\r\n\t\t\t\t // advloop addition\r\n            private _whenSetUseChipWaveAdvancedLoopControls = (): void => {\r\n                this._doc.record(new ChangeChipWaveUseAdvancedLoopControls(this._doc, this._useChipWaveAdvancedLoopControlsBox.checked ? true : false));\r\n            }\r\n            private _whenSetChipWaveLoopMode = (): void => {\r\n                this._doc.record(new ChangeChipWaveLoopMode(this._doc, this._chipWaveLoopModeSelect.selectedIndex));\r\n            }\r\n           private _whenSetChipWaveLoopStart = (): void => {\r\n                // this._doc.record(new ChangeChipWaveLoopStart(this._doc, Math.max(0, Math.min(chipWaveLoopEnd - 1, parseInt(this._chipWaveLoopStartStepper.value)))));\r\n                this._doc.record(new ChangeChipWaveLoopStart(this._doc, parseInt(this._chipWaveLoopStartStepper.value) | 0));\r\n            }\r\n            private _whenSetChipWaveLoopEnd = (): void => {\r\n                // this._doc.record(new ChangeChipWaveLoopEnd(this._doc, Math.max(0, Math.min(chipWaveLength - 1, parseInt(this._chipWaveLoopEndStepper.value)))));\r\n                this._doc.record(new ChangeChipWaveLoopEnd(this._doc, parseInt(this._chipWaveLoopEndStepper.value) | 0));\r\n            }\r\n            private _whenSetChipWaveLoopEndToEnd = (): void => {\r\n                const channel = this._doc.song.channels[this._doc.channel];\r\n                const instrument = channel.instruments[this._doc.getCurrentInstrument()];\r\n                const chipWave = Config.rawRawChipWaves[instrument.chipWave];\r\n                const chipWaveLength = chipWave.samples.length;\r\n                this._doc.record(new ChangeChipWaveLoopEnd(this._doc, chipWaveLength - 1));\r\n            }\r\n            private _whenSetChipWaveStartOffset = (): void => {\r\n                // this._doc.record(new ChangeChipWaveStartOffset(this._doc, Math.max(0, Math.min(chipWaveLength - 1, parseInt(this._chipWaveStartOffsetStepper.value)))));\r\n                this._doc.record(new ChangeChipWaveStartOffset(this._doc, parseInt(this._chipWaveStartOffsetStepper.value) | 0));\r\n            }\r\n            private _whenSetChipWavePlayBackwards = (): void => {\r\n                this._doc.record(new ChangeChipWavePlayBackwards(this._doc, this._chipWavePlayBackwardsBox.checked));\r\n            }\r\n            // advloop addition\r\n\r\n    private _whenSetNoiseWave = (): void => {\r\n        this._doc.record(new ChangeNoiseWave(this._doc, this._chipNoiseSelect.selectedIndex));\r\n    }\r\n\r\n\r\n\r\n    private _whenSetTransition = (): void => {\r\n        this._doc.record(new ChangeTransition(this._doc, this._transitionSelect.selectedIndex));\r\n    }\r\n\r\n    private _whenSetEffects = (): void => {\r\n        const instrument: Instrument = this._doc.song.channels[this._doc.channel].instruments[this._doc.getCurrentInstrument()];\r\n        const oldValue: number = instrument.effects;\r\n        const toggleFlag: number = Config.effectOrder[this._effectsSelect.selectedIndex - 1];\r\n        this._doc.record(new ChangeToggleEffects(this._doc, toggleFlag, null));\r\n        this._effectsSelect.selectedIndex = 0;\r\n        if (instrument.effects > oldValue) {\r\n            this._doc.addedEffect = true;\r\n        }\r\n        this._doc.notifier.changed();\r\n    }\r\n\r\n    private _whenSetVibrato = (): void => {\r\n        this._doc.record(new ChangeVibrato(this._doc, this._vibratoSelect.selectedIndex));\r\n    }\r\n\r\n    private _whenSetVibratoType = (): void => {\r\n        this._doc.record(new ChangeVibratoType(this._doc, this._vibratoTypeSelect.selectedIndex));\r\n    }\r\n\r\n    private _whenSetUnison = (): void => {\r\n        this._doc.record(new ChangeUnison(this._doc, this._unisonSelect.selectedIndex));\r\n    }\r\n\r\n    private _whenSetChord = (): void => {\r\n        this._doc.record(new ChangeChord(this._doc, this._chordSelect.selectedIndex));\r\n    }\r\n\r\n    private _addNewEnvelope = (): void => {\r\n        this._doc.record(new ChangeAddEnvelope(this._doc));\r\n        this.refocusStage();\r\n        this._doc.addedEnvelope = true;\r\n    }\r\n\r\n    private _zoomIn = (): void => {\r\n        this._doc.prefs.visibleOctaves = Math.max(1, this._doc.prefs.visibleOctaves - 1);\r\n        this._doc.prefs.save();\r\n        this._doc.notifier.changed();\r\n        this.refocusStage();\r\n    }\r\n\r\n    private _zoomOut = (): void => {\r\n        this._doc.prefs.visibleOctaves = Math.min(Config.pitchOctaves, this._doc.prefs.visibleOctaves + 1);\r\n        this._doc.prefs.save();\r\n        this._doc.notifier.changed();\r\n        this.refocusStage();\r\n    }\r\n\r\n    private _fileMenuHandler = (event: Event): void => {\r\n        switch (this._fileMenu.value) {\r\n            case \"new\":\r\n                this._doc.goBackToStart();\r\n                this._doc.song.restoreLimiterDefaults();\r\n                for (const channel of this._doc.song.channels) {\r\n                    channel.muted = false;\r\n                    channel.name = \"\";\r\n                }\r\n                this._doc.record(new ChangeSong(this._doc, \"\"), false, true);\r\n                break;\r\n            case \"export\":\r\n                this._openPrompt(\"export\");\r\n                break;\r\n            case \"import\":\r\n                this._openPrompt(\"import\");\r\n                break;\r\n            case \"copyUrl\":\r\n                this._copyTextToClipboard(new URL(\"#\" + this._doc.song.toBase64String(), location.href).href);\r\n                break;\r\n            case \"shareUrl\":\r\n                (<any>navigator).share({ url: new URL(\"#\" + this._doc.song.toBase64String(), location.href).href });\r\n                break;\r\n            case \"shortenUrl\":\r\n                window.open(\"https://tinyurl.com/api-create.php?url=\" + encodeURIComponent(new URL(\"#\" + this._doc.song.toBase64String(), location.href).href));\r\n                break;\r\n            case \"viewPlayer\":\r\n                location.href = \"player/#song=\" + this._doc.song.toBase64String();\r\n                break;\r\n            case \"copyEmbed\":\r\n                this._copyTextToClipboard(`<iframe width=\"384\" height=\"60\" style=\"border: none;\" src=\"${new URL(\"player/#song=\" + this._doc.song.toBase64String(), location.href).href}\"></iframe>`);\r\n                break;\r\n            case \"songRecovery\":\r\n                this._openPrompt(\"songRecovery\");\r\n                break;\r\n        }\r\n        this._fileMenu.selectedIndex = 0;\r\n    }\r\n\r\n    private _editMenuHandler = (event: Event): void => {\r\n        switch (this._editMenu.value) {\r\n            case \"undo\":\r\n                this._doc.undo();\r\n                break;\r\n            case \"redo\":\r\n                this._doc.redo();\r\n                break;\r\n            case \"copy\":\r\n                this._doc.selection.copy();\r\n                break;\r\n            case \"insertBars\":\r\n                this._doc.selection.insertBars();\r\n                break;\r\n            case \"deleteBars\":\r\n                this._doc.selection.deleteBars();\r\n                break;\r\n            case \"insertChannel\":\r\n                this._doc.selection.insertChannel();\r\n                break;\r\n            case \"deleteChannel\":\r\n                this._doc.selection.deleteChannel();\r\n                break;\r\n            case \"pasteNotes\":\r\n                this._doc.selection.pasteNotes();\r\n                break;\r\n            case \"pasteNumbers\":\r\n                this._doc.selection.pasteNumbers();\r\n                break;\r\n            case \"transposeUp\":\r\n                this._doc.selection.transpose(true, false);\r\n                break;\r\n            case \"transposeDown\":\r\n                this._doc.selection.transpose(false, false);\r\n                break;\r\n            case \"selectAll\":\r\n                this._doc.selection.selectAll();\r\n                break;\r\n            case \"selectChannel\":\r\n                this._doc.selection.selectChannel();\r\n                break;\r\n            case \"duplicatePatterns\":\r\n                this._doc.selection.duplicatePatterns();\r\n                break;\r\n            case \"barCount\":\r\n                this._openPrompt(\"barCount\");\r\n                break;\r\n            case \"beatsPerBar\":\r\n                this._openPrompt(\"beatsPerBar\");\r\n                break;\r\n            case \"moveNotesSideways\":\r\n                this._openPrompt(\"moveNotesSideways\");\r\n                break;\r\n            case \"channelSettings\":\r\n                this._openPrompt(\"channelSettings\");\r\n                break;\r\n            case \"limiterSettings\":\r\n                this._openPrompt(\"limiterSettings\");\r\n                break;\r\n            case \"generateEuclideanRhythm\":\r\n                this._openPrompt(\"generateEuclideanRhythm\");\r\n                break;\r\n            case \"addExternal\":\r\n                this._openPrompt(\"addExternal\");\r\n                break;\r\n        }\r\n        this._editMenu.selectedIndex = 0;\r\n    }\r\n\r\n    private _optionsMenuHandler = (event: Event): void => {\r\n        switch (this._optionsMenu.value) {\r\n            case \"autoPlay\":\r\n                this._doc.prefs.autoPlay = !this._doc.prefs.autoPlay;\r\n                break;\r\n            case \"autoFollow\":\r\n                this._doc.prefs.autoFollow = !this._doc.prefs.autoFollow;\r\n                break;\r\n            case \"enableNotePreview\":\r\n                this._doc.prefs.enableNotePreview = !this._doc.prefs.enableNotePreview;\r\n                break;\r\n            case \"showLetters\":\r\n                this._doc.prefs.showLetters = !this._doc.prefs.showLetters;\r\n                break;\r\n            case \"showFifth\":\r\n                this._doc.prefs.showFifth = !this._doc.prefs.showFifth;\r\n                break;\r\n            case \"notesOutsideScale\":\r\n                this._doc.prefs.notesOutsideScale = !this._doc.prefs.notesOutsideScale;\r\n                break;\r\n            case \"setDefaultScale\":\r\n                this._doc.prefs.defaultScale = this._doc.song.scale;\r\n                break;\r\n            case \"showChannels\":\r\n                this._doc.prefs.showChannels = !this._doc.prefs.showChannels;\r\n                break;\r\n            case \"showScrollBar\":\r\n                this._doc.prefs.showScrollBar = !this._doc.prefs.showScrollBar;\r\n                break;\r\n            case \"alwaysFineNoteVol\":\r\n                this._doc.prefs.alwaysFineNoteVol = !this._doc.prefs.alwaysFineNoteVol;\r\n                break;\r\n            case \"enableChannelMuting\":\r\n                this._doc.prefs.enableChannelMuting = !this._doc.prefs.enableChannelMuting;\r\n                for (const channel of this._doc.song.channels) channel.muted = false;\r\n                break;\r\n            case \"displayBrowserUrl\":\r\n                this._doc.toggleDisplayBrowserUrl();\r\n                break;\r\n            case \"displayVolumeBar\":\r\n                this._doc.prefs.displayVolumeBar = !this._doc.prefs.displayVolumeBar;\r\n                break;\r\n            case \"layout\":\r\n                this._openPrompt(\"layout\");\r\n                break;\r\n            case \"colorTheme\":\r\n                this._openPrompt(\"theme\");\r\n                break;\r\n\tcase \"customTheme\":\r\n\t\tthis._openPrompt(\"custom\");\r\n\t\tbreak;\r\n            case \"recordingSetup\":\r\n                this._openPrompt(\"recordingSetup\");\r\n                break;\r\n            case \"showOscilloscope\":\r\n                this._doc.prefs.showOscilloscope = !this._doc.prefs.showOscilloscope;\r\n                break;\r\n            case \"showSampleLoadingStatus\":\r\n                this._doc.prefs.showSampleLoadingStatus = !this._doc.prefs.showSampleLoadingStatus;\r\n                break;\r\n        }\r\n        this._optionsMenu.selectedIndex = 0;\r\n        this._doc.notifier.changed();\r\n        this._doc.prefs.save();\r\n    }\r\n\r\n    private _customWavePresetHandler = (event: Event): void => {\r\n\r\n        // Update custom wave value\r\n        let customWaveArray: Float32Array = new Float32Array(64);\r\n        let index: number = this._customWavePresetDrop.selectedIndex - 1;\r\n        let maxValue: number = Number.MIN_VALUE;\r\n        let minValue: number = Number.MAX_VALUE;\r\n        let arrayPoint: number = 0;\r\n        let arrayStep: number = (Config.chipWaves[index].samples.length - 1) / 64.0;\r\n\r\n        for (let i: number = 0; i < 64; i++) {\r\n            // Compute derivative to get original wave.\r\n            customWaveArray[i] = (Config.chipWaves[index].samples[Math.floor(arrayPoint)] - Config.chipWaves[index].samples[(Math.floor(arrayPoint) + 1)]) / arrayStep;\r\n\r\n            if (customWaveArray[i] < minValue)\r\n                minValue = customWaveArray[i];\r\n\r\n            if (customWaveArray[i] > maxValue)\r\n                maxValue = customWaveArray[i];\r\n\r\n            // Scale an any-size array to 64 elements\r\n            arrayPoint += arrayStep;\r\n        }\r\n\r\n        for (let i: number = 0; i < 64; i++) {\r\n            // Change array range from Min~Max to 0~(Max-Min)\r\n            customWaveArray[i] -= minValue;\r\n            // Divide by (Max-Min) to get a range of 0~1,\r\n            customWaveArray[i] /= (maxValue - minValue);\r\n            //then multiply by 48 to get 0~48,\r\n            customWaveArray[i] *= 48.0;\r\n            //then subtract 24 to get - 24~24\r\n            customWaveArray[i] -= 24.0;\r\n            //need to force integers\r\n            customWaveArray[i] = Math.ceil(customWaveArray[i]);\r\n\r\n            // Copy back data to canvas\r\n            this._customWaveDrawCanvas.newArray[i] = customWaveArray[i];\r\n        }\r\n\r\n        //this._instrumentVolumeSlider.input.value = \"\" + Math.round(Config.waveVolumes[index] * 50.0 - 50.0);\r\n\r\n        this._doc.record(new ChangeCustomWave(this._doc, customWaveArray))\r\n        this._doc.record(new ChangeVolume(this._doc, +this._instrumentVolumeSlider.input.value, -Config.volumeRange / 2 + Math.round(Math.sqrt(Config.chipWaves[index].expression) * Config.volumeRange / 2)));\r\n\r\n        this._customWavePresetDrop.selectedIndex = 0;\r\n        this._doc.notifier.changed();\r\n        this._doc.prefs.save();\r\n    }\r\n}\r\n","// Copyright (c) 2012-2022 John Nesky and contributing authors, distributed under the MIT license, see accompanying the LICENSE.md file.\r\n\r\nimport {Config} from \"../synth/SynthConfig\";\r\nimport {Note, Pattern} from \"../synth/synth\";\r\nimport {SongDocument} from \"./SongDocument\";\r\nimport {ChangeGroup} from \"./Change\";\r\nimport {ChangeChannelBar, ChangePinTime, ChangeEnsurePatternExists, ChangeNoteAdded, ChangeInsertBars, ChangeDeleteBars, ChangeNoteLength} from \"./changes\";\r\n\r\nexport class SongPerformance {\r\n\tprivate _channelIsDrum: boolean = false;\r\n\tprivate _channelOctave: number = -1;\r\n\tprivate _songKey: number = -1;\r\n\tprivate _pitchesAreTemporary: boolean = false;\r\n\tprivate readonly _recentlyAddedPitches: number[] = []; // Pitches that are rapidly added then removed within a minimum rhythm duration wouldn't get recorded until I explicitly track recently added notes and check if any are no longer held.\r\n\t\r\n\tprivate _songLengthWhenRecordingStarted: number = -1;\r\n\tprivate _playheadPart: number = -1;\r\n\tprivate _playheadPattern: Pattern | null = null;\r\n\tprivate _pitchesChanged: boolean = false;\r\n\tprivate _lastNote: Note | null = null;\r\n\tprivate _recordingChange: ChangeGroup | null = null;\r\n\t\r\n\tconstructor(private _doc: SongDocument) {\r\n\t\tthis._doc.notifier.watch(this._documentChanged);\r\n\t\tthis._documentChanged();\r\n\t\twindow.requestAnimationFrame(this._onAnimationFrame);\r\n\t}\r\n\t\r\n\tpublic play(): void {\r\n\t\tthis._doc.synth.play();\r\n\t\tthis._doc.synth.enableMetronome = false;\r\n\t\tthis._doc.synth.countInMetronome = false\r\n\t\tthis._doc.synth.maintainLiveInput();\r\n\t}\r\n\t\r\n\tpublic pause(): void {\r\n\t\tthis.clearAllPitches();\r\n\t\tif (this._recordingChange != null) {\r\n\t\t\tif (this._doc.song.barCount > this._songLengthWhenRecordingStarted && !this._lastBarHasPatterns()) {\r\n\t\t\t\t// If an extra empty bar was added in case it was needed for recording, but it didn't end up getting used, delete it now.\r\n\t\t\t\tnew ChangeDeleteBars(this._doc, this._doc.song.barCount - 1, 1);\r\n\t\t\t\tnew ChangeChannelBar(this._doc, this._doc.channel, this._doc.song.barCount - 1);\r\n\t\t\t}\r\n\t\t\tif (!this._recordingChange.isNoop()) {\r\n\t\t\t\tthis._doc.record(this._recordingChange);\r\n\t\t\t\tthis._recordingChange = null;\r\n\t\t\t}\r\n\t\t\tthis._lastNote = null;\r\n\t\t}\r\n\t\tthis._doc.synth.pause();\r\n\t\tthis._doc.synth.resetEffects();\r\n\t\tthis._doc.synth.enableMetronome = false;\r\n\t\tthis._doc.synth.countInMetronome = false\r\n\t\tif (this._doc.prefs.autoFollow) {\r\n\t\t\tthis._doc.synth.goToBar(this._doc.bar);\r\n\t\t}\r\n\t\tthis._doc.synth.snapToBar();\r\n\t}\r\n\t\r\n\tpublic record(): void {\r\n\t\tthis._doc.synth.snapToBar();\r\n\t\tconst playheadBar: number = Math.floor(this._doc.synth.playhead);\r\n\t\tif (playheadBar != this._doc.bar) {\r\n\t\t\tnew ChangeChannelBar(this._doc, this._doc.channel, playheadBar);\r\n\t\t}\r\n\t\tif (this._pitchesAreTemporary) {\r\n\t\t\tthis.clearAllPitches();\r\n\t\t\tthis._pitchesAreTemporary = false;\r\n\t\t}\r\n\t\tthis._doc.synth.enableMetronome = this._doc.prefs.metronomeWhileRecording;\r\n\t\tthis._doc.synth.countInMetronome = this._doc.prefs.metronomeCountIn;\r\n\t\tthis._doc.synth.startRecording();\r\n\t\tthis._doc.synth.maintainLiveInput();\r\n\t\tthis._songLengthWhenRecordingStarted = this._doc.song.barCount;\r\n\t\tthis._playheadPart = this._getCurrentPlayheadPart();\r\n\t\tthis._playheadPattern = null;\r\n\t\tthis._pitchesChanged = false;\r\n\t\tthis._lastNote = null;\r\n\t\tthis._recentlyAddedPitches.length = 0;\r\n\t\tthis._recordingChange = new ChangeGroup();\r\n\t\tthis._doc.setProspectiveChange(this._recordingChange);\r\n\t}\r\n\t\r\n\tpublic abortRecording(): void {\r\n\t\tthis._recordingChange = null;\r\n\t\tthis.pause();\r\n\t}\r\n\t\r\n\tpublic pitchesAreTemporary(): boolean {\r\n\t\treturn this._pitchesAreTemporary;\r\n\t}\r\n\t\r\n\tprivate _getMinDivision(): number {\r\n\t\tif (this._doc.prefs.snapRecordedNotesToRhythm) {\r\n\t\t\treturn Config.partsPerBeat / Config.rhythms[this._doc.song.rhythm].stepsPerBeat;\r\n\t\t} else {\r\n\t\t\treturn 1;\r\n\t\t}\r\n\t}\r\n\t\r\n\tprivate _getCurrentPlayheadPart(): number {\r\n\t\tconst currentPart: number = this._doc.synth.playhead * this._doc.song.beatsPerBar * Config.partsPerBeat;\r\n\t\tif (this._doc.prefs.snapRecordedNotesToRhythm) {\r\n\t\t\tconst minDivision: number = this._getMinDivision();\r\n\t\t\treturn Math.round(currentPart / minDivision) * minDivision;\r\n\t\t}\r\n\t\treturn Math.round(currentPart);\r\n\t}\r\n\t\r\n\tprivate _lastBarHasPatterns(): boolean {\r\n\t\tfor (let channelIndex: number = 0; channelIndex < this._doc.song.getChannelCount(); channelIndex++) {\r\n\t\t\tif (this._doc.song.channels[channelIndex].bars[this._doc.song.barCount - 1] != 0) return true;\r\n\t\t}\r\n\t\treturn false;\r\n\t}\r\n\t\r\n\tprivate _onAnimationFrame = (): void => {\r\n\t\twindow.requestAnimationFrame(this._onAnimationFrame);\r\n\t\tif (this._doc.synth.recording) {\r\n\t\t\tconst dirty = this._updateRecordedNotes();\r\n\t\t\tif (dirty) {\r\n\t\t\t\t// The full interface is usually only rerendered in response to user input events, not animation events, but in this case go ahead and rerender everything.\r\n\t\t\t\tthis._doc.notifier.notifyWatchers();\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\t\r\n\t// Returns true if the full interface needs to be rerendered.\r\n\tprivate _updateRecordedNotes(): boolean {\r\n\t\tif (this._recordingChange == null) return false;\r\n\t\tif (!this._doc.lastChangeWas(this._recordingChange)) {\r\n\t\t\tthis.abortRecording();\r\n\t\t\treturn false;\r\n\t\t}\r\n\t\tif (this._doc.synth.countInMetronome) {\r\n\t\t\t// If the synth is still counting in before recording, discard any recently added pitches.\r\n\t\t\tthis._recentlyAddedPitches.length = 0;\r\n\t\t\tthis._pitchesChanged = false;\r\n\t\t\treturn false;\r\n\t\t}\r\n\t\t\r\n\t\tconst partsPerBar: number = this._doc.song.beatsPerBar * Config.partsPerBeat;\r\n\t\tconst oldPart: number = this._playheadPart % partsPerBar;\r\n\t\tconst oldBar: number = Math.floor(this._playheadPart / partsPerBar);\r\n\t\tconst oldPlayheadPart: number = this._playheadPart;\r\n\t\tthis._playheadPart = this._getCurrentPlayheadPart();\r\n\t\tconst newPart: number = this._playheadPart % partsPerBar;\r\n\t\tconst newBar: number = Math.floor(this._playheadPart / partsPerBar);\r\n\t\tif (oldPart == newPart && oldBar == newBar) return false;\r\n\t\tif (this._playheadPart < oldPlayheadPart) {\r\n\t\t\tthis._lastNote = null;\r\n\t\t\tthis._playheadPattern = null;\r\n\t\t\treturn false;\r\n\t\t}\r\n\t\t\r\n\t\tlet dirty = false;\r\n\t\tfor (let bar: number = oldBar; bar <= newBar; bar++) {\r\n\t\t\tif (bar != oldBar) this._playheadPattern = null;\r\n\t\t\tconst startPart: number = (bar == oldBar) ? oldPart : 0;\r\n\t\t\tconst endPart: number = (bar == newBar) ? newPart : partsPerBar;\r\n\t\t\tif (startPart == endPart) break;\r\n\t\t\tif (this._lastNote != null && !this._pitchesChanged && startPart > 0 && this._doc.synth.liveInputPitches.length > 0) {\r\n\t\t\t\tthis._recordingChange.append(new ChangePinTime(this._doc, this._lastNote, 1, endPart, this._lastNote.continuesLastPattern));\r\n\t\t\t\t// Instead of updating the entire interface when extending the last note, just update the current pattern as a special case to avoid doing too much work every frame since performance is important while recording.\r\n\t\t\t\tthis._doc.currentPatternIsDirty = true;\r\n\t\t\t} else {\r\n\t\t\t\tif (this._lastNote != null) {\r\n\t\t\t\t\t// End the last note.\r\n\t\t\t\t\tthis._lastNote = null;\r\n\t\t\t\t}\r\n\t\t\t\t// All current pitches will usually fill the time span from startPart to endPart, but\r\n\t\t\t\t// if any recent pitches were released before being recorded, they'll get recorded here\r\n\t\t\t\t// as short as possible and then any remaining time will be dedicated to pitches that\r\n\t\t\t\t// haven't been released yet.\r\n\t\t\t\tlet noteStartPart: number = startPart;\r\n\t\t\t\tlet noteEndPart: number = endPart;\r\n\t\t\t\twhile (noteStartPart < endPart) {\r\n\t\t\t\t\tlet addedAlreadyReleasedPitch: boolean = false;\r\n\t\t\t\t\tif (this._recentlyAddedPitches.length > 0 || this._doc.synth.liveInputPitches.length > 0) {\r\n\t\t\t\t\t\tif (this._playheadPattern == null) {\r\n\t\t\t\t\t\t\tthis._doc.selection.erasePatternInBar(this._recordingChange, this._doc.synth.liveInputChannel, bar);\r\n\t\t\t\t\t\t\tthis._recordingChange.append(new ChangeEnsurePatternExists(this._doc, this._doc.synth.liveInputChannel, bar));\r\n\t\t\t\t\t\t\tthis._playheadPattern = this._doc.song.getPattern(this._doc.synth.liveInputChannel, bar);\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\tif (this._playheadPattern == null) throw new Error();\r\n\t\t\t\t\t\tthis._lastNote = new Note(-1, noteStartPart, noteEndPart, Config.noteSizeMax, this._doc.song.getChannelIsNoise(this._doc.synth.liveInputChannel));\r\n\t\t\t\t\t\tthis._lastNote.continuesLastPattern = (noteStartPart == 0 && !this._pitchesChanged);\r\n\t\t\t\t\t\tthis._lastNote.pitches.length = 0;\r\n\t\t\t\t\t\twhile (this._recentlyAddedPitches.length > 0) {\r\n\t\t\t\t\t\t\tif (this._lastNote.pitches.length >= Config.maxChordSize) break;\r\n\t\t\t\t\t\t\tconst recentPitch: number = this._recentlyAddedPitches.shift()!;\r\n\t\t\t\t\t\t\tif (this._doc.synth.liveInputPitches.indexOf(recentPitch) == -1) {\r\n\t\t\t\t\t\t\t\tthis._lastNote.pitches.push(recentPitch);\r\n\t\t\t\t\t\t\t\taddedAlreadyReleasedPitch = true;\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\tfor (let i: number = 0; i < this._doc.synth.liveInputPitches.length; i++) {\r\n\t\t\t\t\t\t\tif (this._lastNote.pitches.length >= Config.maxChordSize) break;\r\n\t\t\t\t\t\t\tthis._lastNote.pitches.push(this._doc.synth.liveInputPitches[i]);\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\tthis._recordingChange.append(new ChangeNoteAdded(this._doc, this._playheadPattern, this._lastNote, this._playheadPattern.notes.length));\r\n\t\t\t\t\t\tif (addedAlreadyReleasedPitch) {\r\n\t\t\t\t\t\t\t// If this note contains pitches that were already released, shorten it and start a new note.\r\n\t\t\t\t\t\t\tnoteEndPart = noteStartPart + this._getMinDivision();\r\n\t\t\t\t\t\t\tnew ChangeNoteLength(this._doc, this._lastNote, this._lastNote.start, noteEndPart);\r\n\t\t\t\t\t\t\tthis._lastNote = null;\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\tdirty = true;\r\n\t\t\t\t\t}\r\n\t\t\t\t\tthis._pitchesChanged = addedAlreadyReleasedPitch;\r\n\t\t\t\t\tnoteStartPart = noteEndPart;\r\n\t\t\t\t\tnoteEndPart = endPart;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\t\r\n\t\t\tif (bar == this._doc.song.barCount - 1) {\r\n\t\t\t\tif (this._lastBarHasPatterns()) {\r\n\t\t\t\t\tnew ChangeInsertBars(this._doc, this._doc.song.barCount, 1);\r\n\t\t\t\t\tthis._doc.bar--; // To counteract it increasing in ChangeInsertBars.\r\n\t\t\t\t\tdirty = true;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\t\treturn dirty;\r\n\t}\r\n\t\r\n\tpublic setTemporaryPitches(pitches: number[], duration: number): void {\r\n\t\tthis._updateRecordedNotes();\r\n\t\tfor (let i: number = 0; i < pitches.length; i++) {\r\n\t\t\tthis._doc.synth.liveInputPitches[i] = pitches[i];\r\n\t\t}\r\n\t\tthis._doc.synth.liveInputPitches.length = Math.min(pitches.length, Config.maxChordSize);\r\n\t\tthis._doc.synth.liveInputDuration = duration;\r\n\t\tthis._doc.synth.liveInputStarted = true;\r\n\t\tthis._pitchesAreTemporary = true;\r\n\t\tthis._pitchesChanged = true;\r\n\t}\r\n\t\r\n\tpublic addPerformedPitch(pitch: number): void {\r\n\t\tthis._doc.synth.maintainLiveInput();\r\n\t\tthis._updateRecordedNotes();\r\n\t\tif (this._pitchesAreTemporary) {\r\n\t\t\tthis.clearAllPitches();\r\n\t\t\tthis._pitchesAreTemporary = false;\r\n\t\t}\r\n\t\tif (this._doc.prefs.ignorePerformedNotesNotInScale && !Config.scales[this._doc.song.scale].flags[pitch % Config.pitchesPerOctave]) {\r\n\t\t\treturn;\r\n\t\t}\r\n\t\tif (this._doc.synth.liveInputPitches.indexOf(pitch) == -1) {\r\n\t\t\tthis._doc.synth.liveInputPitches.push(pitch);\r\n\t\t\tthis._pitchesChanged = true;\r\n\t\t\twhile (this._doc.synth.liveInputPitches.length > Config.maxChordSize) {\r\n\t\t\t\tthis._doc.synth.liveInputPitches.shift();\r\n\t\t\t}\r\n\t\t\tthis._doc.synth.liveInputDuration = Number.MAX_SAFE_INTEGER;\r\n\t\t\t\r\n\t\t\tif (this._recordingChange != null) {\r\n\t\t\t\tconst recentIndex: number = this._recentlyAddedPitches.indexOf(pitch);\r\n\t\t\t\tif (recentIndex != -1) {\r\n\t\t\t\t\t// If the latest pitch is already in _recentlyAddedPitches, remove it before adding it back at the end.\r\n\t\t\t\t\tthis._recentlyAddedPitches.splice(recentIndex, 1);\r\n\t\t\t\t}\r\n\t\t\t\tthis._recentlyAddedPitches.push(pitch);\r\n\t\t\t\twhile (this._recentlyAddedPitches.length > Config.maxChordSize * 4) {\r\n\t\t\t\t\tthis._recentlyAddedPitches.shift();\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\t\r\n\tpublic removePerformedPitch(pitch: number): void {\r\n\t\tthis._updateRecordedNotes();\r\n\t\tfor (let i: number = 0; i < this._doc.synth.liveInputPitches.length; i++) {\r\n\t\t\tif (this._doc.synth.liveInputPitches[i] == pitch) {\r\n\t\t\t\tthis._doc.synth.liveInputPitches.splice(i, 1);\r\n\t\t\t\tthis._pitchesChanged = true;\r\n\t\t\t\ti--;\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\t\r\n\tpublic clearAllPitches(): void {\r\n\t\tthis._updateRecordedNotes();\r\n\t\tthis._doc.synth.liveInputPitches.length = 0;\r\n\t\tthis._pitchesChanged = true;\r\n\t}\r\n\t\r\n\tprivate _documentChanged = (): void => {\r\n\t\tconst isDrum: boolean = this._doc.song.getChannelIsNoise(this._doc.channel);\r\n\t\tconst octave: number = this._doc.song.channels[this._doc.channel].octave;\r\n\t\tif (this._doc.synth.liveInputChannel != this._doc.channel || this._channelIsDrum != isDrum || this._channelOctave != octave || this._songKey != this._doc.song.key) {\r\n\t\t\tthis._doc.synth.liveInputChannel = this._doc.channel;\r\n\t\t\tthis._channelIsDrum = isDrum;\r\n\t\t\tthis._channelOctave = octave;\r\n\t\t\tthis._songKey = this._doc.song.key;\r\n\t\t\tthis.clearAllPitches();\r\n\t\t}\r\n\t\tthis._doc.synth.liveInputInstruments = this._doc.recentPatternInstruments[this._doc.channel];\r\n\t}\r\n}\r\n","// Copyright (c) 2012-2022 John Nesky and contributing authors, distributed under the MIT license, see accompanying the LICENSE.md file.\r\n\r\nimport { Dictionary, Config } from \"../synth/SynthConfig\";\r\nimport { Note, NotePin, Pattern } from \"../synth/synth\";\r\nimport { SongDocument } from \"./SongDocument\";\r\nimport { ChangeGroup } from \"./Change\";\r\nimport { ColorConfig } from \"./ColorConfig\";\r\nimport { ChangeTrackSelection, ChangeChannelBar, ChangeAddChannel, ChangeRemoveChannel, ChangeChannelOrder, ChangeDuplicateSelectedReusedPatterns, ChangeNoteAdded, ChangeNoteTruncate, ChangePatternNumbers, ChangePatternSelection, ChangeInsertBars, ChangeDeleteBars, ChangeEnsurePatternExists, ChangeNoteLength, ChangePaste, ChangeSetPatternInstruments, ChangeViewInstrument, ChangeModChannel, ChangeModInstrument, ChangeModSetting, ChangeModFilter, ChangePatternsPerChannel, ChangePatternRhythm, ChangePatternScale, ChangeTranspose, ChangeRhythm, comparePatternNotes, unionOfUsedNotes, generateScaleMap, discardInvalidPatternInstruments, patternsContainSameInstruments } from \"./changes\";\r\n\r\ninterface PatternCopy {\r\n    instruments: number[];\r\n    notes: any[];\r\n}\r\n\r\ninterface ChannelCopy {\r\n    isNoise: boolean;\r\n    isMod: boolean;\r\n    patterns: Dictionary<PatternCopy>;\r\n    bars: number[];\r\n}\r\n\r\ninterface SelectionCopy {\r\n    partDuration: number;\r\n    channels: ChannelCopy[];\r\n}\r\n\r\nexport class Selection {\r\n    public boxSelectionX0: number = 0;\r\n    public boxSelectionY0: number = 0;\r\n    public boxSelectionX1: number = 0;\r\n    public boxSelectionY1: number = 0;\r\n    public digits: string = \"\";\r\n    public instrumentDigits: string = \"\";\r\n    public patternSelectionStart: number = 0;\r\n    public patternSelectionEnd: number = 0;\r\n    public patternSelectionActive: boolean = false;\r\n\r\n    private _changeTranspose: ChangeGroup | null = null;\r\n    private _changeTrack: ChangeGroup | null = null;\r\n    private _changeInstrument: ChangeGroup | null = null;\r\n    private _changeReorder: ChangeGroup | null = null;\r\n\r\n    constructor(private _doc: SongDocument) { }\r\n\r\n    public toJSON(): { x0: number, x1: number, y0: number, y1: number, start: number, end: number } {\r\n        return {\r\n            \"x0\": this.boxSelectionX0,\r\n            \"x1\": this.boxSelectionX1,\r\n            \"y0\": this.boxSelectionY0,\r\n            \"y1\": this.boxSelectionY1,\r\n            \"start\": this.patternSelectionStart,\r\n            \"end\": this.patternSelectionEnd,\r\n        };\r\n    }\r\n\r\n    public fromJSON(json: { x0: number, x1: number, y0: number, y1: number, start: number, end: number }): void {\r\n        if (json == null) return;\r\n        this.boxSelectionX0 = +json[\"x0\"];\r\n        this.boxSelectionX1 = +json[\"x1\"];\r\n        this.boxSelectionY0 = +json[\"y0\"];\r\n        this.boxSelectionY1 = +json[\"y1\"];\r\n        this.patternSelectionStart = +json[\"start\"];\r\n        this.patternSelectionEnd = +json[\"end\"];\r\n        this.digits = \"\";\r\n        this.instrumentDigits = \"\";\r\n        this.patternSelectionActive = this.patternSelectionStart < this.patternSelectionEnd;\r\n    }\r\n\r\n    public selectionUpdated(): void {\r\n        this._doc.notifier.changed();\r\n        this.digits = \"\";\r\n        this.instrumentDigits = \"\";\r\n    }\r\n\r\n    public get boxSelectionBar(): number {\r\n        return Math.min(this.boxSelectionX0, this.boxSelectionX1);\r\n    }\r\n    public get boxSelectionChannel(): number {\r\n        return Math.min(this.boxSelectionY0, this.boxSelectionY1);\r\n    }\r\n    public get boxSelectionWidth(): number {\r\n        return Math.abs(this.boxSelectionX0 - this.boxSelectionX1) + 1;\r\n    }\r\n    public get boxSelectionHeight(): number {\r\n        return Math.abs(this.boxSelectionY0 - this.boxSelectionY1) + 1;\r\n    }\r\n    public get boxSelectionActive(): boolean {\r\n        return this.boxSelectionWidth > 1 || this.boxSelectionHeight > 1;\r\n    }\r\n    public scrollToSelectedPattern(): void {\r\n        this._doc.barScrollPos = Math.min(this._doc.bar, Math.max(this._doc.bar - (this._doc.trackVisibleBars - 1), this._doc.barScrollPos));\r\n        this._doc.channelScrollPos = Math.min(this._doc.channel, Math.max(this._doc.channel - (this._doc.trackVisibleChannels - 1), this._doc.channelScrollPos));\r\n    }\r\n    public scrollToEndOfSelection(): void {\r\n        this._doc.barScrollPos = Math.min(this.boxSelectionX1, Math.max(this.boxSelectionX1 - (this._doc.trackVisibleBars - 1), this._doc.barScrollPos));\r\n        this._doc.channelScrollPos = Math.min(this.boxSelectionY1, Math.max(this.boxSelectionY1 - (this._doc.trackVisibleChannels - 1), this._doc.channelScrollPos));\r\n    }\r\n\r\n    public setChannelBar(channelIndex: number, bar: number): void {\r\n        if (channelIndex == this._doc.channel && bar == this._doc.bar) return;\r\n        const canReplaceLastChange: boolean = this._doc.lastChangeWas(this._changeTrack);\r\n        this._changeTrack = new ChangeGroup();\r\n        this._changeTrack.append(new ChangeChannelBar(this._doc, channelIndex, bar));\r\n        // @jummbus - changing current viewed instrument to the first for the current pattern if the viewedInstrument is not in the pattern\r\n        const pattern: Pattern | null = this._doc.getCurrentPattern(0);\r\n        if (pattern != null) {\r\n            if (pattern.instruments.indexOf(this._doc.viewedInstrument[this._doc.channel]) < 0) {\r\n                this._doc.viewedInstrument[this._doc.channel] = pattern.instruments[0];\r\n            }\r\n        }\r\n        // Don't erase existing redo history just to look at highlighted pattern.\r\n        if (!this._doc.hasRedoHistory()) {\r\n            this._doc.record(this._changeTrack, canReplaceLastChange);\r\n        }\r\n        this.selectionUpdated();\r\n\r\n    }\r\n\r\n    public setPattern(pattern: number): void {\r\n        this._doc.record(new ChangePatternNumbers(this._doc, pattern, this.boxSelectionBar, this.boxSelectionChannel, this.boxSelectionWidth, this.boxSelectionHeight));\r\n    }\r\n\r\n    public nextDigit(digit: string, forInstrument: boolean, forRhythms: boolean): void {\r\n        if (forRhythms) {\r\n            if (digit == \"3\") {\r\n                this._doc.record(new ChangeRhythm(this._doc, 0));\r\n            }\r\n            else if (digit == \"4\") {\r\n                this._doc.record(new ChangeRhythm(this._doc, 1));\r\n            }\r\n            else if (digit == \"6\") {\r\n                this._doc.record(new ChangeRhythm(this._doc, 2));\r\n            }\r\n            else if (digit == \"8\") {\r\n                this._doc.record(new ChangeRhythm(this._doc, 3));\r\n            }\r\n            else if (digit == \"0\" || digit == \"1\") {\r\n                this._doc.record(new ChangeRhythm(this._doc, 4));\r\n            }\r\n        } else if (forInstrument) {\r\n            // Treat \"0\" as meaning instrument 10\r\n            if (digit == \"0\") digit = \"10\";\r\n            this.instrumentDigits += digit;\r\n            var parsed = parseInt(this.instrumentDigits);\r\n            //var pattern: Pattern | null = this._doc.getCurrentPattern();\r\n           if (parsed != 0 && parsed <= this._doc.song.channels[this._doc.channel].instruments.length) {\r\n                this.selectInstrument(parsed - 1);\r\n                return;\r\n            }\r\n            this.instrumentDigits = digit;\r\n            parsed = parseInt(this.instrumentDigits);\r\n           if (parsed != 0 && parsed <= this._doc.song.channels[this._doc.channel].instruments.length) {\r\n                this.selectInstrument(parsed - 1);\r\n                return;\r\n            }\r\n            this.instrumentDigits = \"\";\r\n        }\r\n        else {\r\n            this.digits += digit;\r\n            let parsed: number = parseInt(this.digits);\r\n            if (parsed <= this._doc.song.patternsPerChannel) {\r\n\r\n                this.setPattern(parsed);\r\n\r\n                return;\r\n            }\r\n\r\n            this.digits = digit;\r\n            parsed = parseInt(this.digits);\r\n            if (parsed <= this._doc.song.patternsPerChannel) {\r\n\r\n                this.setPattern(parsed);\r\n\r\n                return;\r\n            }\r\n\r\n            this.digits = \"\";\r\n        }\r\n    }\r\n\r\n    public setModChannel(mod: number, index: number): void {\r\n        this._doc.record(new ChangeModChannel(this._doc, mod, index));\r\n    }\r\n\r\n    public setModInstrument(mod: number, instrument: number): void {\r\n        this._doc.record(new ChangeModInstrument(this._doc, mod, instrument));\r\n    }\r\n\r\n    public setModSetting(mod: number, text: string): void {\r\n        this._doc.record(new ChangeModSetting(this._doc, mod, text));\r\n    }\r\n\r\n    public setModFilter(mod: number, type: number): void {\r\n        this._doc.record(new ChangeModFilter(this._doc, mod, type));\r\n    }\r\n\r\n    public insertBars(): void {\r\n        this._doc.record(new ChangeInsertBars(this._doc, this.boxSelectionBar + this.boxSelectionWidth, this.boxSelectionWidth));\r\n        const width: number = this.boxSelectionWidth;\r\n        this.boxSelectionX0 += width;\r\n        this.boxSelectionX1 += width;\r\n    }\r\n\r\n    public insertChannel(): void {\r\n        const group: ChangeGroup = new ChangeGroup();\r\n        const insertIndex: number = this.boxSelectionChannel + this.boxSelectionHeight;\r\n        const isNoise: boolean = this._doc.song.getChannelIsNoise(insertIndex - 1);\r\n        const isMod: boolean = this._doc.song.getChannelIsMod(insertIndex - 1)\r\n        group.append(new ChangeAddChannel(this._doc, insertIndex, isNoise, isMod));\r\n        if (!group.isNoop()) {\r\n            this.boxSelectionY0 = this.boxSelectionY1 = insertIndex;\r\n            group.append(new ChangeChannelBar(this._doc, insertIndex, this._doc.bar));\r\n            this._doc.record(group);\r\n        }\r\n    }\r\n\r\n    public deleteBars(): void {\r\n        const group: ChangeGroup = new ChangeGroup();\r\n        if (this._doc.selection.patternSelectionActive) {\r\n\r\n            if (this.boxSelectionActive) {\r\n                group.append(new ChangeDuplicateSelectedReusedPatterns(this._doc, this.boxSelectionBar, this.boxSelectionWidth, this.boxSelectionChannel, this.boxSelectionHeight));\r\n            }\r\n\r\n            for (const channelIndex of this._eachSelectedChannel()) {\r\n                for (const pattern of this._eachSelectedPattern(channelIndex)) {\r\n                    group.append(new ChangeNoteTruncate(this._doc, pattern, this._doc.selection.patternSelectionStart, this._doc.selection.patternSelectionEnd));\r\n                }\r\n            }\r\n            group.append(new ChangePatternSelection(this._doc, 0, 0));\r\n        } else {\r\n            group.append(new ChangeDeleteBars(this._doc, this.boxSelectionBar, this.boxSelectionWidth));\r\n            const width: number = this.boxSelectionWidth;\r\n            this.boxSelectionX0 = Math.max(0, this.boxSelectionX0 - width);\r\n            this.boxSelectionX1 = Math.max(0, this.boxSelectionX1 - width);\r\n        }\r\n        this._doc.record(group);\r\n    }\r\n\r\n    public deleteChannel(): void {\r\n        this._doc.record(new ChangeRemoveChannel(this._doc, this.boxSelectionChannel, this.boxSelectionChannel + this.boxSelectionHeight - 1));\r\n        this.boxSelectionY0 = this.boxSelectionY1 = this._doc.channel;\r\n        ColorConfig.resetColors();\r\n    }\r\n\r\n    private * _eachSelectedChannel(): IterableIterator<number> {\r\n        for (let channelIndex: number = this.boxSelectionChannel; channelIndex < this.boxSelectionChannel + this.boxSelectionHeight; channelIndex++) {\r\n            yield channelIndex;\r\n        }\r\n    }\r\n\r\n    private * _eachSelectedBar(): IterableIterator<number> {\r\n        for (let bar: number = this.boxSelectionBar; bar < this.boxSelectionBar + this.boxSelectionWidth; bar++) {\r\n            yield bar;\r\n        }\r\n    }\r\n\r\n    private *_eachSelectedPattern(channelIndex: number): IterableIterator<Pattern> {\r\n        const handledPatterns: Dictionary<boolean> = {};\r\n        for (const bar of this._eachSelectedBar()) {\r\n            const currentPatternIndex: number = this._doc.song.channels[channelIndex].bars[bar];\r\n            if (currentPatternIndex == 0) continue;\r\n            if (handledPatterns[String(currentPatternIndex)]) continue;\r\n            handledPatterns[String(currentPatternIndex)] = true;\r\n            const pattern: Pattern | null = this._doc.song.getPattern(channelIndex, bar);\r\n            if (pattern == null) throw new Error();\r\n            yield pattern;\r\n        }\r\n    }\r\n\r\n    private _parseCopiedInstrumentArray(patternCopy: any, channelIndex: number): number[] {\r\n        const instruments: number[] = Array.from(patternCopy[\"instruments\"]).map(i => (<any>i) >>> 0);\r\n        discardInvalidPatternInstruments(instruments, this._doc.song, channelIndex);\r\n        return instruments;\r\n    }\r\n\r\n    private _patternIndexIsUnused(channelIndex: number, patternIndex: number): boolean {\r\n        for (let i: number = 0; i < this._doc.song.barCount; i++) {\r\n            if (this._doc.song.channels[channelIndex].bars[i] == patternIndex) {\r\n                return false;\r\n            }\r\n        }\r\n        return true;\r\n    }\r\n\r\n    public copy(): void {\r\n        const channels: ChannelCopy[] = [];\r\n\r\n        for (const channelIndex of this._eachSelectedChannel()) {\r\n            const patterns: Dictionary<PatternCopy> = {};\r\n            const bars: number[] = [];\r\n\r\n            for (const bar of this._eachSelectedBar()) {\r\n                const patternNumber: number = this._doc.song.channels[channelIndex].bars[bar];\r\n                bars.push(patternNumber);\r\n                if (patterns[String(patternNumber)] == undefined) {\r\n                    const pattern: Pattern | null = this._doc.song.getPattern(channelIndex, bar);\r\n                    let instruments: number[] = this._doc.recentPatternInstruments[channelIndex];\r\n                    let notes: Note[] = [];\r\n                    if (pattern != null) {\r\n                        instruments = pattern.instruments.concat();\r\n\r\n                        if (this.patternSelectionActive) {\r\n                            for (const note of pattern.cloneNotes()) {\r\n                                if (note.end <= this.patternSelectionStart) continue;\r\n                                if (note.start >= this.patternSelectionEnd) continue;\r\n                                note.start -= this.patternSelectionStart;\r\n                                note.end -= this.patternSelectionStart;\r\n                                if (note.start < 0 || note.end > this.patternSelectionEnd - this.patternSelectionStart) {\r\n                                    new ChangeNoteLength(null, note, Math.max(note.start, 0), Math.min(this.patternSelectionEnd - this.patternSelectionStart, note.end));\r\n                                }\r\n                                notes.push(note);\r\n                            }\r\n                        } else {\r\n                            notes = pattern.notes;\r\n                        }\r\n                    }\r\n                    patterns[String(patternNumber)] = { \"instruments\": instruments, \"notes\": notes };\r\n                }\r\n            }\r\n\r\n            const channelCopy: ChannelCopy = {\r\n                \"isNoise\": this._doc.song.getChannelIsNoise(channelIndex),\r\n                \"isMod\": this._doc.song.getChannelIsMod(channelIndex),\r\n                \"patterns\": patterns,\r\n                \"bars\": bars,\r\n            };\r\n            channels.push(channelCopy);\r\n        }\r\n\r\n        const selectionCopy: SelectionCopy = {\r\n            \"partDuration\": this.patternSelectionActive ? this.patternSelectionEnd - this.patternSelectionStart : this._doc.song.beatsPerBar * Config.partsPerBeat,\r\n            \"channels\": channels,\r\n        };\r\n        window.localStorage.setItem(\"selectionCopy\", JSON.stringify(selectionCopy));\r\n        // Clear selection after copy\r\n        new ChangePatternSelection(this._doc, 0, 0);\r\n    }\r\n\r\n\t\tprivate _remapToNoisePitches(oldPitches: number[]): number[] {\r\n          let newPitches: number[] = oldPitches.slice();\r\n            // There may be some very \"pleasing\" way to place these,\r\n           // but I'm not sure it's worth the effort.\r\n            newPitches.sort(function (a: number, b: number): number { return a - b; });\r\n            let lowestPitch: number = newPitches[0] % Config.drumCount;\r\n            const numberOfPitches: number = newPitches.length;\r\n            let highestPitch: number = lowestPitch + (numberOfPitches - 1);\r\n            while (highestPitch >= Config.drumCount) {\r\n                lowestPitch--;\r\n                highestPitch--;\r\n            }\r\n            for (let notePitchIndex: number = 0; notePitchIndex < newPitches.length; notePitchIndex++) {\r\n                newPitches[notePitchIndex] = notePitchIndex + lowestPitch;\r\n           }\r\n           return newPitches;\r\n        }\r\n        private _convertCopiedPitchNotesToNoiseNotes(oldNotes: Note[]): Note[] {\r\n            // When pasting from a pitch channel to a noise channel,\r\n            // we may have pitches beyond what a noise channel supports.\r\n            let newNotes: Note[] = [];\r\n            for (let noteIndex: number = 0; noteIndex < oldNotes.length; noteIndex++) {\r\n                const oldNote: Note = oldNotes[noteIndex];\r\n                const newNotePitches: number[] = this._remapToNoisePitches(oldNote[\"pitches\"].slice());\r\n                const oldNotePins: NotePin[] = oldNote.pins;\r\n                let newNotePins: NotePin[] = [];\r\n                for (let notePinIndex: number = 0; notePinIndex < oldNotePins.length; notePinIndex++) {\r\n                    const oldPin: NotePin = oldNotePins[notePinIndex];\r\n                   newNotePins.push({\r\n                       interval: oldPin.interval,\r\n                        time: oldPin.time,\r\n                        size: oldPin.size,\r\n                    });\r\n                }\r\n                const newNoteStart: number = oldNote[\"start\"];\r\n                const newNoteEnd: number = oldNote[\"end\"];\r\n                const newNoteContinuesLastPattern: boolean = oldNote[\"continuesLastPattern\"];\r\n                const newNote = new Note(0, newNoteStart, newNoteEnd, 0, false);\r\n                newNote.pitches = newNotePitches;\r\n                newNote.pins = newNotePins;\r\n                newNote.continuesLastPattern = newNoteContinuesLastPattern;\r\n                newNotes.push(newNote);\r\n            }\r\n            return newNotes;\r\n        }\r\n\t\r\n    // I'm sorry this function is so complicated!\r\n    // Basically I'm trying to avoid accidentally modifying patterns that are used\r\n    // elsewhere in the song (unless we're just pasting a single pattern) but I'm\r\n    // also trying to reuse patterns where it makes sense to do so, especially \r\n    // in the same channel it was copied from.\r\n    public pasteNotes(): void {\r\n        const selectionCopy: SelectionCopy | null = JSON.parse(String(window.localStorage.getItem(\"selectionCopy\")));\r\n        if (selectionCopy == null) return;\r\n        const channelCopies: ChannelCopy[] = selectionCopy[\"channels\"] || [];\r\n        const copiedPartDuration: number = selectionCopy[\"partDuration\"] >>> 0;\r\n\r\n        const group: ChangeGroup = new ChangeGroup();\r\n        const fillSelection: boolean = (this.boxSelectionWidth > 1 || this.boxSelectionHeight > 1);\r\n\r\n        const pasteHeight: number = fillSelection ? this.boxSelectionHeight : Math.min(channelCopies.length, this._doc.song.getChannelCount() - this.boxSelectionChannel);\r\n        for (let pasteChannel: number = 0; pasteChannel < pasteHeight; pasteChannel++) {\r\n            const channelCopy: ChannelCopy = channelCopies[pasteChannel % channelCopies.length];\r\n            const channelIndex: number = this.boxSelectionChannel + pasteChannel;\r\n               const channelIsNoise = this._doc.song.getChannelIsNoise(channelIndex);\r\n\t\t\r\n            const isNoise: boolean = !!channelCopy[\"isNoise\"];\r\n            const isMod: boolean = !!channelCopy[\"isMod\"];\r\n\t\tconst isPitch = !isNoise && !isMod;\r\n            const patternCopies: Dictionary<PatternCopy> = channelCopy[\"patterns\"] || {};\r\n            const copiedBars: number[] = channelCopy[\"bars\"] || [];\r\n            if (copiedBars.length == 0) continue;\r\n\t\t// Allow pasting from a pitch channel to a noise channel (and the opposite).\r\n            if (isNoise && this._doc.song.getChannelIsMod(channelIndex)) continue;\r\n            if (isMod != this._doc.song.getChannelIsMod(channelIndex)) continue;\r\n                // if (isNoise != this._doc.song.getChannelIsNoise(channelIndex))\r\n                //     continue;\r\n\r\n            const pasteWidth: number = fillSelection ? this.boxSelectionWidth : Math.min(copiedBars.length, this._doc.song.barCount - this.boxSelectionBar);\r\n            if (!fillSelection && copiedBars.length == 1 && channelCopies.length == 1) {\r\n                // Special case: if there's just one pattern being copied, try to insert it\r\n                // into whatever pattern is already selected.\r\n                const copiedPatternIndex: number = copiedBars[0] >>> 0;\r\n                const bar: number = this.boxSelectionBar;\r\n                const currentPatternIndex: number = this._doc.song.channels[channelIndex].bars[bar];\r\n                if (copiedPatternIndex == 0 && currentPatternIndex == 0) continue;\r\n\r\n                const patternCopy: PatternCopy = patternCopies[String(copiedPatternIndex)];\r\n\r\n                const instrumentsCopy: number[] = this._parseCopiedInstrumentArray(patternCopy, channelIndex);\r\n\r\n                 let pastedNotes: Note[] = patternCopy[\"notes\"];\r\n                   if (isPitch && channelIsNoise) {\r\n                       pastedNotes = this._convertCopiedPitchNotesToNoiseNotes(pastedNotes);\r\n                    }\r\n\t\t    \r\n                if (currentPatternIndex == 0) {\r\n                    const existingPattern: Pattern | undefined = this._doc.song.channels[channelIndex].patterns[copiedPatternIndex - 1];\r\n                    if (existingPattern != undefined &&\r\n                        !this.patternSelectionActive &&\r\n                        ((comparePatternNotes(pastedNotes, existingPattern.notes) && patternsContainSameInstruments(instrumentsCopy, existingPattern.instruments)) ||\r\n                            this._patternIndexIsUnused(channelIndex, copiedPatternIndex))) {\r\n                        group.append(new ChangePatternNumbers(this._doc, copiedPatternIndex, bar, channelIndex, 1, 1));\r\n                    } else {\r\n                        group.append(new ChangeEnsurePatternExists(this._doc, channelIndex, bar));\r\n                    }\r\n                }\r\n\r\n                const pattern: Pattern | null = this._doc.song.getPattern(channelIndex, bar);\r\n                if (pattern == null) throw new Error();\r\n                group.append(new ChangePaste(this._doc, pattern, pastedNotes, this.patternSelectionActive ? this.patternSelectionStart : 0, this.patternSelectionActive ? this.patternSelectionEnd : Config.partsPerBeat * this._doc.song.beatsPerBar, copiedPartDuration));\r\n                // @jummbus - I actually like it better if instruments copy over, unless it's not a mod and there are notes in the pattern.\r\n                if (currentPatternIndex == 0 || patternCopy.notes.length == 0 || channelIndex >= this._doc.song.pitchChannelCount + this._doc.song.noiseChannelCount) {\r\n                    this.selectInstrument(instrumentsCopy[0]);\r\n                    group.append(new ChangeSetPatternInstruments(this._doc, channelIndex, instrumentsCopy, pattern));\r\n                }\r\n            } else if (this.patternSelectionActive) {\r\n                const reusablePatterns: Dictionary<number> = {};\r\n                const usedPatterns: Dictionary<boolean> = {};\r\n\r\n                group.append(new ChangeDuplicateSelectedReusedPatterns(this._doc, this.boxSelectionBar, pasteWidth, this.boxSelectionChannel, pasteHeight));\r\n\r\n                for (let pasteBar: number = 0; pasteBar < pasteWidth; pasteBar++) {\r\n                    const bar: number = this.boxSelectionBar + pasteBar;\r\n                    const copiedPatternIndex: number = copiedBars[pasteBar % copiedBars.length] >>> 0;\r\n                    const currentPatternIndex: number = this._doc.song.channels[channelIndex].bars[bar];\r\n                    const reusedIndex: string = [copiedPatternIndex, currentPatternIndex].join(\",\");\r\n                    if (copiedPatternIndex == 0 && currentPatternIndex == 0) continue;\r\n                    if (reusablePatterns[reusedIndex] != undefined) {\r\n                        group.append(new ChangePatternNumbers(this._doc, reusablePatterns[reusedIndex], bar, channelIndex, 1, 1));\r\n                        continue;\r\n                    }\r\n\r\n                    if (currentPatternIndex == 0) {\r\n                        group.append(new ChangeEnsurePatternExists(this._doc, channelIndex, bar));\r\n                        const patternCopy: PatternCopy = patternCopies[String(copiedPatternIndex)];\r\n                        const instrumentsCopy: number[] = this._parseCopiedInstrumentArray(patternCopy, channelIndex);\r\n                        const pattern: Pattern = this._doc.song.getPattern(channelIndex, bar)!;\r\n                        group.append(new ChangeSetPatternInstruments(this._doc, channelIndex, instrumentsCopy, pattern));\r\n                    } else {\r\n                        const pattern: Pattern | null = this._doc.song.getPattern(channelIndex, bar);\r\n                        if (pattern == null) throw new Error();\r\n\r\n                        if (!usedPatterns[String(currentPatternIndex)]) {\r\n                            usedPatterns[String(currentPatternIndex)] = true;\r\n                        } else {\r\n                            // If this pattern is used here and elsewhere, it's not safe to modify it directly, so\r\n                            // make a duplicate of it and modify that instead.\r\n                            group.append(new ChangePatternNumbers(this._doc, 0, bar, channelIndex, 1, 1));\r\n                            group.append(new ChangeEnsurePatternExists(this._doc, channelIndex, bar));\r\n                            const newPattern: Pattern | null = this._doc.song.getPattern(channelIndex, bar);\r\n                            if (newPattern == null) throw new Error();\r\n                            for (const note of pattern.cloneNotes()) {\r\n                                   if (isPitch && channelIsNoise) {\r\n                                        note.pitches = this._remapToNoisePitches(note.pitches);\r\n                                    }\r\n\t\t\t\t    group.append(new ChangeNoteAdded(this._doc, newPattern, note, newPattern.notes.length, false));\r\n                            }\r\n                            // Don't overwrite the existing pattern's instruments if only part of the pattern content is being replaced.\r\n                            //group.append(new ChangeSetPatternInstruments(this._doc, channelIndex, pattern.instruments, newPattern));\r\n                        }\r\n                    }\r\n\r\n                    const pattern: Pattern | null = this._doc.song.getPattern(channelIndex, bar);\r\n                    if (pattern == null) throw new Error();\r\n                    if (copiedPatternIndex == 0) {\r\n                        group.append(new ChangeNoteTruncate(this._doc, pattern, this.patternSelectionStart, this.patternSelectionEnd));\r\n                    } else {\r\n                        const patternCopy: PatternCopy = patternCopies[String(copiedPatternIndex)];\r\n                        let pastedNotes: Note[] = patternCopy[\"notes\"];\r\n                        if (isPitch && channelIsNoise) {\r\n                            pastedNotes = this._convertCopiedPitchNotesToNoiseNotes(pastedNotes);\r\n                        }\r\n                        group.append(new ChangePaste(this._doc, pattern, pastedNotes, this.patternSelectionStart, this.patternSelectionEnd, copiedPartDuration));\r\n                    }\r\n\r\n                    reusablePatterns[reusedIndex] = this._doc.song.channels[channelIndex].bars[bar];\r\n                }\r\n            } else {\r\n                for (let pasteBar: number = 0; pasteBar < pasteWidth; pasteBar++) {\r\n                    // When a pattern becomes unused when replaced by rectangular selection pasting,\r\n                    // remove all the notes from the pattern so that it may be reused.\r\n                    this.erasePatternInBar(group, channelIndex, this.boxSelectionBar + pasteBar);\r\n                }\r\n\r\n                const reusablePatterns: Dictionary<number> = {};\r\n                for (let pasteBar: number = 0; pasteBar < pasteWidth; pasteBar++) {\r\n                    const bar: number = this.boxSelectionBar + pasteBar;\r\n                    const copiedPatternIndex: number = copiedBars[pasteBar % copiedBars.length] >>> 0;\r\n                    const reusedIndex: string = String(copiedPatternIndex);\r\n                    if (copiedPatternIndex == 0) continue;\r\n                    if (reusablePatterns[reusedIndex] != undefined) {\r\n                        group.append(new ChangePatternNumbers(this._doc, reusablePatterns[reusedIndex], bar, channelIndex, 1, 1));\r\n                        continue;\r\n                    }\r\n                    const patternCopy: PatternCopy = patternCopies[String(copiedPatternIndex)];\r\n                    const instrumentsCopy: number[] = this._parseCopiedInstrumentArray(patternCopy, channelIndex);\r\n                    const existingPattern: Pattern | undefined = this._doc.song.channels[channelIndex].patterns[copiedPatternIndex - 1];\r\n\r\n                 let pastedNotes: Note[] = patternCopy[\"notes\"];\r\n                        if (isPitch && channelIsNoise) {\r\n                            pastedNotes = this._convertCopiedPitchNotesToNoiseNotes(pastedNotes);\r\n                        }\r\n\t\t\t\r\n\t\tif (existingPattern != undefined &&\r\n                        copiedPartDuration == Config.partsPerBeat * this._doc.song.beatsPerBar &&\r\n                        comparePatternNotes(pastedNotes, existingPattern.notes) &&\r\n                        patternsContainSameInstruments(instrumentsCopy, existingPattern.instruments)) {\r\n                        group.append(new ChangePatternNumbers(this._doc, copiedPatternIndex, bar, channelIndex, 1, 1));\r\n                    } else {\r\n                        if (existingPattern != undefined && this._patternIndexIsUnused(channelIndex, copiedPatternIndex)) {\r\n                            group.append(new ChangePatternNumbers(this._doc, copiedPatternIndex, bar, channelIndex, 1, 1));\r\n                        } else {\r\n                            group.append(new ChangeEnsurePatternExists(this._doc, channelIndex, bar));\r\n                        }\r\n                        const pattern: Pattern | null = this._doc.song.getPattern(channelIndex, bar);\r\n                        if (pattern == null) throw new Error();\r\n                        group.append(new ChangePaste(this._doc, pattern, pastedNotes, this.patternSelectionActive ? this.patternSelectionStart : 0, this.patternSelectionActive ? this.patternSelectionEnd : Config.partsPerBeat * this._doc.song.beatsPerBar, copiedPartDuration));\r\n                        group.append(new ChangeSetPatternInstruments(this._doc, channelIndex, instrumentsCopy, pattern));\r\n                    }\r\n\r\n                    reusablePatterns[reusedIndex] = this._doc.song.channels[channelIndex].bars[bar];\r\n\r\n                }\r\n            }\r\n        }\r\n\r\n        this._doc.record(group);\r\n    }\r\n\r\n    // Set a bar's pattern number to zero, and if that pattern was not used\r\n    // elsewhere in the channel, erase all notes in it as well.\r\n    public erasePatternInBar(group: ChangeGroup, channelIndex: number, bar: number): void {\r\n        const removedPattern: number = this._doc.song.channels[channelIndex].bars[bar];\r\n        if (removedPattern != 0) {\r\n            group.append(new ChangePatternNumbers(this._doc, 0, bar, channelIndex, 1, 1));\r\n            if (this._patternIndexIsUnused(channelIndex, removedPattern)) {\r\n                // When a pattern becomes unused when replaced by rectangular selection pasting,\r\n                // remove all the notes from the pattern so that it may be reused.\r\n                this._doc.song.channels[channelIndex].patterns[removedPattern - 1].notes.length = 0;\r\n            }\r\n        }\r\n    }\r\n\r\n    public pasteNumbers(): void {\r\n        const selectionCopy: SelectionCopy | null = JSON.parse(String(window.localStorage.getItem(\"selectionCopy\")));\r\n        if (selectionCopy == null) return;\r\n        const channelCopies: ChannelCopy[] = selectionCopy[\"channels\"] || [];\r\n\r\n        const group: ChangeGroup = new ChangeGroup();\r\n        const fillSelection: boolean = this.boxSelectionActive;\r\n\r\n        const pasteHeight: number = fillSelection ? this.boxSelectionHeight : Math.min(channelCopies.length, this._doc.song.getChannelCount() - this.boxSelectionChannel);\r\n        for (let pasteChannel: number = 0; pasteChannel < pasteHeight; pasteChannel++) {\r\n            const channelCopy: ChannelCopy = channelCopies[pasteChannel % channelCopies.length];\r\n            const channelIndex: number = this.boxSelectionChannel + pasteChannel;\r\n\r\n            const copiedBars: number[] = channelCopy[\"bars\"] || [];\r\n            if (copiedBars.length == 0) continue;\r\n\r\n            const pasteWidth: number = fillSelection ? this.boxSelectionWidth : Math.min(copiedBars.length, this._doc.song.barCount - this.boxSelectionBar);\r\n            for (let pasteBar: number = 0; pasteBar < pasteWidth; pasteBar++) {\r\n                const copiedPatternIndex: number = copiedBars[pasteBar % copiedBars.length] >>> 0;\r\n                const bar: number = this.boxSelectionBar + pasteBar;\r\n\r\n                if (copiedPatternIndex > this._doc.song.patternsPerChannel) {\r\n                    group.append(new ChangePatternsPerChannel(this._doc, copiedPatternIndex));\r\n                }\r\n\r\n                group.append(new ChangePatternNumbers(this._doc, copiedPatternIndex, bar, channelIndex, 1, 1));\r\n            }\r\n        }\r\n\r\n        this._doc.record(group);\r\n    }\r\n\r\n    public selectAll(): void {\r\n        new ChangePatternSelection(this._doc, 0, 0);\r\n        if (this.boxSelectionBar == 0 &&\r\n            this.boxSelectionChannel == 0 &&\r\n            this.boxSelectionWidth == this._doc.song.barCount &&\r\n            this.boxSelectionHeight == this._doc.song.getChannelCount()) {\r\n            this.setTrackSelection(this._doc.bar, this._doc.bar, this._doc.channel, this._doc.channel);\r\n        } else {\r\n            this.setTrackSelection(0, this._doc.song.barCount - 1, 0, this._doc.song.getChannelCount() - 1);\r\n        }\r\n        this.selectionUpdated();\r\n    }\r\n\r\n    public selectChannel(): void {\r\n        new ChangePatternSelection(this._doc, 0, 0);\r\n        if (this.boxSelectionBar == 0 && this.boxSelectionWidth == this._doc.song.barCount) {\r\n            this.setTrackSelection(this._doc.bar, this._doc.bar, this.boxSelectionY0, this.boxSelectionY1);\r\n        } else {\r\n            this.setTrackSelection(0, this._doc.song.barCount - 1, this.boxSelectionY0, this.boxSelectionY1);\r\n        }\r\n        this.selectionUpdated();\r\n    }\r\n\r\n    public duplicatePatterns(): void {\r\n        this._doc.record(new ChangeDuplicateSelectedReusedPatterns(this._doc, this.boxSelectionBar, this.boxSelectionWidth, this.boxSelectionChannel, this.boxSelectionHeight));\r\n    }\r\n\r\n    public muteChannels(allChannels: boolean): void {\r\n        if (allChannels) {\r\n            let anyMuted: boolean = false;\r\n            for (let channelIndex: number = 0; channelIndex < this._doc.song.channels.length; channelIndex++) {\r\n                if (this._doc.song.channels[channelIndex].muted) {\r\n                    anyMuted = true;\r\n                    break;\r\n                }\r\n            }\r\n            for (let channelIndex: number = 0; channelIndex < this._doc.song.channels.length; channelIndex++) {\r\n                this._doc.song.channels[channelIndex].muted = !anyMuted;\r\n            }\r\n        } else {\r\n            let anyUnmuted: boolean = false;\r\n            for (const channelIndex of this._eachSelectedChannel()) {\r\n                if (!this._doc.song.channels[channelIndex].muted) {\r\n                    anyUnmuted = true;\r\n                    break;\r\n                }\r\n            }\r\n            for (const channelIndex of this._eachSelectedChannel()) {\r\n                this._doc.song.channels[channelIndex].muted = anyUnmuted;\r\n            }\r\n        }\r\n\r\n        this._doc.notifier.changed();\r\n    }\r\n\r\n    public soloChannels(invert: boolean): void {\r\n        let alreadySoloed: boolean = true;\r\n\r\n        // Soloing mod channels - solo all channels affected by the mod, instead\r\n        if (this.boxSelectionChannel >= this._doc.song.pitchChannelCount + this._doc.song.noiseChannelCount) {\r\n\r\n            const currentChannel = this._doc.song.channels[this.boxSelectionChannel];\r\n            const bar: number = currentChannel.bars[this._doc.bar] - 1;\r\n            const modInstrument = (bar >= 0) ? currentChannel.instruments[currentChannel.patterns[bar].instruments[0]] : currentChannel.instruments[this._doc.viewedInstrument[this.boxSelectionChannel]];\r\n            const soloPattern: boolean[] = [];\r\n            let matchesSoloPattern: boolean = !invert;\r\n\r\n            // First pass: determine solo pattern\r\n            for (let channelIndex: number = 0; channelIndex < this._doc.song.pitchChannelCount + this._doc.song.noiseChannelCount; channelIndex++) {\r\n                soloPattern[channelIndex] = false;\r\n                for (let mod: number = 0; mod < Config.modCount; mod++) {\r\n                    if (modInstrument.modChannels[mod] == channelIndex) {\r\n                        soloPattern[channelIndex] = true;\r\n                    }\r\n                }\r\n            }\r\n\r\n            // Second pass: determine if channels match solo pattern, overall\r\n            for (let channelIndex: number = 0; channelIndex < this._doc.song.pitchChannelCount + this._doc.song.noiseChannelCount; channelIndex++) {\r\n                if (this._doc.song.channels[channelIndex].muted == soloPattern[channelIndex]) {\r\n                    matchesSoloPattern = invert;\r\n                    break;\r\n                }\r\n            }\r\n\r\n            // Third pass: Actually apply solo pattern or unmute all\r\n            for (let channelIndex: number = 0; channelIndex < this._doc.song.pitchChannelCount + this._doc.song.noiseChannelCount; channelIndex++) {\r\n                if (matchesSoloPattern) {\r\n                    this._doc.song.channels[channelIndex].muted = false;\r\n                }\r\n                else {\r\n                    this._doc.song.channels[channelIndex].muted = !soloPattern[channelIndex];\r\n                }\r\n            }\r\n\r\n        }\r\n        else {\r\n\r\n            for (let channelIndex: number = 0; channelIndex < this._doc.song.pitchChannelCount + this._doc.song.noiseChannelCount; channelIndex++) {\r\n                const shouldBeMuted: boolean = (channelIndex < this.boxSelectionChannel || channelIndex >= this.boxSelectionChannel + this.boxSelectionHeight) ? !invert : invert;\r\n                if (this._doc.song.channels[channelIndex].muted != shouldBeMuted) {\r\n                    alreadySoloed = false;\r\n                    break;\r\n                }\r\n            }\r\n\r\n            if (alreadySoloed) {\r\n                for (let channelIndex: number = 0; channelIndex < this._doc.song.channels.length; channelIndex++) {\r\n                    this._doc.song.channels[channelIndex].muted = false;\r\n                }\r\n            } else {\r\n                for (let channelIndex: number = 0; channelIndex < this._doc.song.pitchChannelCount + this._doc.song.noiseChannelCount; channelIndex++) {\r\n                    this._doc.song.channels[channelIndex].muted = (channelIndex < this.boxSelectionChannel || channelIndex >= this.boxSelectionChannel + this.boxSelectionHeight) ? !invert : invert;\r\n                }\r\n            }\r\n\r\n        }\r\n\r\n        this._doc.notifier.changed();\r\n    }\r\n\r\n    public forceRhythm(): void {\r\n        const group: ChangeGroup = new ChangeGroup();\r\n\r\n        if (this.boxSelectionActive) {\r\n\t\t    group.append(new ChangeDuplicateSelectedReusedPatterns(this._doc, this.boxSelectionBar, this.boxSelectionWidth, this.boxSelectionChannel, this.boxSelectionHeight));\r\n        }\r\n\r\n        for (const channelIndex of this._eachSelectedChannel()) {\r\n            for (const pattern of this._eachSelectedPattern(channelIndex)) {\r\n                group.append(new ChangePatternRhythm(this._doc, pattern));\r\n            }\r\n        }\r\n\r\n        this._doc.record(group);\r\n    }\r\n\r\n    public forceScale(): void {\r\n        const group: ChangeGroup = new ChangeGroup();\r\n\r\n        if (this.boxSelectionActive) {\r\n\t\t    group.append(new ChangeDuplicateSelectedReusedPatterns(this._doc, this.boxSelectionBar, this.boxSelectionWidth, this.boxSelectionChannel, this.boxSelectionHeight));\r\n        }\r\n\r\n        const scaleFlags: boolean[] = [true, false, false, false, false, false, false, false, false, false, false, false];\r\n        for (const channelIndex of this._eachSelectedChannel()) {\r\n            if (this._doc.song.getChannelIsNoise(channelIndex) || this._doc.song.getChannelIsMod(channelIndex)) continue;\r\n            for (const pattern of this._eachSelectedPattern(channelIndex)) {\r\n                unionOfUsedNotes(pattern, scaleFlags);\r\n            }\r\n        }\r\n\r\n        const scaleMap: number[] = generateScaleMap(scaleFlags, this._doc.song.scale, this._doc.song.scaleCustom);\r\n\r\n        for (const channelIndex of this._eachSelectedChannel()) {\r\n            if (this._doc.song.getChannelIsNoise(channelIndex) || this._doc.song.getChannelIsMod(channelIndex)) continue;\r\n            for (const pattern of this._eachSelectedPattern(channelIndex)) {\r\n                group.append(new ChangePatternScale(this._doc, pattern, scaleMap));\r\n            }\r\n        }\r\n\r\n        this._doc.record(group);\r\n    }\r\n\r\n    public setTrackSelection(newX0: number, newX1: number, newY0: number, newY1: number): void {\r\n        const canReplaceLastChange: boolean = true;//this._doc.lastChangeWas(this._changeTrack);\r\n        this._changeTrack = new ChangeGroup();\r\n        this._changeTrack.append(new ChangeTrackSelection(this._doc, newX0, newX1, newY0, newY1));\r\n        this._doc.record(this._changeTrack, canReplaceLastChange);\r\n    }\r\n\r\n    public transpose(upward: boolean, octave: boolean): void {\r\n        const canReplaceLastChange: boolean = this._doc.lastChangeWas(this._changeTranspose);\r\n        this._changeTranspose = new ChangeGroup();\r\n\r\n        if (this.boxSelectionActive) {\r\n\t\t    this._changeTranspose.append(new ChangeDuplicateSelectedReusedPatterns(this._doc, this.boxSelectionBar, this.boxSelectionWidth, this.boxSelectionChannel, this.boxSelectionHeight));\r\n        }\r\n\r\n        for (const channelIndex of this._eachSelectedChannel()) {\r\n\t\t    // Can't transpose mod channels.\r\n\t\t    if (channelIndex >= this._doc.song.pitchChannelCount + this._doc.song.noiseChannelCount)\r\n                continue;\r\n            for (const pattern of this._eachSelectedPattern(channelIndex)) {\r\n                this._changeTranspose.append(new ChangeTranspose(this._doc, channelIndex, pattern, upward, this._doc.prefs.notesOutsideScale, octave));\r\n\t\t\t}\r\n        }\r\n\r\n        this._doc.record(this._changeTranspose, canReplaceLastChange);\r\n    }\r\n\r\n    public swapChannels(offset: number): void {\r\n        const possibleSectionBoundaries: number[] = [\r\n            this._doc.song.pitchChannelCount,\r\n            this._doc.song.pitchChannelCount + this._doc.song.noiseChannelCount,\r\n            this._doc.song.pitchChannelCount + this._doc.song.noiseChannelCount + this._doc.song.modChannelCount,\r\n            this._doc.song.getChannelCount(),\r\n        ];\r\n        let channelSectionMin: number = 0;\r\n        let channelSectionMax: number = 0;\r\n        for (const nextBoundary of possibleSectionBoundaries) {\r\n            if ((this.boxSelectionChannel < nextBoundary && offset < 0) || (this.boxSelectionChannel + this.boxSelectionHeight <= nextBoundary)) {\r\n                channelSectionMax = nextBoundary - 1;\r\n                break;\r\n            }\r\n            channelSectionMin = nextBoundary;\r\n        }\r\n        const newSelectionMin: number = Math.max(this.boxSelectionChannel, channelSectionMin);\r\n        const newSelectionMax: number = Math.min(this.boxSelectionChannel + this.boxSelectionHeight - 1, channelSectionMax);\r\n        offset = Math.max(offset, channelSectionMin - newSelectionMin);\r\n        offset = Math.min(offset, channelSectionMax - newSelectionMax);\r\n\r\n        if (offset != 0) {\r\n            const canReplaceLastChange: boolean = this._doc.lastChangeWas(this._changeReorder);\r\n            this._changeReorder = new ChangeGroup();\r\n            this.boxSelectionY0 = newSelectionMin + offset;\r\n            this.boxSelectionY1 = newSelectionMax + offset;\r\n            this._changeReorder.append(new ChangeChannelOrder(this._doc, newSelectionMin, newSelectionMax, offset));\r\n            this._changeReorder.append(new ChangeChannelBar(this._doc, Math.max(this.boxSelectionY0, Math.min(this.boxSelectionY1, this._doc.channel + offset)), this._doc.bar));\r\n            this.selectionUpdated();\r\n            this._doc.record(this._changeReorder, canReplaceLastChange);\r\n        }\r\n    }\r\n\r\n    public selectInstrument(instrument: number): void {\r\n        if (this._doc.viewedInstrument[this._doc.channel] == instrument) {\r\n            // Multi-selection is not possible for mods... that would not make much sense.\r\n            if (this._doc.song.layeredInstruments && this._doc.song.patternInstruments && this._doc.channel < this._doc.song.pitchChannelCount + this._doc.song.noiseChannelCount) {\r\n                const canReplaceLastChange: boolean = this._doc.lastChangeWas(this._changeInstrument);\r\n                this._changeInstrument = new ChangeGroup();\r\n                const instruments: number[] = this._doc.recentPatternInstruments[this._doc.channel];\r\n                if (instruments.indexOf(instrument) == -1) {\r\n                    instruments.push(instrument);\r\n                    const maxLayers: number = this._doc.song.getMaxInstrumentsPerPattern(this._doc.channel);\r\n                    if (instruments.length > maxLayers) {\r\n                        instruments.splice(0, instruments.length - maxLayers);\r\n                    }\r\n                } else {\r\n                    instruments.splice(instruments.indexOf(instrument), 1);\r\n                    if (instruments.length == 0) instruments[0] = 0;\r\n                }\r\n\r\n                if (this.boxSelectionActive) {\r\n                    this._changeInstrument.append(new ChangeDuplicateSelectedReusedPatterns(this._doc, this.boxSelectionBar, this.boxSelectionWidth, this.boxSelectionChannel, this.boxSelectionHeight));\r\n                }\r\n                for (const channelIndex of this._eachSelectedChannel()) {\r\n                    for (const pattern of this._eachSelectedPattern(channelIndex)) {\r\n                        this._changeInstrument.append(new ChangeSetPatternInstruments(this._doc, channelIndex, instruments, pattern));\r\n                    }\r\n                }\r\n                if (!this._changeInstrument.isNoop())\r\n\t\t    this._doc.record(this._changeInstrument, canReplaceLastChange);\r\n            }\r\n        } else {\r\n            const canReplaceLastChange: boolean = this._doc.lastChangeWas(this._changeInstrument);\r\n            this._changeInstrument = new ChangeGroup();\r\n            this._changeInstrument.append(new ChangeViewInstrument(this._doc, instrument));\r\n\r\n            if (!(this._doc.song.layeredInstruments && this._doc.channel < this._doc.song.pitchChannelCount + this._doc.song.noiseChannelCount) && this._doc.song.patternInstruments) {\r\n                if (this.boxSelectionActive) {\r\n                    this._changeInstrument.append(new ChangeDuplicateSelectedReusedPatterns(this._doc, this.boxSelectionBar, this.boxSelectionWidth, this.boxSelectionChannel, this.boxSelectionHeight));\r\n                }\r\n                const instruments: number[] = [instrument];\r\n                for (const channelIndex of this._eachSelectedChannel()) {\r\n                    for (const pattern of this._eachSelectedPattern(channelIndex)) {\r\n                        this._changeInstrument.append(new ChangeSetPatternInstruments(this._doc, channelIndex, instruments, pattern));\r\n                    }\r\n                }\r\n                this._doc.record(this._changeInstrument, canReplaceLastChange);\r\n            } else if (!this._doc.hasRedoHistory()) {\r\n                // Don't erase existing redo history just to look at highlighted pattern.\r\n                this._doc.record(this._changeInstrument, canReplaceLastChange);\r\n            }\r\n        }\r\n    }\r\n\r\n    public resetBoxSelection(): void {\r\n        this.boxSelectionX0 = this.boxSelectionX1 = this._doc.bar;\r\n        this.boxSelectionY0 = this.boxSelectionY1 = this._doc.channel;\r\n    }\r\n}\r\n","// Copyright (c) 2012-2022 John Nesky and contributing authors, distributed under the MIT license, see accompanying the LICENSE.md file.\r\n\r\nimport {Scale, Config} from \"../synth/SynthConfig\";\r\n\r\nexport class Preferences {\r\n\tpublic static readonly defaultVisibleOctaves: number = 3;\r\n\t\r\n\tpublic customTheme: string | null;\r\n\tpublic customTheme2: string | null;\r\n\tpublic autoPlay: boolean;\r\n\tpublic autoFollow: boolean;\r\n\tpublic enableNotePreview: boolean;\r\n\tpublic showFifth: boolean;\r\n\tpublic notesOutsideScale: boolean;\r\n\tpublic defaultScale: number;\r\n\tpublic showLetters: boolean;\r\n\tpublic showChannels: boolean;\r\n\tpublic showScrollBar: boolean;\r\n\tpublic alwaysFineNoteVol: boolean;\r\n\tpublic displayVolumeBar: boolean;\r\n\tpublic instrumentCopyPaste: boolean;\r\n\tpublic enableChannelMuting: boolean;\r\n\tpublic colorTheme: string;\r\n\tpublic layout: string;\r\n\tpublic displayBrowserUrl: boolean;\r\n\tpublic volume: number = 75;\r\n\tpublic visibleOctaves: number = Preferences.defaultVisibleOctaves;\r\n\tpublic pressControlForShortcuts: boolean;\r\n\tpublic keyboardLayout: string;\r\n\tpublic enableMidi: boolean;\r\n\tpublic showRecordButton: boolean;\r\n\tpublic snapRecordedNotesToRhythm: boolean;\r\n\tpublic ignorePerformedNotesNotInScale: boolean;\r\n\tpublic metronomeCountIn: boolean;\r\n\tpublic metronomeWhileRecording: boolean;\r\n\tpublic showOscilloscope: boolean;\r\n\tpublic showSampleLoadingStatus: boolean;\r\n\t\r\n\tconstructor() {\r\n\t\tthis.reload();\r\n\t}\r\n\t\r\n\tpublic reload(): void {\r\n\t\tthis.autoPlay = window.localStorage.getItem(\"autoPlay\") == \"true\";\r\n\t\tthis.autoFollow = window.localStorage.getItem(\"autoFollow\") != \"false\";\r\n\t\tthis.enableNotePreview = window.localStorage.getItem(\"enableNotePreview\") != \"false\";\r\n\t\tthis.showFifth = window.localStorage.getItem(\"showFifth\") == \"true\";\r\n\t\tthis.notesOutsideScale = window.localStorage.getItem(\"notesOutsideScale\") == \"true\";\r\n\t\tthis.showLetters = window.localStorage.getItem(\"showLetters\") == \"true\";\r\n\t\tthis.showChannels = window.localStorage.getItem(\"showChannels\") == \"true\";\r\n\t\tthis.showScrollBar = window.localStorage.getItem(\"showScrollBar\") == \"true\";\r\n\t\tthis.alwaysFineNoteVol = window.localStorage.getItem(\"alwaysFineNoteVol\") == \"true\";\r\n\t\tthis.displayVolumeBar = window.localStorage.getItem(\"displayVolumeBar\") == \"true\";\r\n\t\tthis.instrumentCopyPaste = window.localStorage.getItem(\"instrumentCopyPaste\") == \"true\";\r\n\t\tthis.enableChannelMuting = window.localStorage.getItem(\"enableChannelMuting\") == \"true\";\r\n\t\tthis.displayBrowserUrl = window.localStorage.getItem(\"displayBrowserUrl\") != \"false\";\r\n\t\tthis.pressControlForShortcuts = window.localStorage.getItem(\"pressControlForShortcuts\") == \"true\";\r\n\t\tthis.enableMidi = window.localStorage.getItem(\"enableMidi\") != \"false\";\r\n\t\tthis.showRecordButton = window.localStorage.getItem(\"showRecordButton\") == \"true\";\r\n\t\tthis.snapRecordedNotesToRhythm = window.localStorage.getItem(\"snapRecordedNotesToRhythm\") == \"true\";\r\n\t\tthis.ignorePerformedNotesNotInScale = window.localStorage.getItem(\"ignorePerformedNotesNotInScale\") == \"true\";\r\n\t\tthis.metronomeCountIn = window.localStorage.getItem(\"metronomeCountIn\") != \"false\";\r\n\t\tthis.metronomeWhileRecording = window.localStorage.getItem(\"metronomeWhileRecording\") != \"false\";\r\n\t\tthis.showOscilloscope = window.localStorage.getItem(\"showOscilloscope\") != \"false\";\r\n\t\tthis.showSampleLoadingStatus = window.localStorage.getItem(\"showSampleLoadingStatus\") != \"false\";\r\n\t\tthis.keyboardLayout = window.localStorage.getItem(\"keyboardLayout\") || \"wickiHayden\";\r\n\t\tthis.layout = window.localStorage.getItem(\"layout\") || \"small\";\r\n\t\tthis.colorTheme = window.localStorage.getItem(\"colorTheme\") || \"dark classic\";\r\n\t\tthis.customTheme = window.localStorage.getItem(\"customTheme\");\r\n                this.customTheme2 = window.localStorage.getItem(\"customTheme2\");\r\n\t\tthis.visibleOctaves = ((<any>window.localStorage.getItem(\"visibleOctaves\")) >>> 0) || Preferences.defaultVisibleOctaves;\r\n\t\t\r\n\t\tconst defaultScale: Scale | undefined = Config.scales.dictionary[window.localStorage.getItem(\"defaultScale\")!];\r\n\t\tthis.defaultScale = (defaultScale != undefined) ? defaultScale.index : 0;\r\n\t\t\r\n\t\tif (window.localStorage.getItem(\"volume\") != null) {\r\n\t\t\tthis.volume = Math.min(<any>window.localStorage.getItem(\"volume\") >>> 0, 75);\r\n\t\t}\r\n\t\t\r\n\t\tif (window.localStorage.getItem(\"fullScreen\") != null) {\r\n\t\t\tif (window.localStorage.getItem(\"fullScreen\") == \"true\") this.layout = \"long\";\r\n\t\t\twindow.localStorage.removeItem(\"fullScreen\");\r\n\t\t}\r\n\t}\r\n\t\r\n\tpublic save(): void {\r\n\t\twindow.localStorage.setItem(\"autoPlay\", this.autoPlay ? \"true\" : \"false\");\r\n\t\twindow.localStorage.setItem(\"autoFollow\", this.autoFollow ? \"true\" : \"false\");\r\n\t\twindow.localStorage.setItem(\"enableNotePreview\", this.enableNotePreview ? \"true\" : \"false\");\r\n\t\twindow.localStorage.setItem(\"showFifth\", this.showFifth ? \"true\" : \"false\");\r\n\t\twindow.localStorage.setItem(\"notesOutsideScale\", this.notesOutsideScale ? \"true\" : \"false\");\r\n\t\twindow.localStorage.setItem(\"defaultScale\", Config.scales[this.defaultScale].name);\r\n\t\twindow.localStorage.setItem(\"showLetters\", this.showLetters ? \"true\" : \"false\");\r\n\t\twindow.localStorage.setItem(\"showChannels\", this.showChannels ? \"true\" : \"false\");\r\n\t\twindow.localStorage.setItem(\"showScrollBar\", this.showScrollBar ? \"true\" : \"false\");\r\n\t\twindow.localStorage.setItem(\"alwaysFineNoteVol\", this.alwaysFineNoteVol ? \"true\" : \"false\");\r\n\t\twindow.localStorage.setItem(\"displayVolumeBar\", this.displayVolumeBar ? \"true\" : \"false\");\r\n\t\twindow.localStorage.setItem(\"enableChannelMuting\", this.enableChannelMuting ? \"true\" : \"false\");\r\n\t\twindow.localStorage.setItem(\"instrumentCopyPaste\", this.instrumentCopyPaste ? \"true\" : \"false\");\r\n\t\twindow.localStorage.setItem(\"displayBrowserUrl\", this.displayBrowserUrl ? \"true\" : \"false\");\r\n\t\twindow.localStorage.setItem(\"pressControlForShortcuts\", this.pressControlForShortcuts ? \"true\" : \"false\");\r\n\t\twindow.localStorage.setItem(\"enableMidi\", this.enableMidi ? \"true\" : \"false\");\r\n\t\twindow.localStorage.setItem(\"showRecordButton\", this.showRecordButton ? \"true\" : \"false\");\r\n\t\twindow.localStorage.setItem(\"snapRecordedNotesToRhythm\", this.snapRecordedNotesToRhythm ? \"true\" : \"false\");\r\n\t\twindow.localStorage.setItem(\"ignorePerformedNotesNotInScale\", this.ignorePerformedNotesNotInScale ? \"true\" : \"false\");\r\n\t\twindow.localStorage.setItem(\"metronomeCountIn\", this.metronomeCountIn ? \"true\" : \"false\");\r\n\t\twindow.localStorage.setItem(\"metronomeWhileRecording\", this.metronomeWhileRecording ? \"true\" : \"false\");\r\n\t\twindow.localStorage.setItem(\"showOscilloscope\", this.showOscilloscope ? \"true\" : \"false\");\r\n\t\twindow.localStorage.setItem(\"showSampleLoadingStatus\", this.showSampleLoadingStatus ? \"true\" : \"false\");\r\n\t\twindow.localStorage.setItem(\"keyboardLayout\", this.keyboardLayout);\r\n\t\twindow.localStorage.setItem(\"layout\", this.layout);\r\n\t\twindow.localStorage.setItem(\"colorTheme\", this.colorTheme);\r\n\t\twindow.localStorage.setItem(\"customTheme\", this.customTheme!);\r\n                window.localStorage.setItem(\"customTheme2\", this.customTheme2!);\r\n\t\twindow.localStorage.setItem(\"volume\", String(this.volume));\r\n\t\twindow.localStorage.setItem(\"visibleOctaves\", String(this.visibleOctaves));\r\n\t}\r\n}\r\n","// Copyright (c) 2012-2022 John Nesky and contributing authors, distributed under the MIT license, see accompanying the LICENSE.md file.\r\n\r\nexport class ChangeNotifier {\r\n\tprivate _watchers: (() => void)[] = [];\r\n\tprivate _dirty: boolean = false;\r\n\r\n\tpublic watch(watcher: () => void): void {\r\n\t\tif (this._watchers.indexOf(watcher) == -1) {\r\n\t\t\tthis._watchers.push(watcher);\r\n\t\t}\r\n\t}\r\n\r\n\tpublic unwatch(watcher: () => void): void {\r\n\t\tconst index: number = this._watchers.indexOf(watcher);\r\n\t\tif (index != -1) {\r\n\t\t\tthis._watchers.splice(index, 1);\r\n\t\t}\r\n\t}\r\n\r\n\tpublic changed(): void {\r\n\t\tthis._dirty = true;\r\n\t}\r\n\r\n\tpublic notifyWatchers(): void {\r\n\t\tif (!this._dirty) return;\r\n\t\tthis._dirty = false;\r\n\t\tfor (const watcher of this._watchers.concat()) {\r\n\t\t\twatcher();\r\n\t\t}\r\n\t}\r\n}\r\n","// Copyright (c) 2012-2022 John Nesky and contributing authors, distributed under the MIT license, see accompanying the LICENSE.md file.\r\n\r\nimport {Config} from \"../synth/SynthConfig\";\r\nimport {isMobile} from \"./EditorConfig\";\r\nimport {Pattern, Channel, Song, Synth} from \"../synth/synth\";\r\nimport { SongRecovery, generateUid } from \"./SongRecovery\";\r\nimport { ColorConfig } from \"./ColorConfig\";\r\nimport { Layout } from \"./Layout\";\r\nimport { SongPerformance } from \"./SongPerformance\";\r\nimport { Selection } from \"./Selection\";\r\nimport { Preferences } from \"./Preferences\";\r\nimport { Change } from \"./Change\";\r\nimport { ChangeNotifier } from \"./ChangeNotifier\";\r\nimport {ChangeSong, setDefaultInstruments, discardInvalidPatternInstruments} from \"./changes\";\r\n\r\ninterface HistoryState {\r\n\tcanUndo: boolean;\r\n\tsequenceNumber: number;\r\n\tbar: number;\r\n\tchannel: number;\r\n\tinstrument: number;\r\n\trecoveryUid: string;\r\n\tprompt: string | null;\r\n\t\tselection: {x0: number, x1: number, y0: number, y1: number, start: number, end: number};\r\n}\r\n\r\nexport class SongDocument {\r\n\tpublic colorTheme: string;\r\n\tpublic song: Song;\r\n\tpublic synth: Synth;\r\n\tpublic performance: SongPerformance;\r\n\tpublic readonly notifier: ChangeNotifier = new ChangeNotifier();\r\n\tpublic readonly selection: Selection = new Selection(this);\r\n\tpublic readonly prefs: Preferences = new Preferences();\r\n\tpublic channel: number = 0;\r\n\tpublic muteEditorChannel: number = 0;\r\n\tpublic bar: number = 0;\r\n\tpublic recalcChannelNames: boolean;\r\n\tpublic recentPatternInstruments: number[][] = [];\r\n\tpublic viewedInstrument: number[] = [];\r\n\t\r\n\tpublic trackVisibleBars: number = 16;\r\n\tpublic trackVisibleChannels: number = 4;\r\n\tpublic barScrollPos: number = 0;\r\n\tpublic channelScrollPos: number = 0;\r\n\tpublic prompt: string | null = null;\r\n\t\r\n\tpublic addedEffect: boolean = false;\r\n\tpublic addedEnvelope: boolean = false;\r\n\tpublic currentPatternIsDirty: boolean = false;\r\n\t\r\n\tprivate static readonly _maximumUndoHistory: number = 300;\r\n\tprivate _recovery: SongRecovery = new SongRecovery();\r\n\tprivate _recoveryUid: string;\r\n\tprivate _recentChange: Change | null = null;\r\n\tprivate _sequenceNumber: number = 0;\r\n\tprivate _lastSequenceNumber: number = 0;\r\n\tprivate _stateShouldBePushed: boolean = false;\r\n\tprivate _recordedNewSong: boolean = false;\r\n\tpublic _waitingToUpdateState: boolean = false;\r\n\t\t\r\n\tconstructor() {\r\n\t\tthis.notifier.watch(this._validateDocState);\r\n\t\t\r\n\t\tColorConfig.setTheme(this.prefs.colorTheme);\r\n\t\tLayout.setLayout(this.prefs.layout);\r\n\t\t\r\n\t\tif (window.sessionStorage.getItem(\"currentUndoIndex\") == null) {\r\n\t\t\twindow.sessionStorage.setItem(\"currentUndoIndex\", \"0\");\r\n\t\t\twindow.sessionStorage.setItem(\"oldestUndoIndex\", \"0\");\r\n\t\t\twindow.sessionStorage.setItem(\"newestUndoIndex\", \"0\");\r\n\t\t}\r\n\t\t\t\r\n\t\tlet songString: string = window.location.hash;\r\n\t\tif (songString == \"\") {\r\n\t\t\tsongString = this._getHash();\r\n\t\t}\r\n\t\tthis.song = new Song(songString);\r\n\t\tif (songString == \"\" || songString == undefined) {\r\n\t\t\tsetDefaultInstruments(this.song);\r\n\t\t\tthis.song.scale = this.prefs.defaultScale;\r\n\t\t}\r\n\t\tsongString = this.song.toBase64String();\r\n\t\tthis.synth = new Synth(this.song);\r\n\t\tthis.synth.volume = this._calcVolume();\r\n\t\tthis.synth.anticipatePoorPerformance = isMobile;\r\n\t\t\r\n\t\tlet state: HistoryState | null = this._getHistoryState();\r\n\t\tif (state == null) {\r\n\t\t\t// When the page is first loaded, indicate that undo is NOT possible.\r\n\t\t\tstate = {canUndo: false, sequenceNumber: 0, bar: 0, channel: 0, instrument: 0, recoveryUid: generateUid(), prompt: null, selection: this.selection.toJSON()};\r\n\t\t}\r\n\t\tif (state.recoveryUid == undefined) state.recoveryUid = generateUid();\r\n\t\tthis._replaceState(state, songString);\r\n\t\twindow.addEventListener(\"hashchange\", this._whenHistoryStateChanged);\r\n\t\twindow.addEventListener(\"popstate\", this._whenHistoryStateChanged);\r\n\t\t\t\r\n\t\tthis.bar = state.bar | 0;\r\n\t\tthis.channel = state.channel | 0;\r\n\t\tfor (let i: number = 0; i <= this.channel; i++) this.viewedInstrument[i] = 0;\r\n\t\tthis.viewedInstrument[this.channel] = state.instrument | 0;\r\n\t\tthis._recoveryUid = state.recoveryUid;\r\n\t\t//this.barScrollPos = Math.max(0, this.bar - (this.trackVisibleBars - 6));\r\n\t\tthis.prompt = state.prompt;\r\n\t\tthis.selection.fromJSON(state.selection);\r\n\t\t\t\r\n\t\t// For all input events, catch them when they are about to finish bubbling,\r\n\t\t// presumably after all handlers are done updating the model, then update the\r\n\t\t// view before the screen renders. mouseenter and mouseleave do not bubble,\r\n\t\t// but they are immediately followed by mousemove which does. \r\n\t\tfor (const eventName of [\"input\", \"change\", \"click\", \"keyup\", \"keydown\", \"mousedown\", \"mousemove\", \"mouseup\", \"touchstart\", \"touchmove\", \"touchend\", \"touchcancel\"]) {\r\n\t\t\twindow.addEventListener(eventName, this._cleanDocument);\r\n\t\t}\r\n\t\t\r\n\t\tthis._validateDocState();\r\n\t\tthis.performance = new SongPerformance(this);\r\n\t}\r\n\t\t\r\n\tpublic toggleDisplayBrowserUrl() {\r\n\t\tconst state: HistoryState = this._getHistoryState()!;\r\n\t\tthis.prefs.displayBrowserUrl = !this.prefs.displayBrowserUrl;\r\n\t\tthis._replaceState(state, this.song.toBase64String());\r\n\t}\r\n\t\t\r\n\tprivate _getHistoryState(): HistoryState | null {\r\n\t\tif (this.prefs.displayBrowserUrl) {\r\n\t\t\treturn window.history.state;\r\n\t\t} else {\r\n\t\t\tconst json: any = JSON.parse(window.sessionStorage.getItem(window.sessionStorage.getItem(\"currentUndoIndex\")!)!);\r\n\t\t\treturn json == null ? null : json.state;\r\n\t\t}\r\n\t}\r\n\t\t\r\n\tprivate _getHash(): string {\r\n\t\tif (this.prefs.displayBrowserUrl) {\r\n\t\t\treturn window.location.hash;\r\n\t\t} else {\r\n\t\t\tconst json: any = JSON.parse(window.sessionStorage.getItem(window.sessionStorage.getItem(\"currentUndoIndex\")!)!);\r\n\t\t\treturn json == null ? \"\" : json.hash;\r\n\t\t}\r\n\t}\r\n\t\t\r\n\tprivate _replaceState(state: HistoryState, hash: string): void {\r\n\t\tif (this.prefs.displayBrowserUrl) {\r\n\t\t\twindow.history.replaceState(state, \"\", \"#\" + hash);\r\n\t\t} else {\r\n\t\t\twindow.sessionStorage.setItem(window.sessionStorage.getItem(\"currentUndoIndex\") || \"0\", JSON.stringify({state, hash}));\r\n\t\t\twindow.history.replaceState(null, \"\", location.pathname);\r\n\t\t}\r\n\t}\r\n\t\t\r\n\tprivate _pushState(state: HistoryState, hash: string): void {\r\n\t\tif (this.prefs.displayBrowserUrl) {\r\n\t\t\twindow.history.pushState(state, \"\", \"#\" + hash);\r\n\t\t} else {\r\n\t\t\tlet currentIndex: number = Number(window.sessionStorage.getItem(\"currentUndoIndex\"));\r\n\t\t\tlet oldestIndex: number = Number(window.sessionStorage.getItem(\"oldestUndoIndex\"));\r\n\t\t\tcurrentIndex = (currentIndex + 1) % SongDocument._maximumUndoHistory;\r\n\t\t\twindow.sessionStorage.setItem(\"currentUndoIndex\", String(currentIndex));\r\n\t\t\twindow.sessionStorage.setItem(\"newestUndoIndex\", String(currentIndex));\r\n\t\t\tif (currentIndex == oldestIndex) {\r\n\t\t\t\toldestIndex = (oldestIndex + 1) % SongDocument._maximumUndoHistory;\r\n\t\t\t\twindow.sessionStorage.setItem(\"oldestUndoIndex\", String(oldestIndex));\r\n\t\t\t}\r\n\t\t\t\twindow.sessionStorage.setItem(String(currentIndex), JSON.stringify({state, hash}));\r\n\t\t\twindow.history.replaceState(null, \"\", location.pathname);\r\n\t\t}\r\n\t\tthis._lastSequenceNumber = state.sequenceNumber;\r\n\t}\r\n\r\n\tpublic hasRedoHistory(): boolean {\r\n\t\treturn this._lastSequenceNumber > this._sequenceNumber;\r\n\t}\t\r\n\t\t\r\n\tprivate _forward(): void {\r\n\t\tif (this.prefs.displayBrowserUrl) {\r\n\t\t\twindow.history.forward();\r\n\t\t} else {\r\n\t\t\tlet currentIndex: number = Number(window.sessionStorage.getItem(\"currentUndoIndex\"));\r\n\t\t\tlet newestIndex: number = Number(window.sessionStorage.getItem(\"newestUndoIndex\"));\r\n\t\t\tif (currentIndex != newestIndex) {\r\n\t\t\t\tcurrentIndex = (currentIndex + 1) % SongDocument._maximumUndoHistory;\r\n\t\t\t\twindow.sessionStorage.setItem(\"currentUndoIndex\", String(currentIndex));\r\n\t\t\t\tsetTimeout(this._whenHistoryStateChanged);\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\t\t\r\n\tprivate _back(): void {\r\n\t\tif (this.prefs.displayBrowserUrl) {\r\n\t\t\twindow.history.back();\r\n\t\t} else {\r\n\t\t\tlet currentIndex: number = Number(window.sessionStorage.getItem(\"currentUndoIndex\"));\r\n\t\t\tlet oldestIndex: number = Number(window.sessionStorage.getItem(\"oldestUndoIndex\"));\r\n\t\t\tif (currentIndex != oldestIndex) {\r\n\t\t\t\tcurrentIndex = (currentIndex + SongDocument._maximumUndoHistory - 1) % SongDocument._maximumUndoHistory;\r\n\t\t\t\twindow.sessionStorage.setItem(\"currentUndoIndex\", String(currentIndex));\r\n\t\t\t\tsetTimeout(this._whenHistoryStateChanged);\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\t\t\r\n\tprivate _whenHistoryStateChanged = (): void => {\r\n\t\tif (this.synth.recording) {\r\n\t\t\t// Changes to the song while it's recording to could mess up the recording so just abort the recording.\r\n\t\t\tthis.performance.abortRecording();\r\n\t\t}\r\n\t\t\r\n\t\tif (window.history.state == null && window.location.hash != \"\") {\r\n\t\t\t// The user changed the hash directly.\r\n\t\t\tthis._sequenceNumber++;\r\n\t\t\tthis._resetSongRecoveryUid();\r\n\t\t\tconst state: HistoryState = {canUndo: true, sequenceNumber: this._sequenceNumber, bar: this.bar, channel: this.channel, instrument: this.viewedInstrument[this.channel], recoveryUid: this._recoveryUid, prompt: null, selection: this.selection.toJSON()};\r\n\t\t\tnew ChangeSong(this, window.location.hash);\r\n\t\t\tthis.prompt = state.prompt;\r\n\t\t\tif (this.prefs.displayBrowserUrl) {\r\n\t\t\t\tthis._replaceState(state, this.song.toBase64String());\r\n\t\t\t} else {\r\n\t\t\t\tthis._pushState(state, this.song.toBase64String());\r\n\t\t\t}\r\n\t\t\tthis.forgetLastChange();\r\n\t\t\tthis.notifier.notifyWatchers();\r\n\t\t\t// Stop playing, and go to start when pasting new song in.\r\n\t\t\tthis.synth.pause();\r\n\t\t\tthis.synth.goToBar(0);\r\n\t\t\treturn;\r\n\t\t}\r\n\t\t\t\r\n\t\tconst state: HistoryState | null = this._getHistoryState();\r\n\t\tif (state == null) throw new Error(\"History state is null.\");\r\n\t\t\t\r\n\t\t// Abort if we've already handled the current state. \r\n\t\tif (state.sequenceNumber == this._sequenceNumber) return;\r\n\t\t\t\r\n\t\tthis.bar = state.bar;\r\n\t\tthis.channel = state.channel;\r\n\t\tthis.viewedInstrument[this.channel] = state.instrument;\r\n\t\tthis._sequenceNumber = state.sequenceNumber;\r\n\t\tthis.prompt = state.prompt;\r\n\t\tnew ChangeSong(this, this._getHash());\r\n\t\t\t\r\n\t\tthis._recoveryUid = state.recoveryUid;\r\n\t\tthis.selection.fromJSON(state.selection);\r\n\t\t\t\r\n\t\t//this.barScrollPos = Math.min(this.bar, Math.max(this.bar - (this.trackVisibleBars - 1), this.barScrollPos));\r\n\t\t\t\r\n\t\tthis.forgetLastChange();\r\n\t\tthis.notifier.notifyWatchers();\r\n\t}\r\n\t\t\r\n\tprivate _cleanDocument = (): void => {\r\n\t\tthis.notifier.notifyWatchers();\r\n\t}\r\n\t\r\n\tprivate _validateDocState = (): void => {\r\n\t\tconst channelCount: number = this.song.getChannelCount();\r\n\t\tfor (let i: number = this.recentPatternInstruments.length; i < channelCount; i++) {\r\n\t\t\tthis.recentPatternInstruments[i] = [0];\r\n\t}\r\n\t\tthis.recentPatternInstruments.length = channelCount;\r\n\t\tfor (let i: number = 0; i < channelCount; i++) {\r\n\t\t\tif (i == this.channel) {\r\n\t\t\t\tif (this.song.patternInstruments) {\r\n\t\t\t\t\tconst pattern: Pattern | null = this.song.getPattern(this.channel, this.bar);\r\n\t\t\t\t\tif (pattern != null) {\r\n\t\t\t\t\t\tthis.recentPatternInstruments[i] = pattern.instruments.concat();\r\n\t\t\t\t\t}\r\n\t\t\t\t} else {\r\n\t\t\t\t\tconst channel: Channel = this.song.channels[this.channel];\r\n\t\t\t\t\tfor (let j: number = 0; j < channel.instruments.length; j++) {\r\n\t\t\t\t\t\tthis.recentPatternInstruments[i][j] = j;\r\n\t\t\t\t\t}\r\n\t\t\t\t\tthis.recentPatternInstruments[i].length = channel.instruments.length;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\tdiscardInvalidPatternInstruments(this.recentPatternInstruments[i], this.song, i);\r\n\t\t}\r\n\r\n\t\tfor (let i: number = this.viewedInstrument.length; i < channelCount; i++) {\r\n\t\t\tthis.viewedInstrument[i] = 0;\r\n\t\t}\r\n\t\tthis.viewedInstrument.length = channelCount;\r\n\t\tfor (let i: number = 0; i < channelCount; i++) {\r\n\t\t\tif (this.song.patternInstruments && !this.song.layeredInstruments && i == this.channel) {\r\n\t\t\t\tconst pattern: Pattern | null = this.song.getPattern(this.channel, this.bar);\r\n\t\t\t\tif (pattern != null) {\r\n\t\t\t\t\tthis.viewedInstrument[i] = pattern.instruments[0];\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\tthis.viewedInstrument[i] = Math.min(this.viewedInstrument[i] | 0, this.song.channels[i].instruments.length - 1);\r\n\t\t}\r\n\t\t\r\n\t\tconst highlightedPattern: Pattern | null = this.getCurrentPattern();\r\n\t\tif (highlightedPattern != null && this.song.patternInstruments) {\r\n\t\t\tthis.recentPatternInstruments[this.channel] = highlightedPattern.instruments.concat();\r\n\t\t}\r\n\t\t\r\n\t\t// Normalize selection.\r\n\t\t// I'm allowing the doc.bar to drift outside the box selection while playing\r\n\t\t// because it may auto-follow the playhead outside the selection but it would\r\n\t\t// be annoying to lose your selection just because the song is playing.\r\n\t\tif ((!this.synth.playing && (this.bar < this.selection.boxSelectionBar || this.selection.boxSelectionBar + this.selection.boxSelectionWidth <= this.bar)) ||\r\n\t\t\tthis.channel < this.selection.boxSelectionChannel ||\r\n\t\t\tthis.selection.boxSelectionChannel + this.selection.boxSelectionHeight <= this.channel ||\r\n\t\t\tthis.song.barCount < this.selection.boxSelectionBar + this.selection.boxSelectionWidth ||\r\n\t\t\tchannelCount < this.selection.boxSelectionChannel + this.selection.boxSelectionHeight ||\r\n\t\t\t(this.selection.boxSelectionWidth == 1 && this.selection.boxSelectionHeight == 1)) {\r\n\t\t\tthis.selection.resetBoxSelection();\r\n\t\t}\r\n\t}\r\n\t\t\r\n\tprivate _updateHistoryState = (): void => {\r\n\t\tthis._waitingToUpdateState = false;\r\n\t\tlet hash: string;\r\n\t\ttry {\r\n\t\t\t// Ensure that the song is not corrupted before saving it.\r\n\t\t\thash = this.song.toBase64String();\r\n\t\t} catch (error) {\r\n\t\t\twindow.alert(\"Whoops, the song data appears to have been corrupted! Please try to recover the last working version of the song from the \\\"Recover Recent Song...\\\" option in BeepBox's \\\"File\\\" menu.\");\r\n\t\t\treturn;\r\n\t\t}\r\n\t\tif (this._stateShouldBePushed) this._sequenceNumber++;\r\n\t\tif (this._recordedNewSong) {\r\n\t\t\tthis._resetSongRecoveryUid();\r\n\t\t} else {\r\n\t\t\tthis._recovery.saveVersion(this._recoveryUid, this.song.title, hash);\r\n\t\t}\r\n\t\tlet state: HistoryState = {canUndo: true, sequenceNumber: this._sequenceNumber, bar: this.bar, channel: this.channel, instrument: this.viewedInstrument[this.channel], recoveryUid: this._recoveryUid, prompt: this.prompt, selection: this.selection.toJSON()};\r\n\t\tif (this._stateShouldBePushed) {\r\n\t\t\tthis._pushState(state, hash);\r\n\t\t} else {\r\n\t\t\tthis._replaceState(state, hash);\r\n\t\t}\r\n\t\tthis._stateShouldBePushed = false;\r\n\t\tthis._recordedNewSong = false;\r\n\t}\r\n\t\t\r\n\tpublic record(change: Change, replace: boolean = false, newSong: boolean = false): void {\r\n\t\tif (change.isNoop()) {\r\n\t\t\tthis._recentChange = null;\r\n\t\t\tif (replace) this._back();\r\n\t\t} else {\r\n\t\t\tchange.commit();\r\n\t\t\tthis._recentChange = change;\r\n\t\t\tthis._stateShouldBePushed = this._stateShouldBePushed || !replace;\r\n\t\t\tthis._recordedNewSong = this._recordedNewSong || newSong;\r\n\t\t\tif (!this._waitingToUpdateState) {\r\n\t\t\t\t// Defer updating the url/history until all sequenced changes have\r\n\t\t\t\t// committed and the interface has rendered the latest changes to\r\n\t\t\t\t// improve perceived responsiveness.\r\n\t\t\t\twindow.requestAnimationFrame(this._updateHistoryState);\r\n\t\t\t\tthis._waitingToUpdateState = true;\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\t\t\r\n\tprivate _resetSongRecoveryUid(): void {\r\n\t\tthis._recoveryUid = generateUid();\r\n\t}\r\n\t\t\r\n\tpublic openPrompt(prompt: string): void {\r\n\t\tthis.prompt = prompt;\r\n\t\tconst hash: string = this.song.toBase64String();\r\n\t\tthis._sequenceNumber++;\r\n\t\tconst state = {canUndo: true, sequenceNumber: this._sequenceNumber, bar: this.bar, channel: this.channel, instrument: this.viewedInstrument[this.channel], recoveryUid: this._recoveryUid, prompt: this.prompt, selection: this.selection.toJSON()};\r\n\t\tthis._pushState(state, hash);\r\n\t}\r\n\t\t\r\n\tpublic undo(): void {\r\n\t\tconst state: HistoryState = this._getHistoryState()!;\r\n\t\tif (state.canUndo) this._back();\r\n\t}\r\n\t\t\r\n\tpublic redo(): void {\r\n\t\tthis._forward();\r\n\t}\r\n\t\t\r\n\tpublic setProspectiveChange(change: Change | null): void {\r\n\t\tthis._recentChange = change;\r\n\t}\r\n\t\t\r\n\tpublic forgetLastChange(): void {\r\n\t\tthis._recentChange = null;\r\n\t}\r\n\t\t\r\n\tpublic lastChangeWas(change: Change | null): boolean {\r\n\t\treturn change != null && change == this._recentChange;\r\n\t}\r\n\t\t\r\n\tpublic goBackToStart(): void {\r\n\t\tthis.bar = 0;\r\n\t\tthis.channel = 0;\r\n\t\tthis.barScrollPos = 0;\r\n\t\tthis.channelScrollPos = 0;\r\n\t\tthis.synth.snapToStart();\r\n\t\tthis.notifier.changed();\r\n\t}\r\n\t\r\n\tpublic setVolume(val: number): void {\r\n\t\tthis.prefs.volume = val;\r\n\t\tthis.prefs.save();\r\n\t\tthis.synth.volume = this._calcVolume();\r\n\t}\r\n\t\t\r\n\tprivate _calcVolume(): number {\r\n\t\treturn Math.min(1.0, Math.pow(this.prefs.volume / 50.0, 0.5)) * Math.pow(2.0, (this.prefs.volume - 75.0) / 25.0);\r\n\t}\r\n\t\t\r\n\tpublic getCurrentPattern(barOffset: number = 0): Pattern | null {\r\n\t\treturn this.song.getPattern(this.channel, this.bar + barOffset);\r\n\t}\r\n\t\t\r\n\tpublic getCurrentInstrument(barOffset: number = 0): number {\r\n\t\tif (barOffset == 0) {\r\n\t\t\treturn this.viewedInstrument[this.channel];\r\n\t\t} else {\r\n\t\t\tconst pattern: Pattern | null = this.getCurrentPattern(barOffset);\r\n\t\t\treturn pattern == null ? 0 : pattern.instruments[0];\r\n        }\r\n\t}\r\n\t\t\r\n\tpublic getMobileLayout(): boolean {\r\n\t\treturn (this.prefs.layout == \"wide\") ? window.innerWidth <= 1000 : window.innerWidth <= 710;\r\n\t}\r\n\t\t\r\n\tpublic getBarWidth(): number {\r\n\t\t// Bugfix: In wide fullscreen, the 32 pixel display doesn't work as the trackEditor is still horizontally constrained\r\n\t\treturn (!this.getMobileLayout() && this.prefs.enableChannelMuting && (!this.getFullScreen() || this.prefs.layout == \"wide\")) ? 30 : 32;\r\n\t}\r\n\t\t\r\n\tpublic getChannelHeight(): number {\r\n\t\tconst squashed: boolean = this.getMobileLayout() || this.song.getChannelCount() > 4 || (this.song.barCount > this.trackVisibleBars && this.song.getChannelCount() > 3);\r\n\t\t// TODO: Jummbox widescreen should allow more channels before squashing or megasquashing\r\n\t\tconst megaSquashed: boolean = !this.getMobileLayout() && (((this.prefs.layout != \"wide\") && this.song.getChannelCount() > 11) || this.song.getChannelCount() > 22);\r\n\t\treturn megaSquashed ? 23 : (squashed ? 27 : 32);\r\n\t}\r\n\t\t\r\n\tpublic getFullScreen(): boolean {\r\n\t\treturn !this.getMobileLayout() && (this.prefs.layout != \"small\");\r\n\t}\r\n\t\r\n\tpublic getVisibleOctaveCount(): number {\r\n\t\treturn this.getFullScreen() ? this.prefs.visibleOctaves : Preferences.defaultVisibleOctaves;\r\n}\r\n\t\r\n\tpublic getVisiblePitchCount(): number {\r\n\t\t return this.getVisibleOctaveCount() * Config.pitchesPerOctave + 1;\r\n\t}\r\n\t\r\n\tpublic getBaseVisibleOctave(channel: number): number {\r\n\t\tconst visibleOctaveCount: number = this.getVisibleOctaveCount();\r\n\t\treturn Math.max(0, Math.min(Config.pitchOctaves - visibleOctaveCount, Math.ceil(this.song.channels[channel].octave - visibleOctaveCount * 0.5)));\r\n\t}\r\n}\r\n","// Copyright (c) 2012-2022 John Nesky and contributing authors, distributed under the MIT license, see accompanying the LICENSE.md file.\r\n\r\nimport { Dictionary, DictionaryArray, EnvelopeType, InstrumentType, Transition, Chord, Envelope, Config } from \"../synth/SynthConfig\";\r\nimport { isMobile, EditorConfig } from \"./EditorConfig\";\r\nimport { ColorConfig } from \"./ColorConfig\";\r\nimport \"./style\"; // Import for the side effects, there's no exports.\r\nimport {SongEditor} from \"./SongEditor\";\r\nimport {NotePin, Note, Pattern, Instrument, Channel, Song, Synth} from \"../synth/synth\";\r\nimport {SongDocument} from \"./SongDocument\";\r\nimport {ExportPrompt} from \"./ExportPrompt\";\r\nimport {ChangePreset} from \"./changes\";\r\n\r\n\r\n//namespace beepbox {\r\nconst doc: SongDocument = new SongDocument();//debug only\r\nconst editor: SongEditor = new SongEditor(doc);//same as above\r\n// const doc: SongDocument = new SongDocument();\r\n// const editor: SongEditor = new SongEditor(doc);\r\nconst beepboxEditorContainer: HTMLElement = document.getElementById(\"beepboxEditorContainer\")!;\r\nbeepboxEditorContainer.appendChild(editor.mainLayer);\r\neditor.whenUpdated();\r\n\r\n// Fade-in transitions\r\neditor.mainLayer.className += \" load\";\r\neditor.mainLayer.getElementsByClassName(\"pattern-area\")[0].className += \" load\";\r\neditor.mainLayer.getElementsByClassName(\"settings-area\")[0].className += \" load\";\r\neditor.mainLayer.getElementsByClassName(\"editor-song-settings\")[0].className += \" load\";\r\neditor.mainLayer.getElementsByClassName(\"instrument-settings-area\")[0].className += \" load\";\r\neditor.mainLayer.getElementsByClassName(\"trackAndMuteContainer\")[0].className += \" load\";\r\neditor.mainLayer.getElementsByClassName(\"barScrollBar\")[0].className += \" load\";\r\n\r\n// Give select2 class to these\r\n$('#pitchPresetSelect').select2({ dropdownAutoWidth: true });\r\n$('#drumPresetSelect').select2({ dropdownAutoWidth: true });\r\n\r\n// Onclick event to expand/collapse optgroups\r\n$(\"body\").on('click', '.select2-container--open .select2-results__group', function () {\r\n\t$(this).siblings().toggle();\r\n});\r\n\r\n// Open event to collapse all optgroups by default\r\n$(\"#pitchPresetSelect\").on('select2:open', function () {\r\n\t$('.select2-dropdown--below').css('opacity', 0);\r\n\t$('.select2-dropdown').css('opacity', 1);\r\n\t$('#pitchPresetSelect')\r\n\tsetTimeout(() => {\r\n\t\tlet groups = $('.select2-container--open .select2-results__group');\r\n\t\tlet options = $('.select2-container--open .select2-results__option');\r\n\r\n\t\t$.each(groups, (index, v) => {\r\n\t\t\t$(v).siblings().hide();\r\n\t\t\t$(v)[0].setAttribute(\"style\", \"color: \" + ColorConfig.getChannelColor(doc.song, doc.channel).primaryNote + \";\");\r\n\t\t})\r\n\t\t$.each(options, (index, v) => {\r\n\t\t\t$(v)[0].setAttribute(\"style\", \"color: \" + ColorConfig.getChannelColor(doc.song, doc.channel).primaryNote + \";\");\r\n\t\t})\r\n\r\n\t\t$('.select2-dropdown--below').css('opacity', 1);\r\n\t}, 0);\r\n});\r\n\r\n// Open event to collapse all optgroups by default\r\n$(\"#drumPresetSelect\").on('select2:open', function () {\r\n\t$('.select2-dropdown--below').css('opacity', 0);\r\n\t$('.select2-dropdown').css('opacity', 1);\r\n\t$('#drumPresetSelect')\r\n\tsetTimeout(() => {\r\n\t\tlet groups = $('.select2-container--open .select2-results__group');\r\n\t\tlet options = $('.select2-container--open .select2-results__option');\r\n\r\n\t\t$.each(groups, (index, v) => {\r\n\t\t\t$(v).siblings().hide();\r\n\t\t\t$(v)[0].setAttribute(\"style\", \"color: \" + ColorConfig.getChannelColor(doc.song, doc.channel).primaryNote + \";\");\r\n\t\t})\r\n\t\t$.each(options, (index, v) => {\r\n\t\t\t$(v)[0].setAttribute(\"style\", \"color: \" + ColorConfig.getChannelColor(doc.song, doc.channel).primaryNote + \";\");\r\n\t\t})\r\n\r\n\t\t$('.select2-dropdown--below').css('opacity', 1);\r\n\t}, 0);\r\n});\r\n\r\n// Select2 events\r\n// The latter is to ensure select2 doesn't keep focus after the select2 is closed without making a selection.\r\n$('#pitchPresetSelect').on(\"change\", editor._whenSetPitchedPreset);\r\n$('#pitchPresetSelect').on(\"select2:close\", editor._refocus);\r\n\r\n$('#drumPresetSelect').on(\"change\", editor._whenSetDrumPreset);\r\n$('#drumPresetSelect').on(\"select2:close\", editor._refocus);\r\n\r\n\r\neditor.mainLayer.focus();\r\n\r\n// don't autoplay on mobile devices, wait for input.\r\nif (!isMobile && doc.prefs.autoPlay) {\r\n\tfunction autoplay(): void {\r\n\t\tif (!document.hidden) {\r\n\t\t\tdoc.synth.play();\r\n\t\t\teditor.updatePlayButton();\r\n\t\t\twindow.removeEventListener(\"visibilitychange\", autoplay);\r\n\t\t}\r\n\t}\r\n\tif (document.hidden) {\r\n\t\t// Wait until the tab is visible to autoplay:\r\n\t\twindow.addEventListener(\"visibilitychange\", autoplay);\r\n\t} else {\r\n\t\t// Can't call this immediately, as main.ts needs to finish executing for the beepbox namespace to finish being declared.\r\n\t\twindow.setTimeout(autoplay);\r\n\t}\r\n}\r\n\r\n// BeepBox uses browser history state as its own undo history. Browsers typically\r\n// remember scroll position for each history state, but BeepBox users would prefer not \r\n// auto scrolling when undoing. Sadly this tweak doesn't work on Edge or IE.\r\nif (\"scrollRestoration\" in history) history.scrollRestoration = \"manual\";\r\n\r\neditor.updatePlayButton();\r\n\r\nif (\"serviceWorker\" in navigator) {\r\n\t\tnavigator.serviceWorker.register(\"/service_worker.js\", {updateViaCache: \"all\", scope: \"/\"}).catch(() => {});\r\n}\r\n\r\n// When compiling synth.ts as a standalone module named \"beepbox\", expose these classes as members to JavaScript:\r\n\texport {Dictionary, DictionaryArray, EnvelopeType, InstrumentType, Transition, Chord, Envelope, Config, NotePin, Note, Pattern, Instrument, Channel, Song, Synth, ColorConfig, EditorConfig, SongDocument, SongEditor, ExportPrompt, ChangePreset};\r\n"],"mappings":"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AkB,UAAWqB,SAAY,CAAC,EAAG,EAAG,EAAG,EAAG,EAAG,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,KAAO,CAAErB,eAAkB,UAAWqB,SAAY,CAAC,EAAG,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,KAAO,CAAErB,eAAkB,UAAWqB,SAAY,CAAC,EAAG,EAAG,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,KAAO,CAAErB,eAAkB,UAAWqB,SAAY,CAAC,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,KAAO,CAAErB,eAAkB,UAAWqB,SAAY,CAAC,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,KAAO,CAAErB,eAAkB,UAAWqB,SAAY,CAAC,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,KAAO,CAAErB,eAAkB,UAAWqB,SAAY,CAAC,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,IAAK,GAAI,GAAI,GAAI,GAAI,GAAI,KAAO,CAAErB,eAAkB,UAAWqB,SAAY,CAAC,EAAG,EAAG,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,GAAI,GAAI,GAAI,IAAM,CAAErB,eAAkB,UAAWqB,SAAY,CAAC,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,IAAK,GAAI,GAAI,GAAI,GAAI,IAAK,GAAI,GAAI,GAAI,GAAI,EAAG,EAAG,EAAG,OAChkE,CAAEjd,KAAM,YAAaka,YAAa,IAAKD,aAAa,EAAMe,SAAU,CAAEtK,KAAQ,KAAMuK,SAAY,CAAC,CAAEvK,KAAQ,YAAa4K,SAAY,KAAMC,WAAc,QAAW7Q,QAAW,CAAC,cAAe,SAAU,UAAW4R,WAAc,CAAC,CAAE5L,KAAQ,WAAY4K,SAAY,SAAUC,WAAc,MAASyB,OAAU,GAAIT,OAAU,GAAIrB,WAAc,SAAUC,cAAiB,EAAGnL,aAAgB,GAAIoL,MAAS,eAAgBS,UAAa,YAAaC,aAAgB,KAAMC,kBAAqB,EAAGC,UAAa,CAAC,CAAEC,UAAa,MAAO5S,UAAa,IAAM,CAAE4S,UAAa,KAAM5S,UAAa,GAAK,CAAE4S,UAAa,KAAM5S,UAAa,GAAK,CAAE4S,UAAa,KAAM5S,UAAa,IAAMsK,UAAa,CAAC,CAAEuI,OAAU,qBAAsBC,SAAY,WAAa,CAAED,OAAU,oBAAqBC,SAAY,UAAW5b,MAAS,GAAK,CAAE2b,OAAU,oBAAqBC,SAAY,UAAW5b,MAAS,GAAK,CAAE2b,OAAU,oBAAqBC,SAAY,UAAW5b,MAAS,MACr6B,CAAEP,KAAM,kBAAmBka,YAAa,IAAKc,SAAU,CAAEtK,KAAQ,KAAMuK,SAAY,GAAIvQ,QAAW,CAAC,eAAgB4R,WAAc,CAAC,CAAE5L,KAAQ,WAAY4K,SAAY,SAAUC,WAAc,MAASL,WAAc,SAAUC,cAAiB,EAAGnL,cAAiB,EAAGoL,MAAS,eAAgBS,UAAa,UAAWC,aAAgB,KAAMC,kBAAqB,EAAGC,UAAa,CAAC,CAAEC,UAAa,MAAO5S,UAAa,IAAM,CAAE4S,UAAa,KAAM5S,UAAa,IAAM,CAAE4S,UAAa,KAAM5S,UAAa,IAAM,CAAE4S,UAAa,MAAO5S,UAAa,IAAMsK,UAAa,CAAC,CAAEuI,OAAU,qBAAsBC,SAAY,WAAa,CAAED,OAAU,oBAAqBC,SAAY,YAAa5b,MAAS,GAAK,CAAE2b,OAAU,oBAAqBC,SAAY,YAAa5b,MAAS,GAAK,CAAE2b,OAAU,oBAAqBC,SAAY,UAAW5b,MAAS,GAAK,CAAE2b,OAAU,oBAAqBC,SAAY,UAAW5b,MAAS,GAAK,CAAE2b,OAAU,oBAAqBC,SAAY,cACt6B,CAAEnc,KAAM,UAAWka,YAAa,GAAID,aAAa,EAAMe,SAAU,CAAEtK,KAAQ,WAAYuK,SAAY,CAAC,CAAEvK,KAAQ,OAAQ4K,SAAY,QAASC,WAAc,SAAW7Q,QAAW,CAAC,cAAe,cAAe,UAAW0S,oBAAuB,GAAId,WAAc,CAAC,CAAE5L,KAAQ,WAAY4K,SAAY,SAAUC,WAAc,KAAQgB,OAAU,GAAIrB,WAAc,SAAUC,cAAiB,EAAGnL,aAAgB,GAAIoL,MAAS,eAAgB6B,SAAY,CAAC,IAAK,EAAG,EAAG,EAAG,GAAI,EAAG,EAAG,GAAI,EAAG,GAAI,GAAI,GAAI,GAAI,GAAI,EAAG,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,IAAKtJ,UAAa,CAAC,CAAEuI,OAAU,qBAAsBC,SAAY,WAAa,CAAED,OAAU,aAAcC,SAAY,cAC3pB,CAAEnc,KAAM,cAAeka,YAAa,GAAIc,SAAU,CAAEtK,KAAQ,WAAYuK,SAAY,GAAIvQ,QAAW,CAAC,cAAe,UAAW4R,WAAc,CAAC,CAAE5L,KAAQ,WAAY4K,SAAY,QAASC,WAAc,QAAWgB,OAAU,GAAIrB,WAAc,SAAUC,cAAiB,EAAGnL,aAAgB,GAAIoL,MAAS,eAAgB6B,SAAY,CAAC,EAAG,EAAG,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,EAAG,EAAG,EAAG,EAAG,EAAG,GAAItJ,UAAa,CAAC,CAAEuI,OAAU,qBAAsBC,SAAY,cAClf,CAAEnc,KAAM,YAAaka,YAAa,IAAKD,aAAa,EAAMwB,SAAS,EAAMiB,wBAAyB,IAAK1B,SAAU,CAAEtK,KAAQ,WAAYhG,QAAW,SAAUwQ,WAAc,YAAaE,MAAS,QAASM,eAAkB,KAAMC,gBAAmB,GAAIC,eAAkB,UAAWqB,SAAY,CAAC,EAAG,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,MACrZ,CAAEjd,KAAM,aAAcka,YAAa,IAAKD,aAAa,EAAMwB,SAAS,EAAMiB,wBAAyB,GAAK1B,SAAU,CAAEtK,KAAQ,WAAYhG,QAAW,SAAUwQ,WAAc,YAAaE,MAAS,QAASM,eAAkB,KAAMC,gBAAmB,GAAIC,eAAkB,UAAWqB,SAAY,CAAC,GAAI,IAAK,IAAK,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,MACzZ,CAAEjd,KAAM,eAAgBka,YAAa,IAAKD,aAAa,EAAMwB,SAAS,EAAMiB,wBAAyB,IAAK1B,SAAU,CAAEtK,KAAQ,WAAYhG,QAAW,SAAUwQ,WAAc,YAAaE,MAAS,QAASM,eAAkB,KAAMC,gBAAmB,GAAIC,eAAkB,UAAWqB,SAAY,CAAC,IAAK,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,MAC1Z,CAAEjd,KAAM,aAAcka,YAAa,IAAKD,aAAa,EAAMwB,SAAS,EAAMiB,wBAAyB,EAAG1B,SAAU,CAAEtK,KAAQ,WAAYhG,QAAW,SAAUwQ,WAAc,YAAaE,MAAS,UAAWM,eAAkB,IAAMC,gBAAmB,GAAIC,eAAkB,UAAWqB,SAAY,CAAC,IAAK,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,MACxZ,CAAEjd,KAAM,UAAWka,YAAa,IAAKuB,SAAS,EAAMiB,wBAAyB,EAAG1B,SAAU,CAAEtK,KAAQ,WAAYhG,QAAW,SAAUwQ,WAAc,YAAaE,MAAS,QAASM,eAAkB,IAAMC,gBAAmB,GAAIC,eAAkB,UAAWqB,SAAY,CAAC,IAAK,GAAI,GAAI,EAAG,EAAG,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,MAC9X,CAAEjd,KAAM,aAAcka,YAAa,IAAKuB,SAAS,EAAMiB,wBAAyB,IAAK1B,SAAU,CAAEtK,KAAQ,WAAYhG,QAAW,SAAUwQ,WAAc,YAAaE,MAAS,QAASM,eAAkB,IAAMC,gBAAmB,GAAIC,eAAkB,UAAWqB,SAAY,CAAC,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,IAAK,GAAI,GAAI,GAAI,IAAK,GAAI,GAAI,EAAG,EAAG,EAAG,EAAG,EAAG,GAAI,GAAI,GAAI,GAAI,EAAG,EAAG,GAAI,GAAI,EAAG,KAC9X,CAAEjd,KAAM,aAAcka,YAAa,GAAIc,SAAU,CAAEtK,KAAQ,KAAMuK,SAAY,GAAIvQ,QAAW,GAAIwQ,WAAc,SAAUC,cAAiB,EAAGnL,cAAiB,EAAGoL,MAAS,eAAgBS,UAAa,YAAaC,aAAgB,KAAMC,kBAAqB,EAAGC,UAAa,CAAC,CAAEC,UAAa,KAAM5S,UAAa,IAAM,CAAE4S,UAAa,KAAM5S,UAAa,GAAK,CAAE4S,UAAa,KAAM5S,UAAa,GAAK,CAAE4S,UAAa,KAAM5S,UAAa,IAAMsK,UAAa,CAAC,CAAEuI,OAAU,oBAAqBC,SAAY,UAAW5b,MAAS,GAAK,CAAE2b,OAAU,aAAcC,SAAY,iBAG/iB,CACInc,KAAM,kBAAmB4Z,QAAkCtP,EAAU,CACjE,CAAEtK,KAAM,oBAAqBka,YAAa,IAAKD,aAAa,EAAMe,SAAU,CAAEtK,KAAQ,WAAYuK,SAAY,CAAC,CAAEvK,KAAQ,YAAa4K,SAAY,IAAMC,WAAc,QAAW7Q,QAAW,CAAC,eAAgB4R,WAAc,CAAC,CAAE5L,KAAQ,WAAY4K,SAAY,QAASC,WAAc,SAAWL,WAAc,SAAUC,cAAiB,MAAQnL,cAAiB,EAAGoL,MAAS,eAAgB6B,SAAY,CAAC,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,GAAI,EAAG,EAAG,EAAG,GAAI,GAAI,EAAG,EAAG,GAAI,EAAG,GAAI,EAAG,GAAI,GAAI,EAAG,GAAI,GAAItJ,UAAa,CAAC,CAAEuI,OAAU,qBAAsBC,SAAY,WAAa,CAAED,OAAU,aAAcC,SAAY,cAC7lB,CAAEnc,KAAM,iBAAkBka,YAAa,GAAID,aAAa,EAAMyC,uBAAwB,EAAG1B,SAAU,CAAEtK,KAAQ,OAAQuK,SAAY,GAAIvQ,QAAW,CAAC,cAAe,UAAW4R,WAAc,CAAC,CAAE5L,KAAQ,WAAY4K,SAAY,QAASC,WAAc,SAAWyB,OAAU,GAAI9B,WAAc,SAAUC,cAAiB,EAAGnL,aAAgB,GAAIoL,MAAS,eAAgBhV,KAAQ,WAAYiV,OAAU,QAAS1H,UAAa,CAAC,CAAEuI,OAAU,qBAAsBC,SAAY,cACxc,CAAEnc,KAAM,cAAeka,YAAa,GAAIwC,uBAAwB,EAAG1B,SAAU,CAAEtK,KAAQ,OAAQuK,SAAY,GAAIvQ,QAAW,CAAC,cAAe,UAAW4R,WAAc,CAAC,CAAE5L,KAAQ,WAAY4K,SAAY,IAAMC,WAAc,IAAMyB,OAAU,IAAK9B,WAAc,SAAUC,cAAiB,MAAQnL,aAAgB,GAAIoL,MAAS,eAAgBhV,KAAQ,WAAYiV,OAAU,QAAS1H,UAAa,CAAC,CAAEuI,OAAU,qBAAsBC,SAAY,cAChb,CAAEnc,KAAM,aAAcka,YAAa,GAAID,aAAa,EAAMe,SAAU,CAAEtK,KAAQ,OAAQuK,SAAY,GAAIvQ,QAAW,CAAC,cAAe,UAAW4R,WAAc,CAAC,CAAE5L,KAAQ,WAAY4K,SAAY,QAASC,WAAc,KAAQyB,OAAU,GAAI9B,WAAc,SAAUC,cAAiB,MAAQnL,aAAgB,GAAIoL,MAAS,eAAgBhV,KAAQ,WAAYiV,OAAU,QAAS1H,UAAa,CAAC,CAAEuI,OAAU,qBAAsBC,SAAY,cAC3a,CAAEnc,KAAM,iBAAkBka,YAAa,IAAKD,aAAa,EAAMwB,SAAS,EAAMiB,wBAAyB,EAAG1B,SAAU,CAAEtK,KAAQ,WAAYhG,QAAW,OAAQwQ,WAAc,OAAQE,MAAS,UAAWM,eAAkB,IAAMC,gBAAmB,GAAIC,eAAkB,UAAWqB,SAAY,CAAC,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,IAAK,GAAI,GAAI,GAAI,MACrZ,CAAEjd,KAAM,WAAYka,YAAa,IAAKD,aAAa,EAAMwB,SAAS,EAAMiB,wBAAyB,EAAG1B,SAAU,CAAEtK,KAAQ,WAAYwK,WAAc,YAAaxQ,QAAW,SAAU0Q,MAAS,UAAWM,eAAkB,KAAMC,gBAAmB,EAAGC,eAAkB,UAAWqB,SAAY,CAAC,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,MACpZ,CAAEjd,KAAM,aAAcka,YAAa,IAAKD,aAAa,EAAMe,SAAU,CAAEtK,KAAQ,YAAauK,SAAY,GAAIvQ,QAAW,CAAC,aAAc,UAAW,UAAW0Q,MAAS,QAASI,QAAW,QAASe,OAAU,GAAIpB,cAAiB,MAAQnL,cAAiB,EAAGwM,UAAa,CAAC,EAAG,EAAG,EAAG,IAAK,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,GAAInB,OAAU,MAAO1H,UAAa,CAAC,CAAEuI,OAAU,aAAcC,SAAY,cACva,CAAEnc,KAAM,iBAAkBka,YAAa,IAAKD,aAAa,EAAMe,SAAU,CAAEtK,KAAQ,KAAMuK,SAAY,GAAIvQ,QAAW,CAAC,eAAgB4R,WAAc,CAAC,CAAE5L,KAAQ,WAAY4K,SAAY,QAASC,WAAc,IAAML,WAAc,SAAUC,cAAiB,MAAQnL,cAAiB,EAAGoL,MAAS,WAAYS,UAAa,YAAaC,aAAgB,KAAMC,kBAAqB,EAAGC,UAAa,CAAC,CAAEC,UAAa,KAAM5S,UAAa,IAAM,CAAE4S,UAAa,KAAM5S,UAAa,GAAK,CAAE4S,UAAa,MAAO5S,UAAa,GAAK,CAAE4S,UAAa,KAAM5S,UAAa,IAAMsK,UAAa,CAAC,CAAEuI,OAAU,qBAAsBC,SAAY,YAAc,CAAED,OAAU,oBAAqBC,SAAY,WAAY5b,MAAS,MAC9qB,CAAEP,KAAM,aAAcka,YAAa,IAAKD,aAAa,EAAMwB,SAAS,EAAMiB,wBAAyB,GAAK1B,SAAU,CAAEtK,KAAQ,WAAYhG,QAAW,SAAUwQ,WAAc,WAAYE,MAAS,WAAYM,eAAkB,KAAMC,gBAAmB,GAAIC,eAAkB,WAAYqB,SAAY,CAAC,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,MAC1Z,CAAEjd,KAAM,WAAYka,YAAa,IAAKD,aAAa,EAAMwB,SAAS,EAAMiB,wBAAyB,EAAG1B,SAAU,CAAEtK,KAAQ,WAAYhG,QAAW,SAAUwQ,WAAc,YAAaE,MAAS,UAAWM,eAAkB,IAAMC,gBAAmB,GAAIC,eAAkB,UAAWqB,SAAY,CAAC,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,MACrZ,CAAEjd,KAAM,UAAWka,YAAa,IAAKD,aAAa,EAAMwB,SAAS,EAAMiB,wBAAyB,EAAG1B,SAAU,CAAEtK,KAAQ,WAAYhG,QAAW,SAAUwQ,WAAc,YAAaE,MAAS,QAASM,eAAkB,KAAMC,gBAAmB,GAAIC,eAAkB,UAAWqB,SAAY,CAAC,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,MAClZ,CAAEjd,KAAM,QAASka,YAAa,GAAIc,SAAU,CAAEtK,KAAQ,OAAQuK,SAAY,GAAIvQ,QAAW,CAAC,eAAgB4R,WAAc,CAAC,CAAE5L,KAAQ,WAAY4K,SAAY,OAAQC,WAAc,IAAML,WAAc,SAAUC,cAAiB,MAAQnL,cAAiB,EAAGoL,MAAS,eAAgBhV,KAAQ,aAAciV,OAAU,UAAW1H,UAAa,CAAC,CAAEuI,OAAU,qBAAsBC,SAAY,cAC5X,CAAEnc,KAAM,WAAYka,YAAa,GAAIc,SAAU,CAAEtK,KAAQ,KAAMuK,SAAY,CAAC,CAAEvK,KAAQ,WAAY4K,SAAY,QAASC,WAAc,KAAQ7Q,QAAW,GAAIwQ,WAAc,SAAUC,cAAiB,MAAQnL,cAAiB,EAAGoL,MAAS,kBAAmBS,UAAa,UAAWC,aAAgB,KAAMC,kBAAqB,EAAGC,UAAa,CAAC,CAAEC,UAAa,KAAM5S,UAAa,IAAM,CAAE4S,UAAa,KAAM5S,UAAa,IAAM,CAAE4S,UAAa,MAAO5S,UAAa,GAAK,CAAE4S,UAAa,MAAO5S,UAAa,KAAOsK,UAAa,KAChgB,CAAE3T,KAAM,WAAYka,YAAa,GAAIc,SAAU,CAAEtK,KAAQ,MAAOuK,SAAY,CAAC,CAAEvK,KAAQ,WAAY4K,SAAY,QAASC,WAAc,IAAM7Q,QAAW,CAAC,WAAY8Q,QAAW,QAASN,WAAc,SAAUC,cAAiB,MAAQnL,cAAiB,EAAGoL,MAAS,eAAgB2B,WAAc,QAASpJ,UAAa,CAAC,CAAEuI,OAAU,aAAcC,SAAY,eACjW,CAAEnc,KAAM,YAAaka,YAAa,IAAKuB,SAAS,EAAMiB,wBAAyB,EAAG1B,SAAU,CAAEtK,KAAQ,WAAYhG,QAAW,SAAUwQ,WAAc,YAAaE,MAAS,UAAWM,eAAkB,IAAMC,gBAAmB,GAAIC,eAAkB,UAAWqB,SAAY,CAAC,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,IAAK,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,MACpY,CAAEjd,KAAM,eAAgBka,YAAa,IAAKuB,SAAS,EAAMiB,wBAAyB,EAAG1B,SAAU,CAAEtK,KAAQ,QAAShG,QAAW,SAAUwQ,WAAc,QAASE,MAAS,UAAWM,eAAkB,IAAMC,gBAAmB,GAAIC,eAAkB,SAAUxV,KAAQ,SACrQ,CAAEpG,KAAM,WAAYka,YAAa,GAAIc,SAAU,CAAEtK,KAAQ,YAAauK,SAAY,CAAC,CAAEvK,KAAQ,WAAY4K,SAAY,IAAMC,WAAc,QAAW7Q,QAAW,CAAC,UAAW,UAAW8Q,QAAW,QAASe,OAAU,GAAIrB,WAAc,mBAAoBC,cAAiB,MAAQnL,cAAiB,EAAGoL,MAAS,eAAgBoB,UAAa,CAAC,IAAK,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,GAAInB,OAAU,OAAQ1H,UAAa,KAChd,CAAE3T,KAAM,aAAcka,YAAa,IAAKc,SAAU,CAAEtK,KAAQ,WAAYuK,SAAY,GAAIvQ,QAAW,CAAC,cAAe,UAAW4R,WAAc,CAAC,CAAE5L,KAAQ,WAAY4K,SAAY,QAASC,WAAc,KAAQgB,OAAU,GAAIrB,WAAc,SAAUC,cAAiB,MAAQnL,aAAgB,GAAIoL,MAAS,eAAgB6B,SAAY,CAAC,IAAK,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,GAAItJ,UAAa,CAAC,CAAEuI,OAAU,qBAAsBC,SAAY,iBAG/e,CAAEnc,KAAM,iBAAkB4Z,QAAkCtP,EAAU,CAC5E,CAAEtK,KAAM,oBAAqBgb,SAAU,CAAEtK,KAAQ,KAAMhG,QAAW,OAAQwQ,WAAc,OAAQE,MAAS,WAAYM,eAAkB,IAAMC,gBAAmB,GAAIC,eAAkB,SAAUJ,QAAW,OAAQK,UAAa,UAAWC,aAAgB,QAASC,kBAAqB,GAAIM,iBAAoB,SAAUL,UAAa,CAAC,CAAEC,UAAa,KAAM5S,UAAa,GAAI8S,SAAY,UAAY,CAAEF,UAAa,KAAM5S,UAAa,GAAI8S,SAAY,UAAY,CAAEF,UAAa,KAAM5S,UAAa,EAAG8S,SAAY,UAAY,CAAEF,UAAa,KAAM5S,UAAa,GAAI8S,SAAY,gBAEjjB,CAAEnc,KAAM,kBAAmB4Z,QAAStP,EAAU,CACpC,CAAEtK,KAAM,wBAAyBia,aAAa,EAAOwB,SAAS,EAAMiB,wBAAyB,EAAG1B,SAAU,CAAEtK,KAAQ,WAAYhG,QAAW,SAAUwQ,WAAc,OAAQE,MAAS,WAAYM,eAAkB,IAAMC,gBAAmB,EAAGC,eAAkB,SAAUqB,SAAY,CAAC,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,MACtZ,CAAEjd,KAAM,sBAAuBia,aAAa,EAAOyC,uBAAwB,EAAG1B,SAAU,CAAEtK,KAAQ,OAAQhG,QAAW,OAAQwQ,WAAc,WAAYE,MAAS,WAAYM,eAAkB,IAAMC,gBAAmB,EAAGC,eAAkB,SAAUxV,KAAQ,QAASuW,SAAY,QAASnB,QAAW,SACvS,CAAExb,KAAM,sBAAuBia,aAAa,EAAOyC,uBAAwB,EAAG1B,SAAU,CAAEtK,KAAQ,OAAQhG,QAAW,SAAUwQ,WAAc,WAAYE,MAAS,UAAWM,eAAkB,KAAMC,gBAAmB,GAAIC,eAAkB,SAAUxV,KAAQ,SAAUuW,SAAY,UAAWnB,QAAW,SAC5S,CAAExb,KAAM,wBAAyBia,aAAa,EAAOyC,uBAAwB,EAAG1B,SAAU,CAAEtK,KAAQ,OAAQhG,QAAW,SAAUwQ,WAAc,OAAQE,MAAS,UAAWM,eAAkB,IAAMC,gBAAmB,GAAIC,eAAkB,QAASxV,KAAQ,eAAgBuW,SAAY,QAASnB,QAAW,SAC7S,CAAExb,KAAM,oBAAqBia,aAAa,EAAOyC,wBAAyB,EAAG1B,SAAU,CAAEtK,KAAQ,WAAYhG,QAAW,SAAUwQ,WAAc,OAAQE,MAAS,UAAWM,eAAkB,IAAMC,gBAAmB,EAAGC,eAAkB,WAAYqB,SAAY,CAAC,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,IAAK,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,KAC9V,CAAEjd,KAAM,oBAAqBia,aAAa,EAAOwB,SAAS,EAAMiB,uBAAwB,EAAG1B,SAAU,CAAEtK,KAAQ,QAAShG,QAAW,SAAUwQ,WAAc,cAAeE,MAAS,UAAWM,eAAkB,IAAMC,gBAAmB,GAAIC,eAAkB,SAAUxV,KAAQ,WACjR,CAAEpG,KAAM,sBAAuBia,aAAa,EAAOe,SAAU,CAAEtK,KAAQ,cAAewK,WAAc,OAAQxQ,QAAW,OAAQ0Q,MAAS,WAAYM,eAAkB,IAAMC,gBAAmB,EAAGC,eAAkB,SAAUe,SAAY,QAASnB,QAAW,OAAQY,eAAkB,EAAE,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,GAAI,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,KACzhB,CAAEpc,KAAM,qBAAsBia,aAAa,EAAOe,SAAU,CAAEtK,KAAQ,KAAMwK,WAAc,OAAQxQ,QAAW,kBAAmB0Q,MAAS,QAASM,eAAkB,IAAMC,gBAAmB,EAAGC,eAAkB,UAAWJ,QAAW,OAAQK,UAAa,YAAaC,aAAgB,UAAWC,kBAAqB,EAAGM,iBAAoB,UAAWL,UAAa,CAAC,CAAEC,UAAa,KAAM5S,UAAa,GAAI8S,SAAY,UAAY,CAAEF,UAAa,KAAM5S,UAAa,GAAI8S,SAAY,UAAY,CAAEF,UAAa,KAAM5S,UAAa,GAAI8S,SAAY,UAAY,CAAEF,UAAa,KAAM5S,UAAa,EAAG8S,SAAY,aACrlB,CAAEnc,KAAM,mBAAoBia,aAAa,EAAOe,SAAU,CAAEtK,KAAQ,KAAMwK,WAAc,YAAaxQ,QAAW,SAAU0Q,MAAS,QAASM,eAAkB,IAAMC,gBAAmB,EAAGC,eAAkB,SAAUJ,QAAW,OAAQK,UAAa,YAAaC,aAAgB,QAASC,kBAAqB,EAAGM,iBAAoB,UAAWL,UAAa,CAAC,CAAEC,UAAa,KAAM5S,UAAa,GAAI8S,SAAY,UAAY,CAAEF,UAAa,KAAM5S,UAAa,GAAI8S,SAAY,UAAY,CAAEF,UAAa,MAAO5S,UAAa,EAAG8S,SAAY,WAAa,CAAEF,UAAa,MAAO5S,UAAa,EAAG8S,SAAY,cAClkB,CAAEnc,KAAM,0BAA2Bia,aAAa,EAAOe,SAAU,CAAEtK,KAAQ,YAAahG,QAAW,SAAUwQ,WAAc,WAAYE,MAAS,UAAWM,eAAkB,IAAMC,gBAAmB,EAAGC,eAAkB,SAAUe,SAAY,QAASnB,QAAW,OAAQgB,UAAa,CAAC,IAAK,IAAK,IAAK,IAAK,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,EAAG,EAAG,EAAG,MACxY,CAAExc,KAAM,2BAA4Bia,aAAa,EAAOe,SAAU,CAAEtK,KAAQ,cAAewK,WAAc,YAAaxQ,QAAW,kBAAmB0Q,MAAS,UAAWM,eAAkB,KAAMC,gBAAmB,GAAIC,eAAkB,SAAUe,SAAY,QAASnB,QAAW,OAAQY,eAAkB,CAAC,GAAI,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,EAAG,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,GAAI,GAAI,GAAI,IAAK,IAAK,MAC5jB,CAAEpc,KAAM,2BAA4Bia,aAAa,EAAOe,SAAU,CAAEtK,KAAQ,cAAewK,WAAc,YAAaxQ,QAAW,kBAAmB0Q,MAAS,UAAWM,eAAkB,KAAMC,gBAAmB,GAAIC,eAAkB,QAASe,SAAY,UAAWnB,QAAW,QAASY,eAAkB,CAAC,GAAI,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,GAAI,GAAI,EAAG,EAAG,GAAI,GAAI,GAAI,IAAK,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,EAAG,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,EAAG,EAAG,EAAG,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,IAAK,IAAK,IAAK,IAAK,GAAI,GAAI,EAAG,GAAI,GAAI,GAAI,IAAK,MACljB,CAAEpc,KAAM,4BAA6Bia,aAAa,EAAOe,SAAU,CAAEtK,KAAQ,cAAewK,WAAc,aAAcxQ,QAAW,SAAU0Q,MAAS,QAASM,eAAkB,KAAMC,gBAAmB,GAAIC,eAAkB,SAAUe,SAAY,QAASnB,QAAW,QAASY,eAAkB,CAAC,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,EAAG,GAAI,GAAI,GAAI,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,EAAG,EAAG,EAAG,EAAG,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,EAAG,EAAG,GAAI,GAAI,GAAI,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,MAC/iB,CAAEpc,KAAM,oBAAqBia,aAAa,EAAOe,SAAU,CAAEtK,KAAQ,cAAe,YAAa,WAAYhG,QAAW,SAAU0Q,MAAS,QAASM,eAAkB,KAAMC,gBAAmB,GAAIC,eAAkB,UAAWe,SAAY,QAASnB,QAAW,OAAQY,eAAkB,CAAC,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,GAAI,GAAI,GAAI,GAAI,EAAG,EAAG,EAAG,EAAG,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,GAAI,GAAI,KACxiB,CAAEpc,KAAM,sBAAuBia,aAAa,EAAOe,SAAU,CAAEtK,KAAQ,KAAMwK,WAAc,WAAYxQ,QAAW,SAAU0Q,MAAS,UAAWM,eAAkB,KAAMC,gBAAmB,EAAGC,eAAkB,QAASJ,QAAW,OAAQK,UAAa,UAAWC,aAAgB,cAAeC,kBAAqB,EAAGM,iBAAoB,UAAWL,UAAa,CAAC,CAAEC,UAAa,KAAM5S,UAAa,GAAI8S,SAAY,YAAc,CAAEF,UAAa,KAAM5S,UAAa,EAAG8S,SAAY,YAAc,CAAEF,UAAa,KAAM5S,UAAa,EAAG8S,SAAY,YAAc,CAAEF,UAAa,KAAM5S,UAAa,EAAG8S,SAAY,kBAGtlB,CAAEnc,KAAM,mBAAoB4Z,QAAkCtP,EAAU,CAC7D,CAAEtK,KAAM,oBAAqBka,YAAa,EAAGD,aAAa,EAAMe,SAAU,CAAEtK,KAAQ,YAAahG,QAAW,SAAUwQ,WAAc,YAAaE,MAAS,UAAWM,eAAkB,IAAMC,gBAAmB,GAAIC,eAAkB,UAAWe,SAAY,UAAWnB,QAAW,QAASgB,UAAa,CAAC,IAAK,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,EAAG,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,EAAG,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,EAAG,MACha,CAAExc,KAAM,qBAAsBka,YAAa,GAAID,aAAa,EAAMe,SAAU,CAAEtK,KAAQ,KAAMhG,QAAW,SAAUwQ,WAAc,OAAQE,MAAS,QAASM,eAAkB,KAAMC,gBAAmB,GAAIC,eAAkB,UAAWJ,QAAW,OAAQK,UAAa,UAAWC,aAAgB,QAASC,kBAAqB,EAAGM,iBAAoB,SAAUL,UAAa,CAAC,CAAEC,UAAa,KAAM5S,UAAa,EAAG8S,SAAY,UAAY,CAAEF,UAAa,KAAM5S,UAAa,EAAG8S,SAAY,UAAY,CAAEF,UAAa,MAAO5S,UAAa,EAAG8S,SAAY,UAAY,CAAEF,UAAa,MAAO5S,UAAa,EAAG8S,SAAY,iBAGtlB,CAAEnc,KAAM,iBAAkB4Z,QAAkCtP,EAAU,CACnE,CAAEtK,KAAM,mBAAoBka,YAAa,GAAID,aAAa,EAAMe,SAAU,CAAEtK,KAAQ,OAAQhG,QAAW,SAAUwQ,WAAc,aAAcE,MAAS,UAAWM,eAAkB,KAAMC,gBAAmB,EAAGC,eAAkB,UAAWxV,KAAQ,mBAAoBuW,SAAY,aAAcnB,QAAW,SAClT,CAAExb,KAAM,cAAeia,aAAa,EAAOe,SAAU,CAAEtK,KAAQ,KAAMhG,QAAW,SAAUwQ,WAAc,WAAYE,MAAS,UAAWM,eAAkB,IAAKC,gBAAmB,KAAMC,eAAkB,SAAUJ,QAAW,OAAQK,UAAa,UAAWC,aAAgB,UAAWC,kBAAqB,GAAIM,iBAAoB,SAAUL,UAAa,CAAC,CAAEC,UAAa,MAAO5S,UAAa,GAAI8S,SAAY,UAAY,CAAEF,UAAa,MAAO5S,UAAa,EAAG8S,SAAY,UAAY,CAAEF,UAAa,MAAO5S,UAAa,GAAI8S,SAAY,UAAY,CAAEF,UAAa,MAAO5S,UAAa,EAAG8S,SAAY,iBAE5kB,CAAEnc,KAAM,sBAAuB4Z,QAAkCtP,EAAU,CAC/D,CAAEtK,KAAM,kBAAmBka,YAAa,EAAGD,aAAa,EAAMe,SAAU,CAAEtK,KAAQ,YAAahG,QAAW,SAAUwQ,WAAc,YAAaE,MAAS,UAAWM,eAAkB,KAAMC,gBAAmB,GAAIC,eAAkB,UAAWe,SAAY,QAASnB,QAAW,OAAQgB,UAAa,CAAC,IAAK,IAAK,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,EAAG,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,MAC9Z,CAAExc,KAAM,mBAAoBka,YAAa,EAAGD,aAAa,EAAMe,SAAU,CAAEtK,KAAQ,YAAahG,QAAW,SAAUwQ,WAAc,YAAaE,MAAS,UAAWM,eAAkB,IAAMC,gBAAmB,GAAIC,eAAkB,UAAWe,SAAY,QAASnB,QAAW,OAAQgB,UAAa,CAAC,IAAK,IAAK,GAAI,GAAI,GAAI,GAAI,EAAG,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,MACzY,CAAExc,KAAM,uBAAwBka,YAAa,EAAGD,aAAa,EAAMe,SAAU,CAAEtK,KAAQ,YAAahG,QAAW,SAAUwQ,WAAc,YAAaE,MAAS,UAAWM,eAAkB,KAAMC,gBAAmB,GAAIC,eAAkB,UAAWe,SAAY,aAAcnB,QAAW,OAAQgB,UAAa,CAAC,IAAK,IAAK,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,MAG3Z,CAAExc,KAAM,kBAAmBka,YAAa,EAAGD,aAAa,EAAMe,SAAU,CAAEtK,KAAQ,KAAMhG,QAAW,SAAUwQ,WAAc,YAAaE,MAAS,UAAWM,eAAkB,IAAMC,gBAAmB,EAAGC,eAAkB,UAAWJ,QAAW,OAAQK,UAAa,YAAaC,aAAgB,KAAMC,kBAAqB,EAAGM,iBAAoB,UAAWL,UAAa,CAAC,CAAEC,UAAa,KAAM5S,UAAa,GAAI8S,SAAY,UAAY,CAAEF,UAAa,KAAM5S,UAAa,EAAG8S,SAAY,UAAY,CAAEF,UAAa,KAAM5S,UAAa,EAAG8S,SAAY,UAAY,CAAEF,UAAa,KAAM5S,UAAa,EAAG8S,SAAY,aACxlB,CAAEnc,KAAM,eAAgBka,YAAa,GAAID,aAAa,EAAMe,SAAU,CAAEtK,KAAQ,YAAahG,QAAW,SAAUwQ,WAAc,YAAaE,MAAS,QAASM,eAAkB,KAAMC,gBAAmB,GAAIC,eAAkB,UAAWe,SAAY,QAASnB,QAAW,OAAQgB,UAAa,CAAC,IAAK,IAAK,IAAK,GAAI,IAAK,GAAI,GAAI,IAAK,IAAK,GAAI,IAAK,GAAI,IAAK,GAAI,IAAK,GAAI,GAAI,GAAI,GAAI,IAAK,GAAI,GAAI,GAAI,GAAI,IAAK,GAAI,GAAI,MACrZ,CAAExc,KAAM,kBAAmBka,YAAa,GAAID,aAAa,EAAMe,SAAU,CAAEtK,KAAQ,YAAahG,QAAW,SAAUwQ,WAAc,YAAaE,MAAS,QAASM,eAAkB,IAAMC,gBAAmB,GAAIC,eAAkB,UAAWe,SAAY,QAASnB,QAAW,OAAQgB,UAAa,CAAC,IAAK,EAAG,EAAG,IAAK,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,IAAK,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,GAAI,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,GAAI,KAChY,CAAExc,KAAM,kBAAmBka,YAAa,GAAIc,SAAU,CAAEtK,KAAQ,YAAahG,QAAW,SAAUwQ,WAAc,YAAaE,MAAS,QAASM,eAAkB,KAAMC,gBAAmB,GAAIC,eAAkB,UAAWe,SAAY,QAASnB,QAAW,OAAQgB,UAAa,CAAC,IAAK,GAAI,GAAI,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,GAAI,EAAG,EAAG,EAAG,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,MACjY,CAAExc,KAAM,mBAAoBka,YAAa,GAAID,aAAa,EAAMyC,uBAAwB,EAAG1B,SAAU,CAAEtK,KAAQ,YAAahG,QAAW,SAAUwQ,WAAc,YAAaE,MAAS,QAASM,eAAkB,IAAMC,gBAAmB,GAAIC,eAAkB,UAAWe,SAAY,MAAOnB,QAAW,OAAQgB,UAAa,CAAC,GAAI,GAAI,EAAG,IAAK,EAAG,IAAK,EAAG,GAAI,EAAG,EAAG,GAAI,EAAG,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,MACta,CAAExc,KAAM,mBAAoBka,YAAa,GAAID,aAAa,EAAMe,SAAU,CAAEtK,KAAQ,YAAahG,QAAW,SAAUwQ,WAAc,YAAaE,MAAS,QAASM,eAAkB,KAAMC,gBAAmB,GAAIC,eAAkB,UAAWe,SAAY,QAASnB,QAAW,OAAQgB,UAAa,CAAC,IAAK,IAAK,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,MAC/Y,CAAExc,KAAM,YAAaka,YAAa,GAAID,aAAa,EAAMe,SAAU,CAAEtK,KAAQ,KAAMhG,QAAW,SAAUwQ,WAAc,aAAcE,MAAS,UAAWM,eAAkB,KAAMC,gBAAmB,GAAIC,eAAkB,SAAUJ,QAAW,UAAWK,UAAa,YAAaC,aAAgB,WAAYC,kBAAqB,EAAGM,iBAAoB,UAAWL,UAAa,CAAC,CAAEC,UAAa,KAAM5S,UAAa,GAAI8S,SAAY,UAAY,CAAEF,UAAa,KAAM5S,UAAa,EAAG8S,SAAY,UAAY,CAAEF,UAAa,KAAM5S,UAAa,EAAG8S,SAAY,UAAY,CAAEF,UAAa,KAAM5S,UAAa,EAAG8S,SAAY,aACllB,CAAEnc,KAAM,oBAAqBka,YAAa,GAAID,aAAa,EAAMe,SAAU,CAAEtK,KAAQ,YAAahG,QAAW,kBAAmBwQ,WAAc,YAAaE,MAAS,UAAWM,eAAkB,KAAMC,gBAAmB,GAAIC,eAAkB,SAAUe,SAAY,QAASnB,QAAW,QAASgB,UAAa,CAAC,GAAI,IAAK,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,EAAG,EAAG,EAAG,KAC9Z,CAAExc,KAAM,kBAAmBka,YAAa,GAAID,aAAa,EAAMe,SAAU,CAAEtK,KAAQ,YAAahG,QAAW,kBAAmBwQ,WAAc,YAAaE,MAAS,UAAWM,eAAkB,KAAMC,gBAAmB,GAAIC,eAAkB,SAAUe,SAAY,QAASnB,QAAW,QAASgB,UAAa,CAAC,GAAI,IAAK,IAAK,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,KACpZ,CAAExc,KAAM,iBAAkBka,YAAa,GAAIc,SAAU,CAAEtK,KAAQ,YAAahG,QAAW,kBAAmBwQ,WAAc,YAAaE,MAAS,UAAWM,eAAkB,KAAMC,gBAAmB,GAAIC,eAAkB,SAAUe,SAAY,QAASnB,QAAW,QAASgB,UAAa,CAAC,GAAI,GAAI,GAAI,IAAK,GAAI,IAAK,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,EAAG,KACxY,CAAExc,KAAM,mBAAoBka,YAAa,GAAIc,SAAU,CAAEtK,KAAQ,YAAahG,QAAW,SAAUwQ,WAAc,aAAcE,MAAS,UAAWM,eAAkB,KAAMC,gBAAmB,GAAIC,eAAkB,SAAUe,SAAY,QAASnB,QAAW,QAASgB,UAAa,CAAC,GAAI,IAAK,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,EAAG,EAAG,EAAG,KAC/X,CAAExc,KAAM,iBAAkBka,YAAa,GAAIc,SAAU,CAAEtK,KAAQ,YAAahG,QAAW,SAAUwQ,WAAc,aAAcE,MAAS,UAAWM,eAAkB,KAAMC,gBAAmB,GAAIC,eAAkB,SAAUe,SAAY,QAASnB,QAAW,QAASgB,UAAa,CAAC,GAAI,IAAK,IAAK,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,KACxX,CAAExc,KAAM,gBAAiBka,YAAa,GAAIc,SAAU,CAAEtK,KAAQ,YAAahG,QAAW,SAAUwQ,WAAc,aAAcE,MAAS,UAAWM,eAAkB,KAAMC,gBAAmB,GAAIC,eAAkB,SAAUe,SAAY,QAASnB,QAAW,QAASgB,UAAa,CAAC,GAAI,GAAI,GAAI,IAAK,GAAI,IAAK,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,EAAG,KAC3Y,CAAExc,KAAM,gBAAiBka,YAAa,GAAID,aAAa,EAAMe,SAAU,CAAEtK,KAAQ,WAAYhG,QAAW,SAAUwQ,WAAc,OAAQE,MAAS,UAAWM,eAAkB,IAAMC,gBAAmB,GAAIC,eAAkB,SAAUqB,SAAY,CAAC,IAAK,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,GAAI,EAAG,EAAG,EAAG,GAAI,EAAG,EAAG,GAAI,EAAG,GAAI,EAAG,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,MAC3V,CAAEjd,KAAM,cAAeka,YAAa,GAAID,aAAa,EAAMe,SAAU,CAAEtK,KAAQ,WAAYhG,QAAW,SAAUwQ,WAAc,YAAaE,MAAS,UAAWM,eAAkB,IAAMC,gBAAmB,GAAIC,eAAkB,UAAWqB,SAAY,CAAC,IAAK,EAAG,EAAG,EAAG,GAAI,EAAG,EAAG,GAAI,EAAG,GAAI,GAAI,GAAI,GAAI,GAAI,EAAG,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,SAKxW,CAAEjd,KAAM,mBAAoB4Z,QAAkCtP,EAAU,CAC1D,CAAEtK,KAAM,gBAAiBia,aAAa,EAAOe,SAAU,CAAEtK,KAAQ,cAAe2M,OAAU,EAAGpC,SAAY,CAAE,CAAEvK,KAAQ,YAAa4K,SAAY,KAAMC,WAAc,KAAS+B,cAAgB,EAAOC,YAAe,GAAIC,aAAgB,EAAGC,cAAiB,CAAE,CAAE/M,KAAQ,YAAa4K,SAAY,KAAMC,WAAc,KAAS7Q,QAAW,CAAE,UAAW,kBAAmB,aAAc,SAAU,WAAawQ,WAAc,SAAUwC,qBAAuB,EAAMtC,MAAS,WAAYuC,gBAAkB,EAAMC,cAAiB,GAAIC,YAAe,EAAGrC,QAAW,OAAQsC,aAAgB,EAAGC,aAAgB,EAAGC,aAAgB,GAAIC,YAAe,EAAGC,IAAO,EAAGC,SAAY,GAAIhD,cAAiB,EAAGnL,cAAiB,EAAG5J,KAAQ,SAAUiV,OAAU,OAAQe,eAAkgC,uzK,UAAa,KACx8D,CAAE3T,KAAM,YAAaka,YAAa,IAAKD,aAAa,EAAMwB,SAAS,EAAMT,SAAU,CAAEtK,KAAQ,QAAS2M,OAAU,EAAGpC,SAAY,GAAIqC,cAAgB,EAAOC,YAAe,EAAGC,aAAgB,EAAGa,cAAiB,GAAI3T,QAAW,CAAE,WAAawT,IAAO,EAAGC,SAAY,GAAIhD,cAAiB,EAAGnL,aAAgB,EAAG5J,KAAQ,cAAeuN,UAAa,KAC7V,CAAE3T,KAAM,WAAYka,YAAa,IAAKD,aAAa,EAAMwB,SAAS,EAAMT,SAAU,CAAEtK,KAAQ,QAAS2M,OAAU,EAAGpC,SAAY,GAAIqC,cAAgB,EAAOC,YAAe,EAAGC,aAAgB,EAAGa,cAAiB,GAAI3T,QAAW,CAAE,WAAawT,IAAO,EAAGC,SAAY,GAAIhD,cAAiB,EAAGnL,aAAgB,EAAG5J,KAAQ,iBAAkBuN,UAAa,KACtV,CAAE3T,KAAM,wBAAyBia,aAAa,EAAOe,SAAU,CAAEtK,KAAQ,OAAQ2M,OAAU,EAAGpC,SAAY,CAAE,CAAEvK,KAAQ,WAAY4K,SAAY,SAAUC,WAAc,QAAY+B,cAAgB,EAAOC,YAAe,GAAIC,aAAgB,EAAGC,cAAiB,CAAE,CAAE/M,KAAQ,WAAY4K,SAAY,SAAUC,WAAc,QAAY7Q,QAAW,CAAE,UAAW,kBAAmB,cAAe,UAAW,cAAe,aAAc,OAAQ,UAAYwQ,WAAc,SAAUwC,qBAAuB,EAAON,oBAAuB,EAAG5B,QAAW,UAAWsC,aAAgB,GAAKC,aAAgB,KAAMC,aAAgB,GAAIC,YAAe,EAAGK,gBAAkB,EAAOC,cAAiB,GAAIC,eAAkB,EAAGlC,WAAc,CAAE,CAAE5L,KAAQ,YAAa4K,SAAY,MAAOC,WAAc,SAAW,CAAE7K,KAAQ,WAAY4K,SAAY,MAAOC,WAAc,GAAK,CAAE7K,KAAQ,OAAQ4K,SAAY,IAAKC,WAAc,SAAW,CAAE7K,KAAQ,YAAa4K,SAAY,KAAMC,WAAc,QAAU,CAAE7K,KAAQ,OAAQ4K,SAAY,OAAQC,WAAc,SAAW,CAAE7K,KAAQ,YAAa4K,SAAY,IAAKC,WAAc,UAAakD,gBAAmB,CAAE,CAAE/N,KAAQ,YAAa4K,SAAY,MAAOC,WAAc,SAAW,CAAE7K,KAAQ,WAAY4K,SAAY,MAAOC,WAAc,GAAK,CAAE7K,KAAQ,OAAQ4K,SAAY,IAAKC,WAAc,SAAW,CAAE7K,KAAQ,YAAa4K,SAAY,KAAMC,WAAc,QAAU,CAAE7K,KAAQ,OAAQ4K,SAAY,OAAQC,WAAc,SAAW,CAAE7K,KAAQ,YAAa4K,SAAY,IAAKC,WAAc,UAAaqB,iBAAoB,IAAKC,uBAA0B,GAAIqB,IAAO,EAAGC,SAAY,GAAIO,YAAe,GAAIC,eAAkB,KAAOpC,OAAU,EAAGpB,cAAiB,EAAGnL,cAAiB,EAAG5J,KAAQ,YAAaiV,OAAU,OAAQ1H,UAAa,KACrrD,CAAE3T,KAAM,eAAgBia,aAAa,EAAOe,SAAU,CAAEtK,KAAQ,KAAM2M,OAAU,EAAGpC,SAAY,CAAE,CAAEvK,KAAQ,WAAY4K,SAAY,SAAUC,WAAc,QAAY+B,cAAgB,EAAMC,YAAe,GAAIC,aAAgB,EAAGa,cAAiB,GAAI3T,QAAW,CAAE,UAAW,kBAAmB,cAAgBwQ,WAAc,YAAawC,qBAAuB,EAAOtC,MAAS,kBAAmBuC,gBAAkB,EAAOC,cAAiB,GAAIM,IAAO,EAAGC,SAAY,GAAIhD,cAAiB,EAAGnL,cAAiB,EAAG6L,UAAa,YAAaC,aAAgB,KAAMC,kBAAqB,GAAIC,UAAa,CAAE,CAAEC,UAAa,KAAM5S,UAAa,GAAIuV,SAAY,OAAQ7B,WAAc,GAAK,CAAEd,UAAa,KAAM5S,UAAa,GAAIuV,SAAY,OAAQ7B,WAAc,GAAK,CAAEd,UAAa,KAAM5S,UAAa,GAAIuV,SAAY,OAAQ7B,WAAc,GAAK,CAAEd,UAAa,KAAM5S,UAAa,GAAIuV,SAAY,OAAQ7B,WAAc,IAAOpJ,UAAa,CAAE,CAAEuI,OAAU,aAAcC,SAAY,aAAe,CAAED,OAAU,oBAAqBC,SAAY,UAAW5b,MAAS,GAAK,CAAE2b,OAAU,oBAAqBC,SAAY,QAAS5b,MAAS,GAAK,CAAE2b,OAAU,oBAAqBC,SAAY,YAAa5b,MAAS,MACpqC,CAAEP,KAAM,eAAgBia,aAAa,EAAOe,SAAU,CAAEtK,KAAQ,KAAM2M,OAAU,EAAGpC,SAAY,CAAE,CAAEvK,KAAQ,WAAY4K,SAAY,QAASC,WAAc,GAAK,CAAE7K,KAAQ,YAAa4K,SAAY,MAAOC,WAAc,GAAK,CAAE7K,KAAQ,OAAQ4K,SAAY,IAAMC,WAAc,QAAY+B,cAAgB,EAAOC,YAAe,GAAIC,aAAgB,EAAGC,cAAiB,CAAE,CAAE/M,KAAQ,WAAY4K,SAAY,QAASC,WAAc,GAAK,CAAE7K,KAAQ,YAAa4K,SAAY,MAAOC,WAAc,GAAK,CAAE7K,KAAQ,OAAQ4K,SAAY,IAAMC,WAAc,QAAY7Q,QAAW,CAAE,UAAW,kBAAmB,cAAe,UAAYwQ,WAAc,YAAawC,qBAAuB,EAAOY,gBAAkB,EAAMC,cAAiB,EAAGC,eAAkB,EAAGlC,WAAc,CAAE,CAAE5L,KAAQ,WAAY4K,SAAY,QAASC,WAAc,IAAOsD,gBAAmB,CAAE,CAAEnO,KAAQ,WAAY4K,SAAY,QAASC,WAAc,IAAO2C,IAAO,EAAGC,SAAY,GAAI5B,OAAU,EAAGpB,cAAiB,EAAGnL,cAAiB,EAAG6L,UAAa,YAAaC,aAAgB,KAAMC,kBAAqB,EAAGC,UAAa,CAAE,CAAEC,UAAa,KAAM5S,UAAa,GAAIuV,SAAY,OAAQ7B,WAAc,GAAK,CAAEd,UAAa,KAAM5S,UAAa,EAAGuV,SAAY,OAAQ7B,WAAc,GAAK,CAAEd,UAAa,KAAM5S,UAAa,EAAGuV,SAAY,OAAQ7B,WAAc,GAAK,CAAEd,UAAa,MAAO5S,UAAa,GAAIuV,SAAY,OAAQ7B,WAAc,IAAOpJ,UAAa,CAAE,CAAEuI,OAAU,qBAAsBC,SAAY,SAAW,CAAED,OAAU,oBAAqBC,SAAY,UAAW5b,MAAS,GAAK,CAAE2b,OAAU,oBAAqBC,SAAY,UAAW5b,MAAS,GAAK,CAAE2b,OAAU,oBAAqBC,SAAY,UAAW5b,MAAS,MACzmD,CAAEP,KAAM,gBAAiBia,aAAa,EAAOe,SAAU,CAAEtK,KAAQ,KAAM2M,OAAU,EAAGpC,SAAY,CAAE,CAAEvK,KAAQ,WAAY4K,SAAY,QAASC,WAAc,QAAY+B,cAAgB,EAAMC,YAAe,EAAGC,aAAgB,EAAGa,cAAiB,GAAI3T,QAAW,CAAE,UAAW,kBAAmB,UAAYwQ,WAAc,SAAUwC,qBAAuB,EAAOQ,IAAO,EAAGC,SAAY,GAAI5B,OAAU,EAAGpB,cAAiB,EAAGnL,cAAiB,EAAG6L,UAAa,YAAaC,aAAgB,KAAMC,kBAAqB,EAAGC,UAAa,CAAE,CAAEC,UAAa,KAAM5S,UAAa,GAAIuV,SAAY,OAAQ7B,WAAc,GAAK,CAAEd,UAAa,MAAO5S,UAAa,EAAGuV,SAAY,OAAQ7B,WAAc,GAAK,CAAEd,UAAa,KAAM5S,UAAa,EAAGuV,SAAY,OAAQ7B,WAAc,GAAK,CAAEd,UAAa,KAAM5S,UAAa,EAAGuV,SAAY,OAAQ7B,WAAc,IAAOpJ,UAAa,CAAE,CAAEuI,OAAU,aAAcC,SAAY,SAAW,CAAED,OAAU,aAAcC,SAAY,gBACp6B,CAAEnc,KAAM,OAAQia,aAAa,EAAOe,SAAU,CAAEtK,KAAQ,KAAM2M,OAAU,EAAGpC,SAAY,GAAIqC,cAAgB,EAAOC,YAAe,GAAIC,aAAgB,EAAGC,cAAiB,GAAI/S,QAAW,CAAE,UAAW,aAAc,UAAY0Q,MAAS,kBAAmBuC,gBAAkB,EAAOC,cAAiB,GAAIM,IAAO,EAAGC,SAAY,GAAI5B,OAAU,GAAIpB,cAAiB,MAAQnL,cAAiB,EAAG6L,UAAa,UAAWC,aAAgB,cAAeC,kBAAqB,EAAGC,UAAa,CAAE,CAAEC,UAAa,KAAM5S,UAAa,GAAIuV,SAAY,OAAQ7B,WAAc,GAAK,CAAEd,UAAa,MAAO5S,UAAa,GAAIuV,SAAY,OAAQ7B,WAAc,GAAK,CAAEd,UAAa,MAAO5S,UAAa,EAAGuV,SAAY,OAAQ7B,WAAc,GAAK,CAAEd,UAAa,MAAO5S,UAAa,EAAGuV,SAAY,OAAQ7B,WAAc,IAAOpJ,UAAa,CAAE,CAAEuI,OAAU,oBAAqBC,SAAY,UAAW5b,MAAS,GAAK,CAAE2b,OAAU,oBAAqBC,SAAY,YAAa5b,MAAS,GAAK,CAAE2b,OAAU,oBAAqBC,SAAY,YAAa5b,MAAS,GAAK,CAAE2b,OAAU,oBAAqBC,SAAY,UAAW5b,MAAS,GAAK,CAAE2b,OAAU,oBAAqBC,SAAY,cAC3mC,CAAEnc,KAAM,eAAgBia,aAAa,EAAOe,SAAU,CAAEtK,KAAQ,KAAM2M,OAAU,EAAGpC,SAAY,GAAIvQ,QAAW,CAAE,cAAgB0Q,MAAS,kBAAmBD,cAAiB,EAAGnL,cAAiB,EAAG6L,UAAa,YAAaC,aAAgB,KAAMC,kBAAqB,GAAIC,UAAa,CAAE,CAAEC,UAAa,KAAM5S,UAAa,IAAM,CAAE4S,UAAa,KAAM5S,UAAa,GAAK,CAAE4S,UAAa,KAAM5S,UAAa,GAAK,CAAE4S,UAAa,KAAM5S,UAAa,KAAQsK,UAAa,CAAE,CAAEuI,OAAU,oBAAqBC,SAAY,YAAa5b,MAAS,GAAK,CAAE2b,OAAU,oBAAqBC,SAAY,YAAa5b,MAAS,GAAK,CAAE2b,OAAU,oBAAqBC,SAAY,gBACxoB,CAAEnc,KAAM,gBAAiBia,aAAa,EAAOe,SAAU,CAAEtK,KAAQ,gBAAiB2M,OAAU,EAAGpC,SAAY,CAAE,CAAEvK,KAAQ,YAAa4K,SAAY,OAAQC,WAAc,GAAK,CAAE7K,KAAQ,OAAQ4K,SAAY,IAAMC,WAAc,KAAS7Q,QAAW,CAAE,cAAe,QAAU4R,WAAc,CAAE,CAAE5L,KAAQ,WAAY4K,SAAY,QAASC,WAAc,SAAYmD,YAAe,GAAIC,eAAkB,GAAKxD,cAAiB,EAAGnL,cAAiB,EAAGwM,UAAa,CAAE,GAAI,IAAK,GAAI,GAAI,EAAG,EAAG,EAAG,IAAK,EAAG,EAAG,EAAG,GAAI,GAAI,EAAG,GAAI,IAAK,EAAG,EAAG,EAAG,EAAG,EAAG,GAAI,EAAG,EAAG,GAAI,EAAG,EAAG,IAAMnB,OAAU,QAASoB,cAAiB,EAAG9I,UAAa,CAAE,CAAEuI,OAAU,qBAAsBC,SAAY,YACxpB,CAAEnc,KAAM,oBAAqBia,aAAa,EAAOe,SAAU,CAAEtK,KAAQ,cAAe2M,OAAU,EAAGpC,SAAY,CAAE,CAAEvK,KAAQ,WAAY4K,SAAY,IAAMC,WAAc,KAAS+B,cAAgB,EAAMC,YAAe,EAAGC,aAAgB,EAAGa,cAAiB,GAAI3T,QAAW,CAAE,UAAW,SAAU,UAAYwT,IAAO,EAAGC,SAAY,GAAInB,OAAU,GAAIT,OAAU,GAAIpB,cAAiB,MAAQnL,cAAiB,EAAG5J,KAAQ,SAAUiV,OAAU,aAAce,eAAkgC,uzK,UAAa,KACptD,CAAE3T,KAAM,uBAAwBia,aAAa,EAAOe,SAAU,CAAEtK,KAAQ,cAAe2M,OAAU,EAAGpC,SAAY,CAAE,CAAEvK,KAAQ,WAAY4K,SAAY,SAAUC,WAAc,QAAY+B,cAAgB,EAAMC,YAAe,GAAIC,aAAgB,EAAGa,cAAiB,GAAI3T,QAAW,CAAE,UAAW,kBAAmB,UAAW,SAAU,UAAYwQ,WAAc,YAAawC,qBAAuB,EAAOlC,QAAW,UAAWsC,aAAgB,GAAKC,aAAgB,KAAMC,aAAgB,GAAIC,YAAe,EAAGC,IAAO,EAAGC,SAAY,GAAInB,OAAU,GAAIT,OAAU,GAAIpB,cAAiB,EAAGnL,cAAiB,EAAG5J,KAAQ,SAAUiV,OAAU,YAAae,eAAkB,CAAE,EAAK,GAAI,EAAK,GAAI,EAAK,GAAI,EAAK,EAAG,EAAK,EAAG,GAAM,EAAG,GAAM,EAAG,GAAM,GAAI,GAAM,GAAI,GAAM,GAAI,IAAO,GAAI,IAAO,GAAI,IAAO,GAAI,IAAO,GAAI,IAAO,GAAI,IAAO,GAAI,IAAO,GAAI,IAAO,GAAI,IAAO,GAAI,IAAO,GAAI,IAAO,GAAI,IAAO,GAAI,IAAO,GAAI,IAAO,GAAI,IAAO,GAAI,IAAO,GAAI,IAAO,GAAI,IAAO,GAAI,IAAO,GAAI,IAAO,GAAI,IAAO,GAAI,GAAM,GAAI,GAAM,GAAI,GAAM,GAAI,GAAM,EAAG,GAAM,EAAG,GAAM,EAAG,GAAM,EAAG,GAAM,EAAG,IAAO,EAAG,IAAO,EAAG,IAAO,EAAG,IAAO,EAAG,IAAO,EAAG,IAAO,EAAG,IAAO,EAAG,IAAO,EAAG,IAAO,EAAG,IAAO,EAAG,IAAO,EAAG,IAAO,EAAG,IAAO,EAAG,GAAM,EAAG,GAAM,EAAG,GAAM,EAAG,GAAM,EAAG,GAAM,GAAI,GAAM,GAAI,GAAM,GAAI,GAAM,GAAI,GAAM,GAAI,GAAM,GAAI,GAAM,GAAI,GAAM,IAAMgC,uzK,UAAa,KAC93D,CAAE3T,KAAM,cAAeia,aAAa,EAAOe,SAAU,CAAEtK,KAAQ,QAAS2M,OAAU,EAAGpC,SAAY,CAAE,CAAEvK,KAAQ,WAAY4K,SAAY,SAAUC,WAAc,QAAU,CAAE7K,KAAQ,YAAa4K,SAAY,OAAQC,WAAc,QAAY+B,cAAgB,EAAOC,YAAe,GAAIC,aAAgB,EAAGC,cAAiB,CAAE,CAAE/M,KAAQ,WAAY4K,SAAY,SAAUC,WAAc,QAAU,CAAE7K,KAAQ,YAAa4K,SAAY,OAAQC,WAAc,QAAY7Q,QAAW,CAAE,UAAW,kBAAmB,cAAe,cAAe,SAAU,UAAYwQ,WAAc,WAAYwC,qBAAuB,EAAON,oBAAuB,EAAGkB,gBAAkB,EAAOC,cAAiB,GAAIC,eAAkB,EAAGlC,WAAc,GAAImC,gBAAmB,GAAII,gBAAmB,CAAE,CAAEnO,KAAQ,WAAY4K,SAAY,QAASC,WAAc,IAAO2C,IAAO,EAAGC,SAAY,GAAInB,OAAU,GAAIT,OAAU,EAAGpB,cAAiB,EAAGnL,cAAiB,EAAG6L,UAAa,cAAeC,aAAgB,KAAMC,kBAAqB,EAAGC,UAAa,CAAE,CAAEC,UAAa,KAAM5S,UAAa,GAAIuV,SAAY,WAAY7B,WAAc,GAAK,CAAEd,UAAa,MAAO5S,UAAa,GAAIuV,SAAY,WAAY7B,WAAc,GAAK,CAAEd,UAAa,KAAM5S,UAAa,GAAIuV,SAAY,WAAY7B,WAAc,GAAK,CAAEd,UAAa,KAAM5S,UAAa,EAAGuV,SAAY,WAAY7B,WAAc,GAAK,CAAEd,UAAa,KAAM5S,UAAa,EAAGuV,SAAY,WAAY7B,WAAc,GAAK,CAAEd,UAAa,KAAM5S,UAAa,EAAGuV,SAAY,WAAY7B,WAAc,IAAOpJ,UAAa,KAE3+C,CAAE3T,KAAM,YAAaia,aAAa,EAAOe,SAAS,CAAEtK,KAAQ,YAAa2M,OAAU,GAAIpC,SAAY,GAAIvQ,QAAW,CAAE,cAAe,UAAW,UAAY4R,WAAc,CAAE,CAAE5L,KAAQ,WAAY4K,SAAY,MAAOC,WAAc,UAAa2C,IAAO,EAAG3B,OAAU,EAAGpB,cAAiB,MAAQnL,cAAiB,EAAGwM,UAAa,CAAE,IAAK,GAAI,GAAI,GAAI,GAAI,GAAI,EAAG,GAAI,GAAI,GAAI,GAAI,IAAK,IAAK,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,EAAG,EAAG,EAAG,EAAG,GAAKnB,OAAU,SAAU1H,UAAa,CAAE,CAAEuI,OAAU,qBAAsBC,SAAY,qB,6rBCjXrf,SAAA2C,EAAwEC,EAAYC,G,oBACnG,IAAkB,IAAAC,EAAAC,EAAAF,GAAIG,EAAAF,EAAAG,QAAED,EAAAE,KAAAF,EAAAF,EAAAG,OAAA,CAAnB,IAAME,EAAGH,EAAArgB,MACb,GAAIwgB,aAAeC,KAClBR,EAAQtf,YAAY6f,QACd,GAAmB,iBAARA,EACjBP,EAAQtf,YAAYJ,SAASmgB,eAAeF,SACtC,GAAmB,mBAARA,EACjBR,EAAiBC,EAAS,CAACO,WACrB,GAAIrhB,MAAMwhB,QAAQH,GACxBR,EAAiBC,EAASO,QACpB,GAAIA,GAAyB,oBAAXI,QAA0D,mBAAzBJ,EAAII,OAAOC,UACpEb,EAAiBC,EAAaa,EAAAN,SACxB,GAAIA,GAAOA,EAAI5jB,cAAgBiT,QAAUoQ,aAAmBc,Q,IAElE,IAAkB,IAAAC,GAAAC,OAAA,EAAAb,EAAAvQ,OAAO7C,KAAKwT,KAAIU,EAAAF,EAAAV,QAAEY,EAAAX,KAAAW,EAAAF,EAAAV,OAAA,CAA/B,IAAMxgB,EAAGohB,EAAAlhB,MACPA,EAAQwgB,EAAI1gB,GAST,GAAY,UAARA,EACS,iBAAVE,EACVigB,EAAQkB,aAAa,QAASnhB,GACpBb,MAAMwhB,QAAQH,IAASxgB,GAA2B,oBAAX4gB,QAA4D,mBAA3B5gB,EAAM4gB,OAAOC,UAC/FZ,EAAQkB,aAAa,QAASL,EAAI9gB,GAAOohB,KAAK,MAE9Cha,QAAQia,KAAK,WAAavhB,EAAM,WAAcE,EAAQ,QAAWigB,EAAQqB,QAAU,kBAE9E,GAAY,UAARxhB,EACV,GAAIE,GAASA,EAAMpD,cAAgBiT,O,IAClC,IAAuB,IAAA0R,GAAAC,OAAA,EAAApB,EAAAvQ,OAAO7C,KAAKhN,KAAMyhB,EAAAF,EAAAjB,QAAEmB,EAAAlB,KAAAkB,EAAAF,EAAAjB,OAAA,CAAtC,IAAMoB,EAAQD,EAAAzhB,MACd0hB,KAAuCzB,EAAS0B,MAE5C1B,EAAS0B,MAAMD,GAAY1hB,EAAM0hB,GAGbzB,EAAS0B,MAAMC,YAAYF,EAAU1hB,EAAM0hB,GAEvE,C,uGAEDzB,EAAQkB,aAAarhB,EAAKE,OAEC,mBAAlB,EAEJigB,EAASngB,GAAOE,EACM,kBAAlB,EAENA,EAAOigB,EAAQkB,aAAarhB,EAAK,IAChCmgB,EAAQ4B,gBAAgB/hB,GAG7BmgB,EAAQkB,aAAarhB,EAAKE,EAE3B,C,uGAGDigB,EAAQtf,YAAYJ,SAASmgB,eAAeF,GAE7C,C,kGACD,OAAOP,CACR,CAEO,IAAM6B,EAAgB,6B,gUC8IhBC,E,eD5Ia,IAAmB7B,EAAA,GAAA8B,EAAA,EAAnBA,EAAmBC,UAAA1gB,OAAnBygB,IAAA9B,EAAmB8B,GAAAC,UAAAD,GAC5C,OAAOzhB,SAAS2hB,cAAcC,yBAAyBjC,EAAKkB,OAC7D,EC2IagB,E,eDxIY,IAAmBlC,EAAA,GAAA8B,EAAA,EAAnBA,EAAmBC,UAAA1gB,OAAnBygB,IAAA9B,EAAmB8B,GAAAC,UAAAD,GAU3C,IATA,IAAMK,EAA6B9hB,SAAS+hB,yBAQtCC,GAAqB,IAAIC,WAAYC,gBAAgB,2CAA+CvC,EAAKkB,OAAS,SAAU,iBAAiBsB,gBACnH,OAAzBH,EAAUI,YAChBpiB,SAASqiB,WAAWL,EAAUI,YAAY,GAC1CN,EAAS1hB,YAAY4hB,EAAUI,YAGhC,OAAON,CACR,E,WC0HWQ,GACJd,EAAMc,GAAQ,W,IAAC,IAAmB3C,EAAA,GAAA8B,EAAA,EAAnBA,EAAmBC,UAAA1gB,OAAnBygB,IAAA9B,EAAmB8B,GAAAC,UAAAD,GAAK,OAAAhC,EAAiBzf,SAASC,cAAcqiB,GAAO3C,EAA/C,C,MAD9C,IAAmB,IAAA4C,EAAA1C,EAAA,+jBAA+jB2C,MAAM,MAAI/B,EAAA8B,EAAAxC,QAAAU,EAAAT,KAAAS,EAAA8B,EAAAxC,OAAA,C,EAA7kBU,EAAAhhB,MAEd,C,mHACUgjB,GAEV,GADMZ,EAAKY,GAAQ,W,IAAC,IAAmB9C,EAAA,GAAA8B,EAAA,EAAnBA,EAAmBC,UAAA1gB,OAAnBygB,IAAA9B,EAAmB8B,GAAAC,UAAAD,GAAK,OAAAhC,EAA8Bzf,SAAS0iB,gBAAgBnB,EAAOkB,GAAO9C,EAArE,EACxC,IAAIhG,KAAK8I,GAAO,CACnB,IAAME,EAAgBF,EAAKzI,QAAQ,KAAM,KACnC6H,EAAKc,GAAiB,W,IAAC,IAAmBhD,EAAA,GAAA8B,EAAA,EAAnBA,EAAmBC,UAAA1gB,OAAnBygB,IAAA9B,EAAmB8B,GAAAC,UAAAD,GAAK,OAAAhC,EAA8Bzf,SAAS0iB,gBAAgBnB,EAAOkB,GAAO9C,EAArE,CACrD,C,MALF,IAAmB,IAAAgB,EAAAd,EAAA,8vBAA8vB2C,MAAM,MAAIxB,GAAAL,EAAAZ,QAAAiB,GAAAhB,KAAAgB,GAAAL,EAAAZ,OAAA,C,EAA5wBiB,GAAAvhB,MAMd,C,4GCjNYmjB,GAulMF,kBAAOC,GACVvmB,KAAKwmB,YAAYC,O,CAGjB,8BAAOC,CAAwB3R,EAAc4R,GAE7C,GAA2F,SAAvFC,iBAAiB5mB,KAAK6mB,GAAeC,iBAAiB,uBAAuBC,OAAmB,CAChG,IAAIC,EACJ,OAAQjS,GACJ,YACIiS,EAAOV,GAAYW,cAAcN,EAAUL,GAAYW,cAAcviB,QACrE,MAEJ,UACIsiB,EAAOV,GAAYY,YAAYP,EAAUL,GAAYY,YAAYxiB,QACjE,MAGJ,QACIsiB,EAAOV,GAAYa,cAAcR,EAAUL,GAAYa,cAAcziB,QAI7E,IAAI0iB,EAAQ,cAKZ,MAAsB,CAAEC,iBAJUf,GAAYgB,YAAaF,EAAMG,KAAKP,EAAKK,kBAAsC,IAIlDG,eAH/BlB,GAAYgB,YAAaF,EAAMG,KAAKP,EAAKQ,gBAAoC,IAGXC,cAFnEnB,GAAYgB,YAAaF,EAAMG,KAAKP,EAAKS,eAAmC,IAEwBC,YADtGpB,GAAYgB,YAAaF,EAAMG,KAAKP,EAAKU,aAAiC,IAE1G,CACD,OAAQ3S,GACJ,YAAgB,CACZ,MAAM4S,GAAoCf,iBAAiB5mB,KAAK6mB,GAAeC,iBAAiB,iCAC1Fc,GAAyChB,iBAAiB5mB,KAAK6mB,GAAeC,iBAAiB,uCAC/Fe,GAAoCjB,iBAAiB5mB,KAAK6mB,GAAeC,iBAAiB,iCAC1FgB,GAAyClB,iBAAiB5mB,KAAK6mB,GAAeC,iBAAiB,uCAC/FiB,GAAoCnB,iBAAiB5mB,KAAK6mB,GAAeC,iBAAiB,iCAC1FkB,GAAyCpB,iBAAiB5mB,KAAK6mB,GAAeC,iBAAiB,uCAC/FmB,GAAkCrB,iBAAiB5mB,KAAK6mB,GAAeC,iBAAiB,+BACxFoB,GAAuCtB,iBAAiB5mB,KAAK6mB,GAAeC,iBAAiB,qCAC7FqB,GAAkCvB,iBAAiB5mB,KAAK6mB,GAAeC,iBAAiB,+BACxFsB,GAAuCxB,iBAAiB5mB,KAAK6mB,GAAeC,iBAAiB,qCAC7FuB,GAAkCzB,iBAAiB5mB,KAAK6mB,GAAeC,iBAAiB,+BACxFwB,GAAuC1B,iBAAiB5mB,KAAK6mB,GAAeC,iBAAiB,qCAC7FyB,GAAiC3B,iBAAiB5mB,KAAK6mB,GAAeC,iBAAiB,8BACvF0B,GAAsC5B,iBAAiB5mB,KAAK6mB,GAAeC,iBAAiB,oCAC5F2B,GAAiC7B,iBAAiB5mB,KAAK6mB,GAAeC,iBAAiB,8BACvF4B,GAAsC9B,iBAAiB5mB,KAAK6mB,GAAeC,iBAAiB,oCAC5F6B,GAAiC/B,iBAAiB5mB,KAAK6mB,GAAeC,iBAAiB,8BACvF8B,GAAsChC,iBAAiB5mB,KAAK6mB,GAAeC,iBAAiB,oCAC5F+B,GAA+BjC,iBAAiB5mB,KAAK6mB,GAAeC,iBAAiB,4BACrFgC,GAAoClC,iBAAiB5mB,KAAK6mB,GAAeC,iBAAiB,kCAC1FiC,GAA+BnC,iBAAiB5mB,KAAK6mB,GAAeC,iBAAiB,4BACrFkC,GAAoCpC,iBAAiB5mB,KAAK6mB,GAAeC,iBAAiB,kCAC1FmC,GAA+BrC,iBAAiB5mB,KAAK6mB,GAAeC,iBAAiB,4BACrFoC,GAAoCtC,iBAAiB5mB,KAAK6mB,GAAeC,iBAAiB,kCAEhG,IAaIqC,EAAkC,CAAE9B,iBAbN,SAAYM,EAA6BhB,GAAWiB,EAAiCxmB,EAAOkY,qBAAwB,KAAO,IAAO,MAC5JuO,EAA2BlB,GAAWmB,GAAiC,OACvEC,EAA2BpB,GAAWqB,GAAiC,KAWAR,eAV/C,SAAYS,EAA2BtB,GAAWuB,EAA+B9mB,EAAOkY,qBAAwB,KAAO,IAAO,MACtJ6O,EAAyBxB,GAAWyB,GAA+B,OACnEC,EAAyB1B,GAAW2B,GAA+B,KAQuCb,cAPnF,SAAYc,EAA0B5B,GAAW6B,EAA8BpnB,EAAOkY,qBAAwB,KAAO,IAAO,MACnJmP,EAAwB9B,GAAW+B,GAA8B,OACjEC,EAAwBhC,GAAWiC,GAA8B,KAK0ElB,YAJtH,SAAYmB,EAAwBlC,GAAWmC,EAA4B1nB,EAAOkY,qBAAwB,KAAO,IAAO,MAC7IyP,EAAsBpC,GAAWqC,GAA4B,OAC7DC,EAAsBtC,GAAWuC,GAA4B,MAIrE,OADA5C,GAAYE,YAAYtiB,IAAIyiB,EAASwC,GAC9BA,CACV,CAAC,UAAc,CAEZ,MAAMC,GAAkCxC,iBAAiB5mB,KAAK6mB,GAAeC,iBAAiB,+BACxFuC,GAAuCzC,iBAAiB5mB,KAAK6mB,GAAeC,iBAAiB,qCAC7FwC,GAAkC1C,iBAAiB5mB,KAAK6mB,GAAeC,iBAAiB,+BACxFyC,GAAuC3C,iBAAiB5mB,KAAK6mB,GAAeC,iBAAiB,qCAC7F0C,GAAkC5C,iBAAiB5mB,KAAK6mB,GAAeC,iBAAiB,+BACxF2C,GAAuC7C,iBAAiB5mB,KAAK6mB,GAAeC,iBAAiB,qCAC7F4C,GAAgC9C,iBAAiB5mB,KAAK6mB,GAAeC,iBAAiB,6BACtF6C,GAAqC/C,iBAAiB5mB,KAAK6mB,GAAeC,iBAAiB,mCAC3F8C,GAAgChD,iBAAiB5mB,KAAK6mB,GAAeC,iBAAiB,6BACtF+C,GAAqCjD,iBAAiB5mB,KAAK6mB,GAAeC,iBAAiB,mCAC3FgD,GAAgClD,iBAAiB5mB,KAAK6mB,GAAeC,iBAAiB,6BACtFiD,GAAqCnD,iBAAiB5mB,KAAK6mB,GAAeC,iBAAiB,mCAC3FkD,GAA+BpD,iBAAiB5mB,KAAK6mB,GAAeC,iBAAiB,4BACrFmD,GAAoCrD,iBAAiB5mB,KAAK6mB,GAAeC,iBAAiB,kCAC1FoD,GAA+BtD,iBAAiB5mB,KAAK6mB,GAAeC,iBAAiB,4BACrFqD,GAAoCvD,iBAAiB5mB,KAAK6mB,GAAeC,iBAAiB,kCAC1FsD,GAA+BxD,iBAAiB5mB,KAAK6mB,GAAeC,iBAAiB,4BACrFuD,GAAoCzD,iBAAiB5mB,KAAK6mB,GAAeC,iBAAiB,kCAC1FwD,GAA6B1D,iBAAiB5mB,KAAK6mB,GAAeC,iBAAiB,0BACnFyD,GAAkC3D,iBAAiB5mB,KAAK6mB,GAAeC,iBAAiB,gCACxF0D,GAA6B5D,iBAAiB5mB,KAAK6mB,GAAeC,iBAAiB,0BACnF2D,GAAkC7D,iBAAiB5mB,KAAK6mB,GAAeC,iBAAiB,gCACxF4D,GAA6B9D,iBAAiB5mB,KAAK6mB,GAAeC,iBAAiB,0BACnF6D,GAAkC/D,iBAAiB5mB,KAAK6mB,GAAeC,iBAAiB,gCAE9F,IAaIqC,EAAkC,CAAE9B,iBAbN,SAAY+B,EAA2BzC,GAAW0C,EAA+BjoB,EAAOoY,mBAAsB,KAAO,IAAO,MACtJ8P,EAAyB3C,GAAW4C,GAA+B,OACnEC,EAAyB7C,GAAW8C,GAA+B,KAWIjC,eAV/C,SAAYkC,EAAyB/C,GAAWgD,EAA6BvoB,EAAOoY,mBAAsB,KAAO,IAAO,MAChJoQ,EAAuBjD,GAAWkD,GAA6B,OAC/DC,EAAuBnD,GAAWoD,GAA6B,KAQ2CtC,cAPnF,SAAYuC,EAAwBrD,GAAWsD,EAA4B7oB,EAAOoY,mBAAsB,KAAO,IAAO,MAC7I0Q,EAAsBvD,GAAWwD,GAA4B,OAC7DC,EAAsBzD,GAAW0D,GAA4B,KAK8E3C,YAJtH,SAAY4C,EAAsB3D,GAAW4D,EAA0BnpB,EAAOoY,mBAAsB,KAAO,IAAO,MACvIgR,EAAoB7D,GAAW8D,GAA0B,OACzDC,EAAoB/D,GAAWgE,GAA0B,MAIjE,OADArE,GAAYE,YAAYtiB,IAAIyiB,EAASwC,GAC9BA,CACV,CAED,QAAS,CACL,MAAMyB,GAAoChE,iBAAiB5mB,KAAK6mB,GAAeC,iBAAiB,iCAC1F+D,GAAyCjE,iBAAiB5mB,KAAK6mB,GAAeC,iBAAiB,uCAC/FgE,GAAoClE,iBAAiB5mB,KAAK6mB,GAAeC,iBAAiB,iCAC1FiE,GAAyCnE,iBAAiB5mB,KAAK6mB,GAAeC,iBAAiB,uCAC/FkE,GAAoCpE,iBAAiB5mB,KAAK6mB,GAAeC,iBAAiB,iCAC1FmE,GAAyCrE,iBAAiB5mB,KAAK6mB,GAAeC,iBAAiB,uCAC/FoE,GAAkCtE,iBAAiB5mB,KAAK6mB,GAAeC,iBAAiB,+BACxFqE,GAAuCvE,iBAAiB5mB,KAAK6mB,GAAeC,iBAAiB,qCAC7FsE,GAAkCxE,iBAAiB5mB,KAAK6mB,GAAeC,iBAAiB,+BACxFuE,GAAuCzE,iBAAiB5mB,KAAK6mB,GAAeC,iBAAiB,qCAC7FwE,GAAkC1E,iBAAiB5mB,KAAK6mB,GAAeC,iBAAiB,+BACxFyE,GAAuC3E,iBAAiB5mB,KAAK6mB,GAAeC,iBAAiB,qCAC7F0E,GAAiC5E,iBAAiB5mB,KAAK6mB,GAAeC,iBAAiB,8BACvF2E,GAAsC7E,iBAAiB5mB,KAAK6mB,GAAeC,iBAAiB,oCAC5F4E,GAAiC9E,iBAAiB5mB,KAAK6mB,GAAeC,iBAAiB,8BACvF6E,GAAsC/E,iBAAiB5mB,KAAK6mB,GAAeC,iBAAiB,oCAC5F8E,GAAiChF,iBAAiB5mB,KAAK6mB,GAAeC,iBAAiB,8BACvF+E,GAAsCjF,iBAAiB5mB,KAAK6mB,GAAeC,iBAAiB,oCAC5FgF,GAA+BlF,iBAAiB5mB,KAAK6mB,GAAeC,iBAAiB,4BACrFiF,GAAoCnF,iBAAiB5mB,KAAK6mB,GAAeC,iBAAiB,kCAC1FkF,GAA+BpF,iBAAiB5mB,KAAK6mB,GAAeC,iBAAiB,4BACrFmF,GAAoCrF,iBAAiB5mB,KAAK6mB,GAAeC,iBAAiB,kCAC1FoF,GAA+BtF,iBAAiB5mB,KAAK6mB,GAAeC,iBAAiB,4BACrFqF,GAAoCvF,iBAAiB5mB,KAAK6mB,GAAeC,iBAAiB,kCAEhG,IAaIqC,EAAkC,CAAE9B,iBAbN,SAAYuD,EAA4BjE,GAAWkE,EAAgCzpB,EAAOgY,qBAAwB,KAAO,IAAO,MAC1J0R,GAA4B,GAAMC,EAAgC9f,KAAKmhB,MAAMzF,EAAU,IAAQ,OAC/FqE,GAA4B,GAAMC,EAAgChgB,KAAKmhB,MAAMzF,EAAU,IAAQ,KAWxBa,eAV/C,SAAY0D,EAA0BvE,GAAWwE,EAA8B/pB,EAAOgY,qBAAwB,KAAO,IAAO,MACpJgS,GAA0B,GAAMC,EAA8BpgB,KAAKmhB,MAAMzF,EAAU,IAAQ,OAC3F2E,GAA0B,GAAMC,EAA8BtgB,KAAKmhB,MAAMzF,EAAU,IAAQ,KAQec,cAPnF,SAAY+D,EAAyB7E,GAAW8E,EAA6BrqB,EAAOgY,qBAAwB,KAAO,IAAO,MACjJsS,GAAyB,GAAMC,EAA6B1gB,KAAKmhB,MAAMzF,EAAU,IAAQ,OACzFiF,GAAyB,GAAMC,EAA6B5gB,KAAKmhB,MAAMzF,EAAU,IAAQ,KAKkDe,YAJtH,SAAYoE,EAAuBnF,GAAWoF,EAA2B3qB,EAAOgY,qBAAwB,KAAO,IAAO,MAC3I4S,GAAuB,GAAMC,EAA2BhhB,KAAKmhB,MAAMzF,EAAU,IAAQ,OACrFuF,GAAuB,GAAMC,EAA2BlhB,KAAKmhB,MAAMzF,EAAU,IAAQ,MAI7F,OADAL,GAAYE,YAAYtiB,IAAIyiB,EAASwC,GAC9BA,CACV,E,CAKF,8BAAOkD,CAAwBC,EAAY3F,GAC9C,GAA2F,SAAvFC,iBAAiB5mB,KAAK6mB,GAAeC,iBAAiB,uBAAuBC,OAAmB,CAChG,IAAIC,EAAsBV,GAAYiG,gBAAgBD,EAAM3F,GAE5D,IAAIS,EAAQ,cAKZ,MAAsB,CAAEC,iBAJUf,GAAYgB,YAAaF,EAAMG,KAAKP,EAAKK,kBAAsC,IAIlDG,eAH/BlB,GAAYgB,YAAaF,EAAMG,KAAKP,EAAKQ,gBAAoC,IAGXC,cAFnEnB,GAAYgB,YAAaF,EAAMG,KAAKP,EAAKS,eAAmC,IAEwBC,YADtGpB,GAAYgB,YAAaF,EAAMG,KAAKP,EAAKU,aAAiC,IAE1G,CAEG,OAAOpB,GAAYiG,gBAAgBD,EAAM3F,E,CAI1C,sBAAO4F,CAAgBD,EAAY3F,GACtC,GAA2F,SAAvFC,iBAAiB5mB,KAAK6mB,GAAeC,iBAAiB,uBAAuBC,OAE7E,OAAIJ,EAAU2F,EAAKE,kBACRlG,GAAYa,cAAcR,EAAUL,GAAYa,cAAcziB,QAC9DiiB,EAAU2F,EAAKE,kBAAoBF,EAAKG,kBACxCnG,GAAYW,eAAeN,EAAU2F,EAAKE,mBAAqBlG,GAAYW,cAAcviB,QAEzF4hB,GAAYY,aAAaP,EAAU2F,EAAKE,kBAAoBF,EAAKG,mBAAqBnG,GAAYY,YAAYxiB,QAKzH,GAAI4hB,GAAYE,YAAYkG,IAAI/F,GAC5B,OAAOL,GAAYE,YAAYmG,IAAIhG,GAInC,GAAIA,EAAU2F,EAAKE,kBAAmB,CAElC,MAAM5B,GAAoChE,iBAAiB5mB,KAAK6mB,GAAeC,iBAAiB,iCAC1F+D,GAAyCjE,iBAAiB5mB,KAAK6mB,GAAeC,iBAAiB,uCAC/FgE,GAAoClE,iBAAiB5mB,KAAK6mB,GAAeC,iBAAiB,iCAC1FiE,GAAyCnE,iBAAiB5mB,KAAK6mB,GAAeC,iBAAiB,uCAC/FkE,GAAoCpE,iBAAiB5mB,KAAK6mB,GAAeC,iBAAiB,iCAC1FmE,GAAyCrE,iBAAiB5mB,KAAK6mB,GAAeC,iBAAiB,uCAC/FoE,GAAkCtE,iBAAiB5mB,KAAK6mB,GAAeC,iBAAiB,+BACxFqE,GAAuCvE,iBAAiB5mB,KAAK6mB,GAAeC,iBAAiB,qCAC7FsE,GAAkCxE,iBAAiB5mB,KAAK6mB,GAAeC,iBAAiB,+BACxFuE,GAAuCzE,iBAAiB5mB,KAAK6mB,GAAeC,iBAAiB,qCAC7FwE,GAAkC1E,iBAAiB5mB,KAAK6mB,GAAeC,iBAAiB,+BACxFyE,GAAuC3E,iBAAiB5mB,KAAK6mB,GAAeC,iBAAiB,qCAC7F0E,GAAiC5E,iBAAiB5mB,KAAK6mB,GAAeC,iBAAiB,8BACvF2E,GAAsC7E,iBAAiB5mB,KAAK6mB,GAAeC,iBAAiB,oCAC5F4E,GAAiC9E,iBAAiB5mB,KAAK6mB,GAAeC,iBAAiB,8BACvF6E,GAAsC/E,iBAAiB5mB,KAAK6mB,GAAeC,iBAAiB,oCAC5F8E,GAAiChF,iBAAiB5mB,KAAK6mB,GAAeC,iBAAiB,8BACvF+E,GAAsCjF,iBAAiB5mB,KAAK6mB,GAAeC,iBAAiB,oCAC5FgF,GAA+BlF,iBAAiB5mB,KAAK6mB,GAAeC,iBAAiB,4BACrFiF,GAAoCnF,iBAAiB5mB,KAAK6mB,GAAeC,iBAAiB,kCAC1FkF,GAA+BpF,iBAAiB5mB,KAAK6mB,GAAeC,iBAAiB,4BACrFmF,GAAoCrF,iBAAiB5mB,KAAK6mB,GAAeC,iBAAiB,kCAC1FoF,GAA+BtF,iBAAiB5mB,KAAK6mB,GAAeC,iBAAiB,4BACrFqF,GAAoCvF,iBAAiB5mB,KAAK6mB,GAAeC,iBAAiB,kCAEhG,IAaIqC,EAAkC,CAAE9B,iBAbN,SAAYuD,EAA4BjE,GAAWkE,EAAgCzpB,EAAOgY,qBAAwB,KAAO,IAAO,MAC1J0R,GAA4B,GAAMC,EAAgC9f,KAAKmhB,MAAMzF,EAAU,IAAQ,OAC/FqE,GAA4B,GAAMC,EAAgChgB,KAAKmhB,MAAMzF,EAAU,IAAQ,KAWxBa,eAV/C,SAAY0D,EAA0BvE,GAAWwE,EAA8B/pB,EAAOgY,qBAAwB,KAAO,IAAO,MACpJgS,GAA0B,GAAMC,EAA8BpgB,KAAKmhB,MAAMzF,EAAU,IAAQ,OAC3F2E,GAA0B,GAAMC,EAA8BtgB,KAAKmhB,MAAMzF,EAAU,IAAQ,KAQec,cAPnF,SAAY+D,EAAyB7E,GAAW8E,EAA6BrqB,EAAOgY,qBAAwB,KAAO,IAAO,MACjJsS,GAAyB,GAAMC,EAA6B1gB,KAAKmhB,MAAMzF,EAAU,IAAQ,OACzFiF,GAAyB,GAAMC,EAA6B5gB,KAAKmhB,MAAMzF,EAAU,IAAQ,KAKkDe,YAJtH,SAAYoE,EAAuBnF,GAAWoF,EAA2B3qB,EAAOgY,qBAAwB,KAAO,IAAO,MAC3I4S,GAAuB,GAAMC,EAA2BhhB,KAAKmhB,MAAMzF,EAAU,IAAQ,OACrFuF,GAAuB,GAAMC,EAA2BlhB,KAAKmhB,MAAMzF,EAAU,IAAQ,MAI7F,OADAL,GAAYE,YAAYtiB,IAAIyiB,EAASwC,GAC9BA,CAEV,CACI,GAAIxC,EAAU2F,EAAKE,kBAAoBF,EAAKG,kBAAmB,CAEhE,MAAM9E,GAAoCf,iBAAiB5mB,KAAK6mB,GAAeC,iBAAiB,iCAC1Fc,GAAyChB,iBAAiB5mB,KAAK6mB,GAAeC,iBAAiB,uCAC/Fe,GAAoCjB,iBAAiB5mB,KAAK6mB,GAAeC,iBAAiB,iCAC1FgB,GAAyClB,iBAAiB5mB,KAAK6mB,GAAeC,iBAAiB,uCAC/FiB,GAAoCnB,iBAAiB5mB,KAAK6mB,GAAeC,iBAAiB,iCAC1FkB,GAAyCpB,iBAAiB5mB,KAAK6mB,GAAeC,iBAAiB,uCAC/FmB,GAAkCrB,iBAAiB5mB,KAAK6mB,GAAeC,iBAAiB,+BACxFoB,GAAuCtB,iBAAiB5mB,KAAK6mB,GAAeC,iBAAiB,qCAC7FqB,GAAkCvB,iBAAiB5mB,KAAK6mB,GAAeC,iBAAiB,+BACxFsB,GAAuCxB,iBAAiB5mB,KAAK6mB,GAAeC,iBAAiB,qCAC7FuB,GAAkCzB,iBAAiB5mB,KAAK6mB,GAAeC,iBAAiB,+BACxFwB,GAAuC1B,iBAAiB5mB,KAAK6mB,GAAeC,iBAAiB,qCAC7FyB,GAAiC3B,iBAAiB5mB,KAAK6mB,GAAeC,iBAAiB,8BACvF0B,GAAsC5B,iBAAiB5mB,KAAK6mB,GAAeC,iBAAiB,oCAC5F2B,GAAiC7B,iBAAiB5mB,KAAK6mB,GAAeC,iBAAiB,8BACvF4B,GAAsC9B,iBAAiB5mB,KAAK6mB,GAAeC,iBAAiB,oCAC5F6B,GAAiC/B,iBAAiB5mB,KAAK6mB,GAAeC,iBAAiB,8BACvF8B,GAAsChC,iBAAiB5mB,KAAK6mB,GAAeC,iBAAiB,oCAC5F+B,GAA+BjC,iBAAiB5mB,KAAK6mB,GAAeC,iBAAiB,4BACrFgC,GAAoClC,iBAAiB5mB,KAAK6mB,GAAeC,iBAAiB,kCAC1FiC,GAA+BnC,iBAAiB5mB,KAAK6mB,GAAeC,iBAAiB,4BACrFkC,GAAoCpC,iBAAiB5mB,KAAK6mB,GAAeC,iBAAiB,kCAC1FmC,GAA+BrC,iBAAiB5mB,KAAK6mB,GAAeC,iBAAiB,4BACrFoC,GAAoCtC,iBAAiB5mB,KAAK6mB,GAAeC,iBAAiB,kCAEhG,IAaIqC,EAAkC,CAAE9B,iBAbN,SAAYM,GAA8BhB,EAAU2F,EAAKE,oBAAsB5E,EAAiCxmB,EAAOkY,qBAAwB,KAAO,IAAO,MACvLuO,EAA2BlB,GAAWmB,GAAiC,OACvEC,EAA2BpB,GAAWqB,GAAiC,KAWAR,eAV/C,SAAYS,GAA4BtB,EAAU2F,EAAKE,oBAAsBtE,EAA+B9mB,EAAOkY,qBAAwB,KAAO,IAAO,MACjL6O,EAAyBxB,GAAWyB,GAA+B,OACnEC,EAAyB1B,GAAW2B,GAA+B,KAQuCb,cAPnF,SAAYc,GAA2B5B,EAAU2F,EAAKE,oBAAsBhE,EAA8BpnB,EAAOkY,qBAAwB,KAAO,IAAO,MAC9KmP,EAAwB9B,GAAW+B,GAA8B,OACjEC,EAAwBhC,GAAWiC,GAA8B,KAK0ElB,YAJtH,SAAYmB,GAAyBlC,EAAU2F,EAAKE,oBAAsB1D,EAA4B1nB,EAAOkY,qBAAwB,KAAO,IAAO,MACxKyP,EAAsBpC,GAAWqC,GAA4B,OAC7DC,EAAsBtC,GAAWuC,GAA4B,MAIrE,OADA5C,GAAYE,YAAYtiB,IAAIyiB,EAASwC,GAC9BA,CACV,CACI,CAED,MAAMC,GAAkCxC,iBAAiB5mB,KAAK6mB,GAAeC,iBAAiB,+BACxFuC,GAAuCzC,iBAAiB5mB,KAAK6mB,GAAeC,iBAAiB,qCAC7FwC,GAAkC1C,iBAAiB5mB,KAAK6mB,GAAeC,iBAAiB,+BACxFyC,GAAuC3C,iBAAiB5mB,KAAK6mB,GAAeC,iBAAiB,qCAC7F0C,GAAkC5C,iBAAiB5mB,KAAK6mB,GAAeC,iBAAiB,+BACxF2C,GAAuC7C,iBAAiB5mB,KAAK6mB,GAAeC,iBAAiB,qCAC7F4C,GAAgC9C,iBAAiB5mB,KAAK6mB,GAAeC,iBAAiB,6BACtF6C,GAAqC/C,iBAAiB5mB,KAAK6mB,GAAeC,iBAAiB,mCAC3F8C,GAAgChD,iBAAiB5mB,KAAK6mB,GAAeC,iBAAiB,6BACtF+C,GAAqCjD,iBAAiB5mB,KAAK6mB,GAAeC,iBAAiB,mCAC3FgD,GAAgClD,iBAAiB5mB,KAAK6mB,GAAeC,iBAAiB,6BACtFiD,GAAqCnD,iBAAiB5mB,KAAK6mB,GAAeC,iBAAiB,mCAC3FkD,GAA+BpD,iBAAiB5mB,KAAK6mB,GAAeC,iBAAiB,4BACrFmD,GAAoCrD,iBAAiB5mB,KAAK6mB,GAAeC,iBAAiB,kCAC1FoD,GAA+BtD,iBAAiB5mB,KAAK6mB,GAAeC,iBAAiB,4BACrFqD,GAAoCvD,iBAAiB5mB,KAAK6mB,GAAeC,iBAAiB,kCAC1FsD,GAA+BxD,iBAAiB5mB,KAAK6mB,GAAeC,iBAAiB,4BACrFuD,GAAoCzD,iBAAiB5mB,KAAK6mB,GAAeC,iBAAiB,kCAC1FwD,GAA6B1D,iBAAiB5mB,KAAK6mB,GAAeC,iBAAiB,0BACnFyD,GAAkC3D,iBAAiB5mB,KAAK6mB,GAAeC,iBAAiB,gCACxF0D,GAA6B5D,iBAAiB5mB,KAAK6mB,GAAeC,iBAAiB,0BACnF2D,GAAkC7D,iBAAiB5mB,KAAK6mB,GAAeC,iBAAiB,gCACxF4D,GAA6B9D,iBAAiB5mB,KAAK6mB,GAAeC,iBAAiB,0BACnF6D,GAAkC/D,iBAAiB5mB,KAAK6mB,GAAeC,iBAAiB,gCAE9F,IAaIqC,EAAkC,CAAE9B,iBAbN,SAAY+B,GAA4BzC,EAAU2F,EAAKE,kBAAoBF,EAAKG,oBAAsBpD,EAA+BjoB,EAAOoY,mBAAsB,KAAO,IAAO,MAC1M8P,EAAyB3C,GAAW4C,GAA+B,OACnEC,EAAyB7C,GAAW8C,GAA+B,KAWIjC,eAV/C,SAAYkC,GAA0B/C,EAAU2F,EAAKE,kBAAoBF,EAAKG,oBAAsB9C,EAA6BvoB,EAAOoY,mBAAsB,KAAO,IAAO,MACpMoQ,EAAuBjD,GAAWkD,GAA6B,OAC/DC,EAAuBnD,GAAWoD,GAA6B,KAQ2CtC,cAPnF,SAAYuC,GAAyBrD,EAAU2F,EAAKE,kBAAoBF,EAAKG,oBAAsBxC,EAA4B7oB,EAAOoY,mBAAsB,KAAO,IAAO,MACjM0Q,EAAsBvD,GAAWwD,GAA4B,OAC7DC,EAAsBzD,GAAW0D,GAA4B,KAK8E3C,YAJtH,SAAY4C,GAAuB3D,EAAU2F,EAAKE,kBAAoBF,EAAKG,oBAAsBlC,EAA0BnpB,EAAOoY,mBAAsB,KAAO,IAAO,MAC3LgR,EAAoB7D,GAAW8D,GAA0B,OACzDC,EAAoB/D,GAAWgE,GAA0B,MAIjE,OADArE,GAAYE,YAAYtiB,IAAIyiB,EAASwC,GAC9BA,CACV,C,CAON,eAAOyD,CAASvoB,GACzB,IAAIwoB,EAAgB7sB,KAAK8sB,OAAOzoB,GACnB6Y,MAAT2P,IAAoBA,EAAQ7sB,KAAK8sB,OAAO,iBAC5C9sB,KAAK6mB,EAAckG,YAAcF,EAE3B,MAAMG,EAA8BtpB,SAASupB,cAAc,4BACzC,MAAdD,GACAA,EAAW1I,aAAa,UAAWsC,iBAAiBljB,SAASmiB,iBAAiBiB,iBAAiB,2BAGnG9mB,KAAKumB,a,CAGF,kBAAOe,CAAYjjB,GACtB,OAAOuiB,iBAAiB5mB,KAAK6mB,GAAeC,iBAAiBziB,E,EAt7MnDiiB,GAAAE,YAA0C,IAAI0G,IAErC5G,GAAAwG,OAAqC,CAC1D,eAAgB,4/JAwHd,mBAAoB,mpKAwHpB,gBAAiB,m0KAiIjB,kBAAmB,06JAoHnBK,OAAU,u7JAoHVC,OAAU,+8JAoHVC,SAAY,y9IAoHZ,gBAAiB,s1KAiIjB,cAAe,67JAqHfC,aAAgB,ymIA0HhBC,IAAO,wiJAuHPC,UAAa,8jJAuHbC,OAAU,gkJAuHVC,MAAS,+hJAuHTC,OAAU,6hJAuHVC,MAAS,8hJAuHT,iBAAkB,+9IAmHlBC,OAAU,6gJAuHVC,OAAU,sjJAsHV1f,QAAW,miJAsHX2f,OAAU,q+IAmHV,YAAa,khJAuHbC,UAAa,q9IAqHbC,WAAc,+8IAoHdC,KAAQ,+zIAgHd,iBAAkB,k8JAwHjBC,OAAU,g8JAwHV,kBAAmB,o9JAwHnBC,SAAY,k8JAwHZC,SAAY,glKA0HX,cAAe,0nKAwHf,cAAe,+iKA2HhBC,QAAW,27JAwHV,uBAAwB,ysHAoHzB,iBAAkB,+1JAgHnB,kBAAmB,goIAwHjB,eAAgB,o4EA0Db,iBAAkB,67IAuGrB,mBAAoB,4yKA4HlB,yBAA0B,ujFA+D7B,cAAe,2mKAwHf,qBAAsB,wmJAwHrBC,OAAU,ggKAwHV,mBAAoB,g1MAwHnB,+BAAgC,ujKA2HlCC,OAAU,ggKAwHTC,SAAY,g9LAmKZC,SAAY,wuJAgHZ,oBAAqB,g1KAyIrBC,QAAW,qwIAsHVC,OAAU,GAAGxrB,aAAaC,QAAQ,iBAAmB,0/IAgH/BijB,GAAUuI,WAAW,qBACrBvI,GAAgBwI,iBAAW,2BAC3BxI,GAAYyI,aAAW,uBACvBzI,GAAQ0I,SAAW,kBACnB1I,GAAW2I,YAAW,sBACtB3I,GAAa4I,cAAW,wBACxB5I,GAAY6I,aAAW,uBACvB7I,GAAa8I,cAAW,wBACxB9I,GAAgB+I,iBAAW,4BAC3B/I,GAAUgJ,WAAW,qBACrBhJ,GAAUiJ,WAAW,qBACrBjJ,GAAkBkJ,mBAAW,8BAC7BlJ,GAAamJ,cAAW,yBACxBnJ,GAAeoJ,gBAAW,0BAC1BpJ,GAAKqJ,MAAW,eAChBrJ,GAASsJ,UAAW,oBACpBtJ,GAAauJ,cAAW,yBACxBvJ,GAAawJ,cAAW,yBACxBxJ,GAAiByJ,kBAAW,8BAC5BzJ,GAAiB0J,kBAAW,8BAC5B1J,GAAe2J,gBAAW,2BAC1B3J,GAAwBsE,yBAAW,qCACnCtE,GAA6BuE,8BAAW,2CACxCvE,GAAwBwE,yBAAW,qCACnCxE,GAA6ByE,8BAAW,2CACxCzE,GAAwB0E,yBAAW,qCACnC1E,GAA6B2E,8BAAW,2CACxC3E,GAAsB4E,uBAAW,mCACjC5E,GAA2B6E,4BAAW,yCACtC7E,GAAsB8E,uBAAW,mCACjC9E,GAA2B+E,4BAAW,yCACtC/E,GAAsBgF,uBAAW,mCACjChF,GAA2BiF,4BAAW,yCACtCjF,GAAqBkF,sBAAW,kCAChClF,GAA0BmF,2BAAW,wCACrCnF,GAAqBoF,sBAAW,kCAChCpF,GAA0BqF,2BAAW,wCACrCrF,GAAqBsF,sBAAW,kCAChCtF,GAA0BuF,2BAAW,wCACrCvF,GAAmBwF,oBAAW,gCAC9BxF,GAAwByF,yBAAW,sCACnCzF,GAAmB0F,oBAAW,gCAC9B1F,GAAwB2F,yBAAW,sCACnC3F,GAAmB4F,oBAAW,gCAC9B5F,GAAwB6F,yBAAW,sCACnC7F,GAAsB8C,uBAAW,mCACjC9C,GAA2B+C,4BAAW,yCACtC/C,GAAsBgD,uBAAW,mCACjChD,GAA2BiD,4BAAW,yCACtCjD,GAAsBkD,uBAAW,mCACjClD,GAA2BmD,4BAAW,yCACtCnD,GAAoBoD,qBAAW,iCAC/BpD,GAAyBqD,0BAAW,uCACpCrD,GAAoBsD,qBAAW,iCAC/BtD,GAAyBuD,0BAAW,uCACpCvD,GAAoBwD,qBAAW,iCAC/BxD,GAAyByD,0BAAW,uCACpCzD,GAAmB0D,oBAAW,gCAC9B1D,GAAwB2D,yBAAW,sCACnC3D,GAAmB4D,oBAAW,gCAC9B5D,GAAwB6D,yBAAW,sCACnC7D,GAAmB8D,oBAAW,gCAC9B9D,GAAwB+D,yBAAW,sCACnC/D,GAAiBgE,kBAAW,8BAC5BhE,GAAsBiE,uBAAW,oCACjCjE,GAAiBkE,kBAAW,8BAC5BlE,GAAsBmE,uBAAW,oCACjCnE,GAAiBoE,kBAAW,8BAC5BpE,GAAsBqE,uBAAW,oCACjCrE,GAAwBqB,yBAAW,qCACnCrB,GAA6BsB,8BAAW,2CACxCtB,GAAwBuB,yBAAW,qCACnCvB,GAA6BwB,8BAAW,2CACxCxB,GAAwByB,yBAAW,qCACnCzB,GAA6B0B,8BAAW,2CACxC1B,GAAsB2B,uBAAW,mCACjC3B,GAA2B4B,4BAAW,yCACtC5B,GAAsB6B,uBAAW,mCACjC7B,GAA2B8B,4BAAW,yCACtC9B,GAAsB+B,uBAAW,mCACjC/B,GAA2BgC,4BAAW,yCACtChC,GAAqBiC,sBAAW,kCAChCjC,GAA0BkC,2BAAW,wCACrClC,GAAqBmC,sBAAW,kCAChCnC,GAA0BoC,2BAAW,wCACrCpC,GAAqBqC,sBAAW,kCAChCrC,GAA0BsC,2BAAW,wCACrCtC,GAAmBuC,oBAAW,gCAC9BvC,GAAwBwC,yBAAW,sCACnCxC,GAAmByC,oBAAW,gCAC9BzC,GAAwB0C,yBAAW,sCACnC1C,GAAmB2C,oBAAW,gCAC9B3C,GAAwB4C,yBAAW,sCACnC5C,GAAkB4J,mBAAW,+BAC7B5J,GAAqB6J,sBAAW,mCAChC7J,GAAkB8J,mBAAW,+BAC7B9J,GAAqB+J,sBAAW,mCAChC/J,GAAgBgK,iBAAW,6BAC3BhK,GAAmBiK,oBAAW,iCAC9BjK,GAAuBkK,wBAAW,mCAClClK,GAAoBmK,qBAAW,gCAC/BnK,GAAgBoK,iBAAW,2BAC3BpK,GAAkBqK,mBAAW,6BAC7BrK,GAAesK,gBAAW,2BAC1BtK,GAAeuK,gBAAW,2BAC1BvK,GAAgBwK,iBAAW,4BAC3BxK,GAAayK,cAAW,yBACxBzK,GAAe0K,gBAAW,2BAC1B1K,GAAqB2K,sBAAW,kCAChC3K,GAAmB4K,oBAAW,gCAC9B5K,GAAmB6K,oBAAW,+BAC9B7K,GAAqB8K,sBAAW,iCAEhC9K,GAAaa,cAAmCxY,EAAU,CAC7E,CACItK,KAAM,SACNgjB,iBAAkB,kCAClBG,eAAgB,gCAChBC,cAAe,+BACfC,YAAa,8BACd,CACCrjB,KAAM,SACNgjB,iBAAkB,kCAClBG,eAAgB,gCAChBC,cAAe,+BACfC,YAAa,8BACd,CACCrjB,KAAM,SACNgjB,iBAAkB,kCAClBG,eAAgB,gCAChBC,cAAe,+BACfC,YAAa,8BACd,CACCrjB,KAAM,SACNgjB,iBAAkB,kCAClBG,eAAgB,gCAChBC,cAAe,+BACfC,YAAa,8BACd,CACCrjB,KAAM,SACNgjB,iBAAkB,kCAClBG,eAAgB,gCAChBC,cAAe,+BACfC,YAAa,8BACd,CACCrjB,KAAM,SACNgjB,iBAAkB,kCAClBG,eAAgB,gCAChBC,cAAe,+BACfC,YAAa,8BACd,CACCrjB,KAAM,SACNgjB,iBAAkB,kCAClBG,eAAgB,gCAChBC,cAAe,+BACfC,YAAa,8BACd,CACCrjB,KAAM,SACNgjB,iBAAkB,kCAClBG,eAAgB,gCAChBC,cAAe,+BACfC,YAAa,8BACd,CACCrjB,KAAM,SACNgjB,iBAAkB,kCAClBG,eAAgB,gCAChBC,cAAe,+BACfC,YAAa,8BACd,CACCrjB,KAAM,UACNgjB,iBAAkB,mCAClBG,eAAgB,iCAChBC,cAAe,gCACfC,YAAa,iCAGEpB,GAAaW,cAAmCtY,EAAU,CAC7E,CACItK,KAAM,SACNgjB,iBAAkB,kCAClBG,eAAgB,gCAChBC,cAAe,+BACfC,YAAa,8BACd,CACCrjB,KAAM,SACNgjB,iBAAkB,kCAClBG,eAAgB,gCAChBC,cAAe,+BACfC,YAAa,8BACd,CACCrjB,KAAM,SACNgjB,iBAAkB,kCAClBG,eAAgB,gCAChBC,cAAe,+BACfC,YAAa,8BACd,CACCrjB,KAAM,SACNgjB,iBAAkB,kCAClBG,eAAgB,gCAChBC,cAAe,+BACfC,YAAa,8BACd,CACCrjB,KAAM,SACNgjB,iBAAkB,kCAClBG,eAAgB,gCAChBC,cAAe,+BACfC,YAAa,gCAGEpB,GAAWY,YAAmCvY,EAAU,CAC3E,CACItK,KAAM,OACNgjB,iBAAkB,gCAClBG,eAAgB,8BAChBC,cAAe,6BACfC,YAAa,4BACd,CACCrjB,KAAM,OACNgjB,iBAAkB,gCAClBG,eAAgB,8BAChBC,cAAe,6BACfC,YAAa,4BACd,CACCrjB,KAAM,OACNgjB,iBAAkB,gCAClBG,eAAgB,8BAChBC,cAAe,6BACfC,YAAa,4BACd,CACCrjB,KAAM,OACNgjB,iBAAkB,gCAClBG,eAAgB,8BAChBC,cAAe,6BACfC,YAAa,8BAoVGpB,GAAAO,EAAkCnjB,SAASG,KAAKC,YAAYohB,EAAKJ,MAAM,CAAE/P,KAAM,cC36M3G,MAAMsc,GAAgC3tB,SAAS4tB,KAAKxtB,YAAYohB,EAAKqM,IAAI,CAAEzM,MAAO,4CACjFI,EAAKqM,IAAI,CAAEzM,MAAO,6BAETuM,GAAevL,WAAW0L,YAAc,IACjD9tB,SAASmiB,gBAAgB4L,UAAUC,IAAI,wBAExChuB,SAAS4tB,KAAKK,YAAYN,IAG1B3tB,SAASG,KAAKC,YAAYohB,EAAKJ,MAAM,CAAE/P,KAAM,YAAc,4nWAsHvCuR,GAAYkJ,sBAAsBlJ,GAAYwI,sPAMnDxI,GAAYwI,iJAGNxI,GAAYkJ,4CACZlJ,GAAYwI,+oBAqBvBxI,GAAY2I,+BACP3I,GAAYwI,gqFAgHF9rB,EAAoB,eAAgB,wIAQxCsjB,GAAYwI,kvBAoBvBxI,GAAY4I,wFAKZ5I,GAAYiJ,yFAIZjJ,GAAY2I,sJAOP3I,GAAY4I,m6CAgEZ5I,GAAYwI,i5PA4UZxI,GAAYwI,8IAQZxI,GAAYwI,kEAENxI,GAAYkJ,iCACvBlJ,GAAY2I,yyBAyCZ3I,GAAY4I,kJAQZ5I,GAAY2I,8wCAmDP3I,GAAYkJ,0QAYjBlJ,GAAYiJ,mrCAoDPjJ,GAAYkJ,8TAcZlJ,GAAYmJ,kFAITnJ,GAAYkJ,yWAcNlJ,GAAYmJ,2RAWlBnJ,GAAYsK,wjBAsBftK,GAAYmJ,mfAsBZnJ,GAAYkJ,wLAQZlJ,GAAYmJ,+jNA+PjBnJ,GAAY6I,oFAIP7I,GAAYwI,6MAOjBxI,GAAY6I,wyDAyFP7I,GAAYwI,+pDAkFNxI,GAAYuK,8BACvBvK,GAAY2I,sIAID3I,GAAY8I,4BACvB9I,GAAY2I,miBA0BP3I,GAAYkJ,yDAIlBlJ,GAAYyI,sWAiBLzI,GAAYmK,4uBA4BbnK,GAAYmJ,8IAMZnJ,GAAYkJ,qGAGZlJ,GAAYmJ,uUAcZnJ,GAAYkJ,4HAIZlJ,GAAYmJ,mYAiBDzsB,EAAoB,eAAgB,+IAOvCsjB,GAAYkJ,g8DA6ElBlJ,GAAYwI,wTAWCxI,GAAYwI,+I,MCxmD7B8C,GA+BZ,WAAA7xB,CAAoB8xB,EAA4BC,GAA5B9xB,KAAI6xB,EAAJA,EAA4B7xB,KAAe8xB,EAAfA,EA9B/B9xB,KAAY+xB,EAAW,IACvB/xB,KAAagyB,EAAW,GACxBhyB,KAAAiyB,EAA4B1M,EAAI2M,KAAK,OAAQ,CAAEC,KAAM7L,GAAY0I,SAAUtY,EAAG,EAAGC,EAAG,EAAGyb,MAAO,EAAGC,OAAQryB,KAAKgyB,IAC7GhyB,KAAQsyB,EAAkB/M,EAAIgN,IAAI,CAAC,iBAAkB,SACrDvyB,KAAAwyB,EAA0BjN,EAAI2M,KAAK,CAACC,KAAM7L,GAAYkJ,mBAAoB9Y,EAAG,EAAGC,EAAG,EAAGyb,MAAO,GAAIC,OAAQryB,KAAKgyB,EAAgB,IAC9HhyB,KAAgByyB,EAAmBlN,EAAI2M,KAAK,CAACC,KAAM,OAAQO,OAAQpM,GAAYyI,aAAc,eAAgB,EAAG,iBAAkB,OAAQrY,EAAG,EAAGC,EAAG,EAAGyb,MAAO,GAAIC,OAAQryB,KAAKgyB,EAAgB,IAC9LhyB,KAAA2yB,EAAiCpN,EAAIqN,KAAK,CAACT,KAAM7L,GAAYyI,aAAc,iBAAkB,SAC7F/uB,KAAA6yB,EAAkCtN,EAAIqN,KAAK,CAACT,KAAM7L,GAAYyI,aAAc,iBAAkB,SACxG/uB,KAAiB8yB,GAAY,EAEnB9yB,KAAI+yB,EAAkBxN,EAAIgN,IAAI,CAACzN,MAAO,qBAAqBwB,GAAYwI,6DAA8DsD,MAAOpyB,KAAK+xB,EAAcM,OAAQryB,KAAKgyB,GAC7LhyB,KAAKsyB,EACLtyB,KAAKwyB,EACLxyB,KAAKyyB,EACLzyB,KAAK2yB,EACL3yB,KAAK6yB,EACL7yB,KAAKiyB,GAGWjyB,KAAAgzB,UAAyB9N,EAAKqM,IAAI,CAAC0B,MAAO,eAAgBnO,MAAO,qEAAsE9kB,KAAK+yB,GAErJ/yB,KAAOkzB,EAAW,EAClBlzB,KAAUmzB,GAAY,EACtBnzB,KAAUozB,GAAY,EACtBpzB,KAASqzB,GAAY,EAGrBrzB,KAAmBszB,GAAY,EAC/BtzB,KAAqBuzB,GAAY,EA0BlCvzB,KAAewzB,gBAAG,KACxB,MAAMxE,EAAW/jB,KAAKoC,IAAI,IAAKpC,KAAK2L,IAAI,EAAI5W,KAAKyzB,EAAczzB,KAAK6xB,EAAK6B,MAAM1E,SAAW,IACtFhvB,KAAK8yB,GAAqB9D,IAC7BhvB,KAAK8yB,EAAoB9D,EACzBhvB,KAAKiyB,EAAU3N,aAAa,IAAK,GAAK0K,GACvC,EAGOhvB,KAAA2zB,EAAa3vB,IACpBhE,KAAK6xB,EAAK+B,aAAgB5zB,KAAK8xB,EAAgB+B,WAAa7zB,KAAK6xB,EAAKiC,aAAc,EAI7E9zB,KAAA+zB,EAAkB/vB,IACrBhE,KAAKozB,IACTpzB,KAAKozB,GAAa,EAClBpzB,KAAKg0B,IAAgB,EAGdh0B,KAAAi0B,EAAiBjwB,IACnBhE,KAAKozB,IACVpzB,KAAKozB,GAAa,EAClBpzB,KAAKg0B,IAAgB,EAGdh0B,KAAAk0B,EAAqBlwB,IAC5BA,EAAMmwB,iBACNn0B,KAAKmzB,GAAa,EAClB,MAAMiB,EAA2Bp0B,KAAK+yB,EAAKsB,wBAC3Cr0B,KAAKkzB,GAAWlvB,EAAMswB,SAAWtwB,EAAMuwB,OAASH,EAAaI,KAE7Dx0B,KAAKg0B,IACDh0B,KAAKkzB,GAAWlzB,KAAK6xB,EAAK+B,aAAe5zB,KAAKyzB,GAAezzB,KAAKkzB,IAAYlzB,KAAK6xB,EAAK+B,aAAe5zB,KAAK6xB,EAAK4C,kBAAoBz0B,KAAKyzB,IAC7IzzB,KAAKqzB,GAAY,EACjBrzB,KAAK00B,EAAa10B,KAAKkzB,EACvB,EAGMlzB,KAAA20B,EAAqB3wB,IAC5BA,EAAMmwB,iBACNn0B,KAAKmzB,GAAa,EAClB,MAAMiB,EAA2Bp0B,KAAK+yB,EAAKsB,wBAC3Cr0B,KAAKkzB,EAAUlvB,EAAM4wB,QAAQ,GAAGN,QAAUF,EAAaI,KAEvDx0B,KAAKg0B,IACDh0B,KAAKkzB,GAAWlzB,KAAK6xB,EAAK+B,aAAe5zB,KAAKyzB,GAAezzB,KAAKkzB,IAAYlzB,KAAK6xB,EAAK+B,aAAe5zB,KAAK6xB,EAAK4C,kBAAoBz0B,KAAKyzB,IAC7IzzB,KAAKqzB,GAAY,EACjBrzB,KAAK00B,EAAa10B,KAAKkzB,EACvB,EAGMlzB,KAAA60B,EAAmB7wB,IAC1B,MAAMowB,EAA2Bp0B,KAAK+yB,EAAKsB,wBAC3Cr0B,KAAKkzB,GAAWlvB,EAAMswB,SAAWtwB,EAAMuwB,OAASH,EAAaI,KAE7Dx0B,KAAK80B,IAAkB,EAGhB90B,KAAA+0B,GAAmB/wB,IAC1B,IAAKhE,KAAKmzB,EAAY,OACtBnvB,EAAMmwB,iBACN,MAAMC,EAA2Bp0B,KAAK+yB,EAAKsB,wBAC3Cr0B,KAAKkzB,EAAUlvB,EAAM4wB,QAAQ,GAAGN,QAAUF,EAAaI,KAEvDx0B,KAAK80B,IAAkB,EAkDhB90B,KAAAg1B,GAAuBhxB,KACzBhE,KAAKqzB,GAAarzB,KAAKmzB,IACvBnzB,KAAKkzB,GAAWlzB,KAAK6xB,EAAK+B,aAAe,GAAK5zB,KAAKyzB,GAClDzzB,KAAK6xB,EAAK+B,aAAe,GAAG5zB,KAAK6xB,EAAK+B,eAC1C5zB,KAAK6xB,EAAKoD,SAASC,YAEfl1B,KAAK6xB,EAAK+B,aAAe5zB,KAAK6xB,EAAKvF,KAAK6I,SAAWn1B,KAAK6xB,EAAK4C,kBAAkBz0B,KAAK6xB,EAAK+B,eAC7F5zB,KAAK6xB,EAAKoD,SAASC,YAGrBl1B,KAAKmzB,GAAa,EAClBnzB,KAAKqzB,GAAY,EACjBrzB,KAAKg0B,GAAgB,EArJrB,MAAMoB,EAAsC,GAArBp1B,KAAKgyB,EAI5BhyB,KAAK2yB,EAAerO,aAAa,IAAK,OAAY8Q,UAAoBA,EAD1C,UAC4EA,EAD5E,OAE5Bp1B,KAAK6yB,EAAgBvO,aAAa,IAAK,KAAKtkB,KAAK+xB,EAH7B,KAGmDqD,OAAYp1B,KAAK+xB,EAJnE,MAI0FqD,EAFnF,OAE6Gp1B,KAAK+xB,EAJzH,MAIgJqD,EAFzI,OAI5Bp1B,KAAKgzB,UAAUjvB,iBAAiB,YAAa/D,KAAKk0B,GAClDxwB,SAASK,iBAAiB,YAAa/D,KAAK60B,GAC5CnxB,SAASK,iBAAiB,UAAW/D,KAAKg1B,IAC1Ch1B,KAAKgzB,UAAUjvB,iBAAiB,YAAa/D,KAAK+zB,GAClD/zB,KAAKgzB,UAAUjvB,iBAAiB,WAAY/D,KAAKi0B,GAEjDj0B,KAAKgzB,UAAUjvB,iBAAiB,aAAc/D,KAAK20B,GACnD30B,KAAKgzB,UAAUjvB,iBAAiB,YAAa/D,KAAK+0B,IAClD/0B,KAAKgzB,UAAUjvB,iBAAiB,WAAY/D,KAAKg1B,IACjDh1B,KAAKgzB,UAAUjvB,iBAAiB,cAAe/D,KAAKg1B,IAIxCh1B,KAAK8xB,EAAgB/tB,iBAAkB,SAAU/D,KAAK2zB,EAAW,CAAC0B,SAAS,EAAOC,SAAS,G,CAsEhG,EAAAR,GACP,GAAI90B,KAAKqzB,EAAW,CACnB,KAAOrzB,KAAKkzB,EAAUlzB,KAAK00B,EAAiC,IAAnB10B,KAAKyzB,GACzCzzB,KAAK6xB,EAAK+B,aAAe,GAC5B5zB,KAAK6xB,EAAK+B,eACV5zB,KAAK00B,GAAc10B,KAAKyzB,EACxBzzB,KAAK6xB,EAAKoD,SAASC,UAKrB,KAAOl1B,KAAKkzB,EAAUlzB,KAAK00B,EAAgC,GAAnB10B,KAAKyzB,GACxCzzB,KAAK6xB,EAAK+B,aAAe5zB,KAAK6xB,EAAKvF,KAAK6I,SAAWn1B,KAAK6xB,EAAK4C,kBAChEz0B,KAAK6xB,EAAK+B,eACV5zB,KAAK00B,GAAc10B,KAAKyzB,EACxBzzB,KAAK6xB,EAAKoD,SAASC,SAKrB,CACGl1B,KAAKozB,GAAYpzB,KAAKg0B,G,CAGpB,SAAAuB,CAAU/f,GAChB,KAAOvK,KAAKC,IAAIsK,IAAW,GAEtBA,EAAS,EACRxV,KAAK6xB,EAAK+B,aAAe,IAC5B5zB,KAAK6xB,EAAK+B,eACV5zB,KAAK00B,GAAc10B,KAAKyzB,EACxBzzB,KAAK6xB,EAAKoD,SAASC,WAIhBl1B,KAAK6xB,EAAK+B,aAAe5zB,KAAK6xB,EAAKvF,KAAK6I,SAAWn1B,KAAK6xB,EAAK4C,mBAChEz0B,KAAK6xB,EAAK+B,eACV5zB,KAAK00B,GAAc10B,KAAKyzB,EACxBzzB,KAAK6xB,EAAKoD,SAASC,WAIrB1f,GAAWA,EAAS,GAAM,EAAI,C,CAoBxB,CAAAwe,GAEP,IAAIwB,GAA6B,EAC7BC,GAA8B,EAC9BC,GAA+B,EAHJ11B,KAAKozB,IAAepzB,KAAKmzB,IAMnDnzB,KAAKkzB,EAAUlzB,KAAK6xB,EAAK+B,aAAe5zB,KAAKyzB,EAChD+B,GAAoB,EACVx1B,KAAKkzB,GAAWlzB,KAAK6xB,EAAK+B,aAAe5zB,KAAK6xB,EAAK4C,kBAAoBz0B,KAAKyzB,EACtFgC,GAAqB,EAErBC,GAAsB,GAIxB11B,KAAK2yB,EAAe7N,MAAM6Q,WAAaH,EAAoB,UAAY,SACvEx1B,KAAK6yB,EAAgB/N,MAAM6Q,WAAaF,EAAqB,UAAY,SACzEz1B,KAAKyyB,EAAiB3N,MAAM6Q,WAAaD,EAAsB,UAAY,Q,CAGrE,MAAAE,GACL51B,KAAKyzB,GAAezzB,KAAK+xB,EAAa,GAAK9mB,KAAK2L,IAAI5W,KAAK6xB,EAAK4C,iBAAkBz0B,KAAK6xB,EAAKvF,KAAK6I,UAEhG,MAAMU,EAAmB71B,KAAKszB,GAAuBtzB,KAAK6xB,EAAKvF,KAAK6I,SACpE,GAAIU,EAAS,CAGZ,IAFA71B,KAAKszB,EAAsBtzB,KAAK6xB,EAAKvF,KAAK6I,SAEnCn1B,KAAKsyB,EAASxM,YAAY9lB,KAAKsyB,EAASX,YAAY3xB,KAAKsyB,EAASxM,YAEzE,IAAK,IAAInb,EAAY,EAAGA,GAAK3K,KAAK6xB,EAAKvF,KAAK6I,SAAUxqB,IAAK,CAC1D,MAAMmrB,EAAsBnrB,EAAI,IAAM,EAAK,EAAMA,EAAI,GAAK,EAAK3K,KAAKgyB,EAAgB,EAAIhyB,KAAKgyB,EAAgB,EAC5GhyB,KAAKsyB,EAASxuB,YAAYyhB,EAAI2M,KAAK,CAACC,KAAM7L,GAAYkJ,mBAAoB9Y,EAAG/L,EAAI3K,KAAKyzB,EAAc,EAAG9c,EAAGmf,EAAY1D,MAAO,EAAGC,OAAQryB,KAAKgyB,EAA6B,EAAb8D,IAC9J,CACD,CAED91B,KAAK6xB,EAAK+B,aAAmB3oB,KAAK2L,IAAI,EAAG3L,KAAKoC,IAAIrN,KAAK6xB,EAAKvF,KAAK6I,SAAoBn1B,KAAK6xB,EAAK4C,iBAAsBz0B,KAAK6xB,EAAK+B,eAC/H5zB,KAAK6xB,EAAKkE,iBAAmB9qB,KAAK2L,IAAI,EAAG3L,KAAKoC,IAAIrN,KAAK6xB,EAAKvF,KAAK0J,kBAAoBh2B,KAAK6xB,EAAKoE,qBAAsBj2B,KAAK6xB,EAAKkE,oBAE3HF,GAAW71B,KAAKuzB,GAAyBvzB,KAAK6xB,EAAK+B,gBACtD5zB,KAAKuzB,EAAwBvzB,KAAK6xB,EAAK+B,aACvC5zB,KAAKwyB,EAAQlO,aAAa,IAAK4R,OAAOl2B,KAAKyzB,EAAczzB,KAAK6xB,EAAK+B,eACnE5zB,KAAKwyB,EAAQlO,aAAa,QAAS4R,OAAOl2B,KAAKyzB,EAAczzB,KAAK6xB,EAAK4C,mBACvEz0B,KAAKyyB,EAAiBnO,aAAa,IAAK4R,OAAOl2B,KAAKyzB,EAAczzB,KAAK6xB,EAAK+B,eAC5E5zB,KAAKyyB,EAAiBnO,aAAa,QAAS4R,OAAOl2B,KAAKyzB,EAAczzB,KAAK6xB,EAAK4C,oBAGjFz0B,KAAKg0B,IAELh0B,KAAK8xB,EAAgB+B,WAAa7zB,KAAK6xB,EAAK+B,aAAe5zB,KAAK6xB,EAAKiC,cACrE9zB,KAAK8xB,EAAgBqE,UAAYn2B,KAAK6xB,EAAKkE,iBAAmB/1B,KAAK6xB,EAAKuE,kB,ECrO1D,SAAA5qB,GAAsBoD,EAAoBynB,GACzD,IAAK,IAAI1rB,EAAY,EAAGA,EAAIiE,EAAMlK,OAAQiG,IACzCiE,EAAMjE,IAAM0rB,CAEd,CAMA,SAASC,GAAUC,GAClB,IALD,SAAoBA,GACnB,SAASA,GAAOA,EAAKA,EAAI,EAC1B,CAGMC,CAAWD,GAAI,MAAM,IAAIt0B,MAAM,0CACpC,OAAOgJ,KAAKe,MAAMf,KAAKT,IAAI+rB,GAAKtrB,KAAKT,IAAI,GAC1C,CAuOgB,SAAAe,GAA4BqD,EAAoB6nB,GAC/D,MAAMC,EAAsBJ,GAAUG,GACtC,GAAIA,EAAkB,EAAG,MAAM,IAAIx0B,MAAM,wCAGzC,IAAK,IAAI00B,EAAeD,EAAc,EAAGC,GAAQ,EAAGA,IAAQ,CAC3D,MAAMC,EAAoB,GAAKD,EACzBE,EAAuBD,GAAa,EACpCE,EAAiBF,GAAa,EAC9BG,EAAqC,EAAV9rB,KAAK2C,GAAWkpB,EAC3CE,EAAuB/rB,KAAK4C,IAAIkpB,GAChCE,EAAuBhsB,KAAK6C,IAAIipB,GAChCG,EAA+B,EAAMF,EAE3C,IAAK,IAAIryB,EAAqB,EAAGA,EAAa8xB,EAAiB9xB,GAAcmyB,EAAQ,CACpF,MAAMK,EAAsBxyB,EACtByyB,EAAoBD,EAAcN,EAClCQ,EAAsBF,EAAcP,EACpCU,EAAoBD,EAAcR,EAClCU,EAAoBF,EAAcT,EAClCY,EAAqB5oB,EAAMuoB,GAC3BM,EAAqB7oB,EAAMyoB,GACjCzoB,EAAMuoB,GAAeK,EAAaC,EAClC7oB,EAAMwoB,IAAc,EACpBxoB,EAAMyoB,GAAeG,EAAaC,EAClC7oB,EAAM0oB,IAAc,EACpB,IAAII,EAAYV,EACZW,GAAaV,EACbW,EAAgB,EAChBC,EAAgB,EACpB,IAAK,IAAIjzB,EAAgB,EAAGA,EAAQiyB,EAAcjyB,IAAS,CAC1D,MAAMkzB,EAAkBX,EAAcvyB,EAChCmzB,EAAkBV,EAAczyB,EAChCozB,EAAkBX,EAAczyB,EAC/BqzB,EAAkBV,EAAc3yB,EACjCszB,EAAgBtpB,EAAMkpB,GACtBK,EAAgBvpB,EAAMmpB,GACtBK,EAAgBxpB,EAAMopB,GACtBK,EAAgBzpB,EAAMqpB,GACtBK,EAAgBJ,EAAQC,EACxBI,EAAgBH,EAAQC,EAC9BzpB,EAAMkpB,GAAWI,EAAQC,EACzBvpB,EAAMmpB,GAAWM,EAAQD,EACzBxpB,EAAMopB,GAAWM,EAAQZ,EAAIa,EAAQZ,EACrC/oB,EAAMqpB,GAAWM,EAAQb,EAAIY,EAAQX,EACrC,MAAMa,EAAgBtB,EAAuBQ,EAAIE,EAC3Ca,EAAgBvB,EAAuBS,EAAIE,EACjDD,EAAQF,EACRG,EAAQF,EACRD,EAAIc,EACJb,EAAIc,CACJ,CACD,CACD,CAmCD,IAAK,IAAI7zB,EAAgB,EAAGA,EAAQ6xB,EAAiB7xB,GAAS,EAAG,CAChE,MAAM8zB,EAAiB9zB,EAAQ,EACzB+zB,EAAiB/zB,EAAQ,EACzBg0B,EAAiBh0B,EAAQ,EACxBszB,EAAgBtpB,EAAMhK,GACvBuzB,EAAgC,EAAhBvpB,EAAM8pB,GACtBG,EAAgBjqB,EAAM+pB,GACtBG,EAAgC,EAAhBlqB,EAAMgqB,GACtBN,EAAgBJ,EAAQW,EACxBN,EAAgBL,EAAQW,EAC7BjqB,EAAMhK,GAAU0zB,EAAQH,EACzBvpB,EAAM8pB,GAAUJ,EAAQH,EACxBvpB,EAAM+pB,GAAUJ,EAAQO,EACxBlqB,EAAMgqB,GAAUL,EAAQO,CACxB,EAxUF,SAA0BlqB,EAAoB6nB,GAC7C,MAAMsC,EAAmBzC,GAAUG,GACnC,GAAIsC,EAAW,GAAI,MAAM,IAAI92B,MAAM,mDACnC,MAAM+2B,EAAqB,GAAKD,EAChC,IAAK,IAAIpuB,EAAY,EAAGA,EAAI8rB,EAAiB9rB,IAAK,CAEjD,IAAIsuB,EAKJ,GAJAA,GAAU,MAAJtuB,IAAe,GAAW,MAAJA,IAAe,EAC3CsuB,GAAU,MAAJA,IAAe,GAAW,MAAJA,IAAe,EAC3CA,GAAU,MAAJA,IAAe,GAAW,KAAJA,IAAe,EAC1CA,GAAMA,GAAe,GAAa,IAANA,IAAe,IAAOD,EAC/CC,EAAItuB,EAAG,CACV,IAAIuuB,EAAetqB,EAAMjE,GACzBiE,EAAMjE,GAAKiE,EAAMqqB,GACjBrqB,EAAMqqB,GAAKC,CACX,CACD,CACF,CAyTCC,CAAiBvqB,EAAO6nB,EACzB,C,MCvWa2C,GAAb,WAAAr5B,GACSC,KAASq5B,GAAW,EACpBr5B,KAAAs5B,GAAgC,MAACpc,GACjCld,KAAKu5B,GAAW,EAChBv5B,KAAOw5B,GAAW,EAClBx5B,KAAMy5B,GAAW,C,CAElB,SAAAC,CAAUtW,GACZpjB,KAAKy5B,IAAUz5B,KAAKq5B,IAAWr5B,KAAK25B,KACxC35B,KAAKw5B,GAAWx5B,KAAKw5B,GAAU,EAAKx5B,KAAKu5B,GACzCv5B,KAAKs5B,GAAQt5B,KAAKw5B,IAAWpW,EAC7BpjB,KAAKy5B,I,CAEC,QAAAG,CAASxW,GACXpjB,KAAKy5B,IAAUz5B,KAAKq5B,IAAWr5B,KAAK25B,KACxC35B,KAAKs5B,GAASt5B,KAAKw5B,GAAUx5B,KAAKy5B,GAAUz5B,KAAKu5B,IAASnW,EAC1DpjB,KAAKy5B,I,CAEC,QAAAI,GACN,GAAI75B,KAAKy5B,IAAU,EAAG,MAAM,IAAIx3B,MAAM,4BACtC,MAAMmhB,EAAgBpjB,KAAKs5B,GAAQt5B,KAAKw5B,IAIxC,OAHAx5B,KAAKs5B,GAAQt5B,KAAKw5B,SAAWtc,EAC7Bld,KAAKw5B,GAAWx5B,KAAKw5B,GAAU,EAAKx5B,KAAKu5B,GACzCv5B,KAAKy5B,KACErW,C,CAED,OAAA0W,GACN,GAAI95B,KAAKy5B,IAAU,EAAG,MAAM,IAAIx3B,MAAM,4BACtCjC,KAAKy5B,KACL,MAAM70B,EAAiB5E,KAAKw5B,GAAUx5B,KAAKy5B,GAAUz5B,KAAKu5B,GACpDnW,EAAgBpjB,KAAKs5B,GAAQ10B,GAEnC,OADA5E,KAAKs5B,GAAQ10B,QAASsY,EACfkG,C,CAED,SAAA2W,GACN,GAAI/5B,KAAKy5B,IAAU,EAAG,MAAM,IAAIx3B,MAAM,4BACtC,OAAUjC,KAAKs5B,GAAQt5B,KAAKw5B,G,CAEtB,QAAAQ,GACN,GAAIh6B,KAAKy5B,IAAU,EAAG,MAAM,IAAIx3B,MAAM,4BACtC,OAAUjC,KAAKs5B,GAASt5B,KAAKw5B,GAAUx5B,KAAKy5B,GAAS,EAAKz5B,KAAKu5B,G,CAEzD,KAAAU,GACN,OAAOj6B,KAAKy5B,E,CAEN,GAAAv1B,CAAIU,EAAewe,GACzB,GAAIxe,EAAQ,GAAKA,GAAS5E,KAAKy5B,GAAQ,MAAM,IAAIx3B,MAAM,iBACvDjC,KAAKs5B,GAASt5B,KAAKw5B,GAAU50B,EAAS5E,KAAKu5B,IAASnW,C,CAE9C,GAAAuJ,CAAI/nB,GACV,GAAIA,EAAQ,GAAKA,GAAS5E,KAAKy5B,GAAQ,MAAM,IAAIx3B,MAAM,iBACvD,OAAUjC,KAAKs5B,GAASt5B,KAAKw5B,GAAU50B,EAAS5E,KAAKu5B,G,CAE/C,MAAAW,CAAOt1B,GACb,GAAIA,EAAQ,GAAKA,GAAS5E,KAAKy5B,GAAQ,MAAM,IAAIx3B,MAAM,iBACvD,GAAI2C,GAAU5E,KAAKy5B,IAAU,EAAI,CAChC,KAAO70B,EAAQ,GACd5E,KAAKkE,IAAIU,EAAO5E,KAAK2sB,IAAI/nB,EAAQ,IACjCA,IAED5E,KAAK65B,UACL,KAAM,CAEN,IADAj1B,IACOA,EAAQ5E,KAAKy5B,IACnBz5B,KAAKkE,IAAIU,EAAQ,EAAG5E,KAAK2sB,IAAI/nB,IAC7BA,IAED5E,KAAK85B,SACL,C,CAEM,EAAAH,GACP,GAAI35B,KAAKq5B,IAAa,WAAY,MAAM,IAAIp3B,MAAM,qBAClDjC,KAAKq5B,GAAYr5B,KAAKq5B,IAAa,EACnC,MAAMc,EAAkCn6B,KAAKs5B,GACvC1tB,EAAkC,IAAItJ,MAAMtC,KAAKq5B,IACjDe,EAA6B,EAAdp6B,KAAKy5B,GACpBjkB,EAAgC,EAAfxV,KAAKw5B,GAC5B,IAAK,IAAI7uB,EAAI,EAAGA,EAAIyvB,EAAMzvB,IACzBiB,EAAUjB,GAAKwvB,EAAW3kB,EAAS7K,EAAK3K,KAAKu5B,IAE9C,IAAK,IAAI5uB,EAAIyvB,EAAMzvB,EAAI3K,KAAKq5B,GAAW1uB,IACtCiB,EAAUjB,QAAKuS,EAEhBld,KAAKw5B,GAAU,EACfx5B,KAAKs5B,GAAU1tB,EACf5L,KAAKu5B,GAAQv5B,KAAKq5B,GAAY,C,ECzCzB,MAAMgB,GAAsB,IA7CnC,MAII,WAAAt6B,GAHQC,KAAYs6B,aAAY,GACxBt6B,KAASu6B,UAAO,GAGpBv6B,KAAKs6B,aAAe,GACpBt6B,KAAKu6B,UAAY,E,CAId,KAAAC,CAAMC,EAAmBC,EAAgBC,GAC5C,GAAiCzd,MAA7Bld,KAAKu6B,UAAUE,GAAnB,CAGAz6B,KAAKs6B,aAAazvB,KAAK4vB,GACvB,IAAK,IAAI9vB,EAAY,EAAGA,EAAI3K,KAAKu6B,UAAUE,GAAW/1B,OAAQiG,IAC1D3K,KAAKu6B,UAAUE,GAAW9vB,GAAG+vB,EAAUC,GAE3C36B,KAAKs6B,aAAaM,KALjB,C,CAQE,MAAAC,CAAOJ,EAAiBK,GACM5d,MAA7Bld,KAAKu6B,UAAUE,KACfz6B,KAAKu6B,UAAUE,GAAa,IAEhCz6B,KAAKu6B,UAAUE,GAAW5vB,KAAKiwB,E,CAG5B,QAAAC,CAASN,EAAmBK,GAC/B,GAAiC5d,MAA7Bld,KAAKu6B,UAAUE,GACf,OAEJ,MAAMO,EAAQh7B,KAAKu6B,UAAUE,GAAWQ,QAAQH,IAClC,GAAVE,GACAh7B,KAAKu6B,UAAUE,GAAWS,OAAOF,EAAO,E,CAGzC,WAAAG,CAAYV,GACkBvd,MAA7Bld,KAAKu6B,UAAUE,KAGnBz6B,KAAKu6B,UAAUE,GAAW,G,SCmJrBW,GAAb,WAAAr7B,GACiBC,KAAAq7B,EAAc,CAAC,GACfr7B,KAAAs7B,EAAc,CAAC,GACxBt7B,KAAKu7B,MAAW,C,CAEhB,kBAAAC,CAAmB5b,GAEzB5f,KAAKs7B,EAAE,GAAK1b,EACZ5f,KAAKu7B,MAAQ,C,CAGP,0BAAAE,CAA2BC,GAKjC,MAAMC,EAAY,EAAM1wB,KAAK2wB,IAA6B,GAAzBF,GAC3BG,EAAa,EAAMF,EACzB37B,KAAKq7B,EAAE,IAAM,EAAMM,GAAKE,EACxB77B,KAAKs7B,EAAE,GAAKt7B,KAAKs7B,EAAE,GAAK,EAAIO,EAC5B77B,KAAKu7B,MAAQ,C,CAGP,yBAAAO,CAA0BJ,GAahC,MAAMC,EAAY,EAAM1wB,KAAK6C,IAA6B,GAAzB4tB,GACjC17B,KAAKq7B,EAAE,GAAKM,EAAI,EAChB37B,KAAKs7B,EAAE,GAAKK,EACZ37B,KAAKs7B,EAAE,GAAK,EASZt7B,KAAKu7B,MAAQ,C,CAGP,2BAAAQ,CAA4BL,GAGlC,MAAMC,EAAY,EAAM1wB,KAAK2wB,IAA6B,GAAzBF,GAC3BG,EAAa,EAAMF,EACzB37B,KAAKq7B,EAAE,IAAM,EAAMM,GAAKE,EACxB77B,KAAKs7B,EAAE,GAAKK,EAAIE,EAChB77B,KAAKs7B,EAAE,IAAMK,EAAIE,EACjB77B,KAAKu7B,MAAQ,C,CAcP,iBAAAS,CAAkBN,EAAgCO,GAQxD,MAAML,EAAc3wB,KAAK2wB,IAA6B,GAAzBF,GACvBQ,EAAmBjxB,KAAKc,KAAKkwB,GAC7BN,GAAaC,EAAMM,EAAW,IAAMN,EAAMM,EAAW,GAE3Dl8B,KAAKq7B,EAAE,GAAKM,EADO,EAEnB37B,KAAKs7B,EAAE,IAAM,EAAMK,EAAIM,GAAmB,EAAMN,IAAE,EAClD37B,KAAKs7B,EAAE,IAAM,EAAMK,EAAIM,GAAmB,EAAMN,IAAE,EAClD37B,KAAKu7B,MAAQ,C,CAGP,+BAAAY,CAAgCT,GACtC,MAAMC,GAAa1wB,KAAK6C,IAAI4tB,GAA0B,GAAOzwB,KAAK4C,IAAI6tB,GACtE17B,KAAKq7B,EAAE,GAAKM,EACZ37B,KAAKs7B,EAAE,GAAKK,EACZ37B,KAAKs7B,EAAE,GAAK,EACZt7B,KAAKu7B,MAAQ,C,CAeP,8BAAAa,CAA+BC,GAIrC,MAAMV,GAAa,EAAMU,IAAU,EAAMA,GACzCr8B,KAAKq7B,EAAE,GAAKM,EACZ37B,KAAKs7B,EAAE,GAAKK,EACZ37B,KAAKs7B,EAAE,GAAK,EACZt7B,KAAKu7B,MAAQ,C,CAGP,0BAAAe,CAA2BZ,EAAgCa,GAMjE,MAAMC,EAAgBvxB,KAAK6C,IAAI4tB,IAA2B,EAAMa,GAC1D1uB,EAAc5C,KAAK4C,IAAI6tB,GACvBG,EAAa,EAAMW,EACzBx8B,KAAKq7B,EAAE,IAAM,EAAIxtB,EAAMguB,EACvB77B,KAAKq7B,EAAE,IAAM,EAAImB,GAASX,EAC1B77B,KAAKs7B,EAAE,GAAKt7B,KAAKs7B,EAAE,IAAM,EAAIztB,IAAQ,EAAIguB,GACzC77B,KAAKs7B,EAAE,IAAM,EAAIztB,GAAOguB,EACxB77B,KAAKu7B,MAAQ,C,CAGP,yBAAAkB,CAA0Bf,EAAgCa,GAOhE,MAAMZ,EAAY,EAAM1wB,KAAK6C,IAAI4tB,EAAyB,GACpD1b,EAA0B,EAAM,GAAO,EAAMuc,GAC7CG,EAAmB1c,EAAkBA,GAAmB,EAAM2b,GACpE37B,KAAKq7B,EAAE,GAAK,EAAIM,GAAKA,EAAI,GAAOA,EAAEe,EAAW,EAC7C18B,KAAKq7B,EAAE,IAAMM,EAAI,IAAQA,EAAIA,EAAEe,EAAW,GAC1C18B,KAAKs7B,EAAE,GAAKK,EAAEA,EACd37B,KAAKs7B,EAAE,GAAK,EACZt7B,KAAKs7B,EAAE,GAAK,EACZt7B,KAAKu7B,MAAQ,C,CAGP,2BAAAoB,CAA4BjB,EAAgCa,GAClE,MAAMC,EAAgBvxB,KAAK6C,IAAI4tB,IAA2B,EAAIa,GACxD1uB,EAAc5C,KAAK4C,IAAI6tB,GACvBG,EAAa,EAAMW,EACzBx8B,KAAKq7B,EAAE,IAAM,EAAIxtB,EAAMguB,EACvB77B,KAAKq7B,EAAE,IAAM,EAAMmB,GAASX,EAC5B77B,KAAKs7B,EAAE,GAAKt7B,KAAKs7B,EAAE,IAAM,EAAMztB,IAAQ,EAAIguB,GAC3C77B,KAAKs7B,EAAE,KAAO,EAAMztB,GAAOguB,EAC3B77B,KAAKu7B,MAAQ,C,CAeP,YAAAqB,CAAalB,EAAgCa,EAAwBM,GAC3E,MAAMX,EAAmBjxB,KAAKc,KAAKwwB,GAC7BO,EAAoBD,EAAiBnB,GAA0BQ,GAAY,EAAIA,EAAW,EAAEA,GAE5FM,EAAgBvxB,KAAK2wB,IAAgB,GAAZkB,GACzBjB,EAAa,EAAMW,EAAQN,EACjCl8B,KAAKs7B,EAAE,IAAM,EAAMkB,EAAQN,GAAYL,EACvC77B,KAAKs7B,EAAE,GAAKt7B,KAAKq7B,EAAE,IAAM,EAAMpwB,KAAK4C,IAAI6tB,GAA0BG,EAClE77B,KAAKs7B,EAAE,IAAM,EAAMkB,EAAQN,GAAYL,EACvC77B,KAAKq7B,EAAE,IAAM,EAAMmB,EAAQN,GAAYL,EACvC77B,KAAKu7B,MAAQ,C,QAsCFwB,GAAb,WAAAh9B,GACQC,KAAIg9B,KAAW,EACfh9B,KAAIi9B,KAAW,EACfj9B,KAAKk9B,MAAW,C,CAEhB,OAAAC,CAAQC,EAA4BC,GAC1Cr9B,KAAKs9B,eAAeF,EAAQnyB,KAAK4C,IAAIwvB,GAAmBpyB,KAAK6C,IAAIuvB,G,CAG3D,cAAAC,CAAeF,EAA4BJ,EAAcC,GAC/D,MAAM5B,EAAc+B,EAAO/B,EACrBC,EAAc8B,EAAO9B,EACrBiC,EAAiBP,EACjBQ,GAAkBP,EACxB,IAAIQ,EAAkBnC,EAAE,GAAKA,EAAE,GAAKiC,EAChCG,EAAkBpC,EAAE,GAAKkC,EACzBG,EAAoB,EAAMtC,EAAE,GAAKkC,EACjCK,EAAoBvC,EAAE,GAAKmC,EAC3BK,EAAgBN,EAChBO,EAAgBN,EACpB,IAAK,IAAI7yB,EAAY,EAAGA,GAAKyyB,EAAO7B,MAAO5wB,IAAK,CAC/C,MACMozB,EAAmBF,EAAQL,EAASM,EAAQP,EAClDM,EAFyBA,EAAQN,EAASO,EAAQN,EAGlDM,EAAQC,EACRN,GAAWnC,EAAE3wB,GAAKkzB,EAClBH,GAAWpC,EAAE3wB,GAAKmzB,EAClBH,GAAatC,EAAE1wB,GAAKkzB,EACpBD,GAAavC,EAAE1wB,GAAKmzB,CACpB,CACD99B,KAAKk9B,MAAQS,EAAYA,EAAYC,EAAYA,EACjD59B,KAAKg9B,KAAOS,EAAUE,EAAYD,EAAUE,EAC5C59B,KAAKi9B,KAAOS,EAAUC,EAAYF,EAAUG,C,CAGtC,SAAAI,GACN,OAAO/yB,KAAKc,KAAK/L,KAAKg9B,KAAOh9B,KAAKg9B,KAAOh9B,KAAKi9B,KAAOj9B,KAAKi9B,MAAQj9B,KAAKk9B,K,CAGjE,KAAAe,GACN,OAAOhzB,KAAKizB,MAAMl+B,KAAKi9B,KAAMj9B,KAAKg9B,K,QAIvBmB,GAAb,WAAAp+B,GACQC,KAAEo+B,GAAW,EACbp+B,KAAEq+B,GAAW,EACbr+B,KAAEwM,GAAW,EACbxM,KAAEyM,GAAW,EACbzM,KAAE0M,GAAW,EACb1M,KAAOs+B,QAAW,EAClBt+B,KAAOu+B,QAAW,EAClBv+B,KAAOw+B,QAAW,EAClBx+B,KAAOy+B,QAAW,EAClBz+B,KAAO0+B,QAAW,EAClB1+B,KAAO2+B,QAAW,EAClB3+B,KAAO4+B,QAAW,EAKlB5+B,KAAkC6+B,oCAAY,C,CAE9C,WAAAC,GACN9+B,KAAK2+B,QAAU,EACf3+B,KAAK4+B,QAAU,C,CAGT,4BAAAG,CAA6BC,EAA2BC,EAAyBC,EAAmBL,GAC1G,GAAmB,GAAfG,EAAMzD,OAA2B,GAAb0D,EAAI1D,MAAY,MAAM,IAAIt5B,MAClDjC,KAAKo+B,GAAKY,EAAM3D,EAAE,GAClBr7B,KAAKq+B,GAAKW,EAAM3D,EAAE,GAClBr7B,KAAKwM,GAAKwyB,EAAM1D,EAAE,GAClBt7B,KAAKyM,GAAKuyB,EAAM1D,EAAE,GAClBt7B,KAAK0M,GAAKsyB,EAAM1D,EAAE,GAClBt7B,KAAKs+B,SAAWW,EAAI5D,EAAE,GAAK2D,EAAM3D,EAAE,IAAM6D,EACzCl/B,KAAKu+B,SAAWU,EAAI5D,EAAE,GAAK2D,EAAM3D,EAAE,IAAM6D,EACrCL,GACH7+B,KAAKw+B,QAAUvzB,KAAKiB,IAAI+yB,EAAI3D,EAAE,GAAK0D,EAAM1D,EAAE,GAAI4D,GAC/Cl/B,KAAKy+B,QAAUxzB,KAAKiB,IAAI+yB,EAAI3D,EAAE,GAAK0D,EAAM1D,EAAE,GAAI4D,GAC/Cl/B,KAAK0+B,QAAUzzB,KAAKiB,IAAI+yB,EAAI3D,EAAE,GAAK0D,EAAM1D,EAAE,GAAI4D,KAE/Cl/B,KAAKw+B,SAAWS,EAAI3D,EAAE,GAAK0D,EAAM1D,EAAE,IAAM4D,EACzCl/B,KAAKy+B,SAAWQ,EAAI3D,EAAE,GAAK0D,EAAM1D,EAAE,IAAM4D,EACzCl/B,KAAK0+B,SAAWO,EAAI3D,EAAE,GAAK0D,EAAM1D,EAAE,IAAM4D,GAE1Cl/B,KAAK6+B,mCAAqCA,C,ECte5C,MAAMM,GAAO,M,SAMGC,GAAM/xB,EAAauJ,EAAayoB,GAE5C,OAAIA,IADJzoB,GAAY,GAEJyoB,GAAOhyB,EAAYgyB,EACXhyB,EAELuJ,CAEf,CAEA,SAAS0oB,GAAcjyB,EAAauJ,EAAayoB,GAC7C,GAAIhyB,GAAOgyB,GAAOA,GAAOzoB,EAAK,OAAOyoB,EACrC,MAAM,IAAIp9B,MAAM,SAASo9B,mBAAqBhyB,MAAQuJ,KAC1D,CAEA,SAAS2oB,GAAkBC,EAAkB9oB,GAEzC8oB,EAAO30B,KAAK40B,GAAqB/oB,IAAC,GAAgB,IAElD8oB,EAAO30B,KAAK40B,GAAqB/oB,IAAC,GAAgB,KAElD8oB,EAAO30B,KAAK40B,GAAqB/oB,IAAC,GAAgB,KAElD8oB,EAAO30B,KAAK40B,GAAqB/oB,IAAC,GAAgB,KAElD8oB,EAAO30B,KAAK40B,GAAqB/oB,IAAC,EAAgB,KAElD8oB,EAAO30B,KAAK40B,GAAqB/oB,IAAC,EAAgB,IACtD,CAIA,SAASgpB,GAAkBC,EAAoBC,GAC3C,IAAIlpB,EAAY,EAahB,OAXAA,GAAKmpB,GAAoBF,EAAWG,WAAWF,OAAa,GAE5DlpB,GAAKmpB,GAAoBF,EAAWG,WAAWF,OAAa,GAE5DlpB,GAAKmpB,GAAoBF,EAAWG,WAAWF,OAAa,GAE5DlpB,GAAKmpB,GAAoBF,EAAWG,WAAWF,OAAa,GAE5DlpB,GAAKmpB,GAAoBF,EAAWG,WAAWF,OAAa,EAE5DlpB,GAAKmpB,GAAoBF,EAAWG,WAAWF,OAAa,EACrDlpB,CACX,CAEA,SAASqpB,GAA+BC,GACpC,IAAI/8B,EAAcm8B,GAAM,EAAGh+B,EAAO+O,KAAKzL,OAAQs7B,GAC3CC,EAAiB,EAoBrB,OAjBoB,KAAhBD,GAEA/8B,EAAM,EACNg9B,EAAS,GACc,KAAhBD,GAEP/8B,EAAM,EACNg9B,GAAU,GACa,KAAhBD,GAEP/8B,EAAM,EACNg9B,GAAU,GACa,KAAhBD,IAEP/8B,EAAM,EACNg9B,GAAU,GAEP,CAACh9B,EAAKg9B,EACjB,CAqIA,MAAMR,GAA6C,CAAC,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,IACjxe,MAAMK,GAIF,WAAAngC,CAAYogC,EAAgBx7B,EAAoB4yB,GAHxCv3B,KAAKogC,GAAa,GAClBpgC,KAAUqgC,GAAW,EAGzB,IAAK,IAAI11B,EAAYhG,EAAYgG,EAAI4sB,EAAW5sB,IAAK,CACjD,MAAMxH,EAAgB08B,GAAoBM,EAAOL,WAAWn1B,IAC5D3K,KAAKogC,GAAMv1B,KAAM1H,GAAS,EAAK,GAC/BnD,KAAKogC,GAAMv1B,KAAM1H,GAAS,EAAK,GAC/BnD,KAAKogC,GAAMv1B,KAAM1H,GAAS,EAAK,GAC/BnD,KAAKogC,GAAMv1B,KAAM1H,GAAS,EAAK,GAC/BnD,KAAKogC,GAAMv1B,KAAM1H,GAAS,EAAK,GAC/BnD,KAAKogC,GAAMv1B,KAAa,EAAR1H,EACnB,C,CAGE,IAAAm9B,CAAKvH,GACR,IAAIlqB,EAAiB,EACrB,KAAOkqB,EAAW,GACdlqB,IAAmB,EACnBA,GAAU7O,KAAKogC,GAAMpgC,KAAKqgC,MAC1BtH,IAEJ,OAAOlqB,C,CAGJ,YAAA0xB,CAAaC,EAAkBC,GAClC,IAAI5xB,EAAiB2xB,EACjBE,EAAkBD,EACtB,KAAOzgC,KAAKogC,GAAMpgC,KAAKqgC,OACnBxxB,GAAU,GAAK6xB,EACfA,IAEJ,KAAOA,EAAU,GACbA,IACI1gC,KAAKogC,GAAMpgC,KAAKqgC,QAChBxxB,GAAU,GAAK6xB,GAGvB,OAAO7xB,C,CAGJ,gBAAA8xB,GACH,OAAO3gC,KAAKugC,aAAa,EAAG,E,CAGzB,sBAAAK,GACH,OAAO5gC,KAAKugC,aAAa,EAAG,E,CAGzB,YAAAM,GACH,OAAO7gC,KAAKugC,aAAa,EAAG,E,CAGzB,iBAAAO,GACH,OAAI9gC,KAAKsgC,KAAK,IACFtgC,KAAKugC,aAAa,EAAG,GAEtBvgC,KAAKugC,aAAa,EAAG,E,EAKxC,MAAMQ,GAAN,WAAAhhC,GACYC,KAAMghC,GAAW,EACjBhhC,KAAKogC,GAAa,E,CAEnB,KAAA3Z,GACHzmB,KAAKghC,GAAS,C,CAGX,KAAAC,CAAMlI,EAAkB51B,GAE3B,IADA41B,IACOA,GAAY,GACf/4B,KAAKogC,GAAMpgC,KAAKghC,MAAa79B,IAAU41B,EAAY,EACnDA,G,CAID,aAAAmI,CAAcV,EAAkBC,EAAiBt9B,GACpD,GAAIA,EAAQq9B,EAAU,MAAM,IAAIv+B,MAAM,uBACtCkB,GAASq9B,EACT,IAAIE,EAAkBD,EACtB,KAAOt9B,GAAU,GAAKu9B,GAClB1gC,KAAKogC,GAAMpgC,KAAKghC,MAAY,EAC5B79B,GAAS,GAAKu9B,EACdA,IAGJ,IADA1gC,KAAKogC,GAAMpgC,KAAKghC,MAAY,EACrBN,EAAU,GACbA,IACA1gC,KAAKogC,GAAMpgC,KAAKghC,MAAa79B,IAAUu9B,EAAW,C,CAInD,iBAAAS,CAAkBh+B,GACrBnD,KAAKkhC,cAAc,EAAG,EAAG/9B,E,CAGtB,aAAAi+B,CAAcj+B,GACjBnD,KAAKkhC,cAAc,EAAG,EAAG/9B,E,CAGtB,kBAAAk+B,CAAmBl+B,GAClBA,EAAQ,GACRnD,KAAKihC,MAAM,EAAG,GACdjhC,KAAKkhC,cAAc,EAAG,GAAI/9B,KAE1BnD,KAAKihC,MAAM,EAAG,GACdjhC,KAAKkhC,cAAc,EAAG,EAAG/9B,G,CAI1B,MAAAqT,CAAO8qB,GACV,IAAK,IAAI32B,EAAY,EAAGA,EAAI22B,EAAMN,GAAQr2B,IACtC3K,KAAKogC,GAAMpgC,KAAKghC,MAAYM,EAAMlB,GAAMz1B,E,CAIzC,YAAA42B,CAAa/B,GAEhB,IAAK,IAAI70B,EAAY,EAAGA,EAAI3K,KAAKghC,GAAQr2B,GAAK,EAAG,CAC7C,MAAMxH,EAAiBnD,KAAKogC,GAAMz1B,IAAM,EAAM3K,KAAKogC,GAAMz1B,EAAI,IAAM,EAAM3K,KAAKogC,GAAMz1B,EAAI,IAAM,EAAM3K,KAAKogC,GAAMz1B,EAAI,IAAM,EAAM3K,KAAKogC,GAAMz1B,EAAI,IAAM,EAAK3K,KAAKogC,GAAMz1B,EAAI,GACxK60B,EAAO30B,KAAK40B,GAAoBt8B,GACnC,CACD,OAAOq8B,C,CAGJ,YAAAgC,GACH,OAAOv2B,KAAKgS,KAAKjd,KAAKghC,GAAS,E,WAUvBS,GAAYzgB,EAAkB0gB,EAActH,GACxD,MAAO,CAAEpZ,SAAUA,EAAU0gB,KAAMA,EAAMtH,KAAMA,EACnD,C,MAEauH,GAOT,WAAA5hC,CAAmB6hC,EAAe5C,EAAeC,EAAa7E,EAAcyH,GAAmB,GAC3F7hC,KAAK8hC,QAAU,CAACF,GAChB5hC,KAAK+hC,KAAO,CAACN,GAAY,EAAG,EAAGrH,GAAOqH,GAAY,EAAGxC,EAAMD,EAAO6C,EAAU,EAAIzH,IAChFp6B,KAAKg/B,MAAQA,EACbh/B,KAAKi/B,IAAMA,EACXj/B,KAAKgiC,sBAAuB,C,CAGzB,gBAAAC,GACH,IAAIC,EAAsC,EACtCC,EAAuB,EAC3B,IAAK,IAAIC,EAAmB,EAAGA,EAAWpiC,KAAK+hC,KAAKr9B,OAAQ09B,IAAY,CACpE,MAAMC,EAAgBriC,KAAK+hC,KAAKK,EAAW,GACrCE,EAAgBtiC,KAAK+hC,KAAKK,GAChC,GAAIC,EAAKrhB,UAAYshB,EAAKthB,SAAU,CAChC,MAAMuhB,EAAmBD,EAAKZ,KAAOW,EAAKX,KACtCQ,EAA8BK,IAC9BL,EAA8BK,EAC9BJ,EAAeE,EAAKrhB,SAE3B,CACJ,CACD,GAAmC,GAA/BkhB,EAAkC,CAClC,IAAIM,EAAsB,EAC1B,IAAK,IAAIJ,EAAmB,EAAGA,EAAWpiC,KAAK+hC,KAAKr9B,OAAQ09B,IAAY,CACpE,MAAMK,EAAeziC,KAAK+hC,KAAKK,GAC3BI,EAAcC,EAAIrI,OAClBoI,EAAcC,EAAIrI,KAClB+H,EAAeM,EAAIzhB,SAE1B,CACJ,CACD,OAAOmhB,C,CAGJ,KAAAO,GACH,MAAMC,EAAgB,IAAIhB,IAAM,EAAG3hC,KAAKg/B,MAAOh/B,KAAKi/B,IAAK,GACzD0D,EAAQb,QAAU9hC,KAAK8hC,QAAQtrB,SAC/BmsB,EAAQZ,KAAO,GACf,IAAK,MAAMU,KAAOziC,KAAK+hC,KACnBY,EAAQZ,KAAKl3B,KAAK42B,GAAYgB,EAAIzhB,SAAUyhB,EAAIf,KAAMe,EAAIrI,OAG9D,OADAuI,EAAQX,qBAAuBhiC,KAAKgiC,qBAC7BW,C,CAGJ,cAAAC,CAAeC,GAClB,IAAIC,EACJ,IAAKA,EAAc,EAAGA,EAAc9iC,KAAK+hC,KAAKr9B,OAAS,KAC/C1E,KAAK+hC,KAAKe,GAAapB,KAAO1hC,KAAKg/B,MAAQ6D,GADOC,KAG1D,OAAOA,C,QAIFC,GAAb,WAAAhjC,GACWC,KAAKgjC,MAAW,GACPhjC,KAAAijC,YAAwB,CAAC,E,CAElC,UAAAC,GACH,MAAMr0B,EAAiB,GACvB,IAAK,MAAMs0B,KAAQnjC,KAAKgjC,MACpBn0B,EAAOhE,KAAKs4B,EAAKT,SAErB,OAAO7zB,C,CAGJ,KAAAu0B,GACHpjC,KAAKgjC,MAAMt+B,OAAS,EACpB1E,KAAKijC,YAAY,GAAK,EACtBjjC,KAAKijC,YAAYv+B,OAAS,C,CAGvB,YAAA2+B,CAAa/W,EAAY3F,EAAkB2c,GAC9C,MAAMC,EAAsB,GAC5B,IAAK,MAAMJ,KAAQnjC,KAAKgjC,MAAO,CAE3B,IAAIrkB,EAAyBgI,EAAQsc,YAAYjjC,KAAKijC,YAAY,IAC9DO,EAAcv4B,KAAK2L,IAAI,EAAGxV,EAAOwY,SAAWupB,EAAKrB,QAAQ,GAAK,GAC9D2B,EAAoBnX,EAAKoX,uBAAuBJ,EAAc3kB,EAAWnC,WAAWgnB,GAAM7kB,EAAWglB,eAAeH,IACxH,MAAMI,EAAuB,GAC7B,IAAK,MAAMnB,KAAOU,EAAKpB,KAAM,CACzB,IAAI8B,EAAiBP,EAAer4B,KAAKe,MAAMy2B,EAAIrI,MAAQnvB,KAAKe,MAAiB,IAAXy2B,EAAIrI,KAAaqJ,GACvFG,EAAW/4B,KAAK,CACZi5B,MAASrB,EAAIf,KAAOyB,EAAKnE,OAAS59B,EAAO2Q,QAAQua,EAAKyX,QAAQ/xB,aAAe5Q,EAAOwQ,aACpFoyB,UAAavB,EAAIzhB,SACjBU,OAAUmiB,EACVI,OAAUX,GAEjB,CAED,MAAMY,EAAkB,CACpBpC,QAAWqB,EAAKrB,QAChBqC,OAAUP,GAEI,GAAdT,EAAKnE,QACLkF,EAAiC,qBAAIf,EAAKnB,sBAE9CuB,EAAU14B,KAAKq5B,EAClB,CAED,MAAME,EAAqB,CAAEpB,MAASO,GAItC,OAHIjX,EAAK+X,qBACLD,EAA2B,YAAIpkC,KAAKijC,YAAYhpB,KAAItP,GAAKA,EAAI,KAE1Dy5B,C,CAGJ,cAAAE,CAAeF,EAAoB9X,EAAY3F,EAAkB4d,EAA8BC,EAAyBlB,GAC3H,GAAIhX,EAAK+X,mBACL,GAAI/hC,MAAMwhB,QAAQsgB,EAA2B,aAAI,CAC7C,MAAMnB,EAAqBmB,EAA2B,YAChDK,EAA0BrF,GAAMh+B,EAAOqQ,mBAAoB6a,EAAKoY,sCAAsC/d,GAAW,EAAGsc,EAAYv+B,QACtI,IAAK,IAAIu0B,EAAY,EAAGA,EAAIwL,EAAiBxL,IACzCj5B,KAAKijC,YAAYhK,GAAKmG,GAAM,EAAGzY,EAAQsc,YAAYv+B,QAA0B,EAAjBu+B,EAAYhK,IAAU,GAEtFj5B,KAAKijC,YAAYv+B,OAAS+/B,CAC7B,MACGzkC,KAAKijC,YAAY,GAAK7D,GAAM,EAAGzY,EAAQsc,YAAYv+B,QAAuC,EAA9B0/B,EAA0B,YAAS,GAC/FpkC,KAAKijC,YAAYv+B,OAAS,EAIlC,GAAI0/B,EAAqB,OAAKA,EAAqB,MAAE1/B,OAAS,EAAG,CAC7D,MAAMigC,EAAuB15B,KAAKoC,IAAIif,EAAKsY,YAAcxjC,EAAOwQ,cAAgB0xB,EAAeliC,EAAOwY,SAAW,GAAIwqB,EAAqB,MAAE1/B,SAAW,GAIvJ,IAAK,IAAIu0B,EAAY,EAAGA,EAAImL,EAAqB,MAAE1/B,UAC3Cu0B,GAAK0L,GAD8C1L,IAAK,CAG5D,MAAMiL,EAAaE,EAAqB,MAAEnL,GAC1C,KAAKiL,GAAeA,EAAoB,SAAOA,EAAoB,QAAEx/B,QAAU,GAAOw/B,EAAmB,QAAOA,EAAmB,OAAEx/B,QAAU,GAC3I,SAGJ,MAAMy+B,EAAa,IAAIxB,GAAK,EAAG,EAAG,EAAG,GACrCwB,EAAKrB,QAAU,GACfqB,EAAKpB,KAAO,GAEZ,IAAK,IAAI8C,EAAY,EAAGA,EAAIX,EAAoB,QAAEx/B,OAAQmgC,IAAK,CAC3D,MAAMjD,EAA2C,EAA3BsC,EAAoB,QAAEW,GAC5C,IAAoC,GAAhC1B,EAAKrB,QAAQ7G,QAAQ2G,KACzBuB,EAAKrB,QAAQj3B,KAAK+2B,GACduB,EAAKrB,QAAQp9B,QAAUtD,EAAO8V,cAAc,KACnD,CACD,GAAIisB,EAAKrB,QAAQp9B,OAAS,EAAG,SAG7B,IAAIogC,EAAwB,EAC5B,IAAK,IAAID,EAAY,EAAGA,EAAIX,EAAmB,OAAEx/B,OAAQmgC,IAAK,CAC1D,MAAME,EAAmBb,EAAmB,OAAEW,GAC9C,GAAmB3nB,MAAf6nB,GAAmD7nB,MAAvB6nB,EAAkB,KAAgB,SAClE,MAAM/jB,EAAgD9D,MAA5B6nB,EAAuB,UAAkB,EAAgC,EAA3BA,EAAuB,UAEzFrD,EAAez2B,KAAKe,OAAQ+4B,EAAkB,KAAK3jC,EAAOwQ,aAAe2yB,GAE/E,IAQInK,EARAzb,EAAyBgI,EAAQsc,YAAYjjC,KAAKijC,YAAY,IAC9DO,EAAcv4B,KAAK2L,IAAI,EAAGxV,EAAOwY,SAAWupB,EAAKrB,QAAQ,GAAK,GAG9D2B,EAAoBnX,EAAKoX,uBAAuBJ,EAAc3kB,EAAWnC,WAAWgnB,GAAM7kB,EAAWglB,eAAeH,IAMpHpJ,EADyBld,MAAzB6nB,EAAoB,OACbtB,EACyBvmB,MAAzB6nB,EAAoB,OACpB95B,KAAK2L,IAAI,EAAG3L,KAAKoC,IAAIo2B,EAAWx4B,KAAKe,OAA+B,EAAxB+4B,EAAoB,QAAStB,EAAY,QAG3D,EAAxBsB,EAAoB,QAAS,EAAK95B,KAAKe,MAA8B,EAAxB+4B,EAAoB,QAAS95B,KAAK2L,IAAI,EAAG3L,KAAKoC,IAAIo2B,EAAWx4B,KAAKe,OAA+B,EAAxB+4B,EAAoB,QAAStB,EAAY,OAGxK/B,EAAOpV,EAAKsY,YAAcxjC,EAAOwQ,eACb,GAApBuxB,EAAKpB,KAAKr9B,SAEVy+B,EAAKnE,MAAQ0C,EACboD,EAAgB9jB,GAMpBmiB,EAAKpB,KAAKl3B,KAAK42B,GAAYzgB,EAAW8jB,EAAepD,EAAOyB,EAAKnE,MAAO5E,IAC3E,CACD,GAAI+I,EAAKpB,KAAKr9B,OAAS,EAAG,SAE1By+B,EAAKlE,IAAMkE,EAAKpB,KAAKoB,EAAKpB,KAAKr9B,OAAS,GAAGg9B,KAAOyB,EAAKnE,MAEvD,MAAMnlB,EAAmB2qB,EAAiBpjC,EAAOsY,UAAY,EAAItY,EAAOyY,SACxE,IAAImrB,EAAsBnrB,EACtBorB,EAAuB,EAC3B,IAAK,IAAIJ,EAAY,EAAGA,EAAI1B,EAAKrB,QAAQp9B,OAAQmgC,IAC7C1B,EAAKrB,QAAQ+C,IAAMC,GACf3B,EAAKrB,QAAQ+C,GAAK,GAAK1B,EAAKrB,QAAQ+C,GAAKhrB,KACzCspB,EAAKrB,QAAQ5G,OAAO2J,EAAG,GACvBA,KAEA1B,EAAKrB,QAAQ+C,GAAKG,IAAaA,EAAc7B,EAAKrB,QAAQ+C,IAC1D1B,EAAKrB,QAAQ+C,GAAKI,IAAcA,EAAe9B,EAAKrB,QAAQ+C,IAEpE,KAAI1B,EAAKrB,QAAQp9B,OAAS,GAA1B,CAEA,IAAK,IAAImgC,EAAY,EAAGA,EAAI1B,EAAKpB,KAAKr9B,OAAQmgC,IAAK,CAC/C,MAAMpC,EAAeU,EAAKpB,KAAK8C,GAC3BpC,EAAIzhB,SAAWgkB,EAAc,IAAGvC,EAAIzhB,UAAYgkB,GAChDvC,EAAIzhB,SAAWikB,EAAeprB,IAAU4oB,EAAIzhB,SAAWnH,EAAWorB,GAClEJ,GAAK,GACDpC,EAAIzhB,UAAYmiB,EAAKpB,KAAK8C,EAAI,GAAG7jB,UACjCyhB,EAAIzhB,UAAYmiB,EAAKpB,KAAK8C,EAAI,GAAG7jB,UACjCyhB,EAAIrI,MAAQ+I,EAAKpB,KAAK8C,EAAI,GAAGzK,MAC7BqI,EAAIrI,MAAQ+I,EAAKpB,KAAK8C,EAAI,GAAGzK,OAC7B+I,EAAKpB,KAAK7G,OAAO2J,EAAI,EAAG,GACxBA,IAGX,CAEiB,GAAd1B,EAAKnE,MACLmE,EAAKnB,sBAA+D,IAAvCkC,EAAiC,qBAE9Df,EAAKnB,sBAAuB,EAGhChiC,KAAKgjC,MAAMn4B,KAAKs4B,EAvBa,CAwBhC,CACJ,C,QAII+B,GAMT,WAAAnlC,CAAY6E,GALL5E,KAASsgB,UAAW,EACpBtgB,KAAS0N,UAAW,EACpB1N,KAAQijB,SAAW,EACnBjjB,KAAUohB,WAAW,GAGxBphB,KAAKojC,MAAMx+B,E,CAGR,KAAAw+B,CAAMx+B,GACT5E,KAAKsgB,UAAY,EACjBtgB,KAAK0N,UAAa9I,GAAS,EAAKxD,EAAOuW,qBAAuB,EAC9D3X,KAAKijB,SAAW,EAChBjjB,KAAKohB,WAAa,C,CAGf,IAAA+jB,CAAK7D,GACRthC,KAAKsgB,UAAYghB,EAAMhhB,UACvBtgB,KAAK0N,UAAY4zB,EAAM5zB,UACvB1N,KAAKijB,SAAWqe,EAAMre,SACtBjjB,KAAKohB,WAAakgB,EAAMlgB,U,QAInBgkB,GAMT,WAAArlC,GALOC,KAAIqE,KAAW,GACfrE,KAAYsX,aAAW,EACvBtX,KAAAwX,YAA0B,CAAC,GAAI,GAAI,GAAI,GAAI,GAAI,IAC/CxX,KAAiBuX,kBAAa,GAGjCvX,KAAKqlC,WAAW,E,CAGb,GAAAnhC,CAAIohC,EAAkBC,GACzBvlC,KAAKojC,QACLpjC,KAAKsX,aAAeguB,EACpB,IAAK,IAAI36B,EAAI,EAAGA,EAAI3K,KAAKwX,YAAY9S,OAAQiG,IAAK,CAC9C3K,KAAKwX,YAAY7M,GAAK46B,EAAW56B,GAC7BA,EAAI26B,IACJtlC,KAAKuX,kBAAkB5M,GAAKA,EAAE,GAElC3K,KAAKqE,MAASsG,EAAE,EAChB,IAAK,IAAIsuB,EAAI,EAAGA,EAAIsM,EAAW56B,GAAGjG,OAAOu0B,IACrCj5B,KAAKqE,MAAQkhC,EAAW56B,GAAGsuB,GACvBsM,EAAW56B,GAAGsuB,GAAKqM,EAAS,IAC5BtlC,KAAKuX,kBAAkBguB,EAAW56B,GAAGsuB,GAAK,GAAKtuB,EAAI,GAEvD3K,KAAKqE,MAAQ,IAGbrE,KAAKqE,MADLsG,EAAI26B,EACS,IAEA,GAEpB,C,CAGE,KAAAlC,GACHpjC,KAAKqE,KAAO,GACZrE,KAAKsX,aAAe,EACpBtX,KAAKwX,YAAc,CAAC,CAAC,EAAG,EAAG,EAAG,EAAG,GAAI,GAAI,GAAI,GAAI,GAAI,IACrDxX,KAAKuX,kBAAoB,CAAC,EAAG,EAAG,EAAG,EAAG,EAAG,E,CAGtC,IAAA4tB,CAAK7D,GACRthC,KAAKqE,KAAOi9B,EAAMj9B,KAClBrE,KAAKsX,aAAegqB,EAAMhqB,aAC1BtX,KAAKwX,YAAc8pB,EAAM9pB,YACzBxX,KAAKuX,kBAAoB+pB,EAAM/pB,iB,CAG5B,UAAA8tB,CAAW/D,GACdthC,KAAKojC,QACL,IAAI/kB,EAASjd,EAAOqW,cAAc6pB,GAClCthC,KAAKqE,KAAOga,EAAOha,KACnBrE,KAAKsX,aAAe+G,EAAO/G,aAC3B,IAAK,IAAI3M,EAAI,EAAGA,EAAI0T,EAAO7G,YAAY9S,OAAQiG,IAC3C3K,KAAKwX,YAAY7M,GAAKrI,MAAMC,KAAK8b,EAAO7G,YAAY7M,IACpD3K,KAAKuX,kBAAkB5M,GAAK0T,EAAO9G,kBAAkB5M,E,QAKpD66B,GAIT,WAAAzlC,GAHOC,KAAIqE,KAAW,GACfrE,KAAAmY,QAAsB,CAAC,GAAI,GAAI,GAAI,GAAI,GAAI,IAG9CnY,KAAKqlC,WAAW,E,CAGb,GAAAnhC,CAAIuhC,GACPzlC,KAAKojC,QACL,IAAK,IAAIz4B,EAAI,EAAGA,EAAI3K,KAAKmY,QAAQzT,OAAQiG,IAAK,CAC1C3K,KAAKmY,QAAQxN,GAAK86B,EAAU96B,GAC5B,IAAK,IAAIsuB,EAAI,EAAGA,EAAIwM,EAAU96B,GAAGjG,OAAQu0B,IACrCj5B,KAAKqE,MAAQohC,EAAU96B,GAAGsuB,GAC1Bj5B,KAAKqE,MAAQ,IAEjBrE,KAAKqE,MAAQ,GAChB,C,CAGE,KAAA++B,GACHpjC,KAAKojC,MACLpjC,KAAKqE,KAAO,GACZrE,KAAKmY,QAAU,CAAC,CAAC,GAAI,GAAI,GAAI,GAAI,GAAI,G,CAGlC,IAAAgtB,CAAK7D,GACRthC,KAAKqE,KAAOi9B,EAAMj9B,KAClBrE,KAAKmY,QAAUmpB,EAAMnpB,O,CAGlB,UAAAktB,CAAW/D,GACdthC,KAAKojC,QACL,IAAI/kB,EAASjd,EAAOgX,aAAakpB,GACjC,IAAK,IAAI32B,EAAI,EAAGA,EAAI0T,EAAOlG,QAAQzT,OAAQiG,IAAK,CAC5C3K,KAAKmY,QAAQxN,GAAKrI,MAAMC,KAAK8b,EAAOlG,QAAQxN,IAC5C,IAAK,IAAIsuB,EAAI,EAAGA,EAAI5a,EAAOlG,QAAQxN,GAAGjG,OAAQu0B,IAC1Cj5B,KAAKqE,MAAQga,EAAOlG,QAAQxN,GAAGsuB,GAC/Bj5B,KAAKqE,MAAQ,IAEjBrE,KAAKqE,MAAQ,GAChB,C,QAIIqhC,GAIT,WAAA3lC,CAAYykC,GAHLxkC,KAAQshB,SAAa,GACrBthB,KAAI2lC,MAAY,EAGnB3lC,KAAKojC,MAAMoB,E,CAGR,KAAApB,CAAMoB,GACT,IAAK,IAAI75B,EAAY,EAAGA,EAAIvJ,EAAOmX,sBAAuB5N,IACtD,GAAI65B,EACAxkC,KAAKshB,SAAS3W,GAAKM,KAAKe,MAAM5K,EAAOsX,aAAe,EAAIzN,KAAKc,KAAK,EAAIpB,EAAI,SACvE,CACH,MAAMi7B,EAA2B,GAALj7B,GAAe,GAALA,GAAe,IAALA,GAAgB,IAALA,GAAgB,IAALA,GAAgB,IAALA,GAAgB,IAALA,GAAgB,IAALA,GAAWA,GAAK,GACvH3K,KAAKshB,SAAS3W,GAAKi7B,EAAa36B,KAAK2L,IAAI,EAAG3L,KAAKe,MAAM5K,EAAOsX,aAAe,EAAI/N,EAAI,MAAQ,CAChG,CAEL3K,KAAK6lC,qB,CAGF,mBAAAA,GACH,MAAMC,EAAmBC,GAAMC,kBAAkB5kC,EAAOsX,YAAc,GAAK,EAC3E,IAAIitB,EAAe,EACnB,IAAK,MAAMM,KAASjmC,KAAKshB,SAAUqkB,EAASA,EAAOG,EAAYG,IAAW,EAC1EjmC,KAAK2lC,KAAOA,C,EAIpB,MAAMO,GAAN,WAAAnmC,GACWC,KAAIyK,KAAwB,KAC3BzK,KAAKmmC,IAAY,C,CAElB,aAAAC,CAAc/mB,EAAwBgnB,GACzC,GAAIrmC,KAAKmmC,IAAS9mB,EAASsmB,KAAM,OAAO3lC,KAAKyK,KAC7CzK,KAAKmmC,GAAQ9mB,EAASsmB,KAEtB,MAAM94B,EAAqBzL,EAAOiX,oBACjB,MAAbrY,KAAKyK,MAAgBzK,KAAKyK,KAAK/F,QAAUmI,EAAa,IACtD7M,KAAKyK,KAAO,IAAIK,aAAa+B,EAAa,IAE9C,MAAMpC,EAAqBzK,KAAKyK,KAEhC,IAAK,IAAIE,EAAY,EAAGA,EAAIkC,EAAYlC,IACpCF,EAAKE,GAAK,EAGd,MAGM27B,EAAuB,CAAC,EAAG,EAAI,EAAGr7B,KAAKwC,KAAK,EAAI,GAAI,EAAI,EAAGxC,KAAKwC,KAAK,KAAQ,EAAI,EAAG,EAAI,GAC9F,SAAS84B,EAAqBN,GAC1B,OAAOI,EAAep7B,KAAKmhB,MAAM6Z,EAAQ7kC,EAAOoX,gCAAkC8tB,GAAYL,EAAQ7kC,EAAOoX,gCAAkCpX,EAAOoX,+B,CAG1J,IAAIjL,EAA4B,EAChC,IAAK,IAAI5C,EAAY,EAAGA,EAAIvJ,EAAOmX,sBAAwB,EAAG5N,IAAK,CAC/D,MAAM67B,EAAkB77B,GAAK,EAAK,EAAI0U,EAASiC,SAAS3W,EAAI,GACtD87B,EAAkB97B,GAAKvJ,EAAOmX,sBAAyB8G,EAASiC,SAASlgB,EAAOmX,sBAAwB,GAAK8G,EAASiC,SAAS3W,GAC/H+7B,EAAkBH,EAAqB57B,EAAI,GACjD,IAAIg8B,EAAkBJ,EAAqB57B,GACvCA,GAAKvJ,EAAOmX,wBAAuBouB,EAdb,GACD,KAayCA,EAdxC,KAeZ,GAAVH,GAAyB,GAAVC,IAEnBl5B,GAAqB,IAAOzB,EAAkBrB,EAAMoC,EAAY65B,EAASC,EAASH,EAASplC,EAAOsX,YAAa+tB,EAASrlC,EAAOsX,aAAc,IAChJ,CAWD,OAVI2G,EAASiC,SAASlgB,EAAOmX,sBAAwB,GAAK,IACtDhL,GAAqB,IAAOzB,EAAkBrB,EAAMoC,EApB1B,GACD,KAmBwD05B,EAAqBnlC,EAAOmX,uBApBnF,OAoB0J8G,EAASiC,SAASlgB,EAAOmX,sBAAwB,GAAKnX,EAAOsX,YAAa,GAAI,KAGtQnN,GAA4Bd,EAAMoC,GAClCrB,GAAsBf,EAAM,GAAOQ,KAAKc,KAAKc,GAAc5B,KAAKiB,IAAIqB,EAAmB,OAGvF9C,EAAKoC,GAAcpC,EAAK,GAEjBA,C,QAIFm8B,GAIT,WAAA7mC,GAHOC,KAAS6gB,UAAa,GACtB7gB,KAAI2lC,MAAY,EAGnB3lC,KAAKojC,O,CAGF,KAAAA,GACH,IAAK,IAAIz4B,EAAY,EAAGA,EAAIvJ,EAAOuX,uBAAwBhO,IACvD3K,KAAK6gB,UAAUlW,GAAK,EAExB3K,KAAK6gB,UAAU,GAAKzf,EAAO2X,aAC3B/Y,KAAK6gB,UAAU,GAAKzf,EAAO2X,aAC3B/Y,KAAK6gB,UAAU,GAAKzf,EAAO2X,aAC3B/Y,KAAK6lC,qB,CAGF,mBAAAA,GACH,MAAMC,EAAmBC,GAAMC,kBAAkB5kC,EAAO2X,aAAe,GAAK,EAC5E,IAAI4sB,EAAe,EACnB,IAAK,MAAMM,KAASjmC,KAAK6gB,UAAW8kB,EAASA,EAAOG,EAAYG,IAAW,EAC3EjmC,KAAK2lC,KAAOA,C,EAIpB,MAAMkB,GAAN,WAAA9mC,GACWC,KAAIyK,KAAwB,KAC3BzK,KAAKmmC,IAAY,C,CAGlB,aAAAC,CAAc/mB,EAAyBynB,GAC1C,GAAI9mC,KAAKmmC,IAAS9mB,EAASsmB,MAAQ3lC,KAAK+mC,IAAqBD,EAAgB,OAAO9mC,KAAKyK,KACzFzK,KAAKmmC,GAAQ9mB,EAASsmB,KACtB3lC,KAAK+mC,GAAoBD,EAEzB,MAAMluB,EAA0E,GAA7CkuB,EAAiD1lC,EAAOyX,iCAAmCzX,EAAOwX,kBAE/H/L,EAAqBzL,EAAO4X,oBAC5B1L,EAA0BhC,EAAY,EAAG,KAAM,MAEpC,MAAbtL,KAAKyK,MAAgBzK,KAAKyK,KAAK/F,QAAUmI,EAAa,IACtD7M,KAAKyK,KAAO,IAAIK,aAAa+B,EAAa,IAE9C,MAAMpC,EAAqBzK,KAAKyK,KAEhC,IAAK,IAAIE,EAAY,EAAGA,EAAIkC,EAAYlC,IACpCF,EAAKE,GAAK,EAId,IAAIq8B,EAAwC,EAE5C,IAAK,IAAIC,EAAwB,EAAGA,EAAgBruB,EAAmBquB,IAAiB,CACpF,MAAMC,EAAuBD,EAAgB,EAC7C,IAAIE,EAAuBF,EAAgB7lC,EAAOuX,uBAAyB0G,EAASwB,UAAUomB,GAAiB5nB,EAASwB,UAAUzf,EAAOuX,uBAAyB,GAC9JsuB,GAAiB7lC,EAAOuX,yBACxBwuB,GAAgB,GAAKF,EAAgB7lC,EAAOuX,yBAA2BC,EAAoBxX,EAAOuX,yBAEtG,MAAMyuB,EAA0BD,EAAe/lC,EAAO2X,aACtD,IAAIrL,EAAoBzC,KAAKiB,IAAI,EAAGi7B,EAAe/lC,EAAO2X,aAAe,GAAK9N,KAAKc,KAAKq7B,GACpFH,EAAgB7lC,EAAOuX,yBACvBquB,GAAiCt5B,GAErCA,GAAazC,KAAKiB,IAAIg7B,GAdG,KAkBzBx5B,GAAaJ,EAAU25B,EAAgB,KAEvCx8B,EAAKoC,EAAaq6B,GAAgBx5B,CACrC,CAEDnC,GAA4Bd,EAAMoC,GAGlC,MAAMgL,EAAe,EAAI5M,KAAKiB,IAAI86B,EAA+B,IACjE,IAAK,IAAIr8B,EAAY,EAAGA,EAAIF,EAAK/F,OAAQiG,IAAKF,EAAKE,IAAMkN,EAOzD,OX8yBF,SAA6BpN,GAElC,IAAIW,EAAqB,EACzB,IAAK,IAAIT,EAAY,EAAGA,EAAIF,EAAK/F,OAAQiG,IAAK,CAC7C,MAAMuuB,EAAOzuB,EAAKE,GAClBF,EAAKE,GAAKS,EACVA,GAAc8tB,CACd,CACF,CW3zBQmO,CAAmB58B,GAGnBA,EAAKoC,GAAcpC,EAAK,GAEjBA,C,QAIF68B,GAAb,WAAAvnC,GACWC,KAAIunC,KAAW,EACfvnC,KAAAwnC,KAAepmC,EAAOyS,iBACtB7T,KAAA+U,KAAmC,C,CAEnC,GAAA7Q,CAAIujC,EAAqBC,GAC5B1nC,KAAKunC,KAAOE,EACZznC,KAAKwnC,KAAOE,C,CAGT,KAAAC,GACH,OAAOL,GAAmBM,sBAAsB5nC,KAAKunC,K,CAGlD,4BAAOK,CAAsBzkC,GAChC,OAAO/B,EAAOqS,sBAAwBxI,KAAKiB,IAAI,GAAM/I,EAAQ/B,EAAOoS,4BAA8BpS,EAAOkS,e,CAEtG,4BAAOu0B,CAAsBC,GAChC,OAAO78B,KAAKwC,KAAKq6B,EAAK1mC,EAAOqS,uBAAyBrS,EAAOkS,eAAiBlS,EAAOoS,0B,CAElF,mCAAOu0B,CAA6BD,GACvC,OAAO78B,KAAK2L,IAAI,EAAG3L,KAAKoC,IAAIjM,EAAOmS,gBAAkB,EAAGtI,KAAKe,MAAMs7B,GAAmBO,sBAAsBC,K,CAGzG,aAAAE,CAAcC,EAAmB,GACpC,MAAMC,GAAiBloC,KAAKwnC,KAAOpmC,EAAOyS,kBAAoBzS,EAAO0S,eAC/Dq0B,EAA+C,GAA5BnoC,KAAK+U,KAA2B,GAAO,GAC1DqzB,EAA4BD,GAAWD,EAAQC,GAAWF,EAChE,OAAOh9B,KAAKiB,IAAI,EAAKk8B,E,CAElB,2CAAOC,CAAqCzoB,GAC/C,OAAO3U,KAAK2L,IAAI,EAAG3L,KAAKoC,IAAIjM,EAAOwS,gBAAkB,EAAG3I,KAAKe,MAAMf,KAAKwC,KAAKmS,GAAcxe,EAAO0S,eAAiB1S,EAAOyS,mB,CAGvH,cAAAy0B,CAAelL,EAA4Bn8B,EAAoBsnC,EAAmB,EAAKN,EAAmB,GAC7G,MAAMvM,EAAiC,EAAMzwB,KAAK2C,GAAK3C,KAAK2L,IAAIxV,EAAOuS,gBAAiB1I,KAAKoC,IAAIjM,EAAOsS,gBAAiB60B,EAAWvoC,KAAK2nC,UAAY1mC,EAC/I2e,EAAqB5f,KAAKgoC,cAAcC,GAC9C,OAAQjoC,KAAK+U,MACT,OACIqoB,EAAOd,2BAA2BZ,EAAwB9b,GAC1D,MACJ,OACIwd,EAAOT,4BAA4BjB,EAAwB9b,GAC3D,MACJ,OACIwd,EAAOR,aAAalB,EAAwB9b,EAAY,GACxD,MACJ,QACI,MAAM,IAAI3d,M,CAIf,yBAAAumC,GACH,MAAMvI,GAAkBjgC,KAAKunC,KAAOnmC,EAAOoS,4BAA8BpS,EAAOkS,eAC1Em1B,GAAmBzoC,KAAKwnC,KAAOpmC,EAAOyS,kBAAoBzS,EAAO0S,eACvE,OAAQ9T,KAAK+U,MACT,OACI,MAAM2zB,EAA6Bz9B,KAAKiB,IAAI,EAAK+zB,GAAU7+B,EAAOqS,sBAAwB,IAEpFk1B,GAAsB19B,KAAKc,KAAK,EAAM,EAAM28B,GAAsB,GAAO,EACzEE,EAAuB39B,KAAKwC,KAAKk7B,GACvC,OAAO19B,KAAKiB,IAAI,GAAK,GAAMjB,KAAK2L,IAAI,EAAK6xB,EAAU,GAAOx9B,KAAKoC,IAAI,EAAKpC,KAAK2L,KAAK,EAAK,KAAQgyB,EAAe,IAAO39B,KAAKoC,IAAI,EAAKo7B,EAAU,MACjJ,OACI,OAAOx9B,KAAKiB,IAAI,GAAK,KAAQjB,KAAK2L,IAAI,EAAK6xB,EAAU,GAAOx9B,KAAKoC,IAAI,EAAK,KAAQ4yB,EAASh1B,KAAKwC,KAAKrM,EAAOqS,sBAAwB,MAAU,GAAMxI,KAAKoC,IAAI,EAAKo7B,EAAU,KAChL,OACI,MAAMI,EAA6B5I,EAASh1B,KAAKwC,KAAKrM,EAAOqS,sBAAwB,KAC/Eq1B,EAAuB79B,KAAKiB,IAAI,GAAO,EAAMjB,KAAKiB,IAAI28B,EAAqB,EAAK,IAAO,GAC7F,OAAO59B,KAAKiB,IAAI,GAAK,KAAQjB,KAAK2L,IAAI,EAAK6xB,GAAW,GAAMK,EAAe79B,KAAKoC,IAAI,EAAKo7B,IAC7F,QACI,MAAM,IAAIxmC,M,QAKb8mC,GAIT,WAAAhpC,GAHgBC,KAAagpC,cAAyB,GAC/ChpC,KAAiBipC,kBAAW,EAG/BjpC,KAAKojC,O,CAGT,KAAAA,GACIpjC,KAAKipC,kBAAoB,C,CAG7B,QAAAC,CAASn0B,EAAkB0yB,EAAqBC,GAC5C,IAAIyB,EACAnpC,KAAKgpC,cAActkC,QAAU1E,KAAKipC,mBAClCE,EAAe,IAAI7B,GACnBtnC,KAAKgpC,cAAchpC,KAAKipC,mBAAqBE,GAE7CA,EAAenpC,KAAKgpC,cAAchpC,KAAKipC,mBAE3CjpC,KAAKipC,oBACLE,EAAap0B,KAAOA,EACpBo0B,EAAajlC,IAAIujC,EAAaC,E,CAG3B,YAAArE,GACH,MAAM+F,EAAqB,GAC3B,IAAK,IAAIz+B,EAAY,EAAGA,EAAI3K,KAAKipC,kBAAmBt+B,IAAK,CACrD,MAAMs7B,EAA4BjmC,KAAKgpC,cAAcr+B,GACrDy+B,EAAYv+B,KAAK,CACbkK,KAAQ3T,EAAO4S,gBAAgBiyB,EAAMlxB,MACrC4K,SAAY1U,KAAKe,MAAsB,IAAhBi6B,EAAM0B,SAAiB,IAC9C/nB,WAAc3U,KAAKe,MAA8B,IAAxBi6B,EAAM+B,iBAA2B,KAEjE,CACD,OAAOoB,C,CAGJ,cAAA9E,CAAe+E,GAElB,GADArpC,KAAKgpC,cAActkC,OAAS,EACxB2kC,EACA,IAAK,MAAMtE,KAAesE,EAAc,CACpC,MAAMpD,EAA4B,IAAIqB,GACtCrB,EAAMlxB,KAAO3T,EAAO4S,gBAAgBinB,QAAQ8J,EAAkB,OACtC,GAAfkB,EAAMlxB,OAAYkxB,EAAMlxB,KAAI,GACNmI,MAA3B6nB,EAAsB,SACtBkB,EAAMsB,KAAOD,GAAmBS,6BAA6BhD,EAAsB,UAEnFkB,EAAMsB,KAAO,EAEgBrqB,MAA7B6nB,EAAwB,WACxBkB,EAAMuB,KAAOF,GAAmBe,qCAAqCtD,EAAwB,YAE7FkB,EAAMuB,KAAOpmC,EAAOyS,iBAExB7T,KAAKgpC,cAAcn+B,KAAKo7B,EAC3B,CAELjmC,KAAKipC,kBAAoBjpC,KAAKgpC,cAActkC,M,CAIzC,sBAAO4kC,CAAgBC,EAAyBC,GACnD,GAAID,EAAQN,mBAAqBO,EAAQP,kBACrC,OAAO,EACX,IAAK,IAAIt+B,EAAY,EAAGA,EAAI4+B,EAAQN,kBAAmBt+B,IACnD,GAAI4+B,EAAQP,cAAcr+B,GAAGoK,MAAQy0B,EAAQR,cAAcr+B,GAAGoK,KAC1D,OAAO,EAEf,OAAO,C,CAIJ,kBAAO00B,CAAYF,EAAyBC,EAAyBE,GAExE,IAAIC,EAA+B,IAAIZ,GAGvC,GAAe,MAAXQ,EACA,OAAOA,EAEX,GAAe,MAAXC,EACA,OAAOA,EAMX,GAHAE,EAAMz+B,KAAK2L,IAAI,EAAG3L,KAAKoC,IAAI,EAAGq8B,IAG1B1pC,KAAKspC,gBAAgBC,EAASC,GAAU,CACxC,IAAK,IAAI7+B,EAAY,EAAGA,EAAI4+B,EAAQN,kBAAmBt+B,IACnDg/B,EAAaX,cAAcr+B,GAAK,IAAI28B,GACpCqC,EAAaX,cAAcr+B,GAAGoK,KAAOw0B,EAAQP,cAAcr+B,GAAGoK,KAC9D40B,EAAaX,cAAcr+B,GAAG48B,KAAOgC,EAAQP,cAAcr+B,GAAG48B,MAAQiC,EAAQR,cAAcr+B,GAAG48B,KAAOgC,EAAQP,cAAcr+B,GAAG48B,MAAQmC,EACvIC,EAAaX,cAAcr+B,GAAG68B,KAAO+B,EAAQP,cAAcr+B,GAAG68B,MAAQgC,EAAQR,cAAcr+B,GAAG68B,KAAO+B,EAAQP,cAAcr+B,GAAG68B,MAAQkC,EAK3I,OAFAC,EAAaV,kBAAoBM,EAAQN,kBAElCU,CACV,CAGG,OAAQD,GAAO,EAAKF,EAAUD,C,CA+C/B,qBAAAK,CAAsBC,EAA6BC,EAAgCC,GACtF/pC,KAAKojC,QAEL,MAEM4G,EAAoE,EAAnC/+B,KAAKgR,KAAKguB,MAK3CC,EAAqBJ,EAAyB,EAC9CK,EAAiD,GAA1BL,EACvBM,EAA+CC,IAAvBR,EACxBS,EAAoC,GAAdP,EAAUh1B,MAA4C,GAAdg1B,EAAUh1B,MAAkE,GAApCg1B,EAAUh1B,MAAqE,GAAvCg1B,EAAUh1B,KAExJw1B,EAA6B,KAC7BC,EAbkC,IAaWv/B,KAAKiB,IAAI,EAA6D,IAAvD29B,EAAmB,KAC/EY,EAAwBx/B,KAAKoC,IAAI28B,EAAwB,EAAI/+B,KAAK2C,GAAK48B,EAAWD,GAExF,GAAkB,GAAdR,EAAUh1B,OAA8Bm1B,GAAYE,QAEjD,GAAID,EAAY,CAMnB,MAAMO,EAAuB,IACvBC,EAAwBF,EAAgBx/B,KAAKiB,IAAI,EAAKw+B,GAEtDE,EAAmBL,GADKI,GAAiB,EAAMA,EAAgB1/B,KAAK2C,MACX,EAAM3C,KAAK2C,IACpE65B,EAAsBH,GAAmBS,6BAA6B6C,GACtEC,EAAkBvD,GAAmBM,sBAAsBH,GAC3DqD,EAAuB,EAAM7/B,KAAK2C,GAAKi9B,EAAUN,EAEjDQ,EAAmC,IAAI3P,GAC7C2P,EAAajP,0BAA0B2O,GACvC,MAAM7oC,EAA8B,IAAIm7B,GACxCn7B,EAASu7B,QAAQ4N,EAAcD,GAC/B,MAAME,EAAuCppC,EAASo8B,YAEtD,IAAIiN,EAAkBhgC,KAAKwC,KAAKu9B,GAEhCC,EAAqD,KAA1BA,EAAUP,GAA1BA,EAEPJ,IAAWW,EAAUhgC,KAAKoC,IAAI49B,GAAU,IAC5C,MAAMC,EAAwBjgC,KAAKiB,IAAI,EAAK++B,GACtCvD,EAAsBJ,GAAmBe,qCAAqC6C,GAEpFlrC,KAAKkpC,SAAQ,EAAqBzB,EAAaC,EAClD,KAAM,CACH,MAAMyD,EAAuB,IAAO,EA7CC,IA6CgClgC,KAAKc,KAAKd,KAAK2L,IAAI,EAAKkzB,EAAyB,GAAI,IACpHsB,EAAuB,GAAMD,EAI7BE,EAAwBZ,GADAA,GADJA,GADC,EAAMx/B,KAAK2C,GAlDF,IAkDiC28B,GAEVt/B,KAAKiB,IAAIk/B,EAAc,IAAO,GAC1BX,GAAiBW,EAChF,IAAIR,EAEAA,EADAN,EACWC,EAAqBt/B,KAAKoC,IAAIg+B,EAAeZ,EAAgBx/B,KAAKiB,IAAI,EAAG,OAAU,EAAMjB,KAAK2C,IAE9F28B,EAAqBc,GAAiB,EAAMpgC,KAAK2C,IAEhE,MAAM65B,EAAsBH,GAAmBS,6BAA6B6C,GAE5E,IAAIU,EACJ,GAAIhB,EACAgB,EAAmBH,MAChB,CACH,MAAMJ,EAAmC,IAAI3P,GAC7C2P,EAAatO,0BAA0BgO,EAAeU,GACtD,MAAMvpC,EAA8B,IAAIm7B,GACxCn7B,EAASu7B,QAAQ4N,EAAcM,GAC/BC,EAAmB1pC,EAASo8B,WAC/B,CACIkM,IAAUoB,EAAmBrgC,KAAKoC,IAAIi+B,EAAkBrgC,KAAKc,KAAK,MACvE,MAAM27B,EAAsBJ,GAAmBe,qCAAqCiD,GAEpFtrC,KAAKkpC,SAAQ,EAAqBzB,EAAaC,EAClD,CAGD1nC,KAAKgpC,cAActkC,OAAS1E,KAAKipC,iB,CAI9B,6BAAAsC,CAA8B1B,EAA6BC,EAAgC0B,GAA2B,GACzHxrC,KAAKojC,QAEL,MAEM4G,EAAoE,EAAnC/+B,KAAKgR,KAAKguB,MAK3CE,EAAiD,GAA1BL,GAA+B0B,EACtDjB,EAA6B,KAC7BC,EATkC,IASWv/B,KAAKiB,IAAI,EAA6D,IAAvD29B,EAAmB,KAC/EY,EAAwBx/B,KAAKoC,IAAI28B,EAAwB,EAAI/+B,KAAK2C,GAAK48B,EAAWD,GAExF,GAAIJ,EAAY,CAMZ,MAAMO,EAAuB,IACvBC,EAAwBF,EAAgBx/B,KAAKiB,IAAI,EAAKw+B,GAEtDE,EAAmBL,GADKI,GAAiB,EAAMA,EAAgB1/B,KAAK2C,MACX,EAAM3C,KAAK2C,IACpE65B,EAAsBH,GAAmBS,6BAA6B6C,GACtEC,EAAkBvD,GAAmBM,sBAAsBH,GAC3DqD,EAAuB,EAAM7/B,KAAK2C,GAAKi9B,EAAUN,EAEjDQ,EAAmC,IAAI3P,GAC7C2P,EAAajP,0BAA0B2O,GACvC,MAAM7oC,EAA8B,IAAIm7B,GACxCn7B,EAASu7B,QAAQ4N,EAAcD,GAC/B,MAAME,EAAuCppC,EAASo8B,YAEtD,IAAIiN,EAAkBhgC,KAAKwC,KAAKu9B,GAEhCC,EAAqD,KAA1BA,EAAUP,GAA1BA,EACX,MAAMQ,EAAwBjgC,KAAKiB,IAAI,EAAK++B,GACtCvD,EAAsBJ,GAAmBe,qCAAqC6C,GAEpFlrC,KAAKkpC,SAAQ,EAAqBzB,EAAaC,EAClD,KAAM,CACH,MAAMyD,EAAuB,IAAO,EArCC,IAqCgClgC,KAAKc,KAAKd,KAAK2L,IAAI,EAAKkzB,EAAyB,GAAI,IACpHsB,EAAuB,GAAMD,EAI7BE,EAAwBZ,GADAA,GADJA,GADC,EAAMx/B,KAAK2C,GA1CF,IA0CiC28B,GAEVt/B,KAAKiB,IAAIk/B,EAAc,IAAO,GAC1BX,GAAiBW,EAChF,IAAIR,EAEJA,EAAWL,EAAqBc,GAAiB,EAAMpgC,KAAK2C,IAC5D,MAAM65B,EAAsBH,GAAmBO,sBAAsB+C,GAErE,IAAIU,EAEJ,MAAMP,EAAmC,IAAI3P,GAC7C2P,EAAatO,0BAA0BgO,EAAeU,GACtD,MAAMvpC,EAA8B,IAAIm7B,GACxCn7B,EAASu7B,QAAQ4N,EAAcM,GAC/BC,EAAmB1pC,EAASo8B,YAC5B,MAAM0J,EAAsBJ,GAAmBe,qCAAqCiD,GAEpFtrC,KAAKkpC,SAAQ,EAAqBzB,EAAaC,EAClD,C,QAKI+D,GAKT,WAAA1rC,GAJOC,KAAMugB,OAAW,EACjBvgB,KAAK4E,MAAW,EAChB5E,KAAQwgB,SAAW,EAGtBxgB,KAAKojC,O,CAGT,KAAAA,GACIpjC,KAAKugB,OAAS,EACdvgB,KAAK4E,MAAQ,EACb5E,KAAKwgB,SAAW,C,CAGb,YAAA6iB,GACH,MAAMqI,EAAsB,CACxBnrB,OAAUnf,EAAOoa,4BAA4Bxb,KAAKugB,QAAQlc,KAC1Dmc,SAAYpf,EAAO4W,UAAUhY,KAAKwgB,UAAUnc,MAKhD,OAHIjD,EAAOoa,4BAA4Bxb,KAAKugB,QAAQ1E,SAAW,IAC3D6vB,EAAsB,MAAI1rC,KAAK4E,OAE5B8mC,C,CAGJ,cAAApH,CAAeoH,GAClB1rC,KAAKojC,QAEL,IAAI7iB,EAA2Bnf,EAAOoa,4BAA4B1W,WAAW4mC,EAAuB,QACtF,MAAVnrB,IAAgBA,EAASnf,EAAOoa,4BAA4B1W,WAAuB,YACvF9E,KAAKugB,OAASA,EAAO3b,MAErB,IAAI4b,EAAqBpf,EAAO4W,UAAUlT,WAAW4mC,EAAyB,UAC9D,MAAZlrB,IAAkBA,EAAWpf,EAAO4W,UAAUlT,WAAiB,MACnE9E,KAAKwgB,SAAWA,EAAS5b,MAEMsY,MAA3BwuB,EAAsB,MACtB1rC,KAAK4E,MAAQw6B,GAAM,EAAGh+B,EAAOoa,4BAA4Bxb,KAAKugB,QAAQ1E,SAAoC,EAA1B6vB,EAAsB,OAEtG1rC,KAAK4E,MAAQ,C,QAiBZ+mC,GAkFT,WAAA5rC,CAAYykC,EAAyBlB,GAEjC,GAnFGtjC,KAAA+U,KAA2C,EAC3C/U,KAAMqe,OAAW,EACjBre,KAAQmB,SAAW,EAEtBnB,KAA2B4rC,6BAAY,EACvC5rC,KAAiB6rC,kBAAW,EAC5B7rC,KAAA8rC,gBAAkB1qC,EAAOK,gBAAgBzB,KAAKmB,UAAUiB,QAAQsC,OAAS,EACzE1E,KAAgB+rC,iBAAW,EAC3B/rC,KAAqBgsC,uBAAY,EAC1BhsC,KAAmBisC,oBAAW,EAElCjsC,KAASksC,UAAW,EACpBlsC,KAAAsf,SAA2B,IAAIypB,GAC/B/oC,KAAY2hB,cAAY,EACxB3hB,KAAAmsC,kBAA4B/qC,EAAO8S,qBAAuB,EAC1DlU,KAAkBosC,mBAAW,EAC7BpsC,KAAA2gB,WAA6B,IAAIooB,GACjC/oC,KAAc2iB,gBAAY,EAC1B3iB,KAAAqsC,oBAA8BjrC,EAAO8S,qBAAuB,EAC5DlU,KAAoBssC,qBAAW,EAC/BtsC,KAAYusC,aAA8B,GAC1CvsC,KAAcwsC,eAA8B,GAK5CxsC,KAASgY,UAAuB,GAChChY,KAAMysC,OAAW,EACjBzsC,KAAA0sC,QAAkBtrC,EAAOkT,eACzBtU,KAAa2sC,cAAW,EACxB3sC,KAAUuf,WAAWne,EAAOoT,YAAY1P,WAAmB,OAAEF,MAC7D5E,KAAU4sC,WAAW,EACrB5sC,KAAM6sC,OAAW,EACjB7sC,KAAO6f,QAAW,EAClB7f,KAAQghB,SAAW,EACnBhhB,KAAYmiB,aAAW,EACvBniB,KAAYqiB,aAAW,GACvBriB,KAAYoiB,aAAW,EACvBpiB,KAAWsiB,YAAW,EACtBtiB,KAAM0f,OAAW,EACjB1f,KAAO+O,QAAW,EAClB/O,KAAKyf,MAAW,EAChBzf,KAAM0hB,OAAW,EACjB1hB,KAAAuiB,IAAcnhB,EAAO2U,UACrB/V,KAAQwiB,SAAW,GACnBxiB,KAAaiiB,cAAW,GACxBjiB,KAAcgiB,gBAAY,EAC1BhiB,KAAa8sC,eAAY,EACzB9sC,KAAmB+hB,qBAAY,EAC/B/hB,KAAO+sC,SAAY,EACnB/sC,KAAAohB,WAAqBhgB,EAAO6X,gBAC5BjZ,KAAa8gB,cAAW,GACxB9gB,KAAUmhB,WAAW,EACrBnhB,KAAcgtC,eAAW,EACzBhtC,KAAsBkhB,uBAAW,EACjClhB,KAAMqhB,OAAW,EACjBrhB,KAAM4gB,OAAW,EACjB5gB,KAAW+iB,YAAW,EACtB/iB,KAASitC,UAAW,EACpBjtC,KAASkgB,UAAW,EACpBlgB,KAAYmgB,aAAW,EACvBngB,KAAYktC,aAAW,EACvBltC,KAAemtC,gBAAW,EAC1BntC,KAAAotC,gBAAmC,IAAIhI,GACvCplC,KAAAqtC,mBAAqC,IAAI7H,GACzCxlC,KAAiBogB,kBAAW,EAC5BpgB,KAAOstC,QAAW,EAClBttC,KAAWutC,YAAW,EACtBvtC,KAAOwtC,QAAW,EAClBxtC,KAAAygB,eAA+B,IAAI3V,aAAa,IAChD9K,KAAAyiB,uBAAuC,IAAI3X,aAAa,IAC/C9K,KAASqgB,UAAe,GAExBrgB,KAAAytC,cAA+B,IAAI7G,GACnC5mC,KAAgB0tC,iBAAa,GAC7B1tC,KAAoB2tC,qBAAmB,GAChD3tC,KAAWknB,YAAa,GACxBlnB,KAAc4tC,eAAa,GAC3B5tC,KAAUwc,WAAa,GACvBxc,KAAc2jC,eAAa,GAC3B3jC,KAAiB6tC,kBAAc,GAG9BvK,EACA,IAAK,IAAIE,EAAc,EAAGA,EAAMpiC,EAAOwY,SAAU4pB,IAC7CxjC,KAAKknB,YAAYrc,KAAK,GACtB7K,KAAK4tC,eAAe/iC,KAAK,GACzB7K,KAAKwc,WAAW3R,KAAKzJ,EAAOob,WAAW1X,WAAiB,KAAEF,OAIlE5E,KAAK8tC,aAAe,IAAIpI,GAAalB,GACrC,IAAK,IAAI75B,EAAY,EAAGA,EAAIvJ,EAAO+V,cAAc,EAAGxM,IAChD3K,KAAKqgB,UAAU1V,GAAK,IAAIu6B,GAASv6B,GAErC,IAAK,IAAIA,EAAY,EAAGA,EAAIvJ,EAAOsY,UAAW/O,IAC1C3K,KAAK0tC,iBAAiB/iC,GAAKvJ,EAAO4W,UAAUlT,WAAW,WAAWF,MAClE5E,KAAK2tC,qBAAqBhjC,GAAK,IAAI+6B,IAAa,GAGpD,IAAK,IAAI/6B,EAAI,EAAGA,EAAI,GAAIA,IACpB3K,KAAKygB,eAAe9V,GAAK,GAAKM,KAAKmhB,MAAO,IAADzhB,GAG7C,IAAID,EAAc,EAClB,IAAK,IAAIC,EAAY,EAAGA,EAAI3K,KAAKygB,eAAe/b,OAAQiG,IACpDD,GAAO1K,KAAKygB,eAAe9V,GAE/B,MAAMC,EAAkBF,EAAM1K,KAAKygB,eAAe/b,OAGlD,IAAI0G,EAAqB,EACrB2iC,EAAmB,EACvB,IAAK,IAAIpjC,EAAY,EAAGA,EAAI3K,KAAKygB,eAAe/b,OAAQiG,IACpDS,GAAc2iC,EACdA,EAAW/tC,KAAKygB,eAAe9V,GAAKC,EACpC5K,KAAKyiB,uBAAuB9X,GAAKS,EAIrCpL,KAAKyiB,uBAAuB,IAAM,C,CAI/B,eAAAurB,CAAgBj5B,EAAsByvB,EAAyBlB,GAE9DA,IAAcvuB,EAAI,GACtB/U,KAAK+U,KAAOA,EACZ/U,KAAKqe,OAAStJ,EACd/U,KAAK0hB,OAAS,EACd1hB,KAAK+O,QAAO,EACZ/O,KAAKqhB,OAASjgB,EAAO8U,YAAc,EACnClW,KAAK4gB,OAAS,EACd5gB,KAAK+iB,YAAc9X,KAAKmhB,MAAsC,IAA/BhrB,EAAOyP,iBAAmB,IACzD7Q,KAAKitC,UAAYhiC,KAAKmhB,MAAoC,IAA7BhrB,EAAOuP,eAAiB,IACrD3Q,KAAKsf,SAAS8jB,QACdpjC,KAAK2hB,cAAe,EACpB3hB,KAAKmsC,kBAAoB/qC,EAAO8S,qBAAuB,EACvDlU,KAAKosC,mBAAqB,EAC1B,IAAK,IAAIzhC,EAAY,EAAGA,EAAIvJ,EAAO6S,iBAAkBtJ,IACjD3K,KAAKusC,aAAa5hC,GAAK,KACvB3K,KAAKwsC,eAAe7hC,GAAK,KAwB7B,OAtBA3K,KAAK2gB,WAAWyiB,QAChBpjC,KAAK2iB,gBAAiB,EACtB3iB,KAAKqsC,oBAAsBjrC,EAAO8S,qBAAuB,EACzDlU,KAAKssC,qBAAuB,EAC5BtsC,KAAKmhB,WAAalW,KAAKmhB,MAAqC,KAA9BhrB,EAAO4Z,gBAAkB,IACvDhb,KAAKgtC,eAAiB/hC,KAAKmhB,MAAyC,IAAlChrB,EAAO+Z,oBAAsB,IAC/Dnb,KAAKkhB,uBAAyBjW,KAAKmhB,MAAiD,IAA1ChrB,EAAOia,4BAA8B,IAC/Erb,KAAKuiB,IAAMnhB,EAAO2U,UAClB/V,KAAKwiB,SAAW,GAChBxiB,KAAK4sC,WAAaxrC,EAAO+Y,iBACzBna,KAAK6sC,OAASzrC,EAAOgZ,aACrBpa,KAAK6f,QAAU,EACf7f,KAAK0f,OAAS,EACd1f,KAAK8gB,cAAgB,GACrB9gB,KAAK+hB,qBAAsB,EAC3B/hB,KAAKiiB,cAAgB,GACrBjiB,KAAK8sC,eAAgB,EACrB9sC,KAAK+sC,SAAU,EACf/sC,KAAKysC,OAAS,EACdzsC,KAAK0sC,QAAUtrC,EAAOkT,eACtBtU,KAAKuf,WAAane,EAAOoT,YAAY1P,WAAmB,OAAEF,MAC1D5E,KAAK2sC,cAAgB,EACb53B,GACJ,OACI/U,KAAKmB,SAAW,EAEhBnB,KAAKyf,MAAQre,EAAOyV,OAAO/R,WAAqB,SAAEF,MAE9C5E,KAAK4rC,6BAA8B,EACnC5rC,KAAK6rC,kBAAoB,EACzB7rC,KAAK8rC,gBAAkB1qC,EAAOK,gBAAgBzB,KAAKmB,UAAUiB,QAAQsC,OAAS,EAC9E1E,KAAK+rC,iBAAmB,EACxB/rC,KAAKgsC,uBAAwB,EAC7BhsC,KAAKisC,oBAAsB,EAE/B,MACJ,OACIjsC,KAAKmB,SAAW,EAChBnB,KAAKyf,MAAQre,EAAOyV,OAAO/R,WAAqB,SAAEF,MAClD,IAAK,IAAI+F,EAAY,EAAGA,EAAI,GAAIA,IAC5B3K,KAAKygB,eAAe9V,GAAK,GAAMM,KAAKmhB,MAAO,IAADzhB,GAG9C,IAAID,EAAc,EAClB,IAAK,IAAIC,EAAY,EAAGA,EAAI3K,KAAKygB,eAAe/b,OAAQiG,IACpDD,GAAO1K,KAAKygB,eAAe9V,GAE/B,MAAMC,EAAkBF,EAAM1K,KAAKygB,eAAe/b,OAGlD,IAAI0G,EAAqB,EACrB2iC,EAAmB,EACvB,IAAK,IAAIpjC,EAAY,EAAGA,EAAI3K,KAAKygB,eAAe/b,OAAQiG,IACpDS,GAAc2iC,EACdA,EAAW/tC,KAAKygB,eAAe9V,GAAKC,EACpC5K,KAAKyiB,uBAAuB9X,GAAKS,EAGrCpL,KAAKyiB,uBAAuB,IAAM,EAClC,MACJ,OACIziB,KAAKyf,MAAQre,EAAOyV,OAAO/R,WAAW,mBAAmBF,MACzD5E,KAAKkgB,UAAY,EACjBlgB,KAAKmgB,aAAe,EACpBngB,KAAKogB,kBAAoB,EACzB,IAAK,IAAIzV,EAAY,EAAGA,EAAI3K,KAAKqgB,UAAU3b,OAAQiG,IAC/C3K,KAAKqgB,UAAU1V,GAAGy4B,MAAMz4B,GAE5B,MACJ,QACI3K,KAAKuf,WAAa,EAClBvf,KAAK6f,QAAU,EACf7f,KAAK+O,QAAU,EACf/O,KAAKyf,MAAQ,EACbzf,KAAKkgB,UAAY,EACjBlgB,KAAKmgB,aAAe,EACpBngB,KAAKktC,aAAe,EACpBltC,KAAKmtC,gBAAkB,EACvBntC,KAAKotC,gBAAgB/H,WAAW,GAChCrlC,KAAKogB,kBAAoB,EACzB,IAAK,IAAIzV,EAAY,EAAGA,EAAI3K,KAAKqgB,UAAU3b,OAAQiG,IAC/C3K,KAAKqgB,UAAU1V,GAAGy4B,MAAMz4B,GAE5B,MACJ,OACI3K,KAAKksC,UAAY,EACjBlsC,KAAKyf,MAAQre,EAAOyV,OAAO/R,WAAqB,SAAEF,MAClD,MACJ,OACI5E,KAAKyf,MAAQre,EAAOyV,OAAO/R,WAAyB,aAAEF,MACtD5E,KAAK8tC,aAAa1K,MAAMoB,GACxB,MACJ,OACIxkC,KAAKyf,MAAQre,EAAOyV,OAAO/R,WAAyB,aAAEF,MACtD,IAAK,IAAI+F,EAAY,EAAGA,EAAIvJ,EAAOsY,UAAW/O,IAC1C3K,KAAK0tC,iBAAiB/iC,GAAKvJ,EAAO4W,UAAUlT,WAAW,WAAWF,MAC9BsY,MAAhCld,KAAK2tC,qBAAqBhjC,KAC1B3K,KAAK2tC,qBAAqBhjC,GAAK,IAAI+6B,IAAa,IAEpD1lC,KAAK2tC,qBAAqBhjC,GAAGy4B,MAAMoB,GAEvC,MACJ,OACIxkC,KAAKyf,MAAQre,EAAOyV,OAAO/R,WAAyB,aAAEF,MACtD5E,KAAKytC,cAAcrK,QACnB,MACJ,OACIpjC,KAAKyf,MAAQre,EAAOyV,OAAO/R,WAAqB,SAAEF,MAClD5E,KAAKohB,WAAahgB,EAAO6X,gBACzB,MACJ,OACIjZ,KAAKyf,MAAQre,EAAOyV,OAAO/R,WAAkB,MAAEF,MAC/C5E,KAAKytC,cAAcrK,QACnB,MACJ,OACIpjC,KAAKuf,WAAa,EAClBvf,KAAK6f,QAAU,EACf7f,KAAKghB,SAAW,EAChBhhB,KAAK+O,QAAU,EACf/O,KAAKyf,MAAQ,EACbzf,KAAKknB,YAAc,GACnBlnB,KAAK4tC,eAAiB,GACtB5tC,KAAKwc,WAAa,GAClB,IAAK,IAAIgnB,EAAc,EAAGA,EAAMpiC,EAAOwY,SAAU4pB,IAC7CxjC,KAAKknB,YAAYrc,MAAM,GACvB7K,KAAK4tC,eAAe/iC,KAAK,GACzB7K,KAAKwc,WAAW3R,KAAKzJ,EAAOob,WAAW1X,WAAiB,KAAEF,OAC1D5E,KAAK6tC,kBAAkBrK,IAAO,EAC9BxjC,KAAK2jC,eAAeH,GAAO,EAE/B,MACJ,QACI,MAAM,IAAIvhC,MAAM,iCAAmC8S,GAKvD/U,KAAKyf,OAASre,EAAOyV,OAAO/R,WAAyB,aAAEF,QAEvD5E,KAAK+O,QAAuB,KAAZ/O,KAAK+O,Q,CAKtB,qBAAA66B,CAAsBqE,EAAgCC,GACzD,IAAIrE,EAA0CoE,EAAeE,aACzDrE,EAA6CmE,EAAejuB,gBAC5DouB,EAAwCH,EAAehuB,eACvDouB,EAAuCJ,EAAe1sB,cACtD+sB,EAAkDL,EAAeM,kBACjEC,EAA0CP,EAAevtB,iBAGlCxD,MAAvB2sB,IAAkCA,EAAuD,GAAhC7pC,KAAK+U,KAA+B,EAAI,IACvEmI,MAA1B4sB,IAAqCA,EAAyB,GAC3C5sB,MAAnBkxB,IAA8BA,EAAkBhtC,EAAO4W,UAAUlT,WAAiB,MAChEoY,MAAlBmxB,IAA6BA,EAAiBjtC,EAAO4W,UAAUlT,WAAqB,GAAT9E,KAAK+U,KAA8B,UAAY,SAC/FmI,MAA3BoxB,IAAsCA,EAA0B,CAACltC,EAAO4W,UAAUlT,WAA0C,GAA9B9E,KAAK+U,KAA6B,YAAc,QAAS3T,EAAO4W,UAAUlT,WAAiB,KAAG1D,EAAO4W,UAAUlT,WAAiB,KAAG1D,EAAO4W,UAAUlT,WAAiB,OAC9OoY,MAArBsxB,IAAgCA,EAAoBptC,EAAO4W,UAAUlT,WAAiB,MAIrCulC,IAAvBR,GAC+B,GAA1CuE,EAAgBr5B,OAA4Bq5B,EAAkBhtC,EAAO4W,UAAUlT,WAAiB,MAEnH,MAAMwS,EAAuBlW,EAAOiW,WAAWrX,KAAKkgB,WAAW5I,aAC/D,IAAIm3B,GAA0C,EAC1CC,GAA2C,EAC3CC,EAA8D,GAApBP,EAAgBr5B,MAAsD,GAAnBs5B,EAAet5B,KAChH,GAAa,GAAT/U,KAAK+U,KAA2B,CAChC45B,EAAgCA,GAAiF,GAA/CH,EAAkBz5B,KACpF,IAAK,IAAIpK,EAAY,EAAGA,EAAI2jC,EAAwB5pC,OAAQiG,IACpDA,EAAI2M,EAC+B,GAA/Bg3B,EAAwB3jC,GAAGoK,KAC3B25B,GAAkC,EAElCD,GAAiC,EAGrCE,EAAgCA,GAA0F,GAAxDL,EAAwB3jC,GAAGoK,IAGxG,CAED/U,KAAK2sC,cAAgB,EAER,GAAT3sC,KAAK+U,OACD25B,GAAmCC,EACnC3uC,KAAK4uC,YAAYxtC,EAAOoa,4BAA4B1W,WAAuB,WAAEF,MAAO,EAAGxD,EAAO4W,UAAUlT,WAAW,aAAaF,OACzH6pC,IAAmCE,GAC1C3uC,KAAK4uC,YAAYxtC,EAAOoa,4BAA4B1W,WAAiB,KAAEF,MAAO,EAAGxD,EAAO4W,UAAUlT,WAAW,aAAaF,QAI1G,GAApBwpC,EAAgBr5B,MAChB/U,KAAK2gB,WAAWyiB,QAChBpjC,KAAK2iB,gBAAiB,EACtB3iB,KAAKsf,SAASsqB,sBAAsBC,EAAqBC,EAAwBsE,GACjFpuC,KAAK+O,UAAW,IACZm/B,GAAqBluC,KAAK2hB,gBAC1B3hB,KAAK2hB,cAAe,EACpB3hB,KAAKmsC,kBAAoBtC,EACzB7pC,KAAKosC,mBAAqBtC,KAG9B9pC,KAAKsf,SAAS8jB,QAEdpjC,KAAK2hB,cAAe,EACpB3hB,KAAK2iB,gBAAiB,EACtB3iB,KAAK2gB,WAAWipB,sBAAsBC,EAAqBC,EAAwBsE,GACnFpuC,KAAK+O,SAAW,GAChB/O,KAAK4uC,YAAYxtC,EAAOoa,4BAA4B1W,WAA+B,mBAAEF,MAAO,EAAGwpC,EAAgBxpC,QAC3GspC,GAAqBluC,KAAK2iB,kBAC1B3iB,KAAK2iB,gBAAiB,EACtB3iB,KAAKqsC,oBAAsBxC,EAC3B7pC,KAAKssC,qBAAuBxC,IAIb,GAAnBuE,EAAet5B,MACf/U,KAAK4uC,YAAYxtC,EAAOoa,4BAA4B1W,WAAuB,WAAEF,MAAO,EAAGypC,EAAezpC,OAG1G,IAAK,IAAI+F,EAAY,EAAGA,EAAI2jC,EAAwB5pC,OAAQiG,IACpDA,EAAI2M,GAAgBo3B,GACW,GAA/BJ,EAAwB3jC,GAAGoK,MAC3B/U,KAAK4uC,YAAYxtC,EAAOoa,4BAA4B1W,WAA8B,kBAAEF,MAAO+F,EAAG2jC,EAAwB3jC,GAAG/F,OAIvG,GAAtB4pC,EAAkBz5B,MAClB/U,KAAK4uC,YAAYxtC,EAAOoa,4BAA4B1W,WAA8B,kBAAEF,MAAO,EAAG4pC,EAAkB5pC,M,CAIjH,YAAAy+B,GACH,MAAMwL,EAAwB,CAC1B95B,KAAQ3T,EAAO8Q,oBAAoBlS,KAAK+U,MACxC2M,OAAU1hB,KAAK0hB,OACfpC,SAAYtf,KAAKsf,SAAS+jB,eAC1B1hB,aAAgB3hB,KAAK2hB,aACrBC,YAAe5hB,KAAKmsC,kBACpBtqB,aAAgB7hB,KAAKosC,oBAGrBpsC,KAAKqe,QAAUre,KAAK+U,OACpB85B,EAAyB,OAAI7uC,KAAKqe,QAGtC,IAAK,IAAI1T,EAAY,EAAGA,EAAIvJ,EAAO6S,iBAAkBtJ,IACrB,MAAxB3K,KAAKusC,aAAa5hC,KAClBkkC,EAAiB,eAAiBlkC,GAAK3K,KAAKusC,aAAa5hC,GAAI04B,gBAGrE,MAAMt0B,EAAoB,GAC1B,IAAK,MAAM+M,KAAU1a,EAAOuU,YACpB3V,KAAK+O,QAAW,GAAK+M,GACrB/M,EAAQlE,KAAKzJ,EAAOsU,YAAYoG,IAmCxC,GAhCA+yB,EAA0B,QAAI9/B,EAG1BD,EAAyB9O,KAAK+O,WAC9B8/B,EAA6B,WAAIztC,EAAOoT,YAAYxU,KAAKuf,YAAYlb,KACrEwqC,EAAsC,oBAAI7uC,KAAK+hB,qBAE/C/S,EAAoBhP,KAAK+O,WACzB8/B,EAAwB,MAAI7uC,KAAK8uC,WAAWzqC,KAC5CwqC,EAAiC,eAAI7uC,KAAKgiB,eAC1C6sB,EAAgC,cAAI7uC,KAAKiiB,eAEzChT,EAAyBjP,KAAK+O,WAC9B8/B,EAAsC,oBAAI7uC,KAAK4sC,YAE/C19B,EAAqBlP,KAAK+O,WAC1B8/B,EAA8B,YAAI9I,GAAMgJ,cAAc/uC,KAAK6sC,SAE3D19B,EAAsBnP,KAAK+O,YACN,GAAjB/O,KAAK6f,UACL7f,KAAK6f,QAAU,GAEC,GAAhB7f,KAAK6f,QACLgvB,EAA0B,QAAIztC,EAAO0T,SAAS9U,KAAK6f,SAASxb,KAE5DwqC,EAA0B,QAAI,SAElCA,EAA+B,aAAI7uC,KAAKmiB,aACxC0sB,EAA+B,aAAI7uC,KAAKoiB,aACxCysB,EAA+B,aAAI7uC,KAAKqiB,aACxCwsB,EAA8B,YAAI7uC,KAAKsiB,aAEvClT,EAAyBpP,KAAK+O,SAAU,CACxC8/B,EAAiC,eAAI7uC,KAAK2iB,eAC1CksB,EAAgC,cAAI7uC,KAAKqsC,oBACzCwC,EAAiC,eAAI7uC,KAAKssC,qBAC1CuC,EAA6B,WAAI7uC,KAAK2gB,WAAW0iB,eAEjD,IAAK,IAAI14B,EAAY,EAAGA,EAAIvJ,EAAO6S,iBAAkBtJ,IACnB,MAA1B3K,KAAKwsC,eAAe7hC,KACpBkkC,EAAiB,iBAAmBlkC,GAAK3K,KAAKwsC,eAAe7hC,GAAI04B,eAE5E,CA6BD,GA5BIh0B,EAAyBrP,KAAK+O,WAC9B8/B,EAA6B,WAAI5jC,KAAKe,MAAM,IAAMhM,KAAKmhB,YAAc/f,EAAO4Z,gBAAkB,IAC9F6zB,EAA0B,QAAI7uC,KAAK+sC,SAEnCz9B,EAAyBtP,KAAK+O,WAC9B8/B,EAAmC,kBAAKztC,EAAO+Z,oBAAsB,EAAInb,KAAKgtC,gBAAkB5rC,EAAOga,qBACvGyzB,EAAyC,uBAAI5jC,KAAKe,MAAM,IAAMhM,KAAKkhB,wBAA0B9f,EAAOia,4BAA8B,KAElI9L,EAAsBvP,KAAK+O,WAC3B8/B,EAAsB,IAAI5jC,KAAKe,MAAM,KAAOhM,KAAKuiB,IAAMnhB,EAAO2U,WAAa3U,EAAO2U,WAClF84B,EAA2B,SAAI7uC,KAAKwiB,UAEpChT,EAAqBxP,KAAK+O,WAC1B8/B,EAAyB,OAAI5jC,KAAKe,MAAM,IAAMhM,KAAKqhB,QAAUjgB,EAAO8U,YAAc,KAElFzG,EAAmBzP,KAAK+O,WACxB8/B,EAA8B,YAAI5jC,KAAKe,MAAM,IAAMhM,KAAK+iB,aAAe3hB,EAAOyP,iBAAmB,IACjGg+B,EAAiC,eAAI5jC,KAAKe,MAAM,KAAQhM,KAAKitC,UAAY,GAAK7rC,EAAOwP,oBAAsBxP,EAAOyQ,aAAezQ,EAAOwQ,eAAiB,KAEzJlC,EAAqB1P,KAAK+O,WAC1B8/B,EAAyB,OAAI5jC,KAAKe,MAAM,IAAMhM,KAAK4gB,QAAUxf,EAAO8P,YAAc,KAGzE,GAATlR,KAAK+U,OACL85B,EAAgC,cAAI5jC,KAAKe,MAAM,IAAQ+5B,GAAMiJ,uBAAuBhvC,KAAKysC,SAAW,IACpGoC,EAA+B,aAAI9I,GAAMkJ,sBAAsBjvC,KAAK0sC,UAG3D,GAAT1sC,KAAK+U,MAA6C,GAAT/U,KAAK+U,KAAqC,CACnF85B,EAA4B,UAAI,GAChC,IAAK,IAAIlkC,EAAY,EAAGA,EAAIvJ,EAAOuX,uBAAwBhO,IACvDkkC,EAA4B,UAAElkC,GAAKM,KAAKe,MAAM,IAAMhM,KAAKytC,cAAc5sB,UAAUlW,GAAKvJ,EAAO2X,aAEpG,CAED,GAAa,GAAT/Y,KAAK+U,KACL85B,EAAuB,KAAIztC,EAAOqK,WAAWzL,KAAKksC,WAAW7nC,UAC1D,GAAa,GAATrE,KAAK+U,KAAiC,CAC7C85B,EAA2B,SAAI,GAC/B,IAAK,IAAIlkC,EAAY,EAAGA,EAAIvJ,EAAOmX,sBAAuB5N,IACtDkkC,EAA2B,SAAElkC,GAAKM,KAAKe,MAAM,IAAMhM,KAAK8tC,aAAaxsB,SAAS3W,GAAKvJ,EAAOsX,YAEjG,MAAM,GAAa,GAAT1Y,KAAK+U,KAAgC,CAC5C85B,EAAwB,MAAI,GAC5B,IAAK,IAAI5V,EAAY,EAAGA,EAAI73B,EAAOsY,UAAWuf,IAAK,CAC/C,MAAM3X,EAAqB,GAC3B,IAAK,IAAI3W,EAAY,EAAGA,EAAIvJ,EAAOmX,sBAAuB5N,IACtD2W,EAAS3W,GAAKM,KAAKe,MAAM,IAAMhM,KAAK2tC,qBAAqB1U,GAAG3X,SAAS3W,GAAKvJ,EAAOsX,aAErFm2B,EAAwB,MAAE5V,GAAK,CAC3BhZ,eAAkBjgB,KAAKkvC,mBAAmBjW,GAAG50B,KAC7Cid,SAAYA,EAEnB,CACJ,MAAM,GAAa,GAATthB,KAAK+U,KACZ85B,EAAuB,KAAIztC,EAAOC,UAAUrB,KAAKmB,UAAUkD,KAC3DwqC,EAAyB,OAAIztC,EAAOiU,QAAQrV,KAAK0f,QAAQrb,KAErDwqC,EAA8C,4BAAI7uC,KAAK4rC,4BACvDiD,EAAoC,kBAAI7uC,KAAK6rC,kBAC7CgD,EAAkC,gBAAI7uC,KAAK8rC,gBAC3C+C,EAAmC,iBAAI7uC,KAAK+rC,iBAC5C8C,EAAwC,sBAAI7uC,KAAKgsC,sBACjD6C,EAAsC,oBAAI7uC,KAAKisC,yBAEhD,GAAa,GAATjsC,KAAK+U,KACZ85B,EAA6B,WAAI7uC,KAAKohB,gBACnC,GAAa,GAATphB,KAAK+U,KACZ85B,EAAyB,OAAIztC,EAAOiU,QAAQrV,KAAK0f,QAAQrb,KACzDwqC,EAAgC,cAAI5jC,KAAKe,MAAM,IAAMhM,KAAK8gB,eAAiB1f,EAAO6Z,mBAAqB,SACpG,GAAa,GAATjb,KAAK+U,KACZ85B,EAAyB,OAAIztC,EAAOiU,QAAQrV,KAAK0f,QAAQrb,UACtD,GAAa,GAATrE,KAAK+U,MAAsC,IAAT/U,KAAK+U,KAA8B,CAC5E,MAAMo6B,EAA0B,GAChC,IAAK,MAAMC,KAAYpvC,KAAKqgB,UACxB8uB,EAActkC,KAAK,CACfyV,UAAalf,EAAOwW,oBAAoBw3B,EAAS9uB,WAAWjc,KAC5DqJ,UAAa0hC,EAAS1hC,UACtBuV,SAAY7hB,EAAO4a,cAAcozB,EAASnsB,UAAU5e,KACpD+c,WAAcguB,EAAShuB,aAG/B,GAAY,GAATphB,KAAK+U,KACJ85B,EAA4B,UAAIztC,EAAOiW,WAAWrX,KAAKkgB,WAAW7b,KAClEwqC,EAA+B,aAAIztC,EAAO8W,UAAUlY,KAAKmgB,cAAc9b,KACvEwqC,EAAoC,kBAAI7uC,KAAKogB,kBAC7CyuB,EAA4B,UAAIM,MAC7B,CAIH,GAHAN,EAA4B,UAAIztC,EAAOqW,cAAczX,KAAKktC,cAAc7oC,KACxEwqC,EAA+B,aAAIztC,EAAOgX,aAAapY,KAAKmtC,iBAAiB9oC,KAC7EwqC,EAAoC,kBAAI7uC,KAAKogB,kBACrB,GAArBpgB,KAAKktC,aAAkB,CACtB,MAAME,EAAuB,GAC7BA,EAAsB,KAAIptC,KAAKotC,gBAAgB51B,YAC/C41B,EAA8B,aAAIptC,KAAKotC,gBAAgB91B,aACvDu3B,EAAkC,gBAAIzB,CACzC,CACD,GAA2B,GAAxBptC,KAAKmtC,gBAAqB,CACzB,MAAMkC,EAAsB,GAC5BA,EAAqB,KAAIrvC,KAAKqtC,mBAAmBl1B,QACjD02B,EAAiC,eAAIQ,CACxC,CAEDR,EAA4B,UAAIM,CACnC,CACJ,MAAM,GAAa,GAATnvC,KAAK+U,KAAuC,CACnD85B,EAAuB,KAAIztC,EAAOC,UAAUrB,KAAKmB,UAAUkD,KAC3DwqC,EAAyB,OAAIztC,EAAOiU,QAAQrV,KAAK0f,QAAQrb,KACzDwqC,EAAiC,eAAI,IAAIS,aAAa,IACtDT,EAAyC,uBAAI,IAAIS,aAAa,IAC9D,IAAK,IAAI3kC,EAAY,EAAGA,EAAI3K,KAAKygB,eAAe/b,OAAQiG,IACpDkkC,EAAiC,eAAElkC,GAAK3K,KAAKygB,eAAe9V,EAInE,KAAM,IAAa,GAAT3K,KAAK+U,KAWZ,MAAM,IAAI9S,MAAM,gCAVhB4sC,EAA8B,YAAI,GAClCA,EAAiC,eAAI,GACrCA,EAA8B,YAAI,GAClCA,EAA8B,YAAI,GAClC,IAAK,IAAIrL,EAAc,EAAGA,EAAMpiC,EAAOwY,SAAU4pB,IAC7CqL,EAA8B,YAAErL,GAAOxjC,KAAKknB,YAAYsc,GACxDqL,EAAiC,eAAErL,GAAOxjC,KAAK4tC,eAAepK,GAC9DqL,EAA8B,YAAErL,GAAOxjC,KAAKwc,WAAWgnB,EAI9D,CAED,MAAMxrB,EAAmB,GACzB,IAAK,IAAIrN,EAAI,EAAGA,EAAI3K,KAAK2sC,cAAehiC,IACpCqN,EAAUnN,KAAK7K,KAAKgY,UAAUrN,GAAG04B,gBAIrC,OAFAwL,EAA4B,UAAI72B,EAEzB62B,C,CAIJ,cAAAvK,CAAeuK,EAAuBrK,EAAyBlB,EAAuBiM,EAA0BhhC,EAA4BihC,EAA6B,GACpJtyB,MAApB2xB,IAA+BA,EAAmB,IAEtD,IAAI95B,EAAuB3T,EAAO8Q,oBAAoB+oB,QAAQ4T,EAAuB,MAcrF,IAbkB,GAAT95B,IAAYA,EAAOuuB,EAAY,EAAyBkB,EAAgB,EAAuB,GACxGxkC,KAAKguC,gBAAgBj5B,EAAMyvB,EAAgBlB,GAETpmB,MAA9B2xB,EAAyB,SACzB7uC,KAAKqe,OAASwwB,EAAyB,SAAM,GAGf3xB,MAA9B2xB,EAAyB,OACzB7uC,KAAK0hB,OAAS0d,IAAOh+B,EAAOyU,YAAc,EAAIzU,EAAOyU,YAAc,EAAK,EAAgC,EAA7Bg5B,EAAyB,QAEpG7uC,KAAK0hB,OAAS,EAGdpf,MAAMwhB,QAAQ+qB,EAA0B,SAAI,CAC5C,IAAI9/B,EAAkB,EACtB,IAAK,IAAIpE,EAAY,EAAGA,EAAIkkC,EAA0B,QAAEnqC,OAAQiG,IAC5DoE,GAAqB,GAAK3N,EAAOsU,YAAYulB,QAAQ4T,EAA0B,QAAElkC,IAErF3K,KAAK+O,QAAkB,KAAPA,CACnB,KAAM,CAEH,MAAM0gC,EAA+B,CAAC,OAAQ,SAAU,SAAU,mBAClEzvC,KAAK+O,QAAU0gC,EAAmBxU,QAAQ4T,EAA0B,UAC/C,GAAjB7uC,KAAK+O,UAAe/O,KAAK+O,QAAoB,GAAT/O,KAAK+U,KAAgC,EAAI,EACpF,CAED/U,KAAKuf,WAAane,EAAOoT,YAAY1P,WAAmB,OAAEF,MAC1D,MAAM8qC,EAA0Bb,EAA6B,YAAKA,EAA2B,SAC7F,GAA0B3xB,MAAtBwyB,EAAiC,CACjC,IAAInwB,EAAqCne,EAAOoT,YAAY1P,WAAW4qC,GACvE,GAAyCxyB,MAArC2xB,EAAgC,eAAsD3xB,MAApC2xB,EAA+B,aAAgB,CACjG,MAAMZ,EAAuB,CACzB0B,OAAU,CAAEpwB,WAAY,YAAaC,cAAe,EAAKnL,cAAe,GACxEu7B,SAAY,CAAErwB,WAAY,YAAaC,cAAe,EAAKnL,cAAe,GAC1Ew7B,OAAU,CAAEtwB,WAAY,SAAUC,cAAe,EAAKnL,cAAe,GACrEy7B,KAAQ,CAAEvwB,WAAY,SAAUC,cAAe,EAAKnL,cAAe,GACnE07B,OAAU,CAAExwB,WAAY,SAAUC,cAAe,KAAOnL,cAAe,GACvE27B,KAAQ,CAAEzwB,WAAY,SAAUC,cAAe,KAAOnL,cAAe,GAIrE47B,MAAS,CAAE1wB,WAAY,mBAAoBC,cAAe,KAAOnL,cAAe,GAChF,aAAc,CAAEkL,WAAY,SAAUC,cAAe,IAAMnL,aAAc,GACzE,YAAa,CAAEkL,WAAY,SAAUC,cAAe,EAAKnL,aAAc,IACvE,cAAe,CAAEkL,WAAY,SAAUC,cAAe,MAAQnL,aAAc,IAC5E,YAAa,CAAEkL,WAAY,SAAUC,cAAe,IAAMnL,aAAc,KACzEq7B,GACmBxyB,MAAlB+wB,IACA1uB,EAAane,EAAOoT,YAAY1P,WAAWmpC,EAAe1uB,YAE1Dvf,KAAKysC,OAAS1G,GAAMmK,uBAAuBjC,EAAezuB,eAC1Dxf,KAAK0sC,QAAU3G,GAAMoK,sBAAsBlC,EAAe55B,cAEjE,CACiB6I,MAAdqC,IAAyBvf,KAAKuf,WAAaA,EAAW3a,OAEtD5E,KAAKuf,YAAcne,EAAOoT,YAAY1P,WAAmB,OAAEF,QAE3D5E,KAAK+O,QAAuB,KAAZ/O,KAAK+O,QAE5B,CAGwCmO,MAArC2xB,EAAgC,gBAChC7uC,KAAKysC,OAAS1G,GAAMmK,wBAAwBrB,EAAgC,gBAExC3xB,MAApC2xB,EAA+B,eAC/B7uC,KAAK0sC,QAAU3G,GAAMoK,uBAAuBtB,EAA+B,eAG/E,CAEI,MAAMuB,EAAqBvB,EAAwB,MAC7CwB,EAAuC,CAAEC,QAAW,gBACpD7wB,EAA2Bre,EAAOyV,OAAO/R,WAAWurC,EAAiBD,KAAmBhvC,EAAOyV,OAAO/R,WAAWsrC,GAC1GlzB,MAATuC,EACAzf,KAAKyf,MAAQA,EAAM7a,MAGN,GAAT5E,KAAK+U,KACL/U,KAAKyf,MAAQre,EAAOyV,OAAO/R,WAAqB,SAAEF,MAClC,GAAT5E,KAAK+U,KACZ/U,KAAKyf,MAAQre,EAAOyV,OAAO/R,WAAkB,MAAEF,MAC/B,GAAT5E,KAAK+U,KACZ/U,KAAKyf,MAAQre,EAAOyV,OAAO/R,WAAqB,SAAEF,MAClC,GAAT5E,KAAK+U,MAAoC,IAAT/U,KAAK+U,KAC5C/U,KAAKyf,MAAQre,EAAOyV,OAAO/R,WAAW,mBAAmBF,MAEzD5E,KAAKyf,MAAQre,EAAOyV,OAAO/R,WAAyB,aAAEF,KAGjE,CAED5E,KAAK0f,OAASte,EAAOiU,QAAQvQ,WAAiB,KAAEF,MAChD,MAAM2rC,EAAsB1B,EAAyB,QAAKA,EAA2B,UAAKA,EAAyB,OACnH,GAAsB3xB,MAAlBqzB,EAA6B,CAC7B,MAAMC,EAAwC,CAAEC,MAAS,OAAQC,OAAU,QAASC,QAAW,UACzFjxB,EAA6Bte,EAAOiU,QAAQvQ,WAAW0rC,EAAkBD,KAAoBnvC,EAAOiU,QAAQvQ,WAAWyrC,GAC/GrzB,MAAVwC,IAAqB1f,KAAK0f,OAASA,EAAO9a,MACjD,CACiC,kBAA9BiqC,EAAyB,SAEzB7uC,KAAK0f,OAASte,EAAOiU,QAAQvQ,WAAgB,IAAEF,MAC/C5E,KAAKyf,MAAQre,EAAOyV,OAAO/R,WAAW,mBAAmBF,OAEzD5E,KAAKyf,OAASre,EAAOyV,OAAO/R,WAAyB,aAAEF,OAAUtC,MAAMwhB,QAAQ+qB,EAA0B,WAEzG7uC,KAAK+O,QAAuB,KAAZ/O,KAAK+O,SAGsBmO,MAA3C2xB,EAAsC,sBACtC7uC,KAAK4sC,WAAaxN,GAAM,EAAGh+B,EAAO8Y,gBAAiBjP,KAAKe,OAAO6iC,EAAsC,uBAElE3xB,MAAnC2xB,EAA8B,cAC9B7uC,KAAK6sC,OAASzN,GAAMh+B,EAAOkZ,UAAWlZ,EAAOiZ,UAAY,EAAGpP,KAAKe,MAAM+5B,GAAM6K,eAAe/B,EAA8B,gBAG9H7uC,KAAK6f,QAAUze,EAAO0T,SAAShQ,WAAiB,KAAEF,MAClD,MAAMisC,EAAuBhC,EAA0B,SAAKA,EAAyB,OACrF,GAAuB3xB,MAAnB2zB,EAA8B,CAE9B,MAAMC,EAAyC,CAAE,gBAAiB,QAAS,kBAAmB,UAAW,gBAAiB,SACpHjxB,EAA+Bze,EAAO0T,SAAShQ,WAAWgsC,EAAmBP,KAAoBnvC,EAAO0T,SAAShQ,WAAW+rC,GACnH3zB,MAAX2C,EACA7f,KAAK6f,QAAUA,EAAQjb,MACC,UAAnBisC,IACL7wC,KAAK6f,QAAUze,EAAO0T,SAASpQ,QAE/B1E,KAAK6f,SAAWze,EAAO0T,SAASpQ,QAChC1E,KAAKmiB,aAAe0sB,EAA+B,aACnD7uC,KAAKqiB,aAAewsB,EAA+B,aACnD7uC,KAAKoiB,aAAeysB,EAA+B,aACnD7uC,KAAKsiB,YAAcusB,EAA8B,cAGjD7uC,KAAKmiB,aAAe/gB,EAAO0T,SAAS9U,KAAK6f,SAASnS,UAClD1N,KAAKoiB,aAAehhB,EAAO0T,SAAS9U,KAAK6f,SAAS7K,WAAa,EAC/DhV,KAAKqiB,aAAe,GACpBriB,KAAKsiB,YAAclhB,EAAO0T,SAAS9U,KAAK6f,SAAS9K,MAIjD8K,GAAWze,EAAO0T,SAAShQ,WAAiB,OAC5C9E,KAAK+O,QAAuB,IAAZ/O,KAAK+O,QAE5B,CA8DD,GA5D+BmO,MAA3B2xB,EAAsB,KACtB7uC,KAAKuiB,IAAM6c,GAAM,EAAGh+B,EAAO4U,OAAS,EAAG/K,KAAKe,MAAM5K,EAAO2U,WAAuC,EAA1B84B,EAAsB,KAASztC,EAAO2U,UAAY,MAGpH/V,KAAKuiB,KAAOnhB,EAAO2U,YACnB/V,KAAK+O,QAAuB,EAAZ/O,KAAK+O,WAGzB/O,KAAKuiB,IAAMnhB,EAAO2U,UAElB/V,KAAK+O,QAAuB,EAAZ/O,KAAK+O,SAGWmO,MAAhC2xB,EAA2B,SAC3B7uC,KAAKwiB,SAA2C,EAA/BqsB,EAA2B,SAE5C7uC,KAAKwiB,SAAW,GAGctF,MAA9B2xB,EAAyB,OACzB7uC,KAAK6sC,OAASzN,GAAMh+B,EAAOkZ,UAAWlZ,EAAOiZ,UAAY,EAAiC,EAA7Bw0B,EAAyB,QAE9C3xB,MAAnC2xB,EAA8B,cACnC7uC,KAAK6sC,OAASzrC,EAAOgZ,cAGa8C,MAAlC2xB,EAA6B,aAC7B7uC,KAAKmhB,WAAaie,GAAM,EAAGh+B,EAAO4Z,gBAAiB/P,KAAKe,OAAO5K,EAAO4Z,gBAAkB,IAAuC,EAAjC6zB,EAA6B,YAAS,OAG5F3xB,MAAxC2xB,EAAmC,mBACnC7uC,KAAKgtC,eAAiB5rC,EAAO+Z,oBAAsB,GAAM0zB,EAAmC,iBAAKztC,EAAOga,sBAE1D8B,MAA9C2xB,EAAyC,yBACzC7uC,KAAKkhB,uBAAyBke,GAAM,EAAGh+B,EAAOia,4BAA6BpQ,KAAKe,OAAO5K,EAAOia,4BAA8B,IAAmD,EAA7CwzB,EAAyC,wBAAS,OAGjJ3xB,MAAnC2xB,EAA8B,cAC9B7uC,KAAK+iB,YAAcqc,GAAM,EAAGh+B,EAAOyP,iBAAkB5F,KAAKe,OAAO5K,EAAOyP,iBAAmB,IAAwC,EAAlCg+B,EAA8B,aAAS,OAElG3xB,MAAtC2xB,EAAiC,iBACjC7uC,KAAKitC,UAAY7N,GAAM,EAAGh+B,EAAOuP,eAAgB1F,KAAKe,OAAQ6iC,EAAiC,gBAAMztC,EAAOyQ,aAAezQ,EAAOwQ,cAAgBxQ,EAAOwP,mBAAqB,KAG7KmgC,MAAMlC,EAAyB,UAChC7uC,KAAKqhB,OAAS+d,GAAM,EAAGh+B,EAAO8U,YAAajL,KAAKe,OAAO5K,EAAO8U,YAAc,IAAmC,EAA7B24B,EAAyB,QAAS,OAGtF3xB,MAA9B2xB,EAAyB,OACzB7uC,KAAK4gB,OAASwe,GAAM,EAAGh+B,EAAO8P,YAAajG,KAAKe,OAAO5K,EAAO8P,YAAc,IAAmC,EAA7B29B,EAAyB,QAAS,MAEpH7uC,KAAK4gB,OAAS4uB,EAGoBtyB,MAAlC2xB,EAA6B,WAC7B7uC,KAAKohB,WAAage,GAAM,EAAGh+B,EAAO6X,gBAAkB,EAAGhO,KAAKe,MAAM6iC,EAA6B,aAE/F7uC,KAAKohB,WAAahgB,EAAO6X,gBAGQiE,MAAjC2xB,EAA4B,UAAgB,CAC5C,IAAK,IAAIlkC,EAAY,EAAGA,EAAIvJ,EAAOuX,uBAAwBhO,IACvD3K,KAAKytC,cAAc5sB,UAAUlW,GAAKM,KAAK2L,IAAI,EAAG3L,KAAKoC,IAAIjM,EAAO2X,aAAc9N,KAAKe,MAAM5K,EAAO2X,cAAiB81B,EAA4B,UAAElkC,GAAM,OAEvJ3K,KAAKytC,cAAc5H,qBACtB,MACG7lC,KAAKytC,cAAcrK,QAGvB,GAAoClmB,MAAhC2xB,EAA2B,SAC3B,IAAK,IAAIlkC,EAAY,EAAGA,EAAIvJ,EAAOmX,sBAAuB5N,IACtD3K,KAAK8tC,aAAaxsB,SAAS3W,GAAKM,KAAK2L,IAAI,EAAG3L,KAAKoC,IAAIjM,EAAOsX,YAAazN,KAAKe,MAAM5K,EAAOsX,aAAgBm2B,EAA2B,SAAElkC,GAAM,YAGlJ3K,KAAK8tC,aAAa1K,MAAMoB,GAGatnB,MAArC2xB,EAAgC,cAChC7uC,KAAK8gB,cAAgBse,GAAM,EAAGh+B,EAAO6Z,mBAAoBhQ,KAAKe,OAAO5K,EAAO6Z,mBAAqB,IAA0C,EAApC4zB,EAAgC,eAAS,MAEhJ7uC,KAAK8gB,cAAgB,GAGZ,GAAT9gB,KAAK+U,OACL/U,KAAKksC,UAAY9qC,EAAOqK,WAAWulC,WAAUvmC,GAAQA,EAAKpG,MAAQwqC,EAAuB,QAClE,GAAnB7uC,KAAKksC,YAAiBlsC,KAAKksC,UAAY,IAG/C,MAAM+E,EAA0C,CAAEriB,OAAU,YAAasiB,OAAU,OAAQ,UAAW,UAAW,UAAW,UAAW,UAAW,WAC5IC,EAAe9sC,GAAkE6Y,MAA7B+zB,EAAoB5sC,GAAsBjD,EAAO4W,UAAUlT,WAAWmsC,EAAoB5sC,IAASjD,EAAO4W,UAAUlT,WAAWT,GAEzL,GAAa,GAATrE,KAAK+U,MAC4BmI,MAA7B2xB,EAAwB,MACxB,IAAK,IAAI5V,EAAY,EAAGA,EAAI73B,EAAOsY,UAAWuf,IAAK,CAC/C,MAAMmY,EAAYvC,EAAwB,MAAE5V,GAC5C,GAAY/b,MAARk0B,EAAJ,CAGA,GADApxC,KAAK0tC,iBAAiBzU,GAAK73B,EAAO4W,UAAUlT,WAAW,WAAWF,MACpCsY,MAA1Bk0B,EAAqB,eAAgB,CACrC,MAAM5wB,EAAiC2wB,EAAYC,EAAqB,gBACxDl0B,MAAZsD,IAAuBxgB,KAAK0tC,iBAAiBzU,GAAKzY,EAAS5b,MAClE,CACD,GAAwBsY,MAApBk0B,EAAe,SACf,IAAK,IAAIzmC,EAAY,EAAGA,EAAIvJ,EAAOmX,sBAAuB5N,IACtD3K,KAAK2tC,qBAAqB1U,GAAG3X,SAAS3W,GAAKM,KAAK2L,IAAI,EAAG3L,KAAKoC,IAAIjM,EAAOsX,YAAazN,KAAKe,MAAM5K,EAAOsX,aAAgB04B,EAAe,SAAEzmC,GAAM,MAT9H,CAY1B,CAIT,GAAa,GAAT3K,KAAK+U,KAA6B,CAClC,MAAMs8B,EAAsC,CAAEC,SAAY,EAAGC,OAAU,EAAG,aAAc,EAAG,eAAgB,EAAGC,SAAY,EAAG,aAAc,EAAG,eAAgB,EAAGC,MAAS,EAAGC,QAAW,GAC9KC,EAAsC,CAAE,YAAa,GAAI,eAAgB,GAAI,aAAc,GAAIC,IAAO,GAAIC,OAAU,GAAI,aAAc,GAAI,cAAe,GAAI,WAAY,GAAI,kBAAmB,GAAIC,MAAS,GAAIC,MAAS,GAAI,gBAAiB,GAAIC,KAAQ,GAAI,aAAc,GAAIC,QAAW,GAAIC,YAAe,GAAIC,SAAY,GAAI,iBAAkB,GAAI,mBAAoB,IAC9WC,EAAuC,CAAE,cAAe,GAAI,cAAe,GAAI,YAAa,GAAI,WAAY,GAAIC,UAAa,GAAI,eAAgB,GAAI,aAAc,GAAIC,SAAY,GAAI,aAAc,GAAI,cAAe,GAAI,aAAc,GAAI,cAAe,GAAIC,WAAc,GAAI,cAAe,IAC7SC,EAAsC,CAAC,cAAe,GAAI,cAAe,GAAIC,UAAa,GAAI,WAAY,GAAI,cAAe,GAAI,gBAAiB,GAAIC,OAAU,GAAIC,MAAS,GAAI,eAAgB,GAAI,aAAc,GAAG,aAAc,IACpOC,EAAoC,CAACC,MAAS,GAAI,kBAAmB,GAAI,mBAAoB,GAAI,iBAAkB,GAAI,YAAa,GAAI,YAAa,GAAI,gBAAiB,GAAIC,QAAW,GAAI,YAAa,GAAI,eAAgB,GAAI,aAAc,GAAI,cAAe,GAAI,SAAU,GAAI,SAAU,GAAI,aAAc,GAAI,uBAAwB,IAC7UC,EAA4C,CAACC,KAAQ,GAAIC,MAAS,GAAIC,OAAU,GAAIC,IAAO,GAAIC,UAAa,GAAIC,QAAW,GAAIC,UAAa,GAAIC,aAAgB,GAAI,kBAAmB,GAAI7f,MAAS,GAAI8f,YAAe,GAAI,UAAW,GAAIC,MAAS,GAAIC,gBAAmB,IAAKC,MAAS,IAAK,gBAAiB,IAAK,iBAAkB,IAAK,aAAc,IAAK,mBAAoB,IAAK,kBAAmB,IAAKC,KAAQ,IAAKC,cAAiB,IAAKC,aAAgB,IAAKC,cAAiB,IAAKC,YAAe,IAAKC,UAAa,IAAKC,UAAa,IAAKC,YAAe,IAAKC,QAAW,IAAK,YAAa,IAAKC,QAAW,IAAKC,UAAa,IAAKC,YAAe,KAGznBv0C,KAAKmB,UAAY,EACjB,MAAMqzC,EAAkB3F,EAAuB,KAC/C,IAAK,MAAM4F,IAAS,CAChBpD,EACAM,EACAS,EACAI,EACAI,EACAG,GAEA,IAAsB,GAAlB/yC,KAAKmB,UAAoC+b,MAAlBu3B,EAAMD,IAA6Dt3B,MAApC9b,EAAOC,UAAUozC,EAAMD,IAAwB,CACrGx0C,KAAKmB,SAAWszC,EAAMD,GACtB,KACH,CAEL,IAAsB,GAAlBx0C,KAAKmB,SAAgB,CACrB,MAAMuzC,EAAiCtzC,EAAOC,UAAU2vC,WAAUvmC,GAAQA,EAAKpG,MAAQmwC,KACxD,GAA3BE,IAA8B10C,KAAKmB,SAAWuzC,EACrD,EAEW,GAAlB10C,KAAKmB,WAAgBnB,KAAKmB,SAAW,EAClC,CAED,GAAa,GAATnB,KAAK+U,MAAsC,IAAT/U,KAAK+U,KAA8B,CACzD,GAAT/U,KAAK+U,MACJ/U,KAAKkgB,UAAY9e,EAAOiW,WAAW25B,WAAU9wB,GAAaA,EAAU7b,MAAQwqC,EAA4B,aACjF,GAAnB7uC,KAAKkgB,YAAiBlgB,KAAKkgB,UAAY,GAC3ClgB,KAAKmgB,aAAe/e,EAAO8W,UAAU84B,WAAUtU,GAAYA,EAASr4B,MAAQwqC,EAA+B,gBACjF,GAAtB7uC,KAAKmgB,eAAoBngB,KAAKmgB,aAAe,KAEjDngB,KAAKktC,aAAe9rC,EAAOqW,cAAcu5B,WAAU9D,GAAgBA,EAAa7oC,MAAQwqC,EAA4B,aAC1F,GAAtB7uC,KAAKktC,eAAoBltC,KAAKktC,aAAe,GACzB,GAArBltC,KAAKktC,aACJltC,KAAKotC,gBAAgBlpC,IAAI2qC,EAAkC,gBAAgB,aAAGA,EAAkC,gBAAQ,MAExH7uC,KAAKotC,gBAAgB/H,WAAWrlC,KAAKktC,cAEzCltC,KAAKmtC,gBAAkB/rC,EAAOgX,aAAa44B,WAAU2D,GAAeA,EAAYtwC,MAAQwqC,EAA+B,gBAC1F,GAAzB7uC,KAAKmtC,kBAAuBntC,KAAKmtC,gBAAkB,GAC5B,GAAxBntC,KAAKmtC,gBACJntC,KAAKqtC,mBAAmBnpC,IAAI2qC,EAAiC,eAAQ,MAErE7uC,KAAKqtC,mBAAmBhI,WAAWrlC,KAAKmtC,kBAGHjwB,MAAzC2xB,EAAoC,kBACpC7uC,KAAKogB,kBAAoBgf,GAAM,EAAGh+B,EAAOuW,qBAAuB,EAA2C,EAAxCk3B,EAAoC,mBAEvG7uC,KAAKogB,kBAAoB,EAG7B,IAAK,IAAI6Y,EAAY,EAAGA,EAAI73B,EAAO+V,eAA0B,IAATnX,KAAK+U,KAA6B,EAAE,GAAIkkB,IAAK,CAC7F,MAAMmW,EAAqBpvC,KAAKqgB,UAAU4Y,GAC1C,IAAI2b,EACiC13B,MAAjC2xB,EAA4B,YAAgB+F,EAAiB/F,EAA4B,UAAE5V,IACzE/b,MAAlB03B,IAA6BA,EAAiB,IAElDxF,EAAS9uB,UAAYlf,EAAOwW,oBAAoBo5B,WAAUzJ,GAAQA,EAAKljC,MAAQuwC,EAA0B,aAC9E,GAAvBxF,EAAS9uB,YAAiB8uB,EAAS9uB,UAAY,GAChBpD,MAA/B03B,EAA0B,UAC1BxF,EAAS1hC,UAAY0xB,GAAM,EAAGh+B,EAAOuW,qBAAuB,EAAiC,EAA9Bi9B,EAA0B,WAEzFxF,EAAS1hC,UAAY,EAESwP,MAA9B03B,EAAyB,UACzBxF,EAASnsB,SAAW7hB,EAAO4a,cAAcg1B,WAAUvmC,GAAQA,EAAKpG,MAAQuwC,EAAyB,YACvE,GAAtBxF,EAASnsB,WAEyB,UAA9B2xB,EAAyB,UACzBxF,EAASnsB,SAAW7hB,EAAO4a,cAAclX,WAAW,eAAeF,MACnEwqC,EAAShuB,WAAa,GAEtBguB,EAASnsB,SAAW,IAK5BmsB,EAASnsB,SAAW,EAEY/F,MAAhC03B,EAA2B,WAC3BxF,EAAShuB,WAA4C,EAA/BwzB,EAA2B,WAEjDxF,EAAShuB,WAAa,CAE7B,CACJ,MACI,GAAa,GAATphB,KAAK+U,MACV,GAAI85B,EAAiC,eAAG,CAEpC,IAAK,IAAIlkC,EAAY,EAAGA,EAAI,GAAIA,IAC5B3K,KAAKygB,eAAe9V,GAAKkkC,EAAiC,eAAElkC,GAIhE,IAAID,EAAc,EAClB,IAAK,IAAIC,EAAY,EAAGA,EAAI3K,KAAKygB,eAAe/b,OAAQiG,IACpDD,GAAO1K,KAAKygB,eAAe9V,GAE/B,MAAMC,EAAkBF,EAAM1K,KAAKygB,eAAe/b,OAGlD,IAAI0G,EAAqB,EACrB2iC,EAAmB,EACvB,IAAK,IAAIpjC,EAAY,EAAGA,EAAI3K,KAAKygB,eAAe/b,OAAQiG,IACpDS,GAAc2iC,EACdA,EAAW/tC,KAAKygB,eAAe9V,GAAKC,EACpC5K,KAAKyiB,uBAAuB9X,GAAKS,EAIrCpL,KAAKyiB,uBAAuB,IAAM,CACrC,OACE,GAAa,GAATziB,KAAK+U,MAC2BmI,MAAnC2xB,EAA8B,YAC9B,IAAK,IAAIrL,EAAc,EAAGA,EAAMpiC,EAAOwY,SAAU4pB,IAC7CxjC,KAAKknB,YAAYsc,GAAOqL,EAA8B,YAAErL,GACxDxjC,KAAK4tC,eAAepK,GAAOqL,EAAiC,eAAErL,GAC9DxjC,KAAKwc,WAAWgnB,GAAOqL,EAA8B,YAAErL,GAKnE,GAAa,GAATxjC,KAAK+U,KAA4B,CAE7B/U,KAAKyf,OAASre,EAAOyV,OAAO/R,WAAqB,SAAEF,OAA8CsY,MAArC2xB,EAAgC,cAC5F7uC,KAAKiiB,cAAgB4sB,EAAgC,cAGrD7uC,KAAKiiB,cAAgB,EAAoB,EAAI,GAGP/E,MAAtC2xB,EAAiC,eACjC7uC,KAAKgiB,eAAiB6sB,EAAiC,eAGvD7uC,KAAKgiB,eAAiBzT,EAGqB2O,MAA3C2xB,EAAsC,oBACtC7uC,KAAK+hB,oBAAsB8sB,EAAsC,oBAGjE7uC,KAAK+hB,qBAAsB,EAGI7E,MAA/B2xB,EAA0B,QAC1B7uC,KAAK+sC,QAAU8B,EAA0B,QAGzC7uC,KAAK+sC,SAAU,EAGuB7vB,MAAtC2xB,EAAiC,iBACjC7uC,KAAK2iB,eAAiBksB,EAAiC,gBAElB3xB,MAArC2xB,EAAgC,gBAChC7uC,KAAKqsC,oBAAsBwC,EAAgC,eAErB3xB,MAAtC2xB,EAAiC,iBACjC7uC,KAAKssC,qBAAuBuC,EAAiC,gBAE3B3xB,MAAlC2xB,EAA6B,WAC7B7uC,KAAK2gB,WAAW2jB,eAAeuK,EAA6B,YAE5D7uC,KAAK2gB,WAAWyiB,QAEpB,IAAK,IAAIz4B,EAAY,EAAGA,EAAIvJ,EAAO6S,iBAAkBtJ,IAC7CrI,MAAMwhB,QAAQ+qB,EAAiB,iBAAmBlkC,MAClD3K,KAAKwsC,eAAe7hC,GAAK,IAAIo+B,GAC7B/oC,KAAKwsC,eAAe7hC,GAAI25B,eAAeuK,EAAiB,iBAAmBlkC,KAYnF,GATwCuS,MAApC2xB,EAA+B,eAC/B7uC,KAAK2hB,aAAektB,EAA+B,cAEhB3xB,MAAnC2xB,EAA8B,cAC9B7uC,KAAKmsC,kBAAoB0C,EAA8B,aAEnB3xB,MAApC2xB,EAA+B,eAC/B7uC,KAAKosC,mBAAqByC,EAA+B,cAEzDvsC,MAAMwhB,QAAQ+qB,EAA2B,UACzC7uC,KAAKsf,SAASglB,eAAeuK,EAA2B,cACrD,CACH7uC,KAAKsf,SAAS8jB,QAEd,MAAM6K,EAAiC,GAGjC4G,EAA4B,IAC5BC,EAA4B,GAC5BC,EAA+B,EAerC,GAd0C73B,MAAtC2xB,EAAiC,eACjCZ,EAAeE,aAAe/O,GAAM,EAAG0V,EAAmB7pC,KAAKe,MAAO8oC,EAAoB,EAAK,EAAM7pC,KAAKT,KAA0C,EAArCqkC,EAAiC,gBAASgG,GAAqB5pC,KAAK+pC,MAEnL/G,EAAeE,aAAyB,GAATnuC,KAAK+U,KAA+B,EAAI,GAEhCmI,MAAvC2xB,EAAkC,gBAClCZ,EAAejuB,gBAAkBof,GAAM,EAAG2V,EAAsB9pC,KAAKe,OAAO+oC,EAAuB,IAA4C,EAAtClG,EAAkC,iBAAS,MAEpJZ,EAAejuB,gBAAkB,EAGrCiuB,EAAehuB,eAAiBkxB,EAAYtC,EAAiC,gBAC7EZ,EAAe1sB,cAAgB4vB,EAAYtC,EAAgC,eAC3EZ,EAAevtB,iBAAmBywB,EAAYtC,EAAmC,kBAC7EvsC,MAAMwhB,QAAQ+qB,EAA4B,WAAI,CAC9CZ,EAAeM,kBAAoB,GACnC,IAAK,IAAItV,EAAY,EAAGA,EAAI73B,EAAO+V,cAAe8hB,IAAK,CACnD,IAAIzY,EACoCtD,MAApC2xB,EAA4B,UAAE5V,KAC9BzY,EAAW2wB,EAAYtC,EAA4B,UAAE5V,GAAa,WAEtEgV,EAAeM,kBAAkBtV,GAAkB/b,MAAZsD,EAAyBA,EAAWpf,EAAO4W,UAAUlT,WAAiB,IAChH,CACJ,CAGD,GAAkCoY,MAA9B2xB,EAAyB,OAAgB,CACzC,MAAMoG,EAA2B,CAAC,GAAI,EAAG,EAAG,EAAG,EAAG,EAAG,GAC/CC,EAA6B,CAAC,OAAQ,OAAQ,OAAQ,OAAQ,UAAW,UAAW,WACpFC,EAAwB,CAAC,OAAQ,SAAU,SAAU,OAAQ,eAAgB,eAAgB,cAC7FC,EAAqC,CAAE,gBAAiB,EAAG,iBAAkB,EAAG,eAAgB,EAAG,cAAe,GACxH,IAAIrK,EAAqE7tB,MAA9Ck4B,EAAevG,EAAyB,QAAkBuG,EAAevG,EAAyB,QAAKsG,EAAYla,QAAQ4T,EAAyB,SAC1J,GAAjB9D,IAAoBA,EAAe,GACvCkD,EAAeE,aAAe8G,EAAelK,GAC7CkD,EAAehuB,eAAiBkxB,EAAY+D,EAAiBnK,IAC7DkD,EAAejuB,gBAAkB,CACpC,CAEDhgB,KAAK4pC,sBAAsBqE,GAAgB,EAC9C,CAED,IAAK,IAAItjC,EAAY,EAAGA,EAAIvJ,EAAO6S,iBAAkBtJ,IAC7CrI,MAAMwhB,QAAQ+qB,EAAiB,eAAiBlkC,MAChD3K,KAAKusC,aAAa5hC,GAAK,IAAIo+B,GAC3B/oC,KAAKusC,aAAa5hC,GAAI25B,eAAeuK,EAAiB,eAAiBlkC,KAI/E,GAAIrI,MAAMwhB,QAAQ+qB,EAA4B,WAAI,CAC9C,MAAMwG,EAAuBxG,EAA4B,UACzD,IAAK,IAAIlkC,EAAI,EAAGA,EAAI0qC,EAAc3wC,UAC1B1E,KAAK2sC,eAAiBvrC,EAAOka,kBADK3Q,IAAK,CAE3C,MAAM2qC,EAAiC,IAAI7J,GAC3C6J,EAAahR,eAAe+Q,EAAc1qC,IAC1C3K,KAAK4uC,YAAY0G,EAAa/0B,OAAQ+0B,EAAa1wC,MAAO0wC,EAAa90B,SAC1E,CACJ,CACJ,CAEgB,IAATzL,IACuDmI,MAAnD2xB,EAA8C,6BAC9C7uC,KAAK4rC,4BAA8BiD,EAA8C,4BACjF7uC,KAAK6rC,kBAAoBgD,EAAoC,kBAC7D7uC,KAAK8rC,gBAAkB+C,EAAkC,gBACzD7uC,KAAK+rC,iBAAmB8C,EAAmC,iBAC3D7uC,KAAKgsC,sBAAwB6C,EAAwC,sBACrE7uC,KAAKisC,oBAAsB4C,EAAsC,sBAEjE7uC,KAAK4rC,6BAA8B,EACnC5rC,KAAK6rC,kBAAoB,EACzB7rC,KAAK8rC,gBAAkB1qC,EAAOK,gBAAgBzB,KAAKmB,UAAUiB,QAAQsC,OAAS,EAC9E1E,KAAK+rC,iBAAmB,EACxB/rC,KAAKgsC,uBAAwB,EAC7BhsC,KAAKisC,oBAAsB,G,CAMpC,yBAAOsJ,CAAmB3T,GAE7B,OAAO,IAAQ32B,KAAKiB,IAAI,GAAM01B,EAAS,EAAMxgC,EAAO0Y,iBAAoB,GAAO1Y,EAAO0Y,iB,CAUnF,WAAA80B,CAAYruB,EAAgB3b,EAAe4b,GAC9C,IAAIg1B,GAAqB,EAEzB,GADKx1C,KAAKy1C,uBAAuBl1B,EAAQ3b,KAAQ4wC,GAAY,GACzDx1C,KAAK2sC,eAAiBvrC,EAAOka,iBAAkB,MAAM,IAAIrZ,MAC7D,KAAOjC,KAAKgY,UAAUtT,QAAU1E,KAAK2sC,eAAe3sC,KAAKgY,UAAUhY,KAAKgY,UAAUtT,QAAU,IAAI+mC,GAChG,MAAMiK,EAAqC11C,KAAKgY,UAAUhY,KAAK2sC,eAC/D+I,EAAiBn1B,OAASi1B,EAAYp0C,EAAOoa,4BAA4B1W,WAAiB,KAAEF,MAAQ2b,EACpGm1B,EAAiB9wC,MAAQ4wC,EAAY,EAAI5wC,EACzC8wC,EAAiBl1B,SAAWA,EAC5BxgB,KAAK2sC,e,CAGF,sBAAA8I,CAAuBl1B,EAAgB3b,GAC1C,MAAM+wC,EAAqCv0C,EAAOoa,4BAA4B+E,GAC9E,GAAI3b,GAAS+wC,EAAiB95B,SAC1B,OAAO,EAEX,GAA8C,MAA1C85B,EAAiB55B,wBAA+F,GAA9D45B,EAAiB55B,sBAAsBkf,QAAQj7B,KAAK+U,MACtG,OAAO,EAEX,GAA+B,MAA3B4gC,EAAiB75B,QAAqE,IAAlD9b,KAAK+O,QAAW,GAAK4mC,EAAiB75B,QAC1E,OAAO,EAEX,GAAI65B,EAAiB/5B,SAAU,CAE3B,IAAIg6B,EAA+B51C,KAAK2gB,WAAWsoB,kBAGnD,GAFIjpC,KAAK2iB,iBACLizB,EAAuB,GACvBhxC,GAASgxC,EAAsB,OAAO,CAI7C,CACD,OAAO,C,CAGJ,2BAAAC,GACH,IAAK,IAAIC,EAAwB,EAAGA,EAAgB91C,KAAK2sC,cAAemJ,IAAiB,CACrF,MAAMv1B,EAAiBvgB,KAAKgY,UAAU89B,GAAev1B,OAC/C3b,EAAgB5E,KAAKgY,UAAU89B,GAAelxC,MAC/C5E,KAAKy1C,uBAAuBl1B,EAAQ3b,KACrC5E,KAAKgY,UAAU89B,GAAev1B,OAASnf,EAAOoa,4BAA4B1W,WAAiB,KAAEF,MAC7F5E,KAAKgY,UAAU89B,GAAelxC,MAAQ,EAE7C,C,CAGE,aAAAmxC,GACH,OAAOjnC,EAAyB9O,KAAK+O,SAAW3N,EAAOoT,YAAYxU,KAAKuf,YACpC,GAA/Bvf,KAAK+U,KAA6B3T,EAAOoT,YAAY1P,WAAsB,UAAI1D,EAAOoT,YAAY1P,WAAmB,M,CAGvH,gBAAAkxC,GACH,OAAiB,GAATh2C,KAAK+U,KAAkC,EAAMgxB,GAAMiJ,uBAAuBhvC,KAAKysC,O,CAGpF,eAAAwJ,GACH,OAAiB,GAATj2C,KAAK+U,KAAkC3T,EAAOmT,oBAAsBwxB,GAAMkJ,sBAAsBjvC,KAAK0sC,Q,CAG1G,QAAAoC,GACH,OAAO9/B,EAAoBhP,KAAK+O,SAAW3N,EAAOyV,OAAO7W,KAAKyf,OAASre,EAAOyV,OAAO/R,WAAyB,Y,CAG3G,kBAAAoqC,CAAmBtN,GACtB,GAAuC,GAAnC5hC,KAAK+U,KAAgC,MAAM,IAAI9S,MAAM,+CACzD,OAAOb,EAAO4W,UAAUhY,KAAK0tC,iBAAiB9L,G,QAIzCsU,GAAb,WAAAn2C,GACWC,KAAMigC,OAAW,EACRjgC,KAAWijC,YAAiB,GAC5BjjC,KAAQm2C,SAAc,GACtBn2C,KAAIo2C,KAAa,GAC1Bp2C,KAAKq2C,OAAY,EACjBr2C,KAAIqE,KAAW,E,QAGbiyC,GA2CT,WAAAv2C,CAAYw2C,GA3BLv2C,KAAWw2C,YAAc,GAgBhBx2C,KAAQy2C,SAAc,GAC/Bz2C,KAAU02C,WAAW,EACrB12C,KAAS22C,UAAW,IACpB32C,KAAoB42C,qBAAW,EAC/B52C,KAAc62C,eAAW,EACzB72C,KAAgB82C,iBAAW,EAC3B92C,KAAU+2C,WAAW,EACrB/2C,KAAUg3C,WAAW,EACrBh3C,KAAWi3C,YAAW,EACtBj3C,KAAYk3C,aAAW,EAWvBl3C,KAAgBm3C,iBAAG,CAACC,EAAgBC,EAAqBC,EAAwB19B,KACpF,GAAKw9B,GAAuBl6B,MAAdm6B,GAA4Cn6B,MAAjBo6B,GAA0Cp6B,MAAZtD,EAElE,CAEDA,EAAWxY,EAAOwY,SAAWA,EAAW,EAExC,IAAI29B,EAA0Bn2C,EAAOob,WAAWxc,KAAKy2C,SAASY,GAAYpU,YAAYqU,GAAe96B,WAAW5C,IAAW+C,WAGvH66B,EAAqBp2C,EAAOob,WAAW1X,WAAkB,MAAEF,MAK/D,OAJI5E,KAAKy2C,SAASY,GAAYpU,YAAYqU,GAAe96B,WAAW5C,IAAa49B,IAC7ED,EAAMv3C,KAAKy3C,MAAQr2C,EAAOob,WAAWg7B,GAAY36B,mBAG1CK,MAAPq6B,EACOA,EAEA,CACd,CAjBG,OAAO,CAiBV,EAIEv3C,KAAY03C,aAAG,CAACN,EAAgBC,EAAqBC,EAAwB19B,KAChF,GAAKw9B,GAAuBl6B,MAAdm6B,GAA4Cn6B,MAAjBo6B,GAA0Cp6B,MAAZtD,EAElE,CAEDA,EAAWxY,EAAOwY,SAAWA,EAAW,EAExC,IAAI+E,EAAyB3e,KAAKy2C,SAASY,GAAYpU,YAAYqU,GAC/DK,EAAYv2C,EAAOob,WAAWmC,EAAWnC,WAAW5C,IACpDg+B,EAA0BD,EAAUj7B,UAExC,OAAWQ,MAAP06B,GAEsB,aAAlBD,EAAUtzC,MAAyC,eAAlBszC,EAAUtzC,OAI3CuzC,EAAMx2C,EAAO6S,iBAAmB,EAC5B0K,EAAWglB,eAAe/pB,GAAY,GAAK+E,EAAWglB,eAAe/pB,GAAY,EACjFg+B,EAAMx2C,EAAOmS,gBACNoL,EAAWglB,eAAe/pB,GAAY,IAC7Cg+B,EAAMx2C,EAAOwS,kBAGdgkC,GAGA,CACd,CA1BG,OAAO,CA0BV,EAGE53C,KAAsB0jC,uBAAG,CAAC0T,EAAgBS,EAAoBC,KACjE,GAAKV,EAEA,CACD,IAAIQ,EAA0Bx2C,EAAOob,WAAWq7B,GAAYn7B,UAC5D,OAAWQ,MAAP06B,GAGkB16B,MAAd46B,GAAkE,aAAtC12C,EAAOob,WAAWq7B,GAAYxzC,MAA6D,eAAtCjD,EAAOob,WAAWq7B,GAAYxzC,OAI/GuzC,EAAMx2C,EAAO6S,iBAAmB,EAC5B6jC,EAAa,GAAKA,EAAa,EAC/BF,EAAMx2C,EAAOmS,gBACNukC,EAAa,IACpBF,EAAMx2C,EAAOwS,kBAIdgkC,GAGAx2C,EAAOwU,WACrB,CAtBG,OAAOxU,EAAOwU,WAsBjB,EAtFasH,MAAVq5B,EACAv2C,KAAK+3C,iBAAiBxB,GAEtBv2C,KAAKg4C,eAAc,E,CAsFpB,eAAAhiB,GACH,OAAOh2B,KAAKwsB,kBAAoBxsB,KAAKysB,kBAAoBzsB,KAAKi4C,e,CAG3D,2BAAAC,GACH,OAAOjtC,KAAK2L,IACR5W,KAAKm4C,mBAAqB/2C,EAAOsQ,0BAA4BtQ,EAAOqQ,mBACpEzR,KAAKqkC,mBAAqBjjC,EAAOuQ,0BAA4BvQ,EAAOqQ,mB,CAGrE,2BAAA2mC,CAA4BC,GAC/B,OAAOr4C,KAAK0kC,sCAAsC1kC,KAAKy2C,SAAS4B,G,CAG7D,qCAAA3T,CAAsC/d,GACzC,OAAO3mB,KAAKm4C,mBACNltC,KAAKoC,IAAIjM,EAAOsQ,0BAA2BiV,EAAQsc,YAAYv+B,QAC/D,C,CAGH,iBAAA4zC,CAAkBD,GACrB,OAAQA,GAAgBr4C,KAAKwsB,mBAAqB6rB,EAAer4C,KAAKwsB,kBAAoBxsB,KAAKysB,iB,CAG5F,eAAA8rB,CAAgBF,GACnB,OAAQA,GAAgBr4C,KAAKwsB,kBAAoBxsB,KAAKysB,iB,CAGnD,aAAAurB,CAAcQ,GAA4B,GAoB7C,GAnBAx4C,KAAKy4C,MAAQ,EAEpBz4C,KAAKw2C,YAAc,EAAC,GAAM,GAAO,GAAO,GAAO,GAAO,GAAO,GAAO,GAAO,GAAO,GAAO,GAAO,GACzFx2C,KAAKiD,IAAM,EACXjD,KAAKigC,OAAS,EACdjgC,KAAK04C,UAAY,EACjB14C,KAAK24C,WAAa,EAClB34C,KAAKy3C,MAAQ,IACbz3C,KAAK4gB,OAAS,EACd5gB,KAAK4kC,YAAc,EACnB5kC,KAAKm1B,SAAW,GAChBn1B,KAAK44C,mBAAqB,EAC1B54C,KAAK+jC,OAAS,EACd/jC,KAAKm4C,oBAAqB,EAC1Bn4C,KAAKqkC,oBAAqB,EAE1BrkC,KAAK64C,MAAQ,WACbn1C,SAASm1C,MAAQl7B,EAAamB,mBAE1B05B,EAAkB,CAClBx4C,KAAKwsB,kBAAoB,EACzBxsB,KAAKysB,kBAAoB,EACzBzsB,KAAKi4C,gBAAkB,EACvB,IAAK,IAAII,EAAuB,EAAGA,EAAer4C,KAAKg2B,kBAAmBqiB,IAAgB,CACtF,MAAM7T,EAA0B6T,GAAgBr4C,KAAKwsB,mBAAqB6rB,EAAer4C,KAAKwsB,kBAAoBxsB,KAAKysB,kBACjH6W,EAAwB+U,GAAgBr4C,KAAKwsB,kBAAoBxsB,KAAKysB,kBACxEzsB,KAAKy2C,SAAS/xC,QAAU2zC,IACxBr4C,KAAKy2C,SAAS4B,GAAgB,IAAInC,IAEtC,MAAMvvB,EAAmB3mB,KAAKy2C,SAAS4B,GACvC1xB,EAAQsZ,OAASh1B,KAAK2L,IAAI,EAAIyhC,EAAc,GAE5C,IAAK,IAAIS,EAAkB,EAAGA,EAAU94C,KAAK44C,mBAAoBE,IACzDnyB,EAAQwvB,SAASzxC,QAAUo0C,EAC3BnyB,EAAQwvB,SAAS2C,GAAW,IAAI/V,GAEhCpc,EAAQwvB,SAAS2C,GAAS1V,QAGlCzc,EAAQwvB,SAASzxC,OAAS1E,KAAK44C,mBAE/B,IAAK,IAAIj6B,EAAqB,EAAGA,EAAavd,EAAOqQ,mBAAoBkN,IACjEgI,EAAQsc,YAAYv+B,QAAUia,IAC9BgI,EAAQsc,YAAYtkB,GAAc,IAAIgtB,GAAWnH,EAAgBlB,IAErE3c,EAAQsc,YAAYtkB,GAAYqvB,gBAAgB1K,EAAkC,EAAGkB,EAAgB,EAAuB,EAAuBA,EAAgBlB,GAEvK3c,EAAQsc,YAAYv+B,OAAStD,EAAOqQ,mBAEpC,IAAK,IAAIsnC,EAAc,EAAGA,EAAM/4C,KAAKm1B,SAAU4jB,IAC3CpyB,EAAQyvB,KAAK2C,GAAOA,EAAM,EAAI,EAAI,EAEtCpyB,EAAQyvB,KAAK1xC,OAAS1E,KAAKm1B,QAC9B,CACDn1B,KAAKy2C,SAAS/xC,OAAS1E,KAAKg2B,iBAC/B,C,CAGE,cAAAgjB,GACH,IAAIC,EACAzZ,EAAmB,GAEvBA,EAAO30B,KAAKyrC,GAAK4C,IAEtB1Z,EAAO30B,KAAK40B,GAAoB6W,GAAK6C,KAGhC3Z,EAAO30B,KAAI,IACX,IAAIuuC,EAA2BC,mBAAmBr5C,KAAK64C,OACvDrZ,EAAO30B,KAAK40B,GAAoB2Z,EAAiB10C,QAAU,GAAI+6B,GAA8C,GAA1B2Z,EAAiB10C,SAGpG,IAAK,IAAIiG,EAAY,EAAGA,EAAIyuC,EAAiB10C,OAAQiG,IACjD60B,EAAO30B,KAAKuuC,EAAiBtZ,WAAWn1B,IAK5C,GAFA60B,EAAO30B,KAAI,IAA2B40B,GAAoBz/B,KAAKwsB,mBAAoBiT,GAAoBz/B,KAAKysB,mBAAoBgT,GAAoBz/B,KAAKi4C,kBACzJzY,EAAO30B,KAAI,IAAoB40B,GAAoBz/B,KAAKy4C,QACpDz4C,KAAKy4C,OAASr3C,EAAO4O,OAAmB,WAAU,OAAEpL,MAEpD,IAAK,IAAI+F,EAAI,EAAGA,EAAI,GAAIA,IAIpB60B,EAAO30B,KAAK40B,GAAoBz/B,KAAKw2C,YAAY7rC,GAAG,EAAE,IAG9D60B,EAAO30B,KAAsB,IAAA40B,GAAoBz/B,KAAKiD,KAAMw8B,GAAoBz/B,KAAKigC,OAAS7+B,EAAOqP,YACrG+uB,EAAO30B,KAA4B,IAAA40B,GAAoBz/B,KAAK04C,WAAa,GAAIjZ,GAAqC,GAAjBz/B,KAAK04C,YACtGlZ,EAAO30B,KAA0B,IAAA40B,GAAqBz/B,KAAK24C,WAAa,GAAM,GAAIlZ,GAAqBz/B,KAAK24C,WAAa,EAAK,KAC9HnZ,EAAO30B,KAAwB,IAAA40B,GAAoBz/B,KAAKy3C,OAAS,GAAIhY,GAAiC,GAAbz/B,KAAKy3C,QAGzEv6B,MAAjB9b,EAAO+b,OACPqiB,EAAO30B,KAAI,GAAkB40B,GAAoBr+B,EAAO+b,SAExDqiB,EAAO30B,KAAsB,GAAA40B,GAAoB,KAGrDD,EAAO30B,KAA4B,GAAA40B,GAAoBz/B,KAAK4kC,YAAc,IAC1EpF,EAAO30B,KAA2B,IAAA40B,GAAqBz/B,KAAKm1B,SAAW,GAAM,GAAIsK,GAAqBz/B,KAAKm1B,SAAW,EAAK,KAC3HqK,EAAO30B,KAA+B,IAAA40B,GAAqBz/B,KAAK44C,mBAAqB,GAAM,GAAInZ,GAAqBz/B,KAAK44C,mBAAqB,EAAK,KACnJpZ,EAAO30B,KAAI,IAAqB40B,GAAoBz/B,KAAK+jC,SAGzDvE,EAAO30B,KAAI,IACkB,GAAzB7K,KAAK82C,kBAA8C,GAAnB92C,KAAK+2C,YAAuC,KAAlB/2C,KAAK22C,WAA0C,GAAnB32C,KAAK02C,YAA4C,GAAvB12C,KAAK62C,gBAAsD,GAA7B72C,KAAK42C,sBAAkD,GAAnB52C,KAAKg3C,YACvLxX,EAAO30B,KAAK40B,GAAoBx0B,KAAKe,MAAMhM,KAAK82C,iBAAmB,EAA4B,GAAxB92C,KAAK82C,iBAAwB,GAAmC,IAA7B92C,KAAK82C,iBAAmB,MAClItX,EAAO30B,KAAK40B,GAAoBx0B,KAAKe,MAAMhM,KAAK+2C,WAAa,EAAsB,GAAlB/2C,KAAK+2C,WAAkB,EAAI/2C,KAAK+2C,cACjGvX,EAAO30B,KAAK40B,GAAoBz/B,KAAK02C,aACrClX,EAAO30B,KAAK40B,GAAoBx0B,KAAKe,OAAOhM,KAAK22C,UAAY,KAAU,OACvEnX,EAAO30B,KAAK40B,GAAoBx0B,KAAKe,MAAkC,GAA5BhM,KAAK42C,wBAChDpX,EAAO30B,KAAK40B,GAAoBx0B,KAAKe,MAA4B,GAAtBhM,KAAK62C,kBAChDrX,EAAO30B,KAAK40B,GAAoBx0B,KAAKe,MAAwB,GAAlBhM,KAAKg3C,aAAoB,GAAIvX,GAAuD,GAAnCx0B,KAAKe,MAAwB,GAAlBhM,KAAKg3C,eAG5GxX,EAAO30B,KAAK40B,GAAoB,KAGpCD,EAAO30B,KAAI,IACX,IAAK,IAAI8b,EAAkB,EAAGA,EAAU3mB,KAAKg2B,kBAAmBrP,IAAW,CAEvE,IAAI2yB,EAA6BD,mBAAmBr5C,KAAKy2C,SAAS9vB,GAAStiB,MAC3Em7B,EAAO30B,KAAK40B,GAAoB6Z,EAAmB50C,QAAU,GAAI+6B,GAAgD,GAA5B6Z,EAAmB50C,SAGxG,IAAK,IAAIiG,EAAY,EAAGA,EAAI2uC,EAAmB50C,OAAQiG,IACnD60B,EAAO30B,KAAKyuC,EAAmBxZ,WAAWn1B,GAEjD,CAGD,GADA60B,EAAO30B,KAAI,IAA8B40B,GAA0Bz/B,KAAKm4C,oBAAsB,EAAUn4C,KAAKqkC,qBACzGrkC,KAAKm4C,oBAAsBn4C,KAAKqkC,mBAChC,IAAK,IAAIgU,EAAuB,EAAGA,EAAer4C,KAAKg2B,kBAAmBqiB,IACtE7Y,EAAO30B,KAAK40B,GAAoBz/B,KAAKy2C,SAAS4B,GAAcpV,YAAYv+B,OAAStD,EAAOqQ,qBAIhG+tB,EAAO30B,KAAI,KACX,IAAK,IAAIwtC,EAAuB,EAAGA,EAAer4C,KAAKwsB,kBAAmB6rB,IACtE7Y,EAAO30B,KAAK40B,GAAoBz/B,KAAKy2C,SAAS4B,GAAcpY,SAGhE,IAAK,IAAIoY,EAAuB,EAAGA,EAAer4C,KAAKg2B,kBAAmBqiB,IACtE,IAAK,IAAI1tC,EAAY,EAAGA,EAAI3K,KAAKy2C,SAAS4B,GAAcpV,YAAYv+B,OAAQiG,IAAK,CAC7E,MAAMgU,EAAyB3e,KAAKy2C,SAAS4B,GAAcpV,YAAYt4B,GAOvE,GANA60B,EAAO30B,KAAI,GAA8B40B,GAAoB9gB,EAAW5J,OACxEyqB,EAAO30B,KAAI,IAAqB40B,GAAqB9gB,EAAW+C,OAAStgB,EAAOyU,YAAc,GAAM,GAAI4pB,GAAqB9gB,EAAW+C,OAAStgB,EAAOyU,YAAc,EAAK,KAC3K2pB,EAAO30B,KAAyB,IAAA40B,GAAoB9gB,EAAWN,QAAU,GAAIohB,GAAwC,GAApB9gB,EAAWN,SAE5GmhB,EAAO30B,KAAI,KACX20B,EAAO30B,KAAK40B,IAAqB9gB,EAAWgD,eACxChD,EAAWgD,aACX6d,EAAO30B,KAAK40B,GAAoB9gB,EAAWwtB,oBAC3C3M,EAAO30B,KAAK40B,GAAoB9gB,EAAWytB,yBAE1C,CACD,GAA2B,MAAvBztB,EAAWW,SAEXkgB,EAAO30B,KAAK40B,GAAoB,IAChCl1B,QAAQC,IAAI,uEAAyE6tC,EAAe,qBAAuB1tC,OACxH,CACH60B,EAAO30B,KAAK40B,GAAoB9gB,EAAWW,SAAS2pB,oBACpD,IAAK,IAAIhQ,EAAY,EAAGA,EAAIta,EAAWW,SAAS2pB,kBAAmBhQ,IAAK,CACpE,MAAMgN,EAA4BtnB,EAAWW,SAAS0pB,cAAc/P,GACpEuG,EAAO30B,KAAK40B,GAAoBwG,EAAMlxB,MAAO0qB,GAAoBx0B,KAAKe,MAAMi6B,EAAMsB,OAAQ9H,GAAoBx0B,KAAKe,MAAMi6B,EAAMuB,OAClI,CACJ,CAGD,IAAI+R,EAAiC,EACrC,IAAK,IAAItgB,EAAY,EAAGA,EAAI73B,EAAO6S,iBAAmB,EAAGglB,IACrDsgB,KAA+D,MAAlC56B,EAAW4tB,aAAatT,EAAI,KAAeA,EAG5EuG,EAAO30B,KAAK40B,GAAoB8Z,GAA0B,GAAI9Z,GAA6C,GAAzB8Z,IAElF,IAAK,IAAItgB,EAAY,EAAGA,EAAI73B,EAAO6S,iBAAmB,EAAGglB,IACrD,GAAIsgB,EAA0B,GAAKtgB,EAAI,CACnCuG,EAAO30B,KAAK40B,GAAoB9gB,EAAW4tB,aAAatT,EAAI,GAAIgQ,oBAChE,IAAK,IAAIpE,EAAY,EAAGA,EAAIlmB,EAAW4tB,aAAatT,EAAI,GAAIgQ,kBAAmBpE,IAAK,CAChF,MAAMoB,EAA4BtnB,EAAW4tB,aAAatT,EAAI,GAAI+P,cAAcnE,GAChFrF,EAAO30B,KAAK40B,GAAoBwG,EAAMlxB,MAAO0qB,GAAoBx0B,KAAKe,MAAMi6B,EAAMsB,OAAQ9H,GAAoBx0B,KAAKe,MAAMi6B,EAAMuB,OAClI,CACJ,CAER,CAID,GADAhI,EAAO30B,KAA0B,IAAA40B,GAAoB9gB,EAAW5P,SAAW,GAAI0wB,GAAyC,GAArB9gB,EAAW5P,UAC1GK,EAAyBuP,EAAW5P,SAEpC,GADAywB,EAAO30B,KAAK40B,IAAqB9gB,EAAWgE,iBACxChE,EAAWgE,eACX6c,EAAO30B,KAAK40B,GAAoB9gB,EAAW0tB,sBAC3C7M,EAAO30B,KAAK40B,GAAoB9gB,EAAW2tB,2BAE1C,CACD,GAA6B,MAAzB3tB,EAAWgC,WAEX6e,EAAO30B,KAAK40B,GAAoB,IAChCl1B,QAAQC,IAAI,yEAA2E6tC,EAAe,qBAAuB1tC,OAE5H,CACD60B,EAAO30B,KAAK40B,GAAoB9gB,EAAWgC,WAAWsoB,oBACtD,IAAK,IAAIhQ,EAAY,EAAGA,EAAIta,EAAWgC,WAAWsoB,kBAAmBhQ,IAAK,CACtE,MAAMgN,EAA4BtnB,EAAWgC,WAAWqoB,cAAc/P,GACtEuG,EAAO30B,KAAK40B,GAAoBwG,EAAMlxB,MAAO0qB,GAAoBx0B,KAAKe,MAAMi6B,EAAMsB,OAAQ9H,GAAoBx0B,KAAKe,MAAMi6B,EAAMuB,OAClI,CACJ,CAGD,IAAI+R,EAAiC,EACrC,IAAK,IAAItgB,EAAY,EAAGA,EAAI73B,EAAO6S,iBAAmB,EAAGglB,IACrDsgB,KAAiE,MAApC56B,EAAW6tB,eAAevT,EAAI,KAAeA,EAG9EuG,EAAO30B,KAAK40B,GAAoB8Z,GAA0B,GAAI9Z,GAA6C,GAAzB8Z,IAElF,IAAK,IAAItgB,EAAY,EAAGA,EAAI73B,EAAO6S,iBAAmB,EAAGglB,IACrD,GAAIsgB,EAA0B,GAAKtgB,EAAI,CACnCuG,EAAO30B,KAAK40B,GAAoB9gB,EAAW6tB,eAAevT,EAAI,GAAIgQ,oBAClE,IAAK,IAAIpE,EAAY,EAAGA,EAAIlmB,EAAW6tB,eAAevT,EAAI,GAAIgQ,kBAAmBpE,IAAK,CAClF,MAAMoB,EAA4BtnB,EAAW6tB,eAAevT,EAAI,GAAI+P,cAAcnE,GAClFrF,EAAO30B,KAAK40B,GAAoBwG,EAAMlxB,MAAO0qB,GAAoBx0B,KAAKe,MAAMi6B,EAAMsB,OAAQ9H,GAAoBx0B,KAAKe,MAAMi6B,EAAMuB,OAClI,CACJ,CAER,CAyDL,GAvDI14B,EAAyB6P,EAAW5P,UACpCywB,EAAO30B,KAAK40B,GAAoB9gB,EAAWY,aAE3CvQ,EAAoB2P,EAAW5P,WAC/BywB,EAAO30B,KAAK40B,GAAoB9gB,EAAWc,QAEvCd,EAAWc,OAASre,EAAOyV,OAAO/R,WAAqB,SAAEF,QACzD46B,EAAO30B,KAAK40B,GAAoB9gB,EAAWsD,gBAC3Cud,EAAO30B,KAAK40B,IAAqB9gB,EAAWqD,mBAGhD/S,EAAyB0P,EAAW5P,UACpCywB,EAAO30B,KAAK40B,GAAoB9gB,EAAWiuB,aAE3C19B,EAAqByP,EAAW5P,UAChCywB,EAAO30B,KAAK40B,GAAqB9gB,EAAWkuB,OAASzrC,EAAOkZ,WAAc,GAAImlB,GAAqB9gB,EAAWkuB,OAASzrC,EAAOkZ,UAAa,KAE3InL,EAAsBwP,EAAW5P,WACjCywB,EAAO30B,KAAK40B,GAAoB9gB,EAAWkB,UAEvClB,EAAWkB,SAAWze,EAAO0T,SAASpQ,SACtC86B,EAAO30B,KAAK40B,GAAoBx0B,KAAKe,MAAgC,GAA1B2S,EAAWwD,gBACtDqd,EAAO30B,KAAK40B,GAAoB9gB,EAAW0D,eAC3Cmd,EAAO30B,KAAK40B,GAAoBx0B,KAAKe,MAAM2S,EAAWyD,gBACtDod,EAAO30B,KAAK40B,GAAoB9gB,EAAW2D,gBAG/CjT,EAAyBsP,EAAW5P,WACpCywB,EAAO30B,KAAK40B,GAAoB9gB,EAAWwC,aAE3Cqe,EAAO30B,KAAK40B,IAAqB9gB,EAAWouB,WAE5Cz9B,EAAyBqP,EAAW5P,UACpCywB,EAAO30B,KAAK40B,GAAoB9gB,EAAWquB,gBAAiBvN,GAAoB9gB,EAAWuC,yBAE3F3R,EAAsBoP,EAAW5P,WACjCywB,EAAO30B,KAAK40B,GAAoB9gB,EAAW4D,KAAO,GAAIkd,GAAqC,GAAjB9gB,EAAW4D,MACrFid,EAAO30B,KAAK40B,GAAoB9gB,EAAW6D,YAE3ChT,EAAqBmP,EAAW5P,UAChCywB,EAAO30B,KAAK40B,GAAoB9gB,EAAW0C,SAE3C5R,EAAmBkP,EAAW5P,UAC9BywB,EAAO30B,KAAK40B,GAAoB9gB,EAAWoE,aAAc0c,GAAoB9gB,EAAWsuB,YAExFv9B,EAAqBiP,EAAW5P,UAChCywB,EAAO30B,KAAK40B,GAAoB9gB,EAAWiC,SAG5B,GAAfjC,EAAW5J,OACXyqB,EAAO30B,KAAI,IAAwB40B,GAAoB9gB,EAAW8tB,QAAShN,GAAoB9gB,EAAW+tB,UAE1GlN,EAAO30B,KAAK40B,IAAqB9gB,EAAWoD,uBAG7B,GAAfpD,EAAW5J,MAAmD,GAAf4J,EAAW5J,KAAqC,CAC/FyqB,EAAO30B,KAAI,IACX,MAAM2uC,EAAgC,IAAIzY,GAC1C,IAAK,IAAIp2B,EAAY,EAAGA,EAAIvJ,EAAOuX,uBAAwBhO,IACvD6uC,EAAcvY,MAAM7/B,EAAO0X,0BAA2B6F,EAAW8uB,cAAc5sB,UAAUlW,IAE7F6uC,EAAcjY,aAAa/B,EAC9B,CAED,GAAmB,GAAf7gB,EAAW5J,KAA6B,CAC/B4J,EAAWxd,SAAW,KAC5Cq+B,EAAO30B,KAAK,IAAK40B,GAAoB9gB,EAAWxd,SAAW,MAC3Dq+B,EAAO30B,KAAK40B,GAAoB,KAExB9gB,EAAWxd,SAAW,KAC9Bq+B,EAAO30B,KAAK,IAAK40B,GAAoB9gB,EAAWxd,SAAW,MAC3Dq+B,EAAO30B,KAAK40B,GAAoB,KAExB9gB,EAAWxd,SAAW,IAC9Bq+B,EAAO30B,KAAK,IAAK40B,GAAoB9gB,EAAWxd,SAAW,KAC3Dq+B,EAAO30B,KAAK40B,GAAoB,MAGhCD,EAAO30B,KAAK,IAAK40B,GAAoB9gB,EAAWxd,WAChDq+B,EAAO30B,KAAK40B,GAAoB,KAEjCD,EAAO30B,KAAK,IAAK40B,GAAoB9gB,EAAWe,SAGhD8f,EAAO30B,KAAI,KAOX,MAAM4uC,EACJra,GAAM,EAAG,GAAQzgB,EAAWotB,mBAAqB,GAC/CptB,EAAWitB,4BAA8B,EAAI,GAEjDpM,EAAO30B,KAAK40B,GAAoBga,IAGhC,MAAMC,EACJta,GAAM,EAAG,GAAQ,IAAM,GACrBzgB,EAAWqtB,sBAAwB,EAAI,GAE3CxM,EAAO30B,KAAK40B,GAAoBia,IAChCna,GAAkBC,EAAQ7gB,EAAWktB,mBACrCtM,GAAkBC,EAAQ7gB,EAAWmtB,iBACrCvM,GAAkBC,EAAQ7gB,EAAWstB,oBAG1B,MAAM,GAAmB,GAAfttB,EAAW5J,MAA4C,IAAf4J,EAAW5J,KAA8B,CACxF,GAAmB,GAAf4J,EAAW5J,KACXyqB,EAAO30B,KAAI,GAAwB40B,GAAoB9gB,EAAWuB,YAClEsf,EAAO30B,KAAI,GAA2B40B,GAAoB9gB,EAAWwB,mBAClE,CAEH,GADAqf,EAAO30B,KAAI,GAAwB40B,GAAoB9gB,EAAWuuB,eACnC,GAA3BvuB,EAAWuuB,aAAmB,CAC9B1N,EAAO30B,KAAwB,GAAA40B,GAAoB9gB,EAAWyuB,gBAAgB91B,eAC9EkoB,EAAO30B,KAAI,KACX,IAAK,IAAI8uC,EAAY,EAAGA,EAAIh7B,EAAWyuB,gBAAgB51B,YAAY9S,OAAQi1C,IAAK,CAC5E,IAAK,IAAI1gB,EAAY,EAAGA,EAAIta,EAAWyuB,gBAAgB51B,YAAYmiC,GAAGj1C,OAAQu0B,IAC1EuG,EAAO30B,KAAK40B,GAAoB9gB,EAAWyuB,gBAAgB51B,YAAYmiC,GAAG1gB,KAE9EuG,EAAO30B,KAAI,GACd,CACD20B,EAAO30B,KAAI,IACd,CAED,GADA20B,EAAO30B,KAAI,GAA2B40B,GAAoB9gB,EAAWwuB,kBACnC,GAA9BxuB,EAAWwuB,gBAAsB,CACjC3N,EAAO30B,KAAI,KACX,IAAK,IAAI8uC,EAAY,EAAGA,EAAIh7B,EAAW0uB,mBAAmBl1B,QAAQzT,OAAQi1C,IAAK,CAC3E,IAAK,IAAI1gB,EAAY,EAAGA,EAAIta,EAAW0uB,mBAAmBl1B,QAAQwhC,GAAGj1C,OAAQu0B,IACzEuG,EAAO30B,KAAK40B,GAAoB9gB,EAAW0uB,mBAAmBl1B,QAAQwhC,GAAG1gB,KAE7EuG,EAAO30B,KAAI,GACd,CACD20B,EAAO30B,KAAI,IACd,CACJ,CACD20B,EAAO30B,KAAI,GAAgC40B,GAAoB9gB,EAAWyB,oBAE1Eof,EAAO30B,KAAI,IACX,IAAK,IAAI8uC,EAAY,EAAGA,GAA4C,IAAvCh7B,EAAW5J,KAA6B,EAAE3T,EAAO+V,eAAgBwiC,IAC1Fna,EAAO30B,KAAK40B,GAAoB9gB,EAAW0B,UAAUs5B,GAAGr5B,YAE5Dkf,EAAO30B,KAAI,IACX,IAAK,IAAI8uC,EAAY,EAAGA,GAA4C,IAAvCh7B,EAAW5J,KAA+B,EAAI3T,EAAO+V,eAAgBwiC,IAC9Fna,EAAO30B,KAAK40B,GAAoB9gB,EAAW0B,UAAUs5B,GAAGjsC,YAE5D8xB,EAAO30B,KAAI,IACX,IAAK,IAAI8uC,EAAY,EAAGA,GAA4C,IAAvCh7B,EAAW5J,KAA+B,EAAI3T,EAAO+V,eAAgBwiC,IAC9Fna,EAAO30B,KAAK40B,GAAoB9gB,EAAW0B,UAAUs5B,GAAG12B,WAEhB,GAApCtE,EAAW0B,UAAUs5B,GAAG12B,UACxBuc,EAAO30B,KAAK40B,GAAoB9gB,EAAW0B,UAAUs5B,GAAGv4B,YAGnE,MAAM,GAAmB,GAAfzC,EAAW5J,KAAuC,CACrD4J,EAAWxd,SAAW,KACvCq+B,EAAO30B,KAAK,IAAK40B,GAAoB9gB,EAAWxd,SAAW,MAC3Dq+B,EAAO30B,KAAK40B,GAAoB,KAExB9gB,EAAWxd,SAAW,KAC9Bq+B,EAAO30B,KAAK,IAAK40B,GAAoB9gB,EAAWxd,SAAW,MAC3Dq+B,EAAO30B,KAAK40B,GAAoB,KAExB9gB,EAAWxd,SAAW,IAC9Bq+B,EAAO30B,KAAK,IAAK40B,GAAoB9gB,EAAWxd,SAAW,KAC3Dq+B,EAAO30B,KAAK40B,GAAoB,MAGhCD,EAAO30B,KAAK,IAAK40B,GAAoB9gB,EAAWxd,WAChDq+B,EAAO30B,KAAK40B,GAAoB,KAEjCD,EAAO30B,KAAK,IAAK40B,GAAoB9gB,EAAWe,SAElC8f,EAAO30B,KAAI,IAEX,IAAK,IAAIouB,EAAY,EAAGA,EAAI,GAAIA,IAC5BuG,EAAO30B,KAAK40B,GAAqB9gB,EAAW8B,eAAewY,GAAK,IAEvE,MAAM,GAAmB,GAAfta,EAAW5J,KAClByqB,EAAO30B,KAAI,IAAmB40B,GAAoB9gB,EAAWutB,iBAC1D,GAAmB,GAAfvtB,EAAW5J,KAAiC,CACnDyqB,EAAO30B,KAAI,IACX,MAAM+uC,EAA+B,IAAI7Y,GACzC,IAAK,IAAIp2B,EAAY,EAAGA,EAAIvJ,EAAOmX,sBAAuB5N,IACtDivC,EAAa3Y,MAAM7/B,EAAOqX,yBAA0BkG,EAAWmvB,aAAaxsB,SAAS3W,IAEzFivC,EAAarY,aAAa/B,EAC7B,MAAM,GAAmB,GAAf7gB,EAAW5J,KAAgC,CAClDyqB,EAAO30B,KAAI,KACX,IAAK,IAAIouB,EAAY,EAAGA,EAAI73B,EAAOsY,UAAWuf,IAC1CuG,EAAO30B,KAAK40B,GAAoB9gB,EAAW+uB,iBAAiBzU,KAGhEuG,EAAO30B,KAAI,IACX,MAAM+uC,EAA+B,IAAI7Y,GACzC,IAAK,IAAI9H,EAAY,EAAGA,EAAI73B,EAAOsY,UAAWuf,IAC1C,IAAK,IAAItuB,EAAY,EAAGA,EAAIvJ,EAAOmX,sBAAuB5N,IACtDivC,EAAa3Y,MAAM7/B,EAAOqX,yBAA0BkG,EAAWgvB,qBAAqB1U,GAAG3X,SAAS3W,IAGxGivC,EAAarY,aAAa/B,EAC7B,MAAM,GAAmB,GAAf7gB,EAAW5J,KAClByqB,EAAO30B,KAAI,IAAqB40B,GAAoB9gB,EAAWe,cAC5D,GAAmB,GAAff,EAAW5J,KAClByqB,EAAO30B,KAAI,GAAyB40B,GAAoB9gB,EAAWyC,kBAChE,GAAmB,GAAfzC,EAAW5J,KAClByqB,EAAO30B,KAAI,IAAqB40B,GAAoB9gB,EAAWe,SAC/D8f,EAAO30B,KAAI,GAA4B40B,GAAoB9gB,EAAWmC,qBACnE,GAAmB,GAAfnC,EAAW5J,KAGlB,MAAM,IAAI9S,MAAM,4BAGpBu9B,EAAO30B,KAAI,GAAwB40B,GAAoB9gB,EAAWguB,gBAClE,IAAK,IAAImJ,EAAwB,EAAGA,EAAgBn3B,EAAWguB,cAAemJ,IAC1EtW,EAAO30B,KAAK40B,GAAoB9gB,EAAW3G,UAAU89B,GAAev1B,SAChEnf,EAAOoa,4BAA4BmD,EAAW3G,UAAU89B,GAAev1B,QAAQ1E,SAAW,GAC1F2jB,EAAO30B,KAAK40B,GAAoB9gB,EAAW3G,UAAU89B,GAAelxC,QAExE46B,EAAO30B,KAAK40B,GAAoB9gB,EAAW3G,UAAU89B,GAAet1B,UAE3E,CAGLgf,EAAO30B,KAAI,IACXouC,EAAO,IAAIlY,GACX,IAAI8Y,EAAqB,EACzB,KAAQ,GAAKA,EAAc75C,KAAK44C,mBAAqB,GAAGiB,IACxD,IAAK,IAAIxB,EAAuB,EAAGA,EAAer4C,KAAKg2B,kBAAmBqiB,IAAgB,IAAK,IAAI1tC,EAAY,EAAGA,EAAI3K,KAAKm1B,SAAUxqB,IACjIsuC,EAAKhY,MAAM4Y,EAAY75C,KAAKy2C,SAAS4B,GAAcjC,KAAKzrC,IAE5DsuC,EAAK1X,aAAa/B,GAElBA,EAAO30B,KAAI,KACXouC,EAAO,IAAIlY,GACX,MAAM+Y,EAA4B,IAAI/Y,GAChCgZ,EAA0BzD,GAAK0D,cAAc54C,EAAOwU,aAC1D,IAAK,IAAIyiC,EAAuB,EAAGA,EAAer4C,KAAKg2B,kBAAmBqiB,IAAgB,CACtF,MAAM1xB,EAAmB3mB,KAAKy2C,SAAS4B,GACjC4B,EAAmCj6C,KAAKo4C,4BAA4BC,GACpE7T,EAA0BxkC,KAAKs4C,kBAAkBD,GACjD/U,EAAwBtjC,KAAKu4C,gBAAgBF,GAC7C6B,EAAoC5D,GAAK0D,cAAcC,EAA2B74C,EAAOqQ,oBACzF0oC,EAAoC7D,GAAK0D,cAAcrzB,EAAQsc,YAAYv+B,OAAS,GAG1F,GAAI4+B,EAAc,CACd,MAAM8W,EAAuC9D,GAAK0D,cAAch6C,KAAKk4C,8BAAgC,GACrG,IAAK,IAAImC,EAA0B,EAAGA,EAAkB1zB,EAAQsc,YAAYv+B,OAAQ21C,IAAmB,CAEnG,IAAI17B,EAAyB3e,KAAKy2C,SAAS4B,GAAcpV,YAAYoX,GAErE,IAAK,IAAI7W,EAAc,EAAGA,EAAMpiC,EAAOwY,SAAU4pB,IAAO,CACpD,MAAM6T,EAAqB14B,EAAWuI,YAAYsc,GAC5C8T,EAAwB34B,EAAWivB,eAAepK,GAClDqU,EAAqBl5B,EAAWnC,WAAWgnB,GAC3C8W,EAAoB37B,EAAWglB,eAAeH,GAQpD,IAAI3jC,EAAiBuB,EAAOob,WAAWq7B,GAAYj7B,QAAU,EAAI,EAC7Di7B,GAAcz2C,EAAOob,WAAW1X,WAAiB,KAAEF,QACnD/E,EAAS,GAEbo5C,EAAKhY,MAAM,EAAGphC,GAGA,GAAVA,GAAyB,GAAVA,IACfo5C,EAAKhY,MAAM,EAAGoW,GACd4B,EAAKhY,MAAMmZ,EAA8B9C,IAI/B,GAAVz3C,GACAo5C,EAAKhY,MAAM,EAAG4W,GAIwC,aAAtDz2C,EAAOob,WAAWmC,EAAWnC,WAAWgnB,IAAMn/B,MAA6E,eAAtDjD,EAAOob,WAAWmC,EAAWnC,WAAWgnB,IAAMn/B,MACnH40C,EAAKhY,MAAM,EAAGqZ,EAErB,CACJ,CACJ,CACD,MAAMC,EAAwB/V,GAAkBlB,EAAgB,EAAI3c,EAAQsZ,OAAS7+B,EAAO0Y,iBAC5F,IAAI0gC,EAAqBhW,EAAiB,EAAI+V,EAC9C,MAAME,EAA0BnX,EAAe,CAAC,EAAG,EAAG,EAAG,EAAG,EAAG,GAAMkB,EAAiB,CAAC,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,IAAM,CAAC,EAAG,EAAG,GAAI,GAAI,IAAK,GAAI,IACpIkW,EAAyB,GAC/B,IAAK,IAAI/vC,EAAY,EAAGA,EAAI8vC,EAAc/1C,OAAQiG,IAC9C8vC,EAAc9vC,IAAM4vC,EAExB,IAAK,MAAMzB,KAAWnyB,EAAQwvB,SAAU,CACpC,GAAIn2C,KAAKqkC,mBAAoB,CACzB,MAAMI,EAA0BnF,GAAcl+B,EAAOqQ,mBAAoBwoC,EAA0BnB,EAAQ7V,YAAYv+B,QACvHu0C,EAAKhY,MAAMiZ,EAA2BzV,EAAkBrjC,EAAOqQ,oBAC/D,IAAK,IAAI9G,EAAY,EAAGA,EAAI85B,EAAiB95B,IACzCsuC,EAAKhY,MAAMkZ,EAA2BrB,EAAQ7V,YAAYt4B,GAEjE,CAED,GAAImuC,EAAQ9V,MAAMt+B,OAAS,EAAG,CAC1Bu0C,EAAKhY,MAAM,EAAG,GAEd,IAAI0Z,EAAkB,EACtB,IAAK,MAAMxX,KAAQ2V,EAAQ9V,MAAO,CAG1BG,EAAKnE,MAAQ2b,GAAWrX,IACxB2V,EAAKhY,MAAM,EAAG,GACdgY,EAAKhY,MAAM,EAAG,GACdgY,EAAK9X,kBAAkBwZ,EAAUxX,EAAKnE,QAGtCmE,EAAKnE,MAAQ2b,IACb1B,EAAKhY,MAAM,EAAG,GACVqC,GAAc2V,EAAKhY,MAAM,EAAG,GAChCgY,EAAK9X,kBAAkBgC,EAAKnE,MAAQ2b,IAGxCb,EAAUrzB,QAOiB,GAAvB0c,EAAKrB,QAAQp9B,OACbo1C,EAAU7Y,MAAM,EAAG,IAEnB6Y,EAAU7Y,MAAM,EAAG,GACnB6Y,EAAU7Y,MAAM,EAAGkC,EAAKrB,QAAQp9B,OAAS,IAG7Co1C,EAAU1Y,cAAc+B,EAAKpB,KAAKr9B,OAAS,GAEtC4+B,EAIDwW,EAAU7Y,MAAM,EAAGkC,EAAKpB,KAAK,GAAG3H,MAHhC0f,EAAU7Y,MAAM8Y,EAAiB5W,EAAKpB,KAAK,GAAG3H,MAMlD,IAAIwgB,EAAoB,EACpBC,EAAqB1X,EAAKrB,QAAQ,GAClCgZ,EAAuBD,EAC3B,MAAME,EAAuB,GAC7B,IAAK,IAAIpwC,EAAY,EAAGA,EAAIw4B,EAAKpB,KAAKr9B,OAAQiG,IAAK,CAC/C,MAAM83B,EAAeU,EAAKpB,KAAKp3B,GACzBqwC,EAAoBH,EAAapY,EAAIzhB,SACvC85B,GAAgBE,GAChBlB,EAAU7Y,MAAM,EAAG,GACnB8Z,EAAWlwC,KAAKmwC,GAChBF,EAAeE,GAEflB,EAAU7Y,MAAM,EAAG,GAEvB6Y,EAAU3Y,kBAAkBsB,EAAIf,KAAOkZ,GACvCA,EAAYnY,EAAIf,KACX4B,EAGDwW,EAAU7Y,MAAM,EAAGwB,EAAIrI,MAFvB0f,EAAU7Y,MAAM8Y,EAAiBtX,EAAIrI,KAI5C,CAED,MAAM6gB,EAAsB/kB,OAAOglB,aAAaC,MAAM,KAAMrB,EAAUvY,aAAa,KAC7E6Z,EAAqBV,EAAazf,QAAQggB,IAC7B,GAAfG,GACAnC,EAAKhY,MAAM,EAAG,GACdgY,EAAKziC,OAAOsjC,KAEZb,EAAKhY,MAAM,EAAG,GACdgY,EAAK/X,cAAc,EAAG,EAAGka,GACzBV,EAAaxf,OAAOkgB,EAAY,IAEpCV,EAAaW,QAAQJ,GACjBP,EAAah2C,OAAS,IAAIg2C,EAAa9f,MAE3C,MAAM0gB,EAAuBnY,EAAKrB,QAAQtrB,OAAOukC,GACjD,IAAK,IAAIpwC,EAAY,EAAGA,EAAI2wC,EAAW52C,OAAQiG,IAAK,CAChD,MAAMi3B,EAAgB0Z,EAAW3wC,GAC3B4wC,EAAqBd,EAAcxf,QAAQ2G,GACjD,IAAmB,GAAf2Z,EAAkB,CAClB,IAAIv6B,EAAmB,EACnBw6B,EAAoBhB,EACxB,GAAIgB,EAAY5Z,EACZ,KAAO4Z,GAAa5Z,GAChB4Z,KACyC,GAArCf,EAAcxf,QAAQugB,IAAkBx6B,SAGhD,KAAOw6B,GAAa5Z,GAChB4Z,KACyC,GAArCf,EAAcxf,QAAQugB,IAAkBx6B,IAGpDi4B,EAAKhY,MAAM,EAAG,GACdgY,EAAK5X,mBAAmBrgB,EAC3B,MACGi4B,EAAKhY,MAAM,EAAG,GACdgY,EAAKhY,MAAM,EAAGsa,GACdd,EAAcvf,OAAOqgB,EAAY,GAErCd,EAAcY,QAAQzZ,GAClB6Y,EAAc/1C,OAAS,IAAI+1C,EAAc7f,MAGzC4f,EADA7vC,GAAKw4B,EAAKrB,QAAQp9B,OAAS,EACfy+B,EAAKrB,QAAQ,GAEbF,CAEnB,CAEiB,GAAduB,EAAKnE,OACLia,EAAKhY,MAAM,EAAGkC,EAAKnB,qBAAuB,EAAI,GAGlD2Y,EAAUxX,EAAKlE,GAClB,CAEG0b,EAAU36C,KAAK4kC,YAAcxjC,EAAOwQ,eAAiB0xB,IACrD2V,EAAKhY,MAAM,EAAG,GACVqC,GAAc2V,EAAKhY,MAAM,EAAG,GAChCgY,EAAK9X,kBAAkBnhC,KAAK4kC,YAAcxjC,EAAOwQ,eAAiB0xB,EAAgBqX,GAEzF,MACG1B,EAAKhY,MAAM,EAAG,EAErB,CACJ,CACD,IAAIwa,EAAuBxC,EAAKzX,eAC5Bka,EAAmB,GACvB,KAAOD,EAAe,GAClBC,EAAOL,QAAQ5b,GAAmC,GAAfgc,IACnCA,IAA+B,EAEnCjc,EAAO30B,KAAK40B,GAAoBic,EAAOh3C,SACvCpC,MAAMq5C,UAAU9wC,KAAKswC,MAAM3b,EAAQkc,GACnCzC,EAAK1X,aAAa/B,GAElB,MAAMoc,EAAuB,KACjB,IAAIC,EAAmB,GAMnC,GALqC3+B,MAA9BS,EAAam+B,eAA8Bn+B,EAAam+B,cAAcp3C,OAAS,IAChFm3C,EAAmB,IAAMl+B,EAAam+B,cAAcv3B,KAAK,MAI3Dib,EAAO96B,OAASk3C,EAEA,OAAO1lB,OAAOglB,aAAaC,MAAM,KAAM3b,GAAUqc,EAE9D,CACH,IAAIhtC,EAAiB,GACrB,IAAK,IAAIlE,EAAY,EAAGA,EAAI60B,EAAO96B,OAAQiG,GAAKixC,EAC5C/sC,GAAUqnB,OAAOglB,aAAaC,MAAM,KAAM3b,EAAOuc,MAAMpxC,EAAGA,EAAIixC,IAEpD,OAAO/sC,EAASgtC,CAEjC,C,CAGG,SAAOG,CAAyBC,GAGpC,OADmB,GAAfA,EAAkBA,EAAc,EAA2B,GAAfA,IAAkBA,EAAc,GACzE76C,EAAO4W,UAAUonB,GAAM,EAAGh+B,EAAO4W,UAAUtT,OAAQu3C,G,CAGvD,gBAAAlE,CAAiBpY,GACpB,GAAkB,MAAdA,GAAoC,IAAdA,EAItB,OAHA2W,GAAK4F,UAELl8C,KAAKg4C,eAAc,GAGvB,IAAIpY,EAAoB,EAExB,KAAOD,EAAWG,WAAWF,IAA4B,IAAEA,IAI3D,GAFqD,IAAjDD,EAAWG,WAAWF,IAA6BA,IAEnB,KAAhCD,EAAWG,WAAWF,GAEtB,YADA5/B,KAAKskC,eAAe6X,KAAKC,MAAmB,GAAbxc,EAAiBD,EAAaA,EAAW0c,UAAUzc,KAItF,MAAM0c,EAAsB3c,EAAWG,WAAWF,GAClD,IAAI2c,EACAC,EACAC,EACPC,EAGsB,KAAfJ,GACAC,GAAc,EACdC,GAAc,EACdC,GAAc,EACzBC,GAAe,EACJ9c,KACsB,KAAf0c,GACPC,GAAc,EACdC,GAAc,EACdC,GAAc,EACzBC,GAAe,EACJ9c,KACsB,KAAf0c,GACHC,GAAc,EACdC,GAAc,EACdC,GAAc,EAC5BC,GAAe,EACD9c,MAEJ2c,GAAc,EACdC,GAAc,EACdC,GAAc,EACzBC,GAAe,GAGR,MAAM79B,EAAkBghB,GAAoBF,EAAWG,WAAWF,MAClE,GAAI2c,KAA4B,GAAZ19B,GAAiBA,EAAUy3B,GAAKqG,IAAyB99B,EAAUy3B,GAAKsG,IAAwB,OACpH,GAAIJ,KAA4B,GAAZ39B,GAAiBA,EAAUy3B,GAAKuG,IAAyBh+B,EAAUy3B,GAAKwG,IAAwB,OACpH,GAAIL,KAA4B,GAAZ59B,GAAiBA,EAAUy3B,GAAKyG,IAAyBl+B,EAAUy3B,GAAK0G,IAAwB,OAC3H,GAAIN,KAA6B,GAAZ79B,GAAiBA,EAAUy3B,GAAK6C,IAA0Bt6B,EAAUy3B,GAAK2G,IAAyB,OAChH,MAAMC,EAAqBr+B,EAAU,EAC/Bs+B,EAAuBt+B,EAAU,EACjCu+B,EAAsBv+B,EAAU,EAChCw+B,EAAsBx+B,EAAU,EAChCy+B,EAAqBz+B,EAAU,EAC/B0+B,EAAuB1+B,EAAU,EACjC2+B,EAAuB3+B,EAAU,EACjC4+B,EAAsB5+B,EAAU,EACtC7e,KAAKg4C,cAAeuE,GAAekB,GAAiBjB,GAAea,GAAgBD,GAAcX,GACjG,MAAMvO,EAA8BqO,GAAekB,GAAcjB,GAAea,EAEhF,GAAIX,GAAgBD,EAAa,CAEzB,IAAIiB,GADR/d,EAAaA,EAAWge,WAAW,MAAO,MACJz3B,MAAM,KAExC,GADAyZ,EAAa+d,EAAiBE,QACG,MAA9BjgC,EAAam+B,eAAyBn+B,EAAam+B,cAAcv3B,KAAK,OAASm5B,EAAiBn5B,KAAK,MAAO,CAE3G+xB,GAAKuH,KAEL,IAAIC,GAAwB,EACxBC,GAA4B,EAC5BC,GAA+B,EACnC,MAAMC,EAAmB,GACnBC,EAAgC,GACtCp+C,EAAmBG,YAAc,GACjCH,EAAmBI,SAAW,GAC9BJ,EAAmBK,aAAe,EAClCL,EAAmBM,cAAgB,EACnCM,EAAiBiC,cAAc,IAAItC,EAC/BP,EAAmBK,aACnBL,EAAmBM,gBAEvB,IAAK,MAAMQ,KAAO88C,EACd,GAA0B,kBAAtB98C,EAAIu9C,cACCL,IACDA,GAAwB,EACxBG,EAAiBpzC,KAAKjK,GACtBqD,EAAmB,SAGtB,GAA0B,sBAAtBrD,EAAIu9C,cACJJ,IACDA,GAA4B,EAC5BE,EAAiBpzC,KAAKjK,GACtBqD,EAAmB,SAGtB,GAA0B,yBAAtBrD,EAAIu9C,cACJH,IACDA,GAA+B,EAC/BC,EAAiBpzC,KAAKjK,GACtBqD,EAAmB,QAItB,CAED,IADoBqyC,GAAK8H,GAA+Bx9C,EAAKq9C,EAAkBC,EAAqBp+C,GAEhG,QAEP,CAKL,GAHIm+C,EAAiBv5C,OAAS,IAC1BiZ,EAAam+B,cAAgBmC,GAE7BC,EAAoBx5C,OAAS,EAAG,CAChC,MAAM25C,EAAkD1vC,EAAUuvC,GAClEvgC,EAAaK,iBAAiBL,EAAaK,iBAAiBtZ,QAAU,CAClEL,KAAM,wBACN4Z,QAASogC,EACTz5C,MAAO+Y,EAAaK,iBAAiBtZ,OAO5C,CAEJ,CAER,CAED,GAAIy4C,GAAeZ,EAAa,CAE5B,IAAK,MAAM51B,KAAW3mB,KAAKy2C,SACvB9vB,EAAQsc,YAAY,GAAG1jB,WAAane,EAAOoT,YAAY1P,WAAsB,UAAEF,MAC/E+hB,EAAQsc,YAAY,GAAGl0B,SAAW,KAEtC/O,KAAKy2C,SAAS,GAAGxT,YAAY,GAAGiJ,UAAY,CAC/C,CAED,IAAIoS,EAAiD,KACrD,GAAK/B,GAAekB,GAAiBjB,GAAea,GAAgBD,GAAcX,EAAe,CAO7F6B,EAAsB,GACtB,IAAK,IAAI3zC,EAAY2zC,EAAoB55C,OAAQiG,EAAI3K,KAAKg2B,kBAAmBrrB,IAAK,CAC9E2zC,EAAoB3zC,GAAK,GACzB,IAAK,IAAIsuB,EAAY,EAAGA,EAAI73B,EAAOqQ,mBAAoBwnB,IAAKqlB,EAAoB3zC,GAAGsuB,GAAK,EAC3F,CACJ,CAED,IAIIslB,EAJA/O,EAA6B,EAE7BgP,EAAoC,EACpCC,GAAmC,EAEnCC,GAA6B,EAC7BnwC,GAA6B,EACjC,KAAOqxB,EAAYD,EAAWj7B,eAAgB65C,EAAU5e,EAAWG,WAAWF,MAC1E,QAEI,IAAI+e,GAAkB9e,GAAoBF,EAAWG,WAAWF,OAAiB,GAAKC,GAAoBF,EAAWG,WAAWF,MAChI5/B,KAAK64C,MAAQ+F,mBAAmBjf,EAAW0c,UAAUzc,EAAWA,EAAY+e,IAC5Ej7C,SAASm1C,MAAQ74C,KAAK64C,MAAQ,MAAQl7B,EAAamB,mBAEnD8gB,GAAa+e,EACf,MACF,SACI3+C,KAAKwsB,kBAAoBqT,GAAoBF,EAAWG,WAAWF,MACnE5/B,KAAKysB,kBAAoBoT,GAAoBF,EAAWG,WAAWF,MAG/D5/B,KAAKi4C,gBAFLsE,GAAeW,EAEQ,EAEArd,GAAoBF,EAAWG,WAAWF,MAErE5/B,KAAKwsB,kBAAoB8S,GAAcl+B,EAAO+X,qBAAsB/X,EAAOgY,qBAAsBpZ,KAAKwsB,mBACtGxsB,KAAKysB,kBAAoB6S,GAAcl+B,EAAOiY,qBAAsBjY,EAAOkY,qBAAsBtZ,KAAKysB,mBACtGzsB,KAAKi4C,gBAAkB3Y,GAAcl+B,EAAOmY,mBAAoBnY,EAAOoY,mBAAoBxZ,KAAKi4C,iBAEhG,IAAK,IAAII,EAAer4C,KAAKy2C,SAAS/xC,OAAQ2zC,EAAer4C,KAAKg2B,kBAAmBqiB,IACjFr4C,KAAKy2C,SAAS4B,GAAgB,IAAInC,GAGtC,GADAl2C,KAAKy2C,SAAS/xC,OAAS1E,KAAKg2B,kBACvBumB,GAAekB,GAAiBjB,GAAea,GAAgBD,GAAcX,EAC9E,IAAK,IAAI9xC,EAAY2zC,EAAqB55C,OAAQiG,EAAI3K,KAAKg2B,kBAAmBrrB,IAAK,CAC/E2zC,EAAqB3zC,GAAK,GAC1B,IAAK,IAAIsuB,EAAY,EAAGA,EAAI73B,EAAOqQ,mBAAoBwnB,IAAKqlB,EAAqB3zC,GAAGsuB,GAAK,EAC5F,CAEP,MACF,SAGI,GAFAj5B,KAAKy4C,MAAQ5Y,GAAoBF,EAAWG,WAAWF,MAEnD5/B,KAAKy4C,OAASr3C,EAAO4O,OAAmB,WAAU,OAAEpL,MACpD,IAAK,IAAI+F,EAAI,EAAGA,EAAIvJ,EAAO0Y,iBAAkBnP,IACzC3K,KAAKw2C,YAAY7rC,GAAgE,GAA3Dk1B,GAAoBF,EAAWG,WAAWF,MAGpE2c,IAAav8C,KAAKy4C,MAAQ,GAChC,MACF,SACI,GAAI8E,GAAehB,EACfv8C,KAAKiD,IAAMm8B,GAAM,EAAGh+B,EAAO+O,KAAKzL,OAAQ,GAAKm7B,GAAoBF,EAAWG,WAAWF,OACvF5/B,KAAKigC,OAAS,OACX,GAAIsc,GAAeC,EACtBx8C,KAAKiD,IAAMm8B,GAAM,EAAGh+B,EAAO+O,KAAKzL,OAAQm7B,GAAoBF,EAAWG,WAAWF,OAClF5/B,KAAKigC,OAAS,OACX,GAAIwc,GAAgBU,GAAeT,EAAe,CAMrD,MAAM1c,EAAsBH,GAAoBF,EAAWG,WAAWF,OAC/D38B,EAAKg9B,GAA4BF,GAA+BC,GACvEhgC,KAAKiD,IAAMA,EACXjD,KAAKigC,OAASA,CACjB,MACGjgC,KAAKiD,IAAMm8B,GAAM,EAAGh+B,EAAO+O,KAAKzL,OAAQm7B,GAAoBF,EAAWG,WAAWF,OAClF5/B,KAAKigC,OAASb,GAAMh+B,EAAOqP,UAAWrP,EAAOsP,UAAY,EAAGmvB,GAAoBF,EAAWG,WAAWF,MAAgBx+B,EAAOqP,WAEnI,MACF,QACIrP,EAAO0Y,iBAAmB+lB,GAAoBF,EAAWG,WAAWF,MACpEx+B,EAAO+b,OAAS/b,EAAO0Y,iBAEvB1Y,EAAOyY,SAAWzY,EAAOuY,aAAevY,EAAO0Y,iBAGjD,MAEF,SAEQ9Z,KAAK04C,UADL2E,GAAcd,EACG1c,GAAoBF,EAAWG,WAAWF,OAEzCC,GAAoBF,EAAWG,WAAWF,OAAiB,GAAKC,GAAoBF,EAAWG,WAAWF,MAElI,MACF,SAEQ5/B,KAAK24C,WADL0E,GAAcd,EACI1c,GAAoBF,EAAWG,WAAWF,OAEzCC,GAAoBF,EAAWG,WAAWF,OAAiB,GAAKC,GAAoBF,EAAWG,WAAWF,MAAgB,EAEnJ,MACF,SAEQ5/B,KAAKy3C,MADL2F,GAAcb,EACD,CAAC,GAAI,IAAK,IAAK,KAAK1c,GAAoBF,EAAWG,WAAWF,OACpE2d,GAAehB,EACT,CAAC,GAAI,GAAI,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,KAAK1c,GAAoBF,EAAWG,WAAWF,OAEnHC,GAAoBF,EAAWG,WAAWF,OAAiB,EAAMC,GAAoBF,EAAWG,WAAWF,MAE7H5/B,KAAKy3C,MAAQrY,GAAMh+B,EAAOmP,SAAUnP,EAAOoP,SAAW,EAAGxQ,KAAKy3C,OAChE,MACF,SACQgG,GAAclB,GACd/M,EAA+E,GAA1D3P,GAAoBF,EAAWG,WAAWF,MAC/D4P,EAAqBpQ,GAAM,EAAGh+B,EAAO8P,YAAas+B,KAC1CgN,GAAea,GAAgBD,GAAcX,KACrDjN,EAAqB3P,GAAoBF,EAAWG,WAAWF,MAC/D4P,EAAqBpQ,GAAM,EAAGh+B,EAAO8P,YAAas+B,IAIxD,MACF,QAEQxvC,KAAK4kC,YADLuY,GAAeZ,EACI,CAAC,EAAG,EAAG,EAAG,EAAG,IAAI1c,GAAoBF,EAAWG,WAAWF,OAE3DC,GAAoBF,EAAWG,WAAWF,MAAgB,EAEjF5/B,KAAK4kC,YAAc35B,KAAK2L,IAAIxV,EAAOiQ,eAAgBpG,KAAKoC,IAAIjM,EAAOkQ,eAAgBtR,KAAK4kC,cAC1F,MACF,SAA2B,CACvB,MAAMzP,GAAoB0K,GAAoBF,EAAWG,WAAWF,OAAiB,GAAKC,GAAoBF,EAAWG,WAAWF,MAAgB,EACpJ5/B,KAAKm1B,SAAWmK,GAAcl+B,EAAOmQ,YAAanQ,EAAOoQ,YAAa2jB,GACtE,IAAK,IAAIkjB,EAAuB,EAAGA,EAAer4C,KAAKg2B,kBAAmBqiB,IAAgB,CACtF,IAAK,IAAIU,EAAM/4C,KAAKy2C,SAAS4B,GAAcjC,KAAK1xC,OAAQq0C,EAAM/4C,KAAKm1B,SAAU4jB,IACzE/4C,KAAKy2C,SAAS4B,GAAcjC,KAAK2C,GAAQA,EAAM,EAAK,EAAI,EAE5D/4C,KAAKy2C,SAAS4B,GAAcjC,KAAK1xC,OAAS1E,KAAKm1B,QAClD,CACJ,CAAC,MACF,SAA+B,CAC3B,IAAIyjB,EAEAA,EADA4E,GAAejB,EACM1c,GAAoBF,EAAWG,WAAWF,MAAgB,GAEzDC,GAAoBF,EAAWG,WAAWF,OAAiB,GAAKC,GAAoBF,EAAWG,WAAWF,MAAgB,EAEpJ5/B,KAAK44C,mBAAqBtZ,GAAc,EAAGl+B,EAAOoQ,YAAaonC,GAC/D,MAAMiG,EAAuB7+C,KAAKg2B,kBAClC,IAAK,IAAIqiB,EAAuB,EAAGA,EAAewG,EAAcxG,IAAgB,CAC5E,MAAMlC,EAAsBn2C,KAAKy2C,SAAS4B,GAAclC,SACxD,IAAK,IAAI2C,EAAU3C,EAASzxC,OAAQo0C,EAAU94C,KAAK44C,mBAAoBE,IACnE3C,EAAS2C,GAAW,IAAI/V,GAE5BoT,EAASzxC,OAAS1E,KAAK44C,kBAC1B,CACJ,CAAC,MACF,SACI,GAAK6E,GAAclB,GAAkBC,GAAea,GAAgBD,GAAcX,EAAe,CAC7F,MAAMqC,EAAgCxf,GAAcl+B,EAAOqQ,mBAAoBrQ,EAAOuQ,0BAA2BkuB,GAAoBF,EAAWG,WAAWF,MAAgBx+B,EAAOqQ,oBAClLzR,KAAKm4C,oBAAqB,EAC1Bn4C,KAAKqkC,mBAAsBya,EAAwB,EAEnD,IAAK,IAAIzG,EAAuB,EAAGA,EAAer4C,KAAKg2B,kBAAmBqiB,IAAgB,CACtF,MAAM7T,EAA0B6T,GAAgBr4C,KAAKwsB,mBAAqB6rB,EAAer4C,KAAKwsB,kBAAoBxsB,KAAKysB,kBACjH6W,EAAwB+U,GAAgBr4C,KAAKwsB,kBAAoBxsB,KAAKysB,kBAE5E,IAAK,IAAI4tB,EAA0Br6C,KAAKy2C,SAAS4B,GAAcpV,YAAYv+B,OAAQ21C,EAAkByE,EAAuBzE,IACxHr6C,KAAKy2C,SAAS4B,GAAcpV,YAAYoX,GAAmB,IAAI1O,GAAWnH,EAAgBlB,GAG9F,GADAtjC,KAAKy2C,SAAS4B,GAAcpV,YAAYv+B,OAASo6C,EAC7CxB,GAAaf,EACb,IAAK,IAAIlC,EAA0B,EAAGA,EAAkByE,EAAuBzE,IAC3Er6C,KAAKy2C,SAAS4B,GAAcpV,YAAYoX,GAAiBrM,gBAAgBxJ,EAAgB,EAAuB,EAAsBA,EAAgBlB,GAI9J,IAAK,IAAIrK,EAAYqlB,EAAqBjG,GAAc3zC,OAAQu0B,EAAI6lB,EAAuB7lB,IACvFqlB,EAAqBjG,GAAcpf,GAAK,EAE/C,CACJ,KAAM,CACH,MAAM8lB,EAA8Blf,GAAoBF,EAAWG,WAAWF,MAC9E5/B,KAAKm4C,mBAAyD,IAAhB,EAAnB4G,GAC3B/+C,KAAKqkC,mBAAyD,IAAhB,EAAnB0a,GAC3B,IAAK,IAAI1G,EAAuB,EAAGA,EAAer4C,KAAKg2B,kBAAmBqiB,IAAgB,CACtF,IAAI5T,EAA0B,GAC1BzkC,KAAKm4C,oBAAsBn4C,KAAKqkC,sBAChCI,EAAkBnF,GAAcl+B,EAAOqQ,mBAAoBzR,KAAKk4C,8BAA+BrY,GAAoBF,EAAWG,WAAWF,MAAgBx+B,EAAOqQ,qBAEpK,MAAMkV,EAAmB3mB,KAAKy2C,SAAS4B,GACjC7T,EAA0BxkC,KAAKs4C,kBAAkBD,GACjD/U,EAAwBtjC,KAAKu4C,gBAAgBF,GACnD,IAAK,IAAI1tC,EAAYgc,EAAQsc,YAAYv+B,OAAQiG,EAAI85B,EAAiB95B,IAClEgc,EAAQsc,YAAYt4B,GAAK,IAAIghC,GAAWnH,EAAgBlB,GAE5D3c,EAAQsc,YAAYv+B,OAAS+/B,CAChC,CACJ,CACH,MACF,SACI,GAAKiY,EAalB18C,KAAK+jC,OAASlE,GAAoBF,EAAWG,WAAWF,UAbxB,CAChC,IAAIof,EAAYnf,GAAoBF,EAAWG,WAAWF,MAC1D5/B,KAAK+jC,OAAS3E,GAAM,EAAGh+B,EAAO2Q,QAAQrN,OAAQs6C,EAAY,IACtDxC,GAAeW,GAAeZ,KACd,GAAfv8C,KAAK+jC,QAA8B,GAAf/jC,KAAK+jC,SAC5B2a,GAAoB,GAEjB1+C,KAAK+jC,QAAU,IAClBx1B,GAAoB,GAItB,CAIW,MACF,SACI,GAAI4uC,GAAeZ,EAAa,CAC5B,MAAMlE,EAAuBxY,GAAoBF,EAAWG,WAAWF,MACvE5/B,KAAKy2C,SAAS4B,GAAcpY,OAASb,GAAM,EAAGh+B,EAAOuY,aAAckmB,GAAoBF,EAAWG,WAAWF,MAAgB,GACzHyY,GAAgBr4C,KAAKwsB,oBAAmBxsB,KAAKy2C,SAAS4B,GAAcpY,OAAS,EACpF,MAAM,GAAKwd,GAAclB,GAAkBC,GAAea,GAAgBD,GAAcX,EACrF,IAAK,IAAIpE,EAAuB,EAAGA,EAAer4C,KAAKg2B,kBAAmBqiB,IACtEr4C,KAAKy2C,SAAS4B,GAAcpY,OAASb,GAAM,EAAGh+B,EAAOuY,aAAckmB,GAAoBF,EAAWG,WAAWF,MAAgB,GACzHyY,GAAgBr4C,KAAKwsB,oBAAmBxsB,KAAKy2C,SAAS4B,GAAcpY,OAAS,OAElF,CACH,IAAK,IAAIoY,EAAuB,EAAGA,EAAer4C,KAAKwsB,kBAAmB6rB,IACtEr4C,KAAKy2C,SAAS4B,GAAcpY,OAASb,GAAM,EAAGh+B,EAAOuY,aAAckmB,GAAoBF,EAAWG,WAAWF,OAEjH,IAAK,IAAIyY,EAAuBr4C,KAAKwsB,kBAAmB6rB,EAAer4C,KAAKg2B,kBAAmBqiB,IAC3Fr4C,KAAKy2C,SAAS4B,GAAcpY,OAAS,CAE5C,CACH,MACF,QAAkC,CAC9Bwe,IACIA,GAA2Bz+C,KAAKy2C,SAAS+H,GAA2Bvb,YAAYv+B,SAChF85C,IACAC,EAA0B,GAE9Bnf,GAAc,EAAGt/B,KAAKy2C,SAAS/xC,OAAS,EAAG85C,GAC3C,MAAM7/B,EAAyB3e,KAAKy2C,SAAS+H,GAA2Bvb,YAAYwb,GAEpF,IAAI3X,EAAyBxH,GAAc,EAAG,GAA2BO,GAAoBF,EAAWG,WAAWF,QAC9G4c,GAAea,GAAgBD,GAAcX,KAC5B,GAAd3V,EACAA,EAAc,EAEK,GAAdA,IACLA,EAAc,IAGtBnoB,EAAWqvB,gBAAgBlH,EAAgB0X,GAA6Bx+C,KAAKwsB,mBAAqBgyB,EAA4Bx+C,KAAKwsB,kBAAoBxsB,KAAKysB,kBAAmB+xB,GAA6Bx+C,KAAKwsB,kBAAoBxsB,KAAKysB,qBAGpO8wB,GAAehB,GAAiBW,GAAaV,IAAgC,GAAd1V,GAAuD,GAAdA,GAAuF,GAApCA,IAC7JnoB,EAAWouB,SAAU,EACrBpuB,EAAWwC,WAAa,EACxBxC,EAAW5P,SAAW,GAEtB2vC,IACA//B,EAAWsD,cAAgB,GAE3B1T,IACAoQ,EAAWqD,gBAAiB,GAG5Bu7B,GAAehB,IACf59B,EAAW5P,QAAU,EAGjB4P,EAAWc,OAASre,EAAOyV,OAAO/R,WAAyB,aAAEF,QAE7D+Z,EAAW5P,SAAW,MAGjC,CAAC,MACF,SAAyB,CACrB,MAAM8O,EAAuBgiB,GAAoBF,EAAWG,WAAWF,OAAiB,EAAMC,GAAoBF,EAAWG,WAAWF,MACxI5/B,KAAKy2C,SAAS+H,GAA2Bvb,YAAYwb,GAAyBpgC,OAASR,GAElF2+B,GAAea,GAAgBD,GAAcX,IAC0C,GAApFz8C,KAAKy2C,SAAS+H,GAA2Bvb,YAAYwb,GAAyBpgC,SAC9Ere,KAAKy2C,SAAS+H,GAA2Bvb,YAAYwb,GAAyBpgC,OAAM,EAG/F,CAAC,MACF,SACI,GAAI8+B,GAAeZ,EAAa,CAC5B,MAAM0C,EAAwB,CAAC,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,GACjD5G,EAAuBxY,GAAoBF,EAAWG,WAAWF,MACjEjhB,EAAyB3e,KAAKy2C,SAAS4B,GAAcpV,YAAY,GACvEtkB,EAAWxd,SAAWi+B,GAAM,EAAGh+B,EAAOC,UAAUqD,OAA+E,EAAvEu6C,EAAYpf,GAAoBF,EAAWG,WAAWF,QAI9GjhB,EAAWirB,sBAAsB0U,EAAqBjG,GAAc,GAAInK,EAE3E,MAAM,GAAIoP,GAAaf,EAAa,CACjC,MAAM0C,EAAwB,CAAC,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,GACvD,IAAK,IAAI5G,EAAuB,EAAGA,EAAer4C,KAAKg2B,kBAAmBqiB,IACtE,IAAK,MAAM15B,KAAc3e,KAAKy2C,SAAS4B,GAAcpV,YAC7CoV,GAAgBr4C,KAAKwsB,kBACrB7N,EAAWutB,UAAY9M,GAAM,EAAGh+B,EAAOqK,WAAW/G,OAAQm7B,GAAoBF,EAAWG,WAAWF,OAEpGjhB,EAAWxd,SAAWi+B,GAAM,EAAGh+B,EAAOC,UAAUqD,OAA+E,EAAvEu6C,EAAYpf,GAAoBF,EAAWG,WAAWF,OAI7H,MAAM,GAAI2d,GAAehB,EAAa,CACnC,MAAM0C,EAAwB,CAAC,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,GACnDT,GAA6Bx+C,KAAKwsB,kBAClCxsB,KAAKy2C,SAAS+H,GAA2Bvb,YAAYwb,GAAyBvS,UAAY9M,GAAM,EAAGh+B,EAAOqK,WAAW/G,OAAQm7B,GAAoBF,EAAWG,WAAWF,OAEvK5/B,KAAKy2C,SAAS+H,GAA2Bvb,YAAYwb,GAAyBt9C,SAAWi+B,GAAM,EAAGh+B,EAAOC,UAAUqD,OAA+E,EAAvEu6C,EAAYpf,GAAoBF,EAAWG,WAAWF,OAExL,MACG,GAAI4e,GAA6Bx+C,KAAKwsB,kBAClCxsB,KAAKy2C,SAAS+H,GAA2Bvb,YAAYwb,GAAyBvS,UAAY9M,GAAM,EAAGh+B,EAAOqK,WAAW/G,OAAQm7B,GAAoBF,EAAWG,WAAWF,YAE3L,GAAI8c,EAAc,CACjB,MAAMwC,EAAerf,GAAoBF,EAAWG,WAAWF,MACzDuf,EAAkBtf,GAAoBF,EAAWG,WAAWF,MAGjE5/B,KAAKy2C,SAAS+H,GAA2Bvb,YAAYwb,GAAyBt9C,SAAWi+B,GAAM,EAAGh+B,EAAOC,UAAUqD,OAD7F,GAAnBy6C,EACwHD,EAAe,IAC7G,GAAnBC,EACiHD,EAAe,IAC7G,GAAnBC,EACiHD,EAAe,GAEfA,EAG5H,MACAl/C,KAAKy2C,SAAS+H,GAA2Bvb,YAAYwb,GAAyBt9C,SAAWi+B,GAAM,EAAGh+B,EAAOC,UAAUqD,OAAQm7B,GAAoBF,EAAWG,WAAWF,OAI5J,MACX,KAAK,IACF,GAAI6c,IAAgBW,GAAcE,EAAW,CAC5C,MAAM8B,EAAoBvf,GAAoBF,EAAWG,WAAWF,MAC/Dwf,EAAoB,GAAM,IACwC,iBAAlE17C,SAAS27C,IAAIhD,UAAU34C,SAAS27C,IAAI36C,OAAS,IAAIy5C,gBACpDz6C,SAAS47C,SAASC,KAAO77C,SAAS27C,IAAI7oC,OAAO,kBAC7C8oC,SAASE,UAOVx/C,KAAKy2C,SAAS+H,GAA2Bvb,YAAYwb,GAAyBt9C,SAD1Ei+C,EAAoB,GAAM,GAC2DhgB,GAAM,EAAGh+B,EAAOC,UAAUqD,OAAQ06C,EAAoB,IAEtIA,EAAoB,GAAM,GACsDhgB,GAAM,EAAGh+B,EAAOC,UAAUqD,OAAQ06C,EAAoB,IAEtIA,EAAoB,IAAO,GACqD,GAGAhgB,GAAM,EAAGh+B,EAAOC,UAAUqD,OAAQ06C,EAAoB,GAEhJ,CAEF,MACO,SACI,GAAK3B,GAAclB,GAAiBc,GAAcb,GAAiBY,GAAcX,EAC7E,GAAIc,GAAehB,EAAa,CAC5B,MAAMtH,EAA2B,CAAC,GAAI,EAAG,EAAG,EAAG,EAAG,EAAG,GAE/CC,EAA6B,CAAC,OAAQ,OAAQ,OAAQ,OAAQ,UAAW,UAAW,WAE1F,GAAIiI,GAAeZ,EAAa,CAC5B,MAAMlE,EAAuBxY,GAAoBF,EAAWG,WAAWF,MACjEjhB,EAAyB3e,KAAKy2C,SAAS4B,GAAcpV,YAAY,GACjEgL,EAAiCqQ,EAAqBjG,GAAc,GACpEtN,EAAuB,CAAC,EAAG,EAAG,EAAG,GAAG3L,GAAM,EAAG6V,EAAevwC,OAAQm7B,GAAoBF,EAAWG,WAAWF,QACpHqO,EAAeE,aAAe8G,EAAelK,GAC7CkD,EAAejuB,gBAAkB,EACjCiuB,EAAehuB,eAAiB7e,EAAO4W,UAAUlT,WAAWowC,EAAiBnK,IAC7EpsB,EAAWirB,sBAAsBqE,EAAgBC,EACpD,MAAM,GAAIoP,GAAaf,EACpB,IAAK,IAAIlE,EAAuB,EAAGA,EAAer4C,KAAKg2B,kBAAmBqiB,IACtE,IAAK,IAAI1tC,EAAY,EAAGA,EAAI3K,KAAKy2C,SAAS4B,GAAcpV,YAAYv+B,OAAQiG,IAAK,CAC7E,MAAMgU,EAAyB3e,KAAKy2C,SAAS4B,GAAcpV,YAAYt4B,GACjEsjC,EAAiCqQ,EAAqBjG,GAAc1tC,GACpEogC,EAAuB3L,GAAM,EAAG6V,EAAevwC,OAAQm7B,GAAoBF,EAAWG,WAAWF,MAAgB,GACnHyY,EAAer4C,KAAKwsB,mBACpByhB,EAAeE,aAAe8G,EAAelK,GAC7CkD,EAAejuB,gBAAkB,EACjCiuB,EAAehuB,eAAiB7e,EAAO4W,UAAUlT,WAAWowC,EAAiBnK,MAE7EkD,EAAeE,aAAe,GAC9BF,EAAejuB,gBAAkB,EACjCiuB,EAAehuB,eAAiB7e,EAAO4W,UAAUlT,WAAiB,MAEtE6Z,EAAWirB,sBAAsBqE,EAAgBC,EACpD,KAEF,CACH,MAAMnD,EAAuB3L,GAAM,EAAG6V,EAAevwC,OAAQm7B,GAAoBF,EAAWG,WAAWF,OACjGjhB,EAAyB3e,KAAKy2C,SAAS+H,GAA2Bvb,YAAYwb,GAC9ExQ,EAAiCqQ,EAAqBE,GAA2BC,GACvFxQ,EAAeE,aAAe8G,EAAelK,GAC7CkD,EAAejuB,gBAAkB,EACjCiuB,EAAehuB,eAAiB7e,EAAO4W,UAAUlT,WAAWowC,EAAiBnK,IAC7EpsB,EAAWirB,sBAAsBqE,EAAgBC,EACpD,CACJ,KAAM,CACH,MAAM4G,EAA4B,GAC5Bn2B,EAAyB3e,KAAKy2C,SAAS+H,GAA2Bvb,YAAYwb,GAC9ExQ,EAAiCqQ,EAAqBE,GAA2BC,GACvFxQ,EAAeE,aAAe/O,GAAM,EAAG0V,EAAmBjV,GAAoBF,EAAWG,WAAWF,OACpGjhB,EAAWirB,sBAAsBqE,EAAgBC,EACpD,KACE,CACH,MAAMvvB,EAAyB3e,KAAKy2C,SAAS+H,GAA2Bvb,YAAYwb,GACpF,IAAIgB,EAAoB5f,GAAoBF,EAAWG,WAAWF,MAElE,GAAI2c,GAA4B,GAAbkD,EAAgB,CAC/B9gC,EAAWgD,cAAe,GACtB66B,GAAeC,GAAeC,KAC9B+C,EAAY5f,GAAoBF,EAAWG,WAAWF,OAC1D,MAAM8f,EAAoCD,EAC1C9gC,EAAWW,SAAS2pB,kBAAoB7J,GAAM,EAAGh+B,EAAO2S,gBAAkB,EAAG2rC,GAC7E,IAAK,IAAI/0C,EAAYgU,EAAWW,SAAS0pB,cAActkC,OAAQiG,EAAIgU,EAAWW,SAAS2pB,kBAAmBt+B,IACtGgU,EAAWW,SAAS0pB,cAAcr+B,GAAK,IAAI28B,GAE/C,IAAK,IAAI38B,EAAY,EAAGA,EAAIgU,EAAWW,SAAS2pB,kBAAmBt+B,IAAK,CACpE,MAAMs7B,EAA4BtnB,EAAWW,SAAS0pB,cAAcr+B,GACpEs7B,EAAMlxB,KAAOqqB,GAAM,EAAC,EAAqBS,GAAoBF,EAAWG,WAAWF,OACnFqG,EAAMsB,KAAOnI,GAAM,EAAGh+B,EAAOmS,gBAAiBssB,GAAoBF,EAAWG,WAAWF,OACxFqG,EAAMuB,KAAOpI,GAAM,EAAGh+B,EAAOwS,gBAAiBisB,GAAoBF,EAAWG,WAAWF,MAC3F,CACD,IAAK,IAAIj1B,EAAYgU,EAAWW,SAAS2pB,kBAAmBt+B,EAAI+0C,EAA2B/0C,IACvFi1B,GAAa,EAKjB,GADAjhB,EAAW4tB,aAAa,GAAK5tB,EAAWW,SACnCk9B,IAAgBa,GAAgBZ,IAAgBW,GAAeV,EAAc,CAC9E,IAAInD,EAAkC1Z,GAAoBF,EAAWG,WAAWF,OAAiB,EAAMC,GAAoBF,EAAWG,WAAWF,MACjJ,IAAK,IAAI3G,EAAY,EAAGA,EAAI73B,EAAO6S,iBAAmB,EAAGglB,IACrD,GAAIsgB,EAA0B,GAAKtgB,EAAI,CAEnC,MAAM0mB,EAA6C9f,GAAoBF,EAAWG,WAAWF,MACvD,MAAlCjhB,EAAW4tB,aAAatT,EAAI,KAC5Bta,EAAW4tB,aAAatT,EAAI,GAAK,IAAI8P,IACzCpqB,EAAW4tB,aAAatT,EAAI,GAAIgQ,kBAAoB7J,GAAM,EAAGh+B,EAAO2S,gBAAkB,EAAG4rC,GACzF,IAAK,IAAIh1C,EAAYgU,EAAW4tB,aAAatT,EAAI,GAAI+P,cAActkC,OAAQiG,EAAIgU,EAAW4tB,aAAatT,EAAI,GAAIgQ,kBAAmBt+B,IAC9HgU,EAAW4tB,aAAatT,EAAI,GAAI+P,cAAcr+B,GAAK,IAAI28B,GAE3D,IAAK,IAAI38B,EAAY,EAAGA,EAAIgU,EAAW4tB,aAAatT,EAAI,GAAIgQ,kBAAmBt+B,IAAK,CAChF,MAAMs7B,EAA4BtnB,EAAW4tB,aAAatT,EAAI,GAAI+P,cAAcr+B,GAChFs7B,EAAMlxB,KAAOqqB,GAAM,EAAC,EAAqBS,GAAoBF,EAAWG,WAAWF,OACnFqG,EAAMsB,KAAOnI,GAAM,EAAGh+B,EAAOmS,gBAAiBssB,GAAoBF,EAAWG,WAAWF,OACxFqG,EAAMuB,KAAOpI,GAAM,EAAGh+B,EAAOwS,gBAAiBisB,GAAoBF,EAAWG,WAAWF,MAC3F,CACD,IAAK,IAAIj1B,EAAYgU,EAAW4tB,aAAatT,EAAI,GAAIgQ,kBAAmBt+B,EAAIg1C,EAAoCh1C,IAC5Gi1B,GAAa,CAEpB,CAER,CACJ,MAEGjhB,EAAWgD,cAAe,EAC1BhD,EAAWwtB,kBAAoB/M,GAAM,EAAGh+B,EAAO8S,qBAAsB2rB,GAAoBF,EAAWG,WAAWF,OAC/GjhB,EAAWytB,mBAAqBhN,GAAM,EAAGh+B,EAAO+S,sBAAuB0rB,GAAoBF,EAAWG,WAAWF,MAExH,CACH,MACF,SACI,GAAI8c,EACA,GAAIS,EAAa,CAEb,MAAMyC,EAA8BlgB,GAAkBC,EAAYC,GAClEA,GAAa,EACb,MAAMigB,EAAwBlgB,EAAWoc,MAAMnc,EAAWA,EAAYggB,GACtEhgB,GAAaggB,EAcb,MAAME,EAAwC3D,KAAKC,MAAM2D,KAAKF,IAC9D,IAAK,MAAMG,KAASF,EAAgB,CAChC,MAAMzH,EAAuB2H,EAAe,QACtC3F,EAA0B2F,EAAkB,WAC5CC,EAAuBD,EAAY,KACnCrhC,EAAyB3e,KAAKy2C,SAAS4B,GAAcpV,YAAYoX,GACvE17B,EAAWitB,4BAA8BqU,EAAkC,4BAC3EthC,EAAWktB,kBAAoBoU,EAAwB,kBACvDthC,EAAWmtB,gBAAkBmU,EAAsB,gBACnDthC,EAAWotB,iBAAmBkU,EAAuB,iBACrDthC,EAAWqtB,sBAAwBiU,EAA4B,sBAC/DthC,EAAWstB,oBAAsBgU,EAA0B,mBAE9D,CACJ,KAAM,CAGH,MAAMxG,EAA0B5Z,GAAoBF,EAAWG,WAAWF,MACpEgM,EAAuCsU,QAA0B,EAAlBzG,GAC/C1N,EAA2B0N,GAAmB,EAC9CC,EAA6B7Z,GAAoBF,EAAWG,WAAWF,MACvEoM,EAAiCkU,QAA6B,EAArBxG,GAEzC7N,EAA4BnM,GAAkBC,EAAYC,GAChEA,GAAa,EACb,MAAMkM,EAA0BpM,GAAkBC,EAAYC,GAC9DA,GAAa,EACb,MAAMqM,EAA8BvM,GAAkBC,EAAYC,GAClEA,GAAa,EACb,MAAMjhB,EAAyB3e,KAAKy2C,SAAS+H,GAA2Bvb,YAAYwb,GACpF9/B,EAAWitB,4BAA8BA,EACzCjtB,EAAWktB,kBAAoBA,EAC/BltB,EAAWmtB,gBAAkBA,EAC7BntB,EAAWotB,iBAAmBA,EAC9BptB,EAAWqtB,sBAAwBA,EACnCrtB,EAAWstB,oBAAsBA,CAEpC,MAEA,GAAIwQ,IAAgBW,GAAcE,EACmC,iBAAlE55C,SAAS27C,IAAIhD,UAAU34C,SAAS27C,IAAI36C,OAAS,IAAIy5C,gBAC7Cz6C,SAAS47C,SAASC,KAAO77C,SAAS27C,IAAI7oC,OAAO,kBAC7C8oC,SAASE,UAIjBx/C,KAAKy2C,SAAS+H,GAA2Bvb,YAAYwb,GAAyBt9C,SAAWi+B,GAAM,EAAGh+B,EAAOC,UAAUqD,OAAQm7B,GAAoBF,EAAWG,WAAWF,MAAgB,UAClL,GAAK6d,GAAclB,GAAkBC,GAAea,GAAgBD,GAAcX,EAAe,CACpG,MAAM1H,EAA+B,EAC/Bp2B,EAAyB3e,KAAKy2C,SAAS+H,GAA2Bvb,YAAYwb,GAC9ExQ,EAAiCqQ,EAAqBE,GAA2BC,GACvFxQ,EAAejuB,gBAAkBof,GAAM,EAAG2V,EAAsBlV,GAAoBF,EAAWG,WAAWF,OAC1GjhB,EAAWirB,sBAAsBqE,EAAgBC,EAEpD,CAGH,MACF,SAAmC,CAC/B,MAAMvvB,EAAyB3e,KAAKy2C,SAAS+H,GAA2Bvb,YAAYwb,GAC9E0B,EAA8B,CAAC,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,IAC7I,GAAK1C,GAAclB,GAAiBc,GAAcb,GAAiBY,GAAcX,EAI7E,GAAmB,GAAf99B,EAAW5J,KACX,IAAK,IAAIpK,EAAY,EAAGA,EAAIvJ,EAAOsY,UAAW/O,IAAK,CAC/C,IAAIy1C,EAAavgB,GAAoBF,EAAWG,WAAWF,OACvDsd,GAAaT,IAAkBA,IAAgBC,KAAe0D,EAAKD,EAAkBC,IACzFzhC,EAAW+uB,iBAAiB/iC,GAAK2rC,GAAK0F,GAAyBoE,GAAIx7C,KACtE,KACE,CAIH,MAAMqpC,EAAiCqQ,EAAqBE,GAA2BC,GACvF,IAAI2B,EAAavgB,GAAoBF,EAAWG,WAAWF,OACvDsd,GAAaT,IAAkBA,IAAgBC,KAAe0D,EAAKD,EAAkBC,IACzFnS,EAAehuB,eAAiBq2B,GAAK0F,GAAyBoE,GAC9DzhC,EAAWirB,sBAAsBqE,EAAgBC,EACpD,MAGD,IAAK,IAAIvjC,EAAY,EAAGA,EAAIvJ,EAAOsY,UAAW/O,IAAK,CAC/C,IAAIy1C,EAAavgB,GAAoBF,EAAWG,WAAWF,OACvDsd,GAAaT,IAAkBA,IAAgBC,KAAe0D,EAAKD,EAAkBC,IACzFzhC,EAAW+uB,iBAAiB/iC,GAAKy0B,GAAM,EAAGh+B,EAAO4W,UAAUtT,OAAQ07C,EACtE,CAER,CAAC,MACF,QAA6B,CACzB,MAAMzhC,EAAyB3e,KAAKy2C,SAAS+H,GAA2Bvb,YAAYwb,GAQpF,GAPA9/B,EAAWyC,WAAage,GAAM,EAAGh+B,EAAO6X,kBAAmB,EAAkB,EAAG4mB,GAAoBF,EAAWG,WAAWF,OACtH2c,IAEA59B,EAAWyC,WAAanW,KAAKe,MAAMf,KAAKiB,IAAI,IAAM,EAAIyS,EAAWyC,YAAchgB,EAAO8X,qBAAuB9X,EAAO6X,kBAInHwkC,GAAclB,GAAiBc,GAAcb,GAAiBY,GAAcX,EAAc,CAC3F,MAAM0D,EAA8B,CAAC,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,IACvIlS,EAAiCqQ,EAAqBE,GAA2BC,GACvF,IAAI2B,EAAavgB,GAAoBF,EAAWG,WAAWF,OACvDsd,GAAaT,IAAkBA,IAAgBC,KAAe0D,EAAKD,EAAkBC,IACzFnS,EAAe1sB,cAAgB+0B,GAAK0F,GAAyBoE,GAC7DzhC,EAAWirB,sBAAsBqE,EAAgBC,EACpD,CACJ,CAAC,MACF,QACmCluC,KAAKy2C,SAAS+H,GAA2Bvb,YAAYwb,GACzE39B,cAAgBse,GAAM,EAAGh+B,EAAO6Z,mBAAoB4kB,GAAoBF,EAAWG,WAAWF,OAC3G,MACF,SACI,GAAK6d,GAAclB,GAAkBC,GAAea,GAAgBD,GAAcX,EAAe,CAE7F,MAAMxO,EAAiB,CACnB,CAAE1uB,WAAY,YAAaC,cAAe,EAAKnL,cAAe,GAC9D,CAAEkL,WAAY,SAAUC,cAAe,EAAKnL,cAAe,GAC3D,CAAEkL,WAAY,SAAUC,cAAe,KAAOnL,cAAe,GAC7D,CAAEkL,WAAY,mBAAoBC,cAAe,KAAOnL,cAAe,GACvE,CAAEkL,WAAY,SAAUC,cAAe,IAAMnL,aAAc,GAC3D,CAAEkL,WAAY,SAAUC,cAAe,EAAKnL,aAAc,IAC1D,CAAEkL,WAAY,SAAUC,cAAe,MAAQnL,aAAc,IAC7D,CAAEkL,WAAY,SAAUC,cAAe,IAAMnL,aAAc,IAC3D,CAAEkL,WAAY,mBAAoBC,cAAe,KAAOnL,cAAe,IAE3E,GAAI8oC,GAAeZ,EAAa,CAC5B,MAAMlE,EAAuBxY,GAAoBF,EAAWG,WAAWF,MACjEvgB,EAAW4uB,EAAe7O,GAAM,EAAG6O,EAAevpC,OAAQm7B,GAAoBF,EAAWG,WAAWF,QACpGjhB,EAAyB3e,KAAKy2C,SAAS4B,GAAcpV,YAAY,GACvEtkB,EAAW8tB,OAAS1G,GAAMmK,uBAAuB7wB,EAASG,eAC1Db,EAAW+tB,QAAU3G,GAAMoK,sBAAsB9wB,EAAShL,cAC1DsK,EAAWY,WAAane,EAAOoT,YAAY1P,WAAWua,EAASE,YAAY3a,MACvE+Z,EAAWY,YAAcne,EAAOoT,YAAY1P,WAAmB,OAAEF,QAEjE+Z,EAAW5P,SAAW,KAE7B,MAAM,GAAIuuC,GAAaf,EACpB,IAAK,IAAIlE,EAAuB,EAAGA,EAAer4C,KAAKg2B,kBAAmBqiB,IACtE,IAAK,MAAM15B,KAAc3e,KAAKy2C,SAAS4B,GAAcpV,YAAa,CAC9D,MAAM5jB,EAAW4uB,EAAe7O,GAAM,EAAG6O,EAAevpC,OAAQm7B,GAAoBF,EAAWG,WAAWF,QAC1GjhB,EAAW8tB,OAAS1G,GAAMmK,uBAAuB7wB,EAASG,eAC1Db,EAAW+tB,QAAU3G,GAAMoK,sBAAsB9wB,EAAShL,cAC1DsK,EAAWY,WAAane,EAAOoT,YAAY1P,WAAWua,EAASE,YAAY3a,MACvE+Z,EAAWY,YAAcne,EAAOoT,YAAY1P,WAAmB,OAAEF,QAEjE+Z,EAAW5P,SAAW,KAE7B,MAEF,GAAKquC,IAAeX,IAAgBC,GAAiBH,EAAa,CACrE,MAAMl9B,EAAW4uB,EAAe7O,GAAM,EAAG6O,EAAevpC,OAAQm7B,GAAoBF,EAAWG,WAAWF,QACpGjhB,EAAyB3e,KAAKy2C,SAAS+H,GAA2Bvb,YAAYwb,GACpF9/B,EAAW8tB,OAAS1G,GAAMmK,uBAAuB7wB,EAASG,eAC1Db,EAAW+tB,QAAU3G,GAAMoK,sBAAsB9wB,EAAShL,cAC1DsK,EAAWY,WAAane,EAAOoT,YAAY1P,WAAWua,EAASE,YAAY3a,MACvE+Z,EAAWY,YAAcne,EAAOoT,YAAY1P,WAAmB,OAAEF,QAEjE+Z,EAAW5P,SAAW,KAE7B,KAAM,CACH,MAAMsQ,EAAW4uB,EAAe7O,GAAM,EAAG6O,EAAevpC,OAAQm7B,GAAoBF,EAAWG,WAAWF,QACpGjhB,EAAyB3e,KAAKy2C,SAAS+H,GAA2Bvb,YAAYwb,GACpF9/B,EAAW8tB,OAAS1G,GAAMmK,uBAAuB7wB,EAASG,eAC1Db,EAAW+tB,QAAU3G,GAAMoK,sBAAsB9wB,EAAShL,cAC1DsK,EAAWY,WAAane,EAAOoT,YAAY1P,WAAWua,EAASE,YAAY3a,MAGvEi7B,GAAoBF,EAAWG,WAAWF,MAAgB,IAE1DjhB,EAAWmuB,eAAgB,GAG/BnuB,EAAWoD,sBAAsB8d,GAAoBF,EAAWG,WAAWF,OAEvEjhB,EAAWY,YAAcne,EAAOoT,YAAY1P,WAAmB,OAAEF,OAAS+Z,EAAWoD,uBAErFpD,EAAW5P,SAAW,KAE7B,CACJ,KAAM,CACH,MAAM4P,EAAyB3e,KAAKy2C,SAAS+H,GAA2Bvb,YAAYwb,GACpF9/B,EAAW8tB,OAASrN,GAAM,EAAGh+B,EAAOgT,YAAayrB,GAAoBF,EAAWG,WAAWF,OAC3FjhB,EAAW+tB,QAAUtN,GAAM,EAAGh+B,EAAOiT,aAAa3P,OAAQm7B,GAAoBF,EAAWG,WAAWF,QAChG4c,GAAaC,GAAaC,KAC1B/9B,EAAWoD,sBAAsB8d,GAAoBF,EAAWG,WAAWF,MAClF,CACH,MACF,QACI,GAAK6d,GAAclB,GAAkBC,GAAea,GAAgBD,GAAcX,EAC9E,GAAIc,GAAehB,EACf,GAAIY,GAAeZ,EAAa,CAC5B,MAAM8D,EAA0B,CAAC,EAAG,EAAG,EAAG,GACpCC,EAA4B,CAAC,OAAQ,OAAQ,OAAQ,YACrDjI,EAAuBxY,GAAoBF,EAAWG,WAAWF,MACjE9jB,EAAiBsjB,GAAM,EAAGihB,EAAc37C,OAAQm7B,GAAoBF,EAAWG,WAAWF,OAC1FjhB,EAAyB3e,KAAKy2C,SAAS4B,GAAcpV,YAAY,GACjEgL,EAAiCqQ,EAAqBjG,GAAc,GAC1E15B,EAAWkB,QAAUwgC,EAAcvkC,GACEoB,MAAjC+wB,EAAehuB,gBAAiE,GAAlCguB,EAAehuB,eAAelL,OAE5Ek5B,EAAehuB,eAAiB7e,EAAO4W,UAAUlT,WAAWw7C,EAAgBxkC,IAC5E6C,EAAWirB,sBAAsBqE,EAAgBC,IAEjDvvB,EAAWkB,SAAWze,EAAO0T,SAAShQ,WAAiB,KAAEF,QAEzD+Z,EAAW5P,SAAW,IAE7B,MAAM,GAAIuuC,GAAaf,EAAa,CACjC,MAAM8D,EAA0B,CAAC,EAAG,EAAG,EAAG,EAAG,EAAG,GAC1CC,EAA4B,CAAC,OAAQ,OAAQ,OAAQ,OAAQ,WAAY,YAC/E,IAAK,IAAIjI,EAAuB,EAAGA,EAAer4C,KAAKg2B,kBAAmBqiB,IACtE,IAAK,IAAI1tC,EAAY,EAAGA,EAAI3K,KAAKy2C,SAAS4B,GAAcpV,YAAYv+B,OAAQiG,IAAK,CAC7E,MAAMmR,EAAiBsjB,GAAM,EAAGihB,EAAc37C,OAAQm7B,GAAoBF,EAAWG,WAAWF,OAC1FjhB,EAAyB3e,KAAKy2C,SAAS4B,GAAcpV,YAAYt4B,GACjEsjC,EAAiCqQ,EAAqBjG,GAAc1tC,GAC1EgU,EAAWkB,QAAUwgC,EAAcvkC,GACEoB,MAAjC+wB,EAAehuB,gBAAiE,GAAlCguB,EAAehuB,eAAelL,OAE5Ek5B,EAAehuB,eAAiB7e,EAAO4W,UAAUlT,WAAWw7C,EAAgBxkC,IAC5E6C,EAAWirB,sBAAsBqE,EAAgBC,IAEjDvvB,EAAWkB,SAAWze,EAAO0T,SAAShQ,WAAiB,KAAEF,QAEzD+Z,EAAW5P,SAAW,MAEC,GAAtBygC,GAA6BgN,GAAea,GAAgBD,GAAcX,KAAmBz8C,KAAKs4C,kBAAkBD,KAErH15B,EAAW5P,SAAW,EACtB4P,EAAWiC,OAAS4uB,EAE3B,CAER,KAAM,CACH,MAAM6Q,EAA0B,CAAC,EAAG,EAAG,EAAG,EAAG,EAAG,GAC1CC,EAA4B,CAAC,OAAQ,OAAQ,OAAQ,OAAQ,WAAY,YACzExkC,EAAiBsjB,GAAM,EAAGihB,EAAc37C,OAAQm7B,GAAoBF,EAAWG,WAAWF,OAC1FjhB,EAAyB3e,KAAKy2C,SAAS+H,GAA2Bvb,YAAYwb,GAC9ExQ,EAAiCqQ,EAAqBE,GAA2BC,GACvF9/B,EAAWkB,QAAUwgC,EAAcvkC,GACEoB,MAAjC+wB,EAAehuB,gBAAiE,GAAlCguB,EAAehuB,eAAelL,OAE5Ek5B,EAAehuB,eAAiB7e,EAAO4W,UAAUlT,WAAWw7C,EAAgBxkC,IAC5E6C,EAAWirB,sBAAsBqE,EAAgBC,IAEjDvvB,EAAWkB,SAAWze,EAAO0T,SAAShQ,WAAiB,KAAEF,QAEzD+Z,EAAW5P,SAAW,MAEA,GAAtBygC,GAA6BgN,GAAea,GAAgBD,GAAcX,KAE1E99B,EAAW5P,SAAW,EACtB4P,EAAWiC,OAAS4uB,EAE3B,KACE,CACH,MAAM7wB,EAAyB3e,KAAKy2C,SAAS+H,GAA2Bvb,YAAYwb,GAC9E5+B,EAAkBuf,GAAM,EAAGh+B,EAAO0T,SAASpQ,OAAS,EAAGm7B,GAAoBF,EAAWG,WAAWF,OACvGjhB,EAAWkB,QAAUA,EACjBlB,EAAWkB,SAAWze,EAAO0T,SAAShQ,WAAiB,KAAEF,QAEzD+Z,EAAW5P,SAAW,KAGtB8Q,GAAWze,EAAO0T,SAASpQ,QAC3Bia,EAAWwD,aAAeid,GAAM,EAAGh+B,EAAOob,WAAW1X,WAAW,iBAAiB4X,UAAY,EAAGmjB,GAAoBF,EAAWG,WAAWF,OAAiB,GAC3JjhB,EAAW0D,aAAe+c,GAAM,EAAGh+B,EAAOob,WAAW1X,WAAW,iBAAiB4X,UAAY,EAAGmjB,GAAoBF,EAAWG,WAAWF,OAC1IjhB,EAAWyD,aAAegd,GAAM,EAAGh+B,EAAOob,WAAW1X,WAAW,iBAAiB4X,UAAY,EAAGmjB,GAAoBF,EAAWG,WAAWF,OAAiB,EAC3JjhB,EAAW2D,YAAc8c,GAAM,EAAGh+B,EAAO6T,aAAavQ,OAAQm7B,GAAoBF,EAAWG,WAAWF,OACxGjhB,EAAW5P,SAAW,MAItB4P,EAAWwD,aAAe/gB,EAAO0T,SAAS6J,EAAWkB,SAASnS,UAC9DiR,EAAW0D,aAAe,GAC1B1D,EAAWyD,aAAehhB,EAAO0T,SAAS6J,EAAWkB,SAAS7K,WAAa,EAC3E2J,EAAW2D,YAAclhB,EAAO0T,SAAS6J,EAAWkB,SAAS9K,KAEpE,CAIP,MACF,QAEI,GAAKynC,GAAea,GAAgBD,GAAcX,EAAc,CAC5D,MAAM99B,EAAyB3e,KAAKy2C,SAAS+H,GAA2Bvb,YAAYwb,GACpF9/B,EAAWsD,cAAgBmd,GAAM,EAAGh+B,EAAOob,WAAW1X,WAAW,aAAa4X,UAAY,EAAGmjB,GAAoBF,EAAWG,WAAWF,OACvIjhB,EAAWqD,iBAAiB6d,GAAoBF,EAAWG,WAAWF,KACzE,CAIH,MACF,SACI,GAAIud,GAAeZ,EAAa,CAC5B,MAAMlE,EAAuBxY,GAAoBF,EAAWG,WAAWF,MACvE5/B,KAAKy2C,SAAS4B,GAAcpV,YAAY,GAAGvjB,OAAS0f,GAAM,EAAGh+B,EAAOiU,QAAQ3Q,OAAQm7B,GAAoBF,EAAWG,WAAWF,MACjI,MAAM,GAAI0d,GAAaf,EACpB,IAAK,IAAIlE,EAAuB,EAAGA,EAAer4C,KAAKg2B,kBAAmBqiB,IACtE,IAAK,MAAM15B,KAAc3e,KAAKy2C,SAAS4B,GAAcpV,YAAa,CAC9D,MAAMsd,EAAwB1gB,GAAoBF,EAAWG,WAAWF,MACxE,IAAIlgB,EAAiB0f,GAAM,EAAGh+B,EAAOiU,QAAQ3Q,OAAQ67C,GAChC,GAAjBA,IAEA7gC,EAAS,EACTf,EAAWc,MAAQ,GAEvBd,EAAWe,OAASA,CACvB,MAEF,GAAI69B,GAAehB,EAAa,CACnC,MAAMgE,EAAwB1gB,GAAoBF,EAAWG,WAAWF,MACxE,IAAIlgB,EAAiB0f,GAAM,EAAGh+B,EAAOiU,QAAQ3Q,OAAQ67C,GAChC,GAAjBA,IAEA7gC,EAAS,EACT1f,KAAKy2C,SAAS+H,GAA2Bvb,YAAYwb,GAAyBh/B,MAAQ,GAE1Fzf,KAAKy2C,SAAS+H,GAA2Bvb,YAAYwb,GAAyB/+B,OAASA,CAC1F,MACG1f,KAAKy2C,SAAS+H,GAA2Bvb,YAAYwb,GAAyB/+B,OAAS0f,GAAM,EAAGh+B,EAAOiU,QAAQ3Q,OAAQm7B,GAAoBF,EAAWG,WAAWF,OAEvK,MACF,QACI,GAAK6d,GAAclB,GAAkBC,GAAea,GAAgBD,GAAcX,EAAe,CAC7F,MAAM99B,EAAyB3e,KAAKy2C,SAAS+H,GAA2Bvb,YAAYwb,GACpF9/B,EAAWc,MAAQ2f,GAAM,EAAGh+B,EAAOyV,OAAOnS,OAAQm7B,GAAoBF,EAAWG,WAAWF,OACxFjhB,EAAWc,OAASre,EAAOyV,OAAO/R,WAAyB,aAAEF,QAE7D+Z,EAAW5P,SAAW,KAE7B,CAGH,MACF,SAA0B,CACtB,MAAM4P,EAAyB3e,KAAKy2C,SAAS+H,GAA2Bvb,YAAYwb,GACpF,GAAKhB,GAAclB,GAAkBC,GAAea,GAAgBD,GAAcX,EAAe,CAC7F99B,EAAW5P,QAAkE,KAAvD8wB,GAAoBF,EAAWG,WAAWF,MACtC,GAAtB4P,GAA8BgN,GAAea,GAAgBD,GAAcX,EAGpE/sC,EAAqBiP,EAAW5P,WACvC4P,EAAWiC,OAAS4uB,GAFpB7wB,EAAW5P,UAAW,EAM1B4P,EAAW5P,SAAW,EAElB4P,EAAWkB,SAAWze,EAAO0T,SAAShQ,WAAiB,KAAEF,QAEzD+Z,EAAW5P,SAAW,KAEtB4P,EAAWkuB,QAAUzrC,EAAOgZ,eAE5BuE,EAAW5P,SAAW,KAEtB4P,EAAWouB,QACXpuB,EAAW5P,SAAW,EAEtB4P,EAAW5P,UAAW,EAI1B,MAAMk/B,EAAiCqQ,EAAqBE,GAA2BC,GACvF9/B,EAAWirB,sBAAsBqE,EAAgBC,EACpD,KAAM,CAKH,GAFAvvB,EAAW5P,QAAW8wB,GAAoBF,EAAWG,WAAWF,OAAiB,EAAMC,GAAoBF,EAAWG,WAAWF,MAE7HxwB,EAAyBuP,EAAW5P,SAAU,CAC9C,IAAI0wC,EAAoB5f,GAAoBF,EAAWG,WAAWF,MAClE,GAAI2c,GAA4B,GAAbkD,EAAgB,CAC/B9gC,EAAWgE,gBAAiB,GACxB65B,GAAeC,GAAeC,KAC9B+C,EAAY5f,GAAoBF,EAAWG,WAAWF,OAC1DjhB,EAAWgC,WAAWsoB,kBAAoB7J,GAAM,EAAGh+B,EAAO2S,gBAAkB,EAAG0rC,GAC/E,IAAK,IAAI90C,EAAYgU,EAAWgC,WAAWqoB,cAActkC,OAAQiG,EAAIgU,EAAWgC,WAAWsoB,kBAAmBt+B,IAC1GgU,EAAWgC,WAAWqoB,cAAcr+B,GAAK,IAAI28B,GAEjD,IAAK,IAAI38B,EAAY,EAAGA,EAAIgU,EAAWgC,WAAWsoB,kBAAmBt+B,IAAK,CACtE,MAAMs7B,EAA4BtnB,EAAWgC,WAAWqoB,cAAcr+B,GACtEs7B,EAAMlxB,KAAOqqB,GAAM,EAAC,EAAqBS,GAAoBF,EAAWG,WAAWF,OACnFqG,EAAMsB,KAAOnI,GAAM,EAAGh+B,EAAOmS,gBAAiBssB,GAAoBF,EAAWG,WAAWF,OACxFqG,EAAMuB,KAAOpI,GAAM,EAAGh+B,EAAOwS,gBAAiBisB,GAAoBF,EAAWG,WAAWF,MAC3F,CACD,IAAK,IAAIj1B,EAAYgU,EAAWgC,WAAWsoB,kBAAmBt+B,EAAI80C,EAAW90C,IACzEi1B,GAAa,EAKjB,GADAjhB,EAAW6tB,eAAe,GAAK7tB,EAAWgC,WACrC67B,IAAgBa,GAAU,GAAkB,EAAoB,CACjE,IAAI9D,EAAkC1Z,GAAoBF,EAAWG,WAAWF,OAAiB,EAAMC,GAAoBF,EAAWG,WAAWF,MACjJ,IAAK,IAAI3G,EAAY,EAAGA,EAAI73B,EAAO6S,iBAAmB,EAAGglB,IACrD,GAAIsgB,EAA0B,GAAKtgB,EAAI,CAEnC,MAAM0mB,EAA6C9f,GAAoBF,EAAWG,WAAWF,MACrD,MAApCjhB,EAAW6tB,eAAevT,EAAI,KAC9Bta,EAAW6tB,eAAevT,EAAI,GAAK,IAAI8P,IAC3CpqB,EAAW6tB,eAAevT,EAAI,GAAIgQ,kBAAoB7J,GAAM,EAAGh+B,EAAO2S,gBAAkB,EAAG4rC,GAC3F,IAAK,IAAIh1C,EAAYgU,EAAW6tB,eAAevT,EAAI,GAAI+P,cAActkC,OAAQiG,EAAIgU,EAAW6tB,eAAevT,EAAI,GAAIgQ,kBAAmBt+B,IAClIgU,EAAW6tB,eAAevT,EAAI,GAAI+P,cAAcr+B,GAAK,IAAI28B,GAE7D,IAAK,IAAI38B,EAAY,EAAGA,EAAIgU,EAAW6tB,eAAevT,EAAI,GAAIgQ,kBAAmBt+B,IAAK,CAClF,MAAMs7B,EAA4BtnB,EAAW6tB,eAAevT,EAAI,GAAI+P,cAAcr+B,GAClFs7B,EAAMlxB,KAAOqqB,GAAM,EAAC,EAAqBS,GAAoBF,EAAWG,WAAWF,OACnFqG,EAAMsB,KAAOnI,GAAM,EAAGh+B,EAAOmS,gBAAiBssB,GAAoBF,EAAWG,WAAWF,OACxFqG,EAAMuB,KAAOpI,GAAM,EAAGh+B,EAAOwS,gBAAiBisB,GAAoBF,EAAWG,WAAWF,MAC3F,CACD,IAAK,IAAIj1B,EAAYgU,EAAW6tB,eAAevT,EAAI,GAAIgQ,kBAAmBt+B,EAAIg1C,EAAoCh1C,IAC9Gi1B,GAAa,CAEpB,CAER,CACJ,MACGjhB,EAAWgE,gBAAiB,EAC5BhE,EAAWgC,WAAWyiB,QACtBzkB,EAAW0tB,oBAAsBjN,GAAM,EAAGh+B,EAAO8S,qBAAsB2rB,GAAoBF,EAAWG,WAAWF,OACjHjhB,EAAW2tB,qBAAuBlN,GAAM,EAAGh+B,EAAO+S,sBAAuB0rB,GAAoBF,EAAWG,WAAWF,MAG1H,CACG9wB,EAAyB6P,EAAW5P,WACpC4P,EAAWY,WAAa6f,GAAM,EAAGh+B,EAAOoT,YAAY9P,OAAQm7B,GAAoBF,EAAWG,WAAWF,QAEtG5wB,EAAoB2P,EAAW5P,WAC/B4P,EAAWc,MAAQ2f,GAAM,EAAGh+B,EAAOyV,OAAOnS,OAAQm7B,GAAoBF,EAAWG,WAAWF,OAExFjhB,EAAWc,OAASre,EAAOyV,OAAO/R,WAAqB,SAAEF,QAAU43C,GAAaC,GAAaC,KAC7F/9B,EAAWsD,cAAgB4d,GAAoBF,EAAWG,WAAWF,MACrEjhB,EAAWqD,iBAAkB6d,GAAoBF,EAAWG,WAAWF,QAG3E3wB,EAAyB0P,EAAW5P,WACpC4P,EAAWiuB,WAAaxN,GAAM,EAAGh+B,EAAO8Y,gBAAiB2lB,GAAoBF,EAAWG,WAAWF,QAEnG1wB,EAAqByP,EAAW5P,WAC5BwtC,GAEA59B,EAAWkuB,OAASzN,GAAMh+B,EAAOkZ,UAAWlZ,EAAOiZ,UAAY,EAAGwlB,GAAoBF,EAAWG,WAAWF,OAC5GjhB,EAAWkuB,OAAS5hC,KAAKe,OAAO2S,EAAWkuB,OAAS,IAAM5hC,KAAKC,IAAIyT,EAAWkuB,OAAS,GAAK,GAAK,EAAIzrC,EAAOgZ,eAE5GuE,EAAWkuB,OAASzN,GAAMh+B,EAAOkZ,UAAWlZ,EAAOiZ,UAAY,GAAIwlB,GAAoBF,EAAWG,WAAWF,OAAiB,GAAKC,GAAoBF,EAAWG,WAAWF,QAGjLzwB,EAAsBwP,EAAW5P,WACjC4P,EAAWkB,QAAUuf,GAAM,EAAGh+B,EAAO0T,SAASpQ,OAAS,EAAGm7B,GAAoBF,EAAWG,WAAWF,OAGhGjhB,EAAWkB,SAAWze,EAAO0T,SAASpQ,SAAW83C,GAAeC,GAAeC,IAC/E/9B,EAAWwD,aAAeid,GAAM,EAAGh+B,EAAOob,WAAW1X,WAAW,iBAAiB4X,UAAY,EAAGmjB,GAAoBF,EAAWG,WAAWF,OAAiB,GAC3JjhB,EAAW0D,aAAe+c,GAAM,EAAGh+B,EAAOob,WAAW1X,WAAW,iBAAiB4X,UAAY,EAAGmjB,GAAoBF,EAAWG,WAAWF,OAC1IjhB,EAAWyD,aAAegd,GAAM,EAAGh+B,EAAOob,WAAW1X,WAAW,iBAAiB4X,UAAY,EAAGmjB,GAAoBF,EAAWG,WAAWF,OAC1IjhB,EAAW2D,YAAc8c,GAAM,EAAGh+B,EAAO6T,aAAavQ,OAAQm7B,GAAoBF,EAAWG,WAAWF,SAIxGjhB,EAAWwD,aAAe/gB,EAAO0T,SAAS6J,EAAWkB,SAASnS,UAC9DiR,EAAW0D,aAAe,GAC1B1D,EAAWyD,aAAehhB,EAAO0T,SAAS6J,EAAWkB,SAAS7K,WAAa,EAC3E2J,EAAW2D,YAAclhB,EAAO0T,SAAS6J,EAAWkB,SAAS9K,OAGjE1F,EAAyBsP,EAAW5P,WACpC4P,EAAWwC,WAAaie,GAAM,EAAGh+B,EAAO4Z,gBAAiB6kB,GAAoBF,EAAWG,WAAWF,QAC9F4c,IAAgBa,GAAeZ,GAAeC,KAC/C/9B,EAAWouB,UAAUlN,GAAoBF,EAAWG,WAAWF,QAEnEtwB,EAAyBqP,EAAW5P,WACpC4P,EAAWquB,eAAiB5N,GAAM,EAAGh+B,EAAO+Z,oBAAqB0kB,GAAoBF,EAAWG,WAAWF,OAC3GjhB,EAAWuC,uBAAyBke,GAAM,EAAGh+B,EAAOia,4BAA6BwkB,GAAoBF,EAAWG,WAAWF,QAE3HrwB,EAAsBoP,EAAW5P,WAG7B4P,EAAW4D,IAAM6c,GAAM,EAAGh+B,EAAO4U,OAAS,EAF1CumC,EAE6CtxC,KAAKe,MAAM6zB,GAAoBF,EAAWG,WAAWF,OAAkBx+B,EAAa,OAAI,KAGvFy+B,GAAoBF,EAAWG,WAAWF,OAAiB,GAAKC,GAAoBF,EAAWG,WAAWF,QAIvJ4c,IAAgBU,GAAcT,GAAeC,KAC9C/9B,EAAW6D,SAAWqd,GAAoBF,EAAWG,WAAWF,QAEpEpwB,EAAqBmP,EAAW5P,WAG5B4P,EAAW0C,OAFXk7B,EAEsH,EAAlGnd,GAAM,EAAIh+B,EAAO8U,YAAc,EAAK,EAAG2pB,GAAoBF,EAAWG,WAAWF,OAGjFR,GAAM,EAAGh+B,EAAO8U,YAAa2pB,GAAoBF,EAAWG,WAAWF,QAG/FnwB,EAAmBkP,EAAW5P,WAC9B4P,EAAWoE,YAAcqc,GAAM,EAAGh+B,EAAOyP,iBAAkBgvB,GAAoBF,EAAWG,WAAWF,OACrGjhB,EAAWsuB,UAAY7N,GAAM,EAAGh+B,EAAOuP,eAAgBkvB,GAAoBF,EAAWG,WAAWF,QAEjGlwB,EAAqBiP,EAAW5P,WAE5B4P,EAAWiC,OAASwe,GAAM,EAAGh+B,EAAO8P,YADpCqrC,EACiDtxC,KAAKe,MAAM6zB,GAAoBF,EAAWG,WAAWF,MAAgBx+B,EAAO8P,YAAc,GAE1F2uB,GAAoBF,EAAWG,WAAWF,OAGtG,CAEDjhB,EAAW5P,SAAW,IACzB,CAAC,MACF,SACI,GAAIouC,GAAeZ,EAAa,CAC5B,MAAMlE,EAAuBxY,GAAoBF,EAAWG,WAAWF,MACxC5/B,KAAKy2C,SAAS4B,GAAcpV,YAAY,GAC5DvhB,OAASzW,KAAKe,MAAMozB,IAAOh+B,EAAOyU,YAAc,EAAG,EAA8D,GAA1DgqB,GAAoBF,EAAWG,WAAWF,OAC/G,MAAM,GAAI0d,GAAaf,EACpB,IAAK,IAAIlE,EAAuB,EAAGA,EAAer4C,KAAKg2B,kBAAmBqiB,IACtE,IAAK,MAAM15B,KAAc3e,KAAKy2C,SAAS4B,GAAcpV,YACjDtkB,EAAW+C,OAASzW,KAAKe,MAAMozB,IAAOh+B,EAAOyU,YAAc,EAAG,EAA8D,GAA1DgqB,GAAoBF,EAAWG,WAAWF,aAGjH,GAAI2d,GAAehB,EAAa,CACJv8C,KAAKy2C,SAAS+H,GAA2Bvb,YAAYwb,GACzE/8B,OAASzW,KAAKe,MAAMozB,IAAOh+B,EAAOyU,YAAc,EAAG,EAA8D,GAA1DgqB,GAAoBF,EAAWG,WAAWF,OAC/G,MAAM,GAAI2c,EAAa,CAEWv8C,KAAKy2C,SAAS+H,GAA2Bvb,YAAYwb,GACzE/8B,OAASzW,KAAKe,MAAMozB,IAAOh+B,EAAOyU,YAAc,EAAG,EAA8D,IAA1DgqB,GAAoBF,EAAWG,WAAWF,MAAuB,GACtI,KAAM,CAC4B5/B,KAAKy2C,SAAS+H,GAA2Bvb,YAAYwb,GAEzE/8B,OAASzW,KAAKe,MAAMozB,IAAOh+B,EAAOyU,YAAc,EAAGzU,EAAOyU,YAAc,EAAI,GAAKgqB,GAAoBF,EAAWG,WAAWF,OAAiB,EAAMC,GAAoBF,EAAWG,WAAWF,OAAkBx+B,EAAOyU,YAAc,GACjP,CACH,MACF,QACI,GAAI4nC,GAAclB,EAAa,CAEIv8C,KAAKy2C,SAAS+H,GAA2Bvb,YAAYwb,GACzEl8B,IAAM6c,GAAM,EAAGh+B,EAAO4U,OAAS,EAAG6pB,GAAoBF,EAAWG,WAAWF,OAAkBx+B,EAAa,OAAI,GAC7H,MAAM,GAAKo7C,GAAea,GAAgBD,GAAcX,EAAc,CACnE,MAAM99B,EAAyB3e,KAAKy2C,SAAS+H,GAA2Bvb,YAAYwb,GACpF9/B,EAAW4D,IAAM6c,GAAM,EAAGh+B,EAAO4U,OAAS,GAAI6pB,GAAoBF,EAAWG,WAAWF,OAAiB,GAAKC,GAAoBF,EAAWG,WAAWF,QAEpJ4c,IAAgBW,GAAeV,GAAeC,KAC9C/9B,EAAW6D,SAAWqd,GAAoBF,EAAWG,WAAWF,MAEvE,CAGH,MACF,QAAyB,CACrB,MAAMjhB,EAAyB3e,KAAKy2C,SAAS+H,GAA2Bvb,YAAYwb,IAE/EjC,GAAea,GAAgBD,GAAcX,KAE9C99B,EAAWkuB,OAASzN,GAAMh+B,EAAOkZ,UAAWlZ,EAAOiZ,UAAY,EAAgI,IAA3HwlB,GAAoBF,EAAWG,WAAWF,OAAiB,GAAKC,GAAoBF,EAAWG,WAAWF,QAC9KjhB,EAAW5P,SAAW,IAI7B,CAAC,MACF,QAAiC,CAC7B,IAAI4P,EAAyB3e,KAAKy2C,SAAS+H,GAA2Bvb,YAAYwb,GAElF,IAAK,IAAIxlB,EAAY,EAAGA,EAAI,GAAIA,IAC5Bta,EAAW8B,eAAewY,GACpBmG,IAAO,GAAI,GAAIS,GAAoBF,EAAWG,WAAWF,MAAgB,IAGnF,IAAIl1B,EAAc,EAClB,IAAK,IAAIC,EAAY,EAAGA,EAAIgU,EAAW8B,eAAe/b,OAAQiG,IAC1DD,GAAOiU,EAAW8B,eAAe9V,GAErC,MAAMC,EAAkBF,EAAMiU,EAAW8B,eAAe/b,OAGxD,IAAI0G,EAAqB,EACrB2iC,EAAmB,EACvB,IAAK,IAAIpjC,EAAY,EAAGA,EAAIgU,EAAW8B,eAAe/b,OAAQiG,IAC1DS,GAAc2iC,EACdA,EAAWpvB,EAAW8B,eAAe9V,GAAKC,EAC1C+T,EAAW8D,uBAAuB9X,GAAKS,EAI3CuT,EAAW8D,uBAAuB,IAAM,CAE3C,CAAC,MACF,QAAkC,CAC9B,IAAI+9B,EAAoB3gB,GAAoBF,EAAWG,WAAWF,MAGjD,IAAb4gB,EACAxgD,KAAKygD,0BAILzgD,KAAK82C,iBAAoB0J,EAAY,GAAKA,EAAY,GAAM,GAAKA,EAAY,IAAM,GACnFA,EAAY3gB,GAAoBF,EAAWG,WAAWF,MACtD5/B,KAAK+2C,WAAcyJ,EAAY,GAAKA,EAAY,GAAMA,EAAY,EAClExgD,KAAK02C,WAAa7W,GAAoBF,EAAWG,WAAWF,MAC5D5/B,KAAK22C,UAAuE,IAA1D9W,GAAoBF,EAAWG,WAAWF,MAAyB,IACrF5/B,KAAK42C,qBAAuB/W,GAAoBF,EAAWG,WAAWF,MAAgB,GACtF5/B,KAAK62C,eAAiBhX,GAAoBF,EAAWG,WAAWF,MAAgB,GAChF5/B,KAAKg3C,aAAenX,GAAoBF,EAAWG,WAAWF,OAAiB,GAAKC,GAAoBF,EAAWG,WAAWF,OAAiB,GAEtJ,CAAC,MACF,QACI,IAAK,IAAIjZ,EAAkB,EAAGA,EAAU3mB,KAAKg2B,kBAAmBrP,IAAW,CAEvE,IAAI+5B,EAIAA,GAHAtD,GAAeX,GAAgBC,GAGT7c,GAAoBF,EAAWG,WAAWF,OAAiB,GAAKC,GAAoBF,EAAWG,WAAWF,MAF5GC,GAAoBF,EAAWG,WAAWF,MAGlE5/B,KAAKy2C,SAAS9vB,GAAStiB,KAAOu6C,mBAAmBjf,EAAW0c,UAAUzc,EAAWA,EAAY8gB,IAE7F9gB,GAAa8gB,CAChB,CACH,MACF,QAA4B,CACxB,MAAM/hC,EAAyB3e,KAAKy2C,SAAS+H,GAA2Bvb,YAAYwb,GACpF,GAAmB,GAAf9/B,EAAW5J,KACX4J,EAAWuB,UAAYkf,GAAM,EAAGh+B,EAAOiW,WAAW3S,OAAQm7B,GAAoBF,EAAWG,WAAWF,YAKpG,GAFAjhB,EAAWuuB,aAAe9N,GAAM,EAAGh+B,EAAOqW,cAAc/S,OAAQm7B,GAAoBF,EAAWG,WAAWF,OAC1GjhB,EAAWyuB,gBAAgB/H,WAAW1mB,EAAWuuB,cACb,IAAhCvN,EAAWG,WAAWF,GAAiC,CACvD,IAAI+gB,EAAmBvhB,GAAM,EAAGh+B,EAAO+V,cAAgB,EAAE,EAAG0oB,GAAoBF,EAAWG,WAAWF,EAAY,KAClHA,IACA,IAAIghB,EAA2B,GAC/B,GAAsC,KAAlCjhB,EAAWG,WAAWF,EAAU,GAA2B,CAC3DA,IACA,IAAI3G,EAAY,EAEhB,IADA2G,IACuC,KAAhCD,EAAWG,WAAWF,IAAmC,CAC5DghB,EAAa3nB,GAAK,GAClB,IAAI0gB,EAAY,EAChB,KAAuC,IAAhCha,EAAWG,WAAWF,IACzBghB,EAAa3nB,GAAG0gB,GAAKva,GAAM,EAAGh+B,EAAO+V,cAAgB,EAAG0oB,GAAoBF,EAAWG,WAAWF,KAClG+Z,IACA/Z,IAEJ3G,IACA2G,GACH,CACDjhB,EAAWyuB,gBAAgBlpC,IAAIy8C,EAAkBC,GACjDhhB,GACH,CACJ,CAEL,GAAK6d,GAAclB,GAAiBc,GAAcb,GAAiBY,GAAcX,EAAc,CAE3F,MAAMxO,EAAiCqQ,EAAqBE,GAA2BC,GACvF9/B,EAAWirB,sBAAsBqE,EAAgBC,EACpD,CACJ,CAAC,MACF,QAA+B,CAC3B,MAAMvvB,EAAyB3e,KAAKy2C,SAAS+H,GAA2Bvb,YAAYwb,GACpF,GAAmB,GAAf9/B,EAAW5J,KACX4J,EAAWwB,aAAeif,GAAM,EAAGh+B,EAAO8W,UAAUxT,OAAQm7B,GAAoBF,EAAWG,WAAWF,WAErG,CACDjhB,EAAWwuB,gBAAkB/N,GAAM,EAAGh+B,EAAOgX,aAAa1T,OAAQm7B,GAAoBF,EAAWG,WAAWF,OAC5GjhB,EAAW0uB,mBAAmBhI,WAAW1mB,EAAWwuB,iBACpD,IAAIyT,EAA2B,GAC/B,GAAoC,KAAhCjhB,EAAWG,WAAWF,GAAmC,CACzD,IAAI3G,EAAY,EAEhB,IADA2G,IACuC,KAAhCD,EAAWG,WAAWF,IAAmC,CAC5DghB,EAAa3nB,GAAK,GAClB,IAAI0gB,EAAY,EAChB,KAAuC,IAAhCha,EAAWG,WAAWF,IACzBghB,EAAa3nB,GAAG0gB,GAAKva,GAAM,EAAGh+B,EAAO+V,cAAgB,EAAG0oB,GAAoBF,EAAWG,WAAWF,KAClG+Z,IACA/Z,IAEJ3G,IACA2G,GACH,CACDjhB,EAAW0uB,mBAAmBnpC,IAAI08C,GAClChhB,GACH,CACJ,CAEJ,CAAC,MACF,QACI5/B,KAAKy2C,SAAS+H,GAA2Bvb,YAAYwb,GAAyBr+B,kBAAoBgf,GAAM,EAAGh+B,EAAOuW,qBAAuB,EAAGkoB,GAAoBF,EAAWG,WAAWF,OACxL,MACF,QACI,GAAK6d,GAAclB,GAAiBc,GAAcb,GAAiBY,GAAcX,EAAc,CAC3F,MAAM0D,EAA8B,CAAC,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,IACvIxhC,EAAyB3e,KAAKy2C,SAAS+H,GAA2Bvb,YAAYwb,GAC9ExQ,EAAiCqQ,EAAqBE,GAA2BC,GAEvF,IAAI2B,EAAYvgB,GAAoBF,EAAWG,WAAWF,OACrDsd,GAAaT,IAAkBA,IAAgBC,KAAe0D,EAAKD,EAAkBC,IAC1FnS,EAAevtB,iBAAmB41B,GAAK0F,GAAyBnc,GAAoBugB,IACpFzhC,EAAWirB,sBAAsBqE,EAAgBC,EACpD,CAGH,MACF,QAAsC,CAClC,MAAMvvB,EAAa3e,KAAKy2C,SAAS+H,GAA2Bvb,YAAYwb,GAC5D,GAAItB,GAAeV,EAAa,CACpD,MAAMoE,EAAc,CAAC,EAAG,EAAG,EAAG,EAAG,EAAG,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,EAAG,EAAG,EAAG,GAAI,GAAI,GAAI,GAAI,EAAG,GAExG,IAAK,IAAIlH,EAAI,EAAGA,GAAwB,IAAnBh7B,EAAW5J,KAAa,EAAI3T,EAAO+V,eAAgBwiC,IAC5Ch7B,EAAW0B,UAAUs5B,GAAGr5B,UAAYugC,EAAYzhB,GAAM,EAAGyhB,EAAYn8C,OAAQm7B,GAAoBF,EAAWG,WAAWF,OAE9H,MACjB,GAAK6c,GAAgBC,EASD,IAAK,IAAI/C,EAAI,EAAGA,GAAwB,IAAnBh7B,EAAW5J,KAAa,EAAI3T,EAAO+V,eAAgBwiC,IACpEh7B,EAAW0B,UAAUs5B,GAAGr5B,UAAY8e,GAAM,EAAGh+B,EAAOwW,oBAAoBlT,OAAQm7B,GAAoBF,EAAWG,WAAWF,WAV/G,CACvC,MAAMkhB,EAAiB,CAAC,EAAG,EAAG,EAAG,EAAG,EAAG,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,EAAG,EAAG,EAAG,GAAI,GAAI,GAAI,GAAI,EAAG,GAE3G,IAAK,IAAInH,EAAI,EAAGA,GAAwB,IAAnBh7B,EAAW5J,KAAa,EAAI3T,EAAO+V,eAAgBwiC,IAC5Ch7B,EAAW0B,UAAUs5B,GAAGr5B,UAAYwgC,EAAe1hB,GAAM,EAAG0hB,EAAep8C,OAAQm7B,GAAoBF,EAAWG,WAAWF,OAGzJ,CAMK,CAAC,MACF,QAAqC,CACjC,MAAMjhB,EAAyB3e,KAAKy2C,SAAS+H,GAA2Bvb,YAAYwb,GACpF,IAAK,IAAI9E,EAAY,EAAGA,GAA4C,IAAvCh7B,EAAW5J,KAA+B,EAAI3T,EAAO+V,eAAgBwiC,IAC9Fh7B,EAAW0B,UAAUs5B,GAAGjsC,UAAY0xB,GAAM,EAAGh+B,EAAOuW,qBAAuB,EAAGkoB,GAAoBF,EAAWG,WAAWF,MAE/H,CAAC,MACF,QAA4B,CACxB,MAAMugB,EAA8B,CAAC,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,IACvIxhC,EAAyB3e,KAAKy2C,SAAS+H,GAA2Bvb,YAAYwb,GACpF,GAAKhB,GAAclB,GAAiBc,GAAcb,GAAiBY,GAAcX,EAAc,CAC3F,MAAMxO,EAAiCqQ,EAAqBE,GAA2BC,GACvFxQ,EAAeM,kBAAoB,GACnC,IAAK,IAAIoL,EAAY,EAAGA,GAA4C,IAAvCh7B,EAAW5J,KAA+B,EAAI3T,EAAO+V,eAAgBwiC,IAAK,CACnG,IAAIyG,EAAYvgB,GAAoBF,EAAWG,WAAWF,OACrDsd,GAAaT,IAAkBA,IAAgBC,KAAe0D,EAAKD,EAAkBC,IAC1FnS,EAAeM,kBAAkBoL,GAAKrD,GAAK0F,GAAyBoE,EACvE,CACDzhC,EAAWirB,sBAAsBqE,EAAgBC,EACpD,KAAM,CACH,MAAMvB,EAAwBvN,GAAM,EAAGh+B,EAAOka,iBAAmB,EAAGukB,GAAoBF,EAAWG,WAAWF,OAC9G,IAAK,IAAIj1B,EAAY,EAAGA,EAAIgiC,EAAehiC,IAAK,CAC5C,MAAM4V,EAAiB6e,GAAM,EAAGh+B,EAAOoa,4BAA4B9W,OAAQm7B,GAAoBF,EAAWG,WAAWF,OACrH,IAAIh7B,EAAgB,EACpB,MAAMiX,EAAmBza,EAAOoa,4BAA4B+E,GAAQ1E,SAChEA,EAAW,IACXjX,EAAQw6B,GAAM,EAAGvjB,EAAUgkB,GAAoBF,EAAWG,WAAWF,QAEzE,IAAIwgB,EAAYvgB,GAAoBF,EAAWG,WAAWF,OACrDsd,GAAaT,IAAkBA,IAAgBC,KAAe0D,EAAKD,EAAkBC,IAC1F,MAAM5/B,EAAmB4e,GAAM,EAAGh+B,EAAO4W,UAAUtT,OAAQ07C,GAC3DzhC,EAAWiwB,YAAYruB,EAAQ3b,EAAO4b,EACzC,CACJ,CACJ,CAAC,MACF,QAAgC,CAC5B,MAAM7B,EAAyB3e,KAAKy2C,SAAS+H,GAA2Bvb,YAAYwb,GAEpF,GAAItB,GAAeV,EACf,IAAK,IAAI9C,EAAY,EAAGA,EAAIv4C,EAAO+V,cAAewiC,IAAK,CACnD,MAAMoH,EAAW,CAAC,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,GACjCC,EAAc5hB,GAAM,EAAG2hB,EAASr8C,OAAQm7B,GAAoBF,EAAWG,WAAWF,OAC7E,GAAPohB,EACAriC,EAAW0B,UAAUs5B,GAAGv4B,WAAa,EACvB,GAAP4/B,EACPriC,EAAW0B,UAAUs5B,GAAGv4B,WAAa,EACvB,GAAP4/B,IACPriC,EAAW0B,UAAUs5B,GAAGv4B,WAAa,GAEzCzC,EAAW0B,UAAUs5B,GAAG12B,SAAW89B,EAASC,EAC/C,MAED,IAAK,IAAIrH,EAAY,EAAGA,GAA4C,IAAvCh7B,EAAW5J,KAA+B,EAAI3T,EAAO+V,eAAgBwiC,IAAK,CACnG,GAAI6C,EAAa,CACb,MAAMyE,EAAU,CAAC,EAAG,EAAG,EAAG,EAAG,EAAG,GAChCtiC,EAAW0B,UAAUs5B,GAAG12B,SAAWg+B,EAAQ7hB,GAAM,EAAGh+B,EAAO4a,cAActX,OAAQm7B,GAAoBF,EAAWG,WAAWF,OAC9H,MACGjhB,EAAW0B,UAAUs5B,GAAG12B,SAAWmc,GAAM,EAAGh+B,EAAO4a,cAActX,OAAQm7B,GAAoBF,EAAWG,WAAWF,OAG/E,GAApCjhB,EAAW0B,UAAUs5B,GAAG12B,WACxBtE,EAAW0B,UAAUs5B,GAAGv4B,WAAage,GAAM,EAAGh+B,EAAOkb,iBAAiB5X,OAAQm7B,GAAoBF,EAAWG,WAAWF,OAE/H,CAGR,CAAC,MACF,QAA2B,CACvB,MAAMjhB,EAAyB3e,KAAKy2C,SAAS+H,GAA2Bvb,YAAYwb,GACpF,GAAmB,GAAf9/B,EAAW5J,KAAiC,CAC5C,MAAMmsC,EAAoBj2C,KAAKgS,KAAK7b,EAAOmX,sBAAwBnX,EAAOqX,yBAA2B,GAC/FwgC,EAAuB,IAAI/Y,GAAeP,EAAYC,EAAWA,EAAYshB,GACnF,IAAK,IAAIv2C,EAAY,EAAGA,EAAIvJ,EAAOmX,sBAAuB5N,IACtDgU,EAAWmvB,aAAaxsB,SAAS3W,GAAKsuC,EAAK3Y,KAAKl/B,EAAOqX,0BAE3DkG,EAAWmvB,aAAajI,sBACxBjG,GAAashB,CAChB,KAAM,IAAmB,GAAfviC,EAAW5J,KAWlB,MAAM,IAAI9S,MAAM,yDAXkC,CAClD,MAAMi/C,EAAoBj2C,KAAKgS,KAAK7b,EAAOsY,UAAYtY,EAAOmX,sBAAwBnX,EAAOqX,yBAA2B,GAClHwgC,EAAuB,IAAI/Y,GAAeP,EAAYC,EAAWA,EAAYshB,GACnF,IAAK,IAAIjoB,EAAY,EAAGA,EAAI73B,EAAOsY,UAAWuf,IAAK,CAC/C,IAAK,IAAItuB,EAAY,EAAGA,EAAIvJ,EAAOmX,sBAAuB5N,IACtDgU,EAAWgvB,qBAAqB1U,GAAG3X,SAAS3W,GAAKsuC,EAAK3Y,KAAKl/B,EAAOqX,0BAEtEkG,EAAWgvB,qBAAqB1U,GAAG4M,qBACtC,CACDjG,GAAashB,CAChB,CAEA,CACJ,CAAC,MACF,QAA4B,CACxB,MAAMviC,EAAyB3e,KAAKy2C,SAAS+H,GAA2Bvb,YAAYwb,GAC9EyC,EAAoBj2C,KAAKgS,KAAK7b,EAAOuX,uBAAyBvX,EAAO0X,0BAA4B,GACjGmgC,EAAuB,IAAI/Y,GAAeP,EAAYC,EAAWA,EAAYshB,GACnF,IAAK,IAAIv2C,EAAY,EAAGA,EAAIvJ,EAAOuX,uBAAwBhO,IACvDgU,EAAW8uB,cAAc5sB,UAAUlW,GAAKsuC,EAAK3Y,KAAKl/B,EAAO0X,2BAE7D6F,EAAW8uB,cAAc5H,sBACzBjG,GAAashB,CAChB,CAAC,MACF,QACI,GAAK1E,GAAea,GAAgBZ,GAAeW,EAAa,CAC5D,MAAMz+B,EAAyB3e,KAAKy2C,SAAS+H,GAA2Bvb,YAAYwb,GACpF9/B,EAAWouB,UAAWlN,GAAoBF,EAAWG,WAAWF,MAC5DjhB,EAAWouB,UACXpuB,EAAWwC,WAAa,EACxBxC,EAAW5P,SAAW,EAE7B,CAID,MACJ,QAAuB,CACnB,IAAIoyC,EACJ,GAAIhE,GAAeZ,EAAa,CAC5B,MAAMlE,EAAuBxY,GAAoBF,EAAWG,WAAWF,MACjEzK,EAAmB0K,GAAoBF,EAAWG,WAAWF,MACnEuhB,EAAkBl2C,KAAKgS,KAAgB,GAAXkY,GAC5B,MAAM8jB,EAAuB,IAAI/Y,GAAeP,EAAYC,EAAWA,EAAYuhB,GACnF,IAAK,IAAIx2C,EAAY,EAAGA,EAAIwqB,EAAUxqB,IAClC3K,KAAKy2C,SAAS4B,GAAcjC,KAAKzrC,GAAKsuC,EAAK3Y,KAAK,GAAK,CAE5D,MAAM,GAAI+c,GAAcd,EAAa,CAClC,IAAI1C,EAAqB,EACzB,KAAQ,GAAKA,EAAc75C,KAAK44C,oBAAoBiB,IACpDsH,EAAkBl2C,KAAKgS,KAAKjd,KAAKg2B,kBAAoBh2B,KAAKm1B,SAAW0kB,EAAa,GAClF,MAAMZ,EAAuB,IAAI/Y,GAAeP,EAAYC,EAAWA,EAAYuhB,GACnF,IAAK,IAAI9I,EAAuB,EAAGA,EAAer4C,KAAKg2B,kBAAmBqiB,IACtE,IAAK,IAAI1tC,EAAY,EAAGA,EAAI3K,KAAKm1B,SAAUxqB,IACvC3K,KAAKy2C,SAAS4B,GAAcjC,KAAKzrC,GAAKsuC,EAAK3Y,KAAKuZ,GAAc,CAGzE,KAAM,CACH,IAAIA,EAAqB,EACzB,KAAQ,GAAKA,EAAc75C,KAAK44C,mBAAqB,GAAGiB,IACxDsH,EAAkBl2C,KAAKgS,KAAKjd,KAAKg2B,kBAAoBh2B,KAAKm1B,SAAW0kB,EAAa,GAClF,MAAMZ,EAAuB,IAAI/Y,GAAeP,EAAYC,EAAWA,EAAYuhB,GACnF,IAAK,IAAI9I,EAAuB,EAAGA,EAAer4C,KAAKg2B,kBAAmBqiB,IACtE,IAAK,IAAI1tC,EAAY,EAAGA,EAAI3K,KAAKm1B,SAAUxqB,IACvC3K,KAAKy2C,SAAS4B,GAAcjC,KAAKzrC,GAAKsuC,EAAK3Y,KAAKuZ,EAG3D,CACDja,GAAauhB,CAChB,CAAC,MACF,SAA2B,CACvB,IACI9I,EADA+I,EAA0B,EAE1BC,IAA2BjE,GAAcZ,GAAgBD,GACzD+E,EAAgCD,EAAe,EAAI,EACnDE,EAA6BF,EAAe,GAAK,EACrD,GAAIlE,GAAeZ,EACflE,EAAexY,GAAoBF,EAAWG,WAAWF,MAGzDA,IAEAwhB,EAAkBvhB,GAAoBF,EAAWG,WAAWF,MAC5DwhB,IAAqC,EACrCA,GAAmBvhB,GAAoBF,EAAWG,WAAWF,UAC1D,CACHyY,EAAe,EACf,IAAImJ,EAAgCliB,GAAc,EAAG,EAAGO,GAAoBF,EAAWG,WAAWF,OAClG,KAAO4hB,EAAwB,GAC3BJ,IAAqC,EACrCA,GAAmBvhB,GAAoBF,EAAWG,WAAWF,MAC7D4hB,GAEP,CAED,MAAMvI,EAAuB,IAAI/Y,GAAeP,EAAYC,EAAWA,EAAYwhB,GACnFxhB,GAAawhB,EAEb,MAAMrH,EAA0BzD,GAAK0D,cAAc54C,EAAOwU,aAC1D,IAAI6rC,GAA6B,EAC7BC,GAAgC,EAChCC,GAA2B,EAE/B,OAAa,CACT,MAAMh7B,EAAmB3mB,KAAKy2C,SAAS4B,GACjC7T,EAA0BxkC,KAAKs4C,kBAAkBD,GACjD/U,EAAwBtjC,KAAKu4C,gBAAgBF,GAE7C4B,EAAmCj6C,KAAKo4C,4BAA4BC,GACpE6B,EAAoC5D,GAAK0D,cAAcC,EAA2B74C,EAAOqQ,oBAEzF0oC,EAAoC7D,GAAK0D,cAAcrzB,EAAQsc,YAAYv+B,OAAS,GAG1F,GAAI4+B,EAAc,CACd,IAAIse,EAAoBvE,GAAcb,GAAiBY,GAAcX,EAGrE,MAAMrC,EAAuC,EAAYD,EAA4B7D,GAAK0D,cAAch6C,KAAKk4C,8BAAgC,GAE7I,IAAK,IAAImC,EAA0B,EAAGA,EAAkB1zB,EAAQsc,YAAYv+B,OAAQ21C,IAAmB,CAEnG,IAAI17B,EAAyBgI,EAAQsc,YAAYoX,GAEjD,IAAK,IAAI7W,EAAc,EAAGA,EAAMpiC,EAAOwY,SAAU4pB,IAAO,CAMpD,IAAI3jC,EAAiBo5C,EAAK3Y,KAAK,GAE/B,OAAQzgC,GACJ,KAAK,EACD8e,EAAWuI,YAAYsc,GAAOpE,GAAM,EAAGp/B,KAAKwsB,kBAAoBxsB,KAAKysB,kBAAoB,EAAGwsB,EAAK3Y,KAAK,IACtG3hB,EAAWivB,eAAepK,GAAOpE,GAAM,EAAGp/B,KAAKy2C,SAAS93B,EAAWuI,YAAYsc,IAAMP,YAAYv+B,OAAS,EAAGu0C,EAAK3Y,KAAK8Z,IACvH,MACJ,KAAK,EAEDz7B,EAAWuI,YAAYsc,GAAOxjC,KAAKwsB,kBAAoB4S,GAAM,EAAGp/B,KAAKysB,kBAAoB,EAAGwsB,EAAK3Y,KAAK,IACtG3hB,EAAWivB,eAAepK,GAAOpE,GAAM,EAAGp/B,KAAKy2C,SAAS93B,EAAWuI,YAAYsc,IAAMP,YAAYv+B,OAAS,EAAGu0C,EAAK3Y,KAAK6Z,IACvH,MACJ,KAAK,EACDx7B,EAAWuI,YAAYsc,IAAQ,EAC/B,MACJ,KAAK,EACD7kB,EAAWuI,YAAYsc,IAAQ,EAavC,GARc,GAAV3jC,IACA8e,EAAWnC,WAAWgnB,GAAOyV,EAAK3Y,KAAK,IAGtCshB,GAAkE,aAAtDxgD,EAAOob,WAAWmC,EAAWnC,WAAWgnB,IAAMn/B,MAA6E,eAAtDjD,EAAOob,WAAWmC,EAAWnC,WAAWgnB,IAAMn/B,OAChIsa,EAAWglB,eAAeH,GAAOyV,EAAK3Y,KAAK,IAG3CshB,GAAWjjC,EAAWuI,YAAYsc,IAAQ,EAAG,CAC7C,IAAIqe,EAAyBzyC,EAAyBpP,KAAKy2C,SAAS93B,EAAWuI,YAAYsc,IAAMP,YAAYtkB,EAAWivB,eAAepK,IAAMz0B,SAG3G,GAA9B4P,EAAWnC,WAAWgnB,IAKlB7kB,EAAWnC,WAAWgnB,GADtBqe,EAC6BzgD,EAAOob,WAAW1X,WAAW,iBAAiBF,MAG9CxD,EAAOob,WAAW1X,WAAW,eAAeF,MAG7E+Z,EAAWglB,eAAeH,GAAO,GAGE,GAA9B7kB,EAAWnC,WAAWgnB,KAGvB7kB,EAAWnC,WAAWgnB,GADtBqe,EAC6BzgD,EAAOob,WAAW1X,WAAW,kBAAkBF,MAG/CxD,EAAOob,WAAW1X,WAAW,gBAAgBF,MAG9E+Z,EAAWglB,eAAeH,GAAO,EAExC,MACQoe,GAEDjjC,EAAWnC,WAAWgnB,IAAQpiC,EAAOob,WAAW1X,WAAW,eAAeF,QAC1E68C,EAAoBpJ,EACpBqJ,EAAuBrH,EACvBsH,EAAkBne,GAOtBoe,GAAyE,IAA9DxgD,EAAOob,WAAWmC,EAAWnC,WAAWgnB,IAAM1mB,mBACzD9c,KAAKy2C,SAAS93B,EAAWuI,YAAYsc,IAAMP,YAAYtkB,EAAWivB,eAAepK,IAAMz0B,SAAW,GAAK3N,EAAOob,WAAWmC,EAAWnC,WAAWgnB,IAAM1mB,iBAE5J,CACJ,CACJ,CAGD,MAAMglC,EAA+B,GACrC,IAAK,IAAI7oB,EAAY,EAAGA,EAAItS,EAAQsc,YAAYv+B,OAAQu0B,IAAK,CACzD6oB,EAAiB7oB,GAAK,GACtB,IAAK,IAAItuB,EAAY,EAAGA,EAAIvJ,EAAOwY,SAAUjP,IACzCm3C,EAAiB7oB,GAAG73B,EAAOwY,SAAW,EAAIjP,GAAK,EAAI,KAAQ0yC,GAAcb,GAAiBY,GAAYX,IAAiBnZ,GAAiB3c,EAAQsc,YAAYhK,GAAGzc,WAAW7R,IAAMvJ,EAAOob,WAAW1X,WAAmB,OAAEF,MAE9N,CAED,MAAM21C,EAAwB/V,GAAkBlB,EAAgB,EAAI3c,EAAQsZ,OAAS7+B,EAAO0Y,iBAC5F,IAAI0gC,EAAsBhW,GAAkBlB,EAAgB,EAAIiX,EAChE,MAAME,EAA0BnX,EAAe,CAAC,EAAG,EAAG,EAAG,EAAG,EAAG,GAAMkB,EAAiB,CAAC,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,IAAM,CAAC,EAAG,EAAG,GAAI,GAAI,IAAK,GAAI,IACpIkW,EAAsB,GAC5B,IAAK,IAAI/vC,EAAY,EAAGA,EAAI8vC,EAAc/1C,OAAQiG,IAC9C8vC,EAAc9vC,IAAM4vC,EAExB,IAAK,IAAI5vC,EAAY,EAAGA,EAAI3K,KAAK44C,mBAAoBjuC,IAAK,CACtD,MAAMo3C,EAAsBp7B,EAAQwvB,SAASxrC,GAE7C,GAAK8yC,GAAclB,GAAiBc,GAAcb,GAAiBY,GAAcX,EAC7EsF,EAAW9e,YAAY,GAAK3D,GAAc,EAAG3Y,EAAQsc,YAAYv+B,OAAS,EAAGu0C,EAAK3Y,KAAK6Z,IACvF4H,EAAW9e,YAAYv+B,OAAS,OAEhC,GAAI1E,KAAKqkC,mBAAoB,CACzB,MAAMI,EAA0BnF,GAAcl+B,EAAOqQ,mBAAoBwoC,EAA0BhB,EAAK3Y,KAAK4Z,GAA6B94C,EAAOqQ,oBACjJ,IAAK,IAAIwnB,EAAY,EAAGA,EAAIwL,EAAiBxL,IACzC8oB,EAAW9e,YAAYhK,GAAKqG,GAAc,EAAG3Y,EAAQsc,YAAYv+B,OAAS,EAAsB,GAAlB,EAAqBu0C,EAAK3Y,KAAK6Z,IAEjH4H,EAAW9e,YAAYv+B,OAAS+/B,CACnC,MACGsd,EAAW9e,YAAY,GAAK,EAC5B8e,EAAW9e,YAAYv+B,OAAStD,EAAOqQ,mBAI/C,KAAM8qC,GAAeY,GAAgC,GAAhBlE,EAAK3Y,KAAK,IAAS,CACpDyhB,EAAW/e,MAAMt+B,OAAS,EAC1B,QACH,CAED,IAAIi2C,EAAkB,EACtB,MAAMqH,EAAmBD,EAAW/e,MACpC,IAAIif,EAAoB,EAExB,KAAOtH,EAAU36C,KAAK4kC,YAAcxjC,EAAOwQ,eAAiB0xB,GAAe,CAEvE,MAAM4e,EAAuC,GAAhBjJ,EAAK3Y,KAAK,GACvC,IAAIqC,GAAmB,EACnByY,EAAqB,EAOzB,GANI8G,EACA9G,EAAa9b,GAAc,EAAGob,EAAah2C,OAAS,EAAGu0C,EAAK1Y,aAAa,EAAG,IAE5EoC,EAA0B,GAAhBsW,EAAK3Y,KAAK,GAGnB4hB,GAAgBvf,EAkBd,CACH,IAAIwf,EA0DAhf,EAWAvB,EApEJ,GAAIsgB,EACAC,EAAQzH,EAAaU,GACrBV,EAAaxf,OAAOkgB,EAAY,OAC7B,CAGH,GAFA+G,EAAQ,GAEHd,EASmB,GAAhBpI,EAAK3Y,KAAK,GACV6hB,EAAM7zC,WAAa2qC,EAAK3Y,KAAK,GAAK,EAGlC6hB,EAAM7zC,WAAa,OAVvB,IADA6zC,EAAM7zC,WAAa,EACZ6zC,EAAM7zC,WAAa,GAAqB,GAAhB2qC,EAAK3Y,KAAK,IAAS6hB,EAAM7zC,aAc5D6zC,EAAMC,SAAWnJ,EAAKpY,eAElBshB,EAAME,YADN9F,EACmC,EAAftD,EAAK3Y,KAAK,GACtBgD,EAGY2V,EAAK3Y,KAAK,GAFV2Y,EAAK3Y,KAAKyZ,GAKlCoI,EAAMpgB,KAAO,GACbogB,EAAMz9C,OAAS,EACfy9C,EAAMG,UAAY,EAClB,IAAK,IAAIrpB,EAAY,EAAGA,EAAIkpB,EAAMC,SAAUnpB,IAAK,CAC7C,IAAIspB,EAAc,GAClBA,EAAOve,UAA4B,GAAhBiV,EAAK3Y,KAAK,GACzBiiB,EAAOve,WAAWme,EAAMG,YAC5BH,EAAMz9C,QAAW64C,GAAehB,EAC1BtD,EAAKrY,yBAA2Bx/B,EAAOwQ,aAAexQ,EAAO2Q,QAAQ/R,KAAK+jC,QAAQ/xB,aAClFinC,EAAKtY,mBACX4hB,EAAO7gB,KAAOygB,EAAMz9C,OAEhB69C,EAAOnoB,KADPmiB,EAC6B,EAAftD,EAAK3Y,KAAK,GAChBgD,EAIM2V,EAAK3Y,KAAK,GAHV2Y,EAAK3Y,KAAKyZ,GAK5BoI,EAAMpgB,KAAKl3B,KAAK03C,EACnB,CACJ,CACD7H,EAAaW,QAAQ8G,GACjBzH,EAAah2C,OAAS,IAAIg2C,EAAa9f,MAGvConB,EAASt9C,QAAUu9C,GACnB9e,EAAO,IAAIxB,GAAK,EAAGgZ,EAASA,EAAUwH,EAAMz9C,OAAQy9C,EAAME,aAC1DL,EAASC,KAAe9e,IAExBA,EAAO6e,EAASC,KAChB9e,EAAKnE,MAAQ2b,EACbxX,EAAKlE,IAAM0b,EAAUwH,EAAMz9C,OAC3By+B,EAAKpB,KAAK,GAAG3H,KAAO+nB,EAAME,aAI9B,IAAI/zC,EAAqB,EACzB,MAAMysC,EAAuB,GAC7B,IAAK,IAAI9hB,EAAY,EAAGA,EAAIkpB,EAAM7zC,WAAa6zC,EAAMG,UAAWrpB,IAAK,CAEjE,GAD6C,GAAhBggB,EAAK3Y,KAAK,GAehC,CACH,MAAMib,EAAqBjc,GAAc,EAAGmb,EAAc/1C,OAAS,EAAGu0C,EAAK3Y,KAAKghB,IAChF1f,EAAQ6Y,EAAcc,GACtBd,EAAcvf,OAAOqgB,EAAY,EACpC,KAlBiB,CAEd3Z,EAAQ4Y,EACR,IAAIgI,EAFqBvJ,EAAKnY,oBAG9B,KAAO0hB,EAAe,GAAG,CAErB,IADA5gB,KACwC,GAAjC6Y,EAAcxf,QAAQ2G,IAAcA,IAC3C4gB,GACH,CACD,KAAOA,EAAe,GAAG,CAErB,IADA5gB,KACwC,GAAjC6Y,EAAcxf,QAAQ2G,IAAcA,IAC3C4gB,GACH,CACJ,CAMD/H,EAAcY,QAAQzZ,GAClB6Y,EAAc/1C,OAAS68C,GAAmB9G,EAAc7f,MAExD3B,EAAIkpB,EAAM7zC,WACV60B,EAAKrB,QAAQxzB,KAAgBszB,EAE7BmZ,EAAWlwC,KAAK+2B,GAIhB4Y,EADAvhB,GAAKkpB,EAAM7zC,WAAa,EACZ60B,EAAKrB,QAAQ,GAEbF,CAEnB,CACDuB,EAAKrB,QAAQp9B,OAAS4J,EACtBysC,EAAWM,QAAQlY,EAAKrB,QAAQ,IAC5BwB,IACAH,EAAKpB,KAAK,GAAG3H,MAAQ0nB,EAAiBC,EAAW9e,YAAY,IAAIE,EAAKrB,QAAQ,KAElF,IAAIsgB,EAAmB,EACvB,IAAK,MAAMG,KAAUJ,EAAMpgB,KAAM,CACzBwgB,EAAOve,WAAW+W,EAAW6C,QAEjC,MAAM58B,EAAmB+5B,EAAW,GAAK5X,EAAKrB,QAAQ,GACtD,GAAIqB,EAAKpB,KAAKr9B,QAAU09C,EAEhBjf,EAAKpB,KAAKqgB,KAAc3gB,GAAYzgB,EAAUuhC,EAAO7gB,KADrD4B,EAC2Dif,EAAOnoB,KAAO0nB,EAAiBC,EAAW9e,YAAY,IAAIE,EAAKrB,QAAQ,IAEvEygB,EAAOnoB,UAEnE,CACH,MAAMqI,EAAeU,EAAKpB,KAAKqgB,KAC/B3f,EAAIzhB,SAAWA,EACfyhB,EAAIf,KAAO6gB,EAAO7gB,KAEde,EAAIrI,KADJkJ,EACWif,EAAOnoB,KAAO0nB,EAAiBC,EAAW9e,YAAY,IAAIE,EAAKrB,QAAQ,IAEvEygB,EAAOnoB,IAEzB,CACJ,CACD+I,EAAKpB,KAAKr9B,OAAS09C,EAED,GAAdjf,EAAKnE,QAKGmE,EAAKnB,qBAJNyb,GAAclB,GAAiBc,GAAcb,GAAeY,GAAYX,IAGtEW,IAAeV,GAAiBH,IAGL51B,EAAQsc,YAAY8e,EAAW9e,YAAY,IAAI6J,cALlC,GAAhBmM,EAAK3Y,KAAK,IAU/Cqa,EAAUrb,GAAc,EAAGt/B,KAAK4kC,YAAcxjC,EAAOwQ,aAAcuxB,EAAKlE,IAC3E,MAxKG,GAAIqE,EAAc,CACd,MAAMmf,EAAuC,GAAhBxJ,EAAK3Y,KAAK,GACjCoiB,EAAqBzJ,EAAKtY,mBAC5B8hB,EACA9H,GAAW+H,EAGX/H,GAAW+H,CAElB,KAAM,CAIH/H,GAH4B4C,GAAehB,EACrCtD,EAAKrY,yBAA2Bx/B,EAAOwQ,aAAexQ,EAAO2Q,QAAQ/R,KAAK+jC,QAAQ/xB,aAClFinC,EAAKtY,kBAGd,CA0JR,CACDqhB,EAASt9C,OAASu9C,CACrB,CAED,GAAI9E,GAAeZ,EACf,MAGA,GADAlE,IACIA,GAAgBr4C,KAAKg2B,kBAAmB,KAEnD,CAGD,IAAMwmB,GAAea,GAAcD,GAAcX,IAAiBkF,GAAmB,EACjF,IAAK,IAAItJ,EAAuB,EAAGA,EAAer4C,KAAKy2C,SAAS/xC,OAAQ2zC,IACpE,IAAK,IAAIgC,EAA0B,EAAGA,EAAkBr6C,KAAKy2C,SAAS4B,GAAcpV,YAAYv+B,OAAQ21C,IAAmB,CACvH,MAAM17B,EAAyB3e,KAAKy2C,SAAS4B,GAAcpV,YAAYoX,GAKvE,GAJI3qC,EAAqBiP,EAAW5P,WAChC4P,EAAWiC,OAASxf,EAAO8P,YAAc,GAGzCuwC,GAAqBpJ,GAAgBqJ,GAAwBrH,EAAiB,CAC9E,MAAMsI,EAAuB3iD,KAAKy2C,SAAS4B,GAAcjC,KAAK,GAC9D,GAAIuM,EAAe,EAAG,CAGlB,MAAM7J,EAAmB94C,KAAKy2C,SAAS4B,GAAclC,SAASwM,EAAe,GAC7E,IAAIC,EAAqB,EACzB,IAAK,MAAMzf,KAAQ2V,EAAQ9V,MACnBG,EAAKrB,QAAQ,IAAM1gC,EAAOwY,SAAW,EAAI+nC,IACzCiB,EAAa33C,KAAKoC,IAAIu1C,EAAYzf,EAAKnE,QAI3C4jB,EAAa,GACb9J,EAAQ9V,MAAMn4B,KAAK,IAAI82B,GAAKvgC,EAAOwY,SAAW,EAAI+nC,EAAiB,EAAGiB,EAAYpT,GAEzF,MAGG,GAAIxvC,KAAKy2C,SAAS4B,GAAclC,SAASzxC,OAAStD,EAAOoQ,YAAa,CAClE,MAAMsnC,EAAmB,IAAI/V,GAG7B,GAFA/iC,KAAKy2C,SAAS4B,GAAclC,SAAStrC,KAAKiuC,GAC1C94C,KAAKy2C,SAAS4B,GAAcjC,KAAK,GAAKp2C,KAAKy2C,SAAS4B,GAAclC,SAASzxC,OACvE1E,KAAKy2C,SAAS4B,GAAclC,SAASzxC,OAAS1E,KAAK44C,mBAAoB,CACvE,IAAK,IAAIiK,EAAc,EAAGA,EAAM7iD,KAAKy2C,SAAS/xC,OAAQm+C,IAC9C7iD,KAAKy2C,SAASoM,GAAK1M,SAASzxC,QAAU1E,KAAK44C,oBAC3C54C,KAAKy2C,SAASoM,GAAK1M,SAAStrC,KAAK,IAAIk4B,IAG7C/iC,KAAK44C,oBACR,CACDE,EAAQ7V,YAAYv+B,OAAS,EAC7Bo0C,EAAQ7V,YAAY,GAAKye,EACzB5I,EAAQ9V,MAAMt+B,OAAS,EACvBo0C,EAAQ9V,MAAMn4B,KAAK,IAAI82B,GAAKvgC,EAAOwY,SAAW,EAAI+nC,EAAiB,EAAG,EAAGnS,GAC5E,CAER,CACJ,CAGZ,CAAC,MACF,QACI,MAAM,IAAIvtC,MAAM,8BAAgCi0B,OAAOglB,aAAaqD,GAAW,cAAgB3e,EAAY,GAAK,IAAMD,EAAW0c,UAA2B,EAAGzc,I,CAKnK,SAAOkjB,CAAavM,GACxB,IACI,OAAO2J,QAAQ,IAAIb,IAAI9I,GAC1B,CACD,MAAM7/B,GACF,OAAO,CACV,C,CAIG,SAAO0nC,CAA+Bx9C,EAAaq9C,EAA4BC,EAA+Bp+C,GAClH,MACMqE,EAAyC/C,EAAOC,UADzB,GACiDe,QACxEgC,EAA+BhD,EAAOK,gBAFf,GAE6CW,QAEpE2gD,EAA+B9E,EAAiBv5C,OACtDu5C,EAAiBpzC,KAAKjK,GAGtB,MAAMC,EAAwBO,EAAOC,UAAUqD,OAE/C,IAAIs+C,EAAoBpiD,EAEpBE,EAA2B,MAC3BmiD,GAA8B,EAC9BC,EAAwB,GACxBC,GAA6C,EAC7CC,EAAyC,KACzCC,EAAuC,KACvCC,EAA2C,KAC3CC,EAAwC,KACxCC,GAAuC,EAEvCC,GAA+B,EAC/BC,EAA4B9iD,EAAIq6B,QAAQ,KACxC0oB,GAA2B,EAC/B,GAA0B,IAAtBD,IACAC,EAAkB/iD,EAAIq6B,QAAQ,IAAKyoB,EAAoB,IAC9B,IAArBC,GAAwB,CACxB,MAAMC,EAAuBhjD,EAAIm7C,MAAM2H,EAAoB,EAAGC,GAAiBz9B,MAAM,KACrF,IAAK,MAAM29B,KAAaD,EAAY,CAChC,MAAME,EAAqBD,EAAUE,OAAO,GACtCC,EAAqBH,EAAU9H,MAAM,EAAG8H,EAAUn/C,QACrC,MAAfo/C,EACAhjD,EAAmBs+B,GAAM,IAAM,MAAW6kB,WAAWD,IAC/B,MAAfF,EACPZ,EAAgBe,WAAWD,GACL,MAAfF,EACPb,GAAqB,EACC,MAAfa,GACPX,GAAoC,EACpCC,EAA0Bc,SAASF,IACb,MAAfF,GACPX,GAAoC,EACpCE,EAAwBa,SAASF,IACX,MAAfF,GACPX,GAAoC,EACpCG,EAA4BY,SAASF,IACf,MAAfF,GACPX,GAAoC,EACpCI,EAAyBW,SAASF,IACZ,MAAfF,IACPX,GAAoC,EACpCK,GAA8B,EAErC,CACDR,EAAYpiD,EAAIm7C,MAAM4H,EAAkB,EAAG/iD,EAAI8D,QAC/C++C,GAAsB,CACzB,CAGL,IAAIU,EAAwB,KAC5B,IAAI7N,GAAKwM,GAAaE,GAKlB,OADAjgD,MAAMnC,EAAM,wBACL,EAGX,GAPIujD,EAAY,IAAI9E,IAAI2D,IAOnBS,GAAoC,MAAbU,EAAmB,CAQ3C,SAASC,IACLpB,EAAYpiD,EAAIm7C,MAAM,EAAGn7C,EAAIq6B,QAAQ,MACrCkpB,EAAY,IAAI9E,IAAI2D,GACpBliD,EAAmBs+B,GAAM,IAAM,MAAW6kB,WAAWrjD,EAAIm7C,MAAMn7C,EAAIq6B,QAAQ,KAAO,I,CAKtF,SAASopB,IACLrB,EAAYpiD,EAAIm7C,MAAM,EAAGn7C,EAAIq6B,QAAQ,MACrCkpB,EAAY,IAAI9E,IAAI2D,GACpBE,EAAgBe,WAAWrjD,EAAIm7C,MAAMn7C,EAAIq6B,QAAQ,KAAO,G,EAlBnC,GAArBr6B,EAAIq6B,QAAQ,OAEZ+nB,EAAYpiD,EAAI+8C,WAAW,IAAK,IAChCwG,EAAY,IAAI9E,IAAI2D,GACpBC,GAAqB,IAkBA,GAArBriD,EAAIq6B,QAAQ,OAAmC,GAArBr6B,EAAIq6B,QAAQ,KAClCr6B,EAAIq6B,QAAQ,KAAOr6B,EAAIq6B,QAAQ,MAC/BopB,IACAD,MAGAA,IACAC,OAIqB,GAArBzjD,EAAIq6B,QAAQ,MACZmpB,KAEqB,GAArBxjD,EAAIq6B,QAAQ,MACZopB,IAGX,CAED,GAAiB,MAAbF,EAAmB,CAEnB,IAAIG,EAAsBtB,EAC1B,MAAMuB,EAAyB,GACN,QAArBzjD,GAA4ByjD,EAAa15C,KAAK,IAAM/J,GAClC,KAAlBoiD,GAAsBqB,EAAa15C,KAAK,IAAMq4C,GAC9CD,GAAoBsB,EAAa15C,KAAK,KACtCs4C,IAC+B,MAA3BC,GAAiCmB,EAAa15C,KAAK,IAAMu4C,GAChC,MAAzBC,GAA+BkB,EAAa15C,KAAK,IAAMw4C,GAC1B,MAA7BC,GAAmCiB,EAAa15C,KAAK,IAAMy4C,GACjC,MAA1BC,GAAgCgB,EAAa15C,KAAK,IAAM04C,GACxDC,GAA6Be,EAAa15C,KAAK,MAEnD05C,EAAa7/C,OAAS,IACtB4/C,EAAsB,IAAMC,EAAahgC,KAAK,KAAO,IAAMy+B,GAE/D/E,EAAiB8E,GAAwBuB,EAQzC,MAAMjgD,EAAeu6C,mBAAmBuF,EAAUK,SAAS9mC,QAAQ,eAAgB,KAK7EpZ,EAAqB,EAC3BlD,EAAOC,UAAUR,GAAiB,CAC9BwD,KAAMA,EACNC,WAAYA,EACZmgD,iBAAiB,EACjBjgD,aAAcy+C,EACdyB,QAASxB,EACTjiD,WAAYH,EACZsB,QAAS+B,EACTS,MAAO/D,GAEXO,EAAOG,aAAaV,GAAiB,CACjCwD,KAAMA,EACNC,WAAYA,EACZmgD,iBAAiB,EACjBjgD,aAAcy+C,EACdyB,QAASxB,EACTjiD,WAAYH,EACZsB,QAASgC,EACTQ,MAAO/D,GAEXO,EAAOK,gBAAgBZ,GAAiB,CACpCwD,KAAMA,EACNC,WAAYA,EACZmgD,iBAAiB,EACjBjgD,aAAcy+C,EACdyB,QAASxB,EACTjiD,WAAYH,EACZsB,QAASgC,EACTQ,MAAO/D,GAEX,MAAM8jD,EAA8C,CAChD5vC,KAAQ,OACRuK,SAAY,GACZvQ,QAAW,GACXwQ,WAAc,SACdC,cAAiB,EACjBnL,cAAiB,EACjBoL,MAAS,UACThV,KAAQpG,EACRqb,OAAU,OACV1H,UAAa,IAEbmrC,IACAwB,EAAwD,6BAAI,EAC5DA,EAA8C,kBAA+B,MAA3BvB,EAAkCA,EAA0B,EAC9GuB,EAA4C,gBAA6B,MAAzBtB,EAAgCA,EAAwB,EACxGsB,EAA6C,iBAA8B,MAA1BpB,EAAiCA,EAAyB,EAC3GoB,EAAkD,sBAAInB,EACtDmB,EAAgD,oBAAiC,MAA7BrB,EAAoCA,EAA4B,GAExHpF,EAAoBrzC,KAAK,CACrBjG,MAAO,EACPP,KAAMA,EACNka,YAAa,GACbc,SAAUslC,IAETvjD,EAAOoC,4BACR7C,EAAmBqiD,EAAWniD,EAAeC,GAEjDhB,EAAmBG,YAAYY,GAAc,EAC7Cf,EAAmBI,SAASW,GAAiBmiD,EAC7CljD,EAAmBK,cACtB,CAED,OAAO,C,CAGH,SAAO09C,GACXz8C,EAAOC,UAAYsN,EAAUvN,EAAOC,UAAU06C,MAAM,EAAG36C,EAAO+R,qCAC9D/R,EAAOG,aAAeoN,EAAUvN,EAAOG,aAAaw6C,MAAM,EAAG36C,EAAO+R,qCACpE/R,EAAOK,gBAAkBkN,EAAUvN,EAAOK,gBAAgBs6C,MAAM,EAAG36C,EAAO+R,oC,CAGtE,SAAO+oC,GACXv+B,EAAam+B,cAAgB,KAE7BxF,GAAKuH,KAEL/9C,EAAmBG,YAAc,GACjCH,EAAmBI,SAAW,GAC9BJ,EAAmBK,aAAe,EAClCL,EAAmBM,cAAgB,EACnCM,EAAiBiC,cAAc,IAAItC,EAC/BP,EAAmBK,aACnBL,EAAmBM,e,CAIpB,YAAAijC,CAAauhB,GAAuB,EAAMC,EAAoB,EAAGC,GAAuB,GAC3F,MAAMC,EAAyB,GAC/B,IAAK,IAAI1M,EAAuB,EAAGA,EAAer4C,KAAKg2B,kBAAmBqiB,IAAgB,CACtF,MAAM1xB,EAAmB3mB,KAAKy2C,SAAS4B,GACjC2M,EAA4B,GAC5BxgB,EAA0BxkC,KAAKs4C,kBAAkBD,GACjD/U,EAAwBtjC,KAAKu4C,gBAAgBF,GACnD,IAAK,MAAM15B,KAAcgI,EAAQsc,YAC7B+hB,EAAgBn6C,KAAK8T,EAAW0kB,gBAGpC,MAAM4hB,EAAyB,GAC/B,IAAK,MAAMnM,KAAWnyB,EAAQwvB,SAC1B8O,EAAap6C,KAAKiuC,EAAQzV,aAAarjC,KAAM2mB,EAAS2c,IAG1D,MAAM4hB,EAA0B,GAChC,GAAIN,EAAa,IAAK,IAAIj6C,EAAY,EAAGA,EAAI3K,KAAK04C,UAAW/tC,IACzDu6C,EAAcr6C,KAAK8b,EAAQyvB,KAAKzrC,IAEpC,IAAK,IAAIw6C,EAAY,EAAGA,EAAIN,EAAWM,IAAK,IAAK,IAAIx6C,EAAY3K,KAAK04C,UAAW/tC,EAAI3K,KAAK04C,UAAY14C,KAAK24C,WAAYhuC,IACnHu6C,EAAcr6C,KAAK8b,EAAQyvB,KAAKzrC,IAEpC,GAAIm6C,EAAa,IAAK,IAAIn6C,EAAY3K,KAAK04C,UAAY14C,KAAK24C,WAAYhuC,EAAI3K,KAAKm1B,SAAUxqB,IACvFu6C,EAAcr6C,KAAK8b,EAAQyvB,KAAKzrC,IAGpC,MAAMy6C,EAAqB,CACvBrwC,KAAQuuB,EAAe,MAASkB,EAAiB,OAAS,QAC1DngC,KAAQsiB,EAAQtiB,KAChB4+B,YAAe+hB,EACf7O,SAAY8O,EACZI,SAAYH,GAEX1gB,IAED4gB,EAA+B,gBAAIz+B,EAAQsZ,OAAS,GAExD8kB,EAAal6C,KAAKu6C,EACrB,CAED,MAAMv2C,EAAc,CAChBxK,KAAQrE,KAAK64C,MACbyM,OAAUhP,GAAKiP,GACf1mC,QAAWy3B,GAAK6C,GAChBV,MAASr3C,EAAO4O,OAAOhQ,KAAKy4C,OAAOp0C,KACnCmhD,YAAexlD,KAAKw2C,YACpBvzC,IAAO7B,EAAO+O,KAAKnQ,KAAKiD,KAAKoB,KAC7BohD,UAAazlD,KAAKigC,OAClBylB,UAAa1lD,KAAK04C,UAClBiN,SAAY3lD,KAAK24C,WACjB/T,YAAe5kC,KAAK4kC,YACpBghB,aAAgBxkD,EAAO2Q,QAAQ/R,KAAK+jC,QAAQ/xB,aAC5C6zC,eAAkB7lD,KAAKy3C,MACvB72B,OAAU5gB,KAAK4gB,OACfo2B,WAAch3C,KAAKg3C,WACnBJ,qBAAwB52C,KAAK42C,qBAC7BC,eAAkB72C,KAAK62C,eACvBH,WAAc12C,KAAK02C,WACnBC,UAAa32C,KAAK22C,UAClBI,WAAc/2C,KAAK+2C,WACnBD,iBAAoB92C,KAAK82C,iBAGzBqB,mBAAsBn4C,KAAKm4C,mBAC3B9T,mBAAsBrkC,KAAKqkC,mBAC3BoS,SAAYsO,GAOhB,OAJkC,MAA9BpnC,EAAam+B,eAAyBn+B,EAAam+B,cAAcp3C,OAAS,IAC1EmK,EAAsB,cAAI8O,EAAam+B,eAGpCjtC,C,CAGJ,cAAAy1B,CAAewhB,GAElB,GADA9lD,KAAKg4C,eAAc,IACd8N,EAAY,OAiBjB,GAZ0B5oC,MAAtB4oC,EAAiB,OACjB9lD,KAAK64C,MAAQiN,EAAiB,MAWC5oC,MAA/B4oC,EAA0B,cAAgB,CAC1C,MAAMhK,EAA0BgK,EAA0B,cAC1D,GAAkC,MAA9BnoC,EAAam+B,eAAyBn+B,EAAam+B,cAAcv3B,KAAK,OAASu3B,EAAcv3B,KAAK,MAAO,CAKzGnjB,EAAOoC,4BAA6B,EAEpC8yC,GAAKuH,KAEL,IAAIC,GAAiC,EACjCC,GAAqC,EACrCC,GAAwC,EAC5C,MAAMC,EAA6B,GAC7BC,EAAgC,GACtC,IAAK,MAAMt9C,KAAOk7C,EACY,kBAAtBl7C,EAAIu9C,cACCL,IACDA,GAAwB,EACxBG,EAAiBpzC,KAAKjK,GACtBqD,EAAmB,IAGI,sBAAtBrD,EAAIu9C,cACJJ,IACDA,GAA4B,EAC5BE,EAAiBpzC,KAAKjK,GACtBqD,EAAmB,IAGI,yBAAtBrD,EAAIu9C,cACJH,IACDA,GAA+B,EAC/BC,EAAiBpzC,KAAKjK,GACtBqD,EAAmB,IAKvBqyC,GAAK8H,GAA+Bx9C,EAAKq9C,EAAkBC,EAAqBp+C,GAMxF,GAHIm+C,EAAiBv5C,OAAS,IAC1BiZ,EAAam+B,cAAgBmC,GAE7BC,EAAoBx5C,OAAS,EAAG,CAChC,MAAM25C,EAAkD1vC,EAAUuvC,GAClEvgC,EAAaK,iBAAiBL,EAAaK,iBAAiBtZ,QAAU,CAClEL,KAAM,wBACN4Z,QAASogC,EACTz5C,MAAO+Y,EAAaK,iBAAiBtZ,OAE5C,CACJ,CACJ,KAAM,CAIH,IAAIqhD,GAAmC,EACvC,GAA8B7oC,MAA1B4oC,EAAqB,SACrB,IAAK,IAAIzN,EAAuB,EAAGA,EAAeyN,EAAqB,SAAEphD,OAAQ2zC,IAAgB,CAC7F,MAAM+M,EAAqBU,EAAqB,SAAEzN,GAClD,GAA8B,UAA1B+M,EAAoB,MAIpB9iD,MAAMwhB,QAAQshC,EAA2B,aAAI,CAC7C,MAAMY,EAA2BZ,EAA2B,YAC5D,IAAK,IAAIz6C,EAAY,EAAGA,EAAIq7C,EAAkBthD,OAAQiG,IAAK,CACvD,MAAMkkC,EAAwBmX,EAAkBr7C,GAChD,GAAiC,SAA7BkkC,EAAuB,KAGvB,SAEJ,GAAgC,MAA5BA,EAAuB,KAGvB,SAEJ,MAAMoX,EAAmBpX,EAAuB,KAE1CqX,EAAkB,CACpB,oBACA,qBACA,sBACA,mBACA,yBACA,uBACA,yBACA,4BACA,gCACA,qBACA,2BACA,uBACA,qBACA,+BACA,qBACA,6BACA,8BACA,0BACA,gCACA,+BACA,oBACA,6BACA,4BACA,6BACA,2BACA,yBACA,yBACA,2BACA,uBACA,yBACA,uBACA,yBACA,2BACA,6BACA,6BACA,2BACA,0BACA,uCACA,6BACA,gCACA,+BACA,0BACA,qBACA,0BACA,yBACA,wBACA,0BACA,mCACA,wCACA,kCACA,wCACA,kCACA,2BACA,4BACA,4BACA,4BACA,2BACA,4BACA,wCACA,yCACA,+BACA,8BACA,qCACA,0CACA,mCACA,uCACA,oCACA,4BACA,kCACA,4BAGEC,EAAqB,CACvB,oBACA,qBACA,sBACA,mBACA,yBACA,uBACA,yBACA,4BACA,gCACA,qBACA,2BACA,uBACA,qBACA,+BACA,qBACA,6BACA,8BACA,0BACA,gCACA,+BACA,oBACA,6BACA,4BACA,6BACA,2BACA,yBACA,yBACA,2BACA,uBACA,yBACA,uBACA,yBACA,2BACA,6BACA,6BACA,2BACA,0BACA,uCACA,6BACA,gCACA,+BACA,0BACA,qBACA,0BACA,yBACA,wBACA,0BACA,mCACA,wCACA,kCACA,wCACA,kCACA,2BACA,4BACA,4BACA,4BACA,2BACA,4BACA,wCACA,yCACA,+BACA,8BACA,qCACA,0CACA,mCACA,uCACA,oCACA,4BACA,kCACA,4BAGEC,EAAyB,CAC3B,OACA,QACA,SACA,MACA,YACA,UACA,YACA,eACA,mBACA,QACA,cACA,UACA,QACA,kBACA,QACA,gBACA,iBACA,aACA,mBACA,kBACA,OACA,gBACA,eACA,gBACA,cACA,YACA,YACA,cACA,UACA,YACA,UACA,YACA,eAEAF,EAAMG,SAASJ,GACfF,GAA0B,EACnBI,EAASE,SAASJ,IACzBF,GAA0B,EAG1BlX,EAAuB,KAAIqX,EAAMC,EAASnV,WAAUt6B,GAAKA,IAAMuvC,MACxDG,EAAaC,SAASJ,KACZ,YAAbA,GAAuC,UAAbA,IAO1BF,GAA0B,EAG1BlX,EAAuB,KAAIqX,EAAME,EAAapV,WAAUt6B,GAAKA,IAAMuvC,MAG9E,CACJ,CACJ,CAEDF,GACA3kD,EAAOoC,4BAA6B,EAEpC8yC,GAAKuH,KAEL55C,EAAmB,GACnB0Z,EAAam+B,cAAgB,CAAC,kBAII,MAA9Bn+B,EAAam+B,eAAyBn+B,EAAam+B,cAAcp3C,OAAS,IAG1EtD,EAAOoC,4BAA6B,EACpC8yC,GAAK4F,KAGhB,CAGD,GADAl8C,KAAKy4C,MAAQ,EACcv7B,MAAvB4oC,EAAkB,MAAgB,CAClC,MAAMQ,EAAoC,CACtC,YAAa,kBACb,YAAa,kBACbC,OAAU,WAERC,EAA2DtpC,MAAtCopC,EAAcR,EAAkB,OAAmBQ,EAAcR,EAAkB,OAAKA,EAAkB,MAC/HrN,EAAgBr3C,EAAO4O,OAAOghC,WAAUyH,GAA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"}